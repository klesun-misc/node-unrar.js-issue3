var Module = function(Module) {
  Module = Module || {};

// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module = typeof Module !== 'undefined' ? Module : {};

// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
var Ext = require("./extractorCurrent.js").Ext;

var jsAPI = {
  open:function(){
    return Ext.current.open.apply(Ext.current, arguments);
  },
  close:function(){
    return Ext.current.close.apply(Ext.current, arguments);
  },
  read:function(){
    return Ext.current.read.apply(Ext.current, arguments);
  },
  write:function(){
    return Ext.current.write.apply(Ext.current, arguments);
  },
  tell:function(){
    return Ext.current.tell.apply(Ext.current, arguments);
  },
  seek:function(){
    return Ext.current.seek.apply(Ext.current, arguments);
  },
  create:function(){
    return Ext.current.create.apply(Ext.current, arguments);
  },
};


// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
var key;
for (key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

Module['arguments'] = [];
Module['thisProgram'] = './this.program';
Module['quit'] = function(status, toThrow) {
  throw toThrow;
};
Module['preRun'] = [];
Module['postRun'] = [];

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('Module[\'ENVIRONMENT\'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  var nodeFS;
  var nodePath;

  Module['read'] = function shell_read(filename, binary) {
    var ret;
      if (!nodeFS) nodeFS = require('fs');
      if (!nodePath) nodePath = require('path');
      filename = nodePath['normalize'](filename);
      ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  if (process['argv'].length > 1) {
    Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
  }

  Module['arguments'] = process['argv'].slice(2);

  // MODULARIZE will export the module in the proper place outside, we don't need to export here

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
  // Currently node will swallow unhandled rejections, but this behavior is
  // deprecated, and in the future it will exit with error status.
  process['on']('unhandledRejection', function(reason, p) {
    Module['printErr']('node.js exiting due to unhandled promise rejection');
    process['exit'](1);
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (typeof read != 'undefined') {
    Module['read'] = function shell_read(f) {
      return read(f);
    };
  }

  Module['readBinary'] = function readBinary(f) {
    var data;
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status, toThrow) {
      quit(status);
    }
  }
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function shell_read(url) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.send(null);
      return xhr.responseText;
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.responseType = 'arraybuffer';
        xhr.send(null);
        return new Uint8Array(xhr.response);
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
        return;
      }
      onerror();
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  Module['setWindowTitle'] = function(title) { document.title = title };
}
else {
  // Unreachable because SHELL is dependent on the others
  throw new Error('unknown runtime environment');
}

// console.log is checked first, as 'print' on the web will open a print dialogue
// printErr is preferable to console.warn (works better in shells)
// bind(console) is necessary to fix IE/Edge closed dev tools panel behavior.
Module['print'] = typeof console !== 'undefined' ? console.log.bind(console) : (typeof print !== 'undefined' ? print : null);
Module['printErr'] = typeof printErr !== 'undefined' ? printErr : ((typeof console !== 'undefined' && console.warn.bind(console)) || Module['print']);

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Merge back in the overrides
for (key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

var STACK_ALIGN = 16;

// stack management, and other functionality that is provided by the compiled code,
// should not be used before it is ready
stackSave = stackRestore = stackAlloc = setTempRet0 = getTempRet0 = function() {
  abort('cannot use the stack before compiled code is ready to run, and has provided stack access');
};

function staticAlloc(size) {
  assert(!staticSealed);
  var ret = STATICTOP;
  STATICTOP = (STATICTOP + size + 15) & -16;
  return ret;
}

function dynamicAlloc(size) {
  assert(DYNAMICTOP_PTR);
  var ret = HEAP32[DYNAMICTOP_PTR>>2];
  var end = (ret + size + 15) & -16;
  HEAP32[DYNAMICTOP_PTR>>2] = end;
  if (end >= TOTAL_MEMORY) {
    var success = enlargeMemory();
    if (!success) {
      HEAP32[DYNAMICTOP_PTR>>2] = ret;
      return 0;
    }
  }
  return ret;
}

function alignMemory(size, factor) {
  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default
  var ret = size = Math.ceil(size / factor) * factor;
  return ret;
}

function getNativeTypeSize(type) {
  switch (type) {
    case 'i1': case 'i8': return 1;
    case 'i16': return 2;
    case 'i32': return 4;
    case 'i64': return 8;
    case 'float': return 4;
    case 'double': return 8;
    default: {
      if (type[type.length-1] === '*') {
        return 4; // A pointer
      } else if (type[0] === 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 === 0);
        return bits / 8;
      } else {
        return 0;
      }
    }
  }
}

function warnOnce(text) {
  if (!warnOnce.shown) warnOnce.shown = {};
  if (!warnOnce.shown[text]) {
    warnOnce.shown[text] = 1;
    Module.printErr(text);
  }
}



var jsCallStartIndex = 1;
var functionPointers = new Array(0);

// 'sig' parameter is only used on LLVM wasm backend
function addFunction(func, sig) {
  if (typeof sig === 'undefined') {
    Module.printErr('Warning: addFunction: Provide a wasm function signature ' +
                    'string as a second argument');
  }
  var base = 0;
  for (var i = base; i < base + 0; i++) {
    if (!functionPointers[i]) {
      functionPointers[i] = func;
      return jsCallStartIndex + i;
    }
  }
  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
}

function removeFunction(index) {
  functionPointers[index-jsCallStartIndex] = null;
}

var funcWrappers = {};

function getFuncWrapper(func, sig) {
  if (!func) return; // on null pointer, return undefined
  assert(sig);
  if (!funcWrappers[sig]) {
    funcWrappers[sig] = {};
  }
  var sigCache = funcWrappers[sig];
  if (!sigCache[func]) {
    // optimize away arguments usage in common cases
    if (sig.length === 1) {
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func);
      };
    } else if (sig.length === 2) {
      sigCache[func] = function dynCall_wrapper(arg) {
        return dynCall(sig, func, [arg]);
      };
    } else {
      // general case
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func, Array.prototype.slice.call(arguments));
      };
    }
  }
  return sigCache[func];
}


function makeBigInt(low, high, unsigned) {
  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));
}

function dynCall(sig, ptr, args) {
  if (args && args.length) {
    assert(args.length == sig.length-1);
    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
  } else {
    assert(sig.length == 1);
    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
    return Module['dynCall_' + sig].call(null, ptr);
  }
}


function getCompilerSetting(name) {
  throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work';
}

var Runtime = {
  // FIXME backwards compatibility layer for ports. Support some Runtime.*
  //       for now, fix it there, then remove it from here. That way we
  //       can minimize any period of breakage.
  dynCall: dynCall, // for SDL2 port
  // helpful errors
  getTempRet0: function() { abort('getTempRet0() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
  staticAlloc: function() { abort('staticAlloc() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
  stackAlloc: function() { abort('stackAlloc() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
};

// The address globals begin at. Very low in memory, for code size and optimization opportunities.
// Above 0 is static memory, starting with globals.
// Then the stack.
// Then 'dynamic' memory for sbrk.
var GLOBAL_BASE = 8;



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
  return func;
}

var JSfuncs = {
  // Helpers for cwrap -- it can't refer to Runtime directly because it might
  // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
  // out what the minified function name is.
  'stackSave': function() {
    stackSave()
  },
  'stackRestore': function() {
    stackRestore()
  },
  // type conversion from js to c
  'arrayToC' : function(arr) {
    var ret = stackAlloc(arr.length);
    writeArrayToMemory(arr, ret);
    return ret;
  },
  'stringToC' : function(str) {
    var ret = 0;
    if (str !== null && str !== undefined && str !== 0) { // null string
      // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
      var len = (str.length << 2) + 1;
      ret = stackAlloc(len);
      stringToUTF8(str, ret, len);
    }
    return ret;
  }
};

// For fast lookup of conversion functions
var toC = {
  'string': JSfuncs['stringToC'], 'array': JSfuncs['arrayToC']
};

// C calling interface.
function ccall (ident, returnType, argTypes, args, opts) {
  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  assert(returnType !== 'array', 'Return type should not be "array".');
  if (args) {
    for (var i = 0; i < args.length; i++) {
      var converter = toC[argTypes[i]];
      if (converter) {
        if (stack === 0) stack = stackSave();
        cArgs[i] = converter(args[i]);
      } else {
        cArgs[i] = args[i];
      }
    }
  }
  var ret = func.apply(null, cArgs);
  if (returnType === 'string') ret = Pointer_stringify(ret);
  else if (returnType === 'boolean') ret = Boolean(ret);
  if (stack !== 0) {
    stackRestore(stack);
  }
  return ret;
}

function cwrap (ident, returnType, argTypes) {
  argTypes = argTypes || [];
  var cfunc = getCFunc(ident);
  // When the function takes numbers and returns a number, we can just return
  // the original function
  var numericArgs = argTypes.every(function(type){ return type === 'number'});
  var numericRet = returnType !== 'string';
  if (numericRet && numericArgs) {
    return cfunc;
  }
  return function() {
    return ccall(ident, returnType, argTypes, arguments);
  }
}

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for getValue: ' + type);
    }
  return null;
}

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : staticAlloc, stackAlloc, staticAlloc, dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var stop;
    ptr = ret;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return staticAlloc(size);
  if (!runtimeInitialized) return dynamicAlloc(size);
  return _malloc(size);
}

/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return UTF8ToString(ptr);
}

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}

function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}

// Allocate heap space for a JS string, and write it there.
// It is the responsibility of the caller to free() that memory.
function allocateUTF8(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = _malloc(size);
  if (ret) stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Allocate stack space for a JS string, and write it there.
function allocateUTF8OnStack(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = stackAlloc(size);
  stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

function demangle(func) {
  warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
  }
  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - stackSave() + allocSize) + ' bytes available!');
}

function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}

if (!Module['reallocBuffer']) Module['reallocBuffer'] = function(size) {
  var ret;
  try {
    if (ArrayBuffer.transfer) {
      ret = ArrayBuffer.transfer(buffer, size);
    } else {
      var oldHEAP8 = HEAP8;
      ret = new ArrayBuffer(size);
      var temp = new Int8Array(ret);
      temp.set(oldHEAP8);
    }
  } catch(e) {
    return false;
  }
  var success = _emscripten_replace_memory(ret);
  if (!success) return false;
  return ret;
};

function enlargeMemory() {
  // TOTAL_MEMORY is the current size of the actual array, and DYNAMICTOP is the new top.
  assert(HEAP32[DYNAMICTOP_PTR>>2] > TOTAL_MEMORY); // This function should only ever be called after the ceiling of the dynamic heap has already been bumped to exceed the current total size of the asm.js heap.


  var PAGE_MULTIPLE = Module["usingWasm"] ? WASM_PAGE_SIZE : ASMJS_PAGE_SIZE; // In wasm, heap size must be a multiple of 64KB. In asm.js, they need to be multiples of 16MB.
  var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.

  if (HEAP32[DYNAMICTOP_PTR>>2] > LIMIT) {
    Module.printErr('Cannot enlarge memory, asked to go up to ' + HEAP32[DYNAMICTOP_PTR>>2] + ' bytes, but the limit is ' + LIMIT + ' bytes!');
    return false;
  }

  var OLD_TOTAL_MEMORY = TOTAL_MEMORY;
  TOTAL_MEMORY = Math.max(TOTAL_MEMORY, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.

  while (TOTAL_MEMORY < HEAP32[DYNAMICTOP_PTR>>2]) { // Keep incrementing the heap size as long as it's less than what is requested.
    if (TOTAL_MEMORY <= 536870912) {
      TOTAL_MEMORY = alignUp(2 * TOTAL_MEMORY, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...
    } else {
      TOTAL_MEMORY = Math.min(alignUp((3 * TOTAL_MEMORY + 2147483648) / 4, PAGE_MULTIPLE), LIMIT); // ..., but after that, add smaller increments towards 2GB, which we cannot reach
    }
  }

  var start = Date.now();

  var replacement = Module['reallocBuffer'](TOTAL_MEMORY);
  if (!replacement || replacement.byteLength != TOTAL_MEMORY) {
    Module.printErr('Failed to grow the heap from ' + OLD_TOTAL_MEMORY + ' bytes to ' + TOTAL_MEMORY + ' bytes, not enough memory!');
    if (replacement) {
      Module.printErr('Expected to get back a buffer of size ' + TOTAL_MEMORY + ' bytes, but instead got back a buffer of size ' + replacement.byteLength);
    }
    // restore the state to before this call, we failed
    TOTAL_MEMORY = OLD_TOTAL_MEMORY;
    return false;
  }

  // everything worked

  updateGlobalBuffer(replacement);
  updateGlobalBufferViews();

  if (!Module["usingWasm"]) {
    Module.printErr('Warning: Enlarging memory arrays, this is not fast! ' + [OLD_TOTAL_MEMORY, TOTAL_MEMORY]);
  }


  return true;
}

var byteLength;
try {
  byteLength = Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, 'byteLength').get);
  byteLength(new ArrayBuffer(4)); // can fail on older ie
} catch(e) { // can fail on older node/v8
  byteLength = function(buffer) { return buffer.byteLength; };
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
       'JS engine does not provide full typed array support');



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
  assert(buffer.byteLength === TOTAL_MEMORY);
  Module['buffer'] = buffer;
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  checkStackCookie();
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

assert(Math['imul'] && Math['fround'] && Math['clz32'] && Math['trunc'], 'this is a legacy browser, build with LEGACY_VM_SUPPORT');

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_max = Math.max;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;






// Prefix of data URIs emitted by SINGLE_FILE and related options.
var dataURIPrefix = 'data:application/octet-stream;base64,';

// Indicates whether filename is a base64 data URI.
function isDataURI(filename) {
  return String.prototype.startsWith ?
      filename.startsWith(dataURIPrefix) :
      filename.indexOf(dataURIPrefix) === 0;
}





// === Body ===

var ASM_CONSTS = [];





STATIC_BASE = GLOBAL_BASE;

STATICTOP = STATIC_BASE + 67136;
/* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__sub_I_crc_cpp() } }, { func: function() { __GLOBAL__sub_I_bridge_cpp() } }, { func: function() { __GLOBAL__sub_I_bind_cpp() } });


/* memory initializer */ allocatei8", ALLOC_NONE, GLOBAL_BASE);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var key in EXCEPTIONS.infos) {
          var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        // A rethrown exception can reach refcount 0; it must not be discarded
        // Its next handler will clear the rethrown flag and addRef it, prior to
        // final decRef and destruction here
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Module['dynCall_vi'](info.destructor, ptr);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};function ___cxa_begin_catch(ptr) {
      var info = EXCEPTIONS.infos[ptr];
      if (info && !info.caught) {
        info.caught = true;
        __ZSt18uncaught_exceptionv.uncaught_exception--;
      }
      if (info) info.rethrown = false;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }function ___cxa_end_catch() {
      // Clear state flag.
      Module['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }

  function ___cxa_find_matching_catch_2() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_find_matching_catch_3() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_find_matching_catch_4() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }


  
  
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((setTempRet0(0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((setTempRet0(0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((setTempRet0(typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((setTempRet0(throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  
  
   
  
   
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC);   

  function ___gxx_personality_v0() {
    }

  function ___lock() {}

  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    }function ___map_file(pathname, size) {
      ___setErrNo(ERRNO_CODES.EPERM);
      return -1;
    }

  
    


  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up; up--) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion
  
              var fd = process.stdin.fd;
              if (isPosixPlatform) {
                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
                var usingDevice = false;
                try {
                  fd = fs.openSync('/dev/stdin', 'r');
                  usingDevice = true;
                } catch (e) {}
              }
  
              try {
                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
              } catch(e) {
                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;
                else throw e;
              }
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.length : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) {
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        if (!req) {
          return callback("Unable to connect to IndexedDB");
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          try {
            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
            transaction.onerror = function(e) {
              callback(this.error);
              e.preventDefault();
            };
  
            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
            var index = store.index('timestamp');
  
            index.openKeyCursor().onsuccess = function(event) {
              var cursor = event.target.result;
  
              if (!cursor) {
                return callback(null, { type: 'remote', db: db, entries: entries });
              }
  
              entries[cursor.primaryKey] = { timestamp: cursor.key };
  
              cursor.continue();
            };
          } catch (e) {
            return callback(e);
          }
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
        var flags = process["binding"]("constants");
        // Node.js 4 compatibility: it has no namespaces for constants
        if (flags["fs"]) {
          flags = flags["fs"];
        }
        NODEFS.flagsForNodeMap = {
          "1024": flags["O_APPEND"],
          "64": flags["O_CREAT"],
          "128": flags["O_EXCL"],
          "0": flags["O_RDONLY"],
          "2": flags["O_RDWR"],
          "4096": flags["O_SYNC"],
          "512": flags["O_TRUNC"],
          "1": flags["O_WRONLY"]
        };
      },bufferFrom:function (arrayBuffer) {
        // Node.js < 4.5 compatibility: Buffer.from does not support ArrayBuffer
        // Buffer.from before 4.5 was just a method inherited from Uint8Array
        // Buffer.alloc has been added with Buffer.from together, so check it instead
        return Buffer.alloc ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // Node.js on Windows never represents permission bit 'x', so
            // propagate read bits to execute bits
            stat.mode = stat.mode | ((stat.mode & 292) >> 2);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsForNode:function (flags) {
        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.
        var newFlags = 0;
        for (var k in NODEFS.flagsForNodeMap) {
          if (flags & k) {
            newFlags |= NODEFS.flagsForNodeMap[k];
            flags ^= k;
          }
        }
  
        if (!flags) {
          return newFlags;
        } else {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // Node.js < 6 compatibility: node errors on 0 length reads
          if (length === 0) return 0;
          try {
            return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },write:function (stream, buffer, offset, length, position) {
          try {
            return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            // Issue 4254: Using curr as a node name will prevent the node
            // from being found in FS.nameTable when FS.open is called on
            // a path which holds a child of this node,
            // given that all FS functions assume node names
            // are just their corresponding parts within their given path,
            // rather than incremental aggregates which include their parent's
            // directories.
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readdir:function (node) {
          var entries = ['.', '..'];
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readlink:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        }}};
  
  var _stdin=STATICTOP; STATICTOP += 16;;
  
  var _stdout=STATICTOP; STATICTOP += 16;;
  
  var _stderr=STATICTOP; STATICTOP += 16;;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        FS.syncFSRequests++;
  
        if (FS.syncFSRequests > 1) {
          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function doCallback(err) {
          assert(FS.syncFSRequests > 0);
          FS.syncFSRequests--;
          return callback(err);
        }
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdirTree:function (path, mode) {
        var dirs = path.split('/');
        var d = '';
        for (var i = 0; i < dirs.length; ++i) {
          if (!dirs[i]) continue;
          d += '/' + dirs[i];
          try {
            FS.mkdir(d, mode);
          } catch(e) {
            if (e.errno != ERRNO_CODES.EEXIST) throw e;
          }
        }
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // According to POSIX, we should map EISDIR to EPERM, but
          // we instead do what Linux does (and we must, as we use
          // the musl linux libc).
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
        stream.fd = null;
      },isClosed:function (stream) {
        return stream.fd === null;
      },llseek:function (stream, offset, whence) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (typeof data === 'string') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
        } else if (ArrayBuffer.isView(data)) {
          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
        } else {
          throw new Error('Unsupported data type');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (lookup.node === null) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto')['randomBytes'](1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
          // Node.js compatibility: assigning on this.stack fails on Node 4 (but fixed on Node 8)
          if (this.stack) Object.defineProperty(this, "stack", { value: (new Error).stack, writable: true });
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
  
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          if (usesGzip || !datalength) {
            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
            datalength = this.getter(0).length;
            chunkSize = datalength;
            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
          }
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperties(lazyArray, {
            length: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._length;
              }
            },
            chunkSize: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._chunkSize;
              }
            }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init(); // XXX perhaps this method should move onto Browser?
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
  
        var len = Math.min(bufsize, lengthBytesUTF8(ret));
        var endChar = HEAP8[buf+len];
        stringToUTF8(ret, buf, bufsize+1);
        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.
        HEAP8[buf+len] = endChar;
  
        return len;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit
      var offset = offset_low;
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall183(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // getcwd
      var buf = SYSCALLS.get(), size = SYSCALLS.get();
      if (size === 0) return -ERRNO_CODES.EINVAL;
      var cwd = FS.cwd();
      var cwdLengthInBytes = lengthBytesUTF8(cwd);
      if (size < cwdLengthInBytes + 1) return -ERRNO_CODES.ERANGE;
      stringToUTF8(cwd, buf, size);
      return buf;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall198(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // lchown32
      var path = SYSCALLS.getStr(), owner = SYSCALLS.get(), group = SYSCALLS.get();
      FS.chown(path, owner, group); // XXX we ignore the 'l' aspect, and do the same as chown
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  var PROCINFO={ppid:1,pid:42,sid:42,pgid:42};function ___syscall20(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // getpid
      return PROCINFO.pid;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21509:
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21510:
        case 21511:
        case 21512:
        case 21506:
        case 21507:
        case 21508: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        case 21523: {
          // TODO: in theory we should write to the winsize struct that gets
          // passed in, but for now musl doesn't read anything on it
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21524: {
          // TODO: technically, this ioctl call should change the window size.
          // but, since emscripten doesn't have any concept of a terminal window
          // yet, we'll just silently throw it away as we do TIOCGWINSZ
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall60(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // umask
      var mask = SYSCALLS.get();
      var old = SYSCALLS.umask;
      SYSCALLS.umask = mask;
      return old;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall83(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // symlink
      var target = SYSCALLS.getStr(), linkpath = SYSCALLS.getStr();
      FS.symlink(target, linkpath);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall9(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // link
      var oldpath = SYSCALLS.get(), newpath = SYSCALLS.get();
      return -ERRNO_CODES.EMLINK; // no hardlinks for us
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall91(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // munmap
      var addr = SYSCALLS.get(), len = SYSCALLS.get();
      // TODO: support unmmap'ing parts of allocations
      var info = SYSCALLS.mappings[addr];
      if (!info) return 0;
      if (len === info.len) {
        var stream = FS.getStream(info.fd);
        SYSCALLS.doMsync(addr, stream, len, info.flags)
        FS.munmap(stream);
        SYSCALLS.mappings[addr] = null;
        if (info.allocated) {
          _free(info.malloc);
        }
      }
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

   

  function ___unlock() {}

   

  
  var structRegistrations={};
  
  function runDestructors(destructors) {
      while (destructors.length) {
          var ptr = destructors.pop();
          var del = destructors.pop();
          del(ptr);
      }
    }
  
  function simpleReadValueFromPointer(pointer) {
      return this['fromWireType'](HEAPU32[pointer >> 2]);
    }
  
  
  var awaitingDependencies={};
  
  var registeredTypes={};
  
  var typeDependencies={};
  
  
  
  
  
  
  var char_0=48;
  
  var char_9=57;function makeLegalFunctionName(name) {
      if (undefined === name) {
          return '_unknown';
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, '$');
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
          return '_' + name;
      } else {
          return name;
      }
    }function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      /*jshint evil:true*/
      return new Function(
          "body",
          "return function " + name + "() {\n" +
          "    \"use strict\";" +
          "    return body.apply(this, arguments);\n" +
          "};\n"
      )(body);
    }function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
          this.name = errorName;
          this.message = message;
  
          var stack = (new Error(message)).stack;
          if (stack !== undefined) {
              this.stack = this.toString() + '\n' +
                  stack.replace(/^Error(:[^\n]*)?\n/, '');
          }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
          if (this.message === undefined) {
              return this.name;
          } else {
              return this.name + ': ' + this.message;
          }
      };
  
      return errorClass;
    }var InternalError=undefined;function throwInternalError(message) {
      throw new InternalError(message);
    }function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type) {
          typeDependencies[type] = dependentTypes;
      });
  
      function onComplete(typeConverters) {
          var myTypeConverters = getTypeConverters(typeConverters);
          if (myTypeConverters.length !== myTypes.length) {
              throwInternalError('Mismatched type converter count');
          }
          for (var i = 0; i < myTypes.length; ++i) {
              registerType(myTypes[i], myTypeConverters[i]);
          }
      }
  
      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i) {
          if (registeredTypes.hasOwnProperty(dt)) {
              typeConverters[i] = registeredTypes[dt];
          } else {
              unregisteredTypes.push(dt);
              if (!awaitingDependencies.hasOwnProperty(dt)) {
                  awaitingDependencies[dt] = [];
              }
              awaitingDependencies[dt].push(function() {
                  typeConverters[i] = registeredTypes[dt];
                  ++registered;
                  if (registered === unregisteredTypes.length) {
                      onComplete(typeConverters);
                  }
              });
          }
      });
      if (0 === unregisteredTypes.length) {
          onComplete(typeConverters);
      }
    }function __embind_finalize_value_object(structType) {
      var reg = structRegistrations[structType];
      delete structRegistrations[structType];
  
      var rawConstructor = reg.rawConstructor;
      var rawDestructor = reg.rawDestructor;
      var fieldRecords = reg.fields;
      var fieldTypes = fieldRecords.map(function(field) { return field.getterReturnType; }).
                concat(fieldRecords.map(function(field) { return field.setterArgumentType; }));
      whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes) {
          var fields = {};
          fieldRecords.forEach(function(field, i) {
              var fieldName = field.fieldName;
              var getterReturnType = fieldTypes[i];
              var getter = field.getter;
              var getterContext = field.getterContext;
              var setterArgumentType = fieldTypes[i + fieldRecords.length];
              var setter = field.setter;
              var setterContext = field.setterContext;
              fields[fieldName] = {
                  read: function(ptr) {
                      return getterReturnType['fromWireType'](
                          getter(getterContext, ptr));
                  },
                  write: function(ptr, o) {
                      var destructors = [];
                      setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, o));
                      runDestructors(destructors);
                  }
              };
          });
  
          return [{
              name: reg.name,
              'fromWireType': function(ptr) {
                  var rv = {};
                  for (var i in fields) {
                      rv[i] = fields[i].read(ptr);
                  }
                  rawDestructor(ptr);
                  return rv;
              },
              'toWireType': function(destructors, o) {
                  // todo: Here we have an opportunity for -O3 level "unsafe" optimizations:
                  // assume all fields are present without checking.
                  for (var fieldName in fields) {
                      if (!(fieldName in o)) {
                          throw new TypeError('Missing field');
                      }
                  }
                  var ptr = rawConstructor();
                  for (fieldName in fields) {
                      fields[fieldName].write(ptr, o[fieldName]);
                  }
                  if (destructors !== null) {
                      destructors.push(rawDestructor, ptr);
                  }
                  return ptr;
              },
              'argPackAdvance': 8,
              'readValueFromPointer': simpleReadValueFromPointer,
              destructorFunction: rawDestructor,
          }];
      });
    }

  
  function getShiftFromSize(size) {
      switch (size) {
          case 1: return 0;
          case 2: return 1;
          case 4: return 2;
          case 8: return 3;
          default:
              throw new TypeError('Unknown type size: ' + size);
      }
    }
  
  
  
  function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i = 0; i < 256; ++i) {
          codes[i] = String.fromCharCode(i);
      }
      embind_charCodes = codes;
    }var embind_charCodes=undefined;function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
          ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }
  
  
  
  var BindingError=undefined;function throwBindingError(message) {
      throw new BindingError(message);
    }function registerType(rawType, registeredInstance, options) {
      options = options || {};
  
      if (!('argPackAdvance' in registeredInstance)) {
          throw new TypeError('registerType registeredInstance requires argPackAdvance');
      }
  
      var name = registeredInstance.name;
      if (!rawType) {
          throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
          if (options.ignoreDuplicateRegistrations) {
              return;
          } else {
              throwBindingError("Cannot register type '" + name + "' twice");
          }
      }
  
      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];
  
      if (awaitingDependencies.hasOwnProperty(rawType)) {
          var callbacks = awaitingDependencies[rawType];
          delete awaitingDependencies[rawType];
          callbacks.forEach(function(cb) {
              cb();
          });
      }
    }function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(wt) {
              // ambiguous emscripten ABI: sometimes return values are
              // true or false, and sometimes integers (0 or 1)
              return !!wt;
          },
          'toWireType': function(destructors, o) {
              return o ? trueValue : falseValue;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': function(pointer) {
              // TODO: if heap is fixed (like in asm.js) this could be executed outside
              var heap;
              if (size === 1) {
                  heap = HEAP8;
              } else if (size === 2) {
                  heap = HEAP16;
              } else if (size === 4) {
                  heap = HEAP32;
              } else {
                  throw new TypeError("Unknown boolean type size: " + name);
              }
              return this['fromWireType'](heap[pointer >> shift]);
          },
          destructorFunction: null, // This type does not need a destructor
      });
    }

  
  
  
  function ClassHandle_isAliasOf(other) {
      if (!(this instanceof ClassHandle)) {
          return false;
      }
      if (!(other instanceof ClassHandle)) {
          return false;
      }
  
      var leftClass = this.$$.ptrType.registeredClass;
      var left = this.$$.ptr;
      var rightClass = other.$$.ptrType.registeredClass;
      var right = other.$$.ptr;
  
      while (leftClass.baseClass) {
          left = leftClass.upcast(left);
          leftClass = leftClass.baseClass;
      }
  
      while (rightClass.baseClass) {
          right = rightClass.upcast(right);
          rightClass = rightClass.baseClass;
      }
  
      return leftClass === rightClass && left === right;
    }
  
  
  function shallowCopyInternalPointer(o) {
      return {
          count: o.count,
          deleteScheduled: o.deleteScheduled,
          preservePointerOnDelete: o.preservePointerOnDelete,
          ptr: o.ptr,
          ptrType: o.ptrType,
          smartPtr: o.smartPtr,
          smartPtrType: o.smartPtrType,
      };
    }
  
  function throwInstanceAlreadyDeleted(obj) {
      function getInstanceTypeName(handle) {
        return handle.$$.ptrType.registeredClass.name;
      }
      throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');
    }function ClassHandle_clone() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }
  
      if (this.$$.preservePointerOnDelete) {
          this.$$.count.value += 1;
          return this;
      } else {
          var clone = Object.create(Object.getPrototypeOf(this), {
              $$: {
                  value: shallowCopyInternalPointer(this.$$),
              }
          });
  
          clone.$$.count.value += 1;
          clone.$$.deleteScheduled = false;
          return clone;
      }
    }
  
  
  function runDestructor(handle) {
      var $$ = handle.$$;
      if ($$.smartPtr) {
          $$.smartPtrType.rawDestructor($$.smartPtr);
      } else {
          $$.ptrType.registeredClass.rawDestructor($$.ptr);
      }
    }function ClassHandle_delete() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }
  
      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
          throwBindingError('Object already scheduled for deletion');
      }
  
      this.$$.count.value -= 1;
      var toDelete = 0 === this.$$.count.value;
      if (toDelete) {
          runDestructor(this);
      }
      if (!this.$$.preservePointerOnDelete) {
          this.$$.smartPtr = undefined;
          this.$$.ptr = undefined;
      }
    }
  
  function ClassHandle_isDeleted() {
      return !this.$$.ptr;
    }
  
  
  var delayFunction=undefined;
  
  var deletionQueue=[];
  
  function flushPendingDeletes() {
      while (deletionQueue.length) {
          var obj = deletionQueue.pop();
          obj.$$.deleteScheduled = false;
          obj['delete']();
      }
    }function ClassHandle_deleteLater() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }
      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
          throwBindingError('Object already scheduled for deletion');
      }
      deletionQueue.push(this);
      if (deletionQueue.length === 1 && delayFunction) {
          delayFunction(flushPendingDeletes);
      }
      this.$$.deleteScheduled = true;
      return this;
    }function init_ClassHandle() {
      ClassHandle.prototype['isAliasOf'] = ClassHandle_isAliasOf;
      ClassHandle.prototype['clone'] = ClassHandle_clone;
      ClassHandle.prototype['delete'] = ClassHandle_delete;
      ClassHandle.prototype['isDeleted'] = ClassHandle_isDeleted;
      ClassHandle.prototype['deleteLater'] = ClassHandle_deleteLater;
    }function ClassHandle() {
    }
  
  var registeredPointers={};
  
  
  function ensureOverloadTable(proto, methodName, humanName) {
      if (undefined === proto[methodName].overloadTable) {
          var prevFunc = proto[methodName];
          // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.
          proto[methodName] = function() {
              // TODO This check can be removed in -O3 level "unsafe" optimizations.
              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
                  throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
              }
              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
          };
          // Move the previous function into the overload table.
          proto[methodName].overloadTable = [];
          proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
      }
    }function exposePublicSymbol(name, value, numArguments) {
      if (Module.hasOwnProperty(name)) {
          if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {
              throwBindingError("Cannot register public name '" + name + "' twice");
          }
  
          // We are exposing a function with the same name as an existing function. Create an overload table and a function selector
          // that routes between the two.
          ensureOverloadTable(Module, name, name);
          if (Module.hasOwnProperty(numArguments)) {
              throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
          }
          // Add the new function into the overload table.
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          if (undefined !== numArguments) {
              Module[name].numArguments = numArguments;
          }
      }
    }
  
  function RegisteredClass(
      name,
      constructor,
      instancePrototype,
      rawDestructor,
      baseClass,
      getActualType,
      upcast,
      downcast
    ) {
      this.name = name;
      this.constructor = constructor;
      this.instancePrototype = instancePrototype;
      this.rawDestructor = rawDestructor;
      this.baseClass = baseClass;
      this.getActualType = getActualType;
      this.upcast = upcast;
      this.downcast = downcast;
      this.pureVirtualFunctions = [];
    }
  
  
  
  function upcastPointer(ptr, ptrClass, desiredClass) {
      while (ptrClass !== desiredClass) {
          if (!ptrClass.upcast) {
              throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
          }
          ptr = ptrClass.upcast(ptr);
          ptrClass = ptrClass.baseClass;
      }
      return ptr;
    }function constNoSmartPtrRawPointerToWireType(destructors, handle) {
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
          return 0;
      }
  
      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
      return ptr;
    }
  
  function genericPointerToWireType(destructors, handle) {
      var ptr;
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
  
          if (this.isSmartPointer) {
              ptr = this.rawConstructor();
              if (destructors !== null) {
                  destructors.push(this.rawDestructor, ptr);
              }
              return ptr;
          } else {
              return 0;
          }
      }
  
      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      if (!this.isConst && handle.$$.ptrType.isConst) {
          throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
  
      if (this.isSmartPointer) {
          // TODO: this is not strictly true
          // We could support BY_EMVAL conversions from raw pointers to smart pointers
          // because the smart pointer can hold a reference to the handle
          if (undefined === handle.$$.smartPtr) {
              throwBindingError('Passing raw pointer to smart pointer is illegal');
          }
  
          switch (this.sharingPolicy) {
              case 0: // NONE
                  // no upcasting
                  if (handle.$$.smartPtrType === this) {
                      ptr = handle.$$.smartPtr;
                  } else {
                      throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
                  }
                  break;
  
              case 1: // INTRUSIVE
                  ptr = handle.$$.smartPtr;
                  break;
  
              case 2: // BY_EMVAL
                  if (handle.$$.smartPtrType === this) {
                      ptr = handle.$$.smartPtr;
                  } else {
                      var clonedHandle = handle['clone']();
                      ptr = this.rawShare(
                          ptr,
                          __emval_register(function() {
                              clonedHandle['delete']();
                          })
                      );
                      if (destructors !== null) {
                          destructors.push(this.rawDestructor, ptr);
                      }
                  }
                  break;
  
              default:
                  throwBindingError('Unsupporting sharing policy');
          }
      }
      return ptr;
    }
  
  function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
          return 0;
      }
  
      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      if (handle.$$.ptrType.isConst) {
          throwBindingError('Cannot convert argument of type ' + handle.$$.ptrType.name + ' to parameter type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
      return ptr;
    }
  
  
  function RegisteredPointer_getPointee(ptr) {
      if (this.rawGetPointee) {
          ptr = this.rawGetPointee(ptr);
      }
      return ptr;
    }
  
  function RegisteredPointer_destructor(ptr) {
      if (this.rawDestructor) {
          this.rawDestructor(ptr);
      }
    }
  
  function RegisteredPointer_deleteObject(handle) {
      if (handle !== null) {
          handle['delete']();
      }
    }
  
  
  function downcastPointer(ptr, ptrClass, desiredClass) {
      if (ptrClass === desiredClass) {
          return ptr;
      }
      if (undefined === desiredClass.baseClass) {
          return null; // no conversion
      }
  
      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);
      if (rv === null) {
          return null;
      }
      return desiredClass.downcast(rv);
    }
  
  
  
  
  function getInheritedInstanceCount() {
      return Object.keys(registeredInstances).length;
    }
  
  function getLiveInheritedInstances() {
      var rv = [];
      for (var k in registeredInstances) {
          if (registeredInstances.hasOwnProperty(k)) {
              rv.push(registeredInstances[k]);
          }
      }
      return rv;
    }
  
  function setDelayFunction(fn) {
      delayFunction = fn;
      if (deletionQueue.length && delayFunction) {
          delayFunction(flushPendingDeletes);
      }
    }function init_embind() {
      Module['getInheritedInstanceCount'] = getInheritedInstanceCount;
      Module['getLiveInheritedInstances'] = getLiveInheritedInstances;
      Module['flushPendingDeletes'] = flushPendingDeletes;
      Module['setDelayFunction'] = setDelayFunction;
    }var registeredInstances={};
  
  function getBasestPointer(class_, ptr) {
      if (ptr === undefined) {
          throwBindingError('ptr should not be undefined');
      }
      while (class_.baseClass) {
          ptr = class_.upcast(ptr);
          class_ = class_.baseClass;
      }
      return ptr;
    }function getInheritedInstance(class_, ptr) {
      ptr = getBasestPointer(class_, ptr);
      return registeredInstances[ptr];
    }
  
  function makeClassHandle(prototype, record) {
      if (!record.ptrType || !record.ptr) {
          throwInternalError('makeClassHandle requires ptr and ptrType');
      }
      var hasSmartPtrType = !!record.smartPtrType;
      var hasSmartPtr = !!record.smartPtr;
      if (hasSmartPtrType !== hasSmartPtr) {
          throwInternalError('Both smartPtrType and smartPtr must be specified');
      }
      record.count = { value: 1 };
      return Object.create(prototype, {
          $$: {
              value: record,
          },
      });
    }function RegisteredPointer_fromWireType(ptr) {
      // ptr is a raw pointer (or a raw smartpointer)
  
      // rawPointer is a maybe-null raw pointer
      var rawPointer = this.getPointee(ptr);
      if (!rawPointer) {
          this.destructor(ptr);
          return null;
      }
  
      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);
      if (undefined !== registeredInstance) {
          // JS object has been neutered, time to repopulate it
          if (0 === registeredInstance.$$.count.value) {
              registeredInstance.$$.ptr = rawPointer;
              registeredInstance.$$.smartPtr = ptr;
              return registeredInstance['clone']();
          } else {
              // else, just increment reference count on existing object
              // it already has a reference to the smart pointer
              var rv = registeredInstance['clone']();
              this.destructor(ptr);
              return rv;
          }
      }
  
      function makeDefaultHandle() {
          if (this.isSmartPointer) {
              return makeClassHandle(this.registeredClass.instancePrototype, {
                  ptrType: this.pointeeType,
                  ptr: rawPointer,
                  smartPtrType: this,
                  smartPtr: ptr,
              });
          } else {
              return makeClassHandle(this.registeredClass.instancePrototype, {
                  ptrType: this,
                  ptr: ptr,
              });
          }
      }
  
      var actualType = this.registeredClass.getActualType(rawPointer);
      var registeredPointerRecord = registeredPointers[actualType];
      if (!registeredPointerRecord) {
          return makeDefaultHandle.call(this);
      }
  
      var toType;
      if (this.isConst) {
          toType = registeredPointerRecord.constPointerType;
      } else {
          toType = registeredPointerRecord.pointerType;
      }
      var dp = downcastPointer(
          rawPointer,
          this.registeredClass,
          toType.registeredClass);
      if (dp === null) {
          return makeDefaultHandle.call(this);
      }
      if (this.isSmartPointer) {
          return makeClassHandle(toType.registeredClass.instancePrototype, {
              ptrType: toType,
              ptr: dp,
              smartPtrType: this,
              smartPtr: ptr,
          });
      } else {
          return makeClassHandle(toType.registeredClass.instancePrototype, {
              ptrType: toType,
              ptr: dp,
          });
      }
    }function init_RegisteredPointer() {
      RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;
      RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;
      RegisteredPointer.prototype['argPackAdvance'] = 8;
      RegisteredPointer.prototype['readValueFromPointer'] = simpleReadValueFromPointer;
      RegisteredPointer.prototype['deleteObject'] = RegisteredPointer_deleteObject;
      RegisteredPointer.prototype['fromWireType'] = RegisteredPointer_fromWireType;
    }function RegisteredPointer(
      name,
      registeredClass,
      isReference,
      isConst,
  
      // smart pointer properties
      isSmartPointer,
      pointeeType,
      sharingPolicy,
      rawGetPointee,
      rawConstructor,
      rawShare,
      rawDestructor
    ) {
      this.name = name;
      this.registeredClass = registeredClass;
      this.isReference = isReference;
      this.isConst = isConst;
  
      // smart pointer properties
      this.isSmartPointer = isSmartPointer;
      this.pointeeType = pointeeType;
      this.sharingPolicy = sharingPolicy;
      this.rawGetPointee = rawGetPointee;
      this.rawConstructor = rawConstructor;
      this.rawShare = rawShare;
      this.rawDestructor = rawDestructor;
  
      if (!isSmartPointer && registeredClass.baseClass === undefined) {
          if (isConst) {
              this['toWireType'] = constNoSmartPtrRawPointerToWireType;
              this.destructorFunction = null;
          } else {
              this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;
              this.destructorFunction = null;
          }
      } else {
          this['toWireType'] = genericPointerToWireType;
          // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns
          // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.
          // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in
          //       craftInvokerFunction altogether.
      }
    }
  
  function replacePublicSymbol(name, value, numArguments) {
      if (!Module.hasOwnProperty(name)) {
          throwInternalError('Replacing nonexistant public symbol');
      }
      // If there's an overload table for this symbol, replace the symbol in the overload table instead.
      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          Module[name].argCount = numArguments;
      }
    }
  
  function embind__requireFunction(signature, rawFunction) {
      signature = readLatin1String(signature);
  
      function makeDynCaller(dynCall) {
          var args = [];
          for (var i = 1; i < signature.length; ++i) {
              args.push('a' + i);
          }
  
          var name = 'dynCall_' + signature + '_' + rawFunction;
          var body = 'return function ' + name + '(' + args.join(', ') + ') {\n';
          body    += '    return dynCall(rawFunction' + (args.length ? ', ' : '') + args.join(', ') + ');\n';
          body    += '};\n';
  
          return (new Function('dynCall', 'rawFunction', body))(dynCall, rawFunction);
      }
  
      var fp;
      if (Module['FUNCTION_TABLE_' + signature] !== undefined) {
          fp = Module['FUNCTION_TABLE_' + signature][rawFunction];
      } else if (typeof FUNCTION_TABLE !== "undefined") {
          fp = FUNCTION_TABLE[rawFunction];
      } else {
          // asm.js does not give direct access to the function tables,
          // and thus we must go through the dynCall interface which allows
          // calling into a signature's function table by pointer value.
          //
          // https://github.com/dherman/asm.js/issues/83
          //
          // This has three main penalties:
          // - dynCall is another function call in the path from JavaScript to C++.
          // - JITs may not predict through the function table indirection at runtime.
          var dc = Module["asm"]['dynCall_' + signature];
          if (dc === undefined) {
              // We will always enter this branch if the signature
              // contains 'f' and PRECISE_F32 is not enabled.
              //
              // Try again, replacing 'f' with 'd'.
              dc = Module["asm"]['dynCall_' + signature.replace(/f/g, 'd')];
              if (dc === undefined) {
                  throwBindingError("No dynCall invoker for signature: " + signature);
              }
          }
          fp = makeDynCaller(dc);
      }
  
      if (typeof fp !== "function") {
          throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
      }
      return fp;
    }
  
  
  var UnboundTypeError=undefined;
  
  function getTypeName(type) {
      var ptr = ___getTypeName(type);
      var rv = readLatin1String(ptr);
      _free(ptr);
      return rv;
    }function throwUnboundTypeError(message, types) {
      var unboundTypes = [];
      var seen = {};
      function visit(type) {
          if (seen[type]) {
              return;
          }
          if (registeredTypes[type]) {
              return;
          }
          if (typeDependencies[type]) {
              typeDependencies[type].forEach(visit);
              return;
          }
          unboundTypes.push(type);
          seen[type] = true;
      }
      types.forEach(visit);
  
      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));
    }function __embind_register_class(
      rawType,
      rawPointerType,
      rawConstPointerType,
      baseClassRawType,
      getActualTypeSignature,
      getActualType,
      upcastSignature,
      upcast,
      downcastSignature,
      downcast,
      name,
      destructorSignature,
      rawDestructor
    ) {
      name = readLatin1String(name);
      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);
      if (upcast) {
          upcast = embind__requireFunction(upcastSignature, upcast);
      }
      if (downcast) {
          downcast = embind__requireFunction(downcastSignature, downcast);
      }
      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);
      var legalFunctionName = makeLegalFunctionName(name);
  
      exposePublicSymbol(legalFunctionName, function() {
          // this code cannot run if baseClassRawType is zero
          throwUnboundTypeError('Cannot construct ' + name + ' due to unbound types', [baseClassRawType]);
      });
  
      whenDependentTypesAreResolved(
          [rawType, rawPointerType, rawConstPointerType],
          baseClassRawType ? [baseClassRawType] : [],
          function(base) {
              base = base[0];
  
              var baseClass;
              var basePrototype;
              if (baseClassRawType) {
                  baseClass = base.registeredClass;
                  basePrototype = baseClass.instancePrototype;
              } else {
                  basePrototype = ClassHandle.prototype;
              }
  
              var constructor = createNamedFunction(legalFunctionName, function() {
                  if (Object.getPrototypeOf(this) !== instancePrototype) {
                      throw new BindingError("Use 'new' to construct " + name);
                  }
                  if (undefined === registeredClass.constructor_body) {
                      throw new BindingError(name + " has no accessible constructor");
                  }
                  var body = registeredClass.constructor_body[arguments.length];
                  if (undefined === body) {
                      throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
                  }
                  return body.apply(this, arguments);
              });
  
              var instancePrototype = Object.create(basePrototype, {
                  constructor: { value: constructor },
              });
  
              constructor.prototype = instancePrototype;
  
              var registeredClass = new RegisteredClass(
                  name,
                  constructor,
                  instancePrototype,
                  rawDestructor,
                  baseClass,
                  getActualType,
                  upcast,
                  downcast);
  
              var referenceConverter = new RegisteredPointer(
                  name,
                  registeredClass,
                  true,
                  false,
                  false);
  
              var pointerConverter = new RegisteredPointer(
                  name + '*',
                  registeredClass,
                  false,
                  false,
                  false);
  
              var constPointerConverter = new RegisteredPointer(
                  name + ' const*',
                  registeredClass,
                  false,
                  true,
                  false);
  
              registeredPointers[rawType] = {
                  pointerType: pointerConverter,
                  constPointerType: constPointerConverter
              };
  
              replacePublicSymbol(legalFunctionName, constructor);
  
              return [referenceConverter, pointerConverter, constPointerConverter];
          }
      );
    }

  
  function heap32VectorToArray(count, firstElement) {
      var array = [];
      for (var i = 0; i < count; i++) {
          array.push(HEAP32[(firstElement >> 2) + i]);
      }
      return array;
    }function __embind_register_class_constructor(
      rawClassType,
      argCount,
      rawArgTypesAddr,
      invokerSignature,
      invoker,
      rawConstructor
    ) {
      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      invoker = embind__requireFunction(invokerSignature, invoker);
  
      whenDependentTypesAreResolved([], [rawClassType], function(classType) {
          classType = classType[0];
          var humanName = 'constructor ' + classType.name;
  
          if (undefined === classType.registeredClass.constructor_body) {
              classType.registeredClass.constructor_body = [];
          }
          if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
              throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount-1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
          }
          classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {
              throwUnboundTypeError('Cannot construct ' + classType.name + ' due to unbound types', rawArgTypes);
          };
  
          whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {
                  if (arguments.length !== argCount - 1) {
                      throwBindingError(humanName + ' called with ' + arguments.length + ' arguments, expected ' + (argCount-1));
                  }
                  var destructors = [];
                  var args = new Array(argCount);
                  args[0] = rawConstructor;
                  for (var i = 1; i < argCount; ++i) {
                      args[i] = argTypes[i]['toWireType'](destructors, arguments[i - 1]);
                  }
  
                  var ptr = invoker.apply(null, args);
                  runDestructors(destructors);
  
                  return argTypes[0]['fromWireType'](ptr);
              };
              return [];
          });
          return [];
      });
    }

  
  
  function new_(constructor, argumentList) {
      if (!(constructor instanceof Function)) {
          throw new TypeError('new_ called with constructor type ' + typeof(constructor) + " which is not a function");
      }
  
      /*
       * Previously, the following line was just:
  
       function dummy() {};
  
       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even though at creation, the 'dummy' has the
       * correct constructor name.  Thus, objects created with IMVU.new would show up in the debugger as 'dummy', which
       * isn't very helpful.  Using IMVU.createNamedFunction addresses the issue.  Doublely-unfortunately, there's no way
       * to write a test for this behavior.  -NRD 2013.02.22
       */
      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});
      dummy.prototype = constructor.prototype;
      var obj = new dummy;
  
      var r = constructor.apply(obj, argumentList);
      return (r instanceof Object) ? r : obj;
    }function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
      // humanName: a human-readable string name for the function to be generated.
      // argTypes: An array that contains the embind type objects for all types in the function signature.
      //    argTypes[0] is the type object for the function return value.
      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.
      //    argTypes[2...] are the actual function parameters.
      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.
      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.
      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.
      var argCount = argTypes.length;
  
      if (argCount < 2) {
          throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
      }
  
      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);
  
      // Free functions with signature "void function()" do not need an invoker that marshalls between wire types.
  // TODO: This omits argument count check - enable only at -O3 or similar.
  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == "void" && !isClassMethodFunc) {
  //       return FUNCTION_TABLE[fn];
  //    }
  
  
      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.
      // TODO: Remove this completely once all function invokers are being dynamically generated.
      var needsDestructorStack = false;
  
      for(var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.
          if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack
              needsDestructorStack = true;
              break;
          }
      }
  
      var returns = (argTypes[0].name !== "void");
  
      var argsList = "";
      var argsListWired = "";
      for(var i = 0; i < argCount - 2; ++i) {
          argsList += (i!==0?", ":"")+"arg"+i;
          argsListWired += (i!==0?", ":"")+"arg"+i+"Wired";
      }
  
      var invokerFnBody =
          "return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n" +
          "if (arguments.length !== "+(argCount - 2)+") {\n" +
              "throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount - 2)+" args!');\n" +
          "}\n";
  
  
      if (needsDestructorStack) {
          invokerFnBody +=
              "var destructors = [];\n";
      }
  
      var dtorStack = needsDestructorStack ? "destructors" : "null";
      var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];
  
  
      if (isClassMethodFunc) {
          invokerFnBody += "var thisWired = classParam.toWireType("+dtorStack+", this);\n";
      }
  
      for(var i = 0; i < argCount - 2; ++i) {
          invokerFnBody += "var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";
          args1.push("argType"+i);
          args2.push(argTypes[i+2]);
      }
  
      if (isClassMethodFunc) {
          argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
      }
  
      invokerFnBody +=
          (returns?"var rv = ":"") + "invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";
  
      if (needsDestructorStack) {
          invokerFnBody += "runDestructors(destructors);\n";
      } else {
          for(var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.
              var paramName = (i === 1 ? "thisWired" : ("arg"+(i - 2)+"Wired"));
              if (argTypes[i].destructorFunction !== null) {
                  invokerFnBody += paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";
                  args1.push(paramName+"_dtor");
                  args2.push(argTypes[i].destructorFunction);
              }
          }
      }
  
      if (returns) {
          invokerFnBody += "var ret = retType.fromWireType(rv);\n" +
                           "return ret;\n";
      } else {
      }
      invokerFnBody += "}\n";
  
      args1.push(invokerFnBody);
  
      var invokerFunction = new_(Function, args1).apply(null, args2);
      return invokerFunction;
    }function __embind_register_class_function(
      rawClassType,
      methodName,
      argCount,
      rawArgTypesAddr, // [ReturnType, ThisType, Args...]
      invokerSignature,
      rawInvoker,
      context,
      isPureVirtual
    ) {
      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      methodName = readLatin1String(methodName);
      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);
  
      whenDependentTypesAreResolved([], [rawClassType], function(classType) {
          classType = classType[0];
          var humanName = classType.name + '.' + methodName;
  
          if (isPureVirtual) {
              classType.registeredClass.pureVirtualFunctions.push(methodName);
          }
  
          function unboundTypesHandler() {
              throwUnboundTypeError('Cannot call ' + humanName + ' due to unbound types', rawArgTypes);
          }
  
          var proto = classType.registeredClass.instancePrototype;
          var method = proto[methodName];
          if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {
              // This is the first overload to be registered, OR we are replacing a function in the base class with a function in the derived class.
              unboundTypesHandler.argCount = argCount - 2;
              unboundTypesHandler.className = classType.name;
              proto[methodName] = unboundTypesHandler;
          } else {
              // There was an existing function with the same name registered. Set up a function overload routing table.
              ensureOverloadTable(proto, methodName, humanName);
              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;
          }
  
          whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
  
              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);
  
              // Replace the initial unbound-handler-stub function with the appropriate member function, now that all types
              // are resolved. If multiple overloads are registered for this function, the function goes into an overload table.
              if (undefined === proto[methodName].overloadTable) {
                  // Set argCount in case an overload is registered later
                  memberFunction.argCount = argCount - 2;
                  proto[methodName] = memberFunction;
              } else {
                  proto[methodName].overloadTable[argCount - 2] = memberFunction;
              }
  
              return [];
          });
          return [];
      });
    }

  
  
  var emval_free_list=[];
  
  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
          emval_handle_array[handle] = undefined;
          emval_free_list.push(handle);
      }
    }
  
  
  
  function count_emval_handles() {
      var count = 0;
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              ++count;
          }
      }
      return count;
    }
  
  function get_first_emval() {
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              return emval_handle_array[i];
          }
      }
      return null;
    }function init_emval() {
      Module['count_emval_handles'] = count_emval_handles;
      Module['get_first_emval'] = get_first_emval;
    }function __emval_register(value) {
  
      switch(value){
        case undefined :{ return 1; }
        case null :{ return 2; }
        case true :{ return 3; }
        case false :{ return 4; }
        default:{
          var handle = emval_free_list.length ?
              emval_free_list.pop() :
              emval_handle_array.length;
  
          emval_handle_array[handle] = {refcount: 1, value: value};
          return handle;
          }
        }
    }function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(handle) {
              var rv = emval_handle_array[handle].value;
              __emval_decref(handle);
              return rv;
          },
          'toWireType': function(destructors, value) {
              return __emval_register(value);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: null, // This type does not need a destructor
  
          // TODO: do we need a deleteObject here?  write a test where
          // emval is passed into JS via an interface
      });
    }

  
  function _embind_repr(v) {
      if (v === null) {
          return 'null';
      }
      var t = typeof v;
      if (t === 'object' || t === 'array' || t === 'function') {
          return v.toString();
      } else {
          return '' + v;
      }
    }
  
  function floatReadValueFromPointer(name, shift) {
      switch (shift) {
          case 2: return function(pointer) {
              return this['fromWireType'](HEAPF32[pointer >> 2]);
          };
          case 3: return function(pointer) {
              return this['fromWireType'](HEAPF64[pointer >> 3]);
          };
          default:
              throw new TypeError("Unknown float type: " + name);
      }
    }function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following if() and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              return value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': floatReadValueFromPointer(name, shift),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  
  function integerReadValueFromPointer(name, shift, signed) {
      // integers are quite common, so generate very specialized functions
      switch (shift) {
          case 0: return signed ?
              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :
              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };
          case 1: return signed ?
              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :
              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };
          case 2: return signed ?
              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :
              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
          maxRange = 4294967295;
      }
  
      var shift = getShiftFromSize(size);
  
      var fromWireType = function(value) {
          return value;
      };
  
      if (minRange === 0) {
          var bitshift = 32 - 8*size;
          fromWireType = function(value) {
              return (value << bitshift) >>> bitshift;
          };
      }
  
      var isUnsignedType = (name.indexOf('unsigned') != -1);
  
      registerType(primitiveType, {
          name: name,
          'fromWireType': fromWireType,
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following two if()s and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              if (value < minRange || value > maxRange) {
                  throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
              }
              return isUnsignedType ? (value >>> 0) : (value | 0);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [
          Int8Array,
          Uint8Array,
          Int16Array,
          Uint16Array,
          Int32Array,
          Uint32Array,
          Float32Array,
          Float64Array,
      ];
  
      var TA = typeMapping[dataTypeIndex];
  
      function decodeMemoryView(handle) {
          handle = handle >> 2;
          var heap = HEAPU32;
          var size = heap[handle]; // in elements
          var data = heap[handle + 1]; // byte offset into emscripten heap
          return new TA(heap['buffer'], data, size);
      }
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': decodeMemoryView,
          'argPackAdvance': 8,
          'readValueFromPointer': decodeMemoryView,
      }, {
          ignoreDuplicateRegistrations: true,
      });
    }

  function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              if (value instanceof ArrayBuffer) {
                  value = new Uint8Array(value);
              }
  
              function getTAElement(ta, index) {
                  return ta[index];
              }
              function getStringElement(string, index) {
                  return string.charCodeAt(index);
              }
              var getElement;
              if (value instanceof Uint8Array) {
                  getElement = getTAElement;
              } else if (value instanceof Uint8ClampedArray) {
                  getElement = getTAElement;
              } else if (value instanceof Int8Array) {
                  getElement = getTAElement;
              } else if (typeof value === 'string') {
                  getElement = getStringElement;
              } else {
                  throwBindingError('Cannot pass non-string to std::string');
              }
  
              // assumes 4-byte alignment
              var length = value.length;
              var ptr = _malloc(4 + length);
              HEAPU32[ptr >> 2] = length;
              for (var i = 0; i < length; ++i) {
                  var charCode = getElement(value, i);
                  if (charCode > 255) {
                      _free(ptr);
                      throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                  }
                  HEAPU8[ptr + 4 + i] = charCode;
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_std_wstring(rawType, charSize, name) {
      // nb. do not cache HEAPU16 and HEAPU32, they may be destroyed by enlargeMemory().
      name = readLatin1String(name);
      var getHeap, shift;
      if (charSize === 2) {
          getHeap = function() { return HEAPU16; };
          shift = 1;
      } else if (charSize === 4) {
          getHeap = function() { return HEAPU32; };
          shift = 2;
      }
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var HEAP = getHeap();
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              var start = (value + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAP[start + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              // assumes 4-byte alignment
              var HEAP = getHeap();
              var length = value.length;
              var ptr = _malloc(4 + length * charSize);
              HEAPU32[ptr >> 2] = length;
              var start = (ptr + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  HEAP[start + i] = value.charCodeAt(i);
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_value_object(
      rawType,
      name,
      constructorSignature,
      rawConstructor,
      destructorSignature,
      rawDestructor
    ) {
      structRegistrations[rawType] = {
          name: readLatin1String(name),
          rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),
          rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),
          fields: [],
      };
    }

  function __embind_register_value_object_field(
      structType,
      fieldName,
      getterReturnType,
      getterSignature,
      getter,
      getterContext,
      setterArgumentType,
      setterSignature,
      setter,
      setterContext
    ) {
      structRegistrations[structType].fields.push({
          fieldName: readLatin1String(fieldName),
          getterReturnType: getterReturnType,
          getter: embind__requireFunction(getterSignature, getter),
          getterContext: getterContext,
          setterArgumentType: setterArgumentType,
          setter: embind__requireFunction(setterSignature, setter),
          setterContext: setterContext,
      });
    }

  function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          isVoid: true, // void return values can be optimized out sometimes
          name: name,
          'argPackAdvance': 0,
          'fromWireType': function() {
              return undefined;
          },
          'toWireType': function(destructors, o) {
              // TODO: assert if anything else is given?
              return undefined;
          },
      });
    }

  function _abort() {
      Module['abort']();
    }

   

   

   

  
  
  
  
  var _environ=STATICTOP; STATICTOP += 16;;var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = ENV['LOGNAME'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        ENV['LANG'] = 'C.UTF-8';
        ENV['_'] = Module['thisProgram'];
        // Allocate memory.
        poolPtr = staticAlloc(TOTAL_ENV_SIZE);
        envPtr = staticAlloc(MAX_ENV_VALUES * 4);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((_environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((_environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocateUTF8(ENV[name]);
      return _getenv.ret;
    }

  function _getgrnam() {
  Module['printErr']('missing function: getgrnam'); abort(-1);
  }

  function _getpwnam() { throw 'getpwnam: TODO' }



  function _jsClose() {
      return jsAPI.close.apply(null, arguments);
    }

  function _jsCreate(filename){
      return jsAPI.create.call(null, UTF32ToString(filename));
    }

  function _jsOpen(filename) {
      return jsAPI.open.call(null, UTF32ToString(filename));
    }

  function _jsRead() {
      return jsAPI.read.apply(null, arguments);
    }

  function _jsSeek(fd, offset, method) {
      return jsAPI.seek.call(null, fd, offset, UTF8ToString(method));
    }

  function _jsTell() {
      return jsAPI.tell.apply(null, arguments);
    }

  function _jsWrite() {
      return jsAPI.write.apply(null, arguments);
    }

   

  function _llvm_eh_typeid_for(type) {
      return type;
    }

  
  var ___tm_current=STATICTOP; STATICTOP += 48;;
  
  
  var ___tm_timezone=allocate(intArrayFromString("GMT"), "i8", ALLOC_STATIC);
  
  
  var _tzname=STATICTOP; STATICTOP += 16;;
  
  var _daylight=STATICTOP; STATICTOP += 16;;
  
  var _timezone=STATICTOP; STATICTOP += 16;;function _tzset() {
      // TODO: Use (malleable) environment variables instead of system settings.
      if (_tzset.called) return;
      _tzset.called = true;
  
      // timezone is specified as seconds west of UTC ("The external variable
      // `timezone` shall be set to the difference, in seconds, between
      // Coordinated Universal Time (UTC) and local standard time."), the same
      // as returned by getTimezoneOffset().
      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html
      HEAP32[((_timezone)>>2)]=(new Date()).getTimezoneOffset() * 60;
  
      var winter = new Date(2000, 0, 1);
      var summer = new Date(2000, 6, 1);
      HEAP32[((_daylight)>>2)]=Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
  
      function extractZone(date) {
        var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
        return match ? match[1] : "GMT";
      };
      var winterName = extractZone(winter);
      var summerName = extractZone(summer);
      var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);
      var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);
      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
        // Northern hemisphere
        HEAP32[((_tzname)>>2)]=winterNamePtr;
        HEAP32[(((_tzname)+(4))>>2)]=summerNamePtr;
      } else {
        HEAP32[((_tzname)>>2)]=summerNamePtr;
        HEAP32[(((_tzname)+(4))>>2)]=winterNamePtr;
      }
    }function _localtime_r(time, tmPtr) {
      _tzset();
      var date = new Date(HEAP32[((time)>>2)]*1000);
      HEAP32[((tmPtr)>>2)]=date.getSeconds();
      HEAP32[(((tmPtr)+(4))>>2)]=date.getMinutes();
      HEAP32[(((tmPtr)+(8))>>2)]=date.getHours();
      HEAP32[(((tmPtr)+(12))>>2)]=date.getDate();
      HEAP32[(((tmPtr)+(16))>>2)]=date.getMonth();
      HEAP32[(((tmPtr)+(20))>>2)]=date.getFullYear()-1900;
      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
  
      var start = new Date(date.getFullYear(), 0, 1);
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
      HEAP32[(((tmPtr)+(36))>>2)]=-(date.getTimezoneOffset() * 60);
  
      // Attention: DST is in December in South, and some regions don't have DST at all.
      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;
      HEAP32[(((tmPtr)+(32))>>2)]=dst;
  
      var zonePtr = HEAP32[(((_tzname)+(dst ? 4 : 0))>>2)];
      HEAP32[(((tmPtr)+(40))>>2)]=zonePtr;
  
      return tmPtr;
    }function _localtime(time) {
      return _localtime_r(time, ___tm_current);
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 

   

   

  function _mktime(tmPtr) {
      _tzset();
      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,
                          HEAP32[(((tmPtr)+(16))>>2)],
                          HEAP32[(((tmPtr)+(12))>>2)],
                          HEAP32[(((tmPtr)+(8))>>2)],
                          HEAP32[(((tmPtr)+(4))>>2)],
                          HEAP32[((tmPtr)>>2)],
                          0);
  
      // There's an ambiguous hour when the time goes back; the tm_isdst field is
      // used to disambiguate it.  Date() basically guesses, so we fix it up if it
      // guessed wrong, or fill in tm_isdst with the guess if it's -1.
      var dst = HEAP32[(((tmPtr)+(32))>>2)];
      var guessedOffset = date.getTimezoneOffset();
      var start = new Date(date.getFullYear(), 0, 1);
      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South
      if (dst < 0) {
        // Attention: some regions don't have DST at all.
        HEAP32[(((tmPtr)+(32))>>2)]=Number(summerOffset != winterOffset && dstOffset == guessedOffset);
      } else if ((dst > 0) != (dstOffset == guessedOffset)) {
        var nonDstOffset = Math.max(winterOffset, summerOffset);
        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;
        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.
        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);
      }
  
      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
  
      return (date.getTime() / 1000)|0;
    }

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Module['dynCall_v'](func);
      _pthread_once.seen[ptr] = 1;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

   

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }
FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });;
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); };
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');;
embind_init_charCodes();
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');;
init_ClassHandle();
init_RegisteredPointer();
init_embind();;
UnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;
init_emval();;
___buildEnvironment(ENV);;
DYNAMICTOP_PTR = staticAlloc(4);

STACK_BASE = STACKTOP = alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

var ASSERTIONS = true;

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      if (ASSERTIONS) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      }
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}



function nullFunc_dii(x) { Module["printErr"]("Invalid function pointer called with signature 'dii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viid(x) { Module["printErr"]("Invalid function pointer called with signature 'viid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_dii(index,a1,a2) {
  try {
    return Module["dynCall_dii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    return Module["dynCall_iiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viid(index,a1,a2,a3) {
  try {
    Module["dynCall_viid"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity, "byteLength": byteLength };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "nullFunc_dii": nullFunc_dii, "nullFunc_i": nullFunc_i, "nullFunc_ii": nullFunc_ii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_iiiiiii": nullFunc_iiiiiii, "nullFunc_iiiiiiiiii": nullFunc_iiiiiiiiii, "nullFunc_v": nullFunc_v, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_viid": nullFunc_viid, "nullFunc_viii": nullFunc_viii, "nullFunc_viiii": nullFunc_viiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_viiiiiiiii": nullFunc_viiiiiiiii, "invoke_dii": invoke_dii, "invoke_i": invoke_i, "invoke_ii": invoke_ii, "invoke_iii": invoke_iii, "invoke_iiii": invoke_iiii, "invoke_iiiii": invoke_iiiii, "invoke_iiiiii": invoke_iiiiii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_iiiiiiiiii": invoke_iiiiiiiiii, "invoke_v": invoke_v, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_viid": invoke_viid, "invoke_viii": invoke_viii, "invoke_viiii": invoke_viiii, "invoke_viiiii": invoke_viiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "ClassHandle": ClassHandle, "ClassHandle_clone": ClassHandle_clone, "ClassHandle_delete": ClassHandle_delete, "ClassHandle_deleteLater": ClassHandle_deleteLater, "ClassHandle_isAliasOf": ClassHandle_isAliasOf, "ClassHandle_isDeleted": ClassHandle_isDeleted, "RegisteredClass": RegisteredClass, "RegisteredPointer": RegisteredPointer, "RegisteredPointer_deleteObject": RegisteredPointer_deleteObject, "RegisteredPointer_destructor": RegisteredPointer_destructor, "RegisteredPointer_fromWireType": RegisteredPointer_fromWireType, "RegisteredPointer_getPointee": RegisteredPointer_getPointee, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___buildEnvironment": ___buildEnvironment, "___cxa_allocate_exception": ___cxa_allocate_exception, "___cxa_begin_catch": ___cxa_begin_catch, "___cxa_end_catch": ___cxa_end_catch, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_find_matching_catch_2": ___cxa_find_matching_catch_2, "___cxa_find_matching_catch_3": ___cxa_find_matching_catch_3, "___cxa_find_matching_catch_4": ___cxa_find_matching_catch_4, "___cxa_free_exception": ___cxa_free_exception, "___cxa_throw": ___cxa_throw, "___gxx_personality_v0": ___gxx_personality_v0, "___lock": ___lock, "___map_file": ___map_file, "___resumeException": ___resumeException, "___setErrNo": ___setErrNo, "___syscall140": ___syscall140, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "___syscall183": ___syscall183, "___syscall198": ___syscall198, "___syscall20": ___syscall20, "___syscall54": ___syscall54, "___syscall6": ___syscall6, "___syscall60": ___syscall60, "___syscall83": ___syscall83, "___syscall9": ___syscall9, "___syscall91": ___syscall91, "___unlock": ___unlock, "__embind_finalize_value_object": __embind_finalize_value_object, "__embind_register_bool": __embind_register_bool, "__embind_register_class": __embind_register_class, "__embind_register_class_constructor": __embind_register_class_constructor, "__embind_register_class_function": __embind_register_class_function, "__embind_register_emval": __embind_register_emval, "__embind_register_float": __embind_register_float, "__embind_register_integer": __embind_register_integer, "__embind_register_memory_view": __embind_register_memory_view, "__embind_register_std_string": __embind_register_std_string, "__embind_register_std_wstring": __embind_register_std_wstring, "__embind_register_value_object": __embind_register_value_object, "__embind_register_value_object_field": __embind_register_value_object_field, "__embind_register_void": __embind_register_void, "__emval_decref": __emval_decref, "__emval_register": __emval_register, "_abort": _abort, "_embind_repr": _embind_repr, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_getenv": _getenv, "_getgrnam": _getgrnam, "_getpwnam": _getpwnam, "_jsClose": _jsClose, "_jsCreate": _jsCreate, "_jsOpen": _jsOpen, "_jsRead": _jsRead, "_jsSeek": _jsSeek, "_jsTell": _jsTell, "_jsWrite": _jsWrite, "_llvm_eh_typeid_for": _llvm_eh_typeid_for, "_localtime": _localtime, "_localtime_r": _localtime_r, "_mktime": _mktime, "_pthread_getspecific": _pthread_getspecific, "_pthread_key_create": _pthread_key_create, "_pthread_once": _pthread_once, "_pthread_setspecific": _pthread_setspecific, "_time": _time, "_tzset": _tzset, "constNoSmartPtrRawPointerToWireType": constNoSmartPtrRawPointerToWireType, "count_emval_handles": count_emval_handles, "craftInvokerFunction": craftInvokerFunction, "createNamedFunction": createNamedFunction, "downcastPointer": downcastPointer, "embind__requireFunction": embind__requireFunction, "embind_init_charCodes": embind_init_charCodes, "ensureOverloadTable": ensureOverloadTable, "exposePublicSymbol": exposePublicSymbol, "extendError": extendError, "floatReadValueFromPointer": floatReadValueFromPointer, "flushPendingDeletes": flushPendingDeletes, "genericPointerToWireType": genericPointerToWireType, "getBasestPointer": getBasestPointer, "getInheritedInstance": getInheritedInstance, "getInheritedInstanceCount": getInheritedInstanceCount, "getLiveInheritedInstances": getLiveInheritedInstances, "getShiftFromSize": getShiftFromSize, "getTypeName": getTypeName, "get_first_emval": get_first_emval, "heap32VectorToArray": heap32VectorToArray, "init_ClassHandle": init_ClassHandle, "init_RegisteredPointer": init_RegisteredPointer, "init_embind": init_embind, "init_emval": init_emval, "integerReadValueFromPointer": integerReadValueFromPointer, "makeClassHandle": makeClassHandle, "makeLegalFunctionName": makeLegalFunctionName, "new_": new_, "nonConstNoSmartPtrRawPointerToWireType": nonConstNoSmartPtrRawPointerToWireType, "readLatin1String": readLatin1String, "registerType": registerType, "replacePublicSymbol": replacePublicSymbol, "runDestructor": runDestructor, "runDestructors": runDestructors, "setDelayFunction": setDelayFunction, "shallowCopyInternalPointer": shallowCopyInternalPointer, "simpleReadValueFromPointer": simpleReadValueFromPointer, "throwBindingError": throwBindingError, "throwInstanceAlreadyDeleted": throwInstanceAlreadyDeleted, "throwInternalError": throwInternalError, "throwUnboundTypeError": throwUnboundTypeError, "upcastPointer": upcastPointer, "whenDependentTypesAreResolved": whenDependentTypesAreResolved, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (/** @suppress {uselessCode} */ function(global, env, buffer) {
'almost asm';


  var Int8View = global.Int8Array;
  var HEAP8 = new Int8View(buffer);
  var Int16View = global.Int16Array;
  var HEAP16 = new Int16View(buffer);
  var Int32View = global.Int32Array;
  var HEAP32 = new Int32View(buffer);
  var Uint8View = global.Uint8Array;
  var HEAPU8 = new Uint8View(buffer);
  var Uint16View = global.Uint16Array;
  var HEAPU16 = new Uint16View(buffer);
  var Uint32View = global.Uint32Array;
  var HEAPU32 = new Uint32View(buffer);
  var Float32View = global.Float32Array;
  var HEAPF32 = new Float32View(buffer);
  var Float64View = global.Float64Array;
  var HEAPF64 = new Float64View(buffer);
  var byteLength = global.byteLength;

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var abortStackOverflow=env.abortStackOverflow;
  var nullFunc_dii=env.nullFunc_dii;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_iiiiiii=env.nullFunc_iiiiiii;
  var nullFunc_iiiiiiiiii=env.nullFunc_iiiiiiiiii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_viid=env.nullFunc_viid;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_viiiiiiiii=env.nullFunc_viiiiiiiii;
  var invoke_dii=env.invoke_dii;
  var invoke_i=env.invoke_i;
  var invoke_ii=env.invoke_ii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iiiiiiiiii=env.invoke_iiiiiiiiii;
  var invoke_v=env.invoke_v;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_viid=env.invoke_viid;
  var invoke_viii=env.invoke_viii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var ClassHandle=env.ClassHandle;
  var ClassHandle_clone=env.ClassHandle_clone;
  var ClassHandle_delete=env.ClassHandle_delete;
  var ClassHandle_deleteLater=env.ClassHandle_deleteLater;
  var ClassHandle_isAliasOf=env.ClassHandle_isAliasOf;
  var ClassHandle_isDeleted=env.ClassHandle_isDeleted;
  var RegisteredClass=env.RegisteredClass;
  var RegisteredPointer=env.RegisteredPointer;
  var RegisteredPointer_deleteObject=env.RegisteredPointer_deleteObject;
  var RegisteredPointer_destructor=env.RegisteredPointer_destructor;
  var RegisteredPointer_fromWireType=env.RegisteredPointer_fromWireType;
  var RegisteredPointer_getPointee=env.RegisteredPointer_getPointee;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___buildEnvironment=env.___buildEnvironment;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_find_matching_catch_2=env.___cxa_find_matching_catch_2;
  var ___cxa_find_matching_catch_3=env.___cxa_find_matching_catch_3;
  var ___cxa_find_matching_catch_4=env.___cxa_find_matching_catch_4;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_throw=env.___cxa_throw;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___lock=env.___lock;
  var ___map_file=env.___map_file;
  var ___resumeException=env.___resumeException;
  var ___setErrNo=env.___setErrNo;
  var ___syscall140=env.___syscall140;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var ___syscall183=env.___syscall183;
  var ___syscall198=env.___syscall198;
  var ___syscall20=env.___syscall20;
  var ___syscall54=env.___syscall54;
  var ___syscall6=env.___syscall6;
  var ___syscall60=env.___syscall60;
  var ___syscall83=env.___syscall83;
  var ___syscall9=env.___syscall9;
  var ___syscall91=env.___syscall91;
  var ___unlock=env.___unlock;
  var __embind_finalize_value_object=env.__embind_finalize_value_object;
  var __embind_register_bool=env.__embind_register_bool;
  var __embind_register_class=env.__embind_register_class;
  var __embind_register_class_constructor=env.__embind_register_class_constructor;
  var __embind_register_class_function=env.__embind_register_class_function;
  var __embind_register_emval=env.__embind_register_emval;
  var __embind_register_float=env.__embind_register_float;
  var __embind_register_integer=env.__embind_register_integer;
  var __embind_register_memory_view=env.__embind_register_memory_view;
  var __embind_register_std_string=env.__embind_register_std_string;
  var __embind_register_std_wstring=env.__embind_register_std_wstring;
  var __embind_register_value_object=env.__embind_register_value_object;
  var __embind_register_value_object_field=env.__embind_register_value_object_field;
  var __embind_register_void=env.__embind_register_void;
  var __emval_decref=env.__emval_decref;
  var __emval_register=env.__emval_register;
  var _abort=env._abort;
  var _embind_repr=env._embind_repr;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _getenv=env._getenv;
  var _getgrnam=env._getgrnam;
  var _getpwnam=env._getpwnam;
  var _jsClose=env._jsClose;
  var _jsCreate=env._jsCreate;
  var _jsOpen=env._jsOpen;
  var _jsRead=env._jsRead;
  var _jsSeek=env._jsSeek;
  var _jsTell=env._jsTell;
  var _jsWrite=env._jsWrite;
  var _llvm_eh_typeid_for=env._llvm_eh_typeid_for;
  var _localtime=env._localtime;
  var _localtime_r=env._localtime_r;
  var _mktime=env._mktime;
  var _pthread_getspecific=env._pthread_getspecific;
  var _pthread_key_create=env._pthread_key_create;
  var _pthread_once=env._pthread_once;
  var _pthread_setspecific=env._pthread_setspecific;
  var _time=env._time;
  var _tzset=env._tzset;
  var constNoSmartPtrRawPointerToWireType=env.constNoSmartPtrRawPointerToWireType;
  var count_emval_handles=env.count_emval_handles;
  var craftInvokerFunction=env.craftInvokerFunction;
  var createNamedFunction=env.createNamedFunction;
  var downcastPointer=env.downcastPointer;
  var embind__requireFunction=env.embind__requireFunction;
  var embind_init_charCodes=env.embind_init_charCodes;
  var ensureOverloadTable=env.ensureOverloadTable;
  var exposePublicSymbol=env.exposePublicSymbol;
  var extendError=env.extendError;
  var floatReadValueFromPointer=env.floatReadValueFromPointer;
  var flushPendingDeletes=env.flushPendingDeletes;
  var genericPointerToWireType=env.genericPointerToWireType;
  var getBasestPointer=env.getBasestPointer;
  var getInheritedInstance=env.getInheritedInstance;
  var getInheritedInstanceCount=env.getInheritedInstanceCount;
  var getLiveInheritedInstances=env.getLiveInheritedInstances;
  var getShiftFromSize=env.getShiftFromSize;
  var getTypeName=env.getTypeName;
  var get_first_emval=env.get_first_emval;
  var heap32VectorToArray=env.heap32VectorToArray;
  var init_ClassHandle=env.init_ClassHandle;
  var init_RegisteredPointer=env.init_RegisteredPointer;
  var init_embind=env.init_embind;
  var init_emval=env.init_emval;
  var integerReadValueFromPointer=env.integerReadValueFromPointer;
  var makeClassHandle=env.makeClassHandle;
  var makeLegalFunctionName=env.makeLegalFunctionName;
  var new_=env.new_;
  var nonConstNoSmartPtrRawPointerToWireType=env.nonConstNoSmartPtrRawPointerToWireType;
  var readLatin1String=env.readLatin1String;
  var registerType=env.registerType;
  var replacePublicSymbol=env.replacePublicSymbol;
  var runDestructor=env.runDestructor;
  var runDestructors=env.runDestructors;
  var setDelayFunction=env.setDelayFunction;
  var shallowCopyInternalPointer=env.shallowCopyInternalPointer;
  var simpleReadValueFromPointer=env.simpleReadValueFromPointer;
  var throwBindingError=env.throwBindingError;
  var throwInstanceAlreadyDeleted=env.throwInstanceAlreadyDeleted;
  var throwInternalError=env.throwInternalError;
  var throwUnboundTypeError=env.throwUnboundTypeError;
  var upcastPointer=env.upcastPointer;
  var whenDependentTypesAreResolved=env.whenDependentTypesAreResolved;
  var tempFloat = 0.0;

function _emscripten_replace_memory(newBuffer) {
  if ((byteLength(newBuffer) & 0xffffff || byteLength(newBuffer) <= 0xffffff) || byteLength(newBuffer) > 0x80000000) return false;
  HEAP8 = new Int8View(newBuffer);
  HEAP16 = new Int16View(newBuffer);
  HEAP32 = new Int32View(newBuffer);
  HEAPU8 = new Uint8View(newBuffer);
  HEAPU16 = new Uint16View(newBuffer);
  HEAPU32 = new Uint32View(newBuffer);
  HEAPF32 = new Float32View(newBuffer);
  HEAPF64 = new Float64View(newBuffer);
  buffer = newBuffer;
  return true;
}

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _RAROpenArchiveEx($0) {
 $0 = $0|0;
 var $$sink$sink = 0, $$sink3$sink = 0, $$sink5 = 0, $$sink7 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 10320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(10320|0);
 $6 = sp + 8272|0;
 $7 = sp + 56|0;
 $9 = sp + 32|0;
 $10 = sp + 16|0;
 $2 = $0;
 $3 = 0; //@line 35 "./src/cpp/unrar/dll.cpp"
 $14 = $2; //@line 38 "./src/cpp/unrar/dll.cpp"
 $15 = ((($14)) + 12|0); //@line 38 "./src/cpp/unrar/dll.cpp"
 HEAP8[$15>>0]=0&255;HEAP8[$15+1>>0]=(0>>8)&255;HEAP8[$15+2>>0]=(0>>16)&255;HEAP8[$15+3>>0]=0>>24; //@line 38 "./src/cpp/unrar/dll.cpp"
 __THREW__ = 0;
 $16 = (invoke_ii(49,173872)|0); //@line 39 "./src/cpp/unrar/dll.cpp"
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 L1: do {
  if ($18) {
   label = 6;
  } else {
   __THREW__ = 0;
   invoke_vi(50,($16|0)); //@line 39 "./src/cpp/unrar/dll.cpp"
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if ($20) {
    $41 = ___cxa_find_matching_catch_4(8|0,352|0)|0;
    $42 = tempRet0;
    $4 = $41; //@line 148 "./src/cpp/unrar/dll.cpp"
    $5 = $42; //@line 148 "./src/cpp/unrar/dll.cpp"
    __ZdlPv($16); //@line 39 "./src/cpp/unrar/dll.cpp"
    break;
   }
   $3 = $16; //@line 39 "./src/cpp/unrar/dll.cpp"
   $21 = $3; //@line 40 "./src/cpp/unrar/dll.cpp"
   $22 = ((($21)) + 75176|0); //@line 40 "./src/cpp/unrar/dll.cpp"
   HEAP32[$22>>2] = 0; //@line 40 "./src/cpp/unrar/dll.cpp"
   $23 = $2; //@line 41 "./src/cpp/unrar/dll.cpp"
   $24 = ((($23)) + 8|0); //@line 41 "./src/cpp/unrar/dll.cpp"
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24); //@line 41 "./src/cpp/unrar/dll.cpp"
   $26 = $3; //@line 41 "./src/cpp/unrar/dll.cpp"
   $27 = ((($26)) + 173864|0); //@line 41 "./src/cpp/unrar/dll.cpp"
   HEAP32[$27>>2] = $25; //@line 41 "./src/cpp/unrar/dll.cpp"
   $28 = $3; //@line 42 "./src/cpp/unrar/dll.cpp"
   $29 = ((($28)) + 91656|0); //@line 42 "./src/cpp/unrar/dll.cpp"
   __THREW__ = 0;
   invoke_vii(51,($29|0),(2720|0)); //@line 42 "./src/cpp/unrar/dll.cpp"
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    label = 6;
   } else {
    HEAP8[$6>>0] = 0; //@line 45 "./src/cpp/unrar/dll.cpp"
    $32 = $2; //@line 46 "./src/cpp/unrar/dll.cpp"
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24); //@line 46 "./src/cpp/unrar/dll.cpp"
    $34 = ($33|0)!=(0|0); //@line 46 "./src/cpp/unrar/dll.cpp"
    if ($34) {
     $35 = $2; //@line 48 "./src/cpp/unrar/dll.cpp"
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24); //@line 48 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     (invoke_iiii(52,($6|0),($36|0),2048)|0); //@line 48 "./src/cpp/unrar/dll.cpp"
     $37 = __THREW__; __THREW__ = 0;
     $38 = $37&1;
     if ($38) {
      label = 6;
      break;
     }
    }
    $43 = $2; //@line 59 "./src/cpp/unrar/dll.cpp"
    $44 = ((($43)) + 4|0); //@line 59 "./src/cpp/unrar/dll.cpp"
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24); //@line 59 "./src/cpp/unrar/dll.cpp"
    __THREW__ = 0;
    (invoke_iiiii(53,($6|0),($45|0),($7|0),2048)|0); //@line 59 "./src/cpp/unrar/dll.cpp"
    $46 = __THREW__; __THREW__ = 0;
    $47 = $46&1;
    if ($47) {
     label = 6;
    } else {
     $48 = $3; //@line 61 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     invoke_vii(54,($48|0),($7|0)); //@line 61 "./src/cpp/unrar/dll.cpp"
     $49 = __THREW__; __THREW__ = 0;
     $50 = $49&1;
     if ($50) {
      label = 6;
     } else {
      $51 = $3; //@line 62 "./src/cpp/unrar/dll.cpp"
      $52 = ((($51)) + 49720|0); //@line 62 "./src/cpp/unrar/dll.cpp"
      HEAP32[$52>>2] = 1; //@line 62 "./src/cpp/unrar/dll.cpp"
      $53 = $3; //@line 63 "./src/cpp/unrar/dll.cpp"
      $54 = ((($53)) + 58764|0); //@line 63 "./src/cpp/unrar/dll.cpp"
      HEAP32[$54>>2] = 1; //@line 63 "./src/cpp/unrar/dll.cpp"
      $55 = $2; //@line 65 "./src/cpp/unrar/dll.cpp"
      $56 = ((($55)) + 36|0); //@line 65 "./src/cpp/unrar/dll.cpp"
      $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24); //@line 65 "./src/cpp/unrar/dll.cpp"
      $58 = $3; //@line 65 "./src/cpp/unrar/dll.cpp"
      $59 = ((($58)) + 75184|0); //@line 65 "./src/cpp/unrar/dll.cpp"
      HEAP32[$59>>2] = $57; //@line 65 "./src/cpp/unrar/dll.cpp"
      $60 = $2; //@line 66 "./src/cpp/unrar/dll.cpp"
      $61 = ((($60)) + 40|0); //@line 66 "./src/cpp/unrar/dll.cpp"
      $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24); //@line 66 "./src/cpp/unrar/dll.cpp"
      $63 = $3; //@line 66 "./src/cpp/unrar/dll.cpp"
      $64 = ((($63)) + 75180|0); //@line 66 "./src/cpp/unrar/dll.cpp"
      HEAP32[$64>>2] = $62; //@line 66 "./src/cpp/unrar/dll.cpp"
      $65 = $3; //@line 70 "./src/cpp/unrar/dll.cpp"
      $66 = ((($65)) + 49821|0); //@line 70 "./src/cpp/unrar/dll.cpp"
      HEAP8[$66>>0] = 1; //@line 70 "./src/cpp/unrar/dll.cpp"
      $67 = $3; //@line 71 "./src/cpp/unrar/dll.cpp"
      $68 = ((($67)) + 92120|0); //@line 71 "./src/cpp/unrar/dll.cpp"
      __THREW__ = 0;
      $69 = (invoke_iiii(3,($68|0),($7|0),4)|0); //@line 71 "./src/cpp/unrar/dll.cpp"
      $70 = __THREW__; __THREW__ = 0;
      $71 = $70&1;
      if ($71) {
       label = 6;
      } else {
       if (!($69)) {
        $72 = $2; //@line 73 "./src/cpp/unrar/dll.cpp"
        $73 = ((($72)) + 12|0); //@line 73 "./src/cpp/unrar/dll.cpp"
        HEAP8[$73>>0]=15&255;HEAP8[$73+1>>0]=(15>>8)&255;HEAP8[$73+2>>0]=(15>>16)&255;HEAP8[$73+3>>0]=15>>24; //@line 73 "./src/cpp/unrar/dll.cpp"
        $74 = $3; //@line 74 "./src/cpp/unrar/dll.cpp"
        $75 = ($74|0)==(0|0); //@line 74 "./src/cpp/unrar/dll.cpp"
        if (!($75)) {
         __ZN7DataSetD2Ev($74); //@line 74 "./src/cpp/unrar/dll.cpp"
         __ZdlPv($74); //@line 74 "./src/cpp/unrar/dll.cpp"
        }
        $1 = 0; //@line 75 "./src/cpp/unrar/dll.cpp"
        $322 = $1; //@line 148 "./src/cpp/unrar/dll.cpp"
        STACKTOP = sp;return ($322|0); //@line 148 "./src/cpp/unrar/dll.cpp"
       }
       $76 = $3; //@line 77 "./src/cpp/unrar/dll.cpp"
       $77 = ((($76)) + 92120|0); //@line 77 "./src/cpp/unrar/dll.cpp"
       __THREW__ = 0;
       $78 = (invoke_iii(55,($77|0),1)|0); //@line 77 "./src/cpp/unrar/dll.cpp"
       $79 = __THREW__; __THREW__ = 0;
       $80 = $79&1;
       if ($80) {
        label = 6;
       } else {
        if (!($78)) {
         $81 = $3; //@line 79 "./src/cpp/unrar/dll.cpp"
         $82 = ((($81)) + 75176|0); //@line 79 "./src/cpp/unrar/dll.cpp"
         $83 = HEAP32[$82>>2]|0; //@line 79 "./src/cpp/unrar/dll.cpp"
         $84 = ($83|0)!=(0); //@line 79 "./src/cpp/unrar/dll.cpp"
         do {
          if ($84) {
           $85 = $3; //@line 80 "./src/cpp/unrar/dll.cpp"
           $86 = ((($85)) + 75176|0); //@line 80 "./src/cpp/unrar/dll.cpp"
           $87 = HEAP32[$86>>2]|0; //@line 80 "./src/cpp/unrar/dll.cpp"
           $88 = $2; //@line 80 "./src/cpp/unrar/dll.cpp"
           $$sink$sink = $87;$$sink3$sink = $88;
          } else {
           __THREW__ = 0;
           $89 = (invoke_ii(56,(756|0))|0); //@line 83 "./src/cpp/unrar/dll.cpp"
           $90 = __THREW__; __THREW__ = 0;
           $91 = $90&1;
           if ($91) {
            label = 6;
            break L1;
           }
           $8 = $89; //@line 83 "./src/cpp/unrar/dll.cpp"
           $92 = $8; //@line 84 "./src/cpp/unrar/dll.cpp"
           $93 = ($92|0)!=(0); //@line 84 "./src/cpp/unrar/dll.cpp"
           $94 = $8; //@line 84 "./src/cpp/unrar/dll.cpp"
           $95 = ($94|0)!=(1); //@line 84 "./src/cpp/unrar/dll.cpp"
           $or$cond = $93 & $95; //@line 84 "./src/cpp/unrar/dll.cpp"
           if (!($or$cond)) {
            $101 = $2; //@line 87 "./src/cpp/unrar/dll.cpp"
            $$sink$sink = 13;$$sink3$sink = $101;
            break;
           }
           $96 = $8; //@line 85 "./src/cpp/unrar/dll.cpp"
           __THREW__ = 0;
           $97 = (invoke_ii(57,($96|0))|0); //@line 85 "./src/cpp/unrar/dll.cpp"
           $98 = __THREW__; __THREW__ = 0;
           $99 = $98&1;
           if ($99) {
            label = 6;
            break L1;
           }
           $100 = $2; //@line 85 "./src/cpp/unrar/dll.cpp"
           $$sink$sink = $97;$$sink3$sink = $100;
          }
         } while(0);
         $102 = ((($$sink3$sink)) + 12|0);
         HEAP8[$102>>0]=$$sink$sink&255;HEAP8[$102+1>>0]=($$sink$sink>>8)&255;HEAP8[$102+2>>0]=($$sink$sink>>16)&255;HEAP8[$102+3>>0]=$$sink$sink>>24;
         $103 = $3; //@line 89 "./src/cpp/unrar/dll.cpp"
         $104 = ($103|0)==(0|0); //@line 89 "./src/cpp/unrar/dll.cpp"
         if (!($104)) {
          __ZN7DataSetD2Ev($103); //@line 89 "./src/cpp/unrar/dll.cpp"
          __ZdlPv($103); //@line 89 "./src/cpp/unrar/dll.cpp"
         }
         $1 = 0; //@line 90 "./src/cpp/unrar/dll.cpp"
         $322 = $1; //@line 148 "./src/cpp/unrar/dll.cpp"
         STACKTOP = sp;return ($322|0); //@line 148 "./src/cpp/unrar/dll.cpp"
        }
        $105 = $2; //@line 92 "./src/cpp/unrar/dll.cpp"
        $106 = ((($105)) + 32|0); //@line 92 "./src/cpp/unrar/dll.cpp"
        HEAP8[$106>>0]=0&255;HEAP8[$106+1>>0]=(0>>8)&255;HEAP8[$106+2>>0]=(0>>16)&255;HEAP8[$106+3>>0]=0>>24; //@line 92 "./src/cpp/unrar/dll.cpp"
        $107 = $3; //@line 94 "./src/cpp/unrar/dll.cpp"
        $108 = ((($107)) + 92120|0); //@line 94 "./src/cpp/unrar/dll.cpp"
        $109 = ((($108)) + 56861|0); //@line 94 "./src/cpp/unrar/dll.cpp"
        $110 = HEAP8[$109>>0]|0; //@line 94 "./src/cpp/unrar/dll.cpp"
        $111 = $110&1; //@line 94 "./src/cpp/unrar/dll.cpp"
        if ($111) {
         $112 = $2; //@line 95 "./src/cpp/unrar/dll.cpp"
         $113 = ((($112)) + 32|0); //@line 95 "./src/cpp/unrar/dll.cpp"
         $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24); //@line 95 "./src/cpp/unrar/dll.cpp"
         $115 = $114 | 1; //@line 95 "./src/cpp/unrar/dll.cpp"
         HEAP8[$113>>0]=$115&255;HEAP8[$113+1>>0]=($115>>8)&255;HEAP8[$113+2>>0]=($115>>16)&255;HEAP8[$113+3>>0]=$115>>24; //@line 95 "./src/cpp/unrar/dll.cpp"
        }
        $116 = $3; //@line 96 "./src/cpp/unrar/dll.cpp"
        $117 = ((($116)) + 92120|0); //@line 96 "./src/cpp/unrar/dll.cpp"
        $118 = ((($117)) + 56863|0); //@line 96 "./src/cpp/unrar/dll.cpp"
        $119 = HEAP8[$118>>0]|0; //@line 96 "./src/cpp/unrar/dll.cpp"
        $120 = $119&1; //@line 96 "./src/cpp/unrar/dll.cpp"
        if ($120) {
         $121 = $2; //@line 97 "./src/cpp/unrar/dll.cpp"
         $122 = ((($121)) + 32|0); //@line 97 "./src/cpp/unrar/dll.cpp"
         $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24); //@line 97 "./src/cpp/unrar/dll.cpp"
         $124 = $123 | 4; //@line 97 "./src/cpp/unrar/dll.cpp"
         HEAP8[$122>>0]=$124&255;HEAP8[$122+1>>0]=($124>>8)&255;HEAP8[$122+2>>0]=($124>>16)&255;HEAP8[$122+3>>0]=$124>>24; //@line 97 "./src/cpp/unrar/dll.cpp"
        }
        $125 = $3; //@line 98 "./src/cpp/unrar/dll.cpp"
        $126 = ((($125)) + 92120|0); //@line 98 "./src/cpp/unrar/dll.cpp"
        $127 = ((($126)) + 56860|0); //@line 98 "./src/cpp/unrar/dll.cpp"
        $128 = HEAP8[$127>>0]|0; //@line 98 "./src/cpp/unrar/dll.cpp"
        $129 = $128&1; //@line 98 "./src/cpp/unrar/dll.cpp"
        if ($129) {
         $130 = $2; //@line 99 "./src/cpp/unrar/dll.cpp"
         $131 = ((($130)) + 32|0); //@line 99 "./src/cpp/unrar/dll.cpp"
         $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24); //@line 99 "./src/cpp/unrar/dll.cpp"
         $133 = $132 | 8; //@line 99 "./src/cpp/unrar/dll.cpp"
         HEAP8[$131>>0]=$133&255;HEAP8[$131+1>>0]=($133>>8)&255;HEAP8[$131+2>>0]=($133>>16)&255;HEAP8[$131+3>>0]=$133>>24; //@line 99 "./src/cpp/unrar/dll.cpp"
        }
        $134 = $3; //@line 100 "./src/cpp/unrar/dll.cpp"
        $135 = ((($134)) + 92120|0); //@line 100 "./src/cpp/unrar/dll.cpp"
        $136 = ((($135)) + 56866|0); //@line 100 "./src/cpp/unrar/dll.cpp"
        $137 = HEAP8[$136>>0]|0; //@line 100 "./src/cpp/unrar/dll.cpp"
        $138 = $137&1; //@line 100 "./src/cpp/unrar/dll.cpp"
        if ($138) {
         $139 = $2; //@line 101 "./src/cpp/unrar/dll.cpp"
         $140 = ((($139)) + 32|0); //@line 101 "./src/cpp/unrar/dll.cpp"
         $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24); //@line 101 "./src/cpp/unrar/dll.cpp"
         $142 = $141 | 16; //@line 101 "./src/cpp/unrar/dll.cpp"
         HEAP8[$140>>0]=$142&255;HEAP8[$140+1>>0]=($142>>8)&255;HEAP8[$140+2>>0]=($142>>16)&255;HEAP8[$140+3>>0]=$142>>24; //@line 101 "./src/cpp/unrar/dll.cpp"
        }
        $143 = $3; //@line 102 "./src/cpp/unrar/dll.cpp"
        $144 = ((($143)) + 92120|0); //@line 102 "./src/cpp/unrar/dll.cpp"
        $145 = ((($144)) + 56864|0); //@line 102 "./src/cpp/unrar/dll.cpp"
        $146 = HEAP8[$145>>0]|0; //@line 102 "./src/cpp/unrar/dll.cpp"
        $147 = $146&1; //@line 102 "./src/cpp/unrar/dll.cpp"
        if ($147) {
         $148 = $2; //@line 103 "./src/cpp/unrar/dll.cpp"
         $149 = ((($148)) + 32|0); //@line 103 "./src/cpp/unrar/dll.cpp"
         $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24); //@line 103 "./src/cpp/unrar/dll.cpp"
         $151 = $150 | 32; //@line 103 "./src/cpp/unrar/dll.cpp"
         HEAP8[$149>>0]=$151&255;HEAP8[$149+1>>0]=($151>>8)&255;HEAP8[$149+2>>0]=($151>>16)&255;HEAP8[$149+3>>0]=$151>>24; //@line 103 "./src/cpp/unrar/dll.cpp"
        }
        $152 = $3; //@line 104 "./src/cpp/unrar/dll.cpp"
        $153 = ((($152)) + 92120|0); //@line 104 "./src/cpp/unrar/dll.cpp"
        $154 = ((($153)) + 56867|0); //@line 104 "./src/cpp/unrar/dll.cpp"
        $155 = HEAP8[$154>>0]|0; //@line 104 "./src/cpp/unrar/dll.cpp"
        $156 = $155&1; //@line 104 "./src/cpp/unrar/dll.cpp"
        if ($156) {
         $157 = $2; //@line 105 "./src/cpp/unrar/dll.cpp"
         $158 = ((($157)) + 32|0); //@line 105 "./src/cpp/unrar/dll.cpp"
         $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24); //@line 105 "./src/cpp/unrar/dll.cpp"
         $160 = $159 | 64; //@line 105 "./src/cpp/unrar/dll.cpp"
         HEAP8[$158>>0]=$160&255;HEAP8[$158+1>>0]=($160>>8)&255;HEAP8[$158+2>>0]=($160>>16)&255;HEAP8[$158+3>>0]=$160>>24; //@line 105 "./src/cpp/unrar/dll.cpp"
        }
        $161 = $3; //@line 106 "./src/cpp/unrar/dll.cpp"
        $162 = ((($161)) + 92120|0); //@line 106 "./src/cpp/unrar/dll.cpp"
        $163 = ((($162)) + 56868|0); //@line 106 "./src/cpp/unrar/dll.cpp"
        $164 = HEAP8[$163>>0]|0; //@line 106 "./src/cpp/unrar/dll.cpp"
        $165 = $164&1; //@line 106 "./src/cpp/unrar/dll.cpp"
        if ($165) {
         $166 = $2; //@line 107 "./src/cpp/unrar/dll.cpp"
         $167 = ((($166)) + 32|0); //@line 107 "./src/cpp/unrar/dll.cpp"
         $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24); //@line 107 "./src/cpp/unrar/dll.cpp"
         $169 = $168 | 128; //@line 107 "./src/cpp/unrar/dll.cpp"
         HEAP8[$167>>0]=$169&255;HEAP8[$167+1>>0]=($169>>8)&255;HEAP8[$167+2>>0]=($169>>16)&255;HEAP8[$167+3>>0]=$169>>24; //@line 107 "./src/cpp/unrar/dll.cpp"
        }
        $170 = $3; //@line 108 "./src/cpp/unrar/dll.cpp"
        $171 = ((($170)) + 92120|0); //@line 108 "./src/cpp/unrar/dll.cpp"
        $172 = ((($171)) + 56865|0); //@line 108 "./src/cpp/unrar/dll.cpp"
        $173 = HEAP8[$172>>0]|0; //@line 108 "./src/cpp/unrar/dll.cpp"
        $174 = $173&1; //@line 108 "./src/cpp/unrar/dll.cpp"
        if ($174) {
         $175 = $2; //@line 109 "./src/cpp/unrar/dll.cpp"
         $176 = ((($175)) + 32|0); //@line 109 "./src/cpp/unrar/dll.cpp"
         $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24); //@line 109 "./src/cpp/unrar/dll.cpp"
         $178 = $177 | 256; //@line 109 "./src/cpp/unrar/dll.cpp"
         HEAP8[$176>>0]=$178&255;HEAP8[$176+1>>0]=($178>>8)&255;HEAP8[$176+2>>0]=($178>>16)&255;HEAP8[$176+3>>0]=$178>>24; //@line 109 "./src/cpp/unrar/dll.cpp"
        }
        __THREW__ = 0;
        invoke_vi(58,($9|0)); //@line 111 "./src/cpp/unrar/dll.cpp"
        $179 = __THREW__; __THREW__ = 0;
        $180 = $179&1;
        if ($180) {
         label = 6;
        } else {
         $181 = $2; //@line 112 "./src/cpp/unrar/dll.cpp"
         $182 = ((($181)) + 20|0); //@line 112 "./src/cpp/unrar/dll.cpp"
         $183 = HEAPU8[$182>>0]|(HEAPU8[$182+1>>0]<<8)|(HEAPU8[$182+2>>0]<<16)|(HEAPU8[$182+3>>0]<<24); //@line 112 "./src/cpp/unrar/dll.cpp"
         $184 = ($183|0)!=(0); //@line 112 "./src/cpp/unrar/dll.cpp"
         L62: do {
          if ($184) {
           $185 = $3; //@line 112 "./src/cpp/unrar/dll.cpp"
           $186 = ((($185)) + 92120|0); //@line 112 "./src/cpp/unrar/dll.cpp"
           __THREW__ = 0;
           $187 = (invoke_iii(59,($186|0),($9|0))|0); //@line 112 "./src/cpp/unrar/dll.cpp"
           $188 = __THREW__; __THREW__ = 0;
           $189 = $188&1;
           if ($189) {
            label = 63;
            break;
           }
           if (!($187)) {
            label = 66;
            break;
           }
           __THREW__ = 0;
           $190 = (invoke_ii(60,($9|0))|0); //@line 114 "./src/cpp/unrar/dll.cpp"
           $191 = __THREW__; __THREW__ = 0;
           $192 = $191&1;
           if ($192) {
            label = 63;
            break;
           }
           $193 = $190<<2; //@line 114 "./src/cpp/unrar/dll.cpp"
           $194 = (($193) + 1)|0; //@line 114 "./src/cpp/unrar/dll.cpp"
           __THREW__ = 0;
           invoke_vii(61,($10|0),($194|0)); //@line 114 "./src/cpp/unrar/dll.cpp"
           $195 = __THREW__; __THREW__ = 0;
           $196 = $195&1;
           if ($196) {
            label = 63;
            break;
           }
           __THREW__ = 0;
           $197 = (invoke_iii(62,($10|0),0)|0); //@line 115 "./src/cpp/unrar/dll.cpp"
           $198 = __THREW__; __THREW__ = 0;
           $199 = $198&1;
           do {
            if (!($199)) {
             __THREW__ = 0;
             $200 = (invoke_ii(63,($10|0))|0); //@line 115 "./src/cpp/unrar/dll.cpp"
             $201 = __THREW__; __THREW__ = 0;
             $202 = $201&1;
             if ($202) {
              break;
             }
             _memset(($197|0),0,($200|0))|0; //@line 115 "./src/cpp/unrar/dll.cpp"
             __THREW__ = 0;
             $203 = (invoke_iii(64,($9|0),0)|0); //@line 116 "./src/cpp/unrar/dll.cpp"
             $204 = __THREW__; __THREW__ = 0;
             $205 = $204&1;
             if ($205) {
              break;
             }
             __THREW__ = 0;
             $206 = (invoke_iii(62,($10|0),0)|0); //@line 116 "./src/cpp/unrar/dll.cpp"
             $207 = __THREW__; __THREW__ = 0;
             $208 = $207&1;
             if ($208) {
              break;
             }
             __THREW__ = 0;
             $209 = (invoke_ii(63,($10|0))|0); //@line 116 "./src/cpp/unrar/dll.cpp"
             $210 = __THREW__; __THREW__ = 0;
             $211 = $210&1;
             if ($211) {
              break;
             }
             $212 = (($209) - 1)|0; //@line 116 "./src/cpp/unrar/dll.cpp"
             __THREW__ = 0;
             (invoke_iiii(65,($203|0),($206|0),($212|0))|0); //@line 116 "./src/cpp/unrar/dll.cpp"
             $213 = __THREW__; __THREW__ = 0;
             $214 = $213&1;
             if ($214) {
              break;
             }
             __THREW__ = 0;
             $215 = (invoke_iii(62,($10|0),0)|0); //@line 117 "./src/cpp/unrar/dll.cpp"
             $216 = __THREW__; __THREW__ = 0;
             $217 = $216&1;
             if ($217) {
              break;
             }
             __THREW__ = 0;
             $218 = (invoke_ii(66,($215|0))|0); //@line 117 "./src/cpp/unrar/dll.cpp"
             $219 = __THREW__; __THREW__ = 0;
             $220 = $219&1;
             if ($220) {
              break;
             }
             $221 = (($218) + 1)|0; //@line 117 "./src/cpp/unrar/dll.cpp"
             $11 = $221; //@line 117 "./src/cpp/unrar/dll.cpp"
             $222 = $2; //@line 119 "./src/cpp/unrar/dll.cpp"
             $223 = ((($222)) + 32|0); //@line 119 "./src/cpp/unrar/dll.cpp"
             $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24); //@line 119 "./src/cpp/unrar/dll.cpp"
             $225 = $224 | 2; //@line 119 "./src/cpp/unrar/dll.cpp"
             HEAP8[$223>>0]=$225&255;HEAP8[$223+1>>0]=($225>>8)&255;HEAP8[$223+2>>0]=($225>>16)&255;HEAP8[$223+3>>0]=$225>>24; //@line 119 "./src/cpp/unrar/dll.cpp"
             $226 = $11; //@line 120 "./src/cpp/unrar/dll.cpp"
             $227 = $2; //@line 120 "./src/cpp/unrar/dll.cpp"
             $228 = ((($227)) + 20|0); //@line 120 "./src/cpp/unrar/dll.cpp"
             $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24); //@line 120 "./src/cpp/unrar/dll.cpp"
             $230 = ($226>>>0)>($229>>>0); //@line 120 "./src/cpp/unrar/dll.cpp"
             $231 = $230 ? 20 : 1; //@line 120 "./src/cpp/unrar/dll.cpp"
             $232 = $2; //@line 120 "./src/cpp/unrar/dll.cpp"
             $233 = ((($232)) + 28|0); //@line 120 "./src/cpp/unrar/dll.cpp"
             HEAP8[$233>>0]=$231&255;HEAP8[$233+1>>0]=($231>>8)&255;HEAP8[$233+2>>0]=($231>>16)&255;HEAP8[$233+3>>0]=$231>>24; //@line 120 "./src/cpp/unrar/dll.cpp"
             $234 = $11; //@line 121 "./src/cpp/unrar/dll.cpp"
             $235 = $2; //@line 121 "./src/cpp/unrar/dll.cpp"
             $236 = ((($235)) + 20|0); //@line 121 "./src/cpp/unrar/dll.cpp"
             $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24); //@line 121 "./src/cpp/unrar/dll.cpp"
             $238 = ($234>>>0)<($237>>>0); //@line 121 "./src/cpp/unrar/dll.cpp"
             if ($238) {
              $239 = $11; //@line 121 "./src/cpp/unrar/dll.cpp"
              $245 = $239;
             } else {
              $240 = $2; //@line 121 "./src/cpp/unrar/dll.cpp"
              $241 = ((($240)) + 20|0); //@line 121 "./src/cpp/unrar/dll.cpp"
              $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24); //@line 121 "./src/cpp/unrar/dll.cpp"
              $245 = $242;
             }
             $243 = $2; //@line 121 "./src/cpp/unrar/dll.cpp"
             $244 = ((($243)) + 24|0); //@line 121 "./src/cpp/unrar/dll.cpp"
             HEAP8[$244>>0]=$245&255;HEAP8[$244+1>>0]=($245>>8)&255;HEAP8[$244+2>>0]=($245>>16)&255;HEAP8[$244+3>>0]=$245>>24; //@line 121 "./src/cpp/unrar/dll.cpp"
             $246 = $2; //@line 122 "./src/cpp/unrar/dll.cpp"
             $247 = ((($246)) + 16|0); //@line 122 "./src/cpp/unrar/dll.cpp"
             $248 = HEAPU8[$247>>0]|(HEAPU8[$247+1>>0]<<8)|(HEAPU8[$247+2>>0]<<16)|(HEAPU8[$247+3>>0]<<24); //@line 122 "./src/cpp/unrar/dll.cpp"
             __THREW__ = 0;
             $249 = (invoke_iii(62,($10|0),0)|0); //@line 122 "./src/cpp/unrar/dll.cpp"
             $250 = __THREW__; __THREW__ = 0;
             $251 = $250&1;
             if ($251) {
              break;
             }
             $252 = $2; //@line 122 "./src/cpp/unrar/dll.cpp"
             $253 = ((($252)) + 24|0); //@line 122 "./src/cpp/unrar/dll.cpp"
             $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24); //@line 122 "./src/cpp/unrar/dll.cpp"
             $255 = (($254) - 1)|0; //@line 122 "./src/cpp/unrar/dll.cpp"
             _memcpy(($248|0),($249|0),($255|0))|0; //@line 122 "./src/cpp/unrar/dll.cpp"
             $256 = $11; //@line 123 "./src/cpp/unrar/dll.cpp"
             $257 = $2; //@line 123 "./src/cpp/unrar/dll.cpp"
             $258 = ((($257)) + 20|0); //@line 123 "./src/cpp/unrar/dll.cpp"
             $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24); //@line 123 "./src/cpp/unrar/dll.cpp"
             $260 = ($256>>>0)<=($259>>>0); //@line 123 "./src/cpp/unrar/dll.cpp"
             if ($260) {
              $261 = $2; //@line 124 "./src/cpp/unrar/dll.cpp"
              $262 = ((($261)) + 16|0); //@line 124 "./src/cpp/unrar/dll.cpp"
              $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24); //@line 124 "./src/cpp/unrar/dll.cpp"
              $264 = $2; //@line 124 "./src/cpp/unrar/dll.cpp"
              $265 = ((($264)) + 24|0); //@line 124 "./src/cpp/unrar/dll.cpp"
              $266 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24); //@line 124 "./src/cpp/unrar/dll.cpp"
              $267 = (($266) - 1)|0; //@line 124 "./src/cpp/unrar/dll.cpp"
              $268 = (($263) + ($267)|0); //@line 124 "./src/cpp/unrar/dll.cpp"
              HEAP8[$268>>0] = 0; //@line 124 "./src/cpp/unrar/dll.cpp"
             }
             __ZN5ArrayIcED2Ev($10); //@line 125 "./src/cpp/unrar/dll.cpp"
             label = 67;
             break L62;
            }
           } while(0);
           $271 = ___cxa_find_matching_catch_4(8|0,352|0)|0;
           $272 = tempRet0;
           $4 = $271; //@line 148 "./src/cpp/unrar/dll.cpp"
           $5 = $272; //@line 148 "./src/cpp/unrar/dll.cpp"
           __ZN5ArrayIcED2Ev($10); //@line 125 "./src/cpp/unrar/dll.cpp"
          } else {
           label = 66;
          }
         } while(0);
         if ((label|0) == 66) {
          $273 = $2; //@line 127 "./src/cpp/unrar/dll.cpp"
          $274 = ((($273)) + 24|0); //@line 127 "./src/cpp/unrar/dll.cpp"
          HEAP8[$274>>0]=0&255;HEAP8[$274+1>>0]=(0>>8)&255;HEAP8[$274+2>>0]=(0>>16)&255;HEAP8[$274+3>>0]=0>>24; //@line 127 "./src/cpp/unrar/dll.cpp"
          $275 = $2; //@line 127 "./src/cpp/unrar/dll.cpp"
          $276 = ((($275)) + 28|0); //@line 127 "./src/cpp/unrar/dll.cpp"
          HEAP8[$276>>0]=0&255;HEAP8[$276+1>>0]=(0>>8)&255;HEAP8[$276+2>>0]=(0>>16)&255;HEAP8[$276+3>>0]=0>>24; //@line 127 "./src/cpp/unrar/dll.cpp"
          label = 67;
         }
         do {
          if ((label|0) == 67) {
           $277 = $3; //@line 128 "./src/cpp/unrar/dll.cpp"
           $278 = ((($277)) + 157248|0); //@line 128 "./src/cpp/unrar/dll.cpp"
           $279 = $3; //@line 128 "./src/cpp/unrar/dll.cpp"
           $280 = ((($279)) + 92120|0); //@line 128 "./src/cpp/unrar/dll.cpp"
           __THREW__ = 0;
           invoke_vii(67,($278|0),($280|0)); //@line 128 "./src/cpp/unrar/dll.cpp"
           $281 = __THREW__; __THREW__ = 0;
           $282 = $281&1;
           if ($282) {
            label = 63;
            break;
           }
           $283 = $3; //@line 129 "./src/cpp/unrar/dll.cpp"
           $1 = $283; //@line 129 "./src/cpp/unrar/dll.cpp"
           __ZN5ArrayIwED2Ev($9); //@line 130 "./src/cpp/unrar/dll.cpp"
           $322 = $1; //@line 148 "./src/cpp/unrar/dll.cpp"
           STACKTOP = sp;return ($322|0); //@line 148 "./src/cpp/unrar/dll.cpp"
          }
         } while(0);
         if ((label|0) == 63) {
          $269 = ___cxa_find_matching_catch_4(8|0,352|0)|0;
          $270 = tempRet0;
          $4 = $269; //@line 148 "./src/cpp/unrar/dll.cpp"
          $5 = $270; //@line 148 "./src/cpp/unrar/dll.cpp"
         }
         __ZN5ArrayIwED2Ev($9); //@line 130 "./src/cpp/unrar/dll.cpp"
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $39 = ___cxa_find_matching_catch_4(8|0,352|0)|0;
  $40 = tempRet0;
  $4 = $39; //@line 148 "./src/cpp/unrar/dll.cpp"
  $5 = $40; //@line 148 "./src/cpp/unrar/dll.cpp"
 }
 $284 = $5; //@line 130 "./src/cpp/unrar/dll.cpp"
 $285 = (_llvm_eh_typeid_for((8|0))|0); //@line 130 "./src/cpp/unrar/dll.cpp"
 $286 = ($284|0)==($285|0); //@line 130 "./src/cpp/unrar/dll.cpp"
 if (!($286)) {
  $300 = (_llvm_eh_typeid_for((352|0))|0); //@line 130 "./src/cpp/unrar/dll.cpp"
  $301 = ($284|0)==($300|0); //@line 130 "./src/cpp/unrar/dll.cpp"
  if (!($301)) {
   $323 = $4; //@line 130 "./src/cpp/unrar/dll.cpp"
   $324 = $5; //@line 130 "./src/cpp/unrar/dll.cpp"
   ___resumeException($323|0);
   // unreachable;
  }
  $302 = $4; //@line 130 "./src/cpp/unrar/dll.cpp"
  $303 = (___cxa_begin_catch(($302|0))|0); //@line 130 "./src/cpp/unrar/dll.cpp"
  $12 = $303; //@line 130 "./src/cpp/unrar/dll.cpp"
  $304 = $2; //@line 143 "./src/cpp/unrar/dll.cpp"
  $305 = ((($304)) + 12|0); //@line 143 "./src/cpp/unrar/dll.cpp"
  HEAP8[$305>>0]=11&255;HEAP8[$305+1>>0]=(11>>8)&255;HEAP8[$305+2>>0]=(11>>16)&255;HEAP8[$305+3>>0]=11>>24; //@line 143 "./src/cpp/unrar/dll.cpp"
  $306 = $3; //@line 144 "./src/cpp/unrar/dll.cpp"
  $307 = ($306|0)!=(0|0); //@line 144 "./src/cpp/unrar/dll.cpp"
  if ($307) {
   $308 = $3; //@line 145 "./src/cpp/unrar/dll.cpp"
   $309 = ($308|0)==(0|0); //@line 145 "./src/cpp/unrar/dll.cpp"
   if (!($309)) {
    __ZN7DataSetD2Ev($308); //@line 145 "./src/cpp/unrar/dll.cpp"
    __ZdlPv($308); //@line 145 "./src/cpp/unrar/dll.cpp"
   }
  }
  ___cxa_end_catch(); //@line 146 "./src/cpp/unrar/dll.cpp"
  $1 = 0; //@line 147 "./src/cpp/unrar/dll.cpp"
  $322 = $1; //@line 148 "./src/cpp/unrar/dll.cpp"
  STACKTOP = sp;return ($322|0); //@line 148 "./src/cpp/unrar/dll.cpp"
 }
 $287 = $4; //@line 146 "./src/cpp/unrar/dll.cpp"
 $288 = (___cxa_begin_catch(($287|0))|0); //@line 146 "./src/cpp/unrar/dll.cpp"
 $289 = HEAP32[$288>>2]|0; //@line 146 "./src/cpp/unrar/dll.cpp"
 $13 = $289; //@line 146 "./src/cpp/unrar/dll.cpp"
 $290 = $3; //@line 133 "./src/cpp/unrar/dll.cpp"
 $291 = ($290|0)!=(0|0); //@line 133 "./src/cpp/unrar/dll.cpp"
 if ($291) {
  $292 = $3; //@line 133 "./src/cpp/unrar/dll.cpp"
  $293 = ((($292)) + 75176|0); //@line 133 "./src/cpp/unrar/dll.cpp"
  $294 = HEAP32[$293>>2]|0; //@line 133 "./src/cpp/unrar/dll.cpp"
  $295 = ($294|0)!=(0); //@line 133 "./src/cpp/unrar/dll.cpp"
  if ($295) {
   $296 = $3; //@line 134 "./src/cpp/unrar/dll.cpp"
   $297 = ((($296)) + 75176|0); //@line 134 "./src/cpp/unrar/dll.cpp"
   $298 = HEAP32[$297>>2]|0; //@line 134 "./src/cpp/unrar/dll.cpp"
   $299 = $2; //@line 134 "./src/cpp/unrar/dll.cpp"
   $$sink5 = $298;$$sink7 = $299;
  } else {
   label = 79;
  }
 } else {
  label = 79;
 }
 do {
  if ((label|0) == 79) {
   $310 = $13; //@line 136 "./src/cpp/unrar/dll.cpp"
   __THREW__ = 0;
   $311 = (invoke_ii(57,($310|0))|0); //@line 136 "./src/cpp/unrar/dll.cpp"
   $312 = __THREW__; __THREW__ = 0;
   $313 = $312&1;
   if (!($313)) {
    $314 = $2; //@line 136 "./src/cpp/unrar/dll.cpp"
    $$sink5 = $311;$$sink7 = $314;
    break;
   }
   $315 = ___cxa_find_matching_catch_2()|0;
   $316 = tempRet0;
   $4 = $315; //@line 148 "./src/cpp/unrar/dll.cpp"
   $5 = $316; //@line 148 "./src/cpp/unrar/dll.cpp"
   ___cxa_end_catch(); //@line 140 "./src/cpp/unrar/dll.cpp"
   $323 = $4; //@line 130 "./src/cpp/unrar/dll.cpp"
   $324 = $5; //@line 130 "./src/cpp/unrar/dll.cpp"
   ___resumeException($323|0);
   // unreachable;
  }
 } while(0);
 $317 = ((($$sink7)) + 12|0);
 HEAP8[$317>>0]=$$sink5&255;HEAP8[$317+1>>0]=($$sink5>>8)&255;HEAP8[$317+2>>0]=($$sink5>>16)&255;HEAP8[$317+3>>0]=$$sink5>>24;
 $318 = $3; //@line 137 "./src/cpp/unrar/dll.cpp"
 $319 = ($318|0)!=(0|0); //@line 137 "./src/cpp/unrar/dll.cpp"
 if ($319) {
  $320 = $3; //@line 138 "./src/cpp/unrar/dll.cpp"
  $321 = ($320|0)==(0|0); //@line 138 "./src/cpp/unrar/dll.cpp"
  if (!($321)) {
   __ZN7DataSetD2Ev($320); //@line 138 "./src/cpp/unrar/dll.cpp"
   __ZdlPv($320); //@line 138 "./src/cpp/unrar/dll.cpp"
  }
 }
 $1 = 0; //@line 139 "./src/cpp/unrar/dll.cpp"
 ___cxa_end_catch(); //@line 140 "./src/cpp/unrar/dll.cpp"
 $322 = $1; //@line 148 "./src/cpp/unrar/dll.cpp"
 STACKTOP = sp;return ($322|0); //@line 148 "./src/cpp/unrar/dll.cpp"
}
function __ZN7DataSetC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __ZN11CommandDataC2Ev($4); //@line 13 "./src/cpp/unrar/dll.cpp"
 $5 = ((($4)) + 92120|0); //@line 13 "./src/cpp/unrar/dll.cpp"
 __THREW__ = 0;
 invoke_vii(68,($5|0),($4|0)); //@line 13 "./src/cpp/unrar/dll.cpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $11 = ___cxa_find_matching_catch_2()|0;
  $12 = tempRet0;
  $2 = $11; //@line 13 "./src/cpp/unrar/dll.cpp"
  $3 = $12; //@line 13 "./src/cpp/unrar/dll.cpp"
  __ZN11CommandDataD2Ev($4); //@line 13 "./src/cpp/unrar/dll.cpp"
  $15 = $2; //@line 13 "./src/cpp/unrar/dll.cpp"
  $16 = $3; //@line 13 "./src/cpp/unrar/dll.cpp"
  ___resumeException($15|0);
  // unreachable;
 }
 $8 = ((($4)) + 157248|0); //@line 13 "./src/cpp/unrar/dll.cpp"
 __THREW__ = 0;
 invoke_vii(69,($8|0),($4|0)); //@line 13 "./src/cpp/unrar/dll.cpp"
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  STACKTOP = sp;return; //@line 13 "./src/cpp/unrar/dll.cpp"
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $2 = $13; //@line 13 "./src/cpp/unrar/dll.cpp"
 $3 = $14; //@line 13 "./src/cpp/unrar/dll.cpp"
 __ZN7ArchiveD2Ev($5); //@line 13 "./src/cpp/unrar/dll.cpp"
 __ZN11CommandDataD2Ev($4); //@line 13 "./src/cpp/unrar/dll.cpp"
 $15 = $2; //@line 13 "./src/cpp/unrar/dll.cpp"
 $16 = $3; //@line 13 "./src/cpp/unrar/dll.cpp"
 ___resumeException($15|0);
 // unreachable;
}
function __ZN7DataSetD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 157248|0); //@line 5 "./src/cpp/unrar/dll.cpp"
 __ZN10CmdExtractD2Ev($3); //@line 5 "./src/cpp/unrar/dll.cpp"
 $4 = ((($2)) + 92120|0); //@line 5 "./src/cpp/unrar/dll.cpp"
 __ZN7ArchiveD2Ev($4); //@line 5 "./src/cpp/unrar/dll.cpp"
 __ZN11CommandDataD2Ev($2); //@line 5 "./src/cpp/unrar/dll.cpp"
 STACKTOP = sp;return; //@line 5 "./src/cpp/unrar/dll.cpp"
}
function __ZN12ErrorHandler12GetErrorCodeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 55 "./src/cpp/unrar/errhnd.hpp"
 STACKTOP = sp;return ($3|0); //@line 55 "./src/cpp/unrar/errhnd.hpp"
}
function __ZL13RarErrorToDll8RAR_EXIT($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 442 "./src/cpp/unrar/dll.cpp"
 switch ($3|0) {
 case 2:  {
  $1 = 18; //@line 445 "./src/cpp/unrar/dll.cpp"
  break;
 }
 case 3:  {
  $1 = 12; //@line 447 "./src/cpp/unrar/dll.cpp"
  break;
 }
 case 5:  {
  $1 = 19; //@line 449 "./src/cpp/unrar/dll.cpp"
  break;
 }
 case 6:  {
  $1 = 15; //@line 451 "./src/cpp/unrar/dll.cpp"
  break;
 }
 case 9:  {
  $1 = 16; //@line 453 "./src/cpp/unrar/dll.cpp"
  break;
 }
 case 8:  {
  $1 = 11; //@line 455 "./src/cpp/unrar/dll.cpp"
  break;
 }
 case 11:  {
  $1 = 24; //@line 457 "./src/cpp/unrar/dll.cpp"
  break;
 }
 case 0:  {
  $1 = 0; //@line 459 "./src/cpp/unrar/dll.cpp"
  break;
 }
 default: {
  $1 = 21; //@line 461 "./src/cpp/unrar/dll.cpp"
 }
 }
 $4 = $1; //@line 463 "./src/cpp/unrar/dll.cpp"
 STACKTOP = sp;return ($4|0); //@line 463 "./src/cpp/unrar/dll.cpp"
}
function __ZN5ArrayIwEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5ArrayIwE9CleanDataEv($2); //@line 44 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 45 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIwE4SizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 86 "./src/cpp/unrar/array.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 86 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($4|0); //@line 86 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIcEC2Ej($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5ArrayIcE9CleanDataEv($4); //@line 50 "./src/cpp/unrar/array.hpp"
 $5 = $3; //@line 51 "./src/cpp/unrar/array.hpp"
 __ZN5ArrayIcE3AddEj($4,$5); //@line 51 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 52 "./src/cpp/unrar/array.hpp"
}
function __ZNK5ArrayIcEixEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 74 "./src/cpp/unrar/array.hpp"
 $6 = $3; //@line 74 "./src/cpp/unrar/array.hpp"
 $7 = (($5) + ($6)|0); //@line 74 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($7|0); //@line 74 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIcE4SizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 86 "./src/cpp/unrar/array.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 86 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($4|0); //@line 86 "./src/cpp/unrar/array.hpp"
}
function __ZNK5ArrayIwEixEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 74 "./src/cpp/unrar/array.hpp"
 $6 = $3; //@line 74 "./src/cpp/unrar/array.hpp"
 $7 = (($5) + ($6<<2)|0); //@line 74 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($7|0); //@line 74 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIcED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 67 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 67 "./src/cpp/unrar/array.hpp"
 if (!($4)) {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
 $5 = HEAP32[$2>>2]|0; //@line 68 "./src/cpp/unrar/array.hpp"
 __THREW__ = 0;
 invoke_vi(70,($5|0)); //@line 68 "./src/cpp/unrar/array.hpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_3(0|0)|0;
  $9 = tempRet0;
  ___clang_call_terminate($8); //@line 68 "./src/cpp/unrar/array.hpp"
  // unreachable; //@line 68 "./src/cpp/unrar/array.hpp"
 } else {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
}
function __ZN5ArrayIwED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 67 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 67 "./src/cpp/unrar/array.hpp"
 if (!($4)) {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
 $5 = HEAP32[$2>>2]|0; //@line 68 "./src/cpp/unrar/array.hpp"
 __THREW__ = 0;
 invoke_vi(70,($5|0)); //@line 68 "./src/cpp/unrar/array.hpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_3(0|0)|0;
  $9 = tempRet0;
  ___clang_call_terminate($8); //@line 68 "./src/cpp/unrar/array.hpp"
  // unreachable; //@line 68 "./src/cpp/unrar/array.hpp"
 } else {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
}
function _RARCloseArchive($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 153 "./src/cpp/unrar/dll.cpp"
 $2 = $4; //@line 153 "./src/cpp/unrar/dll.cpp"
 $5 = $2; //@line 154 "./src/cpp/unrar/dll.cpp"
 $6 = ($5|0)==(0|0); //@line 154 "./src/cpp/unrar/dll.cpp"
 if ($6) {
  $11 = 0;
 } else {
  $7 = $2; //@line 154 "./src/cpp/unrar/dll.cpp"
  $8 = ((($7)) + 92120|0); //@line 154 "./src/cpp/unrar/dll.cpp"
  $9 = (__ZN4File5CloseEv($8)|0); //@line 154 "./src/cpp/unrar/dll.cpp"
  $11 = $9;
 }
 $10 = $11&1; //@line 154 "./src/cpp/unrar/dll.cpp"
 $3 = $10; //@line 154 "./src/cpp/unrar/dll.cpp"
 $12 = $2; //@line 155 "./src/cpp/unrar/dll.cpp"
 $13 = ($12|0)==(0|0); //@line 155 "./src/cpp/unrar/dll.cpp"
 if (!($13)) {
  __ZN7DataSetD2Ev($12); //@line 155 "./src/cpp/unrar/dll.cpp"
  __ZdlPv($12); //@line 155 "./src/cpp/unrar/dll.cpp"
 }
 $14 = $3; //@line 156 "./src/cpp/unrar/dll.cpp"
 $15 = $14&1; //@line 156 "./src/cpp/unrar/dll.cpp"
 $16 = $15 ? 0 : 17; //@line 156 "./src/cpp/unrar/dll.cpp"
 STACKTOP = sp;return ($16|0); //@line 156 "./src/cpp/unrar/dll.cpp"
}
function _RARReadHeaderEx($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $$sink2 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, src = 0;
 var stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $3 = $0;
 $4 = $1;
 $11 = $3; //@line 187 "./src/cpp/unrar/dll.cpp"
 $5 = $11; //@line 187 "./src/cpp/unrar/dll.cpp"
 $12 = $5; //@line 190 "./src/cpp/unrar/dll.cpp"
 $13 = ((($12)) + 92120|0); //@line 190 "./src/cpp/unrar/dll.cpp"
 __THREW__ = 0;
 $14 = (invoke_iii(71,($13|0),2)|0); //@line 190 "./src/cpp/unrar/dll.cpp"
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if (!($16)) {
   $17 = $5; //@line 190 "./src/cpp/unrar/dll.cpp"
   $18 = ((($17)) + 173868|0); //@line 190 "./src/cpp/unrar/dll.cpp"
   HEAP32[$18>>2] = $14; //@line 190 "./src/cpp/unrar/dll.cpp"
   $19 = ($14|0)<=(0); //@line 190 "./src/cpp/unrar/dll.cpp"
   $20 = $5;
   $21 = ((($20)) + 92120|0);
   if ($19) {
    $22 = ((($21)) + 56861|0); //@line 192 "./src/cpp/unrar/dll.cpp"
    $23 = HEAP8[$22>>0]|0; //@line 192 "./src/cpp/unrar/dll.cpp"
    $24 = $23&1; //@line 192 "./src/cpp/unrar/dll.cpp"
    if ($24) {
     $25 = $5; //@line 192 "./src/cpp/unrar/dll.cpp"
     $26 = ((($25)) + 92120|0); //@line 192 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     $27 = (invoke_ii(72,($26|0))|0); //@line 192 "./src/cpp/unrar/dll.cpp"
     $28 = __THREW__; __THREW__ = 0;
     $29 = $28&1;
     if ($29) {
      break;
     }
     $30 = ($27|0)==(5); //@line 192 "./src/cpp/unrar/dll.cpp"
     if ($30) {
      $31 = $5; //@line 193 "./src/cpp/unrar/dll.cpp"
      $32 = ((($31)) + 92120|0); //@line 193 "./src/cpp/unrar/dll.cpp"
      $33 = ((($32)) + 38576|0); //@line 193 "./src/cpp/unrar/dll.cpp"
      $34 = ((($33)) + 28|0); //@line 193 "./src/cpp/unrar/dll.cpp"
      $35 = HEAP8[$34>>0]|0; //@line 193 "./src/cpp/unrar/dll.cpp"
      $36 = $35&1; //@line 193 "./src/cpp/unrar/dll.cpp"
      if ($36) {
       $37 = $5; //@line 194 "./src/cpp/unrar/dll.cpp"
       $38 = ((($37)) + 92120|0); //@line 194 "./src/cpp/unrar/dll.cpp"
       __THREW__ = 0;
       $39 = (invoke_iiiii(73,($38|0),(0|0),0,76)|0); //@line 194 "./src/cpp/unrar/dll.cpp"
       $40 = __THREW__; __THREW__ = 0;
       $41 = $40&1;
       if ($41) {
        break;
       }
       if (!($39)) {
        $2 = 15; //@line 200 "./src/cpp/unrar/dll.cpp"
        $333 = $2; //@line 290 "./src/cpp/unrar/dll.cpp"
        STACKTOP = sp;return ($333|0); //@line 290 "./src/cpp/unrar/dll.cpp"
       }
       $42 = $5; //@line 196 "./src/cpp/unrar/dll.cpp"
       $43 = ((($42)) + 92120|0); //@line 196 "./src/cpp/unrar/dll.cpp"
       $44 = $5; //@line 196 "./src/cpp/unrar/dll.cpp"
       $45 = ((($44)) + 92120|0); //@line 196 "./src/cpp/unrar/dll.cpp"
       $46 = ((($45)) + 56840|0); //@line 196 "./src/cpp/unrar/dll.cpp"
       $47 = $46; //@line 196 "./src/cpp/unrar/dll.cpp"
       $48 = $47; //@line 196 "./src/cpp/unrar/dll.cpp"
       $49 = HEAP32[$48>>2]|0; //@line 196 "./src/cpp/unrar/dll.cpp"
       $50 = (($47) + 4)|0; //@line 196 "./src/cpp/unrar/dll.cpp"
       $51 = $50; //@line 196 "./src/cpp/unrar/dll.cpp"
       $52 = HEAP32[$51>>2]|0; //@line 196 "./src/cpp/unrar/dll.cpp"
       __THREW__ = 0;
       invoke_viiii(5,($43|0),($49|0),($52|0),0); //@line 196 "./src/cpp/unrar/dll.cpp"
       $53 = __THREW__; __THREW__ = 0;
       $54 = $53&1;
       if ($54) {
        break;
       }
       $55 = $3; //@line 197 "./src/cpp/unrar/dll.cpp"
       $56 = $4; //@line 197 "./src/cpp/unrar/dll.cpp"
       __THREW__ = 0;
       $57 = (invoke_iii(74,($55|0),($56|0))|0); //@line 197 "./src/cpp/unrar/dll.cpp"
       $58 = __THREW__; __THREW__ = 0;
       $59 = $58&1;
       if ($59) {
        break;
       }
       $2 = $57; //@line 197 "./src/cpp/unrar/dll.cpp"
       $333 = $2; //@line 290 "./src/cpp/unrar/dll.cpp"
       STACKTOP = sp;return ($333|0); //@line 290 "./src/cpp/unrar/dll.cpp"
      }
     }
    }
    $80 = $5; //@line 202 "./src/cpp/unrar/dll.cpp"
    $81 = ((($80)) + 92120|0); //@line 202 "./src/cpp/unrar/dll.cpp"
    $82 = ((($81)) + 56876|0); //@line 202 "./src/cpp/unrar/dll.cpp"
    $83 = HEAP8[$82>>0]|0; //@line 202 "./src/cpp/unrar/dll.cpp"
    $84 = $83&1; //@line 202 "./src/cpp/unrar/dll.cpp"
    if ($84) {
     $2 = 12; //@line 203 "./src/cpp/unrar/dll.cpp"
     $333 = $2; //@line 290 "./src/cpp/unrar/dll.cpp"
     STACKTOP = sp;return ($333|0); //@line 290 "./src/cpp/unrar/dll.cpp"
    }
    $85 = $5; //@line 207 "./src/cpp/unrar/dll.cpp"
    $86 = ((($85)) + 92120|0); //@line 207 "./src/cpp/unrar/dll.cpp"
    $87 = ((($86)) + 56877|0); //@line 207 "./src/cpp/unrar/dll.cpp"
    $88 = HEAP8[$87>>0]|0; //@line 207 "./src/cpp/unrar/dll.cpp"
    $89 = $88&1; //@line 207 "./src/cpp/unrar/dll.cpp"
    if ($89) {
     $2 = 24; //@line 208 "./src/cpp/unrar/dll.cpp"
     $333 = $2; //@line 290 "./src/cpp/unrar/dll.cpp"
     STACKTOP = sp;return ($333|0); //@line 290 "./src/cpp/unrar/dll.cpp"
    } else {
     $2 = 10; //@line 210 "./src/cpp/unrar/dll.cpp"
     $333 = $2; //@line 290 "./src/cpp/unrar/dll.cpp"
     STACKTOP = sp;return ($333|0); //@line 290 "./src/cpp/unrar/dll.cpp"
    }
   }
   $90 = ((($21)) + 21424|0); //@line 212 "./src/cpp/unrar/dll.cpp"
   $8 = $90; //@line 212 "./src/cpp/unrar/dll.cpp"
   $91 = $5; //@line 213 "./src/cpp/unrar/dll.cpp"
   $92 = ((($91)) + 173864|0); //@line 213 "./src/cpp/unrar/dll.cpp"
   $93 = HEAP32[$92>>2]|0; //@line 213 "./src/cpp/unrar/dll.cpp"
   $94 = ($93|0)==(0); //@line 213 "./src/cpp/unrar/dll.cpp"
   if ($94) {
    $95 = $8; //@line 213 "./src/cpp/unrar/dll.cpp"
    $96 = ((($95)) + 8328|0); //@line 213 "./src/cpp/unrar/dll.cpp"
    $97 = HEAP8[$96>>0]|0; //@line 213 "./src/cpp/unrar/dll.cpp"
    $98 = $97&1; //@line 213 "./src/cpp/unrar/dll.cpp"
    if ($98) {
     $99 = $3; //@line 215 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     $100 = (invoke_iiiii(75,($99|0),0,(0|0),(0|0))|0); //@line 215 "./src/cpp/unrar/dll.cpp"
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      break;
     }
     $9 = $100; //@line 215 "./src/cpp/unrar/dll.cpp"
     $103 = $9; //@line 216 "./src/cpp/unrar/dll.cpp"
     $104 = ($103|0)==(0); //@line 216 "./src/cpp/unrar/dll.cpp"
     if (!($104)) {
      $110 = $9; //@line 219 "./src/cpp/unrar/dll.cpp"
      $2 = $110; //@line 219 "./src/cpp/unrar/dll.cpp"
      $333 = $2; //@line 290 "./src/cpp/unrar/dll.cpp"
      STACKTOP = sp;return ($333|0); //@line 290 "./src/cpp/unrar/dll.cpp"
     }
     $105 = $3; //@line 217 "./src/cpp/unrar/dll.cpp"
     $106 = $4; //@line 217 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     $107 = (invoke_iii(74,($105|0),($106|0))|0); //@line 217 "./src/cpp/unrar/dll.cpp"
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      break;
     }
     $2 = $107; //@line 217 "./src/cpp/unrar/dll.cpp"
     $333 = $2; //@line 290 "./src/cpp/unrar/dll.cpp"
     STACKTOP = sp;return ($333|0); //@line 290 "./src/cpp/unrar/dll.cpp"
    }
   }
   $111 = $4; //@line 221 "./src/cpp/unrar/dll.cpp"
   $112 = ((($111)) + 1024|0); //@line 221 "./src/cpp/unrar/dll.cpp"
   $113 = $5; //@line 221 "./src/cpp/unrar/dll.cpp"
   $114 = ((($113)) + 92120|0); //@line 221 "./src/cpp/unrar/dll.cpp"
   $115 = ((($114)) + 24|0); //@line 221 "./src/cpp/unrar/dll.cpp"
   __THREW__ = 0;
   (invoke_iiii(76,($112|0),($115|0),1024)|0); //@line 221 "./src/cpp/unrar/dll.cpp"
   $116 = __THREW__; __THREW__ = 0;
   $117 = $116&1;
   if (!($117)) {
    $118 = $4; //@line 222 "./src/cpp/unrar/dll.cpp"
    $119 = ((($118)) + 1024|0); //@line 222 "./src/cpp/unrar/dll.cpp"
    $120 = $4; //@line 222 "./src/cpp/unrar/dll.cpp"
    __THREW__ = 0;
    (invoke_iiii(65,($119|0),($120|0),1024)|0); //@line 222 "./src/cpp/unrar/dll.cpp"
    $121 = __THREW__; __THREW__ = 0;
    $122 = $121&1;
    if (!($122)) {
     $123 = $4; //@line 224 "./src/cpp/unrar/dll.cpp"
     $124 = ((($123)) + 6144|0); //@line 224 "./src/cpp/unrar/dll.cpp"
     $125 = $8; //@line 224 "./src/cpp/unrar/dll.cpp"
     $126 = ((($125)) + 32|0); //@line 224 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     (invoke_iiii(76,($124|0),($126|0),1024)|0); //@line 224 "./src/cpp/unrar/dll.cpp"
     $127 = __THREW__; __THREW__ = 0;
     $128 = $127&1;
     if (!($128)) {
      $129 = $4; //@line 225 "./src/cpp/unrar/dll.cpp"
      $130 = ((($129)) + 6144|0); //@line 225 "./src/cpp/unrar/dll.cpp"
      $131 = $4; //@line 225 "./src/cpp/unrar/dll.cpp"
      $132 = ((($131)) + 5120|0); //@line 225 "./src/cpp/unrar/dll.cpp"
      __THREW__ = 0;
      (invoke_iiii(65,($130|0),($132|0),1024)|0); //@line 225 "./src/cpp/unrar/dll.cpp"
      $133 = __THREW__; __THREW__ = 0;
      $134 = $133&1;
      if (!($134)) {
       $135 = $4; //@line 230 "./src/cpp/unrar/dll.cpp"
       $136 = ((($135)) + 10240|0); //@line 230 "./src/cpp/unrar/dll.cpp"
       HEAP8[$136>>0]=0&255;HEAP8[$136+1>>0]=(0>>8)&255;HEAP8[$136+2>>0]=(0>>16)&255;HEAP8[$136+3>>0]=0>>24; //@line 230 "./src/cpp/unrar/dll.cpp"
       $137 = $8; //@line 231 "./src/cpp/unrar/dll.cpp"
       $138 = ((($137)) + 8328|0); //@line 231 "./src/cpp/unrar/dll.cpp"
       $139 = HEAP8[$138>>0]|0; //@line 231 "./src/cpp/unrar/dll.cpp"
       $140 = $139&1; //@line 231 "./src/cpp/unrar/dll.cpp"
       if ($140) {
        $141 = $4; //@line 232 "./src/cpp/unrar/dll.cpp"
        $142 = ((($141)) + 10240|0); //@line 232 "./src/cpp/unrar/dll.cpp"
        $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24); //@line 232 "./src/cpp/unrar/dll.cpp"
        $144 = $143 | 1; //@line 232 "./src/cpp/unrar/dll.cpp"
        HEAP8[$142>>0]=$144&255;HEAP8[$142+1>>0]=($144>>8)&255;HEAP8[$142+2>>0]=($144>>16)&255;HEAP8[$142+3>>0]=$144>>24; //@line 232 "./src/cpp/unrar/dll.cpp"
       }
       $145 = $8; //@line 233 "./src/cpp/unrar/dll.cpp"
       $146 = ((($145)) + 8329|0); //@line 233 "./src/cpp/unrar/dll.cpp"
       $147 = HEAP8[$146>>0]|0; //@line 233 "./src/cpp/unrar/dll.cpp"
       $148 = $147&1; //@line 233 "./src/cpp/unrar/dll.cpp"
       if ($148) {
        $149 = $4; //@line 234 "./src/cpp/unrar/dll.cpp"
        $150 = ((($149)) + 10240|0); //@line 234 "./src/cpp/unrar/dll.cpp"
        $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24); //@line 234 "./src/cpp/unrar/dll.cpp"
        $152 = $151 | 2; //@line 234 "./src/cpp/unrar/dll.cpp"
        HEAP8[$150>>0]=$152&255;HEAP8[$150+1>>0]=($152>>8)&255;HEAP8[$150+2>>0]=($152>>16)&255;HEAP8[$150+3>>0]=$152>>24; //@line 234 "./src/cpp/unrar/dll.cpp"
       }
       $153 = $8; //@line 235 "./src/cpp/unrar/dll.cpp"
       $154 = ((($153)) + 8331|0); //@line 235 "./src/cpp/unrar/dll.cpp"
       $155 = HEAP8[$154>>0]|0; //@line 235 "./src/cpp/unrar/dll.cpp"
       $156 = $155&1; //@line 235 "./src/cpp/unrar/dll.cpp"
       if ($156) {
        $157 = $4; //@line 236 "./src/cpp/unrar/dll.cpp"
        $158 = ((($157)) + 10240|0); //@line 236 "./src/cpp/unrar/dll.cpp"
        $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24); //@line 236 "./src/cpp/unrar/dll.cpp"
        $160 = $159 | 4; //@line 236 "./src/cpp/unrar/dll.cpp"
        HEAP8[$158>>0]=$160&255;HEAP8[$158+1>>0]=($160>>8)&255;HEAP8[$158+2>>0]=($160>>16)&255;HEAP8[$158+3>>0]=$160>>24; //@line 236 "./src/cpp/unrar/dll.cpp"
       }
       $161 = $8; //@line 237 "./src/cpp/unrar/dll.cpp"
       $162 = ((($161)) + 8416|0); //@line 237 "./src/cpp/unrar/dll.cpp"
       $163 = HEAP8[$162>>0]|0; //@line 237 "./src/cpp/unrar/dll.cpp"
       $164 = $163&1; //@line 237 "./src/cpp/unrar/dll.cpp"
       if ($164) {
        $165 = $4; //@line 238 "./src/cpp/unrar/dll.cpp"
        $166 = ((($165)) + 10240|0); //@line 238 "./src/cpp/unrar/dll.cpp"
        $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24); //@line 238 "./src/cpp/unrar/dll.cpp"
        $168 = $167 | 16; //@line 238 "./src/cpp/unrar/dll.cpp"
        HEAP8[$166>>0]=$168&255;HEAP8[$166+1>>0]=($168>>8)&255;HEAP8[$166+2>>0]=($168>>16)&255;HEAP8[$166+3>>0]=$168>>24; //@line 238 "./src/cpp/unrar/dll.cpp"
       }
       $169 = $8; //@line 239 "./src/cpp/unrar/dll.cpp"
       $170 = ((($169)) + 8417|0); //@line 239 "./src/cpp/unrar/dll.cpp"
       $171 = HEAP8[$170>>0]|0; //@line 239 "./src/cpp/unrar/dll.cpp"
       $172 = $171&1; //@line 239 "./src/cpp/unrar/dll.cpp"
       if ($172) {
        $173 = $4; //@line 240 "./src/cpp/unrar/dll.cpp"
        $174 = ((($173)) + 10240|0); //@line 240 "./src/cpp/unrar/dll.cpp"
        $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24); //@line 240 "./src/cpp/unrar/dll.cpp"
        $176 = $175 | 32; //@line 240 "./src/cpp/unrar/dll.cpp"
        HEAP8[$174>>0]=$176&255;HEAP8[$174+1>>0]=($176>>8)&255;HEAP8[$174+2>>0]=($176>>16)&255;HEAP8[$174+3>>0]=$176>>24; //@line 240 "./src/cpp/unrar/dll.cpp"
       }
       $177 = $8; //@line 242 "./src/cpp/unrar/dll.cpp"
       $178 = ((($177)) + 8264|0); //@line 242 "./src/cpp/unrar/dll.cpp"
       $179 = $178; //@line 242 "./src/cpp/unrar/dll.cpp"
       $180 = $179; //@line 242 "./src/cpp/unrar/dll.cpp"
       $181 = HEAP32[$180>>2]|0; //@line 242 "./src/cpp/unrar/dll.cpp"
       $182 = (($179) + 4)|0; //@line 242 "./src/cpp/unrar/dll.cpp"
       $183 = $182; //@line 242 "./src/cpp/unrar/dll.cpp"
       $184 = HEAP32[$183>>2]|0; //@line 242 "./src/cpp/unrar/dll.cpp"
       $185 = $4; //@line 242 "./src/cpp/unrar/dll.cpp"
       $186 = ((($185)) + 10244|0); //@line 242 "./src/cpp/unrar/dll.cpp"
       HEAP8[$186>>0]=$181&255;HEAP8[$186+1>>0]=($181>>8)&255;HEAP8[$186+2>>0]=($181>>16)&255;HEAP8[$186+3>>0]=$181>>24; //@line 242 "./src/cpp/unrar/dll.cpp"
       $187 = $8; //@line 243 "./src/cpp/unrar/dll.cpp"
       $188 = ((($187)) + 8264|0); //@line 243 "./src/cpp/unrar/dll.cpp"
       $189 = $188; //@line 243 "./src/cpp/unrar/dll.cpp"
       $190 = $189; //@line 243 "./src/cpp/unrar/dll.cpp"
       $191 = HEAP32[$190>>2]|0; //@line 243 "./src/cpp/unrar/dll.cpp"
       $192 = (($189) + 4)|0; //@line 243 "./src/cpp/unrar/dll.cpp"
       $193 = $192; //@line 243 "./src/cpp/unrar/dll.cpp"
       $194 = HEAP32[$193>>2]|0; //@line 243 "./src/cpp/unrar/dll.cpp"
       $195 = (_bitshift64Ashr(($191|0),($194|0),32)|0); //@line 243 "./src/cpp/unrar/dll.cpp"
       $196 = tempRet0; //@line 243 "./src/cpp/unrar/dll.cpp"
       $197 = $4; //@line 243 "./src/cpp/unrar/dll.cpp"
       $198 = ((($197)) + 10248|0); //@line 243 "./src/cpp/unrar/dll.cpp"
       HEAP8[$198>>0]=$195&255;HEAP8[$198+1>>0]=($195>>8)&255;HEAP8[$198+2>>0]=($195>>16)&255;HEAP8[$198+3>>0]=$195>>24; //@line 243 "./src/cpp/unrar/dll.cpp"
       $199 = $8; //@line 244 "./src/cpp/unrar/dll.cpp"
       $200 = ((($199)) + 8272|0); //@line 244 "./src/cpp/unrar/dll.cpp"
       $201 = $200; //@line 244 "./src/cpp/unrar/dll.cpp"
       $202 = $201; //@line 244 "./src/cpp/unrar/dll.cpp"
       $203 = HEAP32[$202>>2]|0; //@line 244 "./src/cpp/unrar/dll.cpp"
       $204 = (($201) + 4)|0; //@line 244 "./src/cpp/unrar/dll.cpp"
       $205 = $204; //@line 244 "./src/cpp/unrar/dll.cpp"
       $206 = HEAP32[$205>>2]|0; //@line 244 "./src/cpp/unrar/dll.cpp"
       $207 = $4; //@line 244 "./src/cpp/unrar/dll.cpp"
       $208 = ((($207)) + 10252|0); //@line 244 "./src/cpp/unrar/dll.cpp"
       HEAP8[$208>>0]=$203&255;HEAP8[$208+1>>0]=($203>>8)&255;HEAP8[$208+2>>0]=($203>>16)&255;HEAP8[$208+3>>0]=$203>>24; //@line 244 "./src/cpp/unrar/dll.cpp"
       $209 = $8; //@line 245 "./src/cpp/unrar/dll.cpp"
       $210 = ((($209)) + 8272|0); //@line 245 "./src/cpp/unrar/dll.cpp"
       $211 = $210; //@line 245 "./src/cpp/unrar/dll.cpp"
       $212 = $211; //@line 245 "./src/cpp/unrar/dll.cpp"
       $213 = HEAP32[$212>>2]|0; //@line 245 "./src/cpp/unrar/dll.cpp"
       $214 = (($211) + 4)|0; //@line 245 "./src/cpp/unrar/dll.cpp"
       $215 = $214; //@line 245 "./src/cpp/unrar/dll.cpp"
       $216 = HEAP32[$215>>2]|0; //@line 245 "./src/cpp/unrar/dll.cpp"
       $217 = (_bitshift64Ashr(($213|0),($216|0),32)|0); //@line 245 "./src/cpp/unrar/dll.cpp"
       $218 = tempRet0; //@line 245 "./src/cpp/unrar/dll.cpp"
       $219 = $4; //@line 245 "./src/cpp/unrar/dll.cpp"
       $220 = ((($219)) + 10256|0); //@line 245 "./src/cpp/unrar/dll.cpp"
       HEAP8[$220>>0]=$217&255;HEAP8[$220+1>>0]=($217>>8)&255;HEAP8[$220+2>>0]=($217>>16)&255;HEAP8[$220+3>>0]=$217>>24; //@line 245 "./src/cpp/unrar/dll.cpp"
       $221 = $8; //@line 246 "./src/cpp/unrar/dll.cpp"
       $222 = ((($221)) + 8428|0); //@line 246 "./src/cpp/unrar/dll.cpp"
       $223 = HEAP32[$222>>2]|0; //@line 246 "./src/cpp/unrar/dll.cpp"
       $224 = ($223|0)==(0); //@line 246 "./src/cpp/unrar/dll.cpp"
       $225 = $224 ? 2 : 3; //@line 246 "./src/cpp/unrar/dll.cpp"
       $226 = $4; //@line 246 "./src/cpp/unrar/dll.cpp"
       $227 = ((($226)) + 10260|0); //@line 246 "./src/cpp/unrar/dll.cpp"
       HEAP8[$227>>0]=$225&255;HEAP8[$227+1>>0]=($225>>8)&255;HEAP8[$227+2>>0]=($225>>16)&255;HEAP8[$227+3>>0]=$225>>24; //@line 246 "./src/cpp/unrar/dll.cpp"
       $228 = $5; //@line 247 "./src/cpp/unrar/dll.cpp"
       $229 = ((($228)) + 92120|0); //@line 247 "./src/cpp/unrar/dll.cpp"
       $230 = ((($229)) + 56856|0); //@line 247 "./src/cpp/unrar/dll.cpp"
       $231 = HEAP32[$230>>2]|0; //@line 247 "./src/cpp/unrar/dll.cpp"
       $232 = ($231|0)==(3); //@line 247 "./src/cpp/unrar/dll.cpp"
       $233 = $5;
       $234 = ((($233)) + 92120|0);
       $235 = ((($234)) + 21424|0);
       $236 = ((($235)) + 25|0);
       $237 = HEAP8[$236>>0]|0;
       $238 = $237&255;
       if ($232) {
        $239 = ($238|0)==(0); //@line 248 "./src/cpp/unrar/dll.cpp"
        $240 = $239 ? 50 : 200; //@line 248 "./src/cpp/unrar/dll.cpp"
        $241 = $4; //@line 248 "./src/cpp/unrar/dll.cpp"
        $$sink = $240;$$sink2 = $241;
       } else {
        $242 = $4; //@line 250 "./src/cpp/unrar/dll.cpp"
        $$sink = $238;$$sink2 = $242;
       }
       $243 = ((($$sink2)) + 10272|0);
       HEAP8[$243>>0]=$$sink&255;HEAP8[$243+1>>0]=($$sink>>8)&255;HEAP8[$243+2>>0]=($$sink>>16)&255;HEAP8[$243+3>>0]=$$sink>>24;
       $244 = $8; //@line 251 "./src/cpp/unrar/dll.cpp"
       $245 = ((($244)) + 8288|0); //@line 251 "./src/cpp/unrar/dll.cpp"
       $246 = ((($245)) + 4|0); //@line 251 "./src/cpp/unrar/dll.cpp"
       $247 = HEAP32[$246>>2]|0; //@line 251 "./src/cpp/unrar/dll.cpp"
       $248 = $4; //@line 251 "./src/cpp/unrar/dll.cpp"
       $249 = ((($248)) + 10264|0); //@line 251 "./src/cpp/unrar/dll.cpp"
       HEAP8[$249>>0]=$247&255;HEAP8[$249+1>>0]=($247>>8)&255;HEAP8[$249+2>>0]=($247>>16)&255;HEAP8[$249+3>>0]=$247>>24; //@line 251 "./src/cpp/unrar/dll.cpp"
       $250 = $8; //@line 252 "./src/cpp/unrar/dll.cpp"
       $251 = ((($250)) + 8240|0); //@line 252 "./src/cpp/unrar/dll.cpp"
       __THREW__ = 0;
       $252 = (invoke_ii(77,($251|0))|0); //@line 252 "./src/cpp/unrar/dll.cpp"
       $253 = __THREW__; __THREW__ = 0;
       $254 = $253&1;
       if (!($254)) {
        $255 = $4; //@line 252 "./src/cpp/unrar/dll.cpp"
        $256 = ((($255)) + 10268|0); //@line 252 "./src/cpp/unrar/dll.cpp"
        HEAP8[$256>>0]=$252&255;HEAP8[$256+1>>0]=($252>>8)&255;HEAP8[$256+2>>0]=($252>>16)&255;HEAP8[$256+3>>0]=$252>>24; //@line 252 "./src/cpp/unrar/dll.cpp"
        $257 = $8; //@line 253 "./src/cpp/unrar/dll.cpp"
        $258 = ((($257)) + 26|0); //@line 253 "./src/cpp/unrar/dll.cpp"
        $259 = HEAP8[$258>>0]|0; //@line 253 "./src/cpp/unrar/dll.cpp"
        $260 = $259&255; //@line 253 "./src/cpp/unrar/dll.cpp"
        $261 = (($260) + 48)|0; //@line 253 "./src/cpp/unrar/dll.cpp"
        $262 = $4; //@line 253 "./src/cpp/unrar/dll.cpp"
        $263 = ((($262)) + 10276|0); //@line 253 "./src/cpp/unrar/dll.cpp"
        HEAP8[$263>>0]=$261&255;HEAP8[$263+1>>0]=($261>>8)&255;HEAP8[$263+2>>0]=($261>>16)&255;HEAP8[$263+3>>0]=$261>>24; //@line 253 "./src/cpp/unrar/dll.cpp"
        $264 = $8; //@line 254 "./src/cpp/unrar/dll.cpp"
        $265 = ((($264)) + 28|0); //@line 254 "./src/cpp/unrar/dll.cpp"
        $266 = HEAP32[$265>>2]|0; //@line 254 "./src/cpp/unrar/dll.cpp"
        $267 = $4; //@line 254 "./src/cpp/unrar/dll.cpp"
        $268 = ((($267)) + 10280|0); //@line 254 "./src/cpp/unrar/dll.cpp"
        HEAP8[$268>>0]=$266&255;HEAP8[$268+1>>0]=($266>>8)&255;HEAP8[$268+2>>0]=($266>>16)&255;HEAP8[$268+3>>0]=$266>>24; //@line 254 "./src/cpp/unrar/dll.cpp"
        $269 = $4; //@line 255 "./src/cpp/unrar/dll.cpp"
        $270 = ((($269)) + 10292|0); //@line 255 "./src/cpp/unrar/dll.cpp"
        HEAP8[$270>>0]=0&255;HEAP8[$270+1>>0]=(0>>8)&255;HEAP8[$270+2>>0]=(0>>16)&255;HEAP8[$270+3>>0]=0>>24; //@line 255 "./src/cpp/unrar/dll.cpp"
        $271 = $4; //@line 256 "./src/cpp/unrar/dll.cpp"
        $272 = ((($271)) + 10296|0); //@line 256 "./src/cpp/unrar/dll.cpp"
        HEAP8[$272>>0]=0&255;HEAP8[$272+1>>0]=(0>>8)&255;HEAP8[$272+2>>0]=(0>>16)&255;HEAP8[$272+3>>0]=0>>24; //@line 256 "./src/cpp/unrar/dll.cpp"
        $273 = $8; //@line 258 "./src/cpp/unrar/dll.cpp"
        $274 = ((($273)) + 8420|0); //@line 258 "./src/cpp/unrar/dll.cpp"
        $275 = HEAP32[$274>>2]|0; //@line 258 "./src/cpp/unrar/dll.cpp"
        $276 = (($275>>>0) / 1024)&-1; //@line 258 "./src/cpp/unrar/dll.cpp"
        $277 = $4; //@line 258 "./src/cpp/unrar/dll.cpp"
        $278 = ((($277)) + 10300|0); //@line 258 "./src/cpp/unrar/dll.cpp"
        HEAP8[$278>>0]=$276&255;HEAP8[$278+1>>0]=($276>>8)&255;HEAP8[$278+2>>0]=($276>>16)&255;HEAP8[$278+3>>0]=$276>>24; //@line 258 "./src/cpp/unrar/dll.cpp"
        $279 = $8; //@line 260 "./src/cpp/unrar/dll.cpp"
        $280 = ((($279)) + 8288|0); //@line 260 "./src/cpp/unrar/dll.cpp"
        $281 = HEAP32[$280>>2]|0; //@line 260 "./src/cpp/unrar/dll.cpp"
        switch ($281|0) {
        case 2: case 1:  {
         $282 = $4; //@line 264 "./src/cpp/unrar/dll.cpp"
         $283 = ((($282)) + 10304|0); //@line 264 "./src/cpp/unrar/dll.cpp"
         HEAP8[$283>>0]=1&255;HEAP8[$283+1>>0]=(1>>8)&255;HEAP8[$283+2>>0]=(1>>16)&255;HEAP8[$283+3>>0]=1>>24; //@line 264 "./src/cpp/unrar/dll.cpp"
         break;
        }
        case 3:  {
         $284 = $4; //@line 267 "./src/cpp/unrar/dll.cpp"
         $285 = ((($284)) + 10304|0); //@line 267 "./src/cpp/unrar/dll.cpp"
         HEAP8[$285>>0]=2&255;HEAP8[$285+1>>0]=(2>>8)&255;HEAP8[$285+2>>0]=(2>>16)&255;HEAP8[$285+3>>0]=2>>24; //@line 267 "./src/cpp/unrar/dll.cpp"
         $286 = $4; //@line 268 "./src/cpp/unrar/dll.cpp"
         $287 = ((($286)) + 10308|0); //@line 268 "./src/cpp/unrar/dll.cpp"
         $288 = $8; //@line 268 "./src/cpp/unrar/dll.cpp"
         $289 = ((($288)) + 8288|0); //@line 268 "./src/cpp/unrar/dll.cpp"
         $290 = ((($289)) + 4|0); //@line 268 "./src/cpp/unrar/dll.cpp"
         dest=$287; src=$290; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 268 "./src/cpp/unrar/dll.cpp"
         break;
        }
        default: {
         $291 = $4; //@line 271 "./src/cpp/unrar/dll.cpp"
         $292 = ((($291)) + 10304|0); //@line 271 "./src/cpp/unrar/dll.cpp"
         HEAP8[$292>>0]=0&255;HEAP8[$292+1>>0]=(0>>8)&255;HEAP8[$292+2>>0]=(0>>16)&255;HEAP8[$292+3>>0]=0>>24; //@line 271 "./src/cpp/unrar/dll.cpp"
        }
        }
        $293 = $8; //@line 275 "./src/cpp/unrar/dll.cpp"
        $294 = ((($293)) + 8432|0); //@line 275 "./src/cpp/unrar/dll.cpp"
        $295 = HEAP32[$294>>2]|0; //@line 275 "./src/cpp/unrar/dll.cpp"
        $296 = $4; //@line 275 "./src/cpp/unrar/dll.cpp"
        $297 = ((($296)) + 10340|0); //@line 275 "./src/cpp/unrar/dll.cpp"
        HEAP8[$297>>0]=$295&255;HEAP8[$297+1>>0]=($295>>8)&255;HEAP8[$297+2>>0]=($295>>16)&255;HEAP8[$297+3>>0]=$295>>24; //@line 275 "./src/cpp/unrar/dll.cpp"
        $298 = $8; //@line 280 "./src/cpp/unrar/dll.cpp"
        $299 = ((($298)) + 8432|0); //@line 280 "./src/cpp/unrar/dll.cpp"
        $300 = HEAP32[$299>>2]|0; //@line 280 "./src/cpp/unrar/dll.cpp"
        $301 = ($300|0)!=(0); //@line 280 "./src/cpp/unrar/dll.cpp"
        if ($301) {
         $302 = $4; //@line 280 "./src/cpp/unrar/dll.cpp"
         $303 = ((($302)) + 10344|0); //@line 280 "./src/cpp/unrar/dll.cpp"
         $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24); //@line 280 "./src/cpp/unrar/dll.cpp"
         $305 = ($304|0)!=(0|0); //@line 280 "./src/cpp/unrar/dll.cpp"
         if ($305) {
          $306 = $4; //@line 281 "./src/cpp/unrar/dll.cpp"
          $307 = ((($306)) + 10348|0); //@line 281 "./src/cpp/unrar/dll.cpp"
          $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24); //@line 281 "./src/cpp/unrar/dll.cpp"
          $309 = ($308>>>0)>(0); //@line 281 "./src/cpp/unrar/dll.cpp"
          if ($309) {
           $310 = $4; //@line 281 "./src/cpp/unrar/dll.cpp"
           $311 = ((($310)) + 10348|0); //@line 281 "./src/cpp/unrar/dll.cpp"
           $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24); //@line 281 "./src/cpp/unrar/dll.cpp"
           $313 = ($312>>>0)<(100000); //@line 281 "./src/cpp/unrar/dll.cpp"
           if ($313) {
            $314 = $4; //@line 282 "./src/cpp/unrar/dll.cpp"
            $315 = ((($314)) + 10344|0); //@line 282 "./src/cpp/unrar/dll.cpp"
            $316 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24); //@line 282 "./src/cpp/unrar/dll.cpp"
            $317 = $8; //@line 282 "./src/cpp/unrar/dll.cpp"
            $318 = ((($317)) + 8436|0); //@line 282 "./src/cpp/unrar/dll.cpp"
            $319 = $4; //@line 282 "./src/cpp/unrar/dll.cpp"
            $320 = ((($319)) + 10348|0); //@line 282 "./src/cpp/unrar/dll.cpp"
            $321 = HEAPU8[$320>>0]|(HEAPU8[$320+1>>0]<<8)|(HEAPU8[$320+2>>0]<<16)|(HEAPU8[$320+3>>0]<<24); //@line 282 "./src/cpp/unrar/dll.cpp"
            __THREW__ = 0;
            (invoke_iiii(78,($316|0),($318|0),($321|0))|0); //@line 282 "./src/cpp/unrar/dll.cpp"
            $322 = __THREW__; __THREW__ = 0;
            $323 = $322&1;
            if ($323) {
             break;
            }
           }
          }
         }
        }
        $324 = $8; //@line 283 "./src/cpp/unrar/dll.cpp"
        $325 = ((($324)) + 16628|0); //@line 283 "./src/cpp/unrar/dll.cpp"
        $326 = HEAP8[$325>>0]|0; //@line 283 "./src/cpp/unrar/dll.cpp"
        $327 = $326&1; //@line 283 "./src/cpp/unrar/dll.cpp"
        $328 = $327&1; //@line 283 "./src/cpp/unrar/dll.cpp"
        $329 = $4; //@line 283 "./src/cpp/unrar/dll.cpp"
        $330 = ((($329)) + 10352|0); //@line 283 "./src/cpp/unrar/dll.cpp"
        HEAP8[$330>>0]=$328&255;HEAP8[$330+1>>0]=($328>>8)&255;HEAP8[$330+2>>0]=($328>>16)&255;HEAP8[$330+3>>0]=$328>>24; //@line 283 "./src/cpp/unrar/dll.cpp"
        $2 = 0; //@line 289 "./src/cpp/unrar/dll.cpp"
        $333 = $2; //@line 290 "./src/cpp/unrar/dll.cpp"
        STACKTOP = sp;return ($333|0); //@line 290 "./src/cpp/unrar/dll.cpp"
       }
      }
     }
    }
   }
  }
 } while(0);
 $60 = ___cxa_find_matching_catch_3(8|0)|0;
 $61 = tempRet0;
 $6 = $60; //@line 290 "./src/cpp/unrar/dll.cpp"
 $7 = $61; //@line 290 "./src/cpp/unrar/dll.cpp"
 $62 = $7; //@line 284 "./src/cpp/unrar/dll.cpp"
 $63 = (_llvm_eh_typeid_for((8|0))|0); //@line 284 "./src/cpp/unrar/dll.cpp"
 $64 = ($62|0)==($63|0); //@line 284 "./src/cpp/unrar/dll.cpp"
 if (!($64)) {
  $334 = $6; //@line 284 "./src/cpp/unrar/dll.cpp"
  $335 = $7; //@line 284 "./src/cpp/unrar/dll.cpp"
  ___resumeException($334|0);
  // unreachable;
 }
 $65 = $6; //@line 284 "./src/cpp/unrar/dll.cpp"
 $66 = (___cxa_begin_catch(($65|0))|0); //@line 284 "./src/cpp/unrar/dll.cpp"
 $67 = HEAP32[$66>>2]|0; //@line 284 "./src/cpp/unrar/dll.cpp"
 $10 = $67; //@line 284 "./src/cpp/unrar/dll.cpp"
 $68 = $5; //@line 287 "./src/cpp/unrar/dll.cpp"
 $69 = ((($68)) + 75176|0); //@line 287 "./src/cpp/unrar/dll.cpp"
 $70 = HEAP32[$69>>2]|0; //@line 287 "./src/cpp/unrar/dll.cpp"
 $71 = ($70|0)!=(0); //@line 287 "./src/cpp/unrar/dll.cpp"
 if ($71) {
  $72 = $5; //@line 287 "./src/cpp/unrar/dll.cpp"
  $73 = ((($72)) + 75176|0); //@line 287 "./src/cpp/unrar/dll.cpp"
  $74 = HEAP32[$73>>2]|0; //@line 287 "./src/cpp/unrar/dll.cpp"
  $79 = $74;
 } else {
  $75 = $10; //@line 287 "./src/cpp/unrar/dll.cpp"
  __THREW__ = 0;
  $76 = (invoke_ii(57,($75|0))|0); //@line 287 "./src/cpp/unrar/dll.cpp"
  $77 = __THREW__; __THREW__ = 0;
  $78 = $77&1;
  if ($78) {
   $331 = ___cxa_find_matching_catch_2()|0;
   $332 = tempRet0;
   $6 = $331; //@line 290 "./src/cpp/unrar/dll.cpp"
   $7 = $332; //@line 290 "./src/cpp/unrar/dll.cpp"
   ___cxa_end_catch(); //@line 288 "./src/cpp/unrar/dll.cpp"
   $334 = $6; //@line 284 "./src/cpp/unrar/dll.cpp"
   $335 = $7; //@line 284 "./src/cpp/unrar/dll.cpp"
   ___resumeException($334|0);
   // unreachable;
  } else {
   $79 = $76;
  }
 }
 $2 = $79; //@line 287 "./src/cpp/unrar/dll.cpp"
 ___cxa_end_catch(); //@line 288 "./src/cpp/unrar/dll.cpp"
 $333 = $2; //@line 290 "./src/cpp/unrar/dll.cpp"
 STACKTOP = sp;return ($333|0); //@line 290 "./src/cpp/unrar/dll.cpp"
}
function __ZN7Archive13GetHeaderTypeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 14796|0); //@line 88 "./src/cpp/unrar/archive.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 88 "./src/cpp/unrar/archive.hpp"
 STACKTOP = sp;return ($4|0); //@line 88 "./src/cpp/unrar/archive.hpp"
}
function _RARProcessFile($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 390 "./src/cpp/unrar/dll.cpp"
 $9 = $5; //@line 390 "./src/cpp/unrar/dll.cpp"
 $10 = $6; //@line 390 "./src/cpp/unrar/dll.cpp"
 $11 = $7; //@line 390 "./src/cpp/unrar/dll.cpp"
 $12 = (__Z11ProcessFilePviPcS0_PwS1_($8,$9,$10,$11,0,0)|0); //@line 390 "./src/cpp/unrar/dll.cpp"
 STACKTOP = sp;return ($12|0); //@line 390 "./src/cpp/unrar/dll.cpp"
}
function __Z11ProcessFilePviPcS0_PwS1_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$str$1$$str$2 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4160|0);
 $16 = sp + 2104|0;
 $17 = sp + 56|0;
 $18 = sp + 48|0;
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $21 = $7; //@line 295 "./src/cpp/unrar/dll.cpp"
 $13 = $21; //@line 295 "./src/cpp/unrar/dll.cpp"
 $22 = $13; //@line 298 "./src/cpp/unrar/dll.cpp"
 $23 = ((($22)) + 75176|0); //@line 298 "./src/cpp/unrar/dll.cpp"
 HEAP32[$23>>2] = 0; //@line 298 "./src/cpp/unrar/dll.cpp"
 $24 = $13; //@line 299 "./src/cpp/unrar/dll.cpp"
 $25 = ((($24)) + 173864|0); //@line 299 "./src/cpp/unrar/dll.cpp"
 $26 = HEAP32[$25>>2]|0; //@line 299 "./src/cpp/unrar/dll.cpp"
 $27 = ($26|0)==(0); //@line 299 "./src/cpp/unrar/dll.cpp"
 L1: do {
  if ($27) {
   label = 5;
  } else {
   $28 = $13; //@line 299 "./src/cpp/unrar/dll.cpp"
   $29 = ((($28)) + 173864|0); //@line 299 "./src/cpp/unrar/dll.cpp"
   $30 = HEAP32[$29>>2]|0; //@line 299 "./src/cpp/unrar/dll.cpp"
   $31 = ($30|0)==(2); //@line 299 "./src/cpp/unrar/dll.cpp"
   if ($31) {
    label = 5;
   } else {
    $32 = $8; //@line 300 "./src/cpp/unrar/dll.cpp"
    $33 = ($32|0)==(0); //@line 300 "./src/cpp/unrar/dll.cpp"
    if ($33) {
     $34 = $13; //@line 300 "./src/cpp/unrar/dll.cpp"
     $35 = ((($34)) + 92120|0); //@line 300 "./src/cpp/unrar/dll.cpp"
     $36 = ((($35)) + 56860|0); //@line 300 "./src/cpp/unrar/dll.cpp"
     $37 = HEAP8[$36>>0]|0; //@line 300 "./src/cpp/unrar/dll.cpp"
     $38 = $37&1; //@line 300 "./src/cpp/unrar/dll.cpp"
     if (!($38)) {
      label = 5;
      break;
     }
    }
    $102 = $8; //@line 315 "./src/cpp/unrar/dll.cpp"
    $103 = $13; //@line 315 "./src/cpp/unrar/dll.cpp"
    $104 = ((($103)) + 75172|0); //@line 315 "./src/cpp/unrar/dll.cpp"
    HEAP32[$104>>2] = $102; //@line 315 "./src/cpp/unrar/dll.cpp"
    $105 = $13; //@line 317 "./src/cpp/unrar/dll.cpp"
    $106 = ((($105)) + 16408|0); //@line 317 "./src/cpp/unrar/dll.cpp"
    HEAP32[$106>>2] = 0; //@line 317 "./src/cpp/unrar/dll.cpp"
    $107 = $13; //@line 318 "./src/cpp/unrar/dll.cpp"
    $108 = ((($107)) + 66980|0); //@line 318 "./src/cpp/unrar/dll.cpp"
    HEAP32[$108>>2] = 0; //@line 318 "./src/cpp/unrar/dll.cpp"
    $109 = $9; //@line 320 "./src/cpp/unrar/dll.cpp"
    $110 = ($109|0)!=(0|0); //@line 320 "./src/cpp/unrar/dll.cpp"
    if ($110) {
     $111 = $9; //@line 323 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     (invoke_iiii(52,($16|0),($111|0),2046)|0); //@line 323 "./src/cpp/unrar/dll.cpp"
     $112 = __THREW__; __THREW__ = 0;
     $113 = $112&1;
     if ($113) {
      break;
     }
     $114 = $13; //@line 330 "./src/cpp/unrar/dll.cpp"
     $115 = ((($114)) + 16408|0); //@line 330 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     (invoke_iiii(80,($16|0),($115|0),2048)|0); //@line 330 "./src/cpp/unrar/dll.cpp"
     $116 = __THREW__; __THREW__ = 0;
     $117 = $116&1;
     if ($117) {
      break;
     }
     $118 = $13; //@line 331 "./src/cpp/unrar/dll.cpp"
     $119 = ((($118)) + 16408|0); //@line 331 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     invoke_vii(81,($119|0),2048); //@line 331 "./src/cpp/unrar/dll.cpp"
     $120 = __THREW__; __THREW__ = 0;
     $121 = $120&1;
     if ($121) {
      break;
     }
    }
    $122 = $10; //@line 333 "./src/cpp/unrar/dll.cpp"
    $123 = ($122|0)!=(0|0); //@line 333 "./src/cpp/unrar/dll.cpp"
    if ($123) {
     $124 = $10; //@line 336 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     (invoke_iiii(52,($17|0),($124|0),2046)|0); //@line 336 "./src/cpp/unrar/dll.cpp"
     $125 = __THREW__; __THREW__ = 0;
     $126 = $125&1;
     if ($126) {
      break;
     }
     $127 = $13; //@line 343 "./src/cpp/unrar/dll.cpp"
     $128 = ((($127)) + 66980|0); //@line 343 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     (invoke_iiii(80,($17|0),($128|0),2048)|0); //@line 343 "./src/cpp/unrar/dll.cpp"
     $129 = __THREW__; __THREW__ = 0;
     $130 = $129&1;
     if ($130) {
      break;
     }
    }
    $131 = $11; //@line 346 "./src/cpp/unrar/dll.cpp"
    $132 = ($131|0)!=(0|0); //@line 346 "./src/cpp/unrar/dll.cpp"
    if ($132) {
     $133 = $13; //@line 348 "./src/cpp/unrar/dll.cpp"
     $134 = ((($133)) + 16408|0); //@line 348 "./src/cpp/unrar/dll.cpp"
     $135 = $11; //@line 348 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     (invoke_iiii(76,($134|0),($135|0),2048)|0); //@line 348 "./src/cpp/unrar/dll.cpp"
     $136 = __THREW__; __THREW__ = 0;
     $137 = $136&1;
     if ($137) {
      break;
     }
     $138 = $13; //@line 349 "./src/cpp/unrar/dll.cpp"
     $139 = ((($138)) + 16408|0); //@line 349 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     invoke_vii(81,($139|0),2048); //@line 349 "./src/cpp/unrar/dll.cpp"
     $140 = __THREW__; __THREW__ = 0;
     $141 = $140&1;
     if ($141) {
      break;
     }
    }
    $142 = $12; //@line 352 "./src/cpp/unrar/dll.cpp"
    $143 = ($142|0)!=(0|0); //@line 352 "./src/cpp/unrar/dll.cpp"
    if ($143) {
     $144 = $13; //@line 353 "./src/cpp/unrar/dll.cpp"
     $145 = ((($144)) + 66980|0); //@line 353 "./src/cpp/unrar/dll.cpp"
     $146 = $12; //@line 353 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     (invoke_iiii(78,($145|0),($146|0),2048)|0); //@line 353 "./src/cpp/unrar/dll.cpp"
     $147 = __THREW__; __THREW__ = 0;
     $148 = $147&1;
     if ($148) {
      break;
     }
    }
    $149 = $13; //@line 355 "./src/cpp/unrar/dll.cpp"
    $150 = ((($149)) + 75208|0); //@line 355 "./src/cpp/unrar/dll.cpp"
    $151 = $8; //@line 355 "./src/cpp/unrar/dll.cpp"
    $152 = ($151|0)==(2); //@line 355 "./src/cpp/unrar/dll.cpp"
    $$str$1$$str$2 = $152 ? 592 : 600; //@line 355 "./src/cpp/unrar/dll.cpp"
    __THREW__ = 0;
    (invoke_iii(82,($150|0),($$str$1$$str$2|0))|0); //@line 355 "./src/cpp/unrar/dll.cpp"
    $153 = __THREW__; __THREW__ = 0;
    $154 = $153&1;
    if (!($154)) {
     $155 = $8; //@line 356 "./src/cpp/unrar/dll.cpp"
     $156 = ($155|0)!=(2); //@line 356 "./src/cpp/unrar/dll.cpp"
     $157 = $13; //@line 356 "./src/cpp/unrar/dll.cpp"
     $158 = ((($157)) + 50377|0); //@line 356 "./src/cpp/unrar/dll.cpp"
     $159 = $156&1; //@line 356 "./src/cpp/unrar/dll.cpp"
     HEAP8[$158>>0] = $159; //@line 356 "./src/cpp/unrar/dll.cpp"
     HEAP8[$18>>0] = 0; //@line 357 "./src/cpp/unrar/dll.cpp"
     $160 = $13; //@line 358 "./src/cpp/unrar/dll.cpp"
     $161 = ((($160)) + 157248|0); //@line 358 "./src/cpp/unrar/dll.cpp"
     $162 = $13; //@line 358 "./src/cpp/unrar/dll.cpp"
     $163 = ((($162)) + 92120|0); //@line 358 "./src/cpp/unrar/dll.cpp"
     $164 = $13; //@line 358 "./src/cpp/unrar/dll.cpp"
     $165 = ((($164)) + 173868|0); //@line 358 "./src/cpp/unrar/dll.cpp"
     $166 = HEAP32[$165>>2]|0; //@line 358 "./src/cpp/unrar/dll.cpp"
     __THREW__ = 0;
     (invoke_iiiii(83,($161|0),($163|0),($166|0),($18|0))|0); //@line 358 "./src/cpp/unrar/dll.cpp"
     $167 = __THREW__; __THREW__ = 0;
     $168 = $167&1;
     if (!($168)) {
      while(1) {
       $169 = $13; //@line 367 "./src/cpp/unrar/dll.cpp"
       $170 = ((($169)) + 92120|0); //@line 367 "./src/cpp/unrar/dll.cpp"
       __THREW__ = 0;
       $171 = (invoke_ii(84,($170|0))|0); //@line 367 "./src/cpp/unrar/dll.cpp"
       $172 = __THREW__; __THREW__ = 0;
       $173 = $172&1;
       if ($173) {
        break L1;
       }
       if ($171) {
        $174 = $13; //@line 367 "./src/cpp/unrar/dll.cpp"
        $175 = ((($174)) + 92120|0); //@line 367 "./src/cpp/unrar/dll.cpp"
        __THREW__ = 0;
        $176 = (invoke_ii(85,($175|0))|0); //@line 367 "./src/cpp/unrar/dll.cpp"
        $177 = __THREW__; __THREW__ = 0;
        $178 = $177&1;
        if ($178) {
         break L1;
        }
        $179 = ($176|0)!=(0); //@line 367 "./src/cpp/unrar/dll.cpp"
        if ($179) {
         $180 = $13; //@line 368 "./src/cpp/unrar/dll.cpp"
         $181 = ((($180)) + 92120|0); //@line 368 "./src/cpp/unrar/dll.cpp"
         __THREW__ = 0;
         $182 = (invoke_ii(72,($181|0))|0); //@line 368 "./src/cpp/unrar/dll.cpp"
         $183 = __THREW__; __THREW__ = 0;
         $184 = $183&1;
         if ($184) {
          break L1;
         }
         $185 = ($182|0)==(3); //@line 368 "./src/cpp/unrar/dll.cpp"
         $219 = $185;
        } else {
         $219 = 0;
        }
       } else {
        $219 = 0;
       }
       $186 = $13;
       if (!($219)) {
        break;
       }
       $187 = ((($186)) + 157248|0); //@line 370 "./src/cpp/unrar/dll.cpp"
       $188 = $13; //@line 370 "./src/cpp/unrar/dll.cpp"
       $189 = ((($188)) + 92120|0); //@line 370 "./src/cpp/unrar/dll.cpp"
       $190 = $13; //@line 370 "./src/cpp/unrar/dll.cpp"
       $191 = ((($190)) + 173868|0); //@line 370 "./src/cpp/unrar/dll.cpp"
       $192 = HEAP32[$191>>2]|0; //@line 370 "./src/cpp/unrar/dll.cpp"
       __THREW__ = 0;
       (invoke_iiiii(83,($187|0),($189|0),($192|0),($18|0))|0); //@line 370 "./src/cpp/unrar/dll.cpp"
       $193 = __THREW__; __THREW__ = 0;
       $194 = $193&1;
       if ($194) {
        break L1;
       }
       $195 = $13; //@line 371 "./src/cpp/unrar/dll.cpp"
       $196 = ((($195)) + 92120|0); //@line 371 "./src/cpp/unrar/dll.cpp"
       __THREW__ = 0;
       invoke_vi(79,($196|0)); //@line 371 "./src/cpp/unrar/dll.cpp"
       $197 = __THREW__; __THREW__ = 0;
       $198 = $197&1;
       if ($198) {
        break L1;
       }
      }
      $199 = ((($186)) + 92120|0); //@line 373 "./src/cpp/unrar/dll.cpp"
      $200 = $13; //@line 373 "./src/cpp/unrar/dll.cpp"
      $201 = ((($200)) + 92120|0); //@line 373 "./src/cpp/unrar/dll.cpp"
      $202 = ((($201)) + 56840|0); //@line 373 "./src/cpp/unrar/dll.cpp"
      $203 = $202; //@line 373 "./src/cpp/unrar/dll.cpp"
      $204 = $203; //@line 373 "./src/cpp/unrar/dll.cpp"
      $205 = HEAP32[$204>>2]|0; //@line 373 "./src/cpp/unrar/dll.cpp"
      $206 = (($203) + 4)|0; //@line 373 "./src/cpp/unrar/dll.cpp"
      $207 = $206; //@line 373 "./src/cpp/unrar/dll.cpp"
      $208 = HEAP32[$207>>2]|0; //@line 373 "./src/cpp/unrar/dll.cpp"
      __THREW__ = 0;
      invoke_viiii(5,($199|0),($205|0),($208|0),0); //@line 373 "./src/cpp/unrar/dll.cpp"
      $209 = __THREW__; __THREW__ = 0;
      $210 = $209&1;
      if (!($210)) {
       label = 47;
      }
     }
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $39 = $13; //@line 302 "./src/cpp/unrar/dll.cpp"
   $40 = ((($39)) + 92120|0); //@line 302 "./src/cpp/unrar/dll.cpp"
   $41 = ((($40)) + 56861|0); //@line 302 "./src/cpp/unrar/dll.cpp"
   $42 = HEAP8[$41>>0]|0; //@line 302 "./src/cpp/unrar/dll.cpp"
   $43 = $42&1; //@line 302 "./src/cpp/unrar/dll.cpp"
   if ($43) {
    $44 = $13; //@line 302 "./src/cpp/unrar/dll.cpp"
    $45 = ((($44)) + 92120|0); //@line 302 "./src/cpp/unrar/dll.cpp"
    __THREW__ = 0;
    $46 = (invoke_ii(72,($45|0))|0); //@line 302 "./src/cpp/unrar/dll.cpp"
    $47 = __THREW__; __THREW__ = 0;
    $48 = $47&1;
    if ($48) {
     break;
    }
    $49 = ($46|0)==(2); //@line 302 "./src/cpp/unrar/dll.cpp"
    if ($49) {
     $50 = $13; //@line 303 "./src/cpp/unrar/dll.cpp"
     $51 = ((($50)) + 92120|0); //@line 303 "./src/cpp/unrar/dll.cpp"
     $52 = ((($51)) + 21424|0); //@line 303 "./src/cpp/unrar/dll.cpp"
     $53 = ((($52)) + 8329|0); //@line 303 "./src/cpp/unrar/dll.cpp"
     $54 = HEAP8[$53>>0]|0; //@line 303 "./src/cpp/unrar/dll.cpp"
     $55 = $54&1; //@line 303 "./src/cpp/unrar/dll.cpp"
     if ($55) {
      $56 = $13; //@line 304 "./src/cpp/unrar/dll.cpp"
      $57 = ((($56)) + 92120|0); //@line 304 "./src/cpp/unrar/dll.cpp"
      __THREW__ = 0;
      $58 = (invoke_iiiii(73,($57|0),(0|0),0,76)|0); //@line 304 "./src/cpp/unrar/dll.cpp"
      $59 = __THREW__; __THREW__ = 0;
      $60 = $59&1;
      if ($60) {
       break;
      }
      if (!($58)) {
       $6 = 15; //@line 310 "./src/cpp/unrar/dll.cpp"
       $216 = $6; //@line 385 "./src/cpp/unrar/dll.cpp"
       STACKTOP = sp;return ($216|0); //@line 385 "./src/cpp/unrar/dll.cpp"
      }
      $61 = $13; //@line 306 "./src/cpp/unrar/dll.cpp"
      $62 = ((($61)) + 92120|0); //@line 306 "./src/cpp/unrar/dll.cpp"
      $63 = $13; //@line 306 "./src/cpp/unrar/dll.cpp"
      $64 = ((($63)) + 92120|0); //@line 306 "./src/cpp/unrar/dll.cpp"
      $65 = ((($64)) + 56840|0); //@line 306 "./src/cpp/unrar/dll.cpp"
      $66 = $65; //@line 306 "./src/cpp/unrar/dll.cpp"
      $67 = $66; //@line 306 "./src/cpp/unrar/dll.cpp"
      $68 = HEAP32[$67>>2]|0; //@line 306 "./src/cpp/unrar/dll.cpp"
      $69 = (($66) + 4)|0; //@line 306 "./src/cpp/unrar/dll.cpp"
      $70 = $69; //@line 306 "./src/cpp/unrar/dll.cpp"
      $71 = HEAP32[$70>>2]|0; //@line 306 "./src/cpp/unrar/dll.cpp"
      __THREW__ = 0;
      invoke_viiii(5,($62|0),($68|0),($71|0),0); //@line 306 "./src/cpp/unrar/dll.cpp"
      $72 = __THREW__; __THREW__ = 0;
      $73 = $72&1;
      if ($73) {
       break;
      }
      $6 = 0; //@line 307 "./src/cpp/unrar/dll.cpp"
      $216 = $6; //@line 385 "./src/cpp/unrar/dll.cpp"
      STACKTOP = sp;return ($216|0); //@line 385 "./src/cpp/unrar/dll.cpp"
     }
    }
   }
   $98 = $13; //@line 311 "./src/cpp/unrar/dll.cpp"
   $99 = ((($98)) + 92120|0); //@line 311 "./src/cpp/unrar/dll.cpp"
   __THREW__ = 0;
   invoke_vi(79,($99|0)); //@line 311 "./src/cpp/unrar/dll.cpp"
   $100 = __THREW__; __THREW__ = 0;
   $101 = $100&1;
   if (!($101)) {
    label = 47;
   }
  }
 } while(0);
 if ((label|0) == 47) {
  $213 = $13; //@line 384 "./src/cpp/unrar/dll.cpp"
  $214 = ((($213)) + 75176|0); //@line 384 "./src/cpp/unrar/dll.cpp"
  $215 = HEAP32[$214>>2]|0; //@line 384 "./src/cpp/unrar/dll.cpp"
  $6 = $215; //@line 384 "./src/cpp/unrar/dll.cpp"
  $216 = $6; //@line 385 "./src/cpp/unrar/dll.cpp"
  STACKTOP = sp;return ($216|0); //@line 385 "./src/cpp/unrar/dll.cpp"
 }
 $74 = ___cxa_find_matching_catch_4(352|0,8|0)|0;
 $75 = tempRet0;
 $14 = $74; //@line 385 "./src/cpp/unrar/dll.cpp"
 $15 = $75; //@line 385 "./src/cpp/unrar/dll.cpp"
 $76 = $15; //@line 375 "./src/cpp/unrar/dll.cpp"
 $77 = (_llvm_eh_typeid_for((352|0))|0); //@line 375 "./src/cpp/unrar/dll.cpp"
 $78 = ($76|0)==($77|0); //@line 375 "./src/cpp/unrar/dll.cpp"
 if ($78) {
  $79 = $14; //@line 383 "./src/cpp/unrar/dll.cpp"
  $80 = (___cxa_begin_catch(($79|0))|0); //@line 383 "./src/cpp/unrar/dll.cpp"
  $20 = $80; //@line 383 "./src/cpp/unrar/dll.cpp"
  $6 = 11; //@line 378 "./src/cpp/unrar/dll.cpp"
  ___cxa_end_catch(); //@line 379 "./src/cpp/unrar/dll.cpp"
  $216 = $6; //@line 385 "./src/cpp/unrar/dll.cpp"
  STACKTOP = sp;return ($216|0); //@line 385 "./src/cpp/unrar/dll.cpp"
 }
 $81 = (_llvm_eh_typeid_for((8|0))|0); //@line 375 "./src/cpp/unrar/dll.cpp"
 $82 = ($76|0)==($81|0); //@line 375 "./src/cpp/unrar/dll.cpp"
 if (!($82)) {
  $217 = $14; //@line 375 "./src/cpp/unrar/dll.cpp"
  $218 = $15; //@line 375 "./src/cpp/unrar/dll.cpp"
  ___resumeException($217|0);
  // unreachable;
 }
 $83 = $14; //@line 375 "./src/cpp/unrar/dll.cpp"
 $84 = (___cxa_begin_catch(($83|0))|0); //@line 375 "./src/cpp/unrar/dll.cpp"
 $85 = HEAP32[$84>>2]|0; //@line 375 "./src/cpp/unrar/dll.cpp"
 $19 = $85; //@line 375 "./src/cpp/unrar/dll.cpp"
 $86 = $13; //@line 382 "./src/cpp/unrar/dll.cpp"
 $87 = ((($86)) + 75176|0); //@line 382 "./src/cpp/unrar/dll.cpp"
 $88 = HEAP32[$87>>2]|0; //@line 382 "./src/cpp/unrar/dll.cpp"
 $89 = ($88|0)!=(0); //@line 382 "./src/cpp/unrar/dll.cpp"
 if ($89) {
  $90 = $13; //@line 382 "./src/cpp/unrar/dll.cpp"
  $91 = ((($90)) + 75176|0); //@line 382 "./src/cpp/unrar/dll.cpp"
  $92 = HEAP32[$91>>2]|0; //@line 382 "./src/cpp/unrar/dll.cpp"
  $97 = $92;
 } else {
  $93 = $19; //@line 382 "./src/cpp/unrar/dll.cpp"
  __THREW__ = 0;
  $94 = (invoke_ii(57,($93|0))|0); //@line 382 "./src/cpp/unrar/dll.cpp"
  $95 = __THREW__; __THREW__ = 0;
  $96 = $95&1;
  if ($96) {
   $211 = ___cxa_find_matching_catch_2()|0;
   $212 = tempRet0;
   $14 = $211; //@line 385 "./src/cpp/unrar/dll.cpp"
   $15 = $212; //@line 385 "./src/cpp/unrar/dll.cpp"
   ___cxa_end_catch(); //@line 383 "./src/cpp/unrar/dll.cpp"
   $217 = $14; //@line 375 "./src/cpp/unrar/dll.cpp"
   $218 = $15; //@line 375 "./src/cpp/unrar/dll.cpp"
   ___resumeException($217|0);
   // unreachable;
  } else {
   $97 = $94;
  }
 }
 $6 = $97; //@line 382 "./src/cpp/unrar/dll.cpp"
 ___cxa_end_catch(); //@line 383 "./src/cpp/unrar/dll.cpp"
 $216 = $6; //@line 385 "./src/cpp/unrar/dll.cpp"
 STACKTOP = sp;return ($216|0); //@line 385 "./src/cpp/unrar/dll.cpp"
}
function __ZN4File8IsOpenedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 98 "./src/cpp/unrar/file.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 98 "./src/cpp/unrar/file.hpp"
 $5 = ($4|0)!=(0|0); //@line 98 "./src/cpp/unrar/file.hpp"
 STACKTOP = sp;return ($5|0); //@line 98 "./src/cpp/unrar/file.hpp"
}
function __ZN11CommandDataD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 92024|0); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 __ZN10StringListD2Ev($3); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 $4 = ((($2)) + 91932|0); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 __ZN10StringListD2Ev($4); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 $5 = ((($2)) + 91840|0); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 __ZN10StringListD2Ev($5); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 $6 = ((($2)) + 91748|0); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 __ZN10StringListD2Ev($6); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 $7 = ((($2)) + 91656|0); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 __ZN10StringListD2Ev($7); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 __ZN10RAROptionsD2Ev($2); //@line 9 "./src/cpp/unrar/cmddata.hpp"
 STACKTOP = sp;return; //@line 9 "./src/cpp/unrar/cmddata.hpp"
}
function __ZN10StringListD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5ArrayIwED2Ev($2); //@line 4 "./src/cpp/unrar/strlist.hpp"
 STACKTOP = sp;return; //@line 4 "./src/cpp/unrar/strlist.hpp"
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZN5ArrayIwE9CleanDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0; //@line 35 "./src/cpp/unrar/array.hpp"
 $3 = ((($2)) + 4|0); //@line 36 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 36 "./src/cpp/unrar/array.hpp"
 $4 = ((($2)) + 8|0); //@line 37 "./src/cpp/unrar/array.hpp"
 HEAP32[$4>>2] = 0; //@line 37 "./src/cpp/unrar/array.hpp"
 $5 = ((($2)) + 12|0); //@line 38 "./src/cpp/unrar/array.hpp"
 HEAP32[$5>>2] = 0; //@line 38 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIcE9CleanDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0; //@line 35 "./src/cpp/unrar/array.hpp"
 $3 = ((($2)) + 4|0); //@line 36 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 36 "./src/cpp/unrar/array.hpp"
 $4 = ((($2)) + 8|0); //@line 37 "./src/cpp/unrar/array.hpp"
 HEAP32[$4>>2] = 0; //@line 37 "./src/cpp/unrar/array.hpp"
 $5 = ((($2)) + 12|0); //@line 38 "./src/cpp/unrar/array.hpp"
 HEAP32[$5>>2] = 0; //@line 38 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIcE3AddEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = $3; //@line 92 "./src/cpp/unrar/array.hpp"
 $9 = ((($7)) + 4|0); //@line 92 "./src/cpp/unrar/array.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 92 "./src/cpp/unrar/array.hpp"
 $11 = (($10) + ($8))|0; //@line 92 "./src/cpp/unrar/array.hpp"
 HEAP32[$9>>2] = $11; //@line 92 "./src/cpp/unrar/array.hpp"
 $12 = ((($7)) + 4|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $13 = HEAP32[$12>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $14 = ((($7)) + 8|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $15 = HEAP32[$14>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $16 = ($13>>>0)>($15>>>0); //@line 93 "./src/cpp/unrar/array.hpp"
 if (!($16)) {
  STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
 }
 $17 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
 $18 = HEAP32[$17>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
 $19 = ($18|0)!=(0); //@line 95 "./src/cpp/unrar/array.hpp"
 if ($19) {
  $20 = ((($7)) + 4|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $21 = HEAP32[$20>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $22 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $23 = HEAP32[$22>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $24 = ($21>>>0)>($23>>>0); //@line 95 "./src/cpp/unrar/array.hpp"
  if ($24) {
   $25 = ((($7)) + 12|0); //@line 97 "./src/cpp/unrar/array.hpp"
   $26 = HEAP32[$25>>2]|0; //@line 97 "./src/cpp/unrar/array.hpp"
   HEAP32[$vararg_buffer>>2] = $26; //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler13GeneralErrMsgEPKwz(756,2544,$vararg_buffer); //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler11MemoryErrorEv(756); //@line 98 "./src/cpp/unrar/array.hpp"
  }
 }
 $27 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $28 = HEAP32[$27>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $29 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $30 = HEAP32[$29>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $31 = (($30>>>0) / 4)&-1; //@line 101 "./src/cpp/unrar/array.hpp"
 $32 = (($28) + ($31))|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $33 = (($32) + 32)|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $4 = $33; //@line 101 "./src/cpp/unrar/array.hpp"
 $34 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
 $35 = HEAP32[$34>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
 $36 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
 $37 = ($35>>>0)>($36>>>0); //@line 102 "./src/cpp/unrar/array.hpp"
 if ($37) {
  $38 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
  $39 = HEAP32[$38>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $39;
 } else {
  $40 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $40;
 }
 $5 = $41; //@line 102 "./src/cpp/unrar/array.hpp"
 $42 = HEAP32[$7>>2]|0; //@line 104 "./src/cpp/unrar/array.hpp"
 $43 = $5; //@line 104 "./src/cpp/unrar/array.hpp"
 $44 = $43; //@line 104 "./src/cpp/unrar/array.hpp"
 $45 = (_realloc($42,$44)|0); //@line 104 "./src/cpp/unrar/array.hpp"
 $6 = $45; //@line 104 "./src/cpp/unrar/array.hpp"
 $46 = $6; //@line 105 "./src/cpp/unrar/array.hpp"
 $47 = ($46|0)==(0|0); //@line 105 "./src/cpp/unrar/array.hpp"
 if ($47) {
  __ZN12ErrorHandler11MemoryErrorEv(756); //@line 106 "./src/cpp/unrar/array.hpp"
 }
 $48 = $6; //@line 107 "./src/cpp/unrar/array.hpp"
 HEAP32[$7>>2] = $48; //@line 107 "./src/cpp/unrar/array.hpp"
 $49 = $5; //@line 108 "./src/cpp/unrar/array.hpp"
 $50 = ((($7)) + 8|0); //@line 108 "./src/cpp/unrar/array.hpp"
 HEAP32[$50>>2] = $49; //@line 108 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
}
function __ZN9QuickOpenC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 24|0); //@line 3 "./src/cpp/unrar/qopen.cpp"
 __ZN9CryptDataC2Ev($5); //@line 3 "./src/cpp/unrar/qopen.cpp"
 $6 = ((($4)) + 6424|0); //@line 3 "./src/cpp/unrar/qopen.cpp"
 __THREW__ = 0;
 invoke_vi(86,($6|0)); //@line 3 "./src/cpp/unrar/qopen.cpp"
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $12 = ___cxa_find_matching_catch_2()|0;
  $13 = tempRet0;
  $2 = $12; //@line 7 "./src/cpp/unrar/qopen.cpp"
  $3 = $13; //@line 7 "./src/cpp/unrar/qopen.cpp"
  __ZN9CryptDataD2Ev($5); //@line 7 "./src/cpp/unrar/qopen.cpp"
  $16 = $2; //@line 7 "./src/cpp/unrar/qopen.cpp"
  $17 = $3; //@line 7 "./src/cpp/unrar/qopen.cpp"
  ___resumeException($16|0);
  // unreachable;
 }
 $9 = ((($4)) + 16|0); //@line 5 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$9>>2] = 0; //@line 5 "./src/cpp/unrar/qopen.cpp"
 __THREW__ = 0;
 invoke_viii(87,($4|0),(0|0),0); //@line 6 "./src/cpp/unrar/qopen.cpp"
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  STACKTOP = sp;return; //@line 7 "./src/cpp/unrar/qopen.cpp"
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $2 = $14; //@line 7 "./src/cpp/unrar/qopen.cpp"
 $3 = $15; //@line 7 "./src/cpp/unrar/qopen.cpp"
 __ZN5ArrayIhED2Ev($6); //@line 7 "./src/cpp/unrar/qopen.cpp"
 __ZN9CryptDataD2Ev($5); //@line 7 "./src/cpp/unrar/qopen.cpp"
 $16 = $2; //@line 7 "./src/cpp/unrar/qopen.cpp"
 $17 = $3; //@line 7 "./src/cpp/unrar/qopen.cpp"
 ___resumeException($16|0);
 // unreachable;
}
function __ZN5ArrayIhEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5ArrayIhE9CleanDataEv($2); //@line 44 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 45 "./src/cpp/unrar/array.hpp"
}
function __ZN9QuickOpen4InitEP7Archiveb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $2&1;
 $5 = $6;
 $7 = $3;
 $8 = $4; //@line 19 "./src/cpp/unrar/qopen.cpp"
 $9 = ($8|0)!=(0|0); //@line 19 "./src/cpp/unrar/qopen.cpp"
 if ($9) {
  __ZN9QuickOpen5CloseEv($7); //@line 20 "./src/cpp/unrar/qopen.cpp"
 }
 $10 = $4; //@line 22 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$7>>2] = $10; //@line 22 "./src/cpp/unrar/qopen.cpp"
 $11 = $5; //@line 23 "./src/cpp/unrar/qopen.cpp"
 $12 = $11&1; //@line 23 "./src/cpp/unrar/qopen.cpp"
 $13 = ((($7)) + 4|0); //@line 23 "./src/cpp/unrar/qopen.cpp"
 $14 = $12&1; //@line 23 "./src/cpp/unrar/qopen.cpp"
 HEAP8[$13>>0] = $14; //@line 23 "./src/cpp/unrar/qopen.cpp"
 $15 = ((($7)) + 8|0); //@line 25 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$15>>2] = 0; //@line 25 "./src/cpp/unrar/qopen.cpp"
 $16 = ((($7)) + 12|0); //@line 26 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$16>>2] = 0; //@line 26 "./src/cpp/unrar/qopen.cpp"
 $17 = ((($7)) + 16|0); //@line 28 "./src/cpp/unrar/qopen.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 28 "./src/cpp/unrar/qopen.cpp"
 $19 = ($18|0)==(0|0); //@line 28 "./src/cpp/unrar/qopen.cpp"
 if (!($19)) {
  $22 = ((($7)) + 20|0); //@line 31 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$22>>2] = 0; //@line 31 "./src/cpp/unrar/qopen.cpp"
  $23 = ((($7)) + 6376|0); //@line 33 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$23>>0] = 0; //@line 33 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return; //@line 34 "./src/cpp/unrar/qopen.cpp"
 }
 $20 = (__Znaj(65536)|0); //@line 29 "./src/cpp/unrar/qopen.cpp"
 $21 = ((($7)) + 16|0); //@line 29 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$21>>2] = $20; //@line 29 "./src/cpp/unrar/qopen.cpp"
 $22 = ((($7)) + 20|0); //@line 31 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$22>>2] = 0; //@line 31 "./src/cpp/unrar/qopen.cpp"
 $23 = ((($7)) + 6376|0); //@line 33 "./src/cpp/unrar/qopen.cpp"
 HEAP8[$23>>0] = 0; //@line 33 "./src/cpp/unrar/qopen.cpp"
 STACKTOP = sp;return; //@line 34 "./src/cpp/unrar/qopen.cpp"
}
function __ZN5ArrayIhED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 67 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 67 "./src/cpp/unrar/array.hpp"
 if (!($4)) {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
 $5 = HEAP32[$2>>2]|0; //@line 68 "./src/cpp/unrar/array.hpp"
 __THREW__ = 0;
 invoke_vi(70,($5|0)); //@line 68 "./src/cpp/unrar/array.hpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_3(0|0)|0;
  $9 = tempRet0;
  ___clang_call_terminate($8); //@line 68 "./src/cpp/unrar/array.hpp"
  // unreachable; //@line 68 "./src/cpp/unrar/array.hpp"
 } else {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
}
function __ZN9QuickOpen5CloseEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 8|0); //@line 39 "./src/cpp/unrar/qopen.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 39 "./src/cpp/unrar/qopen.cpp"
 $2 = $6; //@line 39 "./src/cpp/unrar/qopen.cpp"
 while(1) {
  $7 = $2; //@line 40 "./src/cpp/unrar/qopen.cpp"
  $8 = ($7|0)!=(0|0); //@line 40 "./src/cpp/unrar/qopen.cpp"
  if (!($8)) {
   break;
  }
  $9 = $2; //@line 42 "./src/cpp/unrar/qopen.cpp"
  $10 = ((($9)) + 16|0); //@line 42 "./src/cpp/unrar/qopen.cpp"
  $11 = HEAP32[$10>>2]|0; //@line 42 "./src/cpp/unrar/qopen.cpp"
  $3 = $11; //@line 42 "./src/cpp/unrar/qopen.cpp"
  $12 = $2; //@line 43 "./src/cpp/unrar/qopen.cpp"
  $13 = HEAP32[$12>>2]|0; //@line 43 "./src/cpp/unrar/qopen.cpp"
  $14 = ($13|0)==(0|0); //@line 43 "./src/cpp/unrar/qopen.cpp"
  if (!($14)) {
   __ZdaPv($13); //@line 43 "./src/cpp/unrar/qopen.cpp"
  }
  $15 = $2; //@line 44 "./src/cpp/unrar/qopen.cpp"
  $16 = ($15|0)==(0|0); //@line 44 "./src/cpp/unrar/qopen.cpp"
  if (!($16)) {
   __ZdlPv($15); //@line 44 "./src/cpp/unrar/qopen.cpp"
  }
  $17 = $3; //@line 45 "./src/cpp/unrar/qopen.cpp"
  $2 = $17; //@line 45 "./src/cpp/unrar/qopen.cpp"
 }
 STACKTOP = sp;return; //@line 47 "./src/cpp/unrar/qopen.cpp"
}
function __ZN5ArrayIhE9CleanDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0; //@line 35 "./src/cpp/unrar/array.hpp"
 $3 = ((($2)) + 4|0); //@line 36 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 36 "./src/cpp/unrar/array.hpp"
 $4 = ((($2)) + 8|0); //@line 37 "./src/cpp/unrar/array.hpp"
 HEAP32[$4>>2] = 0; //@line 37 "./src/cpp/unrar/array.hpp"
 $5 = ((($2)) + 12|0); //@line 38 "./src/cpp/unrar/array.hpp"
 HEAP32[$5>>2] = 0; //@line 38 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/array.hpp"
}
function __ZN9QuickOpenD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __THREW__ = 0;
 invoke_vi(88,($4|0)); //@line 12 "./src/cpp/unrar/qopen.cpp"
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $12 = ___cxa_find_matching_catch_3(0|0)|0;
  $13 = tempRet0;
  $2 = $12; //@line 14 "./src/cpp/unrar/qopen.cpp"
  $3 = $13; //@line 14 "./src/cpp/unrar/qopen.cpp"
  $14 = ((($4)) + 6424|0); //@line 14 "./src/cpp/unrar/qopen.cpp"
  __ZN5ArrayIhED2Ev($14); //@line 14 "./src/cpp/unrar/qopen.cpp"
  $15 = ((($4)) + 24|0); //@line 14 "./src/cpp/unrar/qopen.cpp"
  __ZN9CryptDataD2Ev($15); //@line 14 "./src/cpp/unrar/qopen.cpp"
  $16 = $2; //@line 14 "./src/cpp/unrar/qopen.cpp"
  ___clang_call_terminate($16); //@line 14 "./src/cpp/unrar/qopen.cpp"
  // unreachable; //@line 14 "./src/cpp/unrar/qopen.cpp"
 }
 $7 = ((($4)) + 16|0); //@line 13 "./src/cpp/unrar/qopen.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 13 "./src/cpp/unrar/qopen.cpp"
 $9 = ($8|0)==(0|0); //@line 13 "./src/cpp/unrar/qopen.cpp"
 if (!($9)) {
  __ZdaPv($8); //@line 13 "./src/cpp/unrar/qopen.cpp"
 }
 $10 = ((($4)) + 6424|0); //@line 14 "./src/cpp/unrar/qopen.cpp"
 __ZN5ArrayIhED2Ev($10); //@line 14 "./src/cpp/unrar/qopen.cpp"
 $11 = ((($4)) + 24|0); //@line 14 "./src/cpp/unrar/qopen.cpp"
 __ZN9CryptDataD2Ev($11); //@line 14 "./src/cpp/unrar/qopen.cpp"
 STACKTOP = sp;return; //@line 14 "./src/cpp/unrar/qopen.cpp"
}
function __ZN9QuickOpen4LoadEy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = sp + 16|0;
 $5 = sp;
 $3 = $0;
 $10 = $4;
 $11 = $10;
 HEAP32[$11>>2] = $1;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $2;
 $14 = $3;
 $15 = ((($14)) + 6376|0); //@line 64 "./src/cpp/unrar/qopen.cpp"
 $16 = HEAP8[$15>>0]|0; //@line 64 "./src/cpp/unrar/qopen.cpp"
 $17 = $16&1; //@line 64 "./src/cpp/unrar/qopen.cpp"
 if (!($17)) {
  $18 = HEAP32[$14>>2]|0; //@line 66 "./src/cpp/unrar/qopen.cpp"
  $19 = HEAP32[$18>>2]|0; //@line 66 "./src/cpp/unrar/qopen.cpp"
  $20 = ((($19)) + 20|0); //@line 66 "./src/cpp/unrar/qopen.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 66 "./src/cpp/unrar/qopen.cpp"
  $22 = (FUNCTION_TABLE_ii[$21 & 511]($18)|0); //@line 66 "./src/cpp/unrar/qopen.cpp"
  $23 = tempRet0; //@line 66 "./src/cpp/unrar/qopen.cpp"
  $24 = ((($14)) + 6448|0); //@line 66 "./src/cpp/unrar/qopen.cpp"
  $25 = $24; //@line 66 "./src/cpp/unrar/qopen.cpp"
  $26 = $25; //@line 66 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$26>>2] = $22; //@line 66 "./src/cpp/unrar/qopen.cpp"
  $27 = (($25) + 4)|0; //@line 66 "./src/cpp/unrar/qopen.cpp"
  $28 = $27; //@line 66 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$28>>2] = $23; //@line 66 "./src/cpp/unrar/qopen.cpp"
  $29 = ((($14)) + 6456|0); //@line 67 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$29>>0] = 0; //@line 67 "./src/cpp/unrar/qopen.cpp"
  $30 = HEAP32[$14>>2]|0; //@line 69 "./src/cpp/unrar/qopen.cpp"
  __ZN11SaveFilePosC2ER4File($5,$30); //@line 69 "./src/cpp/unrar/qopen.cpp"
  $31 = HEAP32[$14>>2]|0; //@line 70 "./src/cpp/unrar/qopen.cpp"
  $32 = HEAP32[$31>>2]|0; //@line 70 "./src/cpp/unrar/qopen.cpp"
  $33 = ((($32)) + 16|0); //@line 70 "./src/cpp/unrar/qopen.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 70 "./src/cpp/unrar/qopen.cpp"
  $35 = $4; //@line 70 "./src/cpp/unrar/qopen.cpp"
  $36 = $35; //@line 70 "./src/cpp/unrar/qopen.cpp"
  $37 = HEAP32[$36>>2]|0; //@line 70 "./src/cpp/unrar/qopen.cpp"
  $38 = (($35) + 4)|0; //@line 70 "./src/cpp/unrar/qopen.cpp"
  $39 = $38; //@line 70 "./src/cpp/unrar/qopen.cpp"
  $40 = HEAP32[$39>>2]|0; //@line 70 "./src/cpp/unrar/qopen.cpp"
  __THREW__ = 0;
  invoke_viiii($34|0,($31|0),($37|0),($40|0),0); //@line 70 "./src/cpp/unrar/qopen.cpp"
  $41 = __THREW__; __THREW__ = 0;
  $42 = $41&1;
  if ($42) {
   $58 = ___cxa_find_matching_catch_2()|0;
   $59 = tempRet0;
   $6 = $58; //@line 101 "./src/cpp/unrar/qopen.cpp"
   $7 = $59; //@line 101 "./src/cpp/unrar/qopen.cpp"
   __ZN11SaveFilePosD2Ev($5); //@line 79 "./src/cpp/unrar/qopen.cpp"
   $60 = $6; //@line 79 "./src/cpp/unrar/qopen.cpp"
   $61 = $7; //@line 79 "./src/cpp/unrar/qopen.cpp"
   ___resumeException($60|0);
   // unreachable;
  }
  $43 = HEAP32[$14>>2]|0; //@line 71 "./src/cpp/unrar/qopen.cpp"
  __THREW__ = 0;
  $44 = (invoke_ii(85,($43|0))|0); //@line 71 "./src/cpp/unrar/qopen.cpp"
  $45 = __THREW__; __THREW__ = 0;
  $46 = $45&1;
  if ($46) {
   $58 = ___cxa_find_matching_catch_2()|0;
   $59 = tempRet0;
   $6 = $58; //@line 101 "./src/cpp/unrar/qopen.cpp"
   $7 = $59; //@line 101 "./src/cpp/unrar/qopen.cpp"
   __ZN11SaveFilePosD2Ev($5); //@line 79 "./src/cpp/unrar/qopen.cpp"
   $60 = $6; //@line 79 "./src/cpp/unrar/qopen.cpp"
   $61 = $7; //@line 79 "./src/cpp/unrar/qopen.cpp"
   ___resumeException($60|0);
   // unreachable;
  }
  $47 = ($44|0)==(0); //@line 71 "./src/cpp/unrar/qopen.cpp"
  do {
   if ($47) {
    label = 9;
   } else {
    $48 = HEAP32[$14>>2]|0; //@line 71 "./src/cpp/unrar/qopen.cpp"
    __THREW__ = 0;
    $49 = (invoke_ii(72,($48|0))|0); //@line 71 "./src/cpp/unrar/qopen.cpp"
    $50 = __THREW__; __THREW__ = 0;
    $51 = $50&1;
    if ($51) {
     $58 = ___cxa_find_matching_catch_2()|0;
     $59 = tempRet0;
     $6 = $58; //@line 101 "./src/cpp/unrar/qopen.cpp"
     $7 = $59; //@line 101 "./src/cpp/unrar/qopen.cpp"
     __ZN11SaveFilePosD2Ev($5); //@line 79 "./src/cpp/unrar/qopen.cpp"
     $60 = $6; //@line 79 "./src/cpp/unrar/qopen.cpp"
     $61 = $7; //@line 79 "./src/cpp/unrar/qopen.cpp"
     ___resumeException($60|0);
     // unreachable;
    }
    $52 = ($49|0)!=(3); //@line 71 "./src/cpp/unrar/qopen.cpp"
    if ($52) {
     label = 9;
    } else {
     $53 = HEAP32[$14>>2]|0; //@line 72 "./src/cpp/unrar/qopen.cpp"
     $54 = ((($53)) + 38640|0); //@line 72 "./src/cpp/unrar/qopen.cpp"
     __THREW__ = 0;
     $55 = (invoke_iii(89,($54|0),(608|0))|0); //@line 72 "./src/cpp/unrar/qopen.cpp"
     $56 = __THREW__; __THREW__ = 0;
     $57 = $56&1;
     if ($57) {
      $58 = ___cxa_find_matching_catch_2()|0;
      $59 = tempRet0;
      $6 = $58; //@line 101 "./src/cpp/unrar/qopen.cpp"
      $7 = $59; //@line 101 "./src/cpp/unrar/qopen.cpp"
      __ZN11SaveFilePosD2Ev($5); //@line 79 "./src/cpp/unrar/qopen.cpp"
      $60 = $6; //@line 79 "./src/cpp/unrar/qopen.cpp"
      $61 = $7; //@line 79 "./src/cpp/unrar/qopen.cpp"
      ___resumeException($60|0);
      // unreachable;
     }
     if ($55) {
      $62 = HEAP32[$14>>2]|0; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $63 = ((($62)) + 56840|0); //@line 74 "./src/cpp/unrar/qopen.cpp"
      $64 = $63; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $65 = $64; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $66 = HEAP32[$65>>2]|0; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $67 = (($64) + 4)|0; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $68 = $67; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $69 = HEAP32[$68>>2]|0; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $70 = ((($14)) + 6384|0); //@line 74 "./src/cpp/unrar/qopen.cpp"
      $71 = $70; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $72 = $71; //@line 74 "./src/cpp/unrar/qopen.cpp"
      HEAP32[$72>>2] = $66; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $73 = (($71) + 4)|0; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $74 = $73; //@line 74 "./src/cpp/unrar/qopen.cpp"
      HEAP32[$74>>2] = $69; //@line 74 "./src/cpp/unrar/qopen.cpp"
      $75 = HEAP32[$14>>2]|0; //@line 75 "./src/cpp/unrar/qopen.cpp"
      $76 = HEAP32[$75>>2]|0; //@line 75 "./src/cpp/unrar/qopen.cpp"
      $77 = ((($76)) + 20|0); //@line 75 "./src/cpp/unrar/qopen.cpp"
      $78 = HEAP32[$77>>2]|0; //@line 75 "./src/cpp/unrar/qopen.cpp"
      __THREW__ = 0;
      $79 = (invoke_ii($78|0,($75|0))|0); //@line 75 "./src/cpp/unrar/qopen.cpp"
      $80 = tempRet0; //@line 75 "./src/cpp/unrar/qopen.cpp"
      $81 = __THREW__; __THREW__ = 0;
      $82 = $81&1;
      if ($82) {
       $58 = ___cxa_find_matching_catch_2()|0;
       $59 = tempRet0;
       $6 = $58; //@line 101 "./src/cpp/unrar/qopen.cpp"
       $7 = $59; //@line 101 "./src/cpp/unrar/qopen.cpp"
       __ZN11SaveFilePosD2Ev($5); //@line 79 "./src/cpp/unrar/qopen.cpp"
       $60 = $6; //@line 79 "./src/cpp/unrar/qopen.cpp"
       $61 = $7; //@line 79 "./src/cpp/unrar/qopen.cpp"
       ___resumeException($60|0);
       // unreachable;
      } else {
       $83 = ((($14)) + 6392|0); //@line 75 "./src/cpp/unrar/qopen.cpp"
       $84 = $83; //@line 75 "./src/cpp/unrar/qopen.cpp"
       $85 = $84; //@line 75 "./src/cpp/unrar/qopen.cpp"
       HEAP32[$85>>2] = $79; //@line 75 "./src/cpp/unrar/qopen.cpp"
       $86 = (($84) + 4)|0; //@line 75 "./src/cpp/unrar/qopen.cpp"
       $87 = $86; //@line 75 "./src/cpp/unrar/qopen.cpp"
       HEAP32[$87>>2] = $80; //@line 75 "./src/cpp/unrar/qopen.cpp"
       $88 = HEAP32[$14>>2]|0; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $89 = ((($88)) + 38640|0); //@line 76 "./src/cpp/unrar/qopen.cpp"
       $90 = ((($89)) + 8272|0); //@line 76 "./src/cpp/unrar/qopen.cpp"
       $91 = $90; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $92 = $91; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $93 = HEAP32[$92>>2]|0; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $94 = (($91) + 4)|0; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $95 = $94; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $96 = HEAP32[$95>>2]|0; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $97 = ((($14)) + 6400|0); //@line 76 "./src/cpp/unrar/qopen.cpp"
       $98 = $97; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $99 = $98; //@line 76 "./src/cpp/unrar/qopen.cpp"
       HEAP32[$99>>2] = $93; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $100 = (($98) + 4)|0; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $101 = $100; //@line 76 "./src/cpp/unrar/qopen.cpp"
       HEAP32[$101>>2] = $96; //@line 76 "./src/cpp/unrar/qopen.cpp"
       $102 = ((($14)) + 6376|0); //@line 78 "./src/cpp/unrar/qopen.cpp"
       HEAP8[$102>>0] = 1; //@line 78 "./src/cpp/unrar/qopen.cpp"
       $8 = 0; //@line 79 "./src/cpp/unrar/qopen.cpp"
       break;
      }
     } else {
      label = 9;
     }
    }
   }
  } while(0);
  if ((label|0) == 9) {
   $8 = 1;
  }
  __ZN11SaveFilePosD2Ev($5); //@line 79 "./src/cpp/unrar/qopen.cpp"
  $103 = $8;
  $switch = ($103>>>0)<(1);
  if (!($switch)) {
   STACKTOP = sp;return; //@line 101 "./src/cpp/unrar/qopen.cpp"
  }
 }
 $104 = HEAP32[$14>>2]|0; //@line 81 "./src/cpp/unrar/qopen.cpp"
 $105 = ((($104)) + 38640|0); //@line 81 "./src/cpp/unrar/qopen.cpp"
 $106 = ((($105)) + 8331|0); //@line 81 "./src/cpp/unrar/qopen.cpp"
 $107 = HEAP8[$106>>0]|0; //@line 81 "./src/cpp/unrar/qopen.cpp"
 $108 = $107&1; //@line 81 "./src/cpp/unrar/qopen.cpp"
 do {
  if ($108) {
   $109 = HEAP32[$14>>2]|0; //@line 83 "./src/cpp/unrar/qopen.cpp"
   $110 = (__ZN7Archive13GetRAROptionsEv($109)|0); //@line 83 "./src/cpp/unrar/qopen.cpp"
   $9 = $110; //@line 83 "./src/cpp/unrar/qopen.cpp"
   $111 = $9; //@line 85 "./src/cpp/unrar/qopen.cpp"
   $112 = ((($111)) + 41000|0); //@line 85 "./src/cpp/unrar/qopen.cpp"
   $113 = (__ZN11SecPassword5IsSetEv($112)|0); //@line 85 "./src/cpp/unrar/qopen.cpp"
   if ($113) {
    $114 = ((($14)) + 24|0); //@line 86 "./src/cpp/unrar/qopen.cpp"
    $115 = $9; //@line 86 "./src/cpp/unrar/qopen.cpp"
    $116 = ((($115)) + 41000|0); //@line 86 "./src/cpp/unrar/qopen.cpp"
    $117 = HEAP32[$14>>2]|0; //@line 86 "./src/cpp/unrar/qopen.cpp"
    $118 = ((($117)) + 38640|0); //@line 86 "./src/cpp/unrar/qopen.cpp"
    $119 = ((($118)) + 8337|0); //@line 86 "./src/cpp/unrar/qopen.cpp"
    $120 = HEAP32[$14>>2]|0; //@line 87 "./src/cpp/unrar/qopen.cpp"
    $121 = ((($120)) + 38640|0); //@line 87 "./src/cpp/unrar/qopen.cpp"
    $122 = ((($121)) + 8353|0); //@line 87 "./src/cpp/unrar/qopen.cpp"
    $123 = HEAP32[$14>>2]|0; //@line 87 "./src/cpp/unrar/qopen.cpp"
    $124 = ((($123)) + 38640|0); //@line 87 "./src/cpp/unrar/qopen.cpp"
    $125 = ((($124)) + 8412|0); //@line 87 "./src/cpp/unrar/qopen.cpp"
    $126 = HEAP32[$125>>2]|0; //@line 87 "./src/cpp/unrar/qopen.cpp"
    $127 = HEAP32[$14>>2]|0; //@line 88 "./src/cpp/unrar/qopen.cpp"
    $128 = ((($127)) + 38640|0); //@line 88 "./src/cpp/unrar/qopen.cpp"
    $129 = ((($128)) + 8379|0); //@line 88 "./src/cpp/unrar/qopen.cpp"
    $130 = HEAP32[$14>>2]|0; //@line 88 "./src/cpp/unrar/qopen.cpp"
    $131 = ((($130)) + 38640|0); //@line 88 "./src/cpp/unrar/qopen.cpp"
    $132 = ((($131)) + 8370|0); //@line 88 "./src/cpp/unrar/qopen.cpp"
    (__ZN9CryptData12SetCryptKeysEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_($114,0,5,$116,$119,$122,$126,$129,$132)|0); //@line 86 "./src/cpp/unrar/qopen.cpp"
    break;
   } else {
    STACKTOP = sp;return; //@line 101 "./src/cpp/unrar/qopen.cpp"
   }
  }
 } while(0);
 $133 = ((($14)) + 6408|0); //@line 94 "./src/cpp/unrar/qopen.cpp"
 $134 = $133; //@line 94 "./src/cpp/unrar/qopen.cpp"
 $135 = $134; //@line 94 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$135>>2] = 0; //@line 94 "./src/cpp/unrar/qopen.cpp"
 $136 = (($134) + 4)|0; //@line 94 "./src/cpp/unrar/qopen.cpp"
 $137 = $136; //@line 94 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$137>>2] = 0; //@line 94 "./src/cpp/unrar/qopen.cpp"
 $138 = ((($14)) + 6416|0); //@line 95 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$138>>2] = 0; //@line 95 "./src/cpp/unrar/qopen.cpp"
 $139 = ((($14)) + 6420|0); //@line 96 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$139>>2] = 0; //@line 96 "./src/cpp/unrar/qopen.cpp"
 $140 = ((($14)) + 6424|0); //@line 97 "./src/cpp/unrar/qopen.cpp"
 __ZN5ArrayIhE5ResetEv($140); //@line 97 "./src/cpp/unrar/qopen.cpp"
 $141 = ((($14)) + 6440|0); //@line 98 "./src/cpp/unrar/qopen.cpp"
 $142 = $141; //@line 98 "./src/cpp/unrar/qopen.cpp"
 $143 = $142; //@line 98 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$143>>2] = 0; //@line 98 "./src/cpp/unrar/qopen.cpp"
 $144 = (($142) + 4)|0; //@line 98 "./src/cpp/unrar/qopen.cpp"
 $145 = $144; //@line 98 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$145>>2] = 0; //@line 98 "./src/cpp/unrar/qopen.cpp"
 (__ZN9QuickOpen10ReadBufferEv($14)|0); //@line 100 "./src/cpp/unrar/qopen.cpp"
 STACKTOP = sp;return; //@line 101 "./src/cpp/unrar/qopen.cpp"
}
function __ZN11SaveFilePosC2ER4File($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 12 "./src/cpp/unrar/savepos.hpp"
 HEAP32[$4>>2] = $5; //@line 12 "./src/cpp/unrar/savepos.hpp"
 $6 = $3; //@line 13 "./src/cpp/unrar/savepos.hpp"
 $7 = HEAP32[$6>>2]|0; //@line 13 "./src/cpp/unrar/savepos.hpp"
 $8 = ((($7)) + 20|0); //@line 13 "./src/cpp/unrar/savepos.hpp"
 $9 = HEAP32[$8>>2]|0; //@line 13 "./src/cpp/unrar/savepos.hpp"
 $10 = (FUNCTION_TABLE_ii[$9 & 511]($6)|0); //@line 13 "./src/cpp/unrar/savepos.hpp"
 $11 = tempRet0; //@line 13 "./src/cpp/unrar/savepos.hpp"
 $12 = ((($4)) + 8|0); //@line 13 "./src/cpp/unrar/savepos.hpp"
 $13 = $12; //@line 13 "./src/cpp/unrar/savepos.hpp"
 $14 = $13; //@line 13 "./src/cpp/unrar/savepos.hpp"
 HEAP32[$14>>2] = $10; //@line 13 "./src/cpp/unrar/savepos.hpp"
 $15 = (($13) + 4)|0; //@line 13 "./src/cpp/unrar/savepos.hpp"
 $16 = $15; //@line 13 "./src/cpp/unrar/savepos.hpp"
 HEAP32[$16>>2] = $11; //@line 13 "./src/cpp/unrar/savepos.hpp"
 STACKTOP = sp;return; //@line 14 "./src/cpp/unrar/savepos.hpp"
}
function __ZN10FileHeader7CmpNameEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 32|0); //@line 258 "./src/cpp/unrar/headers.hpp"
 $6 = $3; //@line 258 "./src/cpp/unrar/headers.hpp"
 $7 = (_wcscmp($5,$6)|0); //@line 258 "./src/cpp/unrar/headers.hpp"
 $8 = ($7|0)==(0); //@line 258 "./src/cpp/unrar/headers.hpp"
 STACKTOP = sp;return ($8|0); //@line 258 "./src/cpp/unrar/headers.hpp"
}
function __ZN11SaveFilePosD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 17 "./src/cpp/unrar/savepos.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 17 "./src/cpp/unrar/savepos.hpp"
 $5 = ((($4)) + 16|0); //@line 17 "./src/cpp/unrar/savepos.hpp"
 $6 = HEAP32[$5>>2]|0; //@line 17 "./src/cpp/unrar/savepos.hpp"
 $7 = ((($2)) + 8|0); //@line 17 "./src/cpp/unrar/savepos.hpp"
 $8 = $7; //@line 17 "./src/cpp/unrar/savepos.hpp"
 $9 = $8; //@line 17 "./src/cpp/unrar/savepos.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 17 "./src/cpp/unrar/savepos.hpp"
 $11 = (($8) + 4)|0; //@line 17 "./src/cpp/unrar/savepos.hpp"
 $12 = $11; //@line 17 "./src/cpp/unrar/savepos.hpp"
 $13 = HEAP32[$12>>2]|0; //@line 17 "./src/cpp/unrar/savepos.hpp"
 __THREW__ = 0;
 invoke_viiii($6|0,($3|0),($10|0),($13|0),0); //@line 17 "./src/cpp/unrar/savepos.hpp"
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if ($15) {
  $16 = ___cxa_find_matching_catch_3(0|0)|0;
  $17 = tempRet0;
  ___clang_call_terminate($16); //@line 17 "./src/cpp/unrar/savepos.hpp"
  // unreachable; //@line 17 "./src/cpp/unrar/savepos.hpp"
 } else {
  STACKTOP = sp;return; //@line 18 "./src/cpp/unrar/savepos.hpp"
 }
}
function __ZN7Archive13GetRAROptionsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 14764|0); //@line 89 "./src/cpp/unrar/archive.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 89 "./src/cpp/unrar/archive.hpp"
 STACKTOP = sp;return ($4|0); //@line 89 "./src/cpp/unrar/archive.hpp"
}
function __ZN11SecPassword5IsSetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 512|0); //@line 22 "./src/cpp/unrar/secpassword.hpp"
 $4 = HEAP8[$3>>0]|0; //@line 22 "./src/cpp/unrar/secpassword.hpp"
 $5 = $4&1; //@line 22 "./src/cpp/unrar/secpassword.hpp"
 STACKTOP = sp;return ($5|0); //@line 22 "./src/cpp/unrar/secpassword.hpp"
}
function __ZN5ArrayIhE5ResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 124 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 124 "./src/cpp/unrar/array.hpp"
 if ($4) {
  $5 = HEAP32[$2>>2]|0; //@line 126 "./src/cpp/unrar/array.hpp"
  _free($5); //@line 126 "./src/cpp/unrar/array.hpp"
  HEAP32[$2>>2] = 0; //@line 127 "./src/cpp/unrar/array.hpp"
 }
 $6 = ((($2)) + 4|0); //@line 129 "./src/cpp/unrar/array.hpp"
 HEAP32[$6>>2] = 0; //@line 129 "./src/cpp/unrar/array.hpp"
 $7 = ((($2)) + 8|0); //@line 130 "./src/cpp/unrar/array.hpp"
 HEAP32[$7>>2] = 0; //@line 130 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 131 "./src/cpp/unrar/array.hpp"
}
function __ZN9QuickOpen10ReadBufferEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $3 = sp;
 $2 = $0;
 $9 = $2;
 $10 = HEAP32[$9>>2]|0; //@line 188 "./src/cpp/unrar/qopen.cpp"
 __ZN11SaveFilePosC2ER4File($3,$10); //@line 188 "./src/cpp/unrar/qopen.cpp"
 $11 = HEAP32[$9>>2]|0; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $12 = ((($9)) + 6392|0); //@line 189 "./src/cpp/unrar/qopen.cpp"
 $13 = $12; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $14 = $13; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $16 = (($13) + 4)|0; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $17 = $16; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $19 = ((($9)) + 6408|0); //@line 189 "./src/cpp/unrar/qopen.cpp"
 $20 = $19; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $21 = $20; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $23 = (($20) + 4)|0; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $24 = $23; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $25 = HEAP32[$24>>2]|0; //@line 189 "./src/cpp/unrar/qopen.cpp"
 $26 = (_i64Add(($15|0),($18|0),($22|0),($25|0))|0); //@line 189 "./src/cpp/unrar/qopen.cpp"
 $27 = tempRet0; //@line 189 "./src/cpp/unrar/qopen.cpp"
 __THREW__ = 0;
 invoke_viiii(11,($11|0),($26|0),($27|0),0); //@line 189 "./src/cpp/unrar/qopen.cpp"
 $28 = __THREW__; __THREW__ = 0;
 $29 = $28&1;
 if ($29) {
  $81 = ___cxa_find_matching_catch_2()|0;
  $82 = tempRet0;
  $4 = $81; //@line 205 "./src/cpp/unrar/qopen.cpp"
  $5 = $82; //@line 205 "./src/cpp/unrar/qopen.cpp"
  __ZN11SaveFilePosD2Ev($3); //@line 205 "./src/cpp/unrar/qopen.cpp"
  $83 = $4; //@line 205 "./src/cpp/unrar/qopen.cpp"
  $84 = $5; //@line 205 "./src/cpp/unrar/qopen.cpp"
  ___resumeException($83|0);
  // unreachable;
 }
 $30 = ((($9)) + 6400|0); //@line 190 "./src/cpp/unrar/qopen.cpp"
 $31 = $30; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $32 = $31; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $33 = HEAP32[$32>>2]|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $34 = (($31) + 4)|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $35 = $34; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $36 = HEAP32[$35>>2]|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $37 = ((($9)) + 6408|0); //@line 190 "./src/cpp/unrar/qopen.cpp"
 $38 = $37; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $39 = $38; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $40 = HEAP32[$39>>2]|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $41 = (($38) + 4)|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $42 = $41; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $43 = HEAP32[$42>>2]|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $44 = (_i64Subtract(($33|0),($36|0),($40|0),($43|0))|0); //@line 190 "./src/cpp/unrar/qopen.cpp"
 $45 = tempRet0; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $46 = ((($9)) + 6416|0); //@line 190 "./src/cpp/unrar/qopen.cpp"
 $47 = HEAP32[$46>>2]|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $48 = (65536 - ($47))|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $49 = ($45>>>0)<(0); //@line 190 "./src/cpp/unrar/qopen.cpp"
 $50 = ($44>>>0)<($48>>>0); //@line 190 "./src/cpp/unrar/qopen.cpp"
 $51 = ($45|0)==(0); //@line 190 "./src/cpp/unrar/qopen.cpp"
 $52 = $51 & $50; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $53 = $49 | $52; //@line 190 "./src/cpp/unrar/qopen.cpp"
 if ($53) {
  $54 = ((($9)) + 6400|0); //@line 190 "./src/cpp/unrar/qopen.cpp"
  $55 = $54; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $56 = $55; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $57 = HEAP32[$56>>2]|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $58 = (($55) + 4)|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $59 = $58; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $60 = HEAP32[$59>>2]|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $61 = ((($9)) + 6408|0); //@line 190 "./src/cpp/unrar/qopen.cpp"
  $62 = $61; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $63 = $62; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $64 = HEAP32[$63>>2]|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $65 = (($62) + 4)|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $66 = $65; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $67 = HEAP32[$66>>2]|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $68 = (_i64Subtract(($57|0),($60|0),($64|0),($67|0))|0); //@line 190 "./src/cpp/unrar/qopen.cpp"
  $69 = tempRet0; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $136 = $69;$73 = $68;
 } else {
  $70 = ((($9)) + 6416|0); //@line 190 "./src/cpp/unrar/qopen.cpp"
  $71 = HEAP32[$70>>2]|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $72 = (65536 - ($71))|0; //@line 190 "./src/cpp/unrar/qopen.cpp"
  $136 = 0;$73 = $72;
 }
 $6 = $73; //@line 190 "./src/cpp/unrar/qopen.cpp"
 $74 = HEAP32[$9>>2]|0; //@line 191 "./src/cpp/unrar/qopen.cpp"
 $75 = ((($74)) + 38640|0); //@line 191 "./src/cpp/unrar/qopen.cpp"
 $76 = ((($75)) + 8331|0); //@line 191 "./src/cpp/unrar/qopen.cpp"
 $77 = HEAP8[$76>>0]|0; //@line 191 "./src/cpp/unrar/qopen.cpp"
 $78 = $77&1; //@line 191 "./src/cpp/unrar/qopen.cpp"
 if ($78) {
  $79 = $6; //@line 192 "./src/cpp/unrar/qopen.cpp"
  $80 = $79 & -16; //@line 192 "./src/cpp/unrar/qopen.cpp"
  $6 = $80; //@line 192 "./src/cpp/unrar/qopen.cpp"
 }
 $85 = $6; //@line 193 "./src/cpp/unrar/qopen.cpp"
 $86 = ($85|0)==(0); //@line 193 "./src/cpp/unrar/qopen.cpp"
 if ($86) {
  $1 = 0; //@line 194 "./src/cpp/unrar/qopen.cpp"
  $7 = 1;
  __ZN11SaveFilePosD2Ev($3); //@line 205 "./src/cpp/unrar/qopen.cpp"
  $135 = $1; //@line 205 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($135|0); //@line 205 "./src/cpp/unrar/qopen.cpp"
 }
 $87 = HEAP32[$9>>2]|0; //@line 195 "./src/cpp/unrar/qopen.cpp"
 $88 = ((($9)) + 16|0); //@line 195 "./src/cpp/unrar/qopen.cpp"
 $89 = HEAP32[$88>>2]|0; //@line 195 "./src/cpp/unrar/qopen.cpp"
 $90 = ((($9)) + 6416|0); //@line 195 "./src/cpp/unrar/qopen.cpp"
 $91 = HEAP32[$90>>2]|0; //@line 195 "./src/cpp/unrar/qopen.cpp"
 $92 = (($89) + ($91)|0); //@line 195 "./src/cpp/unrar/qopen.cpp"
 $93 = $6; //@line 195 "./src/cpp/unrar/qopen.cpp"
 __THREW__ = 0;
 $94 = (invoke_iiii(10,($87|0),($92|0),($93|0))|0); //@line 195 "./src/cpp/unrar/qopen.cpp"
 $95 = __THREW__; __THREW__ = 0;
 $96 = $95&1;
 if ($96) {
  $81 = ___cxa_find_matching_catch_2()|0;
  $82 = tempRet0;
  $4 = $81; //@line 205 "./src/cpp/unrar/qopen.cpp"
  $5 = $82; //@line 205 "./src/cpp/unrar/qopen.cpp"
  __ZN11SaveFilePosD2Ev($3); //@line 205 "./src/cpp/unrar/qopen.cpp"
  $83 = $4; //@line 205 "./src/cpp/unrar/qopen.cpp"
  $84 = $5; //@line 205 "./src/cpp/unrar/qopen.cpp"
  ___resumeException($83|0);
  // unreachable;
 }
 $8 = $94; //@line 195 "./src/cpp/unrar/qopen.cpp"
 $97 = $8; //@line 196 "./src/cpp/unrar/qopen.cpp"
 $98 = ($97|0)<=(0); //@line 196 "./src/cpp/unrar/qopen.cpp"
 if ($98) {
  $1 = 0; //@line 197 "./src/cpp/unrar/qopen.cpp"
  $7 = 1;
  __ZN11SaveFilePosD2Ev($3); //@line 205 "./src/cpp/unrar/qopen.cpp"
  $135 = $1; //@line 205 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($135|0); //@line 205 "./src/cpp/unrar/qopen.cpp"
 }
 $99 = HEAP32[$9>>2]|0; //@line 199 "./src/cpp/unrar/qopen.cpp"
 $100 = ((($99)) + 38640|0); //@line 199 "./src/cpp/unrar/qopen.cpp"
 $101 = ((($100)) + 8331|0); //@line 199 "./src/cpp/unrar/qopen.cpp"
 $102 = HEAP8[$101>>0]|0; //@line 199 "./src/cpp/unrar/qopen.cpp"
 $103 = $102&1; //@line 199 "./src/cpp/unrar/qopen.cpp"
 if ($103) {
  $104 = ((($9)) + 24|0); //@line 200 "./src/cpp/unrar/qopen.cpp"
  $105 = ((($9)) + 16|0); //@line 200 "./src/cpp/unrar/qopen.cpp"
  $106 = HEAP32[$105>>2]|0; //@line 200 "./src/cpp/unrar/qopen.cpp"
  $107 = ((($9)) + 6416|0); //@line 200 "./src/cpp/unrar/qopen.cpp"
  $108 = HEAP32[$107>>2]|0; //@line 200 "./src/cpp/unrar/qopen.cpp"
  $109 = (($106) + ($108)|0); //@line 200 "./src/cpp/unrar/qopen.cpp"
  $110 = $8; //@line 200 "./src/cpp/unrar/qopen.cpp"
  $111 = $110 & -16; //@line 200 "./src/cpp/unrar/qopen.cpp"
  __THREW__ = 0;
  invoke_viii(90,($104|0),($109|0),($111|0)); //@line 200 "./src/cpp/unrar/qopen.cpp"
  $112 = __THREW__; __THREW__ = 0;
  $113 = $112&1;
  if ($113) {
   $81 = ___cxa_find_matching_catch_2()|0;
   $82 = tempRet0;
   $4 = $81; //@line 205 "./src/cpp/unrar/qopen.cpp"
   $5 = $82; //@line 205 "./src/cpp/unrar/qopen.cpp"
   __ZN11SaveFilePosD2Ev($3); //@line 205 "./src/cpp/unrar/qopen.cpp"
   $83 = $4; //@line 205 "./src/cpp/unrar/qopen.cpp"
   $84 = $5; //@line 205 "./src/cpp/unrar/qopen.cpp"
   ___resumeException($83|0);
   // unreachable;
  }
 }
 $114 = $8; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $115 = ($114|0)<(0); //@line 202 "./src/cpp/unrar/qopen.cpp"
 $116 = $115 << 31 >> 31; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $117 = ((($9)) + 6408|0); //@line 202 "./src/cpp/unrar/qopen.cpp"
 $118 = $117; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $119 = $118; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $120 = HEAP32[$119>>2]|0; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $121 = (($118) + 4)|0; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $122 = $121; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $123 = HEAP32[$122>>2]|0; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $124 = (_i64Add(($120|0),($123|0),($114|0),($116|0))|0); //@line 202 "./src/cpp/unrar/qopen.cpp"
 $125 = tempRet0; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $126 = $117; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $127 = $126; //@line 202 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$127>>2] = $124; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $128 = (($126) + 4)|0; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $129 = $128; //@line 202 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$129>>2] = $125; //@line 202 "./src/cpp/unrar/qopen.cpp"
 $130 = $8; //@line 203 "./src/cpp/unrar/qopen.cpp"
 $131 = ((($9)) + 6416|0); //@line 203 "./src/cpp/unrar/qopen.cpp"
 $132 = HEAP32[$131>>2]|0; //@line 203 "./src/cpp/unrar/qopen.cpp"
 $133 = (($132) + ($130))|0; //@line 203 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$131>>2] = $133; //@line 203 "./src/cpp/unrar/qopen.cpp"
 $134 = $8; //@line 204 "./src/cpp/unrar/qopen.cpp"
 $1 = $134; //@line 204 "./src/cpp/unrar/qopen.cpp"
 $7 = 1;
 __ZN11SaveFilePosD2Ev($3); //@line 205 "./src/cpp/unrar/qopen.cpp"
 $135 = $1; //@line 205 "./src/cpp/unrar/qopen.cpp"
 STACKTOP = sp;return ($135|0); //@line 205 "./src/cpp/unrar/qopen.cpp"
}
function __ZN9QuickOpen4ReadEPvjRj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 20|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $10 = $5;
 $11 = ((($10)) + 6376|0); //@line 106 "./src/cpp/unrar/qopen.cpp"
 $12 = HEAP8[$11>>0]|0; //@line 106 "./src/cpp/unrar/qopen.cpp"
 $13 = $12&1; //@line 106 "./src/cpp/unrar/qopen.cpp"
 if (!($13)) {
  $$expand_i1_val = 0; //@line 107 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$4>>0] = $$expand_i1_val; //@line 107 "./src/cpp/unrar/qopen.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 146 "./src/cpp/unrar/qopen.cpp"
  $171 = $$pre_trunc&1; //@line 146 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($171|0); //@line 146 "./src/cpp/unrar/qopen.cpp"
 }
 while(1) {
  $14 = ((($10)) + 6440|0); //@line 109 "./src/cpp/unrar/qopen.cpp"
  $15 = $14; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $16 = $15; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $17 = HEAP32[$16>>2]|0; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $18 = (($15) + 4)|0; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $19 = $18; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $20 = HEAP32[$19>>2]|0; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $21 = ((($10)) + 6424|0); //@line 109 "./src/cpp/unrar/qopen.cpp"
  $22 = (__ZN5ArrayIhE4SizeEv($21)|0); //@line 109 "./src/cpp/unrar/qopen.cpp"
  $23 = (_i64Add(($17|0),($20|0),($22|0),0)|0); //@line 109 "./src/cpp/unrar/qopen.cpp"
  $24 = tempRet0; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $25 = ((($10)) + 6448|0); //@line 109 "./src/cpp/unrar/qopen.cpp"
  $26 = $25; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $27 = $26; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $29 = (($26) + 4)|0; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $30 = $29; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $31 = HEAP32[$30>>2]|0; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $32 = ($24>>>0)<($31>>>0); //@line 109 "./src/cpp/unrar/qopen.cpp"
  $33 = ($23>>>0)<=($28>>>0); //@line 109 "./src/cpp/unrar/qopen.cpp"
  $34 = ($24|0)==($31|0); //@line 109 "./src/cpp/unrar/qopen.cpp"
  $35 = $34 & $33; //@line 109 "./src/cpp/unrar/qopen.cpp"
  $36 = $32 | $35; //@line 109 "./src/cpp/unrar/qopen.cpp"
  if (!($36)) {
   break;
  }
  $37 = (__ZN9QuickOpen8ReadNextEv($10)|0); //@line 110 "./src/cpp/unrar/qopen.cpp"
  if (!($37)) {
   break;
  }
 }
 $38 = ((($10)) + 6376|0); //@line 112 "./src/cpp/unrar/qopen.cpp"
 $39 = HEAP8[$38>>0]|0; //@line 112 "./src/cpp/unrar/qopen.cpp"
 $40 = $39&1; //@line 112 "./src/cpp/unrar/qopen.cpp"
 if (!($40)) {
  $41 = ((($10)) + 6456|0); //@line 116 "./src/cpp/unrar/qopen.cpp"
  $42 = HEAP8[$41>>0]|0; //@line 116 "./src/cpp/unrar/qopen.cpp"
  $43 = $42&1; //@line 116 "./src/cpp/unrar/qopen.cpp"
  if ($43) {
   $44 = HEAP32[$10>>2]|0; //@line 117 "./src/cpp/unrar/qopen.cpp"
   $45 = ((($10)) + 6448|0); //@line 117 "./src/cpp/unrar/qopen.cpp"
   $46 = $45; //@line 117 "./src/cpp/unrar/qopen.cpp"
   $47 = $46; //@line 117 "./src/cpp/unrar/qopen.cpp"
   $48 = HEAP32[$47>>2]|0; //@line 117 "./src/cpp/unrar/qopen.cpp"
   $49 = (($46) + 4)|0; //@line 117 "./src/cpp/unrar/qopen.cpp"
   $50 = $49; //@line 117 "./src/cpp/unrar/qopen.cpp"
   $51 = HEAP32[$50>>2]|0; //@line 117 "./src/cpp/unrar/qopen.cpp"
   __ZN4File4SeekExi($44,$48,$51,0); //@line 117 "./src/cpp/unrar/qopen.cpp"
  }
  $$expand_i1_val2 = 0; //@line 118 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$4>>0] = $$expand_i1_val2; //@line 118 "./src/cpp/unrar/qopen.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 146 "./src/cpp/unrar/qopen.cpp"
  $171 = $$pre_trunc&1; //@line 146 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($171|0); //@line 146 "./src/cpp/unrar/qopen.cpp"
 }
 $52 = ((($10)) + 6448|0); //@line 121 "./src/cpp/unrar/qopen.cpp"
 $53 = $52; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $54 = $53; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $55 = HEAP32[$54>>2]|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $56 = (($53) + 4)|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $57 = $56; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $58 = HEAP32[$57>>2]|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $59 = ((($10)) + 6440|0); //@line 121 "./src/cpp/unrar/qopen.cpp"
 $60 = $59; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $61 = $60; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $62 = HEAP32[$61>>2]|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $63 = (($60) + 4)|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $64 = $63; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $65 = HEAP32[$64>>2]|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $66 = ($58>>>0)>($65>>>0); //@line 121 "./src/cpp/unrar/qopen.cpp"
 $67 = ($55>>>0)>=($62>>>0); //@line 121 "./src/cpp/unrar/qopen.cpp"
 $68 = ($58|0)==($65|0); //@line 121 "./src/cpp/unrar/qopen.cpp"
 $69 = $68 & $67; //@line 121 "./src/cpp/unrar/qopen.cpp"
 $70 = $66 | $69; //@line 121 "./src/cpp/unrar/qopen.cpp"
 if ($70) {
  $71 = ((($10)) + 6448|0); //@line 121 "./src/cpp/unrar/qopen.cpp"
  $72 = $71; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $73 = $72; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $74 = HEAP32[$73>>2]|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $75 = (($72) + 4)|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $76 = $75; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $77 = HEAP32[$76>>2]|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $78 = $7; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $79 = (_i64Add(($74|0),($77|0),($78|0),0)|0); //@line 121 "./src/cpp/unrar/qopen.cpp"
  $80 = tempRet0; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $81 = ((($10)) + 6440|0); //@line 121 "./src/cpp/unrar/qopen.cpp"
  $82 = $81; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $83 = $82; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $84 = HEAP32[$83>>2]|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $85 = (($82) + 4)|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $86 = $85; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $87 = HEAP32[$86>>2]|0; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $88 = ((($10)) + 6424|0); //@line 121 "./src/cpp/unrar/qopen.cpp"
  $89 = (__ZN5ArrayIhE4SizeEv($88)|0); //@line 121 "./src/cpp/unrar/qopen.cpp"
  $90 = (_i64Add(($84|0),($87|0),($89|0),0)|0); //@line 121 "./src/cpp/unrar/qopen.cpp"
  $91 = tempRet0; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $92 = ($80>>>0)<($91>>>0); //@line 121 "./src/cpp/unrar/qopen.cpp"
  $93 = ($79>>>0)<=($90>>>0); //@line 121 "./src/cpp/unrar/qopen.cpp"
  $94 = ($80|0)==($91|0); //@line 121 "./src/cpp/unrar/qopen.cpp"
  $95 = $94 & $93; //@line 121 "./src/cpp/unrar/qopen.cpp"
  $96 = $92 | $95; //@line 121 "./src/cpp/unrar/qopen.cpp"
  if ($96) {
   $97 = $6; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $98 = ((($10)) + 6424|0); //@line 123 "./src/cpp/unrar/qopen.cpp"
   $99 = ((($10)) + 6448|0); //@line 123 "./src/cpp/unrar/qopen.cpp"
   $100 = $99; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $101 = $100; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $102 = HEAP32[$101>>2]|0; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $103 = (($100) + 4)|0; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $104 = $103; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $105 = HEAP32[$104>>2]|0; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $106 = ((($10)) + 6440|0); //@line 123 "./src/cpp/unrar/qopen.cpp"
   $107 = $106; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $108 = $107; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $109 = HEAP32[$108>>2]|0; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $110 = (($107) + 4)|0; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $111 = $110; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $112 = HEAP32[$111>>2]|0; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $113 = (_i64Subtract(($102|0),($105|0),($109|0),($112|0))|0); //@line 123 "./src/cpp/unrar/qopen.cpp"
   $114 = tempRet0; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $115 = (__ZN5ArrayIhEplEj($98,$113)|0); //@line 123 "./src/cpp/unrar/qopen.cpp"
   $116 = $7; //@line 123 "./src/cpp/unrar/qopen.cpp"
   _memcpy(($97|0),($115|0),($116|0))|0; //@line 123 "./src/cpp/unrar/qopen.cpp"
   $117 = $7; //@line 124 "./src/cpp/unrar/qopen.cpp"
   $118 = $8; //@line 124 "./src/cpp/unrar/qopen.cpp"
   HEAP32[$118>>2] = $117; //@line 124 "./src/cpp/unrar/qopen.cpp"
   $119 = $7; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $120 = ((($10)) + 6448|0); //@line 125 "./src/cpp/unrar/qopen.cpp"
   $121 = $120; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $122 = $121; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $123 = HEAP32[$122>>2]|0; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $124 = (($121) + 4)|0; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $125 = $124; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $126 = HEAP32[$125>>2]|0; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $127 = (_i64Add(($123|0),($126|0),($119|0),0)|0); //@line 125 "./src/cpp/unrar/qopen.cpp"
   $128 = tempRet0; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $129 = $120; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $130 = $129; //@line 125 "./src/cpp/unrar/qopen.cpp"
   HEAP32[$130>>2] = $127; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $131 = (($129) + 4)|0; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $132 = $131; //@line 125 "./src/cpp/unrar/qopen.cpp"
   HEAP32[$132>>2] = $128; //@line 125 "./src/cpp/unrar/qopen.cpp"
   $133 = ((($10)) + 6456|0); //@line 126 "./src/cpp/unrar/qopen.cpp"
   HEAP8[$133>>0] = 1; //@line 126 "./src/cpp/unrar/qopen.cpp"
  } else {
   label = 12;
  }
 } else {
  label = 12;
 }
 do {
  if ((label|0) == 12) {
   $134 = ((($10)) + 6456|0); //@line 130 "./src/cpp/unrar/qopen.cpp"
   $135 = HEAP8[$134>>0]|0; //@line 130 "./src/cpp/unrar/qopen.cpp"
   $136 = $135&1; //@line 130 "./src/cpp/unrar/qopen.cpp"
   if ($136) {
    $137 = HEAP32[$10>>2]|0; //@line 132 "./src/cpp/unrar/qopen.cpp"
    $138 = ((($10)) + 6448|0); //@line 132 "./src/cpp/unrar/qopen.cpp"
    $139 = $138; //@line 132 "./src/cpp/unrar/qopen.cpp"
    $140 = $139; //@line 132 "./src/cpp/unrar/qopen.cpp"
    $141 = HEAP32[$140>>2]|0; //@line 132 "./src/cpp/unrar/qopen.cpp"
    $142 = (($139) + 4)|0; //@line 132 "./src/cpp/unrar/qopen.cpp"
    $143 = $142; //@line 132 "./src/cpp/unrar/qopen.cpp"
    $144 = HEAP32[$143>>2]|0; //@line 132 "./src/cpp/unrar/qopen.cpp"
    __ZN4File4SeekExi($137,$141,$144,0); //@line 132 "./src/cpp/unrar/qopen.cpp"
    $145 = ((($10)) + 6456|0); //@line 133 "./src/cpp/unrar/qopen.cpp"
    HEAP8[$145>>0] = 0; //@line 133 "./src/cpp/unrar/qopen.cpp"
   }
   $146 = HEAP32[$10>>2]|0; //@line 135 "./src/cpp/unrar/qopen.cpp"
   $147 = $6; //@line 135 "./src/cpp/unrar/qopen.cpp"
   $148 = $7; //@line 135 "./src/cpp/unrar/qopen.cpp"
   $149 = (__ZN4File4ReadEPvj($146,$147,$148)|0); //@line 135 "./src/cpp/unrar/qopen.cpp"
   $9 = $149; //@line 135 "./src/cpp/unrar/qopen.cpp"
   $150 = $9; //@line 136 "./src/cpp/unrar/qopen.cpp"
   $151 = ($150|0)<(0); //@line 136 "./src/cpp/unrar/qopen.cpp"
   if (!($151)) {
    $153 = $9; //@line 141 "./src/cpp/unrar/qopen.cpp"
    $154 = $8; //@line 141 "./src/cpp/unrar/qopen.cpp"
    HEAP32[$154>>2] = $153; //@line 141 "./src/cpp/unrar/qopen.cpp"
    $155 = $9; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $156 = ($155|0)<(0); //@line 142 "./src/cpp/unrar/qopen.cpp"
    $157 = $156 << 31 >> 31; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $158 = ((($10)) + 6448|0); //@line 142 "./src/cpp/unrar/qopen.cpp"
    $159 = $158; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $160 = $159; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $161 = HEAP32[$160>>2]|0; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $162 = (($159) + 4)|0; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $163 = $162; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $164 = HEAP32[$163>>2]|0; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $165 = (_i64Add(($161|0),($164|0),($155|0),($157|0))|0); //@line 142 "./src/cpp/unrar/qopen.cpp"
    $166 = tempRet0; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $167 = $158; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $168 = $167; //@line 142 "./src/cpp/unrar/qopen.cpp"
    HEAP32[$168>>2] = $165; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $169 = (($167) + 4)|0; //@line 142 "./src/cpp/unrar/qopen.cpp"
    $170 = $169; //@line 142 "./src/cpp/unrar/qopen.cpp"
    HEAP32[$170>>2] = $166; //@line 142 "./src/cpp/unrar/qopen.cpp"
    break;
   }
   $152 = ((($10)) + 6376|0); //@line 138 "./src/cpp/unrar/qopen.cpp"
   HEAP8[$152>>0] = 0; //@line 138 "./src/cpp/unrar/qopen.cpp"
   $$expand_i1_val4 = 0; //@line 139 "./src/cpp/unrar/qopen.cpp"
   HEAP8[$4>>0] = $$expand_i1_val4; //@line 139 "./src/cpp/unrar/qopen.cpp"
   $$pre_trunc = HEAP8[$4>>0]|0; //@line 146 "./src/cpp/unrar/qopen.cpp"
   $171 = $$pre_trunc&1; //@line 146 "./src/cpp/unrar/qopen.cpp"
   STACKTOP = sp;return ($171|0); //@line 146 "./src/cpp/unrar/qopen.cpp"
  }
 } while(0);
 $$expand_i1_val6 = 1; //@line 145 "./src/cpp/unrar/qopen.cpp"
 HEAP8[$4>>0] = $$expand_i1_val6; //@line 145 "./src/cpp/unrar/qopen.cpp"
 $$pre_trunc = HEAP8[$4>>0]|0; //@line 146 "./src/cpp/unrar/qopen.cpp"
 $171 = $$pre_trunc&1; //@line 146 "./src/cpp/unrar/qopen.cpp"
 STACKTOP = sp;return ($171|0); //@line 146 "./src/cpp/unrar/qopen.cpp"
}
function __ZN5ArrayIhE4SizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 86 "./src/cpp/unrar/array.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 86 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($4|0); //@line 86 "./src/cpp/unrar/array.hpp"
}
function __ZN9QuickOpen8ReadNextEv($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $1 = sp + 68|0;
 $3 = sp + 32|0;
 $8 = sp;
 $2 = $0;
 $10 = $2;
 __ZN7RawReadC2EP4File($3,0); //@line 261 "./src/cpp/unrar/qopen.cpp"
 __THREW__ = 0;
 $11 = (invoke_iii(91,($10|0),($3|0))|0); //@line 262 "./src/cpp/unrar/qopen.cpp"
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if (!($13)) {
  if (!($11)) {
   $$expand_i1_val = 0; //@line 263 "./src/cpp/unrar/qopen.cpp"
   HEAP8[$1>>0] = $$expand_i1_val; //@line 263 "./src/cpp/unrar/qopen.cpp"
   $6 = 1;
   __ZN7RawReadD2Ev($3); //@line 272 "./src/cpp/unrar/qopen.cpp"
   $$pre_trunc = HEAP8[$1>>0]|0; //@line 272 "./src/cpp/unrar/qopen.cpp"
   $65 = $$pre_trunc&1; //@line 272 "./src/cpp/unrar/qopen.cpp"
   STACKTOP = sp;return ($65|0); //@line 272 "./src/cpp/unrar/qopen.cpp"
  }
  __THREW__ = 0;
  $18 = (invoke_ii(92,($3|0))|0); //@line 264 "./src/cpp/unrar/qopen.cpp"
  $19 = tempRet0; //@line 264 "./src/cpp/unrar/qopen.cpp"
  $20 = __THREW__; __THREW__ = 0;
  $21 = $20&1;
  if (!($21)) {
   $7 = $18; //@line 264 "./src/cpp/unrar/qopen.cpp"
   __THREW__ = 0;
   $22 = (invoke_ii(92,($3|0))|0); //@line 265 "./src/cpp/unrar/qopen.cpp"
   $23 = tempRet0; //@line 265 "./src/cpp/unrar/qopen.cpp"
   $24 = __THREW__; __THREW__ = 0;
   $25 = $24&1;
   if (!($25)) {
    $26 = $8; //@line 265 "./src/cpp/unrar/qopen.cpp"
    $27 = $26; //@line 265 "./src/cpp/unrar/qopen.cpp"
    HEAP32[$27>>2] = $22; //@line 265 "./src/cpp/unrar/qopen.cpp"
    $28 = (($26) + 4)|0; //@line 265 "./src/cpp/unrar/qopen.cpp"
    $29 = $28; //@line 265 "./src/cpp/unrar/qopen.cpp"
    HEAP32[$29>>2] = $23; //@line 265 "./src/cpp/unrar/qopen.cpp"
    __THREW__ = 0;
    $30 = (invoke_ii(92,($3|0))|0); //@line 266 "./src/cpp/unrar/qopen.cpp"
    $31 = tempRet0; //@line 266 "./src/cpp/unrar/qopen.cpp"
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if (!($33)) {
     $9 = $30; //@line 266 "./src/cpp/unrar/qopen.cpp"
     $34 = ((($10)) + 6424|0); //@line 267 "./src/cpp/unrar/qopen.cpp"
     $35 = $9; //@line 267 "./src/cpp/unrar/qopen.cpp"
     __THREW__ = 0;
     invoke_vii(93,($34|0),($35|0)); //@line 267 "./src/cpp/unrar/qopen.cpp"
     $36 = __THREW__; __THREW__ = 0;
     $37 = $36&1;
     if (!($37)) {
      $38 = ((($10)) + 6424|0); //@line 268 "./src/cpp/unrar/qopen.cpp"
      __THREW__ = 0;
      $39 = (invoke_iii(94,($38|0),0)|0); //@line 268 "./src/cpp/unrar/qopen.cpp"
      $40 = __THREW__; __THREW__ = 0;
      $41 = $40&1;
      if (!($41)) {
       $42 = $9; //@line 268 "./src/cpp/unrar/qopen.cpp"
       __THREW__ = 0;
       (invoke_iiii(95,($3|0),($39|0),($42|0))|0); //@line 268 "./src/cpp/unrar/qopen.cpp"
       $43 = __THREW__; __THREW__ = 0;
       $44 = $43&1;
       if (!($44)) {
        $45 = ((($10)) + 6384|0); //@line 270 "./src/cpp/unrar/qopen.cpp"
        $46 = $45; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $47 = $46; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $48 = HEAP32[$47>>2]|0; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $49 = (($46) + 4)|0; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $50 = $49; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $51 = HEAP32[$50>>2]|0; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $52 = $8; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $53 = $52; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $54 = HEAP32[$53>>2]|0; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $55 = (($52) + 4)|0; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $56 = $55; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $57 = HEAP32[$56>>2]|0; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $58 = (_i64Subtract(($48|0),($51|0),($54|0),($57|0))|0); //@line 270 "./src/cpp/unrar/qopen.cpp"
        $59 = tempRet0; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $60 = ((($10)) + 6440|0); //@line 270 "./src/cpp/unrar/qopen.cpp"
        $61 = $60; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $62 = $61; //@line 270 "./src/cpp/unrar/qopen.cpp"
        HEAP32[$62>>2] = $58; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $63 = (($61) + 4)|0; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $64 = $63; //@line 270 "./src/cpp/unrar/qopen.cpp"
        HEAP32[$64>>2] = $59; //@line 270 "./src/cpp/unrar/qopen.cpp"
        $$expand_i1_val2 = 1; //@line 271 "./src/cpp/unrar/qopen.cpp"
        HEAP8[$1>>0] = $$expand_i1_val2; //@line 271 "./src/cpp/unrar/qopen.cpp"
        $6 = 1;
        __ZN7RawReadD2Ev($3); //@line 272 "./src/cpp/unrar/qopen.cpp"
        $$pre_trunc = HEAP8[$1>>0]|0; //@line 272 "./src/cpp/unrar/qopen.cpp"
        $65 = $$pre_trunc&1; //@line 272 "./src/cpp/unrar/qopen.cpp"
        STACKTOP = sp;return ($65|0); //@line 272 "./src/cpp/unrar/qopen.cpp"
       }
      }
     }
    }
   }
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $4 = $14; //@line 272 "./src/cpp/unrar/qopen.cpp"
 $5 = $15; //@line 272 "./src/cpp/unrar/qopen.cpp"
 __ZN7RawReadD2Ev($3); //@line 272 "./src/cpp/unrar/qopen.cpp"
 $16 = $4; //@line 272 "./src/cpp/unrar/qopen.cpp"
 $17 = $5; //@line 272 "./src/cpp/unrar/qopen.cpp"
 ___resumeException($16|0);
 // unreachable;
 return (0)|0;
}
function __ZN5ArrayIhEplEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 80 "./src/cpp/unrar/array.hpp"
 $6 = $3; //@line 80 "./src/cpp/unrar/array.hpp"
 $7 = (($5) + ($6)|0); //@line 80 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($7|0); //@line 80 "./src/cpp/unrar/array.hpp"
}
function __ZN9QuickOpen7ReadRawER7RawRead($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$expand_i1_val9 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 44|0;
 $9 = sp;
 $3 = $0;
 $4 = $1;
 $13 = $3;
 $14 = ((($13)) + 6420|0); //@line 211 "./src/cpp/unrar/qopen.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 211 "./src/cpp/unrar/qopen.cpp"
 $16 = (65536 - ($15))|0; //@line 211 "./src/cpp/unrar/qopen.cpp"
 $17 = ($16>>>0)<(256); //@line 211 "./src/cpp/unrar/qopen.cpp"
 if ($17) {
  $18 = ((($13)) + 6416|0); //@line 214 "./src/cpp/unrar/qopen.cpp"
  $19 = HEAP32[$18>>2]|0; //@line 214 "./src/cpp/unrar/qopen.cpp"
  $20 = ((($13)) + 6420|0); //@line 214 "./src/cpp/unrar/qopen.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 214 "./src/cpp/unrar/qopen.cpp"
  $22 = (($19) - ($21))|0; //@line 214 "./src/cpp/unrar/qopen.cpp"
  $5 = $22; //@line 214 "./src/cpp/unrar/qopen.cpp"
  $23 = ((($13)) + 16|0); //@line 215 "./src/cpp/unrar/qopen.cpp"
  $24 = HEAP32[$23>>2]|0; //@line 215 "./src/cpp/unrar/qopen.cpp"
  $25 = ((($13)) + 16|0); //@line 215 "./src/cpp/unrar/qopen.cpp"
  $26 = HEAP32[$25>>2]|0; //@line 215 "./src/cpp/unrar/qopen.cpp"
  $27 = ((($13)) + 6420|0); //@line 215 "./src/cpp/unrar/qopen.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 215 "./src/cpp/unrar/qopen.cpp"
  $29 = (($26) + ($28)|0); //@line 215 "./src/cpp/unrar/qopen.cpp"
  $30 = $5; //@line 215 "./src/cpp/unrar/qopen.cpp"
  _memcpy(($24|0),($29|0),($30|0))|0; //@line 215 "./src/cpp/unrar/qopen.cpp"
  $31 = ((($13)) + 6420|0); //@line 216 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$31>>2] = 0; //@line 216 "./src/cpp/unrar/qopen.cpp"
  $32 = $5; //@line 217 "./src/cpp/unrar/qopen.cpp"
  $33 = ((($13)) + 6416|0); //@line 217 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$33>>2] = $32; //@line 217 "./src/cpp/unrar/qopen.cpp"
  (__ZN9QuickOpen10ReadBufferEv($13)|0); //@line 218 "./src/cpp/unrar/qopen.cpp"
 }
 $6 = 7; //@line 220 "./src/cpp/unrar/qopen.cpp"
 $34 = ((($13)) + 6420|0); //@line 221 "./src/cpp/unrar/qopen.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 221 "./src/cpp/unrar/qopen.cpp"
 $36 = (($35) + 7)|0; //@line 221 "./src/cpp/unrar/qopen.cpp"
 $37 = ((($13)) + 6416|0); //@line 221 "./src/cpp/unrar/qopen.cpp"
 $38 = HEAP32[$37>>2]|0; //@line 221 "./src/cpp/unrar/qopen.cpp"
 $39 = ($36>>>0)>($38>>>0); //@line 221 "./src/cpp/unrar/qopen.cpp"
 if ($39) {
  $$expand_i1_val = 0; //@line 222 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 222 "./src/cpp/unrar/qopen.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 255 "./src/cpp/unrar/qopen.cpp"
  $122 = $$pre_trunc&1; //@line 255 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($122|0); //@line 255 "./src/cpp/unrar/qopen.cpp"
 }
 $40 = $4; //@line 223 "./src/cpp/unrar/qopen.cpp"
 $41 = ((($13)) + 16|0); //@line 223 "./src/cpp/unrar/qopen.cpp"
 $42 = HEAP32[$41>>2]|0; //@line 223 "./src/cpp/unrar/qopen.cpp"
 $43 = ((($13)) + 6420|0); //@line 223 "./src/cpp/unrar/qopen.cpp"
 $44 = HEAP32[$43>>2]|0; //@line 223 "./src/cpp/unrar/qopen.cpp"
 $45 = (($42) + ($44)|0); //@line 223 "./src/cpp/unrar/qopen.cpp"
 __ZN7RawRead4ReadEPhj($40,$45,7); //@line 223 "./src/cpp/unrar/qopen.cpp"
 $46 = ((($13)) + 6420|0); //@line 224 "./src/cpp/unrar/qopen.cpp"
 $47 = HEAP32[$46>>2]|0; //@line 224 "./src/cpp/unrar/qopen.cpp"
 $48 = (($47) + 7)|0; //@line 224 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$46>>2] = $48; //@line 224 "./src/cpp/unrar/qopen.cpp"
 $49 = $4; //@line 226 "./src/cpp/unrar/qopen.cpp"
 $50 = (__ZN7RawRead4Get4Ev($49)|0); //@line 226 "./src/cpp/unrar/qopen.cpp"
 $7 = $50; //@line 226 "./src/cpp/unrar/qopen.cpp"
 $51 = $4; //@line 227 "./src/cpp/unrar/qopen.cpp"
 $52 = (__ZN7RawRead8GetVSizeEj($51,4)|0); //@line 227 "./src/cpp/unrar/qopen.cpp"
 $8 = $52; //@line 227 "./src/cpp/unrar/qopen.cpp"
 $53 = $4; //@line 228 "./src/cpp/unrar/qopen.cpp"
 $54 = (__ZN7RawRead4GetVEv($53)|0); //@line 228 "./src/cpp/unrar/qopen.cpp"
 $55 = tempRet0; //@line 228 "./src/cpp/unrar/qopen.cpp"
 $56 = $9; //@line 228 "./src/cpp/unrar/qopen.cpp"
 $57 = $56; //@line 228 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$57>>2] = $54; //@line 228 "./src/cpp/unrar/qopen.cpp"
 $58 = (($56) + 4)|0; //@line 228 "./src/cpp/unrar/qopen.cpp"
 $59 = $58; //@line 228 "./src/cpp/unrar/qopen.cpp"
 HEAP32[$59>>2] = $55; //@line 228 "./src/cpp/unrar/qopen.cpp"
 $60 = $9; //@line 229 "./src/cpp/unrar/qopen.cpp"
 $61 = $60; //@line 229 "./src/cpp/unrar/qopen.cpp"
 $62 = HEAP32[$61>>2]|0; //@line 229 "./src/cpp/unrar/qopen.cpp"
 $63 = (($60) + 4)|0; //@line 229 "./src/cpp/unrar/qopen.cpp"
 $64 = $63; //@line 229 "./src/cpp/unrar/qopen.cpp"
 $65 = HEAP32[$64>>2]|0; //@line 229 "./src/cpp/unrar/qopen.cpp"
 $10 = $62; //@line 229 "./src/cpp/unrar/qopen.cpp"
 $66 = $8; //@line 230 "./src/cpp/unrar/qopen.cpp"
 $67 = (7 - ($66))|0; //@line 230 "./src/cpp/unrar/qopen.cpp"
 $68 = (($67) - 4)|0; //@line 230 "./src/cpp/unrar/qopen.cpp"
 $69 = $10; //@line 230 "./src/cpp/unrar/qopen.cpp"
 $70 = (($69) - ($68))|0; //@line 230 "./src/cpp/unrar/qopen.cpp"
 $10 = $70; //@line 230 "./src/cpp/unrar/qopen.cpp"
 $71 = $10; //@line 231 "./src/cpp/unrar/qopen.cpp"
 $72 = ($71|0)<(0); //@line 231 "./src/cpp/unrar/qopen.cpp"
 $73 = $8; //@line 231 "./src/cpp/unrar/qopen.cpp"
 $74 = ($73|0)==(0); //@line 231 "./src/cpp/unrar/qopen.cpp"
 $or$cond = $72 | $74; //@line 231 "./src/cpp/unrar/qopen.cpp"
 $75 = $9; //@line 231 "./src/cpp/unrar/qopen.cpp"
 $76 = $75; //@line 231 "./src/cpp/unrar/qopen.cpp"
 $77 = HEAP32[$76>>2]|0; //@line 231 "./src/cpp/unrar/qopen.cpp"
 $78 = (($75) + 4)|0; //@line 231 "./src/cpp/unrar/qopen.cpp"
 $79 = $78; //@line 231 "./src/cpp/unrar/qopen.cpp"
 $80 = HEAP32[$79>>2]|0; //@line 231 "./src/cpp/unrar/qopen.cpp"
 $81 = ($77|0)==(0); //@line 231 "./src/cpp/unrar/qopen.cpp"
 $82 = ($80|0)==(0); //@line 231 "./src/cpp/unrar/qopen.cpp"
 $83 = $81 & $82; //@line 231 "./src/cpp/unrar/qopen.cpp"
 $or$cond3 = $or$cond | $83; //@line 231 "./src/cpp/unrar/qopen.cpp"
 if ($or$cond3) {
  $84 = ((($13)) + 6376|0); //@line 233 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$84>>0] = 0; //@line 233 "./src/cpp/unrar/qopen.cpp"
  $$expand_i1_val5 = 0; //@line 234 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$2>>0] = $$expand_i1_val5; //@line 234 "./src/cpp/unrar/qopen.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 255 "./src/cpp/unrar/qopen.cpp"
  $122 = $$pre_trunc&1; //@line 255 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($122|0); //@line 255 "./src/cpp/unrar/qopen.cpp"
 }
 $85 = ((($13)) + 6416|0); //@line 238 "./src/cpp/unrar/qopen.cpp"
 $86 = HEAP32[$85>>2]|0; //@line 238 "./src/cpp/unrar/qopen.cpp"
 $87 = ((($13)) + 6420|0); //@line 238 "./src/cpp/unrar/qopen.cpp"
 $88 = HEAP32[$87>>2]|0; //@line 238 "./src/cpp/unrar/qopen.cpp"
 $89 = (($86) - ($88))|0; //@line 238 "./src/cpp/unrar/qopen.cpp"
 $11 = $89; //@line 238 "./src/cpp/unrar/qopen.cpp"
 while(1) {
  $90 = $10; //@line 239 "./src/cpp/unrar/qopen.cpp"
  $91 = ($90|0)>(0); //@line 239 "./src/cpp/unrar/qopen.cpp"
  if (!($91)) {
   label = 12;
   break;
  }
  $92 = $11; //@line 241 "./src/cpp/unrar/qopen.cpp"
  $93 = $10; //@line 241 "./src/cpp/unrar/qopen.cpp"
  $94 = ($92>>>0)<($93>>>0); //@line 241 "./src/cpp/unrar/qopen.cpp"
  $95 = $11; //@line 241 "./src/cpp/unrar/qopen.cpp"
  $96 = $10; //@line 241 "./src/cpp/unrar/qopen.cpp"
  $97 = $94 ? $95 : $96; //@line 241 "./src/cpp/unrar/qopen.cpp"
  $12 = $97; //@line 241 "./src/cpp/unrar/qopen.cpp"
  $98 = $4; //@line 242 "./src/cpp/unrar/qopen.cpp"
  $99 = ((($13)) + 16|0); //@line 242 "./src/cpp/unrar/qopen.cpp"
  $100 = HEAP32[$99>>2]|0; //@line 242 "./src/cpp/unrar/qopen.cpp"
  $101 = ((($13)) + 6420|0); //@line 242 "./src/cpp/unrar/qopen.cpp"
  $102 = HEAP32[$101>>2]|0; //@line 242 "./src/cpp/unrar/qopen.cpp"
  $103 = (($100) + ($102)|0); //@line 242 "./src/cpp/unrar/qopen.cpp"
  $104 = $12; //@line 242 "./src/cpp/unrar/qopen.cpp"
  __ZN7RawRead4ReadEPhj($98,$103,$104); //@line 242 "./src/cpp/unrar/qopen.cpp"
  $105 = $12; //@line 243 "./src/cpp/unrar/qopen.cpp"
  $106 = ((($13)) + 6420|0); //@line 243 "./src/cpp/unrar/qopen.cpp"
  $107 = HEAP32[$106>>2]|0; //@line 243 "./src/cpp/unrar/qopen.cpp"
  $108 = (($107) + ($105))|0; //@line 243 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$106>>2] = $108; //@line 243 "./src/cpp/unrar/qopen.cpp"
  $109 = $12; //@line 244 "./src/cpp/unrar/qopen.cpp"
  $110 = $10; //@line 244 "./src/cpp/unrar/qopen.cpp"
  $111 = (($110) - ($109))|0; //@line 244 "./src/cpp/unrar/qopen.cpp"
  $10 = $111; //@line 244 "./src/cpp/unrar/qopen.cpp"
  $112 = $10; //@line 245 "./src/cpp/unrar/qopen.cpp"
  $113 = ($112|0)>(0); //@line 245 "./src/cpp/unrar/qopen.cpp"
  if (!($113)) {
   continue;
  }
  $114 = ((($13)) + 6420|0); //@line 247 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$114>>2] = 0; //@line 247 "./src/cpp/unrar/qopen.cpp"
  $115 = ((($13)) + 6416|0); //@line 248 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$115>>2] = 0; //@line 248 "./src/cpp/unrar/qopen.cpp"
  $116 = (__ZN9QuickOpen10ReadBufferEv($13)|0); //@line 249 "./src/cpp/unrar/qopen.cpp"
  $117 = ($116|0)==(0); //@line 249 "./src/cpp/unrar/qopen.cpp"
  if ($117) {
   label = 11;
   break;
  }
 }
 if ((label|0) == 11) {
  $$expand_i1_val7 = 0; //@line 250 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$2>>0] = $$expand_i1_val7; //@line 250 "./src/cpp/unrar/qopen.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 255 "./src/cpp/unrar/qopen.cpp"
  $122 = $$pre_trunc&1; //@line 255 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($122|0); //@line 255 "./src/cpp/unrar/qopen.cpp"
 }
 else if ((label|0) == 12) {
  $118 = $7; //@line 254 "./src/cpp/unrar/qopen.cpp"
  $119 = $4; //@line 254 "./src/cpp/unrar/qopen.cpp"
  $120 = (__ZN7RawRead8GetCRC50Ev($119)|0); //@line 254 "./src/cpp/unrar/qopen.cpp"
  $121 = ($118|0)==($120|0); //@line 254 "./src/cpp/unrar/qopen.cpp"
  $$expand_i1_val9 = $121&1; //@line 254 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$2>>0] = $$expand_i1_val9; //@line 254 "./src/cpp/unrar/qopen.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 255 "./src/cpp/unrar/qopen.cpp"
  $122 = $$pre_trunc&1; //@line 255 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($122|0); //@line 255 "./src/cpp/unrar/qopen.cpp"
 }
 return (0)|0;
}
function __ZN7RawReadD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5ArrayIhED2Ev($2); //@line 4 "./src/cpp/unrar/rawread.hpp"
 STACKTOP = sp;return; //@line 4 "./src/cpp/unrar/rawread.hpp"
}
function __ZN5ArrayIhE5AllocEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 115 "./src/cpp/unrar/array.hpp"
 $6 = ((($4)) + 8|0); //@line 115 "./src/cpp/unrar/array.hpp"
 $7 = HEAP32[$6>>2]|0; //@line 115 "./src/cpp/unrar/array.hpp"
 $8 = ($5>>>0)>($7>>>0); //@line 115 "./src/cpp/unrar/array.hpp"
 $9 = $3;
 $10 = ((($4)) + 4|0);
 if ($8) {
  $11 = HEAP32[$10>>2]|0; //@line 116 "./src/cpp/unrar/array.hpp"
  $12 = (($9) - ($11))|0; //@line 116 "./src/cpp/unrar/array.hpp"
  __ZN5ArrayIhE3AddEj($4,$12); //@line 116 "./src/cpp/unrar/array.hpp"
  STACKTOP = sp;return; //@line 119 "./src/cpp/unrar/array.hpp"
 } else {
  HEAP32[$10>>2] = $9; //@line 118 "./src/cpp/unrar/array.hpp"
  STACKTOP = sp;return; //@line 119 "./src/cpp/unrar/array.hpp"
 }
}
function __ZNK5ArrayIhEixEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 74 "./src/cpp/unrar/array.hpp"
 $6 = $3; //@line 74 "./src/cpp/unrar/array.hpp"
 $7 = (($5) + ($6)|0); //@line 74 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($7|0); //@line 74 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIhE3AddEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = $3; //@line 92 "./src/cpp/unrar/array.hpp"
 $9 = ((($7)) + 4|0); //@line 92 "./src/cpp/unrar/array.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 92 "./src/cpp/unrar/array.hpp"
 $11 = (($10) + ($8))|0; //@line 92 "./src/cpp/unrar/array.hpp"
 HEAP32[$9>>2] = $11; //@line 92 "./src/cpp/unrar/array.hpp"
 $12 = ((($7)) + 4|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $13 = HEAP32[$12>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $14 = ((($7)) + 8|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $15 = HEAP32[$14>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $16 = ($13>>>0)>($15>>>0); //@line 93 "./src/cpp/unrar/array.hpp"
 if (!($16)) {
  STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
 }
 $17 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
 $18 = HEAP32[$17>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
 $19 = ($18|0)!=(0); //@line 95 "./src/cpp/unrar/array.hpp"
 if ($19) {
  $20 = ((($7)) + 4|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $21 = HEAP32[$20>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $22 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $23 = HEAP32[$22>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $24 = ($21>>>0)>($23>>>0); //@line 95 "./src/cpp/unrar/array.hpp"
  if ($24) {
   $25 = ((($7)) + 12|0); //@line 97 "./src/cpp/unrar/array.hpp"
   $26 = HEAP32[$25>>2]|0; //@line 97 "./src/cpp/unrar/array.hpp"
   HEAP32[$vararg_buffer>>2] = $26; //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler13GeneralErrMsgEPKwz(756,2544,$vararg_buffer); //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler11MemoryErrorEv(756); //@line 98 "./src/cpp/unrar/array.hpp"
  }
 }
 $27 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $28 = HEAP32[$27>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $29 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $30 = HEAP32[$29>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $31 = (($30>>>0) / 4)&-1; //@line 101 "./src/cpp/unrar/array.hpp"
 $32 = (($28) + ($31))|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $33 = (($32) + 32)|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $4 = $33; //@line 101 "./src/cpp/unrar/array.hpp"
 $34 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
 $35 = HEAP32[$34>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
 $36 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
 $37 = ($35>>>0)>($36>>>0); //@line 102 "./src/cpp/unrar/array.hpp"
 if ($37) {
  $38 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
  $39 = HEAP32[$38>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $39;
 } else {
  $40 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $40;
 }
 $5 = $41; //@line 102 "./src/cpp/unrar/array.hpp"
 $42 = HEAP32[$7>>2]|0; //@line 104 "./src/cpp/unrar/array.hpp"
 $43 = $5; //@line 104 "./src/cpp/unrar/array.hpp"
 $44 = $43; //@line 104 "./src/cpp/unrar/array.hpp"
 $45 = (_realloc($42,$44)|0); //@line 104 "./src/cpp/unrar/array.hpp"
 $6 = $45; //@line 104 "./src/cpp/unrar/array.hpp"
 $46 = $6; //@line 105 "./src/cpp/unrar/array.hpp"
 $47 = ($46|0)==(0|0); //@line 105 "./src/cpp/unrar/array.hpp"
 if ($47) {
  __ZN12ErrorHandler11MemoryErrorEv(756); //@line 106 "./src/cpp/unrar/array.hpp"
 }
 $48 = $6; //@line 107 "./src/cpp/unrar/array.hpp"
 HEAP32[$7>>2] = $48; //@line 107 "./src/cpp/unrar/array.hpp"
 $49 = $5; //@line 108 "./src/cpp/unrar/array.hpp"
 $50 = ((($7)) + 8|0); //@line 108 "./src/cpp/unrar/array.hpp"
 HEAP32[$50>>2] = $49; //@line 108 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
}
function __ZN9QuickOpen4SeekExi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 16|0;
 $6 = sp;
 $5 = $0;
 $8 = $6;
 $9 = $8;
 HEAP32[$9>>2] = $1;
 $10 = (($8) + 4)|0;
 $11 = $10;
 HEAP32[$11>>2] = $2;
 $7 = $3;
 $12 = $5;
 $13 = ((($12)) + 6376|0); //@line 151 "./src/cpp/unrar/qopen.cpp"
 $14 = HEAP8[$13>>0]|0; //@line 151 "./src/cpp/unrar/qopen.cpp"
 $15 = $14&1; //@line 151 "./src/cpp/unrar/qopen.cpp"
 if (!($15)) {
  $$expand_i1_val = 0; //@line 152 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$4>>0] = $$expand_i1_val; //@line 152 "./src/cpp/unrar/qopen.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 174 "./src/cpp/unrar/qopen.cpp"
  $114 = $$pre_trunc&1; //@line 174 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($114|0); //@line 174 "./src/cpp/unrar/qopen.cpp"
 }
 $16 = $7; //@line 158 "./src/cpp/unrar/qopen.cpp"
 $17 = ($16|0)==(0); //@line 158 "./src/cpp/unrar/qopen.cpp"
 if ($17) {
  $18 = $6; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $19 = $18; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $20 = HEAP32[$19>>2]|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $21 = (($18) + 4)|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $22 = $21; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $23 = HEAP32[$22>>2]|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $24 = ((($12)) + 6448|0); //@line 158 "./src/cpp/unrar/qopen.cpp"
  $25 = $24; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $26 = $25; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $27 = HEAP32[$26>>2]|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $28 = (($25) + 4)|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $29 = $28; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $30 = HEAP32[$29>>2]|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $31 = ($23>>>0)<($30>>>0); //@line 158 "./src/cpp/unrar/qopen.cpp"
  $32 = ($20>>>0)<($27>>>0); //@line 158 "./src/cpp/unrar/qopen.cpp"
  $33 = ($23|0)==($30|0); //@line 158 "./src/cpp/unrar/qopen.cpp"
  $34 = $33 & $32; //@line 158 "./src/cpp/unrar/qopen.cpp"
  $35 = $31 | $34; //@line 158 "./src/cpp/unrar/qopen.cpp"
  if ($35) {
   $36 = $6; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $37 = $36; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $38 = HEAP32[$37>>2]|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $39 = (($36) + 4)|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $40 = $39; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $41 = HEAP32[$40>>2]|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $42 = ((($12)) + 6440|0); //@line 158 "./src/cpp/unrar/qopen.cpp"
   $43 = $42; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $44 = $43; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $45 = HEAP32[$44>>2]|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $46 = (($43) + 4)|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $47 = $46; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $48 = HEAP32[$47>>2]|0; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $49 = ($41>>>0)<($48>>>0); //@line 158 "./src/cpp/unrar/qopen.cpp"
   $50 = ($38>>>0)<($45>>>0); //@line 158 "./src/cpp/unrar/qopen.cpp"
   $51 = ($41|0)==($48|0); //@line 158 "./src/cpp/unrar/qopen.cpp"
   $52 = $51 & $50; //@line 158 "./src/cpp/unrar/qopen.cpp"
   $53 = $49 | $52; //@line 158 "./src/cpp/unrar/qopen.cpp"
   if ($53) {
    $54 = ((($12)) + 6384|0); //@line 159 "./src/cpp/unrar/qopen.cpp"
    $55 = $54; //@line 159 "./src/cpp/unrar/qopen.cpp"
    $56 = $55; //@line 159 "./src/cpp/unrar/qopen.cpp"
    $57 = HEAP32[$56>>2]|0; //@line 159 "./src/cpp/unrar/qopen.cpp"
    $58 = (($55) + 4)|0; //@line 159 "./src/cpp/unrar/qopen.cpp"
    $59 = $58; //@line 159 "./src/cpp/unrar/qopen.cpp"
    $60 = HEAP32[$59>>2]|0; //@line 159 "./src/cpp/unrar/qopen.cpp"
    __ZN9QuickOpen4LoadEy($12,$57,$60); //@line 159 "./src/cpp/unrar/qopen.cpp"
   }
  }
 }
 $61 = $7; //@line 161 "./src/cpp/unrar/qopen.cpp"
 $62 = ($61|0)==(0); //@line 161 "./src/cpp/unrar/qopen.cpp"
 if ($62) {
  $63 = $6; //@line 162 "./src/cpp/unrar/qopen.cpp"
  $64 = $63; //@line 162 "./src/cpp/unrar/qopen.cpp"
  $65 = HEAP32[$64>>2]|0; //@line 162 "./src/cpp/unrar/qopen.cpp"
  $66 = (($63) + 4)|0; //@line 162 "./src/cpp/unrar/qopen.cpp"
  $67 = $66; //@line 162 "./src/cpp/unrar/qopen.cpp"
  $68 = HEAP32[$67>>2]|0; //@line 162 "./src/cpp/unrar/qopen.cpp"
  $69 = ((($12)) + 6448|0); //@line 162 "./src/cpp/unrar/qopen.cpp"
  $70 = $69; //@line 162 "./src/cpp/unrar/qopen.cpp"
  $71 = $70; //@line 162 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$71>>2] = $65; //@line 162 "./src/cpp/unrar/qopen.cpp"
  $72 = (($70) + 4)|0; //@line 162 "./src/cpp/unrar/qopen.cpp"
  $73 = $72; //@line 162 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$73>>2] = $68; //@line 162 "./src/cpp/unrar/qopen.cpp"
 }
 $74 = $7; //@line 163 "./src/cpp/unrar/qopen.cpp"
 $75 = ($74|0)==(1); //@line 163 "./src/cpp/unrar/qopen.cpp"
 if ($75) {
  $76 = $6; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $77 = $76; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $78 = HEAP32[$77>>2]|0; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $79 = (($76) + 4)|0; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $80 = $79; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $81 = HEAP32[$80>>2]|0; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $82 = ((($12)) + 6448|0); //@line 164 "./src/cpp/unrar/qopen.cpp"
  $83 = $82; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $84 = $83; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $85 = HEAP32[$84>>2]|0; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $86 = (($83) + 4)|0; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $87 = $86; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $88 = HEAP32[$87>>2]|0; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $89 = (_i64Add(($85|0),($88|0),($78|0),($81|0))|0); //@line 164 "./src/cpp/unrar/qopen.cpp"
  $90 = tempRet0; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $91 = $82; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $92 = $91; //@line 164 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$92>>2] = $89; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $93 = (($91) + 4)|0; //@line 164 "./src/cpp/unrar/qopen.cpp"
  $94 = $93; //@line 164 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$94>>2] = $90; //@line 164 "./src/cpp/unrar/qopen.cpp"
 }
 $95 = ((($12)) + 6456|0); //@line 165 "./src/cpp/unrar/qopen.cpp"
 HEAP8[$95>>0] = 1; //@line 165 "./src/cpp/unrar/qopen.cpp"
 $96 = $7; //@line 167 "./src/cpp/unrar/qopen.cpp"
 $97 = ($96|0)==(2); //@line 167 "./src/cpp/unrar/qopen.cpp"
 if ($97) {
  $98 = HEAP32[$12>>2]|0; //@line 169 "./src/cpp/unrar/qopen.cpp"
  $99 = $6; //@line 169 "./src/cpp/unrar/qopen.cpp"
  $100 = $99; //@line 169 "./src/cpp/unrar/qopen.cpp"
  $101 = HEAP32[$100>>2]|0; //@line 169 "./src/cpp/unrar/qopen.cpp"
  $102 = (($99) + 4)|0; //@line 169 "./src/cpp/unrar/qopen.cpp"
  $103 = $102; //@line 169 "./src/cpp/unrar/qopen.cpp"
  $104 = HEAP32[$103>>2]|0; //@line 169 "./src/cpp/unrar/qopen.cpp"
  __ZN4File4SeekExi($98,$101,$104,2); //@line 169 "./src/cpp/unrar/qopen.cpp"
  $105 = HEAP32[$12>>2]|0; //@line 170 "./src/cpp/unrar/qopen.cpp"
  $106 = (__ZN4File4TellEv($105)|0); //@line 170 "./src/cpp/unrar/qopen.cpp"
  $107 = tempRet0; //@line 170 "./src/cpp/unrar/qopen.cpp"
  $108 = ((($12)) + 6448|0); //@line 170 "./src/cpp/unrar/qopen.cpp"
  $109 = $108; //@line 170 "./src/cpp/unrar/qopen.cpp"
  $110 = $109; //@line 170 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$110>>2] = $106; //@line 170 "./src/cpp/unrar/qopen.cpp"
  $111 = (($109) + 4)|0; //@line 170 "./src/cpp/unrar/qopen.cpp"
  $112 = $111; //@line 170 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$112>>2] = $107; //@line 170 "./src/cpp/unrar/qopen.cpp"
  $113 = ((($12)) + 6456|0); //@line 171 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$113>>0] = 0; //@line 171 "./src/cpp/unrar/qopen.cpp"
 }
 $$expand_i1_val2 = 1; //@line 173 "./src/cpp/unrar/qopen.cpp"
 HEAP8[$4>>0] = $$expand_i1_val2; //@line 173 "./src/cpp/unrar/qopen.cpp"
 $$pre_trunc = HEAP8[$4>>0]|0; //@line 174 "./src/cpp/unrar/qopen.cpp"
 $114 = $$pre_trunc&1; //@line 174 "./src/cpp/unrar/qopen.cpp"
 STACKTOP = sp;return ($114|0); //@line 174 "./src/cpp/unrar/qopen.cpp"
}
function __ZN9QuickOpen4TellEPx($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $5 = $3;
 $6 = ((($5)) + 6376|0); //@line 179 "./src/cpp/unrar/qopen.cpp"
 $7 = HEAP8[$6>>0]|0; //@line 179 "./src/cpp/unrar/qopen.cpp"
 $8 = $7&1; //@line 179 "./src/cpp/unrar/qopen.cpp"
 if ($8) {
  $9 = ((($5)) + 6448|0); //@line 181 "./src/cpp/unrar/qopen.cpp"
  $10 = $9; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $11 = $10; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $13 = (($10) + 4)|0; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $14 = $13; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $16 = $4; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $17 = $16; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $18 = $17; //@line 181 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$18>>2] = $12; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $19 = (($17) + 4)|0; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $20 = $19; //@line 181 "./src/cpp/unrar/qopen.cpp"
  HEAP32[$20>>2] = $15; //@line 181 "./src/cpp/unrar/qopen.cpp"
  $$expand_i1_val2 = 1; //@line 182 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$2>>0] = $$expand_i1_val2; //@line 182 "./src/cpp/unrar/qopen.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 183 "./src/cpp/unrar/qopen.cpp"
  $21 = $$pre_trunc&1; //@line 183 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($21|0); //@line 183 "./src/cpp/unrar/qopen.cpp"
 } else {
  $$expand_i1_val = 0; //@line 180 "./src/cpp/unrar/qopen.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 180 "./src/cpp/unrar/qopen.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 183 "./src/cpp/unrar/qopen.cpp"
  $21 = $$pre_trunc&1; //@line 183 "./src/cpp/unrar/qopen.cpp"
  STACKTOP = sp;return ($21|0); //@line 183 "./src/cpp/unrar/qopen.cpp"
 }
 return (0)|0;
}
function __ZN10StringListC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __ZN5ArrayIwEC2Ev($4); //@line 3 "./src/cpp/unrar/strlist.cpp"
 __THREW__ = 0;
 invoke_vi(96,($4|0)); //@line 5 "./src/cpp/unrar/strlist.cpp"
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if ($6) {
  $7 = ___cxa_find_matching_catch_2()|0;
  $8 = tempRet0;
  $2 = $7; //@line 6 "./src/cpp/unrar/strlist.cpp"
  $3 = $8; //@line 6 "./src/cpp/unrar/strlist.cpp"
  __ZN5ArrayIwED2Ev($4); //@line 6 "./src/cpp/unrar/strlist.cpp"
  $9 = $2; //@line 6 "./src/cpp/unrar/strlist.cpp"
  $10 = $3; //@line 6 "./src/cpp/unrar/strlist.cpp"
  ___resumeException($9|0);
  // unreachable;
 } else {
  STACKTOP = sp;return; //@line 6 "./src/cpp/unrar/strlist.cpp"
 }
}
function __ZN10StringList5ResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN10StringList6RewindEv($2); //@line 11 "./src/cpp/unrar/strlist.cpp"
 __ZN5ArrayIwE5ResetEv($2); //@line 12 "./src/cpp/unrar/strlist.cpp"
 $3 = ((($2)) + 20|0); //@line 13 "./src/cpp/unrar/strlist.cpp"
 HEAP32[$3>>2] = 0; //@line 13 "./src/cpp/unrar/strlist.cpp"
 $4 = ((($2)) + 88|0); //@line 14 "./src/cpp/unrar/strlist.cpp"
 HEAP32[$4>>2] = 0; //@line 14 "./src/cpp/unrar/strlist.cpp"
 STACKTOP = sp;return; //@line 15 "./src/cpp/unrar/strlist.cpp"
}
function __ZN10StringList6RewindEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0); //@line 105 "./src/cpp/unrar/strlist.cpp"
 HEAP32[$3>>2] = 0; //@line 105 "./src/cpp/unrar/strlist.cpp"
 STACKTOP = sp;return; //@line 106 "./src/cpp/unrar/strlist.cpp"
}
function __ZN5ArrayIwE5ResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 124 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 124 "./src/cpp/unrar/array.hpp"
 if ($4) {
  $5 = HEAP32[$2>>2]|0; //@line 126 "./src/cpp/unrar/array.hpp"
  _free($5); //@line 126 "./src/cpp/unrar/array.hpp"
  HEAP32[$2>>2] = 0; //@line 127 "./src/cpp/unrar/array.hpp"
 }
 $6 = ((($2)) + 4|0); //@line 129 "./src/cpp/unrar/array.hpp"
 HEAP32[$6>>2] = 0; //@line 129 "./src/cpp/unrar/array.hpp"
 $7 = ((($2)) + 8|0); //@line 130 "./src/cpp/unrar/array.hpp"
 HEAP32[$7>>2] = 0; //@line 130 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 131 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIwEC2Ej($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5ArrayIwE9CleanDataEv($4); //@line 50 "./src/cpp/unrar/array.hpp"
 $5 = $3; //@line 51 "./src/cpp/unrar/array.hpp"
 __ZN5ArrayIwE3AddEj($4,$5); //@line 51 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 52 "./src/cpp/unrar/array.hpp"
}
function __ZN10StringList9AddStringEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3; //@line 28 "./src/cpp/unrar/strlist.cpp"
 $7 = ($6|0)==(0|0); //@line 28 "./src/cpp/unrar/strlist.cpp"
 $$ = $7 ? 55124 : $1; //@line 28 "./src/cpp/unrar/strlist.cpp"
 $3 = $$;
 $8 = (__ZN5ArrayIwE4SizeEv($5)|0); //@line 31 "./src/cpp/unrar/strlist.cpp"
 $4 = $8; //@line 31 "./src/cpp/unrar/strlist.cpp"
 $9 = $3; //@line 32 "./src/cpp/unrar/strlist.cpp"
 $10 = (_wcslen($9)|0); //@line 32 "./src/cpp/unrar/strlist.cpp"
 $11 = (($10) + 1)|0; //@line 32 "./src/cpp/unrar/strlist.cpp"
 __ZN5ArrayIwE3AddEj($5,$11); //@line 32 "./src/cpp/unrar/strlist.cpp"
 $12 = $4; //@line 33 "./src/cpp/unrar/strlist.cpp"
 $13 = (__ZNK5ArrayIwEixEj($5,$12)|0); //@line 33 "./src/cpp/unrar/strlist.cpp"
 $14 = $3; //@line 33 "./src/cpp/unrar/strlist.cpp"
 (_wcscpy($13,$14)|0); //@line 33 "./src/cpp/unrar/strlist.cpp"
 $15 = ((($5)) + 20|0); //@line 35 "./src/cpp/unrar/strlist.cpp"
 $16 = HEAP32[$15>>2]|0; //@line 35 "./src/cpp/unrar/strlist.cpp"
 $17 = (($16) + 1)|0; //@line 35 "./src/cpp/unrar/strlist.cpp"
 HEAP32[$15>>2] = $17; //@line 35 "./src/cpp/unrar/strlist.cpp"
 STACKTOP = sp;return; //@line 36 "./src/cpp/unrar/strlist.cpp"
}
function __ZN5ArrayIwE3AddEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = $3; //@line 92 "./src/cpp/unrar/array.hpp"
 $9 = ((($7)) + 4|0); //@line 92 "./src/cpp/unrar/array.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 92 "./src/cpp/unrar/array.hpp"
 $11 = (($10) + ($8))|0; //@line 92 "./src/cpp/unrar/array.hpp"
 HEAP32[$9>>2] = $11; //@line 92 "./src/cpp/unrar/array.hpp"
 $12 = ((($7)) + 4|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $13 = HEAP32[$12>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $14 = ((($7)) + 8|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $15 = HEAP32[$14>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $16 = ($13>>>0)>($15>>>0); //@line 93 "./src/cpp/unrar/array.hpp"
 if (!($16)) {
  STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
 }
 $17 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
 $18 = HEAP32[$17>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
 $19 = ($18|0)!=(0); //@line 95 "./src/cpp/unrar/array.hpp"
 if ($19) {
  $20 = ((($7)) + 4|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $21 = HEAP32[$20>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $22 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $23 = HEAP32[$22>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $24 = ($21>>>0)>($23>>>0); //@line 95 "./src/cpp/unrar/array.hpp"
  if ($24) {
   $25 = ((($7)) + 12|0); //@line 97 "./src/cpp/unrar/array.hpp"
   $26 = HEAP32[$25>>2]|0; //@line 97 "./src/cpp/unrar/array.hpp"
   HEAP32[$vararg_buffer>>2] = $26; //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler13GeneralErrMsgEPKwz(756,2544,$vararg_buffer); //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler11MemoryErrorEv(756); //@line 98 "./src/cpp/unrar/array.hpp"
  }
 }
 $27 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $28 = HEAP32[$27>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $29 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $30 = HEAP32[$29>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $31 = (($30>>>0) / 4)&-1; //@line 101 "./src/cpp/unrar/array.hpp"
 $32 = (($28) + ($31))|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $33 = (($32) + 32)|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $4 = $33; //@line 101 "./src/cpp/unrar/array.hpp"
 $34 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
 $35 = HEAP32[$34>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
 $36 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
 $37 = ($35>>>0)>($36>>>0); //@line 102 "./src/cpp/unrar/array.hpp"
 if ($37) {
  $38 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
  $39 = HEAP32[$38>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $39;
 } else {
  $40 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $40;
 }
 $5 = $41; //@line 102 "./src/cpp/unrar/array.hpp"
 $42 = HEAP32[$7>>2]|0; //@line 104 "./src/cpp/unrar/array.hpp"
 $43 = $5; //@line 104 "./src/cpp/unrar/array.hpp"
 $44 = $43<<2; //@line 104 "./src/cpp/unrar/array.hpp"
 $45 = (_realloc($42,$44)|0); //@line 104 "./src/cpp/unrar/array.hpp"
 $6 = $45; //@line 104 "./src/cpp/unrar/array.hpp"
 $46 = $6; //@line 105 "./src/cpp/unrar/array.hpp"
 $47 = ($46|0)==(0|0); //@line 105 "./src/cpp/unrar/array.hpp"
 if ($47) {
  __ZN12ErrorHandler11MemoryErrorEv(756); //@line 106 "./src/cpp/unrar/array.hpp"
 }
 $48 = $6; //@line 107 "./src/cpp/unrar/array.hpp"
 HEAP32[$7>>2] = $48; //@line 107 "./src/cpp/unrar/array.hpp"
 $49 = $5; //@line 108 "./src/cpp/unrar/array.hpp"
 $50 = ((($7)) + 8|0); //@line 108 "./src/cpp/unrar/array.hpp"
 HEAP32[$50>>2] = $49; //@line 108 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
}
function __ZN10StringList9GetStringEPwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp + 16|0;
 $7 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $4;
 $9 = (__ZN10StringList9GetStringEPPw($8,$7)|0); //@line 52 "./src/cpp/unrar/strlist.cpp"
 if ($9) {
  $10 = $5; //@line 54 "./src/cpp/unrar/strlist.cpp"
  $11 = HEAP32[$7>>2]|0; //@line 54 "./src/cpp/unrar/strlist.cpp"
  $12 = $6; //@line 54 "./src/cpp/unrar/strlist.cpp"
  (__Z8wcsncpyzPwPKwj($10,$11,$12)|0); //@line 54 "./src/cpp/unrar/strlist.cpp"
  $$expand_i1_val2 = 1; //@line 55 "./src/cpp/unrar/strlist.cpp"
  HEAP8[$3>>0] = $$expand_i1_val2; //@line 55 "./src/cpp/unrar/strlist.cpp"
 } else {
  $$expand_i1_val = 0; //@line 53 "./src/cpp/unrar/strlist.cpp"
  HEAP8[$3>>0] = $$expand_i1_val; //@line 53 "./src/cpp/unrar/strlist.cpp"
 }
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 56 "./src/cpp/unrar/strlist.cpp"
 $13 = $$pre_trunc&1; //@line 56 "./src/cpp/unrar/strlist.cpp"
 STACKTOP = sp;return ($13|0); //@line 56 "./src/cpp/unrar/strlist.cpp"
}
function __ZN10StringList9GetStringEPPw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 12|0;
 $3 = $0;
 $4 = $1;
 $6 = $3;
 $7 = ((($6)) + 16|0); //@line 87 "./src/cpp/unrar/strlist.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 87 "./src/cpp/unrar/strlist.cpp"
 $9 = (__ZN5ArrayIwE4SizeEv($6)|0); //@line 87 "./src/cpp/unrar/strlist.cpp"
 $10 = ($8>>>0)>=($9>>>0); //@line 87 "./src/cpp/unrar/strlist.cpp"
 if ($10) {
  $11 = $4; //@line 89 "./src/cpp/unrar/strlist.cpp"
  $12 = ($11|0)!=(0|0); //@line 89 "./src/cpp/unrar/strlist.cpp"
  if ($12) {
   $13 = $4; //@line 90 "./src/cpp/unrar/strlist.cpp"
   HEAP32[$13>>2] = 0; //@line 90 "./src/cpp/unrar/strlist.cpp"
  }
  $$expand_i1_val = 0; //@line 91 "./src/cpp/unrar/strlist.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 91 "./src/cpp/unrar/strlist.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 100 "./src/cpp/unrar/strlist.cpp"
  $27 = $$pre_trunc&1; //@line 100 "./src/cpp/unrar/strlist.cpp"
  STACKTOP = sp;return ($27|0); //@line 100 "./src/cpp/unrar/strlist.cpp"
 } else {
  $14 = ((($6)) + 16|0); //@line 94 "./src/cpp/unrar/strlist.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 94 "./src/cpp/unrar/strlist.cpp"
  $16 = (__ZNK5ArrayIwEixEj($6,$15)|0); //@line 94 "./src/cpp/unrar/strlist.cpp"
  $5 = $16; //@line 94 "./src/cpp/unrar/strlist.cpp"
  $17 = $5; //@line 95 "./src/cpp/unrar/strlist.cpp"
  $18 = (_wcslen($17)|0); //@line 95 "./src/cpp/unrar/strlist.cpp"
  $19 = (($18) + 1)|0; //@line 95 "./src/cpp/unrar/strlist.cpp"
  $20 = ((($6)) + 16|0); //@line 95 "./src/cpp/unrar/strlist.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 95 "./src/cpp/unrar/strlist.cpp"
  $22 = (($21) + ($19))|0; //@line 95 "./src/cpp/unrar/strlist.cpp"
  HEAP32[$20>>2] = $22; //@line 95 "./src/cpp/unrar/strlist.cpp"
  $23 = $4; //@line 96 "./src/cpp/unrar/strlist.cpp"
  $24 = ($23|0)!=(0|0); //@line 96 "./src/cpp/unrar/strlist.cpp"
  if ($24) {
   $25 = $5; //@line 97 "./src/cpp/unrar/strlist.cpp"
   $26 = $4; //@line 97 "./src/cpp/unrar/strlist.cpp"
   HEAP32[$26>>2] = $25; //@line 97 "./src/cpp/unrar/strlist.cpp"
  }
  $$expand_i1_val2 = 1; //@line 99 "./src/cpp/unrar/strlist.cpp"
  HEAP8[$2>>0] = $$expand_i1_val2; //@line 99 "./src/cpp/unrar/strlist.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 100 "./src/cpp/unrar/strlist.cpp"
  $27 = $$pre_trunc&1; //@line 100 "./src/cpp/unrar/strlist.cpp"
  STACKTOP = sp;return ($27|0); //@line 100 "./src/cpp/unrar/strlist.cpp"
 }
 return (0)|0;
}
function __ZN10StringList9GetStringEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1;
 (__ZN10StringList9GetStringEPPw($3,$2)|0); //@line 80 "./src/cpp/unrar/strlist.cpp"
 $4 = HEAP32[$2>>2]|0; //@line 81 "./src/cpp/unrar/strlist.cpp"
 STACKTOP = sp;return ($4|0); //@line 81 "./src/cpp/unrar/strlist.cpp"
}
function __Z8IntToExtPKcPcj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4; //@line 29 "./src/cpp/unrar/strfn.cpp"
 $7 = $3; //@line 29 "./src/cpp/unrar/strfn.cpp"
 $8 = ($6|0)!=($7|0); //@line 29 "./src/cpp/unrar/strfn.cpp"
 if (!($8)) {
  STACKTOP = sp;return; //@line 32 "./src/cpp/unrar/strfn.cpp"
 }
 $9 = $4; //@line 30 "./src/cpp/unrar/strfn.cpp"
 $10 = $3; //@line 30 "./src/cpp/unrar/strfn.cpp"
 $11 = $5; //@line 30 "./src/cpp/unrar/strfn.cpp"
 (__Z8strncpyzPcPKcj($9,$10,$11)|0); //@line 30 "./src/cpp/unrar/strfn.cpp"
 STACKTOP = sp;return; //@line 32 "./src/cpp/unrar/strfn.cpp"
}
function __Z8strncpyzPcPKcj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 260 "./src/cpp/unrar/strfn.cpp"
 $7 = ($6>>>0)>(0); //@line 260 "./src/cpp/unrar/strfn.cpp"
 if (!($7)) {
  $16 = $3; //@line 265 "./src/cpp/unrar/strfn.cpp"
  STACKTOP = sp;return ($16|0); //@line 265 "./src/cpp/unrar/strfn.cpp"
 }
 $8 = $3; //@line 262 "./src/cpp/unrar/strfn.cpp"
 $9 = $4; //@line 262 "./src/cpp/unrar/strfn.cpp"
 $10 = $5; //@line 262 "./src/cpp/unrar/strfn.cpp"
 $11 = (($10) - 1)|0; //@line 262 "./src/cpp/unrar/strfn.cpp"
 (_strncpy($8,$9,$11)|0); //@line 262 "./src/cpp/unrar/strfn.cpp"
 $12 = $3; //@line 263 "./src/cpp/unrar/strfn.cpp"
 $13 = $5; //@line 263 "./src/cpp/unrar/strfn.cpp"
 $14 = (($13) - 1)|0; //@line 263 "./src/cpp/unrar/strfn.cpp"
 $15 = (($12) + ($14)|0); //@line 263 "./src/cpp/unrar/strfn.cpp"
 HEAP8[$15>>0] = 0; //@line 263 "./src/cpp/unrar/strfn.cpp"
 $16 = $3; //@line 265 "./src/cpp/unrar/strfn.cpp"
 STACKTOP = sp;return ($16|0); //@line 265 "./src/cpp/unrar/strfn.cpp"
}
function __Z13ArcCharToWidePKcPwj13ACTW_ENCODING($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $7; //@line 38 "./src/cpp/unrar/strfn.cpp"
 $9 = ($8|0)==(2); //@line 38 "./src/cpp/unrar/strfn.cpp"
 $10 = $4;
 $11 = $5;
 $12 = $6;
 if ($9) {
  (__Z9UtfToWidePKcPwj($10,$11,$12)|0); //@line 39 "./src/cpp/unrar/strfn.cpp"
 } else {
  (__Z10CharToWidePKcPwj($10,$11,$12)|0); //@line 41 "./src/cpp/unrar/strfn.cpp"
 }
 $13 = $6; //@line 45 "./src/cpp/unrar/strfn.cpp"
 $14 = ($13>>>0)>(0); //@line 45 "./src/cpp/unrar/strfn.cpp"
 if (!($14)) {
  STACKTOP = sp;return; //@line 47 "./src/cpp/unrar/strfn.cpp"
 }
 $15 = $5; //@line 46 "./src/cpp/unrar/strfn.cpp"
 $16 = $6; //@line 46 "./src/cpp/unrar/strfn.cpp"
 $17 = (($16) - 1)|0; //@line 46 "./src/cpp/unrar/strfn.cpp"
 $18 = (($15) + ($17<<2)|0); //@line 46 "./src/cpp/unrar/strfn.cpp"
 HEAP32[$18>>2] = 0; //@line 46 "./src/cpp/unrar/strfn.cpp"
 STACKTOP = sp;return; //@line 47 "./src/cpp/unrar/strfn.cpp"
}
function __Z7IsDigiti($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 158 "./src/cpp/unrar/strfn.cpp"
 $3 = ($2|0)>=(48); //@line 158 "./src/cpp/unrar/strfn.cpp"
 $4 = $1; //@line 158 "./src/cpp/unrar/strfn.cpp"
 $5 = ($4|0)<=(57); //@line 158 "./src/cpp/unrar/strfn.cpp"
 $6 = $3 ? $5 : 0; //@line 158 "./src/cpp/unrar/strfn.cpp"
 STACKTOP = sp;return ($6|0); //@line 158 "./src/cpp/unrar/strfn.cpp"
}
function __Z9wcsicompcPKwS0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 250 "./src/cpp/unrar/strfn.cpp"
 $5 = $3; //@line 250 "./src/cpp/unrar/strfn.cpp"
 $6 = (_wcscmp($4,$5)|0); //@line 250 "./src/cpp/unrar/strfn.cpp"
 STACKTOP = sp;return ($6|0); //@line 250 "./src/cpp/unrar/strfn.cpp"
}
function __Z8wcsncpyzPwPKwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 272 "./src/cpp/unrar/strfn.cpp"
 $7 = ($6>>>0)>(0); //@line 272 "./src/cpp/unrar/strfn.cpp"
 if (!($7)) {
  $16 = $3; //@line 277 "./src/cpp/unrar/strfn.cpp"
  STACKTOP = sp;return ($16|0); //@line 277 "./src/cpp/unrar/strfn.cpp"
 }
 $8 = $3; //@line 274 "./src/cpp/unrar/strfn.cpp"
 $9 = $4; //@line 274 "./src/cpp/unrar/strfn.cpp"
 $10 = $5; //@line 274 "./src/cpp/unrar/strfn.cpp"
 $11 = (($10) - 1)|0; //@line 274 "./src/cpp/unrar/strfn.cpp"
 (_wcsncpy($8,$9,$11)|0); //@line 274 "./src/cpp/unrar/strfn.cpp"
 $12 = $3; //@line 275 "./src/cpp/unrar/strfn.cpp"
 $13 = $5; //@line 275 "./src/cpp/unrar/strfn.cpp"
 $14 = (($13) - 1)|0; //@line 275 "./src/cpp/unrar/strfn.cpp"
 $15 = (($12) + ($14<<2)|0); //@line 275 "./src/cpp/unrar/strfn.cpp"
 HEAP32[$15>>2] = 0; //@line 275 "./src/cpp/unrar/strfn.cpp"
 $16 = $3; //@line 277 "./src/cpp/unrar/strfn.cpp"
 STACKTOP = sp;return ($16|0); //@line 277 "./src/cpp/unrar/strfn.cpp"
}
function __Z8wcsncatzPwPKwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3; //@line 299 "./src/cpp/unrar/strfn.cpp"
 $9 = (_wcslen($8)|0); //@line 299 "./src/cpp/unrar/strfn.cpp"
 $6 = $9; //@line 299 "./src/cpp/unrar/strfn.cpp"
 $10 = $5; //@line 300 "./src/cpp/unrar/strfn.cpp"
 $11 = $6; //@line 300 "./src/cpp/unrar/strfn.cpp"
 $12 = (($10) - ($11))|0; //@line 300 "./src/cpp/unrar/strfn.cpp"
 $13 = (($12) - 1)|0; //@line 300 "./src/cpp/unrar/strfn.cpp"
 $7 = $13; //@line 300 "./src/cpp/unrar/strfn.cpp"
 $14 = $7; //@line 301 "./src/cpp/unrar/strfn.cpp"
 $15 = ($14|0)>(0); //@line 301 "./src/cpp/unrar/strfn.cpp"
 if (!($15)) {
  $19 = $3; //@line 303 "./src/cpp/unrar/strfn.cpp"
  STACKTOP = sp;return ($19|0); //@line 303 "./src/cpp/unrar/strfn.cpp"
 }
 $16 = $3; //@line 302 "./src/cpp/unrar/strfn.cpp"
 $17 = $4; //@line 302 "./src/cpp/unrar/strfn.cpp"
 $18 = $7; //@line 302 "./src/cpp/unrar/strfn.cpp"
 (_wcsncat($16,$17,$18)|0); //@line 302 "./src/cpp/unrar/strfn.cpp"
 $19 = $3; //@line 303 "./src/cpp/unrar/strfn.cpp"
 STACKTOP = sp;return ($19|0); //@line 303 "./src/cpp/unrar/strfn.cpp"
}
function __Z7GetWidePKc($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = 2048; //@line 361 "./src/cpp/unrar/strfn.cpp"
 $4 = HEAP32[3540]|0; //@line 364 "./src/cpp/unrar/strfn.cpp"
 $5 = (($4) + 1)|0; //@line 364 "./src/cpp/unrar/strfn.cpp"
 HEAP32[3540] = $5; //@line 364 "./src/cpp/unrar/strfn.cpp"
 $6 = ($5>>>0)>=(4); //@line 364 "./src/cpp/unrar/strfn.cpp"
 $$ = $6 ? 0 : $5; //@line 364 "./src/cpp/unrar/strfn.cpp"
 HEAP32[3540] = $$;
 $7 = HEAP32[3540]|0; //@line 366 "./src/cpp/unrar/strfn.cpp"
 $8 = (14164 + ($7<<13)|0); //@line 366 "./src/cpp/unrar/strfn.cpp"
 $3 = $8; //@line 366 "./src/cpp/unrar/strfn.cpp"
 $9 = $1; //@line 367 "./src/cpp/unrar/strfn.cpp"
 $10 = $3; //@line 367 "./src/cpp/unrar/strfn.cpp"
 (__Z10CharToWidePKcPwj($9,$10,2048)|0); //@line 367 "./src/cpp/unrar/strfn.cpp"
 $11 = $3; //@line 368 "./src/cpp/unrar/strfn.cpp"
 $12 = ((($11)) + 8188|0); //@line 368 "./src/cpp/unrar/strfn.cpp"
 HEAP32[$12>>2] = 0; //@line 368 "./src/cpp/unrar/strfn.cpp"
 $13 = $3; //@line 369 "./src/cpp/unrar/strfn.cpp"
 STACKTOP = sp;return ($13|0); //@line 369 "./src/cpp/unrar/strfn.cpp"
}
function __Z11PointToNamePKw($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 5 "./src/cpp/unrar/pathfn.cpp"
 $5 = (_wcslen($4)|0); //@line 5 "./src/cpp/unrar/pathfn.cpp"
 $6 = (($5) - 1)|0; //@line 5 "./src/cpp/unrar/pathfn.cpp"
 $3 = $6; //@line 5 "./src/cpp/unrar/pathfn.cpp"
 while(1) {
  $7 = $3; //@line 5 "./src/cpp/unrar/pathfn.cpp"
  $8 = ($7|0)>=(0); //@line 5 "./src/cpp/unrar/pathfn.cpp"
  $9 = $2;
  if (!($8)) {
   break;
  }
  $10 = $3; //@line 6 "./src/cpp/unrar/pathfn.cpp"
  $11 = (($9) + ($10<<2)|0); //@line 6 "./src/cpp/unrar/pathfn.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 6 "./src/cpp/unrar/pathfn.cpp"
  $13 = (__Z9IsPathDivi($12)|0); //@line 6 "./src/cpp/unrar/pathfn.cpp"
  if ($13) {
   label = 4;
   break;
  }
  $18 = $3; //@line 5 "./src/cpp/unrar/pathfn.cpp"
  $19 = (($18) + -1)|0; //@line 5 "./src/cpp/unrar/pathfn.cpp"
  $3 = $19; //@line 5 "./src/cpp/unrar/pathfn.cpp"
 }
 if ((label|0) == 4) {
  $14 = $2; //@line 7 "./src/cpp/unrar/pathfn.cpp"
  $15 = $3; //@line 7 "./src/cpp/unrar/pathfn.cpp"
  $16 = (($15) + 1)|0; //@line 7 "./src/cpp/unrar/pathfn.cpp"
  $17 = (($14) + ($16<<2)|0); //@line 7 "./src/cpp/unrar/pathfn.cpp"
  $1 = $17; //@line 7 "./src/cpp/unrar/pathfn.cpp"
  $30 = $1; //@line 9 "./src/cpp/unrar/pathfn.cpp"
  STACKTOP = sp;return ($30|0); //@line 9 "./src/cpp/unrar/pathfn.cpp"
 }
 $20 = HEAP32[$9>>2]|0; //@line 8 "./src/cpp/unrar/pathfn.cpp"
 $21 = ($20|0)!=(0); //@line 8 "./src/cpp/unrar/pathfn.cpp"
 if ($21) {
  $22 = $2; //@line 8 "./src/cpp/unrar/pathfn.cpp"
  $23 = ((($22)) + 4|0); //@line 8 "./src/cpp/unrar/pathfn.cpp"
  $24 = HEAP32[$23>>2]|0; //@line 8 "./src/cpp/unrar/pathfn.cpp"
  $25 = (__Z10IsDriveDivi($24)|0); //@line 8 "./src/cpp/unrar/pathfn.cpp"
  if ($25) {
   $26 = $2; //@line 8 "./src/cpp/unrar/pathfn.cpp"
   $27 = ((($26)) + 8|0); //@line 8 "./src/cpp/unrar/pathfn.cpp"
   $29 = $27;
  } else {
   label = 9;
  }
 } else {
  label = 9;
 }
 if ((label|0) == 9) {
  $28 = $2; //@line 8 "./src/cpp/unrar/pathfn.cpp"
  $29 = $28;
 }
 $1 = $29; //@line 8 "./src/cpp/unrar/pathfn.cpp"
 $30 = $1; //@line 9 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return ($30|0); //@line 9 "./src/cpp/unrar/pathfn.cpp"
}
function __Z9IsPathDivi($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 132 "./src/cpp/unrar/pathfn.cpp"
 $3 = ($2|0)==(47); //@line 132 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return ($3|0); //@line 132 "./src/cpp/unrar/pathfn.cpp"
}
function __Z10IsDriveDivi($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 140 "./src/cpp/unrar/pathfn.cpp"
}
function __Z15PointToLastCharPKw($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 14 "./src/cpp/unrar/pathfn.cpp"
 $4 = (_wcslen($3)|0); //@line 14 "./src/cpp/unrar/pathfn.cpp"
 $2 = $4; //@line 14 "./src/cpp/unrar/pathfn.cpp"
 $5 = $2; //@line 15 "./src/cpp/unrar/pathfn.cpp"
 $6 = ($5>>>0)>(0); //@line 15 "./src/cpp/unrar/pathfn.cpp"
 $7 = $1;
 if (!($6)) {
  $11 = $7;
  STACKTOP = sp;return ($11|0); //@line 15 "./src/cpp/unrar/pathfn.cpp"
 }
 $8 = $2; //@line 15 "./src/cpp/unrar/pathfn.cpp"
 $9 = (($7) + ($8<<2)|0); //@line 15 "./src/cpp/unrar/pathfn.cpp"
 $10 = ((($9)) + -4|0); //@line 15 "./src/cpp/unrar/pathfn.cpp"
 $11 = $10;
 STACKTOP = sp;return ($11|0); //@line 15 "./src/cpp/unrar/pathfn.cpp"
}
function __Z11ConvertPathPKwPw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(8256|0);
 $17 = sp;
 $10 = $0;
 $11 = $1;
 $18 = $10; //@line 21 "./src/cpp/unrar/pathfn.cpp"
 $12 = $18; //@line 21 "./src/cpp/unrar/pathfn.cpp"
 $19 = $12; //@line 24 "./src/cpp/unrar/pathfn.cpp"
 $13 = $19; //@line 24 "./src/cpp/unrar/pathfn.cpp"
 while(1) {
  $20 = $13; //@line 24 "./src/cpp/unrar/pathfn.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 24 "./src/cpp/unrar/pathfn.cpp"
  $22 = ($21|0)!=(0); //@line 24 "./src/cpp/unrar/pathfn.cpp"
  if (!($22)) {
   break;
  }
  $23 = $13; //@line 25 "./src/cpp/unrar/pathfn.cpp"
  $24 = HEAP32[$23>>2]|0; //@line 25 "./src/cpp/unrar/pathfn.cpp"
  $25 = (__Z9IsPathDivi($24)|0); //@line 25 "./src/cpp/unrar/pathfn.cpp"
  if ($25) {
   $26 = $13; //@line 25 "./src/cpp/unrar/pathfn.cpp"
   $27 = ((($26)) + 4|0); //@line 25 "./src/cpp/unrar/pathfn.cpp"
   $28 = HEAP32[$27>>2]|0; //@line 25 "./src/cpp/unrar/pathfn.cpp"
   $29 = ($28|0)==(46); //@line 25 "./src/cpp/unrar/pathfn.cpp"
   if ($29) {
    $30 = $13; //@line 25 "./src/cpp/unrar/pathfn.cpp"
    $31 = ((($30)) + 8|0); //@line 25 "./src/cpp/unrar/pathfn.cpp"
    $32 = HEAP32[$31>>2]|0; //@line 25 "./src/cpp/unrar/pathfn.cpp"
    $33 = ($32|0)==(46); //@line 25 "./src/cpp/unrar/pathfn.cpp"
    if ($33) {
     $34 = $13; //@line 25 "./src/cpp/unrar/pathfn.cpp"
     $35 = ((($34)) + 12|0); //@line 25 "./src/cpp/unrar/pathfn.cpp"
     $36 = HEAP32[$35>>2]|0; //@line 25 "./src/cpp/unrar/pathfn.cpp"
     $37 = (__Z9IsPathDivi($36)|0); //@line 25 "./src/cpp/unrar/pathfn.cpp"
     if ($37) {
      $38 = $13; //@line 26 "./src/cpp/unrar/pathfn.cpp"
      $39 = ((($38)) + 16|0); //@line 26 "./src/cpp/unrar/pathfn.cpp"
      $12 = $39; //@line 26 "./src/cpp/unrar/pathfn.cpp"
     }
    }
   }
  }
  $40 = $13; //@line 24 "./src/cpp/unrar/pathfn.cpp"
  $41 = ((($40)) + 4|0); //@line 24 "./src/cpp/unrar/pathfn.cpp"
  $13 = $41; //@line 24 "./src/cpp/unrar/pathfn.cpp"
 }
 while(1) {
  $42 = $12; //@line 29 "./src/cpp/unrar/pathfn.cpp"
  $43 = HEAP32[$42>>2]|0; //@line 29 "./src/cpp/unrar/pathfn.cpp"
  $44 = ($43|0)!=(0); //@line 29 "./src/cpp/unrar/pathfn.cpp"
  if (!($44)) {
   break;
  }
  $45 = $12; //@line 31 "./src/cpp/unrar/pathfn.cpp"
  $14 = $45; //@line 31 "./src/cpp/unrar/pathfn.cpp"
  $46 = $14; //@line 32 "./src/cpp/unrar/pathfn.cpp"
  $47 = HEAP32[$46>>2]|0; //@line 32 "./src/cpp/unrar/pathfn.cpp"
  $48 = ($47|0)!=(0); //@line 32 "./src/cpp/unrar/pathfn.cpp"
  if ($48) {
   $49 = $14; //@line 32 "./src/cpp/unrar/pathfn.cpp"
   $50 = ((($49)) + 4|0); //@line 32 "./src/cpp/unrar/pathfn.cpp"
   $51 = HEAP32[$50>>2]|0; //@line 32 "./src/cpp/unrar/pathfn.cpp"
   $52 = (__Z10IsDriveDivi($51)|0); //@line 32 "./src/cpp/unrar/pathfn.cpp"
   if ($52) {
    $53 = $14; //@line 33 "./src/cpp/unrar/pathfn.cpp"
    $54 = ((($53)) + 8|0); //@line 33 "./src/cpp/unrar/pathfn.cpp"
    $14 = $54; //@line 33 "./src/cpp/unrar/pathfn.cpp"
   }
  }
  $55 = $14; //@line 34 "./src/cpp/unrar/pathfn.cpp"
  $56 = HEAP32[$55>>2]|0; //@line 34 "./src/cpp/unrar/pathfn.cpp"
  $57 = ($56|0)==(92); //@line 34 "./src/cpp/unrar/pathfn.cpp"
  if ($57) {
   $58 = $14; //@line 34 "./src/cpp/unrar/pathfn.cpp"
   $59 = ((($58)) + 4|0); //@line 34 "./src/cpp/unrar/pathfn.cpp"
   $60 = HEAP32[$59>>2]|0; //@line 34 "./src/cpp/unrar/pathfn.cpp"
   $61 = ($60|0)==(92); //@line 34 "./src/cpp/unrar/pathfn.cpp"
   if ($61) {
    $62 = $14; //@line 36 "./src/cpp/unrar/pathfn.cpp"
    $63 = ((($62)) + 8|0); //@line 36 "./src/cpp/unrar/pathfn.cpp"
    $8 = $63;
    $9 = 92;
    $64 = $8; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
    $65 = $9; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
    $6 = $64;
    $7 = $65;
    $66 = $6; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
    $67 = $7; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
    $68 = (_wcschr($66,$67)|0); //@line 133 "/emscripten/system/include/libcxx/wchar.h"
    $15 = $68; //@line 36 "./src/cpp/unrar/pathfn.cpp"
    $69 = $15; //@line 37 "./src/cpp/unrar/pathfn.cpp"
    $70 = ($69|0)!=(0|0); //@line 37 "./src/cpp/unrar/pathfn.cpp"
    if ($70) {
     $71 = $15; //@line 37 "./src/cpp/unrar/pathfn.cpp"
     $72 = ((($71)) + 4|0); //@line 37 "./src/cpp/unrar/pathfn.cpp"
     $4 = $72;
     $5 = 92;
     $73 = $4; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
     $74 = $5; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
     $2 = $73;
     $3 = $74;
     $75 = $2; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
     $76 = $3; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
     $77 = (_wcschr($75,$76)|0); //@line 133 "/emscripten/system/include/libcxx/wchar.h"
     $15 = $77; //@line 37 "./src/cpp/unrar/pathfn.cpp"
     $78 = ($77|0)!=(0|0); //@line 37 "./src/cpp/unrar/pathfn.cpp"
     if ($78) {
      $79 = $15; //@line 38 "./src/cpp/unrar/pathfn.cpp"
      $80 = ((($79)) + 4|0); //@line 38 "./src/cpp/unrar/pathfn.cpp"
      $14 = $80; //@line 38 "./src/cpp/unrar/pathfn.cpp"
     }
    }
   }
  }
  $81 = $14; //@line 40 "./src/cpp/unrar/pathfn.cpp"
  $16 = $81; //@line 40 "./src/cpp/unrar/pathfn.cpp"
  while(1) {
   $82 = $16; //@line 40 "./src/cpp/unrar/pathfn.cpp"
   $83 = HEAP32[$82>>2]|0; //@line 40 "./src/cpp/unrar/pathfn.cpp"
   $84 = ($83|0)!=(0); //@line 40 "./src/cpp/unrar/pathfn.cpp"
   if (!($84)) {
    break;
   }
   $85 = $16; //@line 41 "./src/cpp/unrar/pathfn.cpp"
   $86 = HEAP32[$85>>2]|0; //@line 41 "./src/cpp/unrar/pathfn.cpp"
   $87 = (__Z9IsPathDivi($86)|0); //@line 41 "./src/cpp/unrar/pathfn.cpp"
   $88 = $16;
   if ($87) {
    $89 = ((($88)) + 4|0); //@line 42 "./src/cpp/unrar/pathfn.cpp"
    $14 = $89; //@line 42 "./src/cpp/unrar/pathfn.cpp"
   } else {
    $90 = HEAP32[$88>>2]|0; //@line 44 "./src/cpp/unrar/pathfn.cpp"
    $91 = ($90|0)!=(46); //@line 44 "./src/cpp/unrar/pathfn.cpp"
    if ($91) {
     break;
    }
   }
   $92 = $16; //@line 40 "./src/cpp/unrar/pathfn.cpp"
   $93 = ((($92)) + 4|0); //@line 40 "./src/cpp/unrar/pathfn.cpp"
   $16 = $93; //@line 40 "./src/cpp/unrar/pathfn.cpp"
  }
  $94 = $14; //@line 46 "./src/cpp/unrar/pathfn.cpp"
  $95 = $12; //@line 46 "./src/cpp/unrar/pathfn.cpp"
  $96 = ($94|0)==($95|0); //@line 46 "./src/cpp/unrar/pathfn.cpp"
  if ($96) {
   break;
  }
  $97 = $14; //@line 48 "./src/cpp/unrar/pathfn.cpp"
  $12 = $97; //@line 48 "./src/cpp/unrar/pathfn.cpp"
 }
 $98 = $12; //@line 52 "./src/cpp/unrar/pathfn.cpp"
 $99 = HEAP32[$98>>2]|0; //@line 52 "./src/cpp/unrar/pathfn.cpp"
 $100 = ($99|0)==(46); //@line 52 "./src/cpp/unrar/pathfn.cpp"
 if ($100) {
  $101 = $12; //@line 52 "./src/cpp/unrar/pathfn.cpp"
  $102 = ((($101)) + 4|0); //@line 52 "./src/cpp/unrar/pathfn.cpp"
  $103 = HEAP32[$102>>2]|0; //@line 52 "./src/cpp/unrar/pathfn.cpp"
  $104 = ($103|0)==(46); //@line 52 "./src/cpp/unrar/pathfn.cpp"
  if ($104) {
   $105 = $12; //@line 52 "./src/cpp/unrar/pathfn.cpp"
   $106 = ((($105)) + 8|0); //@line 52 "./src/cpp/unrar/pathfn.cpp"
   $107 = HEAP32[$106>>2]|0; //@line 52 "./src/cpp/unrar/pathfn.cpp"
   $108 = ($107|0)==(0); //@line 52 "./src/cpp/unrar/pathfn.cpp"
   if ($108) {
    $109 = $12; //@line 53 "./src/cpp/unrar/pathfn.cpp"
    $110 = ((($109)) + 8|0); //@line 53 "./src/cpp/unrar/pathfn.cpp"
    $12 = $110; //@line 53 "./src/cpp/unrar/pathfn.cpp"
   }
  }
 }
 $111 = $11; //@line 55 "./src/cpp/unrar/pathfn.cpp"
 $112 = ($111|0)!=(0|0); //@line 55 "./src/cpp/unrar/pathfn.cpp"
 if (!($112)) {
  $115 = $12; //@line 63 "./src/cpp/unrar/pathfn.cpp"
  STACKTOP = sp;return ($115|0); //@line 63 "./src/cpp/unrar/pathfn.cpp"
 }
 $113 = $12; //@line 60 "./src/cpp/unrar/pathfn.cpp"
 (__Z8wcsncpyzPwPKwj($17,$113,2048)|0); //@line 60 "./src/cpp/unrar/pathfn.cpp"
 $114 = $11; //@line 61 "./src/cpp/unrar/pathfn.cpp"
 (_wcscpy($114,$17)|0); //@line 61 "./src/cpp/unrar/pathfn.cpp"
 $115 = $12; //@line 63 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return ($115|0); //@line 63 "./src/cpp/unrar/pathfn.cpp"
}
function __Z7SetNamePwPKwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 69 "./src/cpp/unrar/pathfn.cpp"
 $8 = (__Z11PointToNamePKw($7)|0); //@line 69 "./src/cpp/unrar/pathfn.cpp"
 $6 = $8; //@line 69 "./src/cpp/unrar/pathfn.cpp"
 $9 = $6; //@line 70 "./src/cpp/unrar/pathfn.cpp"
 $10 = $4; //@line 70 "./src/cpp/unrar/pathfn.cpp"
 $11 = $5; //@line 70 "./src/cpp/unrar/pathfn.cpp"
 $12 = $6; //@line 70 "./src/cpp/unrar/pathfn.cpp"
 $13 = $3; //@line 70 "./src/cpp/unrar/pathfn.cpp"
 $14 = $12; //@line 70 "./src/cpp/unrar/pathfn.cpp"
 $15 = $13; //@line 70 "./src/cpp/unrar/pathfn.cpp"
 $16 = (($14) - ($15))|0; //@line 70 "./src/cpp/unrar/pathfn.cpp"
 $17 = (($16|0) / 4)&-1; //@line 70 "./src/cpp/unrar/pathfn.cpp"
 $18 = (($11) - ($17))|0; //@line 70 "./src/cpp/unrar/pathfn.cpp"
 (__Z8wcsncpyzPwPKwj($9,$10,$18)|0); //@line 70 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return; //@line 71 "./src/cpp/unrar/pathfn.cpp"
}
function __Z6SetExtPwPKwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 76 "./src/cpp/unrar/pathfn.cpp"
 $8 = ($7|0)==(0|0); //@line 76 "./src/cpp/unrar/pathfn.cpp"
 if ($8) {
  STACKTOP = sp;return; //@line 86 "./src/cpp/unrar/pathfn.cpp"
 }
 $9 = $3; //@line 76 "./src/cpp/unrar/pathfn.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 76 "./src/cpp/unrar/pathfn.cpp"
 $11 = ($10|0)==(0); //@line 76 "./src/cpp/unrar/pathfn.cpp"
 if ($11) {
  STACKTOP = sp;return; //@line 86 "./src/cpp/unrar/pathfn.cpp"
 }
 $12 = $3; //@line 78 "./src/cpp/unrar/pathfn.cpp"
 $13 = (__Z6GetExtPKw($12)|0); //@line 78 "./src/cpp/unrar/pathfn.cpp"
 $6 = $13; //@line 78 "./src/cpp/unrar/pathfn.cpp"
 $14 = $6; //@line 79 "./src/cpp/unrar/pathfn.cpp"
 $15 = ($14|0)!=(0|0); //@line 79 "./src/cpp/unrar/pathfn.cpp"
 if ($15) {
  $16 = $6; //@line 80 "./src/cpp/unrar/pathfn.cpp"
  HEAP32[$16>>2] = 0; //@line 80 "./src/cpp/unrar/pathfn.cpp"
 }
 $17 = $4; //@line 81 "./src/cpp/unrar/pathfn.cpp"
 $18 = ($17|0)!=(0|0); //@line 81 "./src/cpp/unrar/pathfn.cpp"
 if (!($18)) {
  STACKTOP = sp;return; //@line 86 "./src/cpp/unrar/pathfn.cpp"
 }
 $19 = $3; //@line 83 "./src/cpp/unrar/pathfn.cpp"
 $20 = $5; //@line 83 "./src/cpp/unrar/pathfn.cpp"
 (__Z8wcsncatzPwPKwj($19,620,$20)|0); //@line 83 "./src/cpp/unrar/pathfn.cpp"
 $21 = $3; //@line 84 "./src/cpp/unrar/pathfn.cpp"
 $22 = $4; //@line 84 "./src/cpp/unrar/pathfn.cpp"
 $23 = $5; //@line 84 "./src/cpp/unrar/pathfn.cpp"
 (__Z8wcsncatzPwPKwj($21,$22,$23)|0); //@line 84 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return; //@line 86 "./src/cpp/unrar/pathfn.cpp"
}
function __Z6GetExtPKw($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $5; //@line 109 "./src/cpp/unrar/pathfn.cpp"
 $7 = ($6|0)==(0|0); //@line 109 "./src/cpp/unrar/pathfn.cpp"
 if ($7) {
  $15 = 0;
  STACKTOP = sp;return ($15|0); //@line 109 "./src/cpp/unrar/pathfn.cpp"
 }
 $8 = $5; //@line 109 "./src/cpp/unrar/pathfn.cpp"
 $9 = (__Z11PointToNamePKw($8)|0); //@line 109 "./src/cpp/unrar/pathfn.cpp"
 $3 = $9;
 $4 = 46;
 $10 = $3; //@line 151 "/emscripten/system/include/libcxx/wchar.h"
 $11 = $4; //@line 151 "/emscripten/system/include/libcxx/wchar.h"
 $1 = $10;
 $2 = $11;
 $12 = $1; //@line 147 "/emscripten/system/include/libcxx/wchar.h"
 $13 = $2; //@line 147 "/emscripten/system/include/libcxx/wchar.h"
 $14 = (_wcsrchr($12,$13)|0); //@line 147 "/emscripten/system/include/libcxx/wchar.h"
 $15 = $14;
 STACKTOP = sp;return ($15|0); //@line 109 "./src/cpp/unrar/pathfn.cpp"
}
function __Z10IsWildcardPKw($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $5; //@line 123 "./src/cpp/unrar/pathfn.cpp"
 $7 = ($6|0)==(0|0); //@line 123 "./src/cpp/unrar/pathfn.cpp"
 if ($7) {
  $15 = 0;
  STACKTOP = sp;return ($15|0); //@line 123 "./src/cpp/unrar/pathfn.cpp"
 }
 $8 = $5; //@line 123 "./src/cpp/unrar/pathfn.cpp"
 $3 = $8;
 $4 = 880;
 $9 = $3; //@line 142 "/emscripten/system/include/libcxx/wchar.h"
 $10 = $4; //@line 142 "/emscripten/system/include/libcxx/wchar.h"
 $1 = $9;
 $2 = $10;
 $11 = $1; //@line 140 "/emscripten/system/include/libcxx/wchar.h"
 $12 = $2; //@line 140 "/emscripten/system/include/libcxx/wchar.h"
 $13 = (_wcspbrk($11,$12)|0); //@line 140 "/emscripten/system/include/libcxx/wchar.h"
 $14 = ($13|0)!=(0|0); //@line 123 "./src/cpp/unrar/pathfn.cpp"
 $15 = $14;
 STACKTOP = sp;return ($15|0); //@line 123 "./src/cpp/unrar/pathfn.cpp"
}
function __Z11AddEndSlashPwj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 165 "./src/cpp/unrar/pathfn.cpp"
 $6 = (_wcslen($5)|0); //@line 165 "./src/cpp/unrar/pathfn.cpp"
 $4 = $6; //@line 165 "./src/cpp/unrar/pathfn.cpp"
 $7 = $4; //@line 166 "./src/cpp/unrar/pathfn.cpp"
 $8 = ($7>>>0)>(0); //@line 166 "./src/cpp/unrar/pathfn.cpp"
 if (!($8)) {
  STACKTOP = sp;return; //@line 168 "./src/cpp/unrar/pathfn.cpp"
 }
 $9 = $2; //@line 166 "./src/cpp/unrar/pathfn.cpp"
 $10 = $4; //@line 166 "./src/cpp/unrar/pathfn.cpp"
 $11 = (($10) - 1)|0; //@line 166 "./src/cpp/unrar/pathfn.cpp"
 $12 = (($9) + ($11<<2)|0); //@line 166 "./src/cpp/unrar/pathfn.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 166 "./src/cpp/unrar/pathfn.cpp"
 $14 = ($13|0)!=(47); //@line 166 "./src/cpp/unrar/pathfn.cpp"
 if (!($14)) {
  STACKTOP = sp;return; //@line 168 "./src/cpp/unrar/pathfn.cpp"
 }
 $15 = $4; //@line 166 "./src/cpp/unrar/pathfn.cpp"
 $16 = (($15) + 1)|0; //@line 166 "./src/cpp/unrar/pathfn.cpp"
 $17 = $3; //@line 166 "./src/cpp/unrar/pathfn.cpp"
 $18 = ($16>>>0)<($17>>>0); //@line 166 "./src/cpp/unrar/pathfn.cpp"
 if (!($18)) {
  STACKTOP = sp;return; //@line 168 "./src/cpp/unrar/pathfn.cpp"
 }
 $19 = $2; //@line 167 "./src/cpp/unrar/pathfn.cpp"
 (_wcscat($19,644)|0); //@line 167 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return; //@line 168 "./src/cpp/unrar/pathfn.cpp"
}
function __Z11GetFilePathPKwPwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $5; //@line 186 "./src/cpp/unrar/pathfn.cpp"
 $8 = ($7|0)==(0); //@line 186 "./src/cpp/unrar/pathfn.cpp"
 if ($8) {
  STACKTOP = sp;return; //@line 191 "./src/cpp/unrar/pathfn.cpp"
 }
 $9 = $5; //@line 188 "./src/cpp/unrar/pathfn.cpp"
 $10 = (($9) - 1)|0; //@line 188 "./src/cpp/unrar/pathfn.cpp"
 $11 = $3; //@line 188 "./src/cpp/unrar/pathfn.cpp"
 $12 = (__Z11PointToNamePKw($11)|0); //@line 188 "./src/cpp/unrar/pathfn.cpp"
 $13 = $3; //@line 188 "./src/cpp/unrar/pathfn.cpp"
 $14 = $12; //@line 188 "./src/cpp/unrar/pathfn.cpp"
 $15 = $13; //@line 188 "./src/cpp/unrar/pathfn.cpp"
 $16 = (($14) - ($15))|0; //@line 188 "./src/cpp/unrar/pathfn.cpp"
 $17 = (($16|0) / 4)&-1; //@line 188 "./src/cpp/unrar/pathfn.cpp"
 $18 = ($10>>>0)<($17>>>0); //@line 188 "./src/cpp/unrar/pathfn.cpp"
 if ($18) {
  $19 = $5; //@line 188 "./src/cpp/unrar/pathfn.cpp"
  $20 = (($19) - 1)|0; //@line 188 "./src/cpp/unrar/pathfn.cpp"
  $28 = $20;
 } else {
  $21 = $3; //@line 188 "./src/cpp/unrar/pathfn.cpp"
  $22 = (__Z11PointToNamePKw($21)|0); //@line 188 "./src/cpp/unrar/pathfn.cpp"
  $23 = $3; //@line 188 "./src/cpp/unrar/pathfn.cpp"
  $24 = $22; //@line 188 "./src/cpp/unrar/pathfn.cpp"
  $25 = $23; //@line 188 "./src/cpp/unrar/pathfn.cpp"
  $26 = (($24) - ($25))|0; //@line 188 "./src/cpp/unrar/pathfn.cpp"
  $27 = (($26|0) / 4)&-1; //@line 188 "./src/cpp/unrar/pathfn.cpp"
  $28 = $27;
 }
 $6 = $28; //@line 188 "./src/cpp/unrar/pathfn.cpp"
 $29 = $4; //@line 189 "./src/cpp/unrar/pathfn.cpp"
 $30 = $3; //@line 189 "./src/cpp/unrar/pathfn.cpp"
 $31 = $6; //@line 189 "./src/cpp/unrar/pathfn.cpp"
 (_wcsncpy($29,$30,$31)|0); //@line 189 "./src/cpp/unrar/pathfn.cpp"
 $32 = $4; //@line 190 "./src/cpp/unrar/pathfn.cpp"
 $33 = $6; //@line 190 "./src/cpp/unrar/pathfn.cpp"
 $34 = (($32) + ($33<<2)|0); //@line 190 "./src/cpp/unrar/pathfn.cpp"
 HEAP32[$34>>2] = 0; //@line 190 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return; //@line 191 "./src/cpp/unrar/pathfn.cpp"
}
function __Z11GetWideNamePKcPKwPwj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $5; //@line 861 "./src/cpp/unrar/pathfn.cpp"
 $9 = ($8|0)!=(0|0); //@line 861 "./src/cpp/unrar/pathfn.cpp"
 if ($9) {
  $10 = $5; //@line 861 "./src/cpp/unrar/pathfn.cpp"
  $11 = HEAP32[$10>>2]|0; //@line 861 "./src/cpp/unrar/pathfn.cpp"
  $12 = ($11|0)!=(0); //@line 861 "./src/cpp/unrar/pathfn.cpp"
  if ($12) {
   $13 = $6; //@line 863 "./src/cpp/unrar/pathfn.cpp"
   $14 = $5; //@line 863 "./src/cpp/unrar/pathfn.cpp"
   $15 = ($13|0)!=($14|0); //@line 863 "./src/cpp/unrar/pathfn.cpp"
   if ($15) {
    $16 = $6; //@line 864 "./src/cpp/unrar/pathfn.cpp"
    $17 = $5; //@line 864 "./src/cpp/unrar/pathfn.cpp"
    $18 = $7; //@line 864 "./src/cpp/unrar/pathfn.cpp"
    (_wcsncpy($16,$17,$18)|0); //@line 864 "./src/cpp/unrar/pathfn.cpp"
   }
  } else {
   label = 5;
  }
 } else {
  label = 5;
 }
 do {
  if ((label|0) == 5) {
   $19 = $4; //@line 867 "./src/cpp/unrar/pathfn.cpp"
   $20 = ($19|0)!=(0|0); //@line 867 "./src/cpp/unrar/pathfn.cpp"
   if ($20) {
    $21 = $4; //@line 868 "./src/cpp/unrar/pathfn.cpp"
    $22 = $6; //@line 868 "./src/cpp/unrar/pathfn.cpp"
    $23 = $7; //@line 868 "./src/cpp/unrar/pathfn.cpp"
    (__Z10CharToWidePKcPwj($21,$22,$23)|0); //@line 868 "./src/cpp/unrar/pathfn.cpp"
    break;
   } else {
    $24 = $6; //@line 870 "./src/cpp/unrar/pathfn.cpp"
    HEAP32[$24>>2] = 0; //@line 870 "./src/cpp/unrar/pathfn.cpp"
    break;
   }
  }
 } while(0);
 $25 = $7; //@line 873 "./src/cpp/unrar/pathfn.cpp"
 $26 = ($25>>>0)>(0); //@line 873 "./src/cpp/unrar/pathfn.cpp"
 if (!($26)) {
  $31 = $6; //@line 876 "./src/cpp/unrar/pathfn.cpp"
  STACKTOP = sp;return ($31|0); //@line 876 "./src/cpp/unrar/pathfn.cpp"
 }
 $27 = $6; //@line 874 "./src/cpp/unrar/pathfn.cpp"
 $28 = $7; //@line 874 "./src/cpp/unrar/pathfn.cpp"
 $29 = (($28) - 1)|0; //@line 874 "./src/cpp/unrar/pathfn.cpp"
 $30 = (($27) + ($29<<2)|0); //@line 874 "./src/cpp/unrar/pathfn.cpp"
 HEAP32[$30>>2] = 0; //@line 874 "./src/cpp/unrar/pathfn.cpp"
 $31 = $6; //@line 876 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return ($31|0); //@line 876 "./src/cpp/unrar/pathfn.cpp"
}
function __Z13GetVolNumPartPKw($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $9 = $5; //@line 310 "./src/cpp/unrar/pathfn.cpp"
 $10 = $5; //@line 310 "./src/cpp/unrar/pathfn.cpp"
 $11 = (_wcslen($10)|0); //@line 310 "./src/cpp/unrar/pathfn.cpp"
 $12 = (($9) + ($11<<2)|0); //@line 310 "./src/cpp/unrar/pathfn.cpp"
 $13 = ((($12)) + -4|0); //@line 310 "./src/cpp/unrar/pathfn.cpp"
 $6 = $13; //@line 310 "./src/cpp/unrar/pathfn.cpp"
 while(1) {
  $14 = $6; //@line 313 "./src/cpp/unrar/pathfn.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 313 "./src/cpp/unrar/pathfn.cpp"
  $16 = (__Z7IsDigiti($15)|0); //@line 313 "./src/cpp/unrar/pathfn.cpp"
  if ($16) {
   $55 = 0;
  } else {
   $17 = $6; //@line 313 "./src/cpp/unrar/pathfn.cpp"
   $18 = $5; //@line 313 "./src/cpp/unrar/pathfn.cpp"
   $19 = ($17>>>0)>($18>>>0); //@line 313 "./src/cpp/unrar/pathfn.cpp"
   $55 = $19;
  }
  $20 = $6;
  if (!($55)) {
   break;
  }
  $21 = ((($20)) + -4|0); //@line 314 "./src/cpp/unrar/pathfn.cpp"
  $6 = $21; //@line 314 "./src/cpp/unrar/pathfn.cpp"
 }
 $7 = $20; //@line 317 "./src/cpp/unrar/pathfn.cpp"
 while(1) {
  $22 = $7; //@line 318 "./src/cpp/unrar/pathfn.cpp"
  $23 = HEAP32[$22>>2]|0; //@line 318 "./src/cpp/unrar/pathfn.cpp"
  $24 = (__Z7IsDigiti($23)|0); //@line 318 "./src/cpp/unrar/pathfn.cpp"
  if (!($24)) {
   break;
  }
  $25 = $7; //@line 318 "./src/cpp/unrar/pathfn.cpp"
  $26 = $5; //@line 318 "./src/cpp/unrar/pathfn.cpp"
  $27 = ($25>>>0)>($26>>>0); //@line 318 "./src/cpp/unrar/pathfn.cpp"
  if (!($27)) {
   break;
  }
  $28 = $7; //@line 319 "./src/cpp/unrar/pathfn.cpp"
  $29 = ((($28)) + -4|0); //@line 319 "./src/cpp/unrar/pathfn.cpp"
  $7 = $29; //@line 319 "./src/cpp/unrar/pathfn.cpp"
 }
 while(1) {
  $30 = $7; //@line 323 "./src/cpp/unrar/pathfn.cpp"
  $31 = $5; //@line 323 "./src/cpp/unrar/pathfn.cpp"
  $32 = ($30>>>0)>($31>>>0); //@line 323 "./src/cpp/unrar/pathfn.cpp"
  if (!($32)) {
   label = 17;
   break;
  }
  $33 = $7; //@line 323 "./src/cpp/unrar/pathfn.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 323 "./src/cpp/unrar/pathfn.cpp"
  $35 = ($34|0)!=(46); //@line 323 "./src/cpp/unrar/pathfn.cpp"
  if (!($35)) {
   label = 17;
   break;
  }
  $36 = $7; //@line 325 "./src/cpp/unrar/pathfn.cpp"
  $37 = HEAP32[$36>>2]|0; //@line 325 "./src/cpp/unrar/pathfn.cpp"
  $38 = (__Z7IsDigiti($37)|0); //@line 325 "./src/cpp/unrar/pathfn.cpp"
  if ($38) {
   label = 13;
   break;
  }
  $52 = $7; //@line 334 "./src/cpp/unrar/pathfn.cpp"
  $53 = ((($52)) + -4|0); //@line 334 "./src/cpp/unrar/pathfn.cpp"
  $7 = $53; //@line 334 "./src/cpp/unrar/pathfn.cpp"
 }
 if ((label|0) == 13) {
  $39 = $5; //@line 329 "./src/cpp/unrar/pathfn.cpp"
  $40 = (__Z11PointToNamePKw($39)|0); //@line 329 "./src/cpp/unrar/pathfn.cpp"
  $3 = $40;
  $4 = 46;
  $41 = $3; //@line 137 "/emscripten/system/include/libcxx/wchar.h"
  $42 = $4; //@line 137 "/emscripten/system/include/libcxx/wchar.h"
  $1 = $41;
  $2 = $42;
  $43 = $1; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
  $44 = $2; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
  $45 = (_wcschr($43,$44)|0); //@line 133 "/emscripten/system/include/libcxx/wchar.h"
  $8 = $45; //@line 329 "./src/cpp/unrar/pathfn.cpp"
  $46 = $8; //@line 330 "./src/cpp/unrar/pathfn.cpp"
  $47 = ($46|0)!=(0|0); //@line 330 "./src/cpp/unrar/pathfn.cpp"
  if (!($47)) {
   $54 = $6; //@line 336 "./src/cpp/unrar/pathfn.cpp"
   STACKTOP = sp;return ($54|0); //@line 336 "./src/cpp/unrar/pathfn.cpp"
  }
  $48 = $8; //@line 330 "./src/cpp/unrar/pathfn.cpp"
  $49 = $7; //@line 330 "./src/cpp/unrar/pathfn.cpp"
  $50 = ($48>>>0)<($49>>>0); //@line 330 "./src/cpp/unrar/pathfn.cpp"
  if (!($50)) {
   $54 = $6; //@line 336 "./src/cpp/unrar/pathfn.cpp"
   STACKTOP = sp;return ($54|0); //@line 336 "./src/cpp/unrar/pathfn.cpp"
  }
  $51 = $7; //@line 331 "./src/cpp/unrar/pathfn.cpp"
  $6 = $51; //@line 331 "./src/cpp/unrar/pathfn.cpp"
  $54 = $6; //@line 336 "./src/cpp/unrar/pathfn.cpp"
  STACKTOP = sp;return ($54|0); //@line 336 "./src/cpp/unrar/pathfn.cpp"
 }
 else if ((label|0) == 17) {
  $54 = $6; //@line 336 "./src/cpp/unrar/pathfn.cpp"
  STACKTOP = sp;return ($54|0); //@line 336 "./src/cpp/unrar/pathfn.cpp"
 }
 return (0)|0;
}
function __Z14NextVolumeNamePwjb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $8 = $2&1;
 $5 = $8;
 $9 = $3; //@line 343 "./src/cpp/unrar/pathfn.cpp"
 $10 = (__Z6GetExtPKw($9)|0); //@line 343 "./src/cpp/unrar/pathfn.cpp"
 $6 = $10; //@line 343 "./src/cpp/unrar/pathfn.cpp"
 $11 = ($10|0)==(0|0); //@line 343 "./src/cpp/unrar/pathfn.cpp"
 do {
  if ($11) {
   $12 = $3; //@line 345 "./src/cpp/unrar/pathfn.cpp"
   $13 = $4; //@line 345 "./src/cpp/unrar/pathfn.cpp"
   (__Z8wcsncatzPwPKwj($12,652,$13)|0); //@line 345 "./src/cpp/unrar/pathfn.cpp"
   $14 = $3; //@line 346 "./src/cpp/unrar/pathfn.cpp"
   $15 = (__Z6GetExtPKw($14)|0); //@line 346 "./src/cpp/unrar/pathfn.cpp"
   $6 = $15; //@line 346 "./src/cpp/unrar/pathfn.cpp"
  } else {
   $16 = $6; //@line 349 "./src/cpp/unrar/pathfn.cpp"
   $17 = ((($16)) + 4|0); //@line 349 "./src/cpp/unrar/pathfn.cpp"
   $18 = HEAP32[$17>>2]|0; //@line 349 "./src/cpp/unrar/pathfn.cpp"
   $19 = ($18|0)==(0); //@line 349 "./src/cpp/unrar/pathfn.cpp"
   if ($19) {
    $20 = $3; //@line 349 "./src/cpp/unrar/pathfn.cpp"
    $21 = (_wcslen($20)|0); //@line 349 "./src/cpp/unrar/pathfn.cpp"
    $22 = $4; //@line 349 "./src/cpp/unrar/pathfn.cpp"
    $23 = (($22) - 3)|0; //@line 349 "./src/cpp/unrar/pathfn.cpp"
    $24 = ($21>>>0)<($23>>>0); //@line 349 "./src/cpp/unrar/pathfn.cpp"
    if (!($24)) {
     label = 5;
    }
   } else {
    label = 5;
   }
   if ((label|0) == 5) {
    $25 = $6; //@line 349 "./src/cpp/unrar/pathfn.cpp"
    $26 = ((($25)) + 4|0); //@line 349 "./src/cpp/unrar/pathfn.cpp"
    $27 = (__Z8wcsicompPKwS0_($26,672)|0); //@line 349 "./src/cpp/unrar/pathfn.cpp"
    $28 = ($27|0)==(0); //@line 349 "./src/cpp/unrar/pathfn.cpp"
    if (!($28)) {
     $29 = $6; //@line 349 "./src/cpp/unrar/pathfn.cpp"
     $30 = ((($29)) + 4|0); //@line 349 "./src/cpp/unrar/pathfn.cpp"
     $31 = (__Z8wcsicompPKwS0_($30,628)|0); //@line 349 "./src/cpp/unrar/pathfn.cpp"
     $32 = ($31|0)==(0); //@line 349 "./src/cpp/unrar/pathfn.cpp"
     if (!($32)) {
      break;
     }
    }
   }
   $33 = $6; //@line 350 "./src/cpp/unrar/pathfn.cpp"
   $34 = ((($33)) + 4|0); //@line 350 "./src/cpp/unrar/pathfn.cpp"
   (_wcscpy($34,688)|0); //@line 350 "./src/cpp/unrar/pathfn.cpp"
  }
 } while(0);
 $35 = $5; //@line 351 "./src/cpp/unrar/pathfn.cpp"
 $36 = $35&1; //@line 351 "./src/cpp/unrar/pathfn.cpp"
 if (!($36)) {
  $37 = $3; //@line 353 "./src/cpp/unrar/pathfn.cpp"
  $38 = (__Z13GetVolNumPartPKw($37)|0); //@line 353 "./src/cpp/unrar/pathfn.cpp"
  $6 = $38; //@line 353 "./src/cpp/unrar/pathfn.cpp"
  while(1) {
   $39 = $6; //@line 355 "./src/cpp/unrar/pathfn.cpp"
   $40 = HEAP32[$39>>2]|0; //@line 355 "./src/cpp/unrar/pathfn.cpp"
   $41 = (($40) + 1)|0; //@line 355 "./src/cpp/unrar/pathfn.cpp"
   HEAP32[$39>>2] = $41; //@line 355 "./src/cpp/unrar/pathfn.cpp"
   $42 = ($41|0)==(58); //@line 355 "./src/cpp/unrar/pathfn.cpp"
   if (!($42)) {
    label = 25;
    break;
   }
   $43 = $6; //@line 357 "./src/cpp/unrar/pathfn.cpp"
   HEAP32[$43>>2] = 48; //@line 357 "./src/cpp/unrar/pathfn.cpp"
   $44 = $6; //@line 358 "./src/cpp/unrar/pathfn.cpp"
   $45 = ((($44)) + -4|0); //@line 358 "./src/cpp/unrar/pathfn.cpp"
   $6 = $45; //@line 358 "./src/cpp/unrar/pathfn.cpp"
   $46 = $6; //@line 359 "./src/cpp/unrar/pathfn.cpp"
   $47 = $3; //@line 359 "./src/cpp/unrar/pathfn.cpp"
   $48 = ($46>>>0)<($47>>>0); //@line 359 "./src/cpp/unrar/pathfn.cpp"
   if ($48) {
    break;
   }
   $49 = $6; //@line 359 "./src/cpp/unrar/pathfn.cpp"
   $50 = HEAP32[$49>>2]|0; //@line 359 "./src/cpp/unrar/pathfn.cpp"
   $51 = (__Z7IsDigiti($50)|0); //@line 359 "./src/cpp/unrar/pathfn.cpp"
   if (!($51)) {
    break;
   }
  }
  if ((label|0) == 25) {
   STACKTOP = sp;return; //@line 386 "./src/cpp/unrar/pathfn.cpp"
  }
  $52 = $3; //@line 361 "./src/cpp/unrar/pathfn.cpp"
  $53 = $3; //@line 361 "./src/cpp/unrar/pathfn.cpp"
  $54 = (_wcslen($53)|0); //@line 361 "./src/cpp/unrar/pathfn.cpp"
  $55 = (($52) + ($54<<2)|0); //@line 361 "./src/cpp/unrar/pathfn.cpp"
  $7 = $55; //@line 361 "./src/cpp/unrar/pathfn.cpp"
  while(1) {
   $56 = $7; //@line 361 "./src/cpp/unrar/pathfn.cpp"
   $57 = $6; //@line 361 "./src/cpp/unrar/pathfn.cpp"
   $58 = ($56|0)!=($57|0); //@line 361 "./src/cpp/unrar/pathfn.cpp"
   if (!($58)) {
    break;
   }
   $59 = $7; //@line 362 "./src/cpp/unrar/pathfn.cpp"
   $60 = HEAP32[$59>>2]|0; //@line 362 "./src/cpp/unrar/pathfn.cpp"
   $61 = $7; //@line 362 "./src/cpp/unrar/pathfn.cpp"
   $62 = ((($61)) + 4|0); //@line 362 "./src/cpp/unrar/pathfn.cpp"
   HEAP32[$62>>2] = $60; //@line 362 "./src/cpp/unrar/pathfn.cpp"
   $63 = $7; //@line 361 "./src/cpp/unrar/pathfn.cpp"
   $64 = ((($63)) + -4|0); //@line 361 "./src/cpp/unrar/pathfn.cpp"
   $7 = $64; //@line 361 "./src/cpp/unrar/pathfn.cpp"
  }
  $65 = $6; //@line 363 "./src/cpp/unrar/pathfn.cpp"
  $66 = ((($65)) + 4|0); //@line 363 "./src/cpp/unrar/pathfn.cpp"
  HEAP32[$66>>2] = 49; //@line 363 "./src/cpp/unrar/pathfn.cpp"
  STACKTOP = sp;return; //@line 386 "./src/cpp/unrar/pathfn.cpp"
 }
 $67 = $6; //@line 369 "./src/cpp/unrar/pathfn.cpp"
 $68 = ((($67)) + 8|0); //@line 369 "./src/cpp/unrar/pathfn.cpp"
 $69 = HEAP32[$68>>2]|0; //@line 369 "./src/cpp/unrar/pathfn.cpp"
 $70 = (__Z7IsDigiti($69)|0); //@line 369 "./src/cpp/unrar/pathfn.cpp"
 if ($70) {
  $71 = $6; //@line 369 "./src/cpp/unrar/pathfn.cpp"
  $72 = ((($71)) + 12|0); //@line 369 "./src/cpp/unrar/pathfn.cpp"
  $73 = HEAP32[$72>>2]|0; //@line 369 "./src/cpp/unrar/pathfn.cpp"
  $74 = (__Z7IsDigiti($73)|0); //@line 369 "./src/cpp/unrar/pathfn.cpp"
  if ($74) {
   $77 = $6; //@line 373 "./src/cpp/unrar/pathfn.cpp"
   $78 = ((($77)) + 12|0); //@line 373 "./src/cpp/unrar/pathfn.cpp"
   $6 = $78; //@line 373 "./src/cpp/unrar/pathfn.cpp"
   while(1) {
    $79 = $6; //@line 374 "./src/cpp/unrar/pathfn.cpp"
    $80 = HEAP32[$79>>2]|0; //@line 374 "./src/cpp/unrar/pathfn.cpp"
    $81 = (($80) + 1)|0; //@line 374 "./src/cpp/unrar/pathfn.cpp"
    HEAP32[$79>>2] = $81; //@line 374 "./src/cpp/unrar/pathfn.cpp"
    $82 = ($81|0)==(58); //@line 374 "./src/cpp/unrar/pathfn.cpp"
    if (!($82)) {
     label = 25;
     break;
    }
    $83 = $6; //@line 375 "./src/cpp/unrar/pathfn.cpp"
    $84 = ((($83)) + -4|0); //@line 375 "./src/cpp/unrar/pathfn.cpp"
    $85 = HEAP32[$84>>2]|0; //@line 375 "./src/cpp/unrar/pathfn.cpp"
    $86 = ($85|0)==(46); //@line 375 "./src/cpp/unrar/pathfn.cpp"
    $87 = $6;
    if ($86) {
     break;
    }
    HEAP32[$87>>2] = 48; //@line 382 "./src/cpp/unrar/pathfn.cpp"
    $88 = $6; //@line 383 "./src/cpp/unrar/pathfn.cpp"
    $89 = ((($88)) + -4|0); //@line 383 "./src/cpp/unrar/pathfn.cpp"
    $6 = $89; //@line 383 "./src/cpp/unrar/pathfn.cpp"
   }
   if ((label|0) == 25) {
    STACKTOP = sp;return; //@line 386 "./src/cpp/unrar/pathfn.cpp"
   }
   HEAP32[$87>>2] = 65; //@line 377 "./src/cpp/unrar/pathfn.cpp"
   STACKTOP = sp;return; //@line 386 "./src/cpp/unrar/pathfn.cpp"
  }
 }
 $75 = $6; //@line 370 "./src/cpp/unrar/pathfn.cpp"
 $76 = ((($75)) + 8|0); //@line 370 "./src/cpp/unrar/pathfn.cpp"
 (_wcscpy($76,704)|0); //@line 370 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return; //@line 386 "./src/cpp/unrar/pathfn.cpp"
}
function __Z12IsNameUsablePKw($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $5; //@line 402 "./src/cpp/unrar/pathfn.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 402 "./src/cpp/unrar/pathfn.cpp"
 $8 = ($7|0)!=(0); //@line 402 "./src/cpp/unrar/pathfn.cpp"
 if (!($8)) {
  $16 = 0;
  STACKTOP = sp;return ($16|0); //@line 402 "./src/cpp/unrar/pathfn.cpp"
 }
 $9 = $5; //@line 402 "./src/cpp/unrar/pathfn.cpp"
 $3 = $9;
 $4 = 716;
 $10 = $3; //@line 142 "/emscripten/system/include/libcxx/wchar.h"
 $11 = $4; //@line 142 "/emscripten/system/include/libcxx/wchar.h"
 $1 = $10;
 $2 = $11;
 $12 = $1; //@line 140 "/emscripten/system/include/libcxx/wchar.h"
 $13 = $2; //@line 140 "/emscripten/system/include/libcxx/wchar.h"
 $14 = (_wcspbrk($12,$13)|0); //@line 140 "/emscripten/system/include/libcxx/wchar.h"
 $15 = ($14|0)==(0|0); //@line 402 "./src/cpp/unrar/pathfn.cpp"
 $16 = $15;
 STACKTOP = sp;return ($16|0); //@line 402 "./src/cpp/unrar/pathfn.cpp"
}
function __Z14MakeNameUsablePwb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $9 = $1&1;
 $7 = $9;
 $10 = $6; //@line 439 "./src/cpp/unrar/pathfn.cpp"
 $8 = $10; //@line 439 "./src/cpp/unrar/pathfn.cpp"
 while(1) {
  $11 = $8; //@line 439 "./src/cpp/unrar/pathfn.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 439 "./src/cpp/unrar/pathfn.cpp"
  $13 = ($12|0)!=(0); //@line 439 "./src/cpp/unrar/pathfn.cpp"
  if (!($13)) {
   break;
  }
  $14 = $7; //@line 441 "./src/cpp/unrar/pathfn.cpp"
  $15 = $14&1; //@line 441 "./src/cpp/unrar/pathfn.cpp"
  $16 = $15 ? 716 : 744; //@line 441 "./src/cpp/unrar/pathfn.cpp"
  $17 = $8; //@line 441 "./src/cpp/unrar/pathfn.cpp"
  $18 = HEAP32[$17>>2]|0; //@line 441 "./src/cpp/unrar/pathfn.cpp"
  $4 = $16;
  $5 = $18;
  $19 = $4; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
  $20 = $5; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
  $2 = $19;
  $3 = $20;
  $21 = $2; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
  $22 = $3; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
  $23 = (_wcschr($21,$22)|0); //@line 133 "/emscripten/system/include/libcxx/wchar.h"
  $24 = ($23|0)!=(0|0); //@line 441 "./src/cpp/unrar/pathfn.cpp"
  if ($24) {
   label = 6;
  } else {
   $25 = $7; //@line 441 "./src/cpp/unrar/pathfn.cpp"
   $26 = $25&1; //@line 441 "./src/cpp/unrar/pathfn.cpp"
   if ($26) {
    $27 = $8; //@line 441 "./src/cpp/unrar/pathfn.cpp"
    $28 = HEAP32[$27>>2]|0; //@line 441 "./src/cpp/unrar/pathfn.cpp"
    $29 = ($28>>>0)<(32); //@line 441 "./src/cpp/unrar/pathfn.cpp"
    if ($29) {
     label = 6;
    }
   }
  }
  if ((label|0) == 6) {
   label = 0;
   $30 = $8; //@line 442 "./src/cpp/unrar/pathfn.cpp"
   HEAP32[$30>>2] = 95; //@line 442 "./src/cpp/unrar/pathfn.cpp"
  }
  $31 = $8; //@line 439 "./src/cpp/unrar/pathfn.cpp"
  $32 = ((($31)) + 4|0); //@line 439 "./src/cpp/unrar/pathfn.cpp"
  $8 = $32; //@line 439 "./src/cpp/unrar/pathfn.cpp"
 }
 STACKTOP = sp;return; //@line 454 "./src/cpp/unrar/pathfn.cpp"
}
function __Z14DosSlashToUnixPKcPcj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 0; //@line 468 "./src/cpp/unrar/pathfn.cpp"
 while(1) {
  $7 = $6; //@line 469 "./src/cpp/unrar/pathfn.cpp"
  $8 = $5; //@line 469 "./src/cpp/unrar/pathfn.cpp"
  $9 = (($8) - 1)|0; //@line 469 "./src/cpp/unrar/pathfn.cpp"
  $10 = ($7>>>0)<($9>>>0); //@line 469 "./src/cpp/unrar/pathfn.cpp"
  if (!($10)) {
   label = 7;
   break;
  }
  $11 = $3; //@line 469 "./src/cpp/unrar/pathfn.cpp"
  $12 = $6; //@line 469 "./src/cpp/unrar/pathfn.cpp"
  $13 = (($11) + ($12)|0); //@line 469 "./src/cpp/unrar/pathfn.cpp"
  $14 = HEAP8[$13>>0]|0; //@line 469 "./src/cpp/unrar/pathfn.cpp"
  $15 = $14 << 24 >> 24; //@line 469 "./src/cpp/unrar/pathfn.cpp"
  $16 = ($15|0)!=(0); //@line 469 "./src/cpp/unrar/pathfn.cpp"
  if (!($16)) {
   label = 7;
   break;
  }
  $17 = $3; //@line 470 "./src/cpp/unrar/pathfn.cpp"
  $18 = $6; //@line 470 "./src/cpp/unrar/pathfn.cpp"
  $19 = (($17) + ($18)|0); //@line 470 "./src/cpp/unrar/pathfn.cpp"
  $20 = HEAP8[$19>>0]|0; //@line 470 "./src/cpp/unrar/pathfn.cpp"
  $21 = $20 << 24 >> 24; //@line 470 "./src/cpp/unrar/pathfn.cpp"
  $22 = ($21|0)==(92); //@line 470 "./src/cpp/unrar/pathfn.cpp"
  if ($22) {
   $30 = 47;
  } else {
   $23 = $3; //@line 470 "./src/cpp/unrar/pathfn.cpp"
   $24 = $6; //@line 470 "./src/cpp/unrar/pathfn.cpp"
   $25 = (($23) + ($24)|0); //@line 470 "./src/cpp/unrar/pathfn.cpp"
   $26 = HEAP8[$25>>0]|0; //@line 470 "./src/cpp/unrar/pathfn.cpp"
   $30 = $26;
  }
  $27 = $4; //@line 470 "./src/cpp/unrar/pathfn.cpp"
  $28 = $6; //@line 470 "./src/cpp/unrar/pathfn.cpp"
  $29 = (($27) + ($28)|0); //@line 470 "./src/cpp/unrar/pathfn.cpp"
  HEAP8[$29>>0] = $30; //@line 470 "./src/cpp/unrar/pathfn.cpp"
  $31 = $6; //@line 469 "./src/cpp/unrar/pathfn.cpp"
  $32 = (($31) + 1)|0; //@line 469 "./src/cpp/unrar/pathfn.cpp"
  $6 = $32; //@line 469 "./src/cpp/unrar/pathfn.cpp"
 }
 if ((label|0) == 7) {
  $33 = $4; //@line 471 "./src/cpp/unrar/pathfn.cpp"
  $34 = $6; //@line 471 "./src/cpp/unrar/pathfn.cpp"
  $35 = (($33) + ($34)|0); //@line 471 "./src/cpp/unrar/pathfn.cpp"
  HEAP8[$35>>0] = 0; //@line 471 "./src/cpp/unrar/pathfn.cpp"
  STACKTOP = sp;return; //@line 472 "./src/cpp/unrar/pathfn.cpp"
 }
}
function __Z14DosSlashToUnixPKwPwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 0; //@line 486 "./src/cpp/unrar/pathfn.cpp"
 while(1) {
  $7 = $6; //@line 487 "./src/cpp/unrar/pathfn.cpp"
  $8 = $5; //@line 487 "./src/cpp/unrar/pathfn.cpp"
  $9 = (($8) - 1)|0; //@line 487 "./src/cpp/unrar/pathfn.cpp"
  $10 = ($7>>>0)<($9>>>0); //@line 487 "./src/cpp/unrar/pathfn.cpp"
  if (!($10)) {
   label = 7;
   break;
  }
  $11 = $3; //@line 487 "./src/cpp/unrar/pathfn.cpp"
  $12 = $6; //@line 487 "./src/cpp/unrar/pathfn.cpp"
  $13 = (($11) + ($12<<2)|0); //@line 487 "./src/cpp/unrar/pathfn.cpp"
  $14 = HEAP32[$13>>2]|0; //@line 487 "./src/cpp/unrar/pathfn.cpp"
  $15 = ($14|0)!=(0); //@line 487 "./src/cpp/unrar/pathfn.cpp"
  if (!($15)) {
   label = 7;
   break;
  }
  $16 = $3; //@line 488 "./src/cpp/unrar/pathfn.cpp"
  $17 = $6; //@line 488 "./src/cpp/unrar/pathfn.cpp"
  $18 = (($16) + ($17<<2)|0); //@line 488 "./src/cpp/unrar/pathfn.cpp"
  $19 = HEAP32[$18>>2]|0; //@line 488 "./src/cpp/unrar/pathfn.cpp"
  $20 = ($19|0)==(92); //@line 488 "./src/cpp/unrar/pathfn.cpp"
  if ($20) {
   $28 = 47;
  } else {
   $21 = $3; //@line 488 "./src/cpp/unrar/pathfn.cpp"
   $22 = $6; //@line 488 "./src/cpp/unrar/pathfn.cpp"
   $23 = (($21) + ($22<<2)|0); //@line 488 "./src/cpp/unrar/pathfn.cpp"
   $24 = HEAP32[$23>>2]|0; //@line 488 "./src/cpp/unrar/pathfn.cpp"
   $28 = $24;
  }
  $25 = $4; //@line 488 "./src/cpp/unrar/pathfn.cpp"
  $26 = $6; //@line 488 "./src/cpp/unrar/pathfn.cpp"
  $27 = (($25) + ($26<<2)|0); //@line 488 "./src/cpp/unrar/pathfn.cpp"
  HEAP32[$27>>2] = $28; //@line 488 "./src/cpp/unrar/pathfn.cpp"
  $29 = $6; //@line 487 "./src/cpp/unrar/pathfn.cpp"
  $30 = (($29) + 1)|0; //@line 487 "./src/cpp/unrar/pathfn.cpp"
  $6 = $30; //@line 487 "./src/cpp/unrar/pathfn.cpp"
 }
 if ((label|0) == 7) {
  $31 = $4; //@line 489 "./src/cpp/unrar/pathfn.cpp"
  $32 = $6; //@line 489 "./src/cpp/unrar/pathfn.cpp"
  $33 = (($31) + ($32<<2)|0); //@line 489 "./src/cpp/unrar/pathfn.cpp"
  HEAP32[$33>>2] = 0; //@line 489 "./src/cpp/unrar/pathfn.cpp"
  STACKTOP = sp;return; //@line 490 "./src/cpp/unrar/pathfn.cpp"
 }
}
function __Z17ConvertNameToFullPKwPwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2064|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2064|0);
 $6 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 495 "./src/cpp/unrar/pathfn.cpp"
 $8 = ($7|0)==(0|0); //@line 495 "./src/cpp/unrar/pathfn.cpp"
 if (!($8)) {
  $9 = $3; //@line 495 "./src/cpp/unrar/pathfn.cpp"
  $10 = HEAP32[$9>>2]|0; //@line 495 "./src/cpp/unrar/pathfn.cpp"
  $11 = ($10|0)==(0); //@line 495 "./src/cpp/unrar/pathfn.cpp"
  if (!($11)) {
   $15 = $3; //@line 518 "./src/cpp/unrar/pathfn.cpp"
   $16 = (__Z10IsFullPathPKw($15)|0); //@line 518 "./src/cpp/unrar/pathfn.cpp"
   if ($16) {
    $17 = $4; //@line 519 "./src/cpp/unrar/pathfn.cpp"
    HEAP32[$17>>2] = 0; //@line 519 "./src/cpp/unrar/pathfn.cpp"
   } else {
    $18 = (_getcwd($6,2048)|0); //@line 523 "./src/cpp/unrar/pathfn.cpp"
    $19 = ($18|0)==(0|0); //@line 523 "./src/cpp/unrar/pathfn.cpp"
    if ($19) {
     HEAP8[$6>>0] = 0; //@line 524 "./src/cpp/unrar/pathfn.cpp"
    }
    $20 = $4; //@line 525 "./src/cpp/unrar/pathfn.cpp"
    $21 = $5; //@line 525 "./src/cpp/unrar/pathfn.cpp"
    (__Z10CharToWidePKcPwj($6,$20,$21)|0); //@line 525 "./src/cpp/unrar/pathfn.cpp"
    $22 = $4; //@line 526 "./src/cpp/unrar/pathfn.cpp"
    $23 = $5; //@line 526 "./src/cpp/unrar/pathfn.cpp"
    __Z11AddEndSlashPwj($22,$23); //@line 526 "./src/cpp/unrar/pathfn.cpp"
   }
   $24 = $4; //@line 528 "./src/cpp/unrar/pathfn.cpp"
   $25 = $3; //@line 528 "./src/cpp/unrar/pathfn.cpp"
   $26 = $5; //@line 528 "./src/cpp/unrar/pathfn.cpp"
   (__Z8wcsncatzPwPKwj($24,$25,$26)|0); //@line 528 "./src/cpp/unrar/pathfn.cpp"
   STACKTOP = sp;return; //@line 532 "./src/cpp/unrar/pathfn.cpp"
  }
 }
 $12 = $5; //@line 497 "./src/cpp/unrar/pathfn.cpp"
 $13 = ($12>>>0)>(0); //@line 497 "./src/cpp/unrar/pathfn.cpp"
 if (!($13)) {
  STACKTOP = sp;return; //@line 532 "./src/cpp/unrar/pathfn.cpp"
 }
 $14 = $4; //@line 498 "./src/cpp/unrar/pathfn.cpp"
 HEAP32[$14>>2] = 0; //@line 498 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return; //@line 532 "./src/cpp/unrar/pathfn.cpp"
}
function __Z10IsFullPathPKw($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 546 "./src/cpp/unrar/pathfn.cpp"
 $3 = HEAP32[$2>>2]|0; //@line 546 "./src/cpp/unrar/pathfn.cpp"
 $4 = (__Z9IsPathDivi($3)|0); //@line 546 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return ($4|0); //@line 546 "./src/cpp/unrar/pathfn.cpp"
}
function __Z14IsFullRootPathPKw($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 553 "./src/cpp/unrar/pathfn.cpp"
 $3 = (__Z10IsFullPathPKw($2)|0); //@line 553 "./src/cpp/unrar/pathfn.cpp"
 if ($3) {
  $7 = 1;
  STACKTOP = sp;return ($7|0); //@line 553 "./src/cpp/unrar/pathfn.cpp"
 }
 $4 = $1; //@line 553 "./src/cpp/unrar/pathfn.cpp"
 $5 = HEAP32[$4>>2]|0; //@line 553 "./src/cpp/unrar/pathfn.cpp"
 $6 = (__Z9IsPathDivi($5)|0); //@line 553 "./src/cpp/unrar/pathfn.cpp"
 $7 = $6;
 STACKTOP = sp;return ($7|0); //@line 553 "./src/cpp/unrar/pathfn.cpp"
}
function __Z20ParseVersionFileNamePwb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $10 = $1&1;
 $7 = $10;
 $8 = 0; //@line 584 "./src/cpp/unrar/pathfn.cpp"
 $11 = $6; //@line 585 "./src/cpp/unrar/pathfn.cpp"
 $4 = $11;
 $5 = 59;
 $12 = $4; //@line 151 "/emscripten/system/include/libcxx/wchar.h"
 $13 = $5; //@line 151 "/emscripten/system/include/libcxx/wchar.h"
 $2 = $12;
 $3 = $13;
 $14 = $2; //@line 147 "/emscripten/system/include/libcxx/wchar.h"
 $15 = $3; //@line 147 "/emscripten/system/include/libcxx/wchar.h"
 $16 = (_wcsrchr($14,$15)|0); //@line 147 "/emscripten/system/include/libcxx/wchar.h"
 $9 = $16; //@line 585 "./src/cpp/unrar/pathfn.cpp"
 $17 = $9; //@line 586 "./src/cpp/unrar/pathfn.cpp"
 $18 = ($17|0)!=(0|0); //@line 586 "./src/cpp/unrar/pathfn.cpp"
 if (!($18)) {
  $27 = $8; //@line 593 "./src/cpp/unrar/pathfn.cpp"
  STACKTOP = sp;return ($27|0); //@line 593 "./src/cpp/unrar/pathfn.cpp"
 }
 $19 = $8; //@line 588 "./src/cpp/unrar/pathfn.cpp"
 $20 = ($19|0)==(0); //@line 588 "./src/cpp/unrar/pathfn.cpp"
 if ($20) {
  $21 = $9; //@line 589 "./src/cpp/unrar/pathfn.cpp"
  $22 = ((($21)) + 4|0); //@line 589 "./src/cpp/unrar/pathfn.cpp"
  $23 = (__Z5atoiwPKw($22)|0); //@line 589 "./src/cpp/unrar/pathfn.cpp"
  $8 = $23; //@line 589 "./src/cpp/unrar/pathfn.cpp"
 }
 $24 = $7; //@line 590 "./src/cpp/unrar/pathfn.cpp"
 $25 = $24&1; //@line 590 "./src/cpp/unrar/pathfn.cpp"
 if (!($25)) {
  $27 = $8; //@line 593 "./src/cpp/unrar/pathfn.cpp"
  STACKTOP = sp;return ($27|0); //@line 593 "./src/cpp/unrar/pathfn.cpp"
 }
 $26 = $9; //@line 591 "./src/cpp/unrar/pathfn.cpp"
 HEAP32[$26>>2] = 0; //@line 591 "./src/cpp/unrar/pathfn.cpp"
 $27 = $8; //@line 593 "./src/cpp/unrar/pathfn.cpp"
 STACKTOP = sp;return ($27|0); //@line 593 "./src/cpp/unrar/pathfn.cpp"
}
function __ZN8FindDataC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8208|0); //@line 8 "./src/cpp/unrar/find.hpp"
 __ZN7RarTimeC2Ev($3); //@line 8 "./src/cpp/unrar/find.hpp"
 $4 = ((($2)) + 8216|0); //@line 8 "./src/cpp/unrar/find.hpp"
 __ZN7RarTimeC2Ev($4); //@line 8 "./src/cpp/unrar/find.hpp"
 $5 = ((($2)) + 8224|0); //@line 8 "./src/cpp/unrar/find.hpp"
 __ZN7RarTimeC2Ev($5); //@line 8 "./src/cpp/unrar/find.hpp"
 STACKTOP = sp;return; //@line 8 "./src/cpp/unrar/find.hpp"
}
function __ZN7RarTimeC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7RarTime5ResetEv($2); //@line 27 "./src/cpp/unrar/timefn.hpp"
 STACKTOP = sp;return; //@line 27 "./src/cpp/unrar/timefn.hpp"
}
function __ZN7RarTime5ResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = $2; //@line 53 "./src/cpp/unrar/timefn.hpp"
 $4 = $3; //@line 53 "./src/cpp/unrar/timefn.hpp"
 HEAP32[$4>>2] = 0; //@line 53 "./src/cpp/unrar/timefn.hpp"
 $5 = (($3) + 4)|0; //@line 53 "./src/cpp/unrar/timefn.hpp"
 $6 = $5; //@line 53 "./src/cpp/unrar/timefn.hpp"
 HEAP32[$6>>2] = 0; //@line 53 "./src/cpp/unrar/timefn.hpp"
 STACKTOP = sp;return; //@line 53 "./src/cpp/unrar/timefn.hpp"
}
function __Z9ToPercentxx($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 8|0;
 $6 = sp;
 $7 = $5;
 $8 = $7;
 HEAP32[$8>>2] = $0;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $1;
 $11 = $6;
 $12 = $11;
 HEAP32[$12>>2] = $2;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $3;
 $15 = $6; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $16 = $15; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $18 = (($15) + 4)|0; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $19 = $18; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $20 = HEAP32[$19>>2]|0; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $21 = $5; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $22 = $21; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $24 = (($21) + 4)|0; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $25 = $24; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $26 = HEAP32[$25>>2]|0; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $27 = ($20|0)<($26|0); //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $28 = ($17>>>0)<($23>>>0); //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $29 = ($20|0)==($26|0); //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $30 = $29 & $28; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 $31 = $27 | $30; //@line 5 "./src/cpp/unrar/smallfn.cpp"
 if ($31) {
  $4 = 100; //@line 6 "./src/cpp/unrar/smallfn.cpp"
  $45 = $4; //@line 8 "./src/cpp/unrar/smallfn.cpp"
  STACKTOP = sp;return ($45|0); //@line 8 "./src/cpp/unrar/smallfn.cpp"
 } else {
  $32 = $5; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $33 = $32; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $35 = (($32) + 4)|0; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $36 = $35; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $37 = HEAP32[$36>>2]|0; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $38 = $6; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $39 = $38; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $40 = HEAP32[$39>>2]|0; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $41 = (($38) + 4)|0; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $42 = $41; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $43 = HEAP32[$42>>2]|0; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $44 = (__Z14ToPercentUnlimxx($34,$37,$40,$43)|0); //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $4 = $44; //@line 7 "./src/cpp/unrar/smallfn.cpp"
  $45 = $4; //@line 8 "./src/cpp/unrar/smallfn.cpp"
  STACKTOP = sp;return ($45|0); //@line 8 "./src/cpp/unrar/smallfn.cpp"
 }
 return (0)|0;
}
function __Z14ToPercentUnlimxx($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 8|0;
 $6 = sp;
 $7 = $5;
 $8 = $7;
 HEAP32[$8>>2] = $0;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $1;
 $11 = $6;
 $12 = $11;
 HEAP32[$12>>2] = $2;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $3;
 $15 = $6; //@line 14 "./src/cpp/unrar/smallfn.cpp"
 $16 = $15; //@line 14 "./src/cpp/unrar/smallfn.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 14 "./src/cpp/unrar/smallfn.cpp"
 $18 = (($15) + 4)|0; //@line 14 "./src/cpp/unrar/smallfn.cpp"
 $19 = $18; //@line 14 "./src/cpp/unrar/smallfn.cpp"
 $20 = HEAP32[$19>>2]|0; //@line 14 "./src/cpp/unrar/smallfn.cpp"
 $21 = ($17|0)==(0); //@line 14 "./src/cpp/unrar/smallfn.cpp"
 $22 = ($20|0)==(0); //@line 14 "./src/cpp/unrar/smallfn.cpp"
 $23 = $21 & $22; //@line 14 "./src/cpp/unrar/smallfn.cpp"
 if ($23) {
  $4 = 0; //@line 15 "./src/cpp/unrar/smallfn.cpp"
  $40 = $4; //@line 17 "./src/cpp/unrar/smallfn.cpp"
  STACKTOP = sp;return ($40|0); //@line 17 "./src/cpp/unrar/smallfn.cpp"
 } else {
  $24 = $5; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $25 = $24; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $26 = HEAP32[$25>>2]|0; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $27 = (($24) + 4)|0; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $28 = $27; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $29 = HEAP32[$28>>2]|0; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $30 = (___muldi3(($26|0),($29|0),100,0)|0); //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $31 = tempRet0; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $32 = $6; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $33 = $32; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $35 = (($32) + 4)|0; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $36 = $35; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $37 = HEAP32[$36>>2]|0; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $38 = (___divdi3(($30|0),($31|0),($34|0),($37|0))|0); //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $39 = tempRet0; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $4 = $38; //@line 16 "./src/cpp/unrar/smallfn.cpp"
  $40 = $4; //@line 17 "./src/cpp/unrar/smallfn.cpp"
  STACKTOP = sp;return ($40|0); //@line 17 "./src/cpp/unrar/smallfn.cpp"
 }
 return (0)|0;
}
function __Z10FileCreateP10RAROptionsP4FilePwjPbxP7RarTimeb($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = sp + 41|0;
 $15 = sp;
 $10 = $0;
 $11 = $1;
 $12 = $2;
 $13 = $3;
 $14 = $4;
 $20 = $15;
 $21 = $20;
 HEAP32[$21>>2] = $5;
 $22 = (($20) + 4)|0;
 $23 = $22;
 HEAP32[$23>>2] = $6;
 $16 = $7;
 $24 = $8&1;
 $17 = $24;
 $25 = $14; //@line 9 "./src/cpp/unrar/filcreat.cpp"
 $26 = ($25|0)!=(0|0); //@line 9 "./src/cpp/unrar/filcreat.cpp"
 if ($26) {
  $27 = $14; //@line 10 "./src/cpp/unrar/filcreat.cpp"
  HEAP8[$27>>0] = 0; //@line 10 "./src/cpp/unrar/filcreat.cpp"
 }
 while(1) {
  $28 = $12; //@line 14 "./src/cpp/unrar/filcreat.cpp"
  $29 = (__Z9FileExistPKw($28)|0); //@line 14 "./src/cpp/unrar/filcreat.cpp"
  if (!($29)) {
   break;
  }
  $30 = $10; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $31 = $12; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $32 = $13; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $33 = $15; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $34 = $33; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $35 = HEAP32[$34>>2]|0; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $36 = (($33) + 4)|0; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $37 = $36; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $38 = HEAP32[$37>>2]|0; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $39 = $16; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $40 = $11; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $41 = ($40|0)==(0|0); //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $42 = $41 ? 1 : 0; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $43 = (__Z14uiAskReplaceExP10RAROptionsPwjxP7RarTimej($30,$31,$32,$35,$38,$39,$42)|0); //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $18 = $43; //@line 32 "./src/cpp/unrar/filcreat.cpp"
  $44 = $18; //@line 34 "./src/cpp/unrar/filcreat.cpp"
  $45 = ($44|0)==(0); //@line 34 "./src/cpp/unrar/filcreat.cpp"
  if ($45) {
   break;
  }
  $46 = $18; //@line 36 "./src/cpp/unrar/filcreat.cpp"
  $47 = ($46|0)==(1); //@line 36 "./src/cpp/unrar/filcreat.cpp"
  if ($47) {
   label = 6;
   break;
  }
  $51 = $18; //@line 42 "./src/cpp/unrar/filcreat.cpp"
  $52 = ($51|0)==(6); //@line 42 "./src/cpp/unrar/filcreat.cpp"
  if (!($52)) {
   continue;
  }
  __ZN12ErrorHandler4ExitE8RAR_EXIT(756,255); //@line 43 "./src/cpp/unrar/filcreat.cpp"
 }
 if ((label|0) == 6) {
  $48 = $14; //@line 38 "./src/cpp/unrar/filcreat.cpp"
  $49 = ($48|0)!=(0|0); //@line 38 "./src/cpp/unrar/filcreat.cpp"
  if ($49) {
   $50 = $14; //@line 39 "./src/cpp/unrar/filcreat.cpp"
   HEAP8[$50>>0] = 1; //@line 39 "./src/cpp/unrar/filcreat.cpp"
  }
  $$expand_i1_val = 0; //@line 40 "./src/cpp/unrar/filcreat.cpp"
  HEAP8[$9>>0] = $$expand_i1_val; //@line 40 "./src/cpp/unrar/filcreat.cpp"
  $$pre_trunc = HEAP8[$9>>0]|0; //@line 54 "./src/cpp/unrar/filcreat.cpp"
  $72 = $$pre_trunc&1; //@line 54 "./src/cpp/unrar/filcreat.cpp"
  STACKTOP = sp;return ($72|0); //@line 54 "./src/cpp/unrar/filcreat.cpp"
 }
 $53 = $17; //@line 48 "./src/cpp/unrar/filcreat.cpp"
 $54 = $53&1; //@line 48 "./src/cpp/unrar/filcreat.cpp"
 $55 = $54 ? 18 : 17; //@line 48 "./src/cpp/unrar/filcreat.cpp"
 $19 = $55; //@line 48 "./src/cpp/unrar/filcreat.cpp"
 $56 = $11; //@line 49 "./src/cpp/unrar/filcreat.cpp"
 $57 = ($56|0)!=(0|0); //@line 49 "./src/cpp/unrar/filcreat.cpp"
 if ($57) {
  $58 = $11; //@line 49 "./src/cpp/unrar/filcreat.cpp"
  $59 = $12; //@line 49 "./src/cpp/unrar/filcreat.cpp"
  $60 = $19; //@line 49 "./src/cpp/unrar/filcreat.cpp"
  $61 = (__ZN4File6CreateEPKwj($58,$59,$60)|0); //@line 49 "./src/cpp/unrar/filcreat.cpp"
  if ($61) {
   $$expand_i1_val2 = 1; //@line 50 "./src/cpp/unrar/filcreat.cpp"
   HEAP8[$9>>0] = $$expand_i1_val2; //@line 50 "./src/cpp/unrar/filcreat.cpp"
   $$pre_trunc = HEAP8[$9>>0]|0; //@line 54 "./src/cpp/unrar/filcreat.cpp"
   $72 = $$pre_trunc&1; //@line 54 "./src/cpp/unrar/filcreat.cpp"
   STACKTOP = sp;return ($72|0); //@line 54 "./src/cpp/unrar/filcreat.cpp"
  }
 }
 $62 = $12; //@line 52 "./src/cpp/unrar/filcreat.cpp"
 (__Z10CreatePathPKwb($62,1)|0); //@line 52 "./src/cpp/unrar/filcreat.cpp"
 $63 = $11; //@line 53 "./src/cpp/unrar/filcreat.cpp"
 $64 = ($63|0)!=(0|0); //@line 53 "./src/cpp/unrar/filcreat.cpp"
 if ($64) {
  $65 = $11; //@line 53 "./src/cpp/unrar/filcreat.cpp"
  $66 = $12; //@line 53 "./src/cpp/unrar/filcreat.cpp"
  $67 = $19; //@line 53 "./src/cpp/unrar/filcreat.cpp"
  $68 = (__ZN4File6CreateEPKwj($65,$66,$67)|0); //@line 53 "./src/cpp/unrar/filcreat.cpp"
  $71 = $68;
 } else {
  $69 = $12; //@line 53 "./src/cpp/unrar/filcreat.cpp"
  $70 = (__Z7DelFilePKw($69)|0); //@line 53 "./src/cpp/unrar/filcreat.cpp"
  $71 = $70;
 }
 $$expand_i1_val4 = $71&1; //@line 53 "./src/cpp/unrar/filcreat.cpp"
 HEAP8[$9>>0] = $$expand_i1_val4; //@line 53 "./src/cpp/unrar/filcreat.cpp"
 $$pre_trunc = HEAP8[$9>>0]|0; //@line 54 "./src/cpp/unrar/filcreat.cpp"
 $72 = $$pre_trunc&1; //@line 54 "./src/cpp/unrar/filcreat.cpp"
 STACKTOP = sp;return ($72|0); //@line 54 "./src/cpp/unrar/filcreat.cpp"
}
function __ZN7ArchiveD0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7ArchiveD2Ev($2); //@line 57 "./src/cpp/unrar/archive.cpp"
 __ZdlPv($2); //@line 57 "./src/cpp/unrar/archive.cpp"
 STACKTOP = sp;return; //@line 60 "./src/cpp/unrar/archive.cpp"
}
function __ZN7Archive4OpenEPKwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 14808|0); //@line 306 "./src/cpp/unrar/archive.cpp"
 __ZN9QuickOpen6UnloadEv($7); //@line 306 "./src/cpp/unrar/archive.cpp"
 $8 = $4; //@line 308 "./src/cpp/unrar/archive.cpp"
 $9 = $5; //@line 308 "./src/cpp/unrar/archive.cpp"
 $10 = (__ZN4File4OpenEPKwj($6,$8,$9)|0); //@line 308 "./src/cpp/unrar/archive.cpp"
 STACKTOP = sp;return ($10|0); //@line 308 "./src/cpp/unrar/archive.cpp"
}
function __ZN7Archive4ReadEPvj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $4;
 $9 = ((($8)) + 14808|0); //@line 315 "./src/cpp/unrar/archive.cpp"
 $10 = $5; //@line 315 "./src/cpp/unrar/archive.cpp"
 $11 = $6; //@line 315 "./src/cpp/unrar/archive.cpp"
 $12 = (__ZN9QuickOpen4ReadEPvjRj($9,$10,$11,$7)|0); //@line 315 "./src/cpp/unrar/archive.cpp"
 if ($12) {
  $13 = HEAP32[$7>>2]|0; //@line 316 "./src/cpp/unrar/archive.cpp"
  $3 = $13; //@line 316 "./src/cpp/unrar/archive.cpp"
  $17 = $3; //@line 318 "./src/cpp/unrar/archive.cpp"
  STACKTOP = sp;return ($17|0); //@line 318 "./src/cpp/unrar/archive.cpp"
 } else {
  $14 = $5; //@line 317 "./src/cpp/unrar/archive.cpp"
  $15 = $6; //@line 317 "./src/cpp/unrar/archive.cpp"
  $16 = (__ZN4File4ReadEPvj($8,$14,$15)|0); //@line 317 "./src/cpp/unrar/archive.cpp"
  $3 = $16; //@line 317 "./src/cpp/unrar/archive.cpp"
  $17 = $3; //@line 318 "./src/cpp/unrar/archive.cpp"
  STACKTOP = sp;return ($17|0); //@line 318 "./src/cpp/unrar/archive.cpp"
 }
 return (0)|0;
}
function __ZN7Archive4SeekExi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp;
 $4 = $0;
 $7 = $5;
 $8 = $7;
 HEAP32[$8>>2] = $1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $2;
 $6 = $3;
 $11 = $4;
 $12 = ((($11)) + 14808|0); //@line 323 "./src/cpp/unrar/archive.cpp"
 $13 = $5; //@line 323 "./src/cpp/unrar/archive.cpp"
 $14 = $13; //@line 323 "./src/cpp/unrar/archive.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 323 "./src/cpp/unrar/archive.cpp"
 $16 = (($13) + 4)|0; //@line 323 "./src/cpp/unrar/archive.cpp"
 $17 = $16; //@line 323 "./src/cpp/unrar/archive.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 323 "./src/cpp/unrar/archive.cpp"
 $19 = $6; //@line 323 "./src/cpp/unrar/archive.cpp"
 $20 = (__ZN9QuickOpen4SeekExi($12,$15,$18,$19)|0); //@line 323 "./src/cpp/unrar/archive.cpp"
 if ($20) {
  STACKTOP = sp;return; //@line 325 "./src/cpp/unrar/archive.cpp"
 }
 $21 = $5; //@line 324 "./src/cpp/unrar/archive.cpp"
 $22 = $21; //@line 324 "./src/cpp/unrar/archive.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 324 "./src/cpp/unrar/archive.cpp"
 $24 = (($21) + 4)|0; //@line 324 "./src/cpp/unrar/archive.cpp"
 $25 = $24; //@line 324 "./src/cpp/unrar/archive.cpp"
 $26 = HEAP32[$25>>2]|0; //@line 324 "./src/cpp/unrar/archive.cpp"
 $27 = $6; //@line 324 "./src/cpp/unrar/archive.cpp"
 __ZN4File4SeekExi($11,$23,$26,$27); //@line 324 "./src/cpp/unrar/archive.cpp"
 STACKTOP = sp;return; //@line 325 "./src/cpp/unrar/archive.cpp"
}
function __ZN7Archive4TellEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = sp + 8|0;
 $3 = sp;
 $2 = $0;
 $4 = $2;
 $5 = ((($4)) + 14808|0); //@line 331 "./src/cpp/unrar/archive.cpp"
 $6 = (__ZN9QuickOpen4TellEPx($5,$3)|0); //@line 331 "./src/cpp/unrar/archive.cpp"
 if ($6) {
  $7 = $3; //@line 332 "./src/cpp/unrar/archive.cpp"
  $8 = $7; //@line 332 "./src/cpp/unrar/archive.cpp"
  $9 = HEAP32[$8>>2]|0; //@line 332 "./src/cpp/unrar/archive.cpp"
  $10 = (($7) + 4)|0; //@line 332 "./src/cpp/unrar/archive.cpp"
  $11 = $10; //@line 332 "./src/cpp/unrar/archive.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 332 "./src/cpp/unrar/archive.cpp"
  $13 = $1; //@line 332 "./src/cpp/unrar/archive.cpp"
  $14 = $13; //@line 332 "./src/cpp/unrar/archive.cpp"
  HEAP32[$14>>2] = $9; //@line 332 "./src/cpp/unrar/archive.cpp"
  $15 = (($13) + 4)|0; //@line 332 "./src/cpp/unrar/archive.cpp"
  $16 = $15; //@line 332 "./src/cpp/unrar/archive.cpp"
  HEAP32[$16>>2] = $12; //@line 332 "./src/cpp/unrar/archive.cpp"
 } else {
  $17 = (__ZN4File4TellEv($4)|0); //@line 333 "./src/cpp/unrar/archive.cpp"
  $18 = tempRet0; //@line 333 "./src/cpp/unrar/archive.cpp"
  $19 = $1; //@line 333 "./src/cpp/unrar/archive.cpp"
  $20 = $19; //@line 333 "./src/cpp/unrar/archive.cpp"
  HEAP32[$20>>2] = $17; //@line 333 "./src/cpp/unrar/archive.cpp"
  $21 = (($19) + 4)|0; //@line 333 "./src/cpp/unrar/archive.cpp"
  $22 = $21; //@line 333 "./src/cpp/unrar/archive.cpp"
  HEAP32[$22>>2] = $18; //@line 333 "./src/cpp/unrar/archive.cpp"
 }
 $23 = $1; //@line 334 "./src/cpp/unrar/archive.cpp"
 $24 = $23; //@line 334 "./src/cpp/unrar/archive.cpp"
 $25 = HEAP32[$24>>2]|0; //@line 334 "./src/cpp/unrar/archive.cpp"
 $26 = (($23) + 4)|0; //@line 334 "./src/cpp/unrar/archive.cpp"
 $27 = $26; //@line 334 "./src/cpp/unrar/archive.cpp"
 $28 = HEAP32[$27>>2]|0; //@line 334 "./src/cpp/unrar/archive.cpp"
 tempRet0 = ($28); //@line 334 "./src/cpp/unrar/archive.cpp"
 STACKTOP = sp;return ($25|0); //@line 334 "./src/cpp/unrar/archive.cpp"
}
function __ZN9QuickOpen6UnloadEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 6376|0); //@line 55 "./src/cpp/unrar/qopen.hpp"
 HEAP8[$3>>0] = 0; //@line 55 "./src/cpp/unrar/qopen.hpp"
 STACKTOP = sp;return; //@line 55 "./src/cpp/unrar/qopen.hpp"
}
function __ZN7ArchiveD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = (780); //@line 57 "./src/cpp/unrar/archive.cpp"
 $3 = ((($2)) + 14760|0); //@line 58 "./src/cpp/unrar/archive.cpp"
 $4 = HEAP8[$3>>0]|0; //@line 58 "./src/cpp/unrar/archive.cpp"
 $5 = $4&1; //@line 58 "./src/cpp/unrar/archive.cpp"
 if ($5) {
  $6 = ((($2)) + 14764|0); //@line 59 "./src/cpp/unrar/archive.cpp"
  $7 = HEAP32[$6>>2]|0; //@line 59 "./src/cpp/unrar/archive.cpp"
  $8 = ($7|0)==(0|0); //@line 59 "./src/cpp/unrar/archive.cpp"
  if (!($8)) {
   __ZN10RAROptionsD2Ev($7); //@line 59 "./src/cpp/unrar/archive.cpp"
   __ZdlPv($7); //@line 59 "./src/cpp/unrar/archive.cpp"
  }
 }
 $9 = ((($2)) + 38640|0); //@line 60 "./src/cpp/unrar/archive.cpp"
 __ZN10FileHeaderD2Ev($9); //@line 60 "./src/cpp/unrar/archive.cpp"
 $10 = ((($2)) + 21424|0); //@line 60 "./src/cpp/unrar/archive.cpp"
 __ZN10FileHeaderD2Ev($10); //@line 60 "./src/cpp/unrar/archive.cpp"
 $11 = ((($2)) + 14808|0); //@line 60 "./src/cpp/unrar/archive.cpp"
 __ZN9QuickOpenD2Ev($11); //@line 60 "./src/cpp/unrar/archive.cpp"
 $12 = ((($2)) + 14576|0); //@line 60 "./src/cpp/unrar/archive.cpp"
 __ZN11ComprDataIOD2Ev($12); //@line 60 "./src/cpp/unrar/archive.cpp"
 $13 = ((($2)) + 8220|0); //@line 60 "./src/cpp/unrar/archive.cpp"
 __ZN9CryptDataD2Ev($13); //@line 60 "./src/cpp/unrar/archive.cpp"
 __ZN4FileD2Ev($2); //@line 60 "./src/cpp/unrar/archive.cpp"
 STACKTOP = sp;return; //@line 60 "./src/cpp/unrar/archive.cpp"
}
function __ZN10FileHeaderD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8224|0); //@line 177 "./src/cpp/unrar/headers.hpp"
 __ZN5ArrayIhED2Ev($3); //@line 177 "./src/cpp/unrar/headers.hpp"
 STACKTOP = sp;return; //@line 177 "./src/cpp/unrar/headers.hpp"
}
function __ZN7Archive10GetCommentEP5ArrayIwE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val13 = 0, $$expand_i1_val3 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$expand_i1_val9 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 59360|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(59360|0);
 $2 = sp + 59346|0;
 $5 = sp + 59280|0;
 $10 = sp + 59096|0;
 $12 = sp;
 $13 = sp + 59316|0;
 $14 = sp + 59312|0;
 $15 = sp + 59296|0;
 $3 = $0;
 $4 = $1;
 $16 = $3;
 $17 = ((($16)) + 56862|0); //@line 5 "./src/cpp/unrar/arccmt.cpp"
 $18 = HEAP8[$17>>0]|0; //@line 5 "./src/cpp/unrar/arccmt.cpp"
 $19 = $18&1; //@line 5 "./src/cpp/unrar/arccmt.cpp"
 if (!($19)) {
  $$expand_i1_val = 0; //@line 6 "./src/cpp/unrar/arccmt.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 6 "./src/cpp/unrar/arccmt.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 115 "./src/cpp/unrar/arccmt.cpp"
  $303 = $$pre_trunc&1; //@line 115 "./src/cpp/unrar/arccmt.cpp"
  STACKTOP = sp;return ($303|0); //@line 115 "./src/cpp/unrar/arccmt.cpp"
 }
 __ZN11SaveFilePosC2ER4File($5,$16); //@line 7 "./src/cpp/unrar/arccmt.cpp"
 $20 = ((($16)) + 56856|0); //@line 11 "./src/cpp/unrar/arccmt.cpp"
 $21 = HEAP32[$20>>2]|0; //@line 11 "./src/cpp/unrar/arccmt.cpp"
 $22 = ($21|0)==(1); //@line 11 "./src/cpp/unrar/arccmt.cpp"
 do {
  if ($22) {
   $23 = HEAP32[$16>>2]|0; //@line 13 "./src/cpp/unrar/arccmt.cpp"
   $24 = ((($23)) + 16|0); //@line 13 "./src/cpp/unrar/arccmt.cpp"
   $25 = HEAP32[$24>>2]|0; //@line 13 "./src/cpp/unrar/arccmt.cpp"
   $26 = ((($16)) + 56872|0); //@line 13 "./src/cpp/unrar/arccmt.cpp"
   $27 = HEAP32[$26>>2]|0; //@line 13 "./src/cpp/unrar/arccmt.cpp"
   $28 = (($27) + 7)|0; //@line 13 "./src/cpp/unrar/arccmt.cpp"
   __THREW__ = 0;
   invoke_viiii($25|0,($16|0),($28|0),0,0); //@line 13 "./src/cpp/unrar/arccmt.cpp"
   $29 = __THREW__; __THREW__ = 0;
   $30 = $29&1;
   if ($30) {
    label = 8;
   } else {
    __THREW__ = 0;
    $31 = (invoke_ii(97,($16|0))|0); //@line 14 "./src/cpp/unrar/arccmt.cpp"
    $32 = __THREW__; __THREW__ = 0;
    $33 = $32&1;
    if ($33) {
     label = 8;
    } else {
     $34 = $31&255; //@line 14 "./src/cpp/unrar/arccmt.cpp"
     $6 = $34; //@line 14 "./src/cpp/unrar/arccmt.cpp"
     __THREW__ = 0;
     $35 = (invoke_ii(97,($16|0))|0); //@line 15 "./src/cpp/unrar/arccmt.cpp"
     $36 = __THREW__; __THREW__ = 0;
     $37 = $36&1;
     if ($37) {
      label = 8;
     } else {
      $38 = $35&255; //@line 15 "./src/cpp/unrar/arccmt.cpp"
      $39 = $38 << 8; //@line 15 "./src/cpp/unrar/arccmt.cpp"
      $40 = $6; //@line 15 "./src/cpp/unrar/arccmt.cpp"
      $41 = $40&65535; //@line 15 "./src/cpp/unrar/arccmt.cpp"
      $42 = (($41) + ($39))|0; //@line 15 "./src/cpp/unrar/arccmt.cpp"
      $43 = $42&65535; //@line 15 "./src/cpp/unrar/arccmt.cpp"
      $6 = $43; //@line 15 "./src/cpp/unrar/arccmt.cpp"
      label = 22;
     }
    }
   }
  } else {
   $46 = ((($16)) + 21304|0); //@line 20 "./src/cpp/unrar/arccmt.cpp"
   $47 = ((($46)) + 28|0); //@line 20 "./src/cpp/unrar/arccmt.cpp"
   $48 = HEAP8[$47>>0]|0; //@line 20 "./src/cpp/unrar/arccmt.cpp"
   $49 = $48&1; //@line 20 "./src/cpp/unrar/arccmt.cpp"
   $50 = HEAP32[$16>>2]|0;
   $51 = ((($50)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   if ($49) {
    $53 = ((($16)) + 56872|0); //@line 24 "./src/cpp/unrar/arccmt.cpp"
    $54 = HEAP32[$53>>2]|0; //@line 24 "./src/cpp/unrar/arccmt.cpp"
    $55 = (($54) + 7)|0; //@line 24 "./src/cpp/unrar/arccmt.cpp"
    $56 = (($55) + 13)|0; //@line 24 "./src/cpp/unrar/arccmt.cpp"
    __THREW__ = 0;
    invoke_viiii($52|0,($16|0),($56|0),0,0); //@line 24 "./src/cpp/unrar/arccmt.cpp"
    $57 = __THREW__; __THREW__ = 0;
    $58 = $57&1;
    if ($58) {
     label = 8;
     break;
    }
    __THREW__ = 0;
    (invoke_ii(85,($16|0))|0); //@line 25 "./src/cpp/unrar/arccmt.cpp"
    $59 = __THREW__; __THREW__ = 0;
    $60 = $59&1;
    if ($60) {
     label = 8;
     break;
    }
    $76 = ((($16)) + 56876|0); //@line 36 "./src/cpp/unrar/arccmt.cpp"
    $77 = HEAP8[$76>>0]|0; //@line 36 "./src/cpp/unrar/arccmt.cpp"
    $78 = $77&1; //@line 36 "./src/cpp/unrar/arccmt.cpp"
    if (!($78)) {
     $82 = ((($16)) + 55792|0); //@line 41 "./src/cpp/unrar/arccmt.cpp"
     $83 = ((($82)) + 12|0); //@line 41 "./src/cpp/unrar/arccmt.cpp"
     $84 = HEAP32[$83>>2]|0; //@line 41 "./src/cpp/unrar/arccmt.cpp"
     $85 = (($84) - 13)|0; //@line 41 "./src/cpp/unrar/arccmt.cpp"
     $86 = $85&65535; //@line 41 "./src/cpp/unrar/arccmt.cpp"
     $6 = $86; //@line 41 "./src/cpp/unrar/arccmt.cpp"
     label = 22;
     break;
    }
    $79 = ((($16)) + 24|0); //@line 38 "./src/cpp/unrar/arccmt.cpp"
    __THREW__ = 0;
    invoke_vii(101,57,($79|0)); //@line 38 "./src/cpp/unrar/arccmt.cpp"
    $80 = __THREW__; __THREW__ = 0;
    $81 = $80&1;
    if ($81) {
     label = 8;
     break;
    }
    $$expand_i1_val5 = 0; //@line 39 "./src/cpp/unrar/arccmt.cpp"
    HEAP8[$2>>0] = $$expand_i1_val5; //@line 39 "./src/cpp/unrar/arccmt.cpp"
    $9 = 1;
    label = 88;
    break;
   } else {
    __THREW__ = 0;
    $61 = (invoke_ii(98,($16|0))|0); //@line 30 "./src/cpp/unrar/arccmt.cpp"
    $62 = tempRet0; //@line 30 "./src/cpp/unrar/arccmt.cpp"
    $63 = __THREW__; __THREW__ = 0;
    $64 = $63&1;
    if ($64) {
     label = 8;
     break;
    }
    __THREW__ = 0;
    invoke_viiii($52|0,($16|0),($61|0),($62|0),0); //@line 30 "./src/cpp/unrar/arccmt.cpp"
    $65 = __THREW__; __THREW__ = 0;
    $66 = $65&1;
    if ($66) {
     label = 8;
     break;
    }
    __THREW__ = 0;
    $67 = (invoke_iii(99,($16|0),(804|0))|0); //@line 31 "./src/cpp/unrar/arccmt.cpp"
    $68 = __THREW__; __THREW__ = 0;
    $69 = $68&1;
    if ($69) {
     label = 8;
     break;
    }
    $70 = ($67|0)!=(0); //@line 31 "./src/cpp/unrar/arccmt.cpp"
    if ($70) {
     $71 = $4; //@line 31 "./src/cpp/unrar/arccmt.cpp"
     __THREW__ = 0;
     $72 = (invoke_iii(100,($16|0),($71|0))|0); //@line 31 "./src/cpp/unrar/arccmt.cpp"
     $73 = __THREW__; __THREW__ = 0;
     $74 = $73&1;
     if ($74) {
      label = 8;
      break;
     } else {
      $75 = $72;
     }
    } else {
     $75 = 0;
    }
    $$expand_i1_val3 = $75&1; //@line 31 "./src/cpp/unrar/arccmt.cpp"
    HEAP8[$2>>0] = $$expand_i1_val3; //@line 31 "./src/cpp/unrar/arccmt.cpp"
    $9 = 1;
    label = 88;
    break;
   }
  }
 } while(0);
 L26: do {
  if ((label|0) == 22) {
   $87 = ((($16)) + 56856|0); //@line 45 "./src/cpp/unrar/arccmt.cpp"
   $88 = HEAP32[$87>>2]|0; //@line 45 "./src/cpp/unrar/arccmt.cpp"
   $89 = ($88|0)==(1); //@line 45 "./src/cpp/unrar/arccmt.cpp"
   if ($89) {
    $90 = ((($16)) + 21304|0); //@line 45 "./src/cpp/unrar/arccmt.cpp"
    $91 = ((($90)) + 29|0); //@line 45 "./src/cpp/unrar/arccmt.cpp"
    $92 = HEAP8[$91>>0]|0; //@line 45 "./src/cpp/unrar/arccmt.cpp"
    $93 = $92&1; //@line 45 "./src/cpp/unrar/arccmt.cpp"
    if ($93) {
     label = 26;
    } else {
     label = 24;
    }
   } else {
    label = 24;
   }
   L30: do {
    if ((label|0) == 24) {
     $94 = ((($16)) + 56856|0); //@line 45 "./src/cpp/unrar/arccmt.cpp"
     $95 = HEAP32[$94>>2]|0; //@line 45 "./src/cpp/unrar/arccmt.cpp"
     $96 = ($95|0)!=(1); //@line 45 "./src/cpp/unrar/arccmt.cpp"
     if ($96) {
      $97 = ((($16)) + 55792|0); //@line 45 "./src/cpp/unrar/arccmt.cpp"
      $98 = ((($97)) + 23|0); //@line 45 "./src/cpp/unrar/arccmt.cpp"
      $99 = HEAP8[$98>>0]|0; //@line 45 "./src/cpp/unrar/arccmt.cpp"
      $100 = $99&255; //@line 45 "./src/cpp/unrar/arccmt.cpp"
      $101 = ($100|0)!=(48); //@line 45 "./src/cpp/unrar/arccmt.cpp"
      if ($101) {
       label = 26;
       break;
      }
     }
     $229 = $6; //@line 97 "./src/cpp/unrar/arccmt.cpp"
     $230 = $229&65535; //@line 97 "./src/cpp/unrar/arccmt.cpp"
     __THREW__ = 0;
     invoke_vii(118,($15|0),($230|0)); //@line 97 "./src/cpp/unrar/arccmt.cpp"
     $231 = __THREW__; __THREW__ = 0;
     $232 = $231&1;
     if ($232) {
      label = 8;
      break L26;
     }
     $233 = HEAP32[$16>>2]|0; //@line 98 "./src/cpp/unrar/arccmt.cpp"
     $234 = ((($233)) + 12|0); //@line 98 "./src/cpp/unrar/arccmt.cpp"
     $235 = HEAP32[$234>>2]|0; //@line 98 "./src/cpp/unrar/arccmt.cpp"
     __THREW__ = 0;
     $236 = (invoke_iii(94,($15|0),0)|0); //@line 98 "./src/cpp/unrar/arccmt.cpp"
     $237 = __THREW__; __THREW__ = 0;
     $238 = $237&1;
     do {
      if (!($238)) {
       $239 = $6; //@line 98 "./src/cpp/unrar/arccmt.cpp"
       $240 = $239&65535; //@line 98 "./src/cpp/unrar/arccmt.cpp"
       __THREW__ = 0;
       (invoke_iiii($235|0,($16|0),($236|0),($240|0))|0); //@line 98 "./src/cpp/unrar/arccmt.cpp"
       $241 = __THREW__; __THREW__ = 0;
       $242 = $241&1;
       if (!($242)) {
        $243 = ((($16)) + 56856|0); //@line 100 "./src/cpp/unrar/arccmt.cpp"
        $244 = HEAP32[$243>>2]|0; //@line 100 "./src/cpp/unrar/arccmt.cpp"
        $245 = ($244|0)!=(1); //@line 100 "./src/cpp/unrar/arccmt.cpp"
        if ($245) {
         $246 = ((($16)) + 55792|0); //@line 100 "./src/cpp/unrar/arccmt.cpp"
         $247 = ((($246)) + 24|0); //@line 100 "./src/cpp/unrar/arccmt.cpp"
         $248 = HEAP16[$247>>1]|0; //@line 100 "./src/cpp/unrar/arccmt.cpp"
         $249 = $248&65535; //@line 100 "./src/cpp/unrar/arccmt.cpp"
         __THREW__ = 0;
         $250 = (invoke_iii(94,($15|0),0)|0); //@line 100 "./src/cpp/unrar/arccmt.cpp"
         $251 = __THREW__; __THREW__ = 0;
         $252 = $251&1;
         if ($252) {
          break;
         }
         $253 = $6; //@line 100 "./src/cpp/unrar/arccmt.cpp"
         $254 = $253&65535; //@line 100 "./src/cpp/unrar/arccmt.cpp"
         __THREW__ = 0;
         $255 = (invoke_iiii(119,-1,($250|0),($254|0))|0); //@line 100 "./src/cpp/unrar/arccmt.cpp"
         $256 = __THREW__; __THREW__ = 0;
         $257 = $256&1;
         if ($257) {
          break;
         }
         $258 = $255 ^ -1; //@line 100 "./src/cpp/unrar/arccmt.cpp"
         $259 = $258 & 65535; //@line 100 "./src/cpp/unrar/arccmt.cpp"
         $260 = ($249|0)!=($259|0); //@line 100 "./src/cpp/unrar/arccmt.cpp"
         if ($260) {
          $261 = ((($16)) + 24|0); //@line 102 "./src/cpp/unrar/arccmt.cpp"
          __THREW__ = 0;
          invoke_vii(101,57,($261|0)); //@line 102 "./src/cpp/unrar/arccmt.cpp"
          $262 = __THREW__; __THREW__ = 0;
          $263 = $262&1;
          if ($263) {
           break;
          }
          $$expand_i1_val11 = 0; //@line 103 "./src/cpp/unrar/arccmt.cpp"
          HEAP8[$2>>0] = $$expand_i1_val11; //@line 103 "./src/cpp/unrar/arccmt.cpp"
          $9 = 1;
         } else {
          label = 76;
         }
        } else {
         label = 76;
        }
        if ((label|0) == 76) {
         $266 = $4; //@line 105 "./src/cpp/unrar/arccmt.cpp"
         $267 = $6; //@line 105 "./src/cpp/unrar/arccmt.cpp"
         $268 = $267&65535; //@line 105 "./src/cpp/unrar/arccmt.cpp"
         $269 = (($268) + 1)|0; //@line 105 "./src/cpp/unrar/arccmt.cpp"
         __THREW__ = 0;
         invoke_vii(115,($266|0),($269|0)); //@line 105 "./src/cpp/unrar/arccmt.cpp"
         $270 = __THREW__; __THREW__ = 0;
         $271 = $270&1;
         if ($271) {
          break;
         }
         __THREW__ = 0;
         invoke_vii(120,($15|0),0); //@line 106 "./src/cpp/unrar/arccmt.cpp"
         $272 = __THREW__; __THREW__ = 0;
         $273 = $272&1;
         if ($273) {
          break;
         }
         __THREW__ = 0;
         $274 = (invoke_iii(94,($15|0),0)|0); //@line 110 "./src/cpp/unrar/arccmt.cpp"
         $275 = __THREW__; __THREW__ = 0;
         $276 = $275&1;
         if ($276) {
          break;
         }
         $277 = $4; //@line 110 "./src/cpp/unrar/arccmt.cpp"
         __THREW__ = 0;
         $278 = (invoke_iii(116,($277|0),0)|0); //@line 110 "./src/cpp/unrar/arccmt.cpp"
         $279 = __THREW__; __THREW__ = 0;
         $280 = $279&1;
         if ($280) {
          break;
         }
         $281 = $6; //@line 110 "./src/cpp/unrar/arccmt.cpp"
         $282 = $281&65535; //@line 110 "./src/cpp/unrar/arccmt.cpp"
         __THREW__ = 0;
         (invoke_iiii(80,($274|0),($278|0),($282|0))|0); //@line 110 "./src/cpp/unrar/arccmt.cpp"
         $283 = __THREW__; __THREW__ = 0;
         $284 = $283&1;
         if ($284) {
          break;
         }
         $285 = $4; //@line 111 "./src/cpp/unrar/arccmt.cpp"
         $286 = $4; //@line 111 "./src/cpp/unrar/arccmt.cpp"
         __THREW__ = 0;
         $287 = (invoke_iii(116,($286|0),0)|0); //@line 111 "./src/cpp/unrar/arccmt.cpp"
         $288 = __THREW__; __THREW__ = 0;
         $289 = $288&1;
         if ($289) {
          break;
         }
         __THREW__ = 0;
         $290 = (invoke_ii(117,($287|0))|0); //@line 111 "./src/cpp/unrar/arccmt.cpp"
         $291 = __THREW__; __THREW__ = 0;
         $292 = $291&1;
         if ($292) {
          break;
         }
         __THREW__ = 0;
         invoke_vii(115,($285|0),($290|0)); //@line 111 "./src/cpp/unrar/arccmt.cpp"
         $293 = __THREW__; __THREW__ = 0;
         $294 = $293&1;
         if ($294) {
          break;
         }
         $9 = 0; //@line 112 "./src/cpp/unrar/arccmt.cpp"
        }
        __ZN5ArrayIhED2Ev($15); //@line 112 "./src/cpp/unrar/arccmt.cpp"
        $295 = $9;
        $cond = ($295|0)==(0);
        if ($cond) {
         break L30;
        } else {
         label = 88;
         break L26;
        }
       }
      }
     } while(0);
     $264 = ___cxa_find_matching_catch_2()|0;
     $265 = tempRet0;
     $7 = $264; //@line 115 "./src/cpp/unrar/arccmt.cpp"
     $8 = $265; //@line 115 "./src/cpp/unrar/arccmt.cpp"
     __ZN5ArrayIhED2Ev($15); //@line 112 "./src/cpp/unrar/arccmt.cpp"
     __ZN11SaveFilePosD2Ev($5); //@line 115 "./src/cpp/unrar/arccmt.cpp"
     $301 = $7; //@line 115 "./src/cpp/unrar/arccmt.cpp"
     $302 = $8; //@line 115 "./src/cpp/unrar/arccmt.cpp"
     ___resumeException($301|0);
     // unreachable;
    }
   } while(0);
   L58: do {
    if ((label|0) == 26) {
     $102 = ((($16)) + 56856|0); //@line 47 "./src/cpp/unrar/arccmt.cpp"
     $103 = HEAP32[$102>>2]|0; //@line 47 "./src/cpp/unrar/arccmt.cpp"
     $104 = ($103|0)!=(1); //@line 47 "./src/cpp/unrar/arccmt.cpp"
     do {
      if ($104) {
       $105 = ((($16)) + 55792|0); //@line 47 "./src/cpp/unrar/arccmt.cpp"
       $106 = ((($105)) + 22|0); //@line 47 "./src/cpp/unrar/arccmt.cpp"
       $107 = HEAP8[$106>>0]|0; //@line 47 "./src/cpp/unrar/arccmt.cpp"
       $108 = $107&255; //@line 47 "./src/cpp/unrar/arccmt.cpp"
       $109 = ($108|0)<(15); //@line 47 "./src/cpp/unrar/arccmt.cpp"
       if (!($109)) {
        $110 = ((($16)) + 55792|0); //@line 47 "./src/cpp/unrar/arccmt.cpp"
        $111 = ((($110)) + 22|0); //@line 47 "./src/cpp/unrar/arccmt.cpp"
        $112 = HEAP8[$111>>0]|0; //@line 47 "./src/cpp/unrar/arccmt.cpp"
        $113 = $112&255; //@line 47 "./src/cpp/unrar/arccmt.cpp"
        $114 = ($113|0)>(29); //@line 47 "./src/cpp/unrar/arccmt.cpp"
        if (!($114)) {
         $115 = ((($16)) + 55792|0); //@line 47 "./src/cpp/unrar/arccmt.cpp"
         $116 = ((($115)) + 23|0); //@line 47 "./src/cpp/unrar/arccmt.cpp"
         $117 = HEAP8[$116>>0]|0; //@line 47 "./src/cpp/unrar/arccmt.cpp"
         $118 = $117&255; //@line 47 "./src/cpp/unrar/arccmt.cpp"
         $119 = ($118|0)>(53); //@line 47 "./src/cpp/unrar/arccmt.cpp"
         if (!($119)) {
          break;
         }
        }
       }
       $$expand_i1_val7 = 0; //@line 48 "./src/cpp/unrar/arccmt.cpp"
       HEAP8[$2>>0] = $$expand_i1_val7; //@line 48 "./src/cpp/unrar/arccmt.cpp"
       $9 = 1;
       label = 88;
       break L26;
      }
     } while(0);
     __THREW__ = 0;
     invoke_vi(102,($10|0)); //@line 49 "./src/cpp/unrar/arccmt.cpp"
     $120 = __THREW__; __THREW__ = 0;
     $121 = $120&1;
     if ($121) {
      label = 8;
      break L26;
     }
     __THREW__ = 0;
     invoke_vii(103,($10|0),1); //@line 50 "./src/cpp/unrar/arccmt.cpp"
     $122 = __THREW__; __THREW__ = 0;
     $123 = $122&1;
     do {
      if ($123) {
       label = 38;
      } else {
       $124 = ((($16)) + 56856|0); //@line 52 "./src/cpp/unrar/arccmt.cpp"
       $125 = HEAP32[$124>>2]|0; //@line 52 "./src/cpp/unrar/arccmt.cpp"
       $126 = ($125|0)==(1); //@line 52 "./src/cpp/unrar/arccmt.cpp"
       if ($126) {
        __THREW__ = 0;
        $127 = (invoke_ii(97,($16|0))|0); //@line 57 "./src/cpp/unrar/arccmt.cpp"
        $128 = __THREW__; __THREW__ = 0;
        $129 = $128&1;
        if ($129) {
         label = 38;
         break;
        }
        $130 = $127&255; //@line 57 "./src/cpp/unrar/arccmt.cpp"
        $11 = $130; //@line 57 "./src/cpp/unrar/arccmt.cpp"
        __THREW__ = 0;
        $131 = (invoke_ii(97,($16|0))|0); //@line 58 "./src/cpp/unrar/arccmt.cpp"
        $132 = __THREW__; __THREW__ = 0;
        $133 = $132&1;
        if ($133) {
         label = 38;
         break;
        }
        $134 = $131&255; //@line 58 "./src/cpp/unrar/arccmt.cpp"
        $135 = $134 << 8; //@line 58 "./src/cpp/unrar/arccmt.cpp"
        $136 = $11; //@line 58 "./src/cpp/unrar/arccmt.cpp"
        $137 = (($136) + ($135))|0; //@line 58 "./src/cpp/unrar/arccmt.cpp"
        $11 = $137; //@line 58 "./src/cpp/unrar/arccmt.cpp"
        $138 = $6; //@line 59 "./src/cpp/unrar/arccmt.cpp"
        $139 = $138&65535; //@line 59 "./src/cpp/unrar/arccmt.cpp"
        $140 = (($139) - 2)|0; //@line 59 "./src/cpp/unrar/arccmt.cpp"
        $141 = $140&65535; //@line 59 "./src/cpp/unrar/arccmt.cpp"
        $6 = $141; //@line 59 "./src/cpp/unrar/arccmt.cpp"
        __THREW__ = 0;
        invoke_vi(104,($10|0)); //@line 60 "./src/cpp/unrar/arccmt.cpp"
        $142 = __THREW__; __THREW__ = 0;
        $143 = $142&1;
        if ($143) {
         label = 38;
         break;
        }
        $144 = ((($16)) + 55792|0); //@line 61 "./src/cpp/unrar/arccmt.cpp"
        $145 = ((($144)) + 22|0); //@line 61 "./src/cpp/unrar/arccmt.cpp"
        HEAP8[$145>>0] = 15; //@line 61 "./src/cpp/unrar/arccmt.cpp"
       } else {
        $148 = ((($16)) + 55792|0); //@line 65 "./src/cpp/unrar/arccmt.cpp"
        $149 = ((($148)) + 20|0); //@line 65 "./src/cpp/unrar/arccmt.cpp"
        $150 = HEAP16[$149>>1]|0; //@line 65 "./src/cpp/unrar/arccmt.cpp"
        $151 = $150&65535; //@line 65 "./src/cpp/unrar/arccmt.cpp"
        $11 = $151; //@line 65 "./src/cpp/unrar/arccmt.cpp"
       }
       __THREW__ = 0;
       invoke_viii(105,($10|0),($16|0),(0|0)); //@line 66 "./src/cpp/unrar/arccmt.cpp"
       $152 = __THREW__; __THREW__ = 0;
       $153 = $152&1;
       if ($153) {
        label = 38;
       } else {
        __THREW__ = 0;
        invoke_vii(106,($10|0),0); //@line 67 "./src/cpp/unrar/arccmt.cpp"
        $154 = __THREW__; __THREW__ = 0;
        $155 = $154&1;
        if ($155) {
         label = 38;
        } else {
         $156 = $6; //@line 68 "./src/cpp/unrar/arccmt.cpp"
         $157 = $156&65535; //@line 68 "./src/cpp/unrar/arccmt.cpp"
         __THREW__ = 0;
         invoke_viii(107,($10|0),($157|0),0); //@line 68 "./src/cpp/unrar/arccmt.cpp"
         $158 = __THREW__; __THREW__ = 0;
         $159 = $158&1;
         if ($159) {
          label = 38;
         } else {
          $160 = ((($10)) + 168|0); //@line 69 "./src/cpp/unrar/arccmt.cpp"
          __THREW__ = 0;
          invoke_viii(108,($160|0),2,1); //@line 69 "./src/cpp/unrar/arccmt.cpp"
          $161 = __THREW__; __THREW__ = 0;
          $162 = $161&1;
          if ($162) {
           label = 38;
          } else {
           __THREW__ = 0;
           invoke_vii(109,($12|0),($10|0)); //@line 71 "./src/cpp/unrar/arccmt.cpp"
           $163 = __THREW__; __THREW__ = 0;
           $164 = $163&1;
           if ($164) {
            label = 38;
           } else {
            __THREW__ = 0;
            invoke_viii(110,($12|0),65536,0); //@line 72 "./src/cpp/unrar/arccmt.cpp"
            $165 = __THREW__; __THREW__ = 0;
            $166 = $165&1;
            L82: do {
             if (!($166)) {
              $167 = $11; //@line 73 "./src/cpp/unrar/arccmt.cpp"
              __THREW__ = 0;
              invoke_viii(111,($12|0),($167|0),0); //@line 73 "./src/cpp/unrar/arccmt.cpp"
              $168 = __THREW__; __THREW__ = 0;
              $169 = $168&1;
              if (!($169)) {
               $170 = ((($16)) + 55792|0); //@line 74 "./src/cpp/unrar/arccmt.cpp"
               $171 = ((($170)) + 22|0); //@line 74 "./src/cpp/unrar/arccmt.cpp"
               $172 = HEAP8[$171>>0]|0; //@line 74 "./src/cpp/unrar/arccmt.cpp"
               $173 = $172&255; //@line 74 "./src/cpp/unrar/arccmt.cpp"
               __THREW__ = 0;
               invoke_viii(112,($12|0),($173|0),0); //@line 74 "./src/cpp/unrar/arccmt.cpp"
               $174 = __THREW__; __THREW__ = 0;
               $175 = $174&1;
               if (!($175)) {
                $176 = ((($16)) + 56856|0); //@line 76 "./src/cpp/unrar/arccmt.cpp"
                $177 = HEAP32[$176>>2]|0; //@line 76 "./src/cpp/unrar/arccmt.cpp"
                $178 = ($177|0)!=(1); //@line 76 "./src/cpp/unrar/arccmt.cpp"
                do {
                 if ($178) {
                  $179 = ((($10)) + 168|0); //@line 76 "./src/cpp/unrar/arccmt.cpp"
                  __THREW__ = 0;
                  $180 = (invoke_ii(113,($179|0))|0); //@line 76 "./src/cpp/unrar/arccmt.cpp"
                  $181 = __THREW__; __THREW__ = 0;
                  $182 = $181&1;
                  if ($182) {
                   break L82;
                  }
                  $183 = $180 & 65535; //@line 76 "./src/cpp/unrar/arccmt.cpp"
                  $184 = ((($16)) + 55792|0); //@line 76 "./src/cpp/unrar/arccmt.cpp"
                  $185 = ((($184)) + 24|0); //@line 76 "./src/cpp/unrar/arccmt.cpp"
                  $186 = HEAP16[$185>>1]|0; //@line 76 "./src/cpp/unrar/arccmt.cpp"
                  $187 = $186&65535; //@line 76 "./src/cpp/unrar/arccmt.cpp"
                  $188 = ($183|0)!=($187|0); //@line 76 "./src/cpp/unrar/arccmt.cpp"
                  if (!($188)) {
                   label = 54;
                   break;
                  }
                  $189 = ((($16)) + 24|0); //@line 78 "./src/cpp/unrar/arccmt.cpp"
                  __THREW__ = 0;
                  invoke_vii(101,57,($189|0)); //@line 78 "./src/cpp/unrar/arccmt.cpp"
                  $190 = __THREW__; __THREW__ = 0;
                  $191 = $190&1;
                  if ($191) {
                   break L82;
                  }
                  $$expand_i1_val9 = 0; //@line 79 "./src/cpp/unrar/arccmt.cpp"
                  HEAP8[$2>>0] = $$expand_i1_val9; //@line 79 "./src/cpp/unrar/arccmt.cpp"
                  $9 = 1;
                 } else {
                  label = 54;
                 }
                } while(0);
                if ((label|0) == 54) {
                 __THREW__ = 0;
                 invoke_viii(114,($10|0),($13|0),($14|0)); //@line 85 "./src/cpp/unrar/arccmt.cpp"
                 $194 = __THREW__; __THREW__ = 0;
                 $195 = $194&1;
                 if ($195) {
                  break;
                 }
                 $196 = $4; //@line 89 "./src/cpp/unrar/arccmt.cpp"
                 $197 = HEAP32[$14>>2]|0; //@line 89 "./src/cpp/unrar/arccmt.cpp"
                 $198 = (($197) + 1)|0; //@line 89 "./src/cpp/unrar/arccmt.cpp"
                 __THREW__ = 0;
                 invoke_vii(115,($196|0),($198|0)); //@line 89 "./src/cpp/unrar/arccmt.cpp"
                 $199 = __THREW__; __THREW__ = 0;
                 $200 = $199&1;
                 if ($200) {
                  break;
                 }
                 $201 = $4; //@line 90 "./src/cpp/unrar/arccmt.cpp"
                 __THREW__ = 0;
                 $202 = (invoke_iii(116,($201|0),0)|0); //@line 90 "./src/cpp/unrar/arccmt.cpp"
                 $203 = __THREW__; __THREW__ = 0;
                 $204 = $203&1;
                 if ($204) {
                  break;
                 }
                 $205 = $4; //@line 90 "./src/cpp/unrar/arccmt.cpp"
                 __THREW__ = 0;
                 $206 = (invoke_ii(60,($205|0))|0); //@line 90 "./src/cpp/unrar/arccmt.cpp"
                 $207 = __THREW__; __THREW__ = 0;
                 $208 = $207&1;
                 if ($208) {
                  break;
                 }
                 $209 = $206<<2; //@line 90 "./src/cpp/unrar/arccmt.cpp"
                 _memset(($202|0),0,($209|0))|0; //@line 90 "./src/cpp/unrar/arccmt.cpp"
                 $210 = HEAP32[$13>>2]|0; //@line 91 "./src/cpp/unrar/arccmt.cpp"
                 $211 = $4; //@line 91 "./src/cpp/unrar/arccmt.cpp"
                 __THREW__ = 0;
                 $212 = (invoke_iii(116,($211|0),0)|0); //@line 91 "./src/cpp/unrar/arccmt.cpp"
                 $213 = __THREW__; __THREW__ = 0;
                 $214 = $213&1;
                 if ($214) {
                  break;
                 }
                 $215 = HEAP32[$14>>2]|0; //@line 91 "./src/cpp/unrar/arccmt.cpp"
                 __THREW__ = 0;
                 (invoke_iiii(80,($210|0),($212|0),($215|0))|0); //@line 91 "./src/cpp/unrar/arccmt.cpp"
                 $216 = __THREW__; __THREW__ = 0;
                 $217 = $216&1;
                 if ($217) {
                  break;
                 }
                 $218 = $4; //@line 92 "./src/cpp/unrar/arccmt.cpp"
                 $219 = $4; //@line 92 "./src/cpp/unrar/arccmt.cpp"
                 __THREW__ = 0;
                 $220 = (invoke_iii(116,($219|0),0)|0); //@line 92 "./src/cpp/unrar/arccmt.cpp"
                 $221 = __THREW__; __THREW__ = 0;
                 $222 = $221&1;
                 if ($222) {
                  break;
                 }
                 __THREW__ = 0;
                 $223 = (invoke_ii(117,($220|0))|0); //@line 92 "./src/cpp/unrar/arccmt.cpp"
                 $224 = __THREW__; __THREW__ = 0;
                 $225 = $224&1;
                 if ($225) {
                  break;
                 }
                 __THREW__ = 0;
                 invoke_vii(115,($218|0),($223|0)); //@line 92 "./src/cpp/unrar/arccmt.cpp"
                 $226 = __THREW__; __THREW__ = 0;
                 $227 = $226&1;
                 if ($227) {
                  break;
                 }
                 $9 = 0; //@line 94 "./src/cpp/unrar/arccmt.cpp"
                }
                __ZN6UnpackD2Ev($12); //@line 94 "./src/cpp/unrar/arccmt.cpp"
                __ZN11ComprDataIOD2Ev($10); //@line 94 "./src/cpp/unrar/arccmt.cpp"
                $228 = $9;
                $cond1 = ($228|0)==(0);
                if ($cond1) {
                 break L58;
                } else {
                 label = 88;
                 break L26;
                }
               }
              }
             }
            } while(0);
            $192 = ___cxa_find_matching_catch_2()|0;
            $193 = tempRet0;
            $7 = $192; //@line 115 "./src/cpp/unrar/arccmt.cpp"
            $8 = $193; //@line 115 "./src/cpp/unrar/arccmt.cpp"
            __ZN6UnpackD2Ev($12); //@line 94 "./src/cpp/unrar/arccmt.cpp"
           }
          }
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 38) {
      $146 = ___cxa_find_matching_catch_2()|0;
      $147 = tempRet0;
      $7 = $146; //@line 115 "./src/cpp/unrar/arccmt.cpp"
      $8 = $147; //@line 115 "./src/cpp/unrar/arccmt.cpp"
     }
     __ZN11ComprDataIOD2Ev($10); //@line 94 "./src/cpp/unrar/arccmt.cpp"
     __ZN11SaveFilePosD2Ev($5); //@line 115 "./src/cpp/unrar/arccmt.cpp"
     $301 = $7; //@line 115 "./src/cpp/unrar/arccmt.cpp"
     $302 = $8; //@line 115 "./src/cpp/unrar/arccmt.cpp"
     ___resumeException($301|0);
     // unreachable;
    }
   } while(0);
   $296 = $4; //@line 114 "./src/cpp/unrar/arccmt.cpp"
   __THREW__ = 0;
   $297 = (invoke_ii(60,($296|0))|0); //@line 114 "./src/cpp/unrar/arccmt.cpp"
   $298 = __THREW__; __THREW__ = 0;
   $299 = $298&1;
   if ($299) {
    label = 8;
   } else {
    $300 = ($297>>>0)>(0); //@line 114 "./src/cpp/unrar/arccmt.cpp"
    $$expand_i1_val13 = $300&1; //@line 114 "./src/cpp/unrar/arccmt.cpp"
    HEAP8[$2>>0] = $$expand_i1_val13; //@line 114 "./src/cpp/unrar/arccmt.cpp"
    $9 = 1;
    label = 88;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $44 = ___cxa_find_matching_catch_2()|0;
  $45 = tempRet0;
  $7 = $44; //@line 115 "./src/cpp/unrar/arccmt.cpp"
  $8 = $45; //@line 115 "./src/cpp/unrar/arccmt.cpp"
  __ZN11SaveFilePosD2Ev($5); //@line 115 "./src/cpp/unrar/arccmt.cpp"
  $301 = $7; //@line 115 "./src/cpp/unrar/arccmt.cpp"
  $302 = $8; //@line 115 "./src/cpp/unrar/arccmt.cpp"
  ___resumeException($301|0);
  // unreachable;
 }
 else if ((label|0) == 88) {
  __ZN11SaveFilePosD2Ev($5); //@line 115 "./src/cpp/unrar/arccmt.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 115 "./src/cpp/unrar/arccmt.cpp"
  $303 = $$pre_trunc&1; //@line 115 "./src/cpp/unrar/arccmt.cpp"
  STACKTOP = sp;return ($303|0); //@line 115 "./src/cpp/unrar/arccmt.cpp"
 }
 return (0)|0;
}
function __ZN7Archive15ReadCommentDataEP5ArrayIwE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 40|0;
 $5 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $10 = $3;
 __ZN5ArrayIhEC2Ev($5); //@line 120 "./src/cpp/unrar/arccmt.cpp"
 __THREW__ = 0;
 $11 = (invoke_iiii(121,($10|0),($5|0),(0|0))|0); //@line 121 "./src/cpp/unrar/arccmt.cpp"
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 L1: do {
  if (!($13)) {
   if (!($11)) {
    $$expand_i1_val = 0; //@line 122 "./src/cpp/unrar/arccmt.cpp"
    HEAP8[$2>>0] = $$expand_i1_val; //@line 122 "./src/cpp/unrar/arccmt.cpp"
    $8 = 1;
    __ZN5ArrayIhED2Ev($5); //@line 141 "./src/cpp/unrar/arccmt.cpp"
    $$pre_trunc = HEAP8[$2>>0]|0; //@line 141 "./src/cpp/unrar/arccmt.cpp"
    $89 = $$pre_trunc&1; //@line 141 "./src/cpp/unrar/arccmt.cpp"
    STACKTOP = sp;return ($89|0); //@line 141 "./src/cpp/unrar/arccmt.cpp"
   }
   __THREW__ = 0;
   $18 = (invoke_ii(122,($5|0))|0); //@line 123 "./src/cpp/unrar/arccmt.cpp"
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if (!($20)) {
    $9 = $18; //@line 123 "./src/cpp/unrar/arccmt.cpp"
    __THREW__ = 0;
    invoke_vii(120,($5|0),0); //@line 124 "./src/cpp/unrar/arccmt.cpp"
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     $23 = $4; //@line 125 "./src/cpp/unrar/arccmt.cpp"
     $24 = $9; //@line 125 "./src/cpp/unrar/arccmt.cpp"
     $25 = (($24) + 1)|0; //@line 125 "./src/cpp/unrar/arccmt.cpp"
     __THREW__ = 0;
     invoke_vii(115,($23|0),($25|0)); //@line 125 "./src/cpp/unrar/arccmt.cpp"
     $26 = __THREW__; __THREW__ = 0;
     $27 = $26&1;
     if (!($27)) {
      $28 = ((($10)) + 56856|0); //@line 126 "./src/cpp/unrar/arccmt.cpp"
      $29 = HEAP32[$28>>2]|0; //@line 126 "./src/cpp/unrar/arccmt.cpp"
      $30 = ($29|0)==(3); //@line 126 "./src/cpp/unrar/arccmt.cpp"
      do {
       if ($30) {
        __THREW__ = 0;
        $31 = (invoke_iii(94,($5|0),0)|0); //@line 127 "./src/cpp/unrar/arccmt.cpp"
        $32 = __THREW__; __THREW__ = 0;
        $33 = $32&1;
        if ($33) {
         break L1;
        }
        $34 = $4; //@line 127 "./src/cpp/unrar/arccmt.cpp"
        __THREW__ = 0;
        $35 = (invoke_iii(116,($34|0),0)|0); //@line 127 "./src/cpp/unrar/arccmt.cpp"
        $36 = __THREW__; __THREW__ = 0;
        $37 = $36&1;
        if ($37) {
         break L1;
        }
        $38 = $4; //@line 127 "./src/cpp/unrar/arccmt.cpp"
        __THREW__ = 0;
        $39 = (invoke_ii(60,($38|0))|0); //@line 127 "./src/cpp/unrar/arccmt.cpp"
        $40 = __THREW__; __THREW__ = 0;
        $41 = $40&1;
        if ($41) {
         break L1;
        }
        __THREW__ = 0;
        (invoke_iiii(123,($31|0),($35|0),($39|0))|0); //@line 127 "./src/cpp/unrar/arccmt.cpp"
        $42 = __THREW__; __THREW__ = 0;
        $43 = $42&1;
        if ($43) {
         break L1;
        }
       } else {
        $44 = ((($10)) + 38640|0); //@line 129 "./src/cpp/unrar/arccmt.cpp"
        $45 = ((($44)) + 28|0); //@line 129 "./src/cpp/unrar/arccmt.cpp"
        $46 = HEAP32[$45>>2]|0; //@line 129 "./src/cpp/unrar/arccmt.cpp"
        $47 = $46 & 1; //@line 129 "./src/cpp/unrar/arccmt.cpp"
        $48 = ($47|0)!=(0); //@line 129 "./src/cpp/unrar/arccmt.cpp"
        if (!($48)) {
         __THREW__ = 0;
         $66 = (invoke_iii(94,($5|0),0)|0); //@line 137 "./src/cpp/unrar/arccmt.cpp"
         $67 = __THREW__; __THREW__ = 0;
         $68 = $67&1;
         if ($68) {
          break L1;
         }
         $69 = $4; //@line 137 "./src/cpp/unrar/arccmt.cpp"
         __THREW__ = 0;
         $70 = (invoke_iii(116,($69|0),0)|0); //@line 137 "./src/cpp/unrar/arccmt.cpp"
         $71 = __THREW__; __THREW__ = 0;
         $72 = $71&1;
         if ($72) {
          break L1;
         }
         $73 = $4; //@line 137 "./src/cpp/unrar/arccmt.cpp"
         __THREW__ = 0;
         $74 = (invoke_ii(60,($73|0))|0); //@line 137 "./src/cpp/unrar/arccmt.cpp"
         $75 = __THREW__; __THREW__ = 0;
         $76 = $75&1;
         if ($76) {
          break L1;
         }
         __THREW__ = 0;
         (invoke_iiii(80,($66|0),($70|0),($74|0))|0); //@line 137 "./src/cpp/unrar/arccmt.cpp"
         $77 = __THREW__; __THREW__ = 0;
         $78 = $77&1;
         if ($78) {
          break L1;
         } else {
          break;
         }
        }
        __THREW__ = 0;
        $49 = (invoke_iii(94,($5|0),0)|0); //@line 131 "./src/cpp/unrar/arccmt.cpp"
        $50 = __THREW__; __THREW__ = 0;
        $51 = $50&1;
        if ($51) {
         break L1;
        }
        $52 = $4; //@line 131 "./src/cpp/unrar/arccmt.cpp"
        __THREW__ = 0;
        $53 = (invoke_iii(116,($52|0),0)|0); //@line 131 "./src/cpp/unrar/arccmt.cpp"
        $54 = __THREW__; __THREW__ = 0;
        $55 = $54&1;
        if ($55) {
         break L1;
        }
        $56 = $9; //@line 131 "./src/cpp/unrar/arccmt.cpp"
        $57 = (($56>>>0) / 2)&-1; //@line 131 "./src/cpp/unrar/arccmt.cpp"
        __THREW__ = 0;
        (invoke_iiii(124,($49|0),($53|0),($57|0))|0); //@line 131 "./src/cpp/unrar/arccmt.cpp"
        $58 = __THREW__; __THREW__ = 0;
        $59 = $58&1;
        if ($59) {
         break L1;
        }
        $60 = $4; //@line 132 "./src/cpp/unrar/arccmt.cpp"
        $61 = $9; //@line 132 "./src/cpp/unrar/arccmt.cpp"
        $62 = (($61>>>0) / 2)&-1; //@line 132 "./src/cpp/unrar/arccmt.cpp"
        __THREW__ = 0;
        $63 = (invoke_iii(64,($60|0),($62|0))|0); //@line 132 "./src/cpp/unrar/arccmt.cpp"
        $64 = __THREW__; __THREW__ = 0;
        $65 = $64&1;
        if ($65) {
         break L1;
        }
        HEAP32[$63>>2] = 0; //@line 132 "./src/cpp/unrar/arccmt.cpp"
       }
      } while(0);
      $79 = $4; //@line 139 "./src/cpp/unrar/arccmt.cpp"
      $80 = $4; //@line 139 "./src/cpp/unrar/arccmt.cpp"
      __THREW__ = 0;
      $81 = (invoke_iii(116,($80|0),0)|0); //@line 139 "./src/cpp/unrar/arccmt.cpp"
      $82 = __THREW__; __THREW__ = 0;
      $83 = $82&1;
      if (!($83)) {
       __THREW__ = 0;
       $84 = (invoke_ii(117,($81|0))|0); //@line 139 "./src/cpp/unrar/arccmt.cpp"
       $85 = __THREW__; __THREW__ = 0;
       $86 = $85&1;
       if (!($86)) {
        __THREW__ = 0;
        invoke_vii(115,($79|0),($84|0)); //@line 139 "./src/cpp/unrar/arccmt.cpp"
        $87 = __THREW__; __THREW__ = 0;
        $88 = $87&1;
        if (!($88)) {
         $$expand_i1_val2 = 1; //@line 140 "./src/cpp/unrar/arccmt.cpp"
         HEAP8[$2>>0] = $$expand_i1_val2; //@line 140 "./src/cpp/unrar/arccmt.cpp"
         $8 = 1;
         __ZN5ArrayIhED2Ev($5); //@line 141 "./src/cpp/unrar/arccmt.cpp"
         $$pre_trunc = HEAP8[$2>>0]|0; //@line 141 "./src/cpp/unrar/arccmt.cpp"
         $89 = $$pre_trunc&1; //@line 141 "./src/cpp/unrar/arccmt.cpp"
         STACKTOP = sp;return ($89|0); //@line 141 "./src/cpp/unrar/arccmt.cpp"
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $6 = $14; //@line 141 "./src/cpp/unrar/arccmt.cpp"
 $7 = $15; //@line 141 "./src/cpp/unrar/arccmt.cpp"
 __ZN5ArrayIhED2Ev($5); //@line 141 "./src/cpp/unrar/arccmt.cpp"
 $16 = $6; //@line 141 "./src/cpp/unrar/arccmt.cpp"
 $17 = $7; //@line 141 "./src/cpp/unrar/arccmt.cpp"
 ___resumeException($16|0);
 // unreachable;
 return (0)|0;
}
function __Z5uiMsgIPwEv14UIMESSAGE_CODET_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 143 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStoreC2E14UIMESSAGE_CODE($4,$5); //@line 143 "./src/cpp/unrar/ui.hpp"
 $6 = $3; //@line 144 "./src/cpp/unrar/ui.hpp"
 (__ZN10uiMsgStorelsEPKw($4,$6)|0); //@line 144 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStore3MsgEv($4); //@line 145 "./src/cpp/unrar/ui.hpp"
 STACKTOP = sp;return; //@line 146 "./src/cpp/unrar/ui.hpp"
}
function __ZN11ComprDataIO11SetTestModeEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $1&1;
 $3 = $4;
 $5 = $2;
 $6 = $3; //@line 59 "./src/cpp/unrar/rdwrfn.hpp"
 $7 = $6&1; //@line 59 "./src/cpp/unrar/rdwrfn.hpp"
 $8 = ((($5)) + 41|0); //@line 59 "./src/cpp/unrar/rdwrfn.hpp"
 $9 = $7&1; //@line 59 "./src/cpp/unrar/rdwrfn.hpp"
 HEAP8[$8>>0] = $9; //@line 59 "./src/cpp/unrar/rdwrfn.hpp"
 STACKTOP = sp;return; //@line 59 "./src/cpp/unrar/rdwrfn.hpp"
}
function __ZN11ComprDataIO18EnableShowProgressEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $1&1;
 $3 = $4;
 $5 = $2;
 $6 = $3; //@line 56 "./src/cpp/unrar/rdwrfn.hpp"
 $7 = $6&1; //@line 56 "./src/cpp/unrar/rdwrfn.hpp"
 $8 = ((($5)) + 40|0); //@line 56 "./src/cpp/unrar/rdwrfn.hpp"
 $9 = $7&1; //@line 56 "./src/cpp/unrar/rdwrfn.hpp"
 HEAP8[$8>>0] = $9; //@line 56 "./src/cpp/unrar/rdwrfn.hpp"
 STACKTOP = sp;return; //@line 56 "./src/cpp/unrar/rdwrfn.hpp"
}
function __ZN11ComprDataIO19SetPackedSizeToReadEx($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $3 = $0;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $1;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $2;
 $9 = $3;
 $10 = $4; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 $11 = $10; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 $12 = HEAP32[$11>>2]|0; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 $13 = (($10) + 4)|0; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 $14 = $13; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 $15 = HEAP32[$14>>2]|0; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 $16 = ((($9)) + 32|0); //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 $17 = $16; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 $18 = $17; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 HEAP32[$18>>2] = $12; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 $19 = (($17) + 4)|0; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 $20 = $19; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 HEAP32[$20>>2] = $15; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
 STACKTOP = sp;return; //@line 58 "./src/cpp/unrar/rdwrfn.hpp"
}
function __ZN6Unpack11SetDestSizeEx($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $3 = $0;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $1;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $2;
 $9 = $3;
 $10 = $4; //@line 364 "./src/cpp/unrar/unpack.hpp"
 $11 = $10; //@line 364 "./src/cpp/unrar/unpack.hpp"
 $12 = HEAP32[$11>>2]|0; //@line 364 "./src/cpp/unrar/unpack.hpp"
 $13 = (($10) + 4)|0; //@line 364 "./src/cpp/unrar/unpack.hpp"
 $14 = $13; //@line 364 "./src/cpp/unrar/unpack.hpp"
 $15 = HEAP32[$14>>2]|0; //@line 364 "./src/cpp/unrar/unpack.hpp"
 $16 = ((($9)) + 19504|0); //@line 364 "./src/cpp/unrar/unpack.hpp"
 $17 = $16; //@line 364 "./src/cpp/unrar/unpack.hpp"
 $18 = $17; //@line 364 "./src/cpp/unrar/unpack.hpp"
 HEAP32[$18>>2] = $12; //@line 364 "./src/cpp/unrar/unpack.hpp"
 $19 = (($17) + 4)|0; //@line 364 "./src/cpp/unrar/unpack.hpp"
 $20 = $19; //@line 364 "./src/cpp/unrar/unpack.hpp"
 HEAP32[$20>>2] = $15; //@line 364 "./src/cpp/unrar/unpack.hpp"
 $21 = ((($9)) + 19528|0); //@line 364 "./src/cpp/unrar/unpack.hpp"
 HEAP8[$21>>0] = 0; //@line 364 "./src/cpp/unrar/unpack.hpp"
 STACKTOP = sp;return; //@line 364 "./src/cpp/unrar/unpack.hpp"
}
function __ZN5ArrayIwE5AllocEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 115 "./src/cpp/unrar/array.hpp"
 $6 = ((($4)) + 8|0); //@line 115 "./src/cpp/unrar/array.hpp"
 $7 = HEAP32[$6>>2]|0; //@line 115 "./src/cpp/unrar/array.hpp"
 $8 = ($5>>>0)>($7>>>0); //@line 115 "./src/cpp/unrar/array.hpp"
 $9 = $3;
 $10 = ((($4)) + 4|0);
 if ($8) {
  $11 = HEAP32[$10>>2]|0; //@line 116 "./src/cpp/unrar/array.hpp"
  $12 = (($9) - ($11))|0; //@line 116 "./src/cpp/unrar/array.hpp"
  __ZN5ArrayIwE3AddEj($4,$12); //@line 116 "./src/cpp/unrar/array.hpp"
  STACKTOP = sp;return; //@line 119 "./src/cpp/unrar/array.hpp"
 } else {
  HEAP32[$10>>2] = $9; //@line 118 "./src/cpp/unrar/array.hpp"
  STACKTOP = sp;return; //@line 119 "./src/cpp/unrar/array.hpp"
 }
}
function __ZN5ArrayIwE4AddrEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 29 "./src/cpp/unrar/array.hpp"
 $6 = $3; //@line 29 "./src/cpp/unrar/array.hpp"
 $7 = (($5) + ($6<<2)|0); //@line 29 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($7|0); //@line 29 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIhEC2Ej($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5ArrayIhE9CleanDataEv($4); //@line 50 "./src/cpp/unrar/array.hpp"
 $5 = $3; //@line 51 "./src/cpp/unrar/array.hpp"
 __ZN5ArrayIhE3AddEj($4,$5); //@line 51 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 52 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIhE4PushEh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5ArrayIhE3AddEj($4,1); //@line 153 "./src/cpp/unrar/array.hpp"
 $5 = $3; //@line 154 "./src/cpp/unrar/array.hpp"
 $6 = (__ZN5ArrayIhE4SizeEv($4)|0); //@line 154 "./src/cpp/unrar/array.hpp"
 $7 = (($6) - 1)|0; //@line 154 "./src/cpp/unrar/array.hpp"
 $8 = (__ZNK5ArrayIhEixEj($4,$7)|0); //@line 154 "./src/cpp/unrar/array.hpp"
 HEAP8[$8>>0] = $5; //@line 154 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 155 "./src/cpp/unrar/array.hpp"
}
function __ZN10uiMsgStoreC2E14UIMESSAGE_CODE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 64|0); //@line 112 "./src/cpp/unrar/ui.hpp"
 HEAP32[$5>>2] = 0; //@line 112 "./src/cpp/unrar/ui.hpp"
 $6 = ((($4)) + 68|0); //@line 112 "./src/cpp/unrar/ui.hpp"
 HEAP32[$6>>2] = 0; //@line 112 "./src/cpp/unrar/ui.hpp"
 $7 = $3; //@line 113 "./src/cpp/unrar/ui.hpp"
 $8 = ((($4)) + 72|0); //@line 113 "./src/cpp/unrar/ui.hpp"
 HEAP32[$8>>2] = $7; //@line 113 "./src/cpp/unrar/ui.hpp"
 STACKTOP = sp;return; //@line 114 "./src/cpp/unrar/ui.hpp"
}
function __ZN10uiMsgStorelsEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 64|0); //@line 117 "./src/cpp/unrar/ui.hpp"
 $6 = HEAP32[$5>>2]|0; //@line 117 "./src/cpp/unrar/ui.hpp"
 $7 = ($6>>>0)<(8); //@line 117 "./src/cpp/unrar/ui.hpp"
 if (!($7)) {
  STACKTOP = sp;return ($4|0); //@line 119 "./src/cpp/unrar/ui.hpp"
 }
 $8 = $3; //@line 118 "./src/cpp/unrar/ui.hpp"
 $9 = ((($4)) + 64|0); //@line 118 "./src/cpp/unrar/ui.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 118 "./src/cpp/unrar/ui.hpp"
 $11 = (($10) + 1)|0; //@line 118 "./src/cpp/unrar/ui.hpp"
 HEAP32[$9>>2] = $11; //@line 118 "./src/cpp/unrar/ui.hpp"
 $12 = (($4) + ($10<<2)|0); //@line 118 "./src/cpp/unrar/ui.hpp"
 HEAP32[$12>>2] = $8; //@line 118 "./src/cpp/unrar/ui.hpp"
 STACKTOP = sp;return ($4|0); //@line 119 "./src/cpp/unrar/ui.hpp"
}
function __Z7mprintfPKwz($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 13 "./src/cpp/unrar/consio.hpp"
}
function __ZN7ArchiveC2EP10RAROptions($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 20|0;
 $2 = $0;
 $3 = $1;
 $8 = $2;
 __ZN4FileC2Ev($8); //@line 8 "./src/cpp/unrar/archive.cpp"
 HEAP32[$8>>2] = (780); //@line 9 "./src/cpp/unrar/archive.cpp"
 $9 = ((($8)) + 8220|0); //@line 8 "./src/cpp/unrar/archive.cpp"
 __THREW__ = 0;
 invoke_vi(125,($9|0)); //@line 8 "./src/cpp/unrar/archive.cpp"
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $106 = ___cxa_find_matching_catch_2()|0;
  $107 = tempRet0;
  $4 = $106; //@line 53 "./src/cpp/unrar/archive.cpp"
  $5 = $107; //@line 53 "./src/cpp/unrar/archive.cpp"
  __ZN4FileD2Ev($8); //@line 53 "./src/cpp/unrar/archive.cpp"
  $122 = $4; //@line 53 "./src/cpp/unrar/archive.cpp"
  $123 = $5; //@line 53 "./src/cpp/unrar/archive.cpp"
  ___resumeException($122|0);
  // unreachable;
 }
 $12 = ((($8)) + 14576|0); //@line 8 "./src/cpp/unrar/archive.cpp"
 __THREW__ = 0;
 invoke_vi(102,($12|0)); //@line 8 "./src/cpp/unrar/archive.cpp"
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $108 = ___cxa_find_matching_catch_2()|0;
  $109 = tempRet0;
  $4 = $108; //@line 53 "./src/cpp/unrar/archive.cpp"
  $5 = $109; //@line 53 "./src/cpp/unrar/archive.cpp"
 } else {
  $15 = ((($8)) + 14784|0); //@line 8 "./src/cpp/unrar/archive.cpp"
  __THREW__ = 0;
  invoke_vi(126,($15|0)); //@line 8 "./src/cpp/unrar/archive.cpp"
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   label = 15;
  } else {
   $18 = ((($8)) + 14808|0); //@line 8 "./src/cpp/unrar/archive.cpp"
   __THREW__ = 0;
   invoke_vi(127,($18|0)); //@line 8 "./src/cpp/unrar/archive.cpp"
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if ($20) {
    label = 15;
   } else {
    $21 = ((($8)) + 21424|0); //@line 8 "./src/cpp/unrar/archive.cpp"
    __THREW__ = 0;
    invoke_vi(128,($21|0)); //@line 8 "./src/cpp/unrar/archive.cpp"
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     $112 = ___cxa_find_matching_catch_2()|0;
     $113 = tempRet0;
     $4 = $112; //@line 53 "./src/cpp/unrar/archive.cpp"
     $5 = $113; //@line 53 "./src/cpp/unrar/archive.cpp"
    } else {
     $24 = ((($8)) + 38640|0); //@line 8 "./src/cpp/unrar/archive.cpp"
     __THREW__ = 0;
     invoke_vi(128,($24|0)); //@line 8 "./src/cpp/unrar/archive.cpp"
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if ($26) {
      $114 = ___cxa_find_matching_catch_2()|0;
      $115 = tempRet0;
      $4 = $114; //@line 53 "./src/cpp/unrar/archive.cpp"
      $5 = $115; //@line 53 "./src/cpp/unrar/archive.cpp"
     } else {
      $27 = ((($8)) + 14764|0); //@line 10 "./src/cpp/unrar/archive.cpp"
      HEAP32[$27>>2] = 0; //@line 10 "./src/cpp/unrar/archive.cpp"
      $28 = $3; //@line 12 "./src/cpp/unrar/archive.cpp"
      $29 = ($28|0)==(0|0); //@line 12 "./src/cpp/unrar/archive.cpp"
      $30 = ((($8)) + 14760|0); //@line 12 "./src/cpp/unrar/archive.cpp"
      $31 = $29&1; //@line 12 "./src/cpp/unrar/archive.cpp"
      HEAP8[$30>>0] = $31; //@line 12 "./src/cpp/unrar/archive.cpp"
      $32 = ((($8)) + 14760|0); //@line 13 "./src/cpp/unrar/archive.cpp"
      $33 = HEAP8[$32>>0]|0; //@line 13 "./src/cpp/unrar/archive.cpp"
      $34 = $33&1; //@line 13 "./src/cpp/unrar/archive.cpp"
      $$expand_i1_val = 0;
      HEAP8[$7>>0] = $$expand_i1_val;
      if ($34) {
       __THREW__ = 0;
       $35 = (invoke_ii(49,75200)|0); //@line 13 "./src/cpp/unrar/archive.cpp"
       $36 = __THREW__; __THREW__ = 0;
       $37 = $36&1;
       if ($37) {
        label = 18;
       } else {
        $6 = $35; //@line 13 "./src/cpp/unrar/archive.cpp"
        $$expand_i1_val2 = 1; //@line 13 "./src/cpp/unrar/archive.cpp"
        HEAP8[$7>>0] = $$expand_i1_val2; //@line 13 "./src/cpp/unrar/archive.cpp"
        __THREW__ = 0;
        invoke_vi(129,($35|0)); //@line 13 "./src/cpp/unrar/archive.cpp"
        $38 = __THREW__; __THREW__ = 0;
        $39 = $38&1;
        if ($39) {
         $118 = ___cxa_find_matching_catch_2()|0;
         $119 = tempRet0;
         $4 = $118; //@line 53 "./src/cpp/unrar/archive.cpp"
         $5 = $119; //@line 53 "./src/cpp/unrar/archive.cpp"
         $$pre_trunc = HEAP8[$7>>0]|0; //@line 13 "./src/cpp/unrar/archive.cpp"
         $120 = $$pre_trunc&1; //@line 13 "./src/cpp/unrar/archive.cpp"
         if ($120) {
          $121 = $6; //@line 13 "./src/cpp/unrar/archive.cpp"
          __ZdlPv($121); //@line 13 "./src/cpp/unrar/archive.cpp"
         }
        } else {
         $42 = $35;
         label = 11;
        }
       }
      } else {
       $40 = $3; //@line 13 "./src/cpp/unrar/archive.cpp"
       $42 = $40;
       label = 11;
      }
      if ((label|0) == 11) {
       $41 = ((($8)) + 14764|0); //@line 13 "./src/cpp/unrar/archive.cpp"
       HEAP32[$41>>2] = $42; //@line 13 "./src/cpp/unrar/archive.cpp"
       $43 = ((($8)) + 14764|0); //@line 15 "./src/cpp/unrar/archive.cpp"
       $44 = HEAP32[$43>>2]|0; //@line 15 "./src/cpp/unrar/archive.cpp"
       $45 = ((($44)) + 49821|0); //@line 15 "./src/cpp/unrar/archive.cpp"
       $46 = HEAP8[$45>>0]|0; //@line 15 "./src/cpp/unrar/archive.cpp"
       $47 = $46&1; //@line 15 "./src/cpp/unrar/archive.cpp"
       $48 = ((($8)) + 21|0); //@line 15 "./src/cpp/unrar/archive.cpp"
       $49 = $47&1; //@line 15 "./src/cpp/unrar/archive.cpp"
       HEAP8[$48>>0] = $49; //@line 15 "./src/cpp/unrar/archive.cpp"
       $50 = ((($8)) + 56856|0); //@line 16 "./src/cpp/unrar/archive.cpp"
       HEAP32[$50>>2] = 2; //@line 16 "./src/cpp/unrar/archive.cpp"
       $51 = ((($8)) + 56860|0); //@line 17 "./src/cpp/unrar/archive.cpp"
       HEAP8[$51>>0] = 0; //@line 17 "./src/cpp/unrar/archive.cpp"
       $52 = ((($8)) + 56861|0); //@line 18 "./src/cpp/unrar/archive.cpp"
       HEAP8[$52>>0] = 0; //@line 18 "./src/cpp/unrar/archive.cpp"
       $53 = ((($8)) + 56862|0); //@line 19 "./src/cpp/unrar/archive.cpp"
       HEAP8[$53>>0] = 0; //@line 19 "./src/cpp/unrar/archive.cpp"
       $54 = ((($8)) + 56863|0); //@line 20 "./src/cpp/unrar/archive.cpp"
       HEAP8[$54>>0] = 0; //@line 20 "./src/cpp/unrar/archive.cpp"
       $55 = ((($8)) + 56864|0); //@line 21 "./src/cpp/unrar/archive.cpp"
       HEAP8[$55>>0] = 0; //@line 21 "./src/cpp/unrar/archive.cpp"
       $56 = ((($8)) + 56865|0); //@line 22 "./src/cpp/unrar/archive.cpp"
       HEAP8[$56>>0] = 0; //@line 22 "./src/cpp/unrar/archive.cpp"
       $57 = ((($8)) + 56866|0); //@line 23 "./src/cpp/unrar/archive.cpp"
       HEAP8[$57>>0] = 0; //@line 23 "./src/cpp/unrar/archive.cpp"
       $58 = ((($8)) + 56872|0); //@line 24 "./src/cpp/unrar/archive.cpp"
       HEAP32[$58>>2] = 0; //@line 24 "./src/cpp/unrar/archive.cpp"
       $59 = ((($8)) + 14784|0); //@line 25 "./src/cpp/unrar/archive.cpp"
       __THREW__ = 0;
       invoke_vi(130,($59|0)); //@line 25 "./src/cpp/unrar/archive.cpp"
       $60 = __THREW__; __THREW__ = 0;
       $61 = $60&1;
       if ($61) {
        label = 18;
       } else {
        $62 = ((($8)) + 56867|0); //@line 26 "./src/cpp/unrar/archive.cpp"
        HEAP8[$62>>0] = 0; //@line 26 "./src/cpp/unrar/archive.cpp"
        $63 = ((($8)) + 56868|0); //@line 27 "./src/cpp/unrar/archive.cpp"
        HEAP8[$63>>0] = 0; //@line 27 "./src/cpp/unrar/archive.cpp"
        $64 = ((($8)) + 56877|0); //@line 28 "./src/cpp/unrar/archive.cpp"
        HEAP8[$64>>0] = 0; //@line 28 "./src/cpp/unrar/archive.cpp"
        $65 = ((($8)) + 56876|0); //@line 29 "./src/cpp/unrar/archive.cpp"
        HEAP8[$65>>0] = 0; //@line 29 "./src/cpp/unrar/archive.cpp"
        $66 = ((($8)) + 14792|0); //@line 30 "./src/cpp/unrar/archive.cpp"
        HEAP32[$66>>2] = 0; //@line 30 "./src/cpp/unrar/archive.cpp"
        $67 = ((($8)) + 56840|0); //@line 32 "./src/cpp/unrar/archive.cpp"
        $68 = $67; //@line 32 "./src/cpp/unrar/archive.cpp"
        $69 = $68; //@line 32 "./src/cpp/unrar/archive.cpp"
        HEAP32[$69>>2] = 0; //@line 32 "./src/cpp/unrar/archive.cpp"
        $70 = (($68) + 4)|0; //@line 32 "./src/cpp/unrar/archive.cpp"
        $71 = $70; //@line 32 "./src/cpp/unrar/archive.cpp"
        HEAP32[$71>>2] = 0; //@line 32 "./src/cpp/unrar/archive.cpp"
        $72 = ((($8)) + 56848|0); //@line 33 "./src/cpp/unrar/archive.cpp"
        $73 = $72; //@line 33 "./src/cpp/unrar/archive.cpp"
        $74 = $73; //@line 33 "./src/cpp/unrar/archive.cpp"
        HEAP32[$74>>2] = 0; //@line 33 "./src/cpp/unrar/archive.cpp"
        $75 = (($73) + 4)|0; //@line 33 "./src/cpp/unrar/archive.cpp"
        $76 = $75; //@line 33 "./src/cpp/unrar/archive.cpp"
        HEAP32[$76>>2] = 0; //@line 33 "./src/cpp/unrar/archive.cpp"
        $77 = ((($8)) + 14768|0); //@line 35 "./src/cpp/unrar/archive.cpp"
        $78 = $77; //@line 35 "./src/cpp/unrar/archive.cpp"
        $79 = $78; //@line 35 "./src/cpp/unrar/archive.cpp"
        HEAP32[$79>>2] = -1; //@line 35 "./src/cpp/unrar/archive.cpp"
        $80 = (($78) + 4)|0; //@line 35 "./src/cpp/unrar/archive.cpp"
        $81 = $80; //@line 35 "./src/cpp/unrar/archive.cpp"
        HEAP32[$81>>2] = -1; //@line 35 "./src/cpp/unrar/archive.cpp"
        $82 = ((($8)) + 14776|0); //@line 36 "./src/cpp/unrar/archive.cpp"
        HEAP32[$82>>2] = -1; //@line 36 "./src/cpp/unrar/archive.cpp"
        $83 = ((($8)) + 21304|0); //@line 38 "./src/cpp/unrar/archive.cpp"
        dest=$83; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 38 "./src/cpp/unrar/archive.cpp"
        $84 = ((($8)) + 21368|0); //@line 39 "./src/cpp/unrar/archive.cpp"
        dest=$84; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 39 "./src/cpp/unrar/archive.cpp"
        $85 = ((($8)) + 38576|0); //@line 40 "./src/cpp/unrar/archive.cpp"
        ;HEAP32[$85>>2]=0|0;HEAP32[$85+4>>2]=0|0;HEAP32[$85+8>>2]=0|0;HEAP32[$85+12>>2]=0|0;HEAP32[$85+16>>2]=0|0;HEAP32[$85+20>>2]=0|0;HEAP32[$85+24>>2]=0|0;HEAP32[$85+28>>2]=0|0; //@line 40 "./src/cpp/unrar/archive.cpp"
        $86 = ((($8)) + 56896|0); //@line 42 "./src/cpp/unrar/archive.cpp"
        HEAP32[$86>>2] = 0; //@line 42 "./src/cpp/unrar/archive.cpp"
        $87 = ((($8)) + 56904|0); //@line 43 "./src/cpp/unrar/archive.cpp"
        $88 = $87; //@line 43 "./src/cpp/unrar/archive.cpp"
        $89 = $88; //@line 43 "./src/cpp/unrar/archive.cpp"
        HEAP32[$89>>2] = 0; //@line 43 "./src/cpp/unrar/archive.cpp"
        $90 = (($88) + 4)|0; //@line 43 "./src/cpp/unrar/archive.cpp"
        $91 = $90; //@line 43 "./src/cpp/unrar/archive.cpp"
        HEAP32[$91>>2] = 0; //@line 43 "./src/cpp/unrar/archive.cpp"
        $92 = ((($8)) + 56912|0); //@line 44 "./src/cpp/unrar/archive.cpp"
        $93 = $92; //@line 44 "./src/cpp/unrar/archive.cpp"
        $94 = $93; //@line 44 "./src/cpp/unrar/archive.cpp"
        HEAP32[$94>>2] = 0; //@line 44 "./src/cpp/unrar/archive.cpp"
        $95 = (($93) + 4)|0; //@line 44 "./src/cpp/unrar/archive.cpp"
        $96 = $95; //@line 44 "./src/cpp/unrar/archive.cpp"
        HEAP32[$96>>2] = 0; //@line 44 "./src/cpp/unrar/archive.cpp"
        $97 = ((($8)) + 56920|0); //@line 45 "./src/cpp/unrar/archive.cpp"
        $98 = $97; //@line 45 "./src/cpp/unrar/archive.cpp"
        $99 = $98; //@line 45 "./src/cpp/unrar/archive.cpp"
        HEAP32[$99>>2] = 0; //@line 45 "./src/cpp/unrar/archive.cpp"
        $100 = (($98) + 4)|0; //@line 45 "./src/cpp/unrar/archive.cpp"
        $101 = $100; //@line 45 "./src/cpp/unrar/archive.cpp"
        HEAP32[$101>>2] = 0; //@line 45 "./src/cpp/unrar/archive.cpp"
        $102 = ((($8)) + 56932|0); //@line 46 "./src/cpp/unrar/archive.cpp"
        HEAP32[$102>>2] = 0; //@line 46 "./src/cpp/unrar/archive.cpp"
        $103 = ((($8)) + 56894|0); //@line 48 "./src/cpp/unrar/archive.cpp"
        HEAP8[$103>>0] = 0; //@line 48 "./src/cpp/unrar/archive.cpp"
        $104 = ((($8)) + 56928|0); //@line 49 "./src/cpp/unrar/archive.cpp"
        HEAP8[$104>>0] = 0; //@line 49 "./src/cpp/unrar/archive.cpp"
        $105 = ((($8)) + 14800|0); //@line 51 "./src/cpp/unrar/archive.cpp"
        HEAP8[$105>>0] = 0; //@line 51 "./src/cpp/unrar/archive.cpp"
        STACKTOP = sp;return; //@line 53 "./src/cpp/unrar/archive.cpp"
       }
      }
      if ((label|0) == 18) {
       $116 = ___cxa_find_matching_catch_2()|0;
       $117 = tempRet0;
       $4 = $116; //@line 53 "./src/cpp/unrar/archive.cpp"
       $5 = $117; //@line 53 "./src/cpp/unrar/archive.cpp"
      }
      __ZN10FileHeaderD2Ev($24); //@line 53 "./src/cpp/unrar/archive.cpp"
     }
     __ZN10FileHeaderD2Ev($21); //@line 53 "./src/cpp/unrar/archive.cpp"
    }
    __ZN9QuickOpenD2Ev($18); //@line 53 "./src/cpp/unrar/archive.cpp"
   }
  }
  if ((label|0) == 15) {
   $110 = ___cxa_find_matching_catch_2()|0;
   $111 = tempRet0;
   $4 = $110; //@line 53 "./src/cpp/unrar/archive.cpp"
   $5 = $111; //@line 53 "./src/cpp/unrar/archive.cpp"
  }
  __ZN11ComprDataIOD2Ev($12); //@line 53 "./src/cpp/unrar/archive.cpp"
 }
 __ZN9CryptDataD2Ev($9); //@line 53 "./src/cpp/unrar/archive.cpp"
 __ZN4FileD2Ev($8); //@line 53 "./src/cpp/unrar/archive.cpp"
 $122 = $4; //@line 53 "./src/cpp/unrar/archive.cpp"
 $123 = $5; //@line 53 "./src/cpp/unrar/archive.cpp"
 ___resumeException($122|0);
 // unreachable;
}
function __ZN10FileHeaderC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 8224|0); //@line 177 "./src/cpp/unrar/headers.hpp"
 __ZN5ArrayIhEC2Ev($5); //@line 177 "./src/cpp/unrar/headers.hpp"
 $6 = ((($4)) + 8240|0); //@line 177 "./src/cpp/unrar/headers.hpp"
 __THREW__ = 0;
 invoke_vi(126,($6|0)); //@line 177 "./src/cpp/unrar/headers.hpp"
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = ((($4)) + 8248|0); //@line 177 "./src/cpp/unrar/headers.hpp"
  __THREW__ = 0;
  invoke_vi(126,($9|0)); //@line 177 "./src/cpp/unrar/headers.hpp"
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if (!($11)) {
   $12 = ((($4)) + 8256|0); //@line 177 "./src/cpp/unrar/headers.hpp"
   __THREW__ = 0;
   invoke_vi(126,($12|0)); //@line 177 "./src/cpp/unrar/headers.hpp"
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   if (!($14)) {
    STACKTOP = sp;return; //@line 177 "./src/cpp/unrar/headers.hpp"
   }
  }
 }
 $15 = ___cxa_find_matching_catch_2()|0;
 $16 = tempRet0;
 $2 = $15; //@line 177 "./src/cpp/unrar/headers.hpp"
 $3 = $16; //@line 177 "./src/cpp/unrar/headers.hpp"
 __ZN5ArrayIhED2Ev($5); //@line 177 "./src/cpp/unrar/headers.hpp"
 $17 = $2; //@line 177 "./src/cpp/unrar/headers.hpp"
 $18 = $3; //@line 177 "./src/cpp/unrar/headers.hpp"
 ___resumeException($17|0);
 // unreachable;
}
function __ZN7Archive8CheckArcEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $1&1;
 $3 = $4;
 $5 = $2;
 $6 = $3; //@line 66 "./src/cpp/unrar/archive.cpp"
 $7 = $6&1; //@line 66 "./src/cpp/unrar/archive.cpp"
 $8 = (__ZN7Archive9IsArchiveEb($5,$7)|0); //@line 66 "./src/cpp/unrar/archive.cpp"
 if ($8) {
  STACKTOP = sp;return; //@line 74 "./src/cpp/unrar/archive.cpp"
 }
 $9 = ((($5)) + 56877|0); //@line 70 "./src/cpp/unrar/archive.cpp"
 $10 = HEAP8[$9>>0]|0; //@line 70 "./src/cpp/unrar/archive.cpp"
 $11 = $10&1; //@line 70 "./src/cpp/unrar/archive.cpp"
 if (!($11)) {
  $12 = ((($5)) + 24|0); //@line 71 "./src/cpp/unrar/archive.cpp"
  __Z5uiMsgIPwEv14UIMESSAGE_CODET_(56,$12); //@line 71 "./src/cpp/unrar/archive.cpp"
 }
 __ZN12ErrorHandler4ExitE8RAR_EXIT(756,2); //@line 72 "./src/cpp/unrar/archive.cpp"
 STACKTOP = sp;return; //@line 74 "./src/cpp/unrar/archive.cpp"
}
function __ZN7Archive9IsArchiveEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val13 = 0, $$expand_i1_val15 = 0, $$expand_i1_val17 = 0, $$expand_i1_val19 = 0, $$expand_i1_val21 = 0, $$expand_i1_val23 = 0, $$pre_trunc = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond9 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $2 = sp + 97|0;
 $6 = sp + 72|0;
 $15 = sp + 16|0;
 $16 = sp + 8|0;
 $17 = sp;
 $3 = $0;
 $20 = $1&1;
 $4 = $20;
 $21 = $3;
 $22 = ((($21)) + 56868|0); //@line 130 "./src/cpp/unrar/archive.cpp"
 HEAP8[$22>>0] = 0; //@line 130 "./src/cpp/unrar/archive.cpp"
 $23 = ((($21)) + 56876|0); //@line 131 "./src/cpp/unrar/archive.cpp"
 HEAP8[$23>>0] = 0; //@line 131 "./src/cpp/unrar/archive.cpp"
 $24 = (__ZN4File8IsDeviceEv($21)|0); //@line 134 "./src/cpp/unrar/archive.cpp"
 if ($24) {
  $25 = ((($21)) + 24|0); //@line 136 "./src/cpp/unrar/archive.cpp"
  $26 = ((($21)) + 24|0); //@line 136 "./src/cpp/unrar/archive.cpp"
  __Z5uiMsgIPwS0_Ev14UIMESSAGE_CODET_T0_(58,$25,$26); //@line 136 "./src/cpp/unrar/archive.cpp"
  $$expand_i1_val = 0; //@line 137 "./src/cpp/unrar/archive.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 137 "./src/cpp/unrar/archive.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 269 "./src/cpp/unrar/archive.cpp"
  $312 = $$pre_trunc&1; //@line 269 "./src/cpp/unrar/archive.cpp"
  STACKTOP = sp;return ($312|0); //@line 269 "./src/cpp/unrar/archive.cpp"
 }
 $27 = HEAP32[$21>>2]|0; //@line 140 "./src/cpp/unrar/archive.cpp"
 $28 = ((($27)) + 12|0); //@line 140 "./src/cpp/unrar/archive.cpp"
 $29 = HEAP32[$28>>2]|0; //@line 140 "./src/cpp/unrar/archive.cpp"
 $30 = ((($21)) + 21292|0); //@line 140 "./src/cpp/unrar/archive.cpp"
 $31 = (FUNCTION_TABLE_iiii[$29 & 511]($21,$30,7)|0); //@line 140 "./src/cpp/unrar/archive.cpp"
 $32 = ($31|0)!=(7); //@line 140 "./src/cpp/unrar/archive.cpp"
 if ($32) {
  $$expand_i1_val11 = 0; //@line 141 "./src/cpp/unrar/archive.cpp"
  HEAP8[$2>>0] = $$expand_i1_val11; //@line 141 "./src/cpp/unrar/archive.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 269 "./src/cpp/unrar/archive.cpp"
  $312 = $$pre_trunc&1; //@line 269 "./src/cpp/unrar/archive.cpp"
  STACKTOP = sp;return ($312|0); //@line 269 "./src/cpp/unrar/archive.cpp"
 }
 $33 = ((($21)) + 56872|0); //@line 142 "./src/cpp/unrar/archive.cpp"
 HEAP32[$33>>2] = 0; //@line 142 "./src/cpp/unrar/archive.cpp"
 $34 = ((($21)) + 21292|0); //@line 145 "./src/cpp/unrar/archive.cpp"
 $35 = (__ZN7Archive11IsSignatureEPKhj($34,7)|0); //@line 145 "./src/cpp/unrar/archive.cpp"
 $5 = $35; //@line 145 "./src/cpp/unrar/archive.cpp"
 $36 = ($35|0)!=(0); //@line 145 "./src/cpp/unrar/archive.cpp"
 L9: do {
  if ($36) {
   $37 = $5; //@line 147 "./src/cpp/unrar/archive.cpp"
   $38 = ((($21)) + 56856|0); //@line 147 "./src/cpp/unrar/archive.cpp"
   HEAP32[$38>>2] = $37; //@line 147 "./src/cpp/unrar/archive.cpp"
   $39 = ((($21)) + 56856|0); //@line 148 "./src/cpp/unrar/archive.cpp"
   $40 = HEAP32[$39>>2]|0; //@line 148 "./src/cpp/unrar/archive.cpp"
   $41 = ($40|0)==(1); //@line 148 "./src/cpp/unrar/archive.cpp"
   if ($41) {
    $42 = HEAP32[$21>>2]|0; //@line 149 "./src/cpp/unrar/archive.cpp"
    $43 = ((($42)) + 16|0); //@line 149 "./src/cpp/unrar/archive.cpp"
    $44 = HEAP32[$43>>2]|0; //@line 149 "./src/cpp/unrar/archive.cpp"
    $45 = HEAP32[$21>>2]|0; //@line 149 "./src/cpp/unrar/archive.cpp"
    $46 = ((($45)) + 20|0); //@line 149 "./src/cpp/unrar/archive.cpp"
    $47 = HEAP32[$46>>2]|0; //@line 149 "./src/cpp/unrar/archive.cpp"
    $48 = (FUNCTION_TABLE_ii[$47 & 511]($21)|0); //@line 149 "./src/cpp/unrar/archive.cpp"
    $49 = tempRet0; //@line 149 "./src/cpp/unrar/archive.cpp"
    $50 = (_i64Subtract(($48|0),($49|0),7,0)|0); //@line 149 "./src/cpp/unrar/archive.cpp"
    $51 = tempRet0; //@line 149 "./src/cpp/unrar/archive.cpp"
    FUNCTION_TABLE_viiii[$44 & 255]($21,$50,$51,0); //@line 149 "./src/cpp/unrar/archive.cpp"
   }
  } else {
   __ZN5ArrayIcEC2Ej($6,2097152); //@line 153 "./src/cpp/unrar/archive.cpp"
   $52 = HEAP32[$21>>2]|0; //@line 154 "./src/cpp/unrar/archive.cpp"
   $53 = ((($52)) + 20|0); //@line 154 "./src/cpp/unrar/archive.cpp"
   $54 = HEAP32[$53>>2]|0; //@line 154 "./src/cpp/unrar/archive.cpp"
   __THREW__ = 0;
   $55 = (invoke_ii($54|0,($21|0))|0); //@line 154 "./src/cpp/unrar/archive.cpp"
   $56 = tempRet0; //@line 154 "./src/cpp/unrar/archive.cpp"
   $57 = __THREW__; __THREW__ = 0;
   $58 = $57&1;
   L13: do {
    if (!($58)) {
     $7 = $55; //@line 154 "./src/cpp/unrar/archive.cpp"
     $59 = HEAP32[$21>>2]|0; //@line 155 "./src/cpp/unrar/archive.cpp"
     $60 = ((($59)) + 12|0); //@line 155 "./src/cpp/unrar/archive.cpp"
     $61 = HEAP32[$60>>2]|0; //@line 155 "./src/cpp/unrar/archive.cpp"
     __THREW__ = 0;
     $62 = (invoke_iii(62,($6|0),0)|0); //@line 155 "./src/cpp/unrar/archive.cpp"
     $63 = __THREW__; __THREW__ = 0;
     $64 = $63&1;
     if (!($64)) {
      __THREW__ = 0;
      $65 = (invoke_ii(63,($6|0))|0); //@line 155 "./src/cpp/unrar/archive.cpp"
      $66 = __THREW__; __THREW__ = 0;
      $67 = $66&1;
      if (!($67)) {
       $68 = (($65) - 16)|0; //@line 155 "./src/cpp/unrar/archive.cpp"
       __THREW__ = 0;
       $69 = (invoke_iiii($61|0,($21|0),($62|0),($68|0))|0); //@line 155 "./src/cpp/unrar/archive.cpp"
       $70 = __THREW__; __THREW__ = 0;
       $71 = $70&1;
       if (!($71)) {
        $10 = $69; //@line 155 "./src/cpp/unrar/archive.cpp"
        $11 = 0; //@line 156 "./src/cpp/unrar/archive.cpp"
        L18: while(1) {
         $72 = $11; //@line 156 "./src/cpp/unrar/archive.cpp"
         $73 = $10; //@line 156 "./src/cpp/unrar/archive.cpp"
         $74 = ($72|0)<($73|0); //@line 156 "./src/cpp/unrar/archive.cpp"
         if (!($74)) {
          break;
         }
         $75 = $11; //@line 157 "./src/cpp/unrar/archive.cpp"
         __THREW__ = 0;
         $76 = (invoke_iii(62,($6|0),($75|0))|0); //@line 157 "./src/cpp/unrar/archive.cpp"
         $77 = __THREW__; __THREW__ = 0;
         $78 = $77&1;
         if ($78) {
          break L13;
         }
         $79 = HEAP8[$76>>0]|0; //@line 157 "./src/cpp/unrar/archive.cpp"
         $80 = $79 << 24 >> 24; //@line 157 "./src/cpp/unrar/archive.cpp"
         $81 = ($80|0)==(82); //@line 157 "./src/cpp/unrar/archive.cpp"
         do {
          if ($81) {
           $82 = $11; //@line 157 "./src/cpp/unrar/archive.cpp"
           __THREW__ = 0;
           $83 = (invoke_iii(62,($6|0),($82|0))|0); //@line 157 "./src/cpp/unrar/archive.cpp"
           $84 = __THREW__; __THREW__ = 0;
           $85 = $84&1;
           if ($85) {
            break L13;
           }
           $86 = $10; //@line 157 "./src/cpp/unrar/archive.cpp"
           $87 = $11; //@line 157 "./src/cpp/unrar/archive.cpp"
           $88 = (($86) - ($87))|0; //@line 157 "./src/cpp/unrar/archive.cpp"
           __THREW__ = 0;
           $89 = (invoke_iii(131,($83|0),($88|0))|0); //@line 157 "./src/cpp/unrar/archive.cpp"
           $90 = __THREW__; __THREW__ = 0;
           $91 = $90&1;
           if ($91) {
            break L13;
           }
           $5 = $89; //@line 157 "./src/cpp/unrar/archive.cpp"
           $92 = ($89|0)!=(0); //@line 157 "./src/cpp/unrar/archive.cpp"
           if ($92) {
            $93 = $5; //@line 159 "./src/cpp/unrar/archive.cpp"
            $94 = ((($21)) + 56856|0); //@line 159 "./src/cpp/unrar/archive.cpp"
            HEAP32[$94>>2] = $93; //@line 159 "./src/cpp/unrar/archive.cpp"
            $95 = ((($21)) + 56856|0); //@line 160 "./src/cpp/unrar/archive.cpp"
            $96 = HEAP32[$95>>2]|0; //@line 160 "./src/cpp/unrar/archive.cpp"
            $97 = ($96|0)==(1); //@line 160 "./src/cpp/unrar/archive.cpp"
            $98 = $11; //@line 160 "./src/cpp/unrar/archive.cpp"
            $99 = ($98|0)>(0); //@line 160 "./src/cpp/unrar/archive.cpp"
            $or$cond = $97 & $99; //@line 160 "./src/cpp/unrar/archive.cpp"
            $100 = $7; //@line 160 "./src/cpp/unrar/archive.cpp"
            $101 = ($100|0)<(28); //@line 160 "./src/cpp/unrar/archive.cpp"
            $or$cond3 = $or$cond & $101; //@line 160 "./src/cpp/unrar/archive.cpp"
            $102 = $10; //@line 160 "./src/cpp/unrar/archive.cpp"
            $103 = ($102|0)>(31); //@line 160 "./src/cpp/unrar/archive.cpp"
            $or$cond5 = $or$cond3 & $103; //@line 160 "./src/cpp/unrar/archive.cpp"
            if (!($or$cond5)) {
             label = 26;
             break L18;
            }
            $104 = $7; //@line 162 "./src/cpp/unrar/archive.cpp"
            $105 = (28 - ($104))|0; //@line 162 "./src/cpp/unrar/archive.cpp"
            __THREW__ = 0;
            $106 = (invoke_iii(62,($6|0),($105|0))|0); //@line 162 "./src/cpp/unrar/archive.cpp"
            $107 = __THREW__; __THREW__ = 0;
            $108 = $107&1;
            if ($108) {
             break L13;
            }
            $12 = $106; //@line 162 "./src/cpp/unrar/archive.cpp"
            $109 = $12; //@line 163 "./src/cpp/unrar/archive.cpp"
            $110 = HEAP8[$109>>0]|0; //@line 163 "./src/cpp/unrar/archive.cpp"
            $111 = $110 << 24 >> 24; //@line 163 "./src/cpp/unrar/archive.cpp"
            $112 = ($111|0)!=(82); //@line 163 "./src/cpp/unrar/archive.cpp"
            if (!($112)) {
             $113 = $12; //@line 163 "./src/cpp/unrar/archive.cpp"
             $114 = ((($113)) + 1|0); //@line 163 "./src/cpp/unrar/archive.cpp"
             $115 = HEAP8[$114>>0]|0; //@line 163 "./src/cpp/unrar/archive.cpp"
             $116 = $115 << 24 >> 24; //@line 163 "./src/cpp/unrar/archive.cpp"
             $117 = ($116|0)!=(83); //@line 163 "./src/cpp/unrar/archive.cpp"
             if ($117) {
              break;
             }
             $118 = $12; //@line 163 "./src/cpp/unrar/archive.cpp"
             $119 = ((($118)) + 2|0); //@line 163 "./src/cpp/unrar/archive.cpp"
             $120 = HEAP8[$119>>0]|0; //@line 163 "./src/cpp/unrar/archive.cpp"
             $121 = $120 << 24 >> 24; //@line 163 "./src/cpp/unrar/archive.cpp"
             $122 = ($121|0)!=(70); //@line 163 "./src/cpp/unrar/archive.cpp"
             if ($122) {
              break;
             }
             $123 = $12; //@line 163 "./src/cpp/unrar/archive.cpp"
             $124 = ((($123)) + 3|0); //@line 163 "./src/cpp/unrar/archive.cpp"
             $125 = HEAP8[$124>>0]|0; //@line 163 "./src/cpp/unrar/archive.cpp"
             $126 = $125 << 24 >> 24; //@line 163 "./src/cpp/unrar/archive.cpp"
             $127 = ($126|0)!=(88); //@line 163 "./src/cpp/unrar/archive.cpp"
             if (!($127)) {
              label = 26;
              break L18;
             }
            }
           }
          }
         } while(0);
         $153 = $11; //@line 156 "./src/cpp/unrar/archive.cpp"
         $154 = (($153) + 1)|0; //@line 156 "./src/cpp/unrar/archive.cpp"
         $11 = $154; //@line 156 "./src/cpp/unrar/archive.cpp"
        }
        do {
         if ((label|0) == 26) {
          $130 = $7; //@line 166 "./src/cpp/unrar/archive.cpp"
          $131 = $11; //@line 166 "./src/cpp/unrar/archive.cpp"
          $132 = (($130) + ($131))|0; //@line 166 "./src/cpp/unrar/archive.cpp"
          $133 = ((($21)) + 56872|0); //@line 166 "./src/cpp/unrar/archive.cpp"
          HEAP32[$133>>2] = $132; //@line 166 "./src/cpp/unrar/archive.cpp"
          $134 = HEAP32[$21>>2]|0; //@line 167 "./src/cpp/unrar/archive.cpp"
          $135 = ((($134)) + 16|0); //@line 167 "./src/cpp/unrar/archive.cpp"
          $136 = HEAP32[$135>>2]|0; //@line 167 "./src/cpp/unrar/archive.cpp"
          $137 = ((($21)) + 56872|0); //@line 167 "./src/cpp/unrar/archive.cpp"
          $138 = HEAP32[$137>>2]|0; //@line 167 "./src/cpp/unrar/archive.cpp"
          __THREW__ = 0;
          invoke_viiii($136|0,($21|0),($138|0),0,0); //@line 167 "./src/cpp/unrar/archive.cpp"
          $139 = __THREW__; __THREW__ = 0;
          $140 = $139&1;
          if ($140) {
           break L13;
          }
          $141 = ((($21)) + 56856|0); //@line 168 "./src/cpp/unrar/archive.cpp"
          $142 = HEAP32[$141>>2]|0; //@line 168 "./src/cpp/unrar/archive.cpp"
          $143 = ($142|0)==(2); //@line 168 "./src/cpp/unrar/archive.cpp"
          if (!($143)) {
           $144 = ((($21)) + 56856|0); //@line 168 "./src/cpp/unrar/archive.cpp"
           $145 = HEAP32[$144>>2]|0; //@line 168 "./src/cpp/unrar/archive.cpp"
           $146 = ($145|0)==(3); //@line 168 "./src/cpp/unrar/archive.cpp"
           if (!($146)) {
            break;
           }
          }
          $147 = HEAP32[$21>>2]|0; //@line 169 "./src/cpp/unrar/archive.cpp"
          $148 = ((($147)) + 12|0); //@line 169 "./src/cpp/unrar/archive.cpp"
          $149 = HEAP32[$148>>2]|0; //@line 169 "./src/cpp/unrar/archive.cpp"
          $150 = ((($21)) + 21292|0); //@line 169 "./src/cpp/unrar/archive.cpp"
          __THREW__ = 0;
          (invoke_iiii($149|0,($21|0),($150|0),7)|0); //@line 169 "./src/cpp/unrar/archive.cpp"
          $151 = __THREW__; __THREW__ = 0;
          $152 = $151&1;
          if ($152) {
           break L13;
          }
         }
        } while(0);
        $155 = ((($21)) + 56872|0); //@line 172 "./src/cpp/unrar/archive.cpp"
        $156 = HEAP32[$155>>2]|0; //@line 172 "./src/cpp/unrar/archive.cpp"
        $157 = ($156|0)==(0); //@line 172 "./src/cpp/unrar/archive.cpp"
        if ($157) {
         $$expand_i1_val13 = 0; //@line 173 "./src/cpp/unrar/archive.cpp"
         HEAP8[$2>>0] = $$expand_i1_val13; //@line 173 "./src/cpp/unrar/archive.cpp"
         $13 = 1;
        } else {
         $13 = 0; //@line 174 "./src/cpp/unrar/archive.cpp"
        }
        __ZN5ArrayIcED2Ev($6); //@line 174 "./src/cpp/unrar/archive.cpp"
        $158 = $13;
        $switch = ($158>>>0)<(1);
        if ($switch) {
         break L9;
        }
        $$pre_trunc = HEAP8[$2>>0]|0; //@line 269 "./src/cpp/unrar/archive.cpp"
        $312 = $$pre_trunc&1; //@line 269 "./src/cpp/unrar/archive.cpp"
        STACKTOP = sp;return ($312|0); //@line 269 "./src/cpp/unrar/archive.cpp"
       }
      }
     }
    }
   } while(0);
   $128 = ___cxa_find_matching_catch_2()|0;
   $129 = tempRet0;
   $8 = $128; //@line 269 "./src/cpp/unrar/archive.cpp"
   $9 = $129; //@line 269 "./src/cpp/unrar/archive.cpp"
   __ZN5ArrayIcED2Ev($6); //@line 174 "./src/cpp/unrar/archive.cpp"
   $313 = $8; //@line 174 "./src/cpp/unrar/archive.cpp"
   $314 = $9; //@line 174 "./src/cpp/unrar/archive.cpp"
   ___resumeException($313|0);
   // unreachable;
  }
 } while(0);
 $159 = ((($21)) + 56856|0); //@line 175 "./src/cpp/unrar/archive.cpp"
 $160 = HEAP32[$159>>2]|0; //@line 175 "./src/cpp/unrar/archive.cpp"
 $161 = ($160|0)==(4); //@line 175 "./src/cpp/unrar/archive.cpp"
 if ($161) {
  $162 = ((($21)) + 24|0); //@line 177 "./src/cpp/unrar/archive.cpp"
  __Z5uiMsgIPwEv14UIMESSAGE_CODET_(59,$162); //@line 177 "./src/cpp/unrar/archive.cpp"
  $$expand_i1_val15 = 0; //@line 178 "./src/cpp/unrar/archive.cpp"
  HEAP8[$2>>0] = $$expand_i1_val15; //@line 178 "./src/cpp/unrar/archive.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 269 "./src/cpp/unrar/archive.cpp"
  $312 = $$pre_trunc&1; //@line 269 "./src/cpp/unrar/archive.cpp"
  STACKTOP = sp;return ($312|0); //@line 269 "./src/cpp/unrar/archive.cpp"
 }
 $163 = ((($21)) + 56856|0); //@line 180 "./src/cpp/unrar/archive.cpp"
 $164 = HEAP32[$163>>2]|0; //@line 180 "./src/cpp/unrar/archive.cpp"
 $165 = ($164|0)==(3); //@line 180 "./src/cpp/unrar/archive.cpp"
 if ($165) {
  $166 = HEAP32[$21>>2]|0; //@line 182 "./src/cpp/unrar/archive.cpp"
  $167 = ((($166)) + 12|0); //@line 182 "./src/cpp/unrar/archive.cpp"
  $168 = HEAP32[$167>>2]|0; //@line 182 "./src/cpp/unrar/archive.cpp"
  $169 = ((($21)) + 21292|0); //@line 182 "./src/cpp/unrar/archive.cpp"
  $170 = ((($169)) + 7|0); //@line 182 "./src/cpp/unrar/archive.cpp"
  (FUNCTION_TABLE_iiii[$168 & 511]($21,$170,1)|0); //@line 182 "./src/cpp/unrar/archive.cpp"
  $171 = ((($21)) + 21292|0); //@line 183 "./src/cpp/unrar/archive.cpp"
  $172 = ((($171)) + 7|0); //@line 183 "./src/cpp/unrar/archive.cpp"
  $173 = HEAP8[$172>>0]|0; //@line 183 "./src/cpp/unrar/archive.cpp"
  $174 = $173&255; //@line 183 "./src/cpp/unrar/archive.cpp"
  $175 = ($174|0)!=(0); //@line 183 "./src/cpp/unrar/archive.cpp"
  if ($175) {
   $$expand_i1_val17 = 0; //@line 184 "./src/cpp/unrar/archive.cpp"
   HEAP8[$2>>0] = $$expand_i1_val17; //@line 184 "./src/cpp/unrar/archive.cpp"
   $$pre_trunc = HEAP8[$2>>0]|0; //@line 269 "./src/cpp/unrar/archive.cpp"
   $312 = $$pre_trunc&1; //@line 269 "./src/cpp/unrar/archive.cpp"
   STACKTOP = sp;return ($312|0); //@line 269 "./src/cpp/unrar/archive.cpp"
  } else {
   $$sink = 8;
  }
 } else {
  $$sink = 7;
 }
 $176 = ((($21)) + 21292|0);
 $177 = ((($176)) + 8|0);
 HEAP32[$177>>2] = $$sink;
 $178 = ((($21)) + 14764|0); //@line 195 "./src/cpp/unrar/archive.cpp"
 $179 = HEAP32[$178>>2]|0; //@line 195 "./src/cpp/unrar/archive.cpp"
 $180 = ((($179)) + 75184|0); //@line 195 "./src/cpp/unrar/archive.cpp"
 $181 = HEAP32[$180>>2]|0; //@line 195 "./src/cpp/unrar/archive.cpp"
 $182 = ($181|0)==(0|0); //@line 195 "./src/cpp/unrar/archive.cpp"
 if ($182) {
  $183 = ((($21)) + 14800|0); //@line 196 "./src/cpp/unrar/archive.cpp"
  HEAP8[$183>>0] = 1; //@line 196 "./src/cpp/unrar/archive.cpp"
 }
 while(1) {
  $184 = (__ZN7Archive10ReadHeaderEv($21)|0); //@line 200 "./src/cpp/unrar/archive.cpp"
  $185 = ($184|0)!=(0); //@line 200 "./src/cpp/unrar/archive.cpp"
  if (!($185)) {
   break;
  }
  $186 = (__ZN7Archive13GetHeaderTypeEv($21)|0); //@line 202 "./src/cpp/unrar/archive.cpp"
  $14 = $186; //@line 202 "./src/cpp/unrar/archive.cpp"
  $187 = $14; //@line 205 "./src/cpp/unrar/archive.cpp"
  $188 = ($187|0)==(1); //@line 205 "./src/cpp/unrar/archive.cpp"
  if ($188) {
   break;
  }
  $189 = ((($21)) + 14800|0); //@line 205 "./src/cpp/unrar/archive.cpp"
  $190 = HEAP8[$189>>0]|0; //@line 205 "./src/cpp/unrar/archive.cpp"
  $191 = $190&1; //@line 205 "./src/cpp/unrar/archive.cpp"
  $192 = $14; //@line 205 "./src/cpp/unrar/archive.cpp"
  $193 = ($192|0)==(4); //@line 205 "./src/cpp/unrar/archive.cpp"
  $or$cond9 = $191 & $193; //@line 205 "./src/cpp/unrar/archive.cpp"
  if ($or$cond9) {
   break;
  }
  __ZN7Archive10SeekToNextEv($21); //@line 207 "./src/cpp/unrar/archive.cpp"
 }
 $194 = ((($21)) + 56877|0); //@line 213 "./src/cpp/unrar/archive.cpp"
 $195 = HEAP8[$194>>0]|0; //@line 213 "./src/cpp/unrar/archive.cpp"
 $196 = $195&1; //@line 213 "./src/cpp/unrar/archive.cpp"
 if ($196) {
  $197 = $4; //@line 213 "./src/cpp/unrar/archive.cpp"
  $198 = $197&1; //@line 213 "./src/cpp/unrar/archive.cpp"
  if (!($198)) {
   $$expand_i1_val19 = 0; //@line 214 "./src/cpp/unrar/archive.cpp"
   HEAP8[$2>>0] = $$expand_i1_val19; //@line 214 "./src/cpp/unrar/archive.cpp"
   $$pre_trunc = HEAP8[$2>>0]|0; //@line 269 "./src/cpp/unrar/archive.cpp"
   $312 = $$pre_trunc&1; //@line 269 "./src/cpp/unrar/archive.cpp"
   STACKTOP = sp;return ($312|0); //@line 269 "./src/cpp/unrar/archive.cpp"
  }
 }
 __ZN7Archive10SeekToNextEv($21); //@line 216 "./src/cpp/unrar/archive.cpp"
 $199 = ((($21)) + 56876|0); //@line 217 "./src/cpp/unrar/archive.cpp"
 $200 = HEAP8[$199>>0]|0; //@line 217 "./src/cpp/unrar/archive.cpp"
 $201 = $200&1; //@line 217 "./src/cpp/unrar/archive.cpp"
 if ($201) {
  $202 = ((($21)) + 24|0); //@line 219 "./src/cpp/unrar/archive.cpp"
  __Z5uiMsgIPwEv14UIMESSAGE_CODET_(25,$202); //@line 219 "./src/cpp/unrar/archive.cpp"
  $203 = $4; //@line 220 "./src/cpp/unrar/archive.cpp"
  $204 = $203&1; //@line 220 "./src/cpp/unrar/archive.cpp"
  if (!($204)) {
   $$expand_i1_val21 = 0; //@line 221 "./src/cpp/unrar/archive.cpp"
   HEAP8[$2>>0] = $$expand_i1_val21; //@line 221 "./src/cpp/unrar/archive.cpp"
   $$pre_trunc = HEAP8[$2>>0]|0; //@line 269 "./src/cpp/unrar/archive.cpp"
   $312 = $$pre_trunc&1; //@line 269 "./src/cpp/unrar/archive.cpp"
   STACKTOP = sp;return ($312|0); //@line 269 "./src/cpp/unrar/archive.cpp"
  }
 }
 $205 = ((($21)) + 21304|0); //@line 224 "./src/cpp/unrar/archive.cpp"
 $206 = ((($205)) + 28|0); //@line 224 "./src/cpp/unrar/archive.cpp"
 $207 = HEAP8[$206>>0]|0; //@line 224 "./src/cpp/unrar/archive.cpp"
 $208 = $207&1; //@line 224 "./src/cpp/unrar/archive.cpp"
 $209 = ((($21)) + 56862|0); //@line 224 "./src/cpp/unrar/archive.cpp"
 $210 = $208&1; //@line 224 "./src/cpp/unrar/archive.cpp"
 HEAP8[$209>>0] = $210; //@line 224 "./src/cpp/unrar/archive.cpp"
 $211 = ((($21)) + 14800|0); //@line 233 "./src/cpp/unrar/archive.cpp"
 $212 = HEAP8[$211>>0]|0; //@line 233 "./src/cpp/unrar/archive.cpp"
 $213 = $212&1; //@line 233 "./src/cpp/unrar/archive.cpp"
 if ($213) {
  $214 = ((($21)) + 56868|0); //@line 233 "./src/cpp/unrar/archive.cpp"
  $215 = HEAP8[$214>>0]|0; //@line 233 "./src/cpp/unrar/archive.cpp"
  $216 = $215&1; //@line 233 "./src/cpp/unrar/archive.cpp"
  if (!($216)) {
   label = 54;
  }
 } else {
  label = 54;
 }
 if ((label|0) == 54) {
  __ZN11SaveFilePosC2ER4File($15,$21); //@line 235 "./src/cpp/unrar/archive.cpp"
  $217 = ((($21)) + 56840|0); //@line 236 "./src/cpp/unrar/archive.cpp"
  $218 = $217; //@line 236 "./src/cpp/unrar/archive.cpp"
  $219 = $218; //@line 236 "./src/cpp/unrar/archive.cpp"
  $220 = HEAP32[$219>>2]|0; //@line 236 "./src/cpp/unrar/archive.cpp"
  $221 = (($218) + 4)|0; //@line 236 "./src/cpp/unrar/archive.cpp"
  $222 = $221; //@line 236 "./src/cpp/unrar/archive.cpp"
  $223 = HEAP32[$222>>2]|0; //@line 236 "./src/cpp/unrar/archive.cpp"
  $224 = $16; //@line 236 "./src/cpp/unrar/archive.cpp"
  $225 = $224; //@line 236 "./src/cpp/unrar/archive.cpp"
  HEAP32[$225>>2] = $220; //@line 236 "./src/cpp/unrar/archive.cpp"
  $226 = (($224) + 4)|0; //@line 236 "./src/cpp/unrar/archive.cpp"
  $227 = $226; //@line 236 "./src/cpp/unrar/archive.cpp"
  HEAP32[$227>>2] = $223; //@line 236 "./src/cpp/unrar/archive.cpp"
  $228 = ((($21)) + 56848|0); //@line 236 "./src/cpp/unrar/archive.cpp"
  $229 = $228; //@line 236 "./src/cpp/unrar/archive.cpp"
  $230 = $229; //@line 236 "./src/cpp/unrar/archive.cpp"
  $231 = HEAP32[$230>>2]|0; //@line 236 "./src/cpp/unrar/archive.cpp"
  $232 = (($229) + 4)|0; //@line 236 "./src/cpp/unrar/archive.cpp"
  $233 = $232; //@line 236 "./src/cpp/unrar/archive.cpp"
  $234 = HEAP32[$233>>2]|0; //@line 236 "./src/cpp/unrar/archive.cpp"
  $235 = $17; //@line 236 "./src/cpp/unrar/archive.cpp"
  $236 = $235; //@line 236 "./src/cpp/unrar/archive.cpp"
  HEAP32[$236>>2] = $231; //@line 236 "./src/cpp/unrar/archive.cpp"
  $237 = (($235) + 4)|0; //@line 236 "./src/cpp/unrar/archive.cpp"
  $238 = $237; //@line 236 "./src/cpp/unrar/archive.cpp"
  HEAP32[$238>>2] = $234; //@line 236 "./src/cpp/unrar/archive.cpp"
  $239 = ((($21)) + 14796|0); //@line 237 "./src/cpp/unrar/archive.cpp"
  $240 = HEAP32[$239>>2]|0; //@line 237 "./src/cpp/unrar/archive.cpp"
  $18 = $240; //@line 237 "./src/cpp/unrar/archive.cpp"
  while(1) {
   __THREW__ = 0;
   $241 = (invoke_ii(85,($21|0))|0); //@line 239 "./src/cpp/unrar/archive.cpp"
   $242 = __THREW__; __THREW__ = 0;
   $243 = $242&1;
   if ($243) {
    label = 62;
    break;
   }
   $244 = ($241|0)!=(0); //@line 239 "./src/cpp/unrar/archive.cpp"
   if (!($244)) {
    break;
   }
   __THREW__ = 0;
   $245 = (invoke_ii(72,($21|0))|0); //@line 241 "./src/cpp/unrar/archive.cpp"
   $246 = __THREW__; __THREW__ = 0;
   $247 = $246&1;
   if ($247) {
    label = 62;
    break;
   }
   $19 = $245; //@line 241 "./src/cpp/unrar/archive.cpp"
   $248 = $19; //@line 242 "./src/cpp/unrar/archive.cpp"
   $249 = ($248|0)==(3); //@line 242 "./src/cpp/unrar/archive.cpp"
   if ($249) {
    $250 = ((($21)) + 56861|0); //@line 248 "./src/cpp/unrar/archive.cpp"
    $251 = HEAP8[$250>>0]|0; //@line 248 "./src/cpp/unrar/archive.cpp"
    $252 = $251&1; //@line 248 "./src/cpp/unrar/archive.cpp"
    if ($252) {
     $253 = ((($21)) + 38640|0); //@line 248 "./src/cpp/unrar/archive.cpp"
     $254 = ((($253)) + 8328|0); //@line 248 "./src/cpp/unrar/archive.cpp"
     $255 = HEAP8[$254>>0]|0; //@line 248 "./src/cpp/unrar/archive.cpp"
     $256 = $255&1; //@line 248 "./src/cpp/unrar/archive.cpp"
     $257 = $256 ^ 1; //@line 248 "./src/cpp/unrar/archive.cpp"
     $260 = $257;
    } else {
     $260 = 0;
    }
    $258 = ((($21)) + 56865|0); //@line 248 "./src/cpp/unrar/archive.cpp"
    $259 = $260&1; //@line 248 "./src/cpp/unrar/archive.cpp"
    HEAP8[$258>>0] = $259; //@line 248 "./src/cpp/unrar/archive.cpp"
   } else {
    $263 = $19; //@line 251 "./src/cpp/unrar/archive.cpp"
    $264 = ($263|0)==(2); //@line 251 "./src/cpp/unrar/archive.cpp"
    if ($264) {
     label = 64;
     break;
    }
    $276 = $19; //@line 257 "./src/cpp/unrar/archive.cpp"
    $277 = ($276|0)==(5); //@line 257 "./src/cpp/unrar/archive.cpp"
    if ($277) {
     break;
    }
   }
   __THREW__ = 0;
   invoke_vi(79,($21|0)); //@line 259 "./src/cpp/unrar/archive.cpp"
   $278 = __THREW__; __THREW__ = 0;
   $279 = $278&1;
   if ($279) {
    label = 62;
    break;
   }
  }
  if ((label|0) == 62) {
   $261 = ___cxa_find_matching_catch_2()|0;
   $262 = tempRet0;
   $8 = $261; //@line 269 "./src/cpp/unrar/archive.cpp"
   $9 = $262; //@line 269 "./src/cpp/unrar/archive.cpp"
   __ZN11SaveFilePosD2Ev($15); //@line 264 "./src/cpp/unrar/archive.cpp"
   $313 = $8; //@line 174 "./src/cpp/unrar/archive.cpp"
   $314 = $9; //@line 174 "./src/cpp/unrar/archive.cpp"
   ___resumeException($313|0);
   // unreachable;
  }
  if ((label|0) == 64) {
   $265 = ((($21)) + 56861|0); //@line 253 "./src/cpp/unrar/archive.cpp"
   $266 = HEAP8[$265>>0]|0; //@line 253 "./src/cpp/unrar/archive.cpp"
   $267 = $266&1; //@line 253 "./src/cpp/unrar/archive.cpp"
   if ($267) {
    $268 = ((($21)) + 21424|0); //@line 253 "./src/cpp/unrar/archive.cpp"
    $269 = ((($268)) + 8328|0); //@line 253 "./src/cpp/unrar/archive.cpp"
    $270 = HEAP8[$269>>0]|0; //@line 253 "./src/cpp/unrar/archive.cpp"
    $271 = $270&1; //@line 253 "./src/cpp/unrar/archive.cpp"
    $272 = $271 ^ 1; //@line 253 "./src/cpp/unrar/archive.cpp"
    $275 = $272;
   } else {
    $275 = 0;
   }
   $273 = ((($21)) + 56865|0); //@line 253 "./src/cpp/unrar/archive.cpp"
   $274 = $275&1; //@line 253 "./src/cpp/unrar/archive.cpp"
   HEAP8[$273>>0] = $274; //@line 253 "./src/cpp/unrar/archive.cpp"
  }
  $280 = $16; //@line 261 "./src/cpp/unrar/archive.cpp"
  $281 = $280; //@line 261 "./src/cpp/unrar/archive.cpp"
  $282 = HEAP32[$281>>2]|0; //@line 261 "./src/cpp/unrar/archive.cpp"
  $283 = (($280) + 4)|0; //@line 261 "./src/cpp/unrar/archive.cpp"
  $284 = $283; //@line 261 "./src/cpp/unrar/archive.cpp"
  $285 = HEAP32[$284>>2]|0; //@line 261 "./src/cpp/unrar/archive.cpp"
  $286 = ((($21)) + 56840|0); //@line 261 "./src/cpp/unrar/archive.cpp"
  $287 = $286; //@line 261 "./src/cpp/unrar/archive.cpp"
  $288 = $287; //@line 261 "./src/cpp/unrar/archive.cpp"
  HEAP32[$288>>2] = $282; //@line 261 "./src/cpp/unrar/archive.cpp"
  $289 = (($287) + 4)|0; //@line 261 "./src/cpp/unrar/archive.cpp"
  $290 = $289; //@line 261 "./src/cpp/unrar/archive.cpp"
  HEAP32[$290>>2] = $285; //@line 261 "./src/cpp/unrar/archive.cpp"
  $291 = $17; //@line 262 "./src/cpp/unrar/archive.cpp"
  $292 = $291; //@line 262 "./src/cpp/unrar/archive.cpp"
  $293 = HEAP32[$292>>2]|0; //@line 262 "./src/cpp/unrar/archive.cpp"
  $294 = (($291) + 4)|0; //@line 262 "./src/cpp/unrar/archive.cpp"
  $295 = $294; //@line 262 "./src/cpp/unrar/archive.cpp"
  $296 = HEAP32[$295>>2]|0; //@line 262 "./src/cpp/unrar/archive.cpp"
  $297 = ((($21)) + 56848|0); //@line 262 "./src/cpp/unrar/archive.cpp"
  $298 = $297; //@line 262 "./src/cpp/unrar/archive.cpp"
  $299 = $298; //@line 262 "./src/cpp/unrar/archive.cpp"
  HEAP32[$299>>2] = $293; //@line 262 "./src/cpp/unrar/archive.cpp"
  $300 = (($298) + 4)|0; //@line 262 "./src/cpp/unrar/archive.cpp"
  $301 = $300; //@line 262 "./src/cpp/unrar/archive.cpp"
  HEAP32[$301>>2] = $296; //@line 262 "./src/cpp/unrar/archive.cpp"
  $302 = $18; //@line 263 "./src/cpp/unrar/archive.cpp"
  $303 = ((($21)) + 14796|0); //@line 263 "./src/cpp/unrar/archive.cpp"
  HEAP32[$303>>2] = $302; //@line 263 "./src/cpp/unrar/archive.cpp"
  __ZN11SaveFilePosD2Ev($15); //@line 264 "./src/cpp/unrar/archive.cpp"
 }
 $304 = ((($21)) + 56861|0); //@line 265 "./src/cpp/unrar/archive.cpp"
 $305 = HEAP8[$304>>0]|0; //@line 265 "./src/cpp/unrar/archive.cpp"
 $306 = $305&1; //@line 265 "./src/cpp/unrar/archive.cpp"
 if ($306) {
  $307 = ((($21)) + 56865|0); //@line 265 "./src/cpp/unrar/archive.cpp"
  $308 = HEAP8[$307>>0]|0; //@line 265 "./src/cpp/unrar/archive.cpp"
  $309 = $308&1; //@line 265 "./src/cpp/unrar/archive.cpp"
  if ($309) {
   label = 72;
  }
 } else {
  label = 72;
 }
 if ((label|0) == 72) {
  $310 = ((($21)) + 56932|0); //@line 266 "./src/cpp/unrar/archive.cpp"
  $311 = ((($21)) + 24|0); //@line 266 "./src/cpp/unrar/archive.cpp"
  (_wcscpy($310,$311)|0); //@line 266 "./src/cpp/unrar/archive.cpp"
 }
 $$expand_i1_val23 = 1; //@line 268 "./src/cpp/unrar/archive.cpp"
 HEAP8[$2>>0] = $$expand_i1_val23; //@line 268 "./src/cpp/unrar/archive.cpp"
 $$pre_trunc = HEAP8[$2>>0]|0; //@line 269 "./src/cpp/unrar/archive.cpp"
 $312 = $$pre_trunc&1; //@line 269 "./src/cpp/unrar/archive.cpp"
 STACKTOP = sp;return ($312|0); //@line 269 "./src/cpp/unrar/archive.cpp"
}
function __Z5uiMsgIPwS0_Ev14UIMESSAGE_CODET_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 150 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStoreC2E14UIMESSAGE_CODE($6,$7); //@line 150 "./src/cpp/unrar/ui.hpp"
 $8 = $4; //@line 151 "./src/cpp/unrar/ui.hpp"
 $9 = (__ZN10uiMsgStorelsEPKw($6,$8)|0); //@line 151 "./src/cpp/unrar/ui.hpp"
 $10 = $5; //@line 151 "./src/cpp/unrar/ui.hpp"
 (__ZN10uiMsgStorelsEPKw($9,$10)|0); //@line 151 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStore3MsgEv($6); //@line 152 "./src/cpp/unrar/ui.hpp"
 STACKTOP = sp;return; //@line 153 "./src/cpp/unrar/ui.hpp"
}
function __ZN7Archive11IsSignatureEPKhj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 103 "./src/cpp/unrar/archive.cpp"
 $5 = $3; //@line 104 "./src/cpp/unrar/archive.cpp"
 $6 = ($5>>>0)>=(1); //@line 104 "./src/cpp/unrar/archive.cpp"
 do {
  if ($6) {
   $7 = $2; //@line 104 "./src/cpp/unrar/archive.cpp"
   $8 = HEAP8[$7>>0]|0; //@line 104 "./src/cpp/unrar/archive.cpp"
   $9 = $8&255; //@line 104 "./src/cpp/unrar/archive.cpp"
   $10 = ($9|0)==(82); //@line 104 "./src/cpp/unrar/archive.cpp"
   if ($10) {
    $11 = $3; //@line 106 "./src/cpp/unrar/archive.cpp"
    $12 = ($11>>>0)>=(4); //@line 106 "./src/cpp/unrar/archive.cpp"
    if ($12) {
     $13 = $2; //@line 106 "./src/cpp/unrar/archive.cpp"
     $14 = ((($13)) + 1|0); //@line 106 "./src/cpp/unrar/archive.cpp"
     $15 = HEAP8[$14>>0]|0; //@line 106 "./src/cpp/unrar/archive.cpp"
     $16 = $15&255; //@line 106 "./src/cpp/unrar/archive.cpp"
     $17 = ($16|0)==(69); //@line 106 "./src/cpp/unrar/archive.cpp"
     if ($17) {
      $18 = $2; //@line 106 "./src/cpp/unrar/archive.cpp"
      $19 = ((($18)) + 2|0); //@line 106 "./src/cpp/unrar/archive.cpp"
      $20 = HEAP8[$19>>0]|0; //@line 106 "./src/cpp/unrar/archive.cpp"
      $21 = $20&255; //@line 106 "./src/cpp/unrar/archive.cpp"
      $22 = ($21|0)==(126); //@line 106 "./src/cpp/unrar/archive.cpp"
      if ($22) {
       $23 = $2; //@line 106 "./src/cpp/unrar/archive.cpp"
       $24 = ((($23)) + 3|0); //@line 106 "./src/cpp/unrar/archive.cpp"
       $25 = HEAP8[$24>>0]|0; //@line 106 "./src/cpp/unrar/archive.cpp"
       $26 = $25&255; //@line 106 "./src/cpp/unrar/archive.cpp"
       $27 = ($26|0)==(94); //@line 106 "./src/cpp/unrar/archive.cpp"
       if ($27) {
        $4 = 1; //@line 107 "./src/cpp/unrar/archive.cpp"
        break;
       }
      }
     }
    }
    $28 = $3; //@line 110 "./src/cpp/unrar/archive.cpp"
    $29 = ($28>>>0)>=(7); //@line 110 "./src/cpp/unrar/archive.cpp"
    if ($29) {
     $30 = $2; //@line 110 "./src/cpp/unrar/archive.cpp"
     $31 = ((($30)) + 1|0); //@line 110 "./src/cpp/unrar/archive.cpp"
     $32 = HEAP8[$31>>0]|0; //@line 110 "./src/cpp/unrar/archive.cpp"
     $33 = $32&255; //@line 110 "./src/cpp/unrar/archive.cpp"
     $34 = ($33|0)==(97); //@line 110 "./src/cpp/unrar/archive.cpp"
     if ($34) {
      $35 = $2; //@line 110 "./src/cpp/unrar/archive.cpp"
      $36 = ((($35)) + 2|0); //@line 110 "./src/cpp/unrar/archive.cpp"
      $37 = HEAP8[$36>>0]|0; //@line 110 "./src/cpp/unrar/archive.cpp"
      $38 = $37&255; //@line 110 "./src/cpp/unrar/archive.cpp"
      $39 = ($38|0)==(114); //@line 110 "./src/cpp/unrar/archive.cpp"
      if ($39) {
       $40 = $2; //@line 110 "./src/cpp/unrar/archive.cpp"
       $41 = ((($40)) + 3|0); //@line 110 "./src/cpp/unrar/archive.cpp"
       $42 = HEAP8[$41>>0]|0; //@line 110 "./src/cpp/unrar/archive.cpp"
       $43 = $42&255; //@line 110 "./src/cpp/unrar/archive.cpp"
       $44 = ($43|0)==(33); //@line 110 "./src/cpp/unrar/archive.cpp"
       if ($44) {
        $45 = $2; //@line 110 "./src/cpp/unrar/archive.cpp"
        $46 = ((($45)) + 4|0); //@line 110 "./src/cpp/unrar/archive.cpp"
        $47 = HEAP8[$46>>0]|0; //@line 110 "./src/cpp/unrar/archive.cpp"
        $48 = $47&255; //@line 110 "./src/cpp/unrar/archive.cpp"
        $49 = ($48|0)==(26); //@line 110 "./src/cpp/unrar/archive.cpp"
        if ($49) {
         $50 = $2; //@line 110 "./src/cpp/unrar/archive.cpp"
         $51 = ((($50)) + 5|0); //@line 110 "./src/cpp/unrar/archive.cpp"
         $52 = HEAP8[$51>>0]|0; //@line 110 "./src/cpp/unrar/archive.cpp"
         $53 = $52&255; //@line 110 "./src/cpp/unrar/archive.cpp"
         $54 = ($53|0)==(7); //@line 110 "./src/cpp/unrar/archive.cpp"
         if ($54) {
          $55 = $2; //@line 115 "./src/cpp/unrar/archive.cpp"
          $56 = ((($55)) + 6|0); //@line 115 "./src/cpp/unrar/archive.cpp"
          $57 = HEAP8[$56>>0]|0; //@line 115 "./src/cpp/unrar/archive.cpp"
          $58 = $57&255; //@line 115 "./src/cpp/unrar/archive.cpp"
          $59 = ($58|0)==(0); //@line 115 "./src/cpp/unrar/archive.cpp"
          if ($59) {
           $4 = 2; //@line 116 "./src/cpp/unrar/archive.cpp"
           break;
          }
          $60 = $2; //@line 118 "./src/cpp/unrar/archive.cpp"
          $61 = ((($60)) + 6|0); //@line 118 "./src/cpp/unrar/archive.cpp"
          $62 = HEAP8[$61>>0]|0; //@line 118 "./src/cpp/unrar/archive.cpp"
          $63 = $62&255; //@line 118 "./src/cpp/unrar/archive.cpp"
          $64 = ($63|0)==(1); //@line 118 "./src/cpp/unrar/archive.cpp"
          if ($64) {
           $4 = 3; //@line 119 "./src/cpp/unrar/archive.cpp"
           break;
          }
          $65 = $2; //@line 121 "./src/cpp/unrar/archive.cpp"
          $66 = ((($65)) + 6|0); //@line 121 "./src/cpp/unrar/archive.cpp"
          $67 = HEAP8[$66>>0]|0; //@line 121 "./src/cpp/unrar/archive.cpp"
          $68 = $67&255; //@line 121 "./src/cpp/unrar/archive.cpp"
          $69 = ($68|0)==(2); //@line 121 "./src/cpp/unrar/archive.cpp"
          if ($69) {
           $4 = 4; //@line 122 "./src/cpp/unrar/archive.cpp"
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 $70 = $4; //@line 124 "./src/cpp/unrar/archive.cpp"
 STACKTOP = sp;return ($70|0); //@line 124 "./src/cpp/unrar/archive.cpp"
}
function __ZN7Archive10SeekToNextEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 276 "./src/cpp/unrar/archive.cpp"
 $4 = ((($3)) + 16|0); //@line 276 "./src/cpp/unrar/archive.cpp"
 $5 = HEAP32[$4>>2]|0; //@line 276 "./src/cpp/unrar/archive.cpp"
 $6 = ((($2)) + 56848|0); //@line 276 "./src/cpp/unrar/archive.cpp"
 $7 = $6; //@line 276 "./src/cpp/unrar/archive.cpp"
 $8 = $7; //@line 276 "./src/cpp/unrar/archive.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 276 "./src/cpp/unrar/archive.cpp"
 $10 = (($7) + 4)|0; //@line 276 "./src/cpp/unrar/archive.cpp"
 $11 = $10; //@line 276 "./src/cpp/unrar/archive.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 276 "./src/cpp/unrar/archive.cpp"
 FUNCTION_TABLE_viiii[$5 & 255]($2,$9,$12,0); //@line 276 "./src/cpp/unrar/archive.cpp"
 STACKTOP = sp;return; //@line 277 "./src/cpp/unrar/archive.cpp"
}
function __ZN7Archive14FullHeaderSizeEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 56868|0); //@line 287 "./src/cpp/unrar/archive.cpp"
 $6 = HEAP8[$5>>0]|0; //@line 287 "./src/cpp/unrar/archive.cpp"
 $7 = $6&1; //@line 287 "./src/cpp/unrar/archive.cpp"
 do {
  if ($7) {
   $8 = $3; //@line 289 "./src/cpp/unrar/archive.cpp"
   $9 = $3; //@line 289 "./src/cpp/unrar/archive.cpp"
   $10 = $9 ^ -1; //@line 289 "./src/cpp/unrar/archive.cpp"
   $11 = (($10) + 1)|0; //@line 289 "./src/cpp/unrar/archive.cpp"
   $12 = $11 & 15; //@line 289 "./src/cpp/unrar/archive.cpp"
   $13 = (($8) + ($12))|0; //@line 289 "./src/cpp/unrar/archive.cpp"
   $3 = $13; //@line 289 "./src/cpp/unrar/archive.cpp"
   $14 = ((($4)) + 56856|0); //@line 290 "./src/cpp/unrar/archive.cpp"
   $15 = HEAP32[$14>>2]|0; //@line 290 "./src/cpp/unrar/archive.cpp"
   $16 = ($15|0)==(3); //@line 290 "./src/cpp/unrar/archive.cpp"
   $17 = $3;
   if ($16) {
    $18 = (($17) + 16)|0; //@line 291 "./src/cpp/unrar/archive.cpp"
    $3 = $18; //@line 291 "./src/cpp/unrar/archive.cpp"
    break;
   } else {
    $19 = (($17) + 8)|0; //@line 293 "./src/cpp/unrar/archive.cpp"
    $3 = $19; //@line 293 "./src/cpp/unrar/archive.cpp"
    break;
   }
  }
 } while(0);
 $20 = $3; //@line 295 "./src/cpp/unrar/archive.cpp"
 STACKTOP = sp;return ($20|0); //@line 295 "./src/cpp/unrar/archive.cpp"
}
function __ZN7Archive10ReadHeaderEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2;
 $5 = ((($4)) + 56877|0); //@line 8 "./src/cpp/unrar/arcread.cpp"
 $6 = HEAP8[$5>>0]|0; //@line 8 "./src/cpp/unrar/arcread.cpp"
 $7 = $6&1; //@line 8 "./src/cpp/unrar/arcread.cpp"
 if ($7) {
  $1 = 0; //@line 9 "./src/cpp/unrar/arcread.cpp"
  $45 = $1; //@line 35 "./src/cpp/unrar/arcread.cpp"
  STACKTOP = sp;return ($45|0); //@line 35 "./src/cpp/unrar/arcread.cpp"
 }
 $8 = HEAP32[$4>>2]|0; //@line 11 "./src/cpp/unrar/arcread.cpp"
 $9 = ((($8)) + 20|0); //@line 11 "./src/cpp/unrar/arcread.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 11 "./src/cpp/unrar/arcread.cpp"
 $11 = (FUNCTION_TABLE_ii[$10 & 511]($4)|0); //@line 11 "./src/cpp/unrar/arcread.cpp"
 $12 = tempRet0; //@line 11 "./src/cpp/unrar/arcread.cpp"
 $13 = ((($4)) + 56840|0); //@line 11 "./src/cpp/unrar/arcread.cpp"
 $14 = $13; //@line 11 "./src/cpp/unrar/arcread.cpp"
 $15 = $14; //@line 11 "./src/cpp/unrar/arcread.cpp"
 HEAP32[$15>>2] = $11; //@line 11 "./src/cpp/unrar/arcread.cpp"
 $16 = (($14) + 4)|0; //@line 11 "./src/cpp/unrar/arcread.cpp"
 $17 = $16; //@line 11 "./src/cpp/unrar/arcread.cpp"
 HEAP32[$17>>2] = $12; //@line 11 "./src/cpp/unrar/arcread.cpp"
 $18 = ((($4)) + 56856|0); //@line 14 "./src/cpp/unrar/arcread.cpp"
 $19 = HEAP32[$18>>2]|0; //@line 14 "./src/cpp/unrar/arcread.cpp"
 switch ($19|0) {
 case 1:  {
  $20 = (__ZN7Archive12ReadHeader14Ev($4)|0); //@line 18 "./src/cpp/unrar/arcread.cpp"
  $3 = $20; //@line 18 "./src/cpp/unrar/arcread.cpp"
  break;
 }
 case 2:  {
  $21 = (__ZN7Archive12ReadHeader15Ev($4)|0); //@line 22 "./src/cpp/unrar/arcread.cpp"
  $3 = $21; //@line 22 "./src/cpp/unrar/arcread.cpp"
  break;
 }
 case 3:  {
  $22 = (__ZN7Archive12ReadHeader50Ev($4)|0); //@line 25 "./src/cpp/unrar/arcread.cpp"
  $3 = $22; //@line 25 "./src/cpp/unrar/arcread.cpp"
  break;
 }
 default: {
 }
 }
 $23 = $3; //@line 29 "./src/cpp/unrar/arcread.cpp"
 $24 = ($23>>>0)>(0); //@line 29 "./src/cpp/unrar/arcread.cpp"
 if ($24) {
  $25 = ((($4)) + 56848|0); //@line 29 "./src/cpp/unrar/arcread.cpp"
  $26 = $25; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $27 = $26; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $29 = (($26) + 4)|0; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $30 = $29; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $31 = HEAP32[$30>>2]|0; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $32 = ((($4)) + 56840|0); //@line 29 "./src/cpp/unrar/arcread.cpp"
  $33 = $32; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $34 = $33; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $35 = HEAP32[$34>>2]|0; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $36 = (($33) + 4)|0; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $37 = $36; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $38 = HEAP32[$37>>2]|0; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $39 = ($31|0)<($38|0); //@line 29 "./src/cpp/unrar/arcread.cpp"
  $40 = ($28>>>0)<=($35>>>0); //@line 29 "./src/cpp/unrar/arcread.cpp"
  $41 = ($31|0)==($38|0); //@line 29 "./src/cpp/unrar/arcread.cpp"
  $42 = $41 & $40; //@line 29 "./src/cpp/unrar/arcread.cpp"
  $43 = $39 | $42; //@line 29 "./src/cpp/unrar/arcread.cpp"
  if ($43) {
   __ZN7Archive15BrokenHeaderMsgEv($4); //@line 31 "./src/cpp/unrar/arcread.cpp"
   $1 = 0; //@line 32 "./src/cpp/unrar/arcread.cpp"
   $45 = $1; //@line 35 "./src/cpp/unrar/arcread.cpp"
   STACKTOP = sp;return ($45|0); //@line 35 "./src/cpp/unrar/arcread.cpp"
  }
 }
 $44 = $3; //@line 34 "./src/cpp/unrar/arcread.cpp"
 $1 = $44; //@line 34 "./src/cpp/unrar/arcread.cpp"
 $45 = $1; //@line 35 "./src/cpp/unrar/arcread.cpp"
 STACKTOP = sp;return ($45|0); //@line 35 "./src/cpp/unrar/arcread.cpp"
}
function __ZN7Archive12ReadHeader14Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2128|0);
 $2 = sp + 24|0;
 $5 = sp + 2116|0;
 $10 = sp + 64|0;
 $1 = $0;
 $11 = $1;
 __ZN7RawReadC2EP4File($2,$11); //@line 1137 "./src/cpp/unrar/arcread.cpp"
 $12 = ((($11)) + 56840|0); //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $13 = $12; //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $14 = $13; //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $16 = (($13) + 4)|0; //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $17 = $16; //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $19 = ((($11)) + 56872|0); //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $20 = HEAP32[$19>>2]|0; //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $21 = ($18|0)<(0); //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $22 = ($15>>>0)<=($20>>>0); //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $23 = ($18|0)==(0); //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $24 = $23 & $22; //@line 1138 "./src/cpp/unrar/arcread.cpp"
 $25 = $21 | $24; //@line 1138 "./src/cpp/unrar/arcread.cpp"
 do {
  if ($25) {
   __THREW__ = 0;
   (invoke_iii(132,($2|0),7)|0); //@line 1140 "./src/cpp/unrar/arcread.cpp"
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if (!($27)) {
    $28 = ((($11)) + 21304|0); //@line 1141 "./src/cpp/unrar/arcread.cpp"
    __THREW__ = 0;
    invoke_vi(133,($28|0)); //@line 1141 "./src/cpp/unrar/arcread.cpp"
    $29 = __THREW__; __THREW__ = 0;
    $30 = $29&1;
    if (!($30)) {
     __THREW__ = 0;
     (invoke_iiii(95,($2|0),($5|0),4)|0); //@line 1143 "./src/cpp/unrar/arcread.cpp"
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if (!($32)) {
      __THREW__ = 0;
      $33 = (invoke_ii(134,($2|0))|0); //@line 1144 "./src/cpp/unrar/arcread.cpp"
      $34 = __THREW__; __THREW__ = 0;
      $35 = $34&1;
      if (!($35)) {
       $36 = $33&65535; //@line 1144 "./src/cpp/unrar/arcread.cpp"
       $6 = $36; //@line 1144 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       $37 = (invoke_ii(135,($2|0))|0); //@line 1145 "./src/cpp/unrar/arcread.cpp"
       $38 = __THREW__; __THREW__ = 0;
       $39 = $38&1;
       if (!($39)) {
        $7 = $37; //@line 1145 "./src/cpp/unrar/arcread.cpp"
        $40 = ((($11)) + 56840|0); //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $41 = $40; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $42 = $41; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $43 = HEAP32[$42>>2]|0; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $44 = (($41) + 4)|0; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $45 = $44; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $46 = HEAP32[$45>>2]|0; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $47 = $6; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $48 = (_i64Add(($43|0),($46|0),($47|0),0)|0); //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $49 = tempRet0; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $50 = ((($11)) + 56848|0); //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $51 = $50; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $52 = $51; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        HEAP32[$52>>2] = $48; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $53 = (($51) + 4)|0; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $54 = $53; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        HEAP32[$54>>2] = $49; //@line 1146 "./src/cpp/unrar/arcread.cpp"
        $55 = ((($11)) + 14796|0); //@line 1147 "./src/cpp/unrar/arcread.cpp"
        HEAP32[$55>>2] = 1; //@line 1147 "./src/cpp/unrar/arcread.cpp"
        $56 = $7; //@line 1149 "./src/cpp/unrar/arcread.cpp"
        $57 = $56&255; //@line 1149 "./src/cpp/unrar/arcread.cpp"
        $58 = $57 & 1; //@line 1149 "./src/cpp/unrar/arcread.cpp"
        $59 = ($58|0)!=(0); //@line 1149 "./src/cpp/unrar/arcread.cpp"
        $60 = ((($11)) + 56861|0); //@line 1149 "./src/cpp/unrar/arcread.cpp"
        $61 = $59&1; //@line 1149 "./src/cpp/unrar/arcread.cpp"
        HEAP8[$60>>0] = $61; //@line 1149 "./src/cpp/unrar/arcread.cpp"
        $62 = $7; //@line 1150 "./src/cpp/unrar/arcread.cpp"
        $63 = $62&255; //@line 1150 "./src/cpp/unrar/arcread.cpp"
        $64 = $63 & 8; //@line 1150 "./src/cpp/unrar/arcread.cpp"
        $65 = ($64|0)!=(0); //@line 1150 "./src/cpp/unrar/arcread.cpp"
        $66 = ((($11)) + 56860|0); //@line 1150 "./src/cpp/unrar/arcread.cpp"
        $67 = $65&1; //@line 1150 "./src/cpp/unrar/arcread.cpp"
        HEAP8[$66>>0] = $67; //@line 1150 "./src/cpp/unrar/arcread.cpp"
        $68 = $7; //@line 1151 "./src/cpp/unrar/arcread.cpp"
        $69 = $68&255; //@line 1151 "./src/cpp/unrar/arcread.cpp"
        $70 = $69 & 4; //@line 1151 "./src/cpp/unrar/arcread.cpp"
        $71 = ($70|0)!=(0); //@line 1151 "./src/cpp/unrar/arcread.cpp"
        $72 = ((($11)) + 56863|0); //@line 1151 "./src/cpp/unrar/arcread.cpp"
        $73 = $71&1; //@line 1151 "./src/cpp/unrar/arcread.cpp"
        HEAP8[$72>>0] = $73; //@line 1151 "./src/cpp/unrar/arcread.cpp"
        $74 = $7; //@line 1152 "./src/cpp/unrar/arcread.cpp"
        $75 = $74&255; //@line 1152 "./src/cpp/unrar/arcread.cpp"
        $76 = $75 & 2; //@line 1152 "./src/cpp/unrar/arcread.cpp"
        $77 = ($76|0)!=(0); //@line 1152 "./src/cpp/unrar/arcread.cpp"
        $78 = ((($11)) + 21304|0); //@line 1152 "./src/cpp/unrar/arcread.cpp"
        $79 = ((($78)) + 28|0); //@line 1152 "./src/cpp/unrar/arcread.cpp"
        $80 = $77&1; //@line 1152 "./src/cpp/unrar/arcread.cpp"
        HEAP8[$79>>0] = $80; //@line 1152 "./src/cpp/unrar/arcread.cpp"
        $81 = $7; //@line 1153 "./src/cpp/unrar/arcread.cpp"
        $82 = $81&255; //@line 1153 "./src/cpp/unrar/arcread.cpp"
        $83 = $82 & 16; //@line 1153 "./src/cpp/unrar/arcread.cpp"
        $84 = ($83|0)!=(0); //@line 1153 "./src/cpp/unrar/arcread.cpp"
        $85 = ((($11)) + 21304|0); //@line 1153 "./src/cpp/unrar/arcread.cpp"
        $86 = ((($85)) + 29|0); //@line 1153 "./src/cpp/unrar/arcread.cpp"
        $87 = $84&1; //@line 1153 "./src/cpp/unrar/arcread.cpp"
        HEAP8[$86>>0] = $87; //@line 1153 "./src/cpp/unrar/arcread.cpp"
        label = 31;
       }
      }
     }
    }
   }
  } else {
   __THREW__ = 0;
   (invoke_iii(132,($2|0),21)|0); //@line 1157 "./src/cpp/unrar/arcread.cpp"
   $92 = __THREW__; __THREW__ = 0;
   $93 = $92&1;
   if (!($93)) {
    $94 = ((($11)) + 21424|0); //@line 1158 "./src/cpp/unrar/arcread.cpp"
    __THREW__ = 0;
    invoke_vii(136,($94|0),0); //@line 1158 "./src/cpp/unrar/arcread.cpp"
    $95 = __THREW__; __THREW__ = 0;
    $96 = $95&1;
    if (!($96)) {
     $97 = ((($11)) + 21424|0); //@line 1160 "./src/cpp/unrar/arcread.cpp"
     $98 = ((($97)) + 4|0); //@line 1160 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$98>>2] = 2; //@line 1160 "./src/cpp/unrar/arcread.cpp"
     __THREW__ = 0;
     $99 = (invoke_ii(137,($2|0))|0); //@line 1161 "./src/cpp/unrar/arcread.cpp"
     $100 = __THREW__; __THREW__ = 0;
     $101 = $100&1;
     if (!($101)) {
      $102 = ((($11)) + 21424|0); //@line 1161 "./src/cpp/unrar/arcread.cpp"
      $103 = ((($102)) + 20|0); //@line 1161 "./src/cpp/unrar/arcread.cpp"
      HEAP32[$103>>2] = $99; //@line 1161 "./src/cpp/unrar/arcread.cpp"
      __THREW__ = 0;
      $104 = (invoke_ii(137,($2|0))|0); //@line 1162 "./src/cpp/unrar/arcread.cpp"
      $105 = __THREW__; __THREW__ = 0;
      $106 = $105&1;
      if (!($106)) {
       $107 = ((($11)) + 21424|0); //@line 1162 "./src/cpp/unrar/arcread.cpp"
       $108 = ((($107)) + 8272|0); //@line 1162 "./src/cpp/unrar/arcread.cpp"
       $109 = $108; //@line 1162 "./src/cpp/unrar/arcread.cpp"
       $110 = $109; //@line 1162 "./src/cpp/unrar/arcread.cpp"
       HEAP32[$110>>2] = $104; //@line 1162 "./src/cpp/unrar/arcread.cpp"
       $111 = (($109) + 4)|0; //@line 1162 "./src/cpp/unrar/arcread.cpp"
       $112 = $111; //@line 1162 "./src/cpp/unrar/arcread.cpp"
       HEAP32[$112>>2] = 0; //@line 1162 "./src/cpp/unrar/arcread.cpp"
       $113 = ((($11)) + 21424|0); //@line 1163 "./src/cpp/unrar/arcread.cpp"
       $114 = ((($113)) + 8288|0); //@line 1163 "./src/cpp/unrar/arcread.cpp"
       HEAP32[$114>>2] = 1; //@line 1163 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       $115 = (invoke_ii(134,($2|0))|0); //@line 1164 "./src/cpp/unrar/arcread.cpp"
       $116 = __THREW__; __THREW__ = 0;
       $117 = $116&1;
       if (!($117)) {
        $118 = $115&65535; //@line 1164 "./src/cpp/unrar/arcread.cpp"
        $119 = ((($11)) + 21424|0); //@line 1164 "./src/cpp/unrar/arcread.cpp"
        $120 = ((($119)) + 8288|0); //@line 1164 "./src/cpp/unrar/arcread.cpp"
        $121 = ((($120)) + 4|0); //@line 1164 "./src/cpp/unrar/arcread.cpp"
        HEAP32[$121>>2] = $118; //@line 1164 "./src/cpp/unrar/arcread.cpp"
        __THREW__ = 0;
        $122 = (invoke_ii(134,($2|0))|0); //@line 1165 "./src/cpp/unrar/arcread.cpp"
        $123 = __THREW__; __THREW__ = 0;
        $124 = $123&1;
        if (!($124)) {
         $125 = $122&65535; //@line 1165 "./src/cpp/unrar/arcread.cpp"
         $126 = ((($11)) + 21424|0); //@line 1165 "./src/cpp/unrar/arcread.cpp"
         $127 = ((($126)) + 12|0); //@line 1165 "./src/cpp/unrar/arcread.cpp"
         HEAP32[$127>>2] = $125; //@line 1165 "./src/cpp/unrar/arcread.cpp"
         __THREW__ = 0;
         $128 = (invoke_ii(137,($2|0))|0); //@line 1166 "./src/cpp/unrar/arcread.cpp"
         $129 = __THREW__; __THREW__ = 0;
         $130 = $129&1;
         if (!($130)) {
          $8 = $128; //@line 1166 "./src/cpp/unrar/arcread.cpp"
          __THREW__ = 0;
          $131 = (invoke_ii(135,($2|0))|0); //@line 1167 "./src/cpp/unrar/arcread.cpp"
          $132 = __THREW__; __THREW__ = 0;
          $133 = $132&1;
          if (!($133)) {
           $134 = $131&255; //@line 1167 "./src/cpp/unrar/arcread.cpp"
           $135 = ((($11)) + 21424|0); //@line 1167 "./src/cpp/unrar/arcread.cpp"
           $136 = ((($135)) + 28|0); //@line 1167 "./src/cpp/unrar/arcread.cpp"
           HEAP32[$136>>2] = $134; //@line 1167 "./src/cpp/unrar/arcread.cpp"
           __THREW__ = 0;
           $137 = (invoke_ii(135,($2|0))|0); //@line 1168 "./src/cpp/unrar/arcread.cpp"
           $138 = __THREW__; __THREW__ = 0;
           $139 = $138&1;
           if (!($139)) {
            $140 = $137&255; //@line 1168 "./src/cpp/unrar/arcread.cpp"
            $141 = $140 | 32768; //@line 1168 "./src/cpp/unrar/arcread.cpp"
            $142 = ((($11)) + 21424|0); //@line 1168 "./src/cpp/unrar/arcread.cpp"
            $143 = ((($142)) + 8|0); //@line 1168 "./src/cpp/unrar/arcread.cpp"
            HEAP32[$143>>2] = $141; //@line 1168 "./src/cpp/unrar/arcread.cpp"
            __THREW__ = 0;
            $144 = (invoke_ii(135,($2|0))|0); //@line 1169 "./src/cpp/unrar/arcread.cpp"
            $145 = __THREW__; __THREW__ = 0;
            $146 = $145&1;
            if (!($146)) {
             $147 = $144&255; //@line 1169 "./src/cpp/unrar/arcread.cpp"
             $148 = ($147|0)==(2); //@line 1169 "./src/cpp/unrar/arcread.cpp"
             $149 = $148 ? 13 : 10; //@line 1169 "./src/cpp/unrar/arcread.cpp"
             $150 = $149&255; //@line 1169 "./src/cpp/unrar/arcread.cpp"
             $151 = ((($11)) + 21424|0); //@line 1169 "./src/cpp/unrar/arcread.cpp"
             $152 = ((($151)) + 25|0); //@line 1169 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$152>>0] = $150; //@line 1169 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $153 = (invoke_ii(135,($2|0))|0); //@line 1170 "./src/cpp/unrar/arcread.cpp"
             $154 = __THREW__; __THREW__ = 0;
             $155 = $154&1;
             if (!($155)) {
              $156 = $153&255; //@line 1170 "./src/cpp/unrar/arcread.cpp"
              $9 = $156; //@line 1170 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $157 = (invoke_ii(135,($2|0))|0); //@line 1171 "./src/cpp/unrar/arcread.cpp"
              $158 = __THREW__; __THREW__ = 0;
              $159 = $158&1;
              if (!($159)) {
               $160 = ((($11)) + 21424|0); //@line 1171 "./src/cpp/unrar/arcread.cpp"
               $161 = ((($160)) + 26|0); //@line 1171 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$161>>0] = $157; //@line 1171 "./src/cpp/unrar/arcread.cpp"
               $162 = ((($11)) + 21424|0); //@line 1173 "./src/cpp/unrar/arcread.cpp"
               $163 = ((($162)) + 8|0); //@line 1173 "./src/cpp/unrar/arcread.cpp"
               $164 = HEAP32[$163>>2]|0; //@line 1173 "./src/cpp/unrar/arcread.cpp"
               $165 = $164 & 1; //@line 1173 "./src/cpp/unrar/arcread.cpp"
               $166 = ($165|0)!=(0); //@line 1173 "./src/cpp/unrar/arcread.cpp"
               $167 = ((($11)) + 21424|0); //@line 1173 "./src/cpp/unrar/arcread.cpp"
               $168 = ((($167)) + 8328|0); //@line 1173 "./src/cpp/unrar/arcread.cpp"
               $169 = $166&1; //@line 1173 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$168>>0] = $169; //@line 1173 "./src/cpp/unrar/arcread.cpp"
               $170 = ((($11)) + 21424|0); //@line 1174 "./src/cpp/unrar/arcread.cpp"
               $171 = ((($170)) + 8|0); //@line 1174 "./src/cpp/unrar/arcread.cpp"
               $172 = HEAP32[$171>>2]|0; //@line 1174 "./src/cpp/unrar/arcread.cpp"
               $173 = $172 & 2; //@line 1174 "./src/cpp/unrar/arcread.cpp"
               $174 = ($173|0)!=(0); //@line 1174 "./src/cpp/unrar/arcread.cpp"
               $175 = ((($11)) + 21424|0); //@line 1174 "./src/cpp/unrar/arcread.cpp"
               $176 = ((($175)) + 8329|0); //@line 1174 "./src/cpp/unrar/arcread.cpp"
               $177 = $174&1; //@line 1174 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$176>>0] = $177; //@line 1174 "./src/cpp/unrar/arcread.cpp"
               $178 = ((($11)) + 21424|0); //@line 1175 "./src/cpp/unrar/arcread.cpp"
               $179 = ((($178)) + 8|0); //@line 1175 "./src/cpp/unrar/arcread.cpp"
               $180 = HEAP32[$179>>2]|0; //@line 1175 "./src/cpp/unrar/arcread.cpp"
               $181 = $180 & 4; //@line 1175 "./src/cpp/unrar/arcread.cpp"
               $182 = ($181|0)!=(0); //@line 1175 "./src/cpp/unrar/arcread.cpp"
               $183 = ((($11)) + 21424|0); //@line 1175 "./src/cpp/unrar/arcread.cpp"
               $184 = ((($183)) + 8331|0); //@line 1175 "./src/cpp/unrar/arcread.cpp"
               $185 = $182&1; //@line 1175 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$184>>0] = $185; //@line 1175 "./src/cpp/unrar/arcread.cpp"
               $186 = ((($11)) + 21424|0); //@line 1176 "./src/cpp/unrar/arcread.cpp"
               $187 = ((($186)) + 8331|0); //@line 1176 "./src/cpp/unrar/arcread.cpp"
               $188 = HEAP8[$187>>0]|0; //@line 1176 "./src/cpp/unrar/arcread.cpp"
               $189 = $188&1; //@line 1176 "./src/cpp/unrar/arcread.cpp"
               $190 = $189 ? 1 : 0; //@line 1176 "./src/cpp/unrar/arcread.cpp"
               $191 = ((($11)) + 21424|0); //@line 1176 "./src/cpp/unrar/arcread.cpp"
               $192 = ((($191)) + 8332|0); //@line 1176 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$192>>2] = $190; //@line 1176 "./src/cpp/unrar/arcread.cpp"
               $193 = ((($11)) + 21424|0); //@line 1178 "./src/cpp/unrar/arcread.cpp"
               $194 = ((($193)) + 20|0); //@line 1178 "./src/cpp/unrar/arcread.cpp"
               $195 = HEAP32[$194>>2]|0; //@line 1178 "./src/cpp/unrar/arcread.cpp"
               $196 = ((($11)) + 21424|0); //@line 1178 "./src/cpp/unrar/arcread.cpp"
               $197 = ((($196)) + 8264|0); //@line 1178 "./src/cpp/unrar/arcread.cpp"
               $198 = $197; //@line 1178 "./src/cpp/unrar/arcread.cpp"
               $199 = $198; //@line 1178 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$199>>2] = $195; //@line 1178 "./src/cpp/unrar/arcread.cpp"
               $200 = (($198) + 4)|0; //@line 1178 "./src/cpp/unrar/arcread.cpp"
               $201 = $200; //@line 1178 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$201>>2] = 0; //@line 1178 "./src/cpp/unrar/arcread.cpp"
               $202 = ((($11)) + 21424|0); //@line 1179 "./src/cpp/unrar/arcread.cpp"
               $203 = ((($202)) + 8420|0); //@line 1179 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$203>>2] = 65536; //@line 1179 "./src/cpp/unrar/arcread.cpp"
               $204 = ((($11)) + 21424|0); //@line 1181 "./src/cpp/unrar/arcread.cpp"
               $205 = ((($204)) + 8240|0); //@line 1181 "./src/cpp/unrar/arcread.cpp"
               $206 = $8; //@line 1181 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               invoke_vii(138,($205|0),($206|0)); //@line 1181 "./src/cpp/unrar/arcread.cpp"
               $207 = __THREW__; __THREW__ = 0;
               $208 = $207&1;
               if (!($208)) {
                $209 = $9; //@line 1183 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                (invoke_iii(132,($2|0),($209|0))|0); //@line 1183 "./src/cpp/unrar/arcread.cpp"
                $210 = __THREW__; __THREW__ = 0;
                $211 = $210&1;
                if (!($211)) {
                 $212 = $9; //@line 1186 "./src/cpp/unrar/arcread.cpp"
                 $213 = ($212>>>0)<(2048); //@line 1186 "./src/cpp/unrar/arcread.cpp"
                 $214 = $9; //@line 1186 "./src/cpp/unrar/arcread.cpp"
                 $215 = $213 ? $214 : 2048; //@line 1186 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 (invoke_iiii(95,($2|0),($10|0),($215|0))|0); //@line 1186 "./src/cpp/unrar/arcread.cpp"
                 $216 = __THREW__; __THREW__ = 0;
                 $217 = $216&1;
                 if (!($217)) {
                  $218 = $9; //@line 1187 "./src/cpp/unrar/arcread.cpp"
                  $219 = (($10) + ($218)|0); //@line 1187 "./src/cpp/unrar/arcread.cpp"
                  HEAP8[$219>>0] = 0; //@line 1187 "./src/cpp/unrar/arcread.cpp"
                  __THREW__ = 0;
                  invoke_viii(139,($10|0),($10|0),2048); //@line 1188 "./src/cpp/unrar/arcread.cpp"
                  $220 = __THREW__; __THREW__ = 0;
                  $221 = $220&1;
                  if (!($221)) {
                   $222 = ((($11)) + 21424|0); //@line 1189 "./src/cpp/unrar/arcread.cpp"
                   $223 = ((($222)) + 32|0); //@line 1189 "./src/cpp/unrar/arcread.cpp"
                   __THREW__ = 0;
                   (invoke_iiii(80,($10|0),($223|0),2048)|0); //@line 1189 "./src/cpp/unrar/arcread.cpp"
                   $224 = __THREW__; __THREW__ = 0;
                   $225 = $224&1;
                   if (!($225)) {
                    $226 = ((($11)) + 21424|0); //@line 1190 "./src/cpp/unrar/arcread.cpp"
                    $227 = ((($226)) + 32|0); //@line 1190 "./src/cpp/unrar/arcread.cpp"
                    __THREW__ = 0;
                    invoke_vii(140,($11|0),($227|0)); //@line 1190 "./src/cpp/unrar/arcread.cpp"
                    $228 = __THREW__; __THREW__ = 0;
                    $229 = $228&1;
                    if (!($229)) {
                     __THREW__ = 0;
                     $230 = (invoke_ii(141,($2|0))|0); //@line 1192 "./src/cpp/unrar/arcread.cpp"
                     $231 = __THREW__; __THREW__ = 0;
                     $232 = $231&1;
                     if ($232) {
                      break;
                     }
                     $233 = ($230|0)!=(0); //@line 1192 "./src/cpp/unrar/arcread.cpp"
                     if ($233) {
                      $234 = ((($11)) + 56840|0); //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $235 = $234; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $236 = $235; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $237 = HEAP32[$236>>2]|0; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $238 = (($235) + 4)|0; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $239 = $238; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $240 = HEAP32[$239>>2]|0; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $241 = ((($11)) + 21424|0); //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $242 = ((($241)) + 12|0); //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $243 = HEAP32[$242>>2]|0; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $244 = (_i64Add(($237|0),($240|0),($243|0),0)|0); //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $245 = tempRet0; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $246 = ((($11)) + 21424|0); //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $247 = ((($246)) + 8264|0); //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $248 = $247; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $249 = $248; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $250 = HEAP32[$249>>2]|0; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $251 = (($248) + 4)|0; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $252 = $251; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $253 = HEAP32[$252>>2]|0; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $254 = (_i64Add(($244|0),($245|0),($250|0),($253|0))|0); //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $255 = tempRet0; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $256 = ((($11)) + 56848|0); //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $257 = $256; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $258 = $257; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      HEAP32[$258>>2] = $254; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $259 = (($257) + 4)|0; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      $260 = $259; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                      HEAP32[$260>>2] = $255; //@line 1193 "./src/cpp/unrar/arcread.cpp"
                     }
                     $261 = ((($11)) + 14796|0); //@line 1194 "./src/cpp/unrar/arcread.cpp"
                     HEAP32[$261>>2] = 2; //@line 1194 "./src/cpp/unrar/arcread.cpp"
                     label = 31;
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 31) {
  $262 = ((($11)) + 56848|0); //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $263 = $262; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $264 = $263; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $265 = HEAP32[$264>>2]|0; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $266 = (($263) + 4)|0; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $267 = $266; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $268 = HEAP32[$267>>2]|0; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $269 = ((($11)) + 56840|0); //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $270 = $269; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $271 = $270; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $272 = HEAP32[$271>>2]|0; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $273 = (($270) + 4)|0; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $274 = $273; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $275 = HEAP32[$274>>2]|0; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $276 = ($268|0)>($275|0); //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $277 = ($265>>>0)>($272>>>0); //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $278 = ($268|0)==($275|0); //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $279 = $278 & $277; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $280 = $276 | $279; //@line 1196 "./src/cpp/unrar/arcread.cpp"
  if (!($280)) {
   $284 = 0;
   __ZN7RawReadD2Ev($2); //@line 1197 "./src/cpp/unrar/arcread.cpp"
   STACKTOP = sp;return ($284|0); //@line 1197 "./src/cpp/unrar/arcread.cpp"
  }
  __THREW__ = 0;
  $281 = (invoke_ii(141,($2|0))|0); //@line 1196 "./src/cpp/unrar/arcread.cpp"
  $282 = __THREW__; __THREW__ = 0;
  $283 = $282&1;
  if (!($283)) {
   $284 = $281;
   __ZN7RawReadD2Ev($2); //@line 1197 "./src/cpp/unrar/arcread.cpp"
   STACKTOP = sp;return ($284|0); //@line 1197 "./src/cpp/unrar/arcread.cpp"
  }
 }
 $88 = ___cxa_find_matching_catch_2()|0;
 $89 = tempRet0;
 $3 = $88; //@line 1197 "./src/cpp/unrar/arcread.cpp"
 $4 = $89; //@line 1197 "./src/cpp/unrar/arcread.cpp"
 __ZN7RawReadD2Ev($2); //@line 1197 "./src/cpp/unrar/arcread.cpp"
 $90 = $3; //@line 1197 "./src/cpp/unrar/arcread.cpp"
 $91 = $4; //@line 1197 "./src/cpp/unrar/arcread.cpp"
 ___resumeException($90|0);
 // unreachable;
 return (0)|0;
}
function __ZN7Archive12ReadHeader15Ev($0) {
 $0 = $0|0;
 var $$sink = 0, $$sink12 = 0, $$sink14 = 0, $$sink3 = 0, $$sink5 = 0, $$sink8 = 0, $$sink9 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0;
 var $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0;
 var $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0;
 var $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0;
 var $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0;
 var $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0;
 var $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0;
 var $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0;
 var $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0;
 var $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0;
 var $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0;
 var $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0;
 var $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0;
 var $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0;
 var $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0;
 var $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0;
 var $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0;
 var $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0;
 var $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0;
 var $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(8464|0);
 $3 = sp + 192|0;
 $7 = sp + 8448|0;
 $17 = sp + 248|0;
 $19 = sp + 124|0;
 $23 = sp + 24|0;
 $25 = sp + 96|0;
 $30 = sp + 44|0;
 $38 = sp + 8|0;
 $39 = sp;
 $2 = $0;
 $41 = $2;
 __ZN7RawReadC2EP4File($3,$41); //@line 118 "./src/cpp/unrar/arcread.cpp"
 $42 = ((($41)) + 56868|0); //@line 120 "./src/cpp/unrar/arcread.cpp"
 $43 = HEAP8[$42>>0]|0; //@line 120 "./src/cpp/unrar/arcread.cpp"
 $44 = $43&1; //@line 120 "./src/cpp/unrar/arcread.cpp"
 if ($44) {
  $45 = ((($41)) + 56840|0); //@line 120 "./src/cpp/unrar/arcread.cpp"
  $46 = $45; //@line 120 "./src/cpp/unrar/arcread.cpp"
  $47 = $46; //@line 120 "./src/cpp/unrar/arcread.cpp"
  $48 = HEAP32[$47>>2]|0; //@line 120 "./src/cpp/unrar/arcread.cpp"
  $49 = (($46) + 4)|0; //@line 120 "./src/cpp/unrar/arcread.cpp"
  $50 = $49; //@line 120 "./src/cpp/unrar/arcread.cpp"
  $51 = HEAP32[$50>>2]|0; //@line 120 "./src/cpp/unrar/arcread.cpp"
  $52 = ((($41)) + 56872|0); //@line 120 "./src/cpp/unrar/arcread.cpp"
  $53 = HEAP32[$52>>2]|0; //@line 120 "./src/cpp/unrar/arcread.cpp"
  $54 = (_i64Add(($53|0),0,7,0)|0); //@line 120 "./src/cpp/unrar/arcread.cpp"
  $55 = tempRet0; //@line 120 "./src/cpp/unrar/arcread.cpp"
  $56 = ($51|0)>($55|0); //@line 120 "./src/cpp/unrar/arcread.cpp"
  $57 = ($48>>>0)>($54>>>0); //@line 120 "./src/cpp/unrar/arcread.cpp"
  $58 = ($51|0)==($55|0); //@line 120 "./src/cpp/unrar/arcread.cpp"
  $59 = $58 & $57; //@line 120 "./src/cpp/unrar/arcread.cpp"
  $60 = $56 | $59; //@line 120 "./src/cpp/unrar/arcread.cpp"
  $62 = $60;
 } else {
  $62 = 0;
 }
 $61 = $62&1; //@line 120 "./src/cpp/unrar/arcread.cpp"
 $4 = $61; //@line 120 "./src/cpp/unrar/arcread.cpp"
 $63 = $4; //@line 122 "./src/cpp/unrar/arcread.cpp"
 $64 = $63&1; //@line 122 "./src/cpp/unrar/arcread.cpp"
 do {
  if ($64) {
   __THREW__ = 0;
   invoke_vi(142,($41|0)); //@line 127 "./src/cpp/unrar/arcread.cpp"
   $65 = __THREW__; __THREW__ = 0;
   $66 = $65&1;
   if (!($66)) {
    $67 = HEAP32[$41>>2]|0; //@line 130 "./src/cpp/unrar/arcread.cpp"
    $68 = ((($67)) + 12|0); //@line 130 "./src/cpp/unrar/arcread.cpp"
    $69 = HEAP32[$68>>2]|0; //@line 130 "./src/cpp/unrar/arcread.cpp"
    __THREW__ = 0;
    $70 = (invoke_iiii($69|0,($41|0),($7|0),8)|0); //@line 130 "./src/cpp/unrar/arcread.cpp"
    $71 = __THREW__; __THREW__ = 0;
    $72 = $71&1;
    if (!($72)) {
     $73 = ($70|0)!=(8); //@line 130 "./src/cpp/unrar/arcread.cpp"
     if (!($73)) {
      $78 = ((($41)) + 8220|0); //@line 135 "./src/cpp/unrar/arcread.cpp"
      $79 = ((($41)) + 14764|0); //@line 135 "./src/cpp/unrar/arcread.cpp"
      $80 = HEAP32[$79>>2]|0; //@line 135 "./src/cpp/unrar/arcread.cpp"
      $81 = ((($80)) + 41000|0); //@line 135 "./src/cpp/unrar/arcread.cpp"
      __THREW__ = 0;
      (invoke_iiiiiiiiii(144,($78|0),0,4,($81|0),($7|0),(0|0),0,(0|0),(0|0))|0); //@line 135 "./src/cpp/unrar/arcread.cpp"
      $82 = __THREW__; __THREW__ = 0;
      $83 = $82&1;
      if ($83) {
       break;
      }
      $84 = ((($41)) + 8220|0); //@line 136 "./src/cpp/unrar/arcread.cpp"
      __THREW__ = 0;
      invoke_vii(145,($3|0),($84|0)); //@line 136 "./src/cpp/unrar/arcread.cpp"
      $85 = __THREW__; __THREW__ = 0;
      $86 = $85&1;
      if ($86) {
       break;
      } else {
       label = 12;
       break;
      }
     }
     __THREW__ = 0;
     invoke_vi(143,($41|0)); //@line 132 "./src/cpp/unrar/arcread.cpp"
     $74 = __THREW__; __THREW__ = 0;
     $75 = $74&1;
     if (!($75)) {
      $1 = 0; //@line 133 "./src/cpp/unrar/arcread.cpp"
      $8 = 1;
      __ZN7RawReadD2Ev($3); //@line 554 "./src/cpp/unrar/arcread.cpp"
      $1347 = $1; //@line 554 "./src/cpp/unrar/arcread.cpp"
      STACKTOP = sp;return ($1347|0); //@line 554 "./src/cpp/unrar/arcread.cpp"
     }
    }
   }
  } else {
   label = 12;
  }
 } while(0);
 L14: do {
  if ((label|0) == 12) {
   __THREW__ = 0;
   (invoke_iii(132,($3|0),7)|0); //@line 140 "./src/cpp/unrar/arcread.cpp"
   $87 = __THREW__; __THREW__ = 0;
   $88 = $87&1;
   if (!($88)) {
    __THREW__ = 0;
    $89 = (invoke_ii(141,($3|0))|0); //@line 141 "./src/cpp/unrar/arcread.cpp"
    $90 = __THREW__; __THREW__ = 0;
    $91 = $90&1;
    if (!($91)) {
     $92 = ($89|0)==(0); //@line 141 "./src/cpp/unrar/arcread.cpp"
     if ($92) {
      __THREW__ = 0;
      invoke_vi(143,($41|0)); //@line 143 "./src/cpp/unrar/arcread.cpp"
      $93 = __THREW__; __THREW__ = 0;
      $94 = $93&1;
      if ($94) {
       break;
      }
      $1 = 0; //@line 144 "./src/cpp/unrar/arcread.cpp"
      $8 = 1;
      __ZN7RawReadD2Ev($3); //@line 554 "./src/cpp/unrar/arcread.cpp"
      $1347 = $1; //@line 554 "./src/cpp/unrar/arcread.cpp"
      STACKTOP = sp;return ($1347|0); //@line 554 "./src/cpp/unrar/arcread.cpp"
     }
     __THREW__ = 0;
     $95 = (invoke_ii(134,($3|0))|0); //@line 147 "./src/cpp/unrar/arcread.cpp"
     $96 = __THREW__; __THREW__ = 0;
     $97 = $96&1;
     if (!($97)) {
      $98 = $95&65535; //@line 147 "./src/cpp/unrar/arcread.cpp"
      $99 = ((($41)) + 21272|0); //@line 147 "./src/cpp/unrar/arcread.cpp"
      HEAP32[$99>>2] = $98; //@line 147 "./src/cpp/unrar/arcread.cpp"
      $100 = ((($41)) + 21272|0); //@line 149 "./src/cpp/unrar/arcread.cpp"
      __THREW__ = 0;
      invoke_vi(146,($100|0)); //@line 149 "./src/cpp/unrar/arcread.cpp"
      $101 = __THREW__; __THREW__ = 0;
      $102 = $101&1;
      if (!($102)) {
       __THREW__ = 0;
       $103 = (invoke_ii(135,($3|0))|0); //@line 151 "./src/cpp/unrar/arcread.cpp"
       $104 = __THREW__; __THREW__ = 0;
       $105 = $104&1;
       if (!($105)) {
        $106 = $103&255; //@line 151 "./src/cpp/unrar/arcread.cpp"
        $9 = $106; //@line 151 "./src/cpp/unrar/arcread.cpp"
        __THREW__ = 0;
        $107 = (invoke_ii(134,($3|0))|0); //@line 152 "./src/cpp/unrar/arcread.cpp"
        $108 = __THREW__; __THREW__ = 0;
        $109 = $108&1;
        if (!($109)) {
         $110 = $107&65535; //@line 152 "./src/cpp/unrar/arcread.cpp"
         $111 = ((($41)) + 21272|0); //@line 152 "./src/cpp/unrar/arcread.cpp"
         $112 = ((($111)) + 8|0); //@line 152 "./src/cpp/unrar/arcread.cpp"
         HEAP32[$112>>2] = $110; //@line 152 "./src/cpp/unrar/arcread.cpp"
         $113 = ((($41)) + 21272|0); //@line 153 "./src/cpp/unrar/arcread.cpp"
         $114 = ((($113)) + 8|0); //@line 153 "./src/cpp/unrar/arcread.cpp"
         $115 = HEAP32[$114>>2]|0; //@line 153 "./src/cpp/unrar/arcread.cpp"
         $116 = $115 & 16384; //@line 153 "./src/cpp/unrar/arcread.cpp"
         $117 = ($116|0)!=(0); //@line 153 "./src/cpp/unrar/arcread.cpp"
         $118 = ((($41)) + 21272|0); //@line 153 "./src/cpp/unrar/arcread.cpp"
         $119 = ((($118)) + 16|0); //@line 153 "./src/cpp/unrar/arcread.cpp"
         $120 = $117&1; //@line 153 "./src/cpp/unrar/arcread.cpp"
         HEAP8[$119>>0] = $120; //@line 153 "./src/cpp/unrar/arcread.cpp"
         __THREW__ = 0;
         $121 = (invoke_ii(134,($3|0))|0); //@line 154 "./src/cpp/unrar/arcread.cpp"
         $122 = __THREW__; __THREW__ = 0;
         $123 = $122&1;
         if (!($123)) {
          $124 = $121&65535; //@line 154 "./src/cpp/unrar/arcread.cpp"
          $125 = ((($41)) + 21272|0); //@line 154 "./src/cpp/unrar/arcread.cpp"
          $126 = ((($125)) + 12|0); //@line 154 "./src/cpp/unrar/arcread.cpp"
          HEAP32[$126>>2] = $124; //@line 154 "./src/cpp/unrar/arcread.cpp"
          $127 = $9; //@line 156 "./src/cpp/unrar/arcread.cpp"
          $128 = ((($41)) + 21272|0); //@line 156 "./src/cpp/unrar/arcread.cpp"
          $129 = ((($128)) + 4|0); //@line 156 "./src/cpp/unrar/arcread.cpp"
          HEAP32[$129>>2] = $127; //@line 156 "./src/cpp/unrar/arcread.cpp"
          $130 = ((($41)) + 21272|0); //@line 157 "./src/cpp/unrar/arcread.cpp"
          $131 = ((($130)) + 12|0); //@line 157 "./src/cpp/unrar/arcread.cpp"
          $132 = HEAP32[$131>>2]|0; //@line 157 "./src/cpp/unrar/arcread.cpp"
          $133 = ($132>>>0)<(7); //@line 157 "./src/cpp/unrar/arcread.cpp"
          if ($133) {
           __THREW__ = 0;
           invoke_vi(147,($41|0)); //@line 159 "./src/cpp/unrar/arcread.cpp"
           $134 = __THREW__; __THREW__ = 0;
           $135 = $134&1;
           if ($135) {
            break;
           }
           $1 = 0; //@line 160 "./src/cpp/unrar/arcread.cpp"
           $8 = 1;
           __ZN7RawReadD2Ev($3); //@line 554 "./src/cpp/unrar/arcread.cpp"
           $1347 = $1; //@line 554 "./src/cpp/unrar/arcread.cpp"
           STACKTOP = sp;return ($1347|0); //@line 554 "./src/cpp/unrar/arcread.cpp"
          }
          $136 = ((($41)) + 21272|0); //@line 166 "./src/cpp/unrar/arcread.cpp"
          $137 = ((($136)) + 4|0); //@line 166 "./src/cpp/unrar/arcread.cpp"
          $138 = HEAP32[$137>>2]|0; //@line 166 "./src/cpp/unrar/arcread.cpp"
          switch ($138|0) {
          case 115:  {
           $$sink = 1;
           label = 29;
           break;
          }
          case 116:  {
           $$sink = 2;
           label = 29;
           break;
          }
          case 122:  {
           $$sink = 3;
           label = 29;
           break;
          }
          case 123:  {
           $$sink = 5;
           label = 29;
           break;
          }
          default: {
          }
          }
          if ((label|0) == 29) {
           $139 = ((($41)) + 21272|0);
           $140 = ((($139)) + 4|0);
           HEAP32[$140>>2] = $$sink;
          }
          $141 = ((($41)) + 21272|0); //@line 173 "./src/cpp/unrar/arcread.cpp"
          $142 = ((($141)) + 4|0); //@line 173 "./src/cpp/unrar/arcread.cpp"
          $143 = HEAP32[$142>>2]|0; //@line 173 "./src/cpp/unrar/arcread.cpp"
          $144 = ((($41)) + 14796|0); //@line 173 "./src/cpp/unrar/arcread.cpp"
          HEAP32[$144>>2] = $143; //@line 173 "./src/cpp/unrar/arcread.cpp"
          $145 = ((($41)) + 21272|0); //@line 175 "./src/cpp/unrar/arcread.cpp"
          $146 = ((($145)) + 4|0); //@line 175 "./src/cpp/unrar/arcread.cpp"
          $147 = HEAP32[$146>>2]|0; //@line 175 "./src/cpp/unrar/arcread.cpp"
          $148 = ($147|0)==(117); //@line 175 "./src/cpp/unrar/arcread.cpp"
          do {
           if ($148) {
            __THREW__ = 0;
            (invoke_iii(132,($3|0),6)|0); //@line 180 "./src/cpp/unrar/arcread.cpp"
            $149 = __THREW__; __THREW__ = 0;
            $150 = $149&1;
            if ($150) {
             break L14;
            }
           } else {
            $151 = ((($41)) + 21272|0); //@line 183 "./src/cpp/unrar/arcread.cpp"
            $152 = ((($151)) + 4|0); //@line 183 "./src/cpp/unrar/arcread.cpp"
            $153 = HEAP32[$152>>2]|0; //@line 183 "./src/cpp/unrar/arcread.cpp"
            $154 = ($153|0)==(1); //@line 183 "./src/cpp/unrar/arcread.cpp"
            if ($154) {
             $155 = ((($41)) + 21272|0); //@line 183 "./src/cpp/unrar/arcread.cpp"
             $156 = ((($155)) + 8|0); //@line 183 "./src/cpp/unrar/arcread.cpp"
             $157 = HEAP32[$156>>2]|0; //@line 183 "./src/cpp/unrar/arcread.cpp"
             $158 = $157 & 2; //@line 183 "./src/cpp/unrar/arcread.cpp"
             $159 = ($158|0)!=(0); //@line 183 "./src/cpp/unrar/arcread.cpp"
             if ($159) {
              __THREW__ = 0;
              (invoke_iii(132,($3|0),6)|0); //@line 190 "./src/cpp/unrar/arcread.cpp"
              $160 = __THREW__; __THREW__ = 0;
              $161 = $160&1;
              if ($161) {
               break L14;
              } else {
               break;
              }
             }
            }
            $162 = ((($41)) + 21272|0); //@line 193 "./src/cpp/unrar/arcread.cpp"
            $163 = ((($162)) + 12|0); //@line 193 "./src/cpp/unrar/arcread.cpp"
            $164 = HEAP32[$163>>2]|0; //@line 193 "./src/cpp/unrar/arcread.cpp"
            $165 = (($164) - 7)|0; //@line 193 "./src/cpp/unrar/arcread.cpp"
            __THREW__ = 0;
            (invoke_iii(132,($3|0),($165|0))|0); //@line 193 "./src/cpp/unrar/arcread.cpp"
            $166 = __THREW__; __THREW__ = 0;
            $167 = $166&1;
            if ($167) {
             break L14;
            }
           }
          } while(0);
          $168 = ((($41)) + 56840|0); //@line 195 "./src/cpp/unrar/arcread.cpp"
          $169 = $168; //@line 195 "./src/cpp/unrar/arcread.cpp"
          $170 = $169; //@line 195 "./src/cpp/unrar/arcread.cpp"
          $171 = HEAP32[$170>>2]|0; //@line 195 "./src/cpp/unrar/arcread.cpp"
          $172 = (($169) + 4)|0; //@line 195 "./src/cpp/unrar/arcread.cpp"
          $173 = $172; //@line 195 "./src/cpp/unrar/arcread.cpp"
          $174 = HEAP32[$173>>2]|0; //@line 195 "./src/cpp/unrar/arcread.cpp"
          $175 = ((($41)) + 21272|0); //@line 195 "./src/cpp/unrar/arcread.cpp"
          $176 = ((($175)) + 12|0); //@line 195 "./src/cpp/unrar/arcread.cpp"
          $177 = HEAP32[$176>>2]|0; //@line 195 "./src/cpp/unrar/arcread.cpp"
          __THREW__ = 0;
          $178 = (invoke_iii(148,($41|0),($177|0))|0); //@line 195 "./src/cpp/unrar/arcread.cpp"
          $179 = __THREW__; __THREW__ = 0;
          $180 = $179&1;
          if (!($180)) {
           $181 = (_i64Add(($171|0),($174|0),($178|0),0)|0); //@line 195 "./src/cpp/unrar/arcread.cpp"
           $182 = tempRet0; //@line 195 "./src/cpp/unrar/arcread.cpp"
           $183 = ((($41)) + 56848|0); //@line 195 "./src/cpp/unrar/arcread.cpp"
           $184 = $183; //@line 195 "./src/cpp/unrar/arcread.cpp"
           $185 = $184; //@line 195 "./src/cpp/unrar/arcread.cpp"
           HEAP32[$185>>2] = $181; //@line 195 "./src/cpp/unrar/arcread.cpp"
           $186 = (($184) + 4)|0; //@line 195 "./src/cpp/unrar/arcread.cpp"
           $187 = $186; //@line 195 "./src/cpp/unrar/arcread.cpp"
           HEAP32[$187>>2] = $182; //@line 195 "./src/cpp/unrar/arcread.cpp"
           $188 = ((($41)) + 21272|0); //@line 197 "./src/cpp/unrar/arcread.cpp"
           $189 = ((($188)) + 4|0); //@line 197 "./src/cpp/unrar/arcread.cpp"
           $190 = HEAP32[$189>>2]|0; //@line 197 "./src/cpp/unrar/arcread.cpp"
           L49: do {
            switch ($190|0) {
            case 1:  {
             $191 = ((($41)) + 21304|0); //@line 200 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             invoke_vi(133,($191|0)); //@line 200 "./src/cpp/unrar/arcread.cpp"
             $192 = __THREW__; __THREW__ = 0;
             $193 = $192&1;
             if ($193) {
              break L14;
             }
             $194 = ((($41)) + 21272|0); //@line 201 "./src/cpp/unrar/arcread.cpp"
             $195 = ((($41)) + 21304|0); //@line 201 "./src/cpp/unrar/arcread.cpp"
             ;HEAP32[$195>>2]=HEAP32[$194>>2]|0;HEAP32[$195+4>>2]=HEAP32[$194+4>>2]|0;HEAP32[$195+8>>2]=HEAP32[$194+8>>2]|0;HEAP32[$195+12>>2]=HEAP32[$194+12>>2]|0;HEAP32[$195+16>>2]=HEAP32[$194+16>>2]|0; //@line 201 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $196 = (invoke_ii(134,($3|0))|0); //@line 202 "./src/cpp/unrar/arcread.cpp"
             $197 = __THREW__; __THREW__ = 0;
             $198 = $197&1;
             if ($198) {
              break L14;
             }
             $199 = ((($41)) + 21304|0); //@line 202 "./src/cpp/unrar/arcread.cpp"
             $200 = ((($199)) + 20|0); //@line 202 "./src/cpp/unrar/arcread.cpp"
             HEAP16[$200>>1] = $196; //@line 202 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $201 = (invoke_ii(137,($3|0))|0); //@line 203 "./src/cpp/unrar/arcread.cpp"
             $202 = __THREW__; __THREW__ = 0;
             $203 = $202&1;
             if ($203) {
              break L14;
             }
             $204 = ((($41)) + 21304|0); //@line 203 "./src/cpp/unrar/arcread.cpp"
             $205 = ((($204)) + 24|0); //@line 203 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$205>>2] = $201; //@line 203 "./src/cpp/unrar/arcread.cpp"
             $206 = ((($41)) + 21304|0); //@line 205 "./src/cpp/unrar/arcread.cpp"
             $207 = ((($206)) + 8|0); //@line 205 "./src/cpp/unrar/arcread.cpp"
             $208 = HEAP32[$207>>2]|0; //@line 205 "./src/cpp/unrar/arcread.cpp"
             $209 = $208 & 1; //@line 205 "./src/cpp/unrar/arcread.cpp"
             $210 = ($209|0)!=(0); //@line 205 "./src/cpp/unrar/arcread.cpp"
             $211 = ((($41)) + 56861|0); //@line 205 "./src/cpp/unrar/arcread.cpp"
             $212 = $210&1; //@line 205 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$211>>0] = $212; //@line 205 "./src/cpp/unrar/arcread.cpp"
             $213 = ((($41)) + 21304|0); //@line 206 "./src/cpp/unrar/arcread.cpp"
             $214 = ((($213)) + 8|0); //@line 206 "./src/cpp/unrar/arcread.cpp"
             $215 = HEAP32[$214>>2]|0; //@line 206 "./src/cpp/unrar/arcread.cpp"
             $216 = $215 & 8; //@line 206 "./src/cpp/unrar/arcread.cpp"
             $217 = ($216|0)!=(0); //@line 206 "./src/cpp/unrar/arcread.cpp"
             $218 = ((($41)) + 56860|0); //@line 206 "./src/cpp/unrar/arcread.cpp"
             $219 = $217&1; //@line 206 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$218>>0] = $219; //@line 206 "./src/cpp/unrar/arcread.cpp"
             $220 = ((($41)) + 21304|0); //@line 207 "./src/cpp/unrar/arcread.cpp"
             $221 = ((($220)) + 8|0); //@line 207 "./src/cpp/unrar/arcread.cpp"
             $222 = HEAP32[$221>>2]|0; //@line 207 "./src/cpp/unrar/arcread.cpp"
             $223 = $222 & 4; //@line 207 "./src/cpp/unrar/arcread.cpp"
             $224 = ($223|0)!=(0); //@line 207 "./src/cpp/unrar/arcread.cpp"
             $225 = ((($41)) + 56863|0); //@line 207 "./src/cpp/unrar/arcread.cpp"
             $226 = $224&1; //@line 207 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$225>>0] = $226; //@line 207 "./src/cpp/unrar/arcread.cpp"
             $227 = ((($41)) + 21304|0); //@line 208 "./src/cpp/unrar/arcread.cpp"
             $228 = ((($227)) + 8|0); //@line 208 "./src/cpp/unrar/arcread.cpp"
             $229 = HEAP32[$228>>2]|0; //@line 208 "./src/cpp/unrar/arcread.cpp"
             $230 = $229 & 64; //@line 208 "./src/cpp/unrar/arcread.cpp"
             $231 = ($230|0)!=(0); //@line 208 "./src/cpp/unrar/arcread.cpp"
             $232 = ((($41)) + 56867|0); //@line 208 "./src/cpp/unrar/arcread.cpp"
             $233 = $231&1; //@line 208 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$232>>0] = $233; //@line 208 "./src/cpp/unrar/arcread.cpp"
             $234 = ((($41)) + 21304|0); //@line 209 "./src/cpp/unrar/arcread.cpp"
             $235 = ((($234)) + 8|0); //@line 209 "./src/cpp/unrar/arcread.cpp"
             $236 = HEAP32[$235>>2]|0; //@line 209 "./src/cpp/unrar/arcread.cpp"
             $237 = $236 & 128; //@line 209 "./src/cpp/unrar/arcread.cpp"
             $238 = ($237|0)!=(0); //@line 209 "./src/cpp/unrar/arcread.cpp"
             $239 = ((($41)) + 56868|0); //@line 209 "./src/cpp/unrar/arcread.cpp"
             $240 = $238&1; //@line 209 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$239>>0] = $240; //@line 209 "./src/cpp/unrar/arcread.cpp"
             $241 = ((($41)) + 21304|0); //@line 210 "./src/cpp/unrar/arcread.cpp"
             $242 = ((($241)) + 24|0); //@line 210 "./src/cpp/unrar/arcread.cpp"
             $243 = HEAP32[$242>>2]|0; //@line 210 "./src/cpp/unrar/arcread.cpp"
             $244 = ($243|0)!=(0); //@line 210 "./src/cpp/unrar/arcread.cpp"
             if ($244) {
              $252 = 1;
             } else {
              $245 = ((($41)) + 21304|0); //@line 210 "./src/cpp/unrar/arcread.cpp"
              $246 = ((($245)) + 20|0); //@line 210 "./src/cpp/unrar/arcread.cpp"
              $247 = HEAP16[$246>>1]|0; //@line 210 "./src/cpp/unrar/arcread.cpp"
              $248 = $247&65535; //@line 210 "./src/cpp/unrar/arcread.cpp"
              $249 = ($248|0)!=(0); //@line 210 "./src/cpp/unrar/arcread.cpp"
              $252 = $249;
             }
             $250 = ((($41)) + 56864|0); //@line 210 "./src/cpp/unrar/arcread.cpp"
             $251 = $252&1; //@line 210 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$250>>0] = $251; //@line 210 "./src/cpp/unrar/arcread.cpp"
             $253 = ((($41)) + 21304|0); //@line 211 "./src/cpp/unrar/arcread.cpp"
             $254 = ((($253)) + 8|0); //@line 211 "./src/cpp/unrar/arcread.cpp"
             $255 = HEAP32[$254>>2]|0; //@line 211 "./src/cpp/unrar/arcread.cpp"
             $256 = $255 & 2; //@line 211 "./src/cpp/unrar/arcread.cpp"
             $257 = ($256|0)!=(0); //@line 211 "./src/cpp/unrar/arcread.cpp"
             $258 = ((($41)) + 21304|0); //@line 211 "./src/cpp/unrar/arcread.cpp"
             $259 = ((($258)) + 28|0); //@line 211 "./src/cpp/unrar/arcread.cpp"
             $260 = $257&1; //@line 211 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$259>>0] = $260; //@line 211 "./src/cpp/unrar/arcread.cpp"
             $261 = ((($41)) + 21304|0); //@line 216 "./src/cpp/unrar/arcread.cpp"
             $262 = ((($261)) + 8|0); //@line 216 "./src/cpp/unrar/arcread.cpp"
             $263 = HEAP32[$262>>2]|0; //@line 216 "./src/cpp/unrar/arcread.cpp"
             $264 = $263 & 256; //@line 216 "./src/cpp/unrar/arcread.cpp"
             $265 = ($264|0)!=(0); //@line 216 "./src/cpp/unrar/arcread.cpp"
             $266 = ((($41)) + 56865|0); //@line 216 "./src/cpp/unrar/arcread.cpp"
             $267 = $265&1; //@line 216 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$266>>0] = $267; //@line 216 "./src/cpp/unrar/arcread.cpp"
             $268 = ((($41)) + 21304|0); //@line 218 "./src/cpp/unrar/arcread.cpp"
             $269 = ((($268)) + 8|0); //@line 218 "./src/cpp/unrar/arcread.cpp"
             $270 = HEAP32[$269>>2]|0; //@line 218 "./src/cpp/unrar/arcread.cpp"
             $271 = $270 & 16; //@line 218 "./src/cpp/unrar/arcread.cpp"
             $272 = ($271|0)!=(0); //@line 218 "./src/cpp/unrar/arcread.cpp"
             $273 = ((($41)) + 56866|0); //@line 218 "./src/cpp/unrar/arcread.cpp"
             $274 = $272&1; //@line 218 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$273>>0] = $274; //@line 218 "./src/cpp/unrar/arcread.cpp"
             break;
            }
            case 3: case 2:  {
             $275 = ((($41)) + 21272|0); //@line 223 "./src/cpp/unrar/arcread.cpp"
             $276 = ((($275)) + 4|0); //@line 223 "./src/cpp/unrar/arcread.cpp"
             $277 = HEAP32[$276>>2]|0; //@line 223 "./src/cpp/unrar/arcread.cpp"
             $278 = ($277|0)==(2); //@line 223 "./src/cpp/unrar/arcread.cpp"
             $279 = $278&1; //@line 223 "./src/cpp/unrar/arcread.cpp"
             $10 = $279; //@line 223 "./src/cpp/unrar/arcread.cpp"
             $280 = $10; //@line 224 "./src/cpp/unrar/arcread.cpp"
             $281 = $280&1; //@line 224 "./src/cpp/unrar/arcread.cpp"
             $282 = ((($41)) + 21424|0); //@line 224 "./src/cpp/unrar/arcread.cpp"
             $283 = ((($41)) + 38640|0); //@line 224 "./src/cpp/unrar/arcread.cpp"
             $284 = $281 ? $282 : $283; //@line 224 "./src/cpp/unrar/arcread.cpp"
             $11 = $284; //@line 224 "./src/cpp/unrar/arcread.cpp"
             $285 = $11; //@line 225 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             invoke_vii(136,($285|0),0); //@line 225 "./src/cpp/unrar/arcread.cpp"
             $286 = __THREW__; __THREW__ = 0;
             $287 = $286&1;
             if ($287) {
              break L14;
             }
             $288 = ((($41)) + 21272|0); //@line 227 "./src/cpp/unrar/arcread.cpp"
             $289 = $11; //@line 227 "./src/cpp/unrar/arcread.cpp"
             ;HEAP32[$289>>2]=HEAP32[$288>>2]|0;HEAP32[$289+4>>2]=HEAP32[$288+4>>2]|0;HEAP32[$289+8>>2]=HEAP32[$288+8>>2]|0;HEAP32[$289+12>>2]=HEAP32[$288+12>>2]|0;HEAP32[$289+16>>2]=HEAP32[$288+16>>2]|0; //@line 227 "./src/cpp/unrar/arcread.cpp"
             $290 = $11; //@line 229 "./src/cpp/unrar/arcread.cpp"
             $291 = ((($290)) + 8|0); //@line 229 "./src/cpp/unrar/arcread.cpp"
             $292 = HEAP32[$291>>2]|0; //@line 229 "./src/cpp/unrar/arcread.cpp"
             $293 = $292 & 1; //@line 229 "./src/cpp/unrar/arcread.cpp"
             $294 = ($293|0)!=(0); //@line 229 "./src/cpp/unrar/arcread.cpp"
             $295 = $11; //@line 229 "./src/cpp/unrar/arcread.cpp"
             $296 = ((($295)) + 8328|0); //@line 229 "./src/cpp/unrar/arcread.cpp"
             $297 = $294&1; //@line 229 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$296>>0] = $297; //@line 229 "./src/cpp/unrar/arcread.cpp"
             $298 = $11; //@line 230 "./src/cpp/unrar/arcread.cpp"
             $299 = ((($298)) + 8|0); //@line 230 "./src/cpp/unrar/arcread.cpp"
             $300 = HEAP32[$299>>2]|0; //@line 230 "./src/cpp/unrar/arcread.cpp"
             $301 = $300 & 2; //@line 230 "./src/cpp/unrar/arcread.cpp"
             $302 = ($301|0)!=(0); //@line 230 "./src/cpp/unrar/arcread.cpp"
             $303 = $11; //@line 230 "./src/cpp/unrar/arcread.cpp"
             $304 = ((($303)) + 8329|0); //@line 230 "./src/cpp/unrar/arcread.cpp"
             $305 = $302&1; //@line 230 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$304>>0] = $305; //@line 230 "./src/cpp/unrar/arcread.cpp"
             $306 = $11; //@line 231 "./src/cpp/unrar/arcread.cpp"
             $307 = ((($306)) + 8|0); //@line 231 "./src/cpp/unrar/arcread.cpp"
             $308 = HEAP32[$307>>2]|0; //@line 231 "./src/cpp/unrar/arcread.cpp"
             $309 = $308 & 4; //@line 231 "./src/cpp/unrar/arcread.cpp"
             $310 = ($309|0)!=(0); //@line 231 "./src/cpp/unrar/arcread.cpp"
             $311 = $11; //@line 231 "./src/cpp/unrar/arcread.cpp"
             $312 = ((($311)) + 8331|0); //@line 231 "./src/cpp/unrar/arcread.cpp"
             $313 = $310&1; //@line 231 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$312>>0] = $313; //@line 231 "./src/cpp/unrar/arcread.cpp"
             $314 = $11; //@line 232 "./src/cpp/unrar/arcread.cpp"
             $315 = ((($314)) + 8|0); //@line 232 "./src/cpp/unrar/arcread.cpp"
             $316 = HEAP32[$315>>2]|0; //@line 232 "./src/cpp/unrar/arcread.cpp"
             $317 = $316 & 1024; //@line 232 "./src/cpp/unrar/arcread.cpp"
             $318 = ($317|0)!=(0); //@line 232 "./src/cpp/unrar/arcread.cpp"
             $319 = $11; //@line 232 "./src/cpp/unrar/arcread.cpp"
             $320 = ((($319)) + 8336|0); //@line 232 "./src/cpp/unrar/arcread.cpp"
             $321 = $318&1; //@line 232 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$320>>0] = $321; //@line 232 "./src/cpp/unrar/arcread.cpp"
             $322 = $10; //@line 233 "./src/cpp/unrar/arcread.cpp"
             $323 = $322&1; //@line 233 "./src/cpp/unrar/arcread.cpp"
             if ($323) {
              $324 = $11; //@line 233 "./src/cpp/unrar/arcread.cpp"
              $325 = ((($324)) + 8|0); //@line 233 "./src/cpp/unrar/arcread.cpp"
              $326 = HEAP32[$325>>2]|0; //@line 233 "./src/cpp/unrar/arcread.cpp"
              $327 = $326 & 16; //@line 233 "./src/cpp/unrar/arcread.cpp"
              $328 = ($327|0)!=(0); //@line 233 "./src/cpp/unrar/arcread.cpp"
              $332 = $328;
             } else {
              $332 = 0;
             }
             $329 = $11; //@line 233 "./src/cpp/unrar/arcread.cpp"
             $330 = ((($329)) + 8416|0); //@line 233 "./src/cpp/unrar/arcread.cpp"
             $331 = $332&1; //@line 233 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$330>>0] = $331; //@line 233 "./src/cpp/unrar/arcread.cpp"
             $333 = $10; //@line 234 "./src/cpp/unrar/arcread.cpp"
             $334 = $333&1; //@line 234 "./src/cpp/unrar/arcread.cpp"
             if ($334) {
              $343 = 0;
             } else {
              $335 = $11; //@line 234 "./src/cpp/unrar/arcread.cpp"
              $336 = ((($335)) + 8|0); //@line 234 "./src/cpp/unrar/arcread.cpp"
              $337 = HEAP32[$336>>2]|0; //@line 234 "./src/cpp/unrar/arcread.cpp"
              $338 = $337 & 16; //@line 234 "./src/cpp/unrar/arcread.cpp"
              $339 = ($338|0)!=(0); //@line 234 "./src/cpp/unrar/arcread.cpp"
              $343 = $339;
             }
             $340 = $11; //@line 234 "./src/cpp/unrar/arcread.cpp"
             $341 = ((($340)) + 8426|0); //@line 234 "./src/cpp/unrar/arcread.cpp"
             $342 = $343&1; //@line 234 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$341>>0] = $342; //@line 234 "./src/cpp/unrar/arcread.cpp"
             $344 = $11; //@line 235 "./src/cpp/unrar/arcread.cpp"
             $345 = ((($344)) + 8|0); //@line 235 "./src/cpp/unrar/arcread.cpp"
             $346 = HEAP32[$345>>2]|0; //@line 235 "./src/cpp/unrar/arcread.cpp"
             $347 = $346 & 224; //@line 235 "./src/cpp/unrar/arcread.cpp"
             $348 = ($347|0)==(224); //@line 235 "./src/cpp/unrar/arcread.cpp"
             $349 = $11; //@line 235 "./src/cpp/unrar/arcread.cpp"
             $350 = ((($349)) + 8417|0); //@line 235 "./src/cpp/unrar/arcread.cpp"
             $351 = $348&1; //@line 235 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$350>>0] = $351; //@line 235 "./src/cpp/unrar/arcread.cpp"
             $352 = $11; //@line 236 "./src/cpp/unrar/arcread.cpp"
             $353 = ((($352)) + 8417|0); //@line 236 "./src/cpp/unrar/arcread.cpp"
             $354 = HEAP8[$353>>0]|0; //@line 236 "./src/cpp/unrar/arcread.cpp"
             $355 = $354&1; //@line 236 "./src/cpp/unrar/arcread.cpp"
             if ($355) {
              $364 = 0;
             } else {
              $356 = $11; //@line 236 "./src/cpp/unrar/arcread.cpp"
              $357 = ((($356)) + 8|0); //@line 236 "./src/cpp/unrar/arcread.cpp"
              $358 = HEAP32[$357>>2]|0; //@line 236 "./src/cpp/unrar/arcread.cpp"
              $359 = $358 & 224; //@line 236 "./src/cpp/unrar/arcread.cpp"
              $360 = $359 >>> 5; //@line 236 "./src/cpp/unrar/arcread.cpp"
              $361 = 65536 << $360; //@line 236 "./src/cpp/unrar/arcread.cpp"
              $364 = $361;
             }
             $362 = $11; //@line 236 "./src/cpp/unrar/arcread.cpp"
             $363 = ((($362)) + 8420|0); //@line 236 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$363>>2] = $364; //@line 236 "./src/cpp/unrar/arcread.cpp"
             $365 = $11; //@line 237 "./src/cpp/unrar/arcread.cpp"
             $366 = ((($365)) + 8|0); //@line 237 "./src/cpp/unrar/arcread.cpp"
             $367 = HEAP32[$366>>2]|0; //@line 237 "./src/cpp/unrar/arcread.cpp"
             $368 = $367 & 8; //@line 237 "./src/cpp/unrar/arcread.cpp"
             $369 = ($368|0)!=(0); //@line 237 "./src/cpp/unrar/arcread.cpp"
             $370 = $11; //@line 237 "./src/cpp/unrar/arcread.cpp"
             $371 = ((($370)) + 8418|0); //@line 237 "./src/cpp/unrar/arcread.cpp"
             $372 = $369&1; //@line 237 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$371>>0] = $372; //@line 237 "./src/cpp/unrar/arcread.cpp"
             $373 = $11; //@line 238 "./src/cpp/unrar/arcread.cpp"
             $374 = ((($373)) + 8|0); //@line 238 "./src/cpp/unrar/arcread.cpp"
             $375 = HEAP32[$374>>2]|0; //@line 238 "./src/cpp/unrar/arcread.cpp"
             $376 = $375 & 2048; //@line 238 "./src/cpp/unrar/arcread.cpp"
             $377 = ($376|0)!=(0); //@line 238 "./src/cpp/unrar/arcread.cpp"
             $378 = $11; //@line 238 "./src/cpp/unrar/arcread.cpp"
             $379 = ((($378)) + 8419|0); //@line 238 "./src/cpp/unrar/arcread.cpp"
             $380 = $377&1; //@line 238 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$379>>0] = $380; //@line 238 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $381 = (invoke_ii(137,($3|0))|0); //@line 240 "./src/cpp/unrar/arcread.cpp"
             $382 = __THREW__; __THREW__ = 0;
             $383 = $382&1;
             if ($383) {
              break L14;
             }
             $384 = $11; //@line 240 "./src/cpp/unrar/arcread.cpp"
             $385 = ((($384)) + 20|0); //@line 240 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$385>>2] = $381; //@line 240 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $386 = (invoke_ii(137,($3|0))|0); //@line 241 "./src/cpp/unrar/arcread.cpp"
             $387 = __THREW__; __THREW__ = 0;
             $388 = $387&1;
             if ($388) {
              break L14;
             }
             $12 = $386; //@line 241 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $389 = (invoke_ii(135,($3|0))|0); //@line 242 "./src/cpp/unrar/arcread.cpp"
             $390 = __THREW__; __THREW__ = 0;
             $391 = $390&1;
             if ($391) {
              break L14;
             }
             $392 = $11; //@line 242 "./src/cpp/unrar/arcread.cpp"
             $393 = ((($392)) + 24|0); //@line 242 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$393>>0] = $389; //@line 242 "./src/cpp/unrar/arcread.cpp"
             $394 = $11; //@line 244 "./src/cpp/unrar/arcread.cpp"
             $395 = ((($394)) + 8288|0); //@line 244 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$395>>2] = 2; //@line 244 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $396 = (invoke_ii(137,($3|0))|0); //@line 245 "./src/cpp/unrar/arcread.cpp"
             $397 = __THREW__; __THREW__ = 0;
             $398 = $397&1;
             if ($398) {
              break L14;
             }
             $399 = $11; //@line 245 "./src/cpp/unrar/arcread.cpp"
             $400 = ((($399)) + 8288|0); //@line 245 "./src/cpp/unrar/arcread.cpp"
             $401 = ((($400)) + 4|0); //@line 245 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$401>>2] = $396; //@line 245 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $402 = (invoke_ii(137,($3|0))|0); //@line 247 "./src/cpp/unrar/arcread.cpp"
             $403 = __THREW__; __THREW__ = 0;
             $404 = $403&1;
             if ($404) {
              break L14;
             }
             $13 = $402; //@line 247 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $405 = (invoke_ii(135,($3|0))|0); //@line 248 "./src/cpp/unrar/arcread.cpp"
             $406 = __THREW__; __THREW__ = 0;
             $407 = $406&1;
             if ($407) {
              break L14;
             }
             $408 = $11; //@line 248 "./src/cpp/unrar/arcread.cpp"
             $409 = ((($408)) + 25|0); //@line 248 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$409>>0] = $405; //@line 248 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $410 = (invoke_ii(135,($3|0))|0); //@line 249 "./src/cpp/unrar/arcread.cpp"
             $411 = __THREW__; __THREW__ = 0;
             $412 = $411&1;
             if ($412) {
              break L14;
             }
             $413 = $410&255; //@line 249 "./src/cpp/unrar/arcread.cpp"
             $414 = (($413) - 48)|0; //@line 249 "./src/cpp/unrar/arcread.cpp"
             $415 = $414&255; //@line 249 "./src/cpp/unrar/arcread.cpp"
             $416 = $11; //@line 249 "./src/cpp/unrar/arcread.cpp"
             $417 = ((($416)) + 26|0); //@line 249 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$417>>0] = $415; //@line 249 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $418 = (invoke_ii(134,($3|0))|0); //@line 250 "./src/cpp/unrar/arcread.cpp"
             $419 = __THREW__; __THREW__ = 0;
             $420 = $419&1;
             if ($420) {
              break L14;
             }
             $421 = $418&65535; //@line 250 "./src/cpp/unrar/arcread.cpp"
             $14 = $421; //@line 250 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $422 = (invoke_ii(137,($3|0))|0); //@line 251 "./src/cpp/unrar/arcread.cpp"
             $423 = __THREW__; __THREW__ = 0;
             $424 = $423&1;
             if ($424) {
              break L14;
             }
             $425 = $11; //@line 251 "./src/cpp/unrar/arcread.cpp"
             $426 = ((($425)) + 28|0); //@line 251 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$426>>2] = $422; //@line 251 "./src/cpp/unrar/arcread.cpp"
             $427 = $11; //@line 253 "./src/cpp/unrar/arcread.cpp"
             $428 = ((($427)) + 8332|0); //@line 253 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$428>>2] = 0; //@line 253 "./src/cpp/unrar/arcread.cpp"
             $429 = $11; //@line 254 "./src/cpp/unrar/arcread.cpp"
             $430 = ((($429)) + 8331|0); //@line 254 "./src/cpp/unrar/arcread.cpp"
             $431 = HEAP8[$430>>0]|0; //@line 254 "./src/cpp/unrar/arcread.cpp"
             $432 = $431&1; //@line 254 "./src/cpp/unrar/arcread.cpp"
             if ($432) {
              $433 = $11; //@line 255 "./src/cpp/unrar/arcread.cpp"
              $434 = ((($433)) + 25|0); //@line 255 "./src/cpp/unrar/arcread.cpp"
              $435 = HEAP8[$434>>0]|0; //@line 255 "./src/cpp/unrar/arcread.cpp"
              $436 = $435&255; //@line 255 "./src/cpp/unrar/arcread.cpp"
              switch ($436|0) {
              case 13:  {
               $437 = $11; //@line 257 "./src/cpp/unrar/arcread.cpp"
               $$sink3 = 1;$$sink5 = $437;
               break;
              }
              case 15:  {
               $438 = $11; //@line 258 "./src/cpp/unrar/arcread.cpp"
               $$sink3 = 2;$$sink5 = $438;
               break;
              }
              case 26: case 20:  {
               $439 = $11; //@line 260 "./src/cpp/unrar/arcread.cpp"
               $$sink3 = 3;$$sink5 = $439;
               break;
              }
              default: {
               $440 = $11; //@line 261 "./src/cpp/unrar/arcread.cpp"
               $$sink3 = 4;$$sink5 = $440;
              }
              }
              $441 = ((($$sink5)) + 8332|0);
              HEAP32[$441>>2] = $$sink3;
             }
             $442 = $11; //@line 264 "./src/cpp/unrar/arcread.cpp"
             $443 = ((($442)) + 8428|0); //@line 264 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$443>>2] = 2; //@line 264 "./src/cpp/unrar/arcread.cpp"
             $444 = $11; //@line 265 "./src/cpp/unrar/arcread.cpp"
             $445 = ((($444)) + 24|0); //@line 265 "./src/cpp/unrar/arcread.cpp"
             $446 = HEAP8[$445>>0]|0; //@line 265 "./src/cpp/unrar/arcread.cpp"
             $447 = $446&255; //@line 265 "./src/cpp/unrar/arcread.cpp"
             $448 = ($447|0)==(3); //@line 265 "./src/cpp/unrar/arcread.cpp"
             do {
              if ($448) {
               label = 69;
              } else {
               $449 = $11; //@line 265 "./src/cpp/unrar/arcread.cpp"
               $450 = ((($449)) + 24|0); //@line 265 "./src/cpp/unrar/arcread.cpp"
               $451 = HEAP8[$450>>0]|0; //@line 265 "./src/cpp/unrar/arcread.cpp"
               $452 = $451&255; //@line 265 "./src/cpp/unrar/arcread.cpp"
               $453 = ($452|0)==(5); //@line 265 "./src/cpp/unrar/arcread.cpp"
               if ($453) {
                label = 69;
                break;
               }
               $455 = $11; //@line 268 "./src/cpp/unrar/arcread.cpp"
               $456 = ((($455)) + 24|0); //@line 268 "./src/cpp/unrar/arcread.cpp"
               $457 = HEAP8[$456>>0]|0; //@line 268 "./src/cpp/unrar/arcread.cpp"
               $458 = $457&255; //@line 268 "./src/cpp/unrar/arcread.cpp"
               $459 = ($458|0)<(6); //@line 268 "./src/cpp/unrar/arcread.cpp"
               if (!($459)) {
                break;
               }
               $460 = $11; //@line 269 "./src/cpp/unrar/arcread.cpp"
               $$sink12 = 0;$$sink14 = $460;
               label = 72;
              }
             } while(0);
             if ((label|0) == 69) {
              $454 = $11; //@line 266 "./src/cpp/unrar/arcread.cpp"
              $$sink12 = 1;$$sink14 = $454;
              label = 72;
             }
             if ((label|0) == 72) {
              $461 = ((($$sink14)) + 8428|0);
              HEAP32[$461>>2] = $$sink12;
             }
             $462 = $11; //@line 271 "./src/cpp/unrar/arcread.cpp"
             $463 = ((($462)) + 8432|0); //@line 271 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$463>>2] = 0; //@line 271 "./src/cpp/unrar/arcread.cpp"
             $464 = $11; //@line 274 "./src/cpp/unrar/arcread.cpp"
             $465 = ((($464)) + 24|0); //@line 274 "./src/cpp/unrar/arcread.cpp"
             $466 = HEAP8[$465>>0]|0; //@line 274 "./src/cpp/unrar/arcread.cpp"
             $467 = $466&255; //@line 274 "./src/cpp/unrar/arcread.cpp"
             $468 = ($467|0)==(3); //@line 274 "./src/cpp/unrar/arcread.cpp"
             do {
              if ($468) {
               $469 = $11; //@line 274 "./src/cpp/unrar/arcread.cpp"
               $470 = ((($469)) + 28|0); //@line 274 "./src/cpp/unrar/arcread.cpp"
               $471 = HEAP32[$470>>2]|0; //@line 274 "./src/cpp/unrar/arcread.cpp"
               $472 = $471 & 61440; //@line 274 "./src/cpp/unrar/arcread.cpp"
               $473 = ($472|0)==(40960); //@line 274 "./src/cpp/unrar/arcread.cpp"
               if (!($473)) {
                break;
               }
               $474 = $11; //@line 276 "./src/cpp/unrar/arcread.cpp"
               $475 = ((($474)) + 8432|0); //@line 276 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$475>>2] = 1; //@line 276 "./src/cpp/unrar/arcread.cpp"
               $476 = $11; //@line 277 "./src/cpp/unrar/arcread.cpp"
               $477 = ((($476)) + 8436|0); //@line 277 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$477>>2] = 0; //@line 277 "./src/cpp/unrar/arcread.cpp"
              }
             } while(0);
             $478 = $10; //@line 280 "./src/cpp/unrar/arcread.cpp"
             $479 = $478&1; //@line 280 "./src/cpp/unrar/arcread.cpp"
             if ($479) {
              $488 = 0;
             } else {
              $480 = $11; //@line 280 "./src/cpp/unrar/arcread.cpp"
              $481 = ((($480)) + 28|0); //@line 280 "./src/cpp/unrar/arcread.cpp"
              $482 = HEAP32[$481>>2]|0; //@line 280 "./src/cpp/unrar/arcread.cpp"
              $483 = $482 & -2147483648; //@line 280 "./src/cpp/unrar/arcread.cpp"
              $484 = ($483|0)!=(0); //@line 280 "./src/cpp/unrar/arcread.cpp"
              $488 = $484;
             }
             $485 = $11; //@line 280 "./src/cpp/unrar/arcread.cpp"
             $486 = ((($485)) + 8424|0); //@line 280 "./src/cpp/unrar/arcread.cpp"
             $487 = $488&1; //@line 280 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$486>>0] = $487; //@line 280 "./src/cpp/unrar/arcread.cpp"
             $489 = $11; //@line 282 "./src/cpp/unrar/arcread.cpp"
             $490 = ((($489)) + 8|0); //@line 282 "./src/cpp/unrar/arcread.cpp"
             $491 = HEAP32[$490>>2]|0; //@line 282 "./src/cpp/unrar/arcread.cpp"
             $492 = $491 & 256; //@line 282 "./src/cpp/unrar/arcread.cpp"
             $493 = ($492|0)!=(0); //@line 282 "./src/cpp/unrar/arcread.cpp"
             $494 = $11; //@line 282 "./src/cpp/unrar/arcread.cpp"
             $495 = ((($494)) + 8425|0); //@line 282 "./src/cpp/unrar/arcread.cpp"
             $496 = $493&1; //@line 282 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$495>>0] = $496; //@line 282 "./src/cpp/unrar/arcread.cpp"
             $497 = $11; //@line 285 "./src/cpp/unrar/arcread.cpp"
             $498 = ((($497)) + 8425|0); //@line 285 "./src/cpp/unrar/arcread.cpp"
             $499 = HEAP8[$498>>0]|0; //@line 285 "./src/cpp/unrar/arcread.cpp"
             $500 = $499&1; //@line 285 "./src/cpp/unrar/arcread.cpp"
             if ($500) {
              __THREW__ = 0;
              $501 = (invoke_ii(137,($3|0))|0); //@line 287 "./src/cpp/unrar/arcread.cpp"
              $502 = __THREW__; __THREW__ = 0;
              $503 = $502&1;
              if ($503) {
               break L14;
              }
              $15 = $501; //@line 287 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $504 = (invoke_ii(137,($3|0))|0); //@line 288 "./src/cpp/unrar/arcread.cpp"
              $505 = __THREW__; __THREW__ = 0;
              $506 = $505&1;
              if ($506) {
               break L14;
              }
              $16 = $504; //@line 288 "./src/cpp/unrar/arcread.cpp"
              $507 = $12; //@line 289 "./src/cpp/unrar/arcread.cpp"
              $508 = ($507|0)==(-1); //@line 289 "./src/cpp/unrar/arcread.cpp"
              $509 = $16; //@line 289 "./src/cpp/unrar/arcread.cpp"
              $510 = ($509|0)==(-1); //@line 289 "./src/cpp/unrar/arcread.cpp"
              $511 = $508 ? $510 : 0; //@line 289 "./src/cpp/unrar/arcread.cpp"
              $512 = $11; //@line 289 "./src/cpp/unrar/arcread.cpp"
              $$sink8 = $511;$$sink9 = $512;
             } else {
              $16 = 0; //@line 293 "./src/cpp/unrar/arcread.cpp"
              $15 = 0; //@line 293 "./src/cpp/unrar/arcread.cpp"
              $513 = $12; //@line 297 "./src/cpp/unrar/arcread.cpp"
              $514 = ($513|0)==(-1); //@line 297 "./src/cpp/unrar/arcread.cpp"
              $515 = $11; //@line 297 "./src/cpp/unrar/arcread.cpp"
              $$sink8 = $514;$$sink9 = $515;
             }
             $516 = ((($$sink9)) + 8330|0);
             $517 = $$sink8&1;
             HEAP8[$516>>0] = $517;
             $518 = $15; //@line 299 "./src/cpp/unrar/arcread.cpp"
             $519 = $11; //@line 299 "./src/cpp/unrar/arcread.cpp"
             $520 = ((($519)) + 20|0); //@line 299 "./src/cpp/unrar/arcread.cpp"
             $521 = HEAP32[$520>>2]|0; //@line 299 "./src/cpp/unrar/arcread.cpp"
             $522 = (_i64Add(0,($518|0),($521|0),0)|0); //@line 299 "./src/cpp/unrar/arcread.cpp"
             $523 = tempRet0; //@line 299 "./src/cpp/unrar/arcread.cpp"
             $524 = $11; //@line 299 "./src/cpp/unrar/arcread.cpp"
             $525 = ((($524)) + 8264|0); //@line 299 "./src/cpp/unrar/arcread.cpp"
             $526 = $525; //@line 299 "./src/cpp/unrar/arcread.cpp"
             $527 = $526; //@line 299 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$527>>2] = $522; //@line 299 "./src/cpp/unrar/arcread.cpp"
             $528 = (($526) + 4)|0; //@line 299 "./src/cpp/unrar/arcread.cpp"
             $529 = $528; //@line 299 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$529>>2] = $523; //@line 299 "./src/cpp/unrar/arcread.cpp"
             $530 = $16; //@line 300 "./src/cpp/unrar/arcread.cpp"
             $531 = $12; //@line 300 "./src/cpp/unrar/arcread.cpp"
             $532 = (_i64Add(0,($530|0),($531|0),0)|0); //@line 300 "./src/cpp/unrar/arcread.cpp"
             $533 = tempRet0; //@line 300 "./src/cpp/unrar/arcread.cpp"
             $534 = $11; //@line 300 "./src/cpp/unrar/arcread.cpp"
             $535 = ((($534)) + 8272|0); //@line 300 "./src/cpp/unrar/arcread.cpp"
             $536 = $535; //@line 300 "./src/cpp/unrar/arcread.cpp"
             $537 = $536; //@line 300 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$537>>2] = $532; //@line 300 "./src/cpp/unrar/arcread.cpp"
             $538 = (($536) + 4)|0; //@line 300 "./src/cpp/unrar/arcread.cpp"
             $539 = $538; //@line 300 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$539>>2] = $533; //@line 300 "./src/cpp/unrar/arcread.cpp"
             $540 = $11; //@line 301 "./src/cpp/unrar/arcread.cpp"
             $541 = ((($540)) + 8330|0); //@line 301 "./src/cpp/unrar/arcread.cpp"
             $542 = HEAP8[$541>>0]|0; //@line 301 "./src/cpp/unrar/arcread.cpp"
             $543 = $542&1; //@line 301 "./src/cpp/unrar/arcread.cpp"
             if ($543) {
              $544 = $11; //@line 302 "./src/cpp/unrar/arcread.cpp"
              $545 = ((($544)) + 8272|0); //@line 302 "./src/cpp/unrar/arcread.cpp"
              $546 = $545; //@line 302 "./src/cpp/unrar/arcread.cpp"
              $547 = $546; //@line 302 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$547>>2] = 2147483647; //@line 302 "./src/cpp/unrar/arcread.cpp"
              $548 = (($546) + 4)|0; //@line 302 "./src/cpp/unrar/arcread.cpp"
              $549 = $548; //@line 302 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$549>>2] = 2147483647; //@line 302 "./src/cpp/unrar/arcread.cpp"
             }
             $550 = $14; //@line 305 "./src/cpp/unrar/arcread.cpp"
             $551 = ($550>>>0)<(8191); //@line 305 "./src/cpp/unrar/arcread.cpp"
             $552 = $14; //@line 305 "./src/cpp/unrar/arcread.cpp"
             $553 = $551 ? $552 : 8191; //@line 305 "./src/cpp/unrar/arcread.cpp"
             $18 = $553; //@line 305 "./src/cpp/unrar/arcread.cpp"
             $554 = $18; //@line 306 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             (invoke_iiii(95,($3|0),($17|0),($554|0))|0); //@line 306 "./src/cpp/unrar/arcread.cpp"
             $555 = __THREW__; __THREW__ = 0;
             $556 = $555&1;
             if ($556) {
              break L14;
             }
             $557 = $18; //@line 307 "./src/cpp/unrar/arcread.cpp"
             $558 = (($17) + ($557)|0); //@line 307 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$558>>0] = 0; //@line 307 "./src/cpp/unrar/arcread.cpp"
             $559 = $10; //@line 309 "./src/cpp/unrar/arcread.cpp"
             $560 = $559&1; //@line 309 "./src/cpp/unrar/arcread.cpp"
             do {
              if ($560) {
               $561 = $11; //@line 311 "./src/cpp/unrar/arcread.cpp"
               $562 = ((($561)) + 8|0); //@line 311 "./src/cpp/unrar/arcread.cpp"
               $563 = HEAP32[$562>>2]|0; //@line 311 "./src/cpp/unrar/arcread.cpp"
               $564 = $563 & 512; //@line 311 "./src/cpp/unrar/arcread.cpp"
               $565 = ($564|0)!=(0); //@line 311 "./src/cpp/unrar/arcread.cpp"
               if ($565) {
                __THREW__ = 0;
                invoke_vi(149,($19|0)); //@line 313 "./src/cpp/unrar/arcread.cpp"
                $566 = __THREW__; __THREW__ = 0;
                $567 = $566&1;
                if ($567) {
                 break L14;
                }
                __THREW__ = 0;
                $568 = (invoke_ii(66,($17|0))|0); //@line 314 "./src/cpp/unrar/arcread.cpp"
                $569 = __THREW__; __THREW__ = 0;
                $570 = $569&1;
                if ($570) {
                 break L14;
                }
                $20 = $568; //@line 314 "./src/cpp/unrar/arcread.cpp"
                $571 = $20; //@line 315 "./src/cpp/unrar/arcread.cpp"
                $572 = (($571) + 1)|0; //@line 315 "./src/cpp/unrar/arcread.cpp"
                $20 = $572; //@line 315 "./src/cpp/unrar/arcread.cpp"
                $573 = $20; //@line 316 "./src/cpp/unrar/arcread.cpp"
                $574 = (($17) + ($573)|0); //@line 316 "./src/cpp/unrar/arcread.cpp"
                $575 = $14; //@line 317 "./src/cpp/unrar/arcread.cpp"
                $576 = $20; //@line 317 "./src/cpp/unrar/arcread.cpp"
                $577 = (($575) - ($576))|0; //@line 317 "./src/cpp/unrar/arcread.cpp"
                $578 = $11; //@line 317 "./src/cpp/unrar/arcread.cpp"
                $579 = ((($578)) + 32|0); //@line 317 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_viiiiii(150,($19|0),($17|0),($574|0),($577|0),($579|0),2048); //@line 316 "./src/cpp/unrar/arcread.cpp"
                $580 = __THREW__; __THREW__ = 0;
                $581 = $580&1;
                if ($581) {
                 break L14;
                }
               } else {
                $582 = $11; //@line 321 "./src/cpp/unrar/arcread.cpp"
                $583 = ((($582)) + 32|0); //@line 321 "./src/cpp/unrar/arcread.cpp"
                HEAP32[$583>>2] = 0; //@line 321 "./src/cpp/unrar/arcread.cpp"
               }
               $584 = $11; //@line 323 "./src/cpp/unrar/arcread.cpp"
               $585 = ((($584)) + 32|0); //@line 323 "./src/cpp/unrar/arcread.cpp"
               $586 = HEAP32[$585>>2]|0; //@line 323 "./src/cpp/unrar/arcread.cpp"
               $587 = ($586|0)==(0); //@line 323 "./src/cpp/unrar/arcread.cpp"
               if ($587) {
                $588 = $11; //@line 324 "./src/cpp/unrar/arcread.cpp"
                $589 = ((($588)) + 32|0); //@line 324 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_viiii(151,($17|0),($589|0),2048,1); //@line 324 "./src/cpp/unrar/arcread.cpp"
                $590 = __THREW__; __THREW__ = 0;
                $591 = $590&1;
                if ($591) {
                 break L14;
                }
               }
               $592 = $11; //@line 327 "./src/cpp/unrar/arcread.cpp"
               $593 = ((($592)) + 32|0); //@line 327 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               invoke_vii(140,($41|0),($593|0)); //@line 327 "./src/cpp/unrar/arcread.cpp"
               $594 = __THREW__; __THREW__ = 0;
               $595 = $594&1;
               if ($595) {
                break L14;
               }
               $596 = $11; //@line 329 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               invoke_vii(152,($41|0),($596|0)); //@line 329 "./src/cpp/unrar/arcread.cpp"
               $597 = __THREW__; __THREW__ = 0;
               $598 = $597&1;
               if ($598) {
                break L14;
               }
              } else {
               $599 = $11; //@line 333 "./src/cpp/unrar/arcread.cpp"
               $600 = ((($599)) + 32|0); //@line 333 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               (invoke_iiii(80,($17|0),($600|0),2048)|0); //@line 333 "./src/cpp/unrar/arcread.cpp"
               $601 = __THREW__; __THREW__ = 0;
               $602 = $601&1;
               if ($602) {
                break L14;
               }
               $603 = $11; //@line 336 "./src/cpp/unrar/arcread.cpp"
               $604 = ((($603)) + 12|0); //@line 336 "./src/cpp/unrar/arcread.cpp"
               $605 = HEAP32[$604>>2]|0; //@line 336 "./src/cpp/unrar/arcread.cpp"
               $606 = $14; //@line 336 "./src/cpp/unrar/arcread.cpp"
               $607 = (($605) - ($606))|0; //@line 336 "./src/cpp/unrar/arcread.cpp"
               $608 = (($607) - 32)|0; //@line 336 "./src/cpp/unrar/arcread.cpp"
               $21 = $608; //@line 336 "./src/cpp/unrar/arcread.cpp"
               $609 = $11; //@line 337 "./src/cpp/unrar/arcread.cpp"
               $610 = ((($609)) + 8|0); //@line 337 "./src/cpp/unrar/arcread.cpp"
               $611 = HEAP32[$610>>2]|0; //@line 337 "./src/cpp/unrar/arcread.cpp"
               $612 = $611 & 1024; //@line 337 "./src/cpp/unrar/arcread.cpp"
               $613 = ($612|0)!=(0); //@line 337 "./src/cpp/unrar/arcread.cpp"
               if ($613) {
                $614 = $21; //@line 338 "./src/cpp/unrar/arcread.cpp"
                $615 = (($614) - 8)|0; //@line 338 "./src/cpp/unrar/arcread.cpp"
                $21 = $615; //@line 338 "./src/cpp/unrar/arcread.cpp"
               }
               $616 = $21; //@line 340 "./src/cpp/unrar/arcread.cpp"
               $617 = ($616|0)>(0); //@line 340 "./src/cpp/unrar/arcread.cpp"
               do {
                if ($617) {
                 $618 = $11; //@line 344 "./src/cpp/unrar/arcread.cpp"
                 $619 = ((($618)) + 8224|0); //@line 344 "./src/cpp/unrar/arcread.cpp"
                 $620 = $21; //@line 344 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 invoke_vii(93,($619|0),($620|0)); //@line 344 "./src/cpp/unrar/arcread.cpp"
                 $621 = __THREW__; __THREW__ = 0;
                 $622 = $621&1;
                 if ($622) {
                  break L14;
                 }
                 $623 = $11; //@line 345 "./src/cpp/unrar/arcread.cpp"
                 $624 = ((($623)) + 8224|0); //@line 345 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 $625 = (invoke_iii(94,($624|0),0)|0); //@line 345 "./src/cpp/unrar/arcread.cpp"
                 $626 = __THREW__; __THREW__ = 0;
                 $627 = $626&1;
                 if ($627) {
                  break L14;
                 }
                 $628 = $21; //@line 345 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 (invoke_iiii(95,($3|0),($625|0),($628|0))|0); //@line 345 "./src/cpp/unrar/arcread.cpp"
                 $629 = __THREW__; __THREW__ = 0;
                 $630 = $629&1;
                 if ($630) {
                  break L14;
                 }
                 $631 = $11; //@line 346 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 $632 = (invoke_iii(89,($631|0),(836|0))|0); //@line 346 "./src/cpp/unrar/arcread.cpp"
                 $633 = __THREW__; __THREW__ = 0;
                 $634 = $633&1;
                 if ($634) {
                  break L14;
                 }
                 if (!($632)) {
                  break;
                 }
                 $635 = $11; //@line 348 "./src/cpp/unrar/arcread.cpp"
                 $636 = ((($635)) + 8224|0); //@line 348 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 $637 = (invoke_iii(94,($636|0),8)|0); //@line 348 "./src/cpp/unrar/arcread.cpp"
                 $638 = __THREW__; __THREW__ = 0;
                 $639 = $638&1;
                 if ($639) {
                  break L14;
                 }
                 $22 = $637; //@line 348 "./src/cpp/unrar/arcread.cpp"
                 $640 = $22; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $641 = HEAP8[$640>>0]|0; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $642 = $641&255; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $643 = $22; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $644 = ((($643)) + 1|0); //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $645 = HEAP8[$644>>0]|0; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $646 = $645&255; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $647 = $646 << 8; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $648 = (($642) + ($647))|0; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $649 = $22; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $650 = ((($649)) + 2|0); //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $651 = HEAP8[$650>>0]|0; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $652 = $651&255; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $653 = $652 << 16; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $654 = (($648) + ($653))|0; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $655 = $22; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $656 = ((($655)) + 3|0); //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $657 = HEAP8[$656>>0]|0; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $658 = $657&255; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $659 = $658 << 24; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $660 = (($654) + ($659))|0; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $661 = ((($41)) + 14768|0); //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $662 = $661; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $663 = $662; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 HEAP32[$663>>2] = $660; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $664 = (($662) + 4)|0; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $665 = $664; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 HEAP32[$665>>2] = 0; //@line 349 "./src/cpp/unrar/arcread.cpp"
                 $666 = ((($41)) + 14768|0); //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $667 = $666; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $668 = $667; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $669 = HEAP32[$668>>2]|0; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $670 = (($667) + 4)|0; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $671 = $670; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $672 = HEAP32[$671>>2]|0; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $673 = (___muldi3(($669|0),($672|0),512,0)|0); //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $674 = tempRet0; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $675 = $666; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $676 = $675; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 HEAP32[$676>>2] = $673; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $677 = (($675) + 4)|0; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $678 = $677; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 HEAP32[$678>>2] = $674; //@line 350 "./src/cpp/unrar/arcread.cpp"
                 $679 = HEAP32[$41>>2]|0; //@line 351 "./src/cpp/unrar/arcread.cpp"
                 $680 = ((($679)) + 20|0); //@line 351 "./src/cpp/unrar/arcread.cpp"
                 $681 = HEAP32[$680>>2]|0; //@line 351 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 $682 = (invoke_ii($681|0,($41|0))|0); //@line 351 "./src/cpp/unrar/arcread.cpp"
                 $683 = tempRet0; //@line 351 "./src/cpp/unrar/arcread.cpp"
                 $684 = __THREW__; __THREW__ = 0;
                 $685 = $684&1;
                 if ($685) {
                  break L14;
                 }
                 $686 = $23; //@line 351 "./src/cpp/unrar/arcread.cpp"
                 $687 = $686; //@line 351 "./src/cpp/unrar/arcread.cpp"
                 HEAP32[$687>>2] = $682; //@line 351 "./src/cpp/unrar/arcread.cpp"
                 $688 = (($686) + 4)|0; //@line 351 "./src/cpp/unrar/arcread.cpp"
                 $689 = $688; //@line 351 "./src/cpp/unrar/arcread.cpp"
                 HEAP32[$689>>2] = $683; //@line 351 "./src/cpp/unrar/arcread.cpp"
                 $690 = ((($41)) + 14768|0); //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $691 = $690; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $692 = $691; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $693 = HEAP32[$692>>2]|0; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $694 = (($691) + 4)|0; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $695 = $694; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $696 = HEAP32[$695>>2]|0; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $697 = $23; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $698 = $697; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $699 = HEAP32[$698>>2]|0; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $700 = (($697) + 4)|0; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $701 = $700; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $702 = HEAP32[$701>>2]|0; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 $703 = (invoke_iiiii(153,($693|0),($696|0),($699|0),($702|0))|0); //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $704 = __THREW__; __THREW__ = 0;
                 $705 = $704&1;
                 if ($705) {
                  break L14;
                 }
                 $706 = ((($41)) + 14776|0); //@line 352 "./src/cpp/unrar/arcread.cpp"
                 HEAP32[$706>>2] = $703; //@line 352 "./src/cpp/unrar/arcread.cpp"
                 $707 = ((($41)) + 14768|0); //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $708 = $707; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $709 = $708; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $710 = HEAP32[$709>>2]|0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $711 = (($708) + 4)|0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $712 = $711; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $713 = HEAP32[$712>>2]|0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $714 = $23; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $715 = $714; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $716 = HEAP32[$715>>2]|0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $717 = (($714) + 4)|0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $718 = $717; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $719 = HEAP32[$718>>2]|0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $720 = (___divdi3(($716|0),($719|0),200,0)|0); //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $721 = tempRet0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $722 = (_i64Add(($710|0),($713|0),($720|0),($721|0))|0); //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $723 = tempRet0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $724 = $23; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $725 = $724; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $726 = HEAP32[$725>>2]|0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $727 = (($724) + 4)|0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $728 = $727; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $729 = HEAP32[$728>>2]|0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 $730 = (invoke_iiiii(153,($722|0),($723|0),($726|0),($729|0))|0); //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $731 = __THREW__; __THREW__ = 0;
                 $732 = $731&1;
                 if ($732) {
                  break L14;
                 }
                 $733 = ((($41)) + 14776|0); //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $734 = HEAP32[$733>>2]|0; //@line 354 "./src/cpp/unrar/arcread.cpp"
                 $735 = ($730|0)>($734|0); //@line 354 "./src/cpp/unrar/arcread.cpp"
                 if (!($735)) {
                  break;
                 }
                 $736 = ((($41)) + 14776|0); //@line 355 "./src/cpp/unrar/arcread.cpp"
                 $737 = HEAP32[$736>>2]|0; //@line 355 "./src/cpp/unrar/arcread.cpp"
                 $738 = (($737) + 1)|0; //@line 355 "./src/cpp/unrar/arcread.cpp"
                 HEAP32[$736>>2] = $738; //@line 355 "./src/cpp/unrar/arcread.cpp"
                }
               } while(0);
               $739 = $11; //@line 359 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $740 = (invoke_iii(89,($739|0),(804|0))|0); //@line 359 "./src/cpp/unrar/arcread.cpp"
               $741 = __THREW__; __THREW__ = 0;
               $742 = $741&1;
               if ($742) {
                break L14;
               }
               if (!($740)) {
                break;
               }
               $743 = ((($41)) + 56862|0); //@line 360 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$743>>0] = 1; //@line 360 "./src/cpp/unrar/arcread.cpp"
              }
             } while(0);
             $744 = $11; //@line 362 "./src/cpp/unrar/arcread.cpp"
             $745 = ((($744)) + 8|0); //@line 362 "./src/cpp/unrar/arcread.cpp"
             $746 = HEAP32[$745>>2]|0; //@line 362 "./src/cpp/unrar/arcread.cpp"
             $747 = $746 & 1024; //@line 362 "./src/cpp/unrar/arcread.cpp"
             $748 = ($747|0)!=(0); //@line 362 "./src/cpp/unrar/arcread.cpp"
             if ($748) {
              $749 = $11; //@line 363 "./src/cpp/unrar/arcread.cpp"
              $750 = ((($749)) + 8337|0); //@line 363 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              (invoke_iiii(95,($3|0),($750|0),8)|0); //@line 363 "./src/cpp/unrar/arcread.cpp"
              $751 = __THREW__; __THREW__ = 0;
              $752 = $751&1;
              if ($752) {
               break L14;
              }
             }
             $753 = $11; //@line 364 "./src/cpp/unrar/arcread.cpp"
             $754 = ((($753)) + 8240|0); //@line 364 "./src/cpp/unrar/arcread.cpp"
             $755 = $13; //@line 364 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             invoke_vii(138,($754|0),($755|0)); //@line 364 "./src/cpp/unrar/arcread.cpp"
             $756 = __THREW__; __THREW__ = 0;
             $757 = $756&1;
             if ($757) {
              break L14;
             }
             $758 = $11; //@line 365 "./src/cpp/unrar/arcread.cpp"
             $759 = ((($758)) + 8|0); //@line 365 "./src/cpp/unrar/arcread.cpp"
             $760 = HEAP32[$759>>2]|0; //@line 365 "./src/cpp/unrar/arcread.cpp"
             $761 = $760 & 4096; //@line 365 "./src/cpp/unrar/arcread.cpp"
             $762 = ($761|0)!=(0); //@line 365 "./src/cpp/unrar/arcread.cpp"
             L152: do {
              if ($762) {
               __THREW__ = 0;
               $763 = (invoke_ii(134,($3|0))|0); //@line 367 "./src/cpp/unrar/arcread.cpp"
               $764 = __THREW__; __THREW__ = 0;
               $765 = $764&1;
               if ($765) {
                break L14;
               }
               $24 = $763; //@line 367 "./src/cpp/unrar/arcread.cpp"
               $766 = ((($41)) + 21424|0); //@line 369 "./src/cpp/unrar/arcread.cpp"
               $767 = ((($766)) + 8240|0); //@line 369 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$25>>2] = $767; //@line 369 "./src/cpp/unrar/arcread.cpp"
               $768 = ((($41)) + 21424|0); //@line 370 "./src/cpp/unrar/arcread.cpp"
               $769 = ((($768)) + 8248|0); //@line 370 "./src/cpp/unrar/arcread.cpp"
               $770 = ((($25)) + 4|0); //@line 370 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$770>>2] = $769; //@line 370 "./src/cpp/unrar/arcread.cpp"
               $771 = ((($41)) + 21424|0); //@line 371 "./src/cpp/unrar/arcread.cpp"
               $772 = ((($771)) + 8256|0); //@line 371 "./src/cpp/unrar/arcread.cpp"
               $773 = ((($25)) + 8|0); //@line 371 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$773>>2] = $772; //@line 371 "./src/cpp/unrar/arcread.cpp"
               $774 = ((($25)) + 12|0); //@line 372 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$774>>2] = 0; //@line 372 "./src/cpp/unrar/arcread.cpp"
               $26 = 0; //@line 373 "./src/cpp/unrar/arcread.cpp"
               while(1) {
                $775 = $26; //@line 373 "./src/cpp/unrar/arcread.cpp"
                $776 = ($775|0)<(4); //@line 373 "./src/cpp/unrar/arcread.cpp"
                if (!($776)) {
                 break L152;
                }
                $777 = $26; //@line 375 "./src/cpp/unrar/arcread.cpp"
                $778 = (($25) + ($777<<2)|0); //@line 375 "./src/cpp/unrar/arcread.cpp"
                $779 = HEAP32[$778>>2]|0; //@line 375 "./src/cpp/unrar/arcread.cpp"
                $27 = $779; //@line 375 "./src/cpp/unrar/arcread.cpp"
                $780 = $24; //@line 376 "./src/cpp/unrar/arcread.cpp"
                $781 = $780&65535; //@line 376 "./src/cpp/unrar/arcread.cpp"
                $782 = $26; //@line 376 "./src/cpp/unrar/arcread.cpp"
                $783 = (3 - ($782))|0; //@line 376 "./src/cpp/unrar/arcread.cpp"
                $784 = $783<<2; //@line 376 "./src/cpp/unrar/arcread.cpp"
                $785 = $781 >> $784; //@line 376 "./src/cpp/unrar/arcread.cpp"
                $28 = $785; //@line 376 "./src/cpp/unrar/arcread.cpp"
                $786 = $28; //@line 377 "./src/cpp/unrar/arcread.cpp"
                $787 = $786 & 8; //@line 377 "./src/cpp/unrar/arcread.cpp"
                $788 = ($787|0)==(0); //@line 377 "./src/cpp/unrar/arcread.cpp"
                $789 = $27; //@line 377 "./src/cpp/unrar/arcread.cpp"
                $790 = ($789|0)==(0|0); //@line 377 "./src/cpp/unrar/arcread.cpp"
                $or$cond = $788 | $790; //@line 377 "./src/cpp/unrar/arcread.cpp"
                if (!($or$cond)) {
                 $791 = $26; //@line 379 "./src/cpp/unrar/arcread.cpp"
                 $792 = ($791|0)!=(0); //@line 379 "./src/cpp/unrar/arcread.cpp"
                 if ($792) {
                  __THREW__ = 0;
                  $793 = (invoke_ii(137,($3|0))|0); //@line 381 "./src/cpp/unrar/arcread.cpp"
                  $794 = __THREW__; __THREW__ = 0;
                  $795 = $794&1;
                  if ($795) {
                   break L14;
                  }
                  $29 = $793; //@line 381 "./src/cpp/unrar/arcread.cpp"
                  $796 = $27; //@line 382 "./src/cpp/unrar/arcread.cpp"
                  $797 = $29; //@line 382 "./src/cpp/unrar/arcread.cpp"
                  __THREW__ = 0;
                  invoke_vii(138,($796|0),($797|0)); //@line 382 "./src/cpp/unrar/arcread.cpp"
                  $798 = __THREW__; __THREW__ = 0;
                  $799 = $798&1;
                  if ($799) {
                   break L14;
                  }
                 }
                 $800 = $27; //@line 385 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 invoke_vii(154,($800|0),($30|0)); //@line 385 "./src/cpp/unrar/arcread.cpp"
                 $801 = __THREW__; __THREW__ = 0;
                 $802 = $801&1;
                 if ($802) {
                  break L14;
                 }
                 $803 = $28; //@line 386 "./src/cpp/unrar/arcread.cpp"
                 $804 = $803 & 4; //@line 386 "./src/cpp/unrar/arcread.cpp"
                 $805 = ($804|0)!=(0); //@line 386 "./src/cpp/unrar/arcread.cpp"
                 if ($805) {
                  $806 = ((($30)) + 20|0); //@line 387 "./src/cpp/unrar/arcread.cpp"
                  $807 = HEAP32[$806>>2]|0; //@line 387 "./src/cpp/unrar/arcread.cpp"
                  $808 = (($807) + 1)|0; //@line 387 "./src/cpp/unrar/arcread.cpp"
                  HEAP32[$806>>2] = $808; //@line 387 "./src/cpp/unrar/arcread.cpp"
                 }
                 $809 = ((($30)) + 24|0); //@line 388 "./src/cpp/unrar/arcread.cpp"
                 HEAP32[$809>>2] = 0; //@line 388 "./src/cpp/unrar/arcread.cpp"
                 $810 = $28; //@line 389 "./src/cpp/unrar/arcread.cpp"
                 $811 = $810 & 3; //@line 389 "./src/cpp/unrar/arcread.cpp"
                 $31 = $811; //@line 389 "./src/cpp/unrar/arcread.cpp"
                 $32 = 0; //@line 390 "./src/cpp/unrar/arcread.cpp"
                 while(1) {
                  $812 = $32; //@line 390 "./src/cpp/unrar/arcread.cpp"
                  $813 = $31; //@line 390 "./src/cpp/unrar/arcread.cpp"
                  $814 = ($812|0)<($813|0); //@line 390 "./src/cpp/unrar/arcread.cpp"
                  if (!($814)) {
                   break;
                  }
                  __THREW__ = 0;
                  $815 = (invoke_ii(135,($3|0))|0); //@line 392 "./src/cpp/unrar/arcread.cpp"
                  $816 = __THREW__; __THREW__ = 0;
                  $817 = $816&1;
                  if ($817) {
                   break L14;
                  }
                  $33 = $815; //@line 392 "./src/cpp/unrar/arcread.cpp"
                  $818 = $33; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $819 = $818&255; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $820 = $32; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $821 = (($820) + 3)|0; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $822 = $31; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $823 = (($821) - ($822))|0; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $824 = $823<<3; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $825 = $819 << $824; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $826 = ((($30)) + 24|0); //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $827 = HEAP32[$826>>2]|0; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $828 = $827 | $825; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  HEAP32[$826>>2] = $828; //@line 393 "./src/cpp/unrar/arcread.cpp"
                  $829 = $32; //@line 390 "./src/cpp/unrar/arcread.cpp"
                  $830 = (($829) + 1)|0; //@line 390 "./src/cpp/unrar/arcread.cpp"
                  $32 = $830; //@line 390 "./src/cpp/unrar/arcread.cpp"
                 }
                 $831 = $27; //@line 395 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 invoke_vii(155,($831|0),($30|0)); //@line 395 "./src/cpp/unrar/arcread.cpp"
                 $832 = __THREW__; __THREW__ = 0;
                 $833 = $832&1;
                 if ($833) {
                  break L14;
                 }
                }
                $834 = $26; //@line 373 "./src/cpp/unrar/arcread.cpp"
                $835 = (($834) + 1)|0; //@line 373 "./src/cpp/unrar/arcread.cpp"
                $26 = $835; //@line 373 "./src/cpp/unrar/arcread.cpp"
               }
              }
             } while(0);
             $836 = $11; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $837 = ((($836)) + 8264|0); //@line 398 "./src/cpp/unrar/arcread.cpp"
             $838 = $837; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $839 = $838; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $840 = HEAP32[$839>>2]|0; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $841 = (($838) + 4)|0; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $842 = $841; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $843 = HEAP32[$842>>2]|0; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $844 = ((($41)) + 56848|0); //@line 398 "./src/cpp/unrar/arcread.cpp"
             $845 = $844; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $846 = $845; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $847 = HEAP32[$846>>2]|0; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $848 = (($845) + 4)|0; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $849 = $848; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $850 = HEAP32[$849>>2]|0; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $851 = (_i64Add(($847|0),($850|0),($840|0),($843|0))|0); //@line 398 "./src/cpp/unrar/arcread.cpp"
             $852 = tempRet0; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $853 = $844; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $854 = $853; //@line 398 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$854>>2] = $851; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $855 = (($853) + 4)|0; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $856 = $855; //@line 398 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$856>>2] = $852; //@line 398 "./src/cpp/unrar/arcread.cpp"
             $857 = $11; //@line 399 "./src/cpp/unrar/arcread.cpp"
             $858 = ((($857)) + 8418|0); //@line 399 "./src/cpp/unrar/arcread.cpp"
             $859 = HEAP8[$858>>0]|0; //@line 399 "./src/cpp/unrar/arcread.cpp"
             $860 = $859&1; //@line 399 "./src/cpp/unrar/arcread.cpp"
             $861 = $860&1; //@line 399 "./src/cpp/unrar/arcread.cpp"
             $34 = $861; //@line 399 "./src/cpp/unrar/arcread.cpp"
             $862 = $34; //@line 400 "./src/cpp/unrar/arcread.cpp"
             $863 = $862&1; //@line 400 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $864 = (invoke_iii(156,($3|0),($863|0))|0); //@line 400 "./src/cpp/unrar/arcread.cpp"
             $865 = __THREW__; __THREW__ = 0;
             $866 = $865&1;
             if ($866) {
              break L14;
             }
             $867 = $864&65535; //@line 400 "./src/cpp/unrar/arcread.cpp"
             $35 = $867; //@line 400 "./src/cpp/unrar/arcread.cpp"
             $868 = $11; //@line 401 "./src/cpp/unrar/arcread.cpp"
             $869 = HEAP32[$868>>2]|0; //@line 401 "./src/cpp/unrar/arcread.cpp"
             $870 = $35; //@line 401 "./src/cpp/unrar/arcread.cpp"
             $871 = $870&65535; //@line 401 "./src/cpp/unrar/arcread.cpp"
             $872 = ($869|0)!=($871|0); //@line 401 "./src/cpp/unrar/arcread.cpp"
             if (!($872)) {
              break L49;
             }
             $873 = ((($41)) + 56876|0); //@line 403 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$873>>0] = 1; //@line 403 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             invoke_vii(157,(756|0),1); //@line 404 "./src/cpp/unrar/arcread.cpp"
             $874 = __THREW__; __THREW__ = 0;
             $875 = $874&1;
             if ($875) {
              break L14;
             }
             $876 = $4; //@line 411 "./src/cpp/unrar/arcread.cpp"
             $877 = $876&1; //@line 411 "./src/cpp/unrar/arcread.cpp"
             if ($877) {
              break L49;
             }
             $878 = ((($41)) + 24|0); //@line 412 "./src/cpp/unrar/arcread.cpp"
             $879 = $11; //@line 412 "./src/cpp/unrar/arcread.cpp"
             $880 = ((($879)) + 32|0); //@line 412 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             invoke_viii(158,26,($878|0),($880|0)); //@line 412 "./src/cpp/unrar/arcread.cpp"
             $881 = __THREW__; __THREW__ = 0;
             $882 = $881&1;
             if ($882) {
              break L14;
             }
             break;
            }
            case 5:  {
             $883 = ((($41)) + 21272|0); //@line 417 "./src/cpp/unrar/arcread.cpp"
             $884 = ((($41)) + 38576|0); //@line 417 "./src/cpp/unrar/arcread.cpp"
             ;HEAP32[$884>>2]=HEAP32[$883>>2]|0;HEAP32[$884+4>>2]=HEAP32[$883+4>>2]|0;HEAP32[$884+8>>2]=HEAP32[$883+8>>2]|0;HEAP32[$884+12>>2]=HEAP32[$883+12>>2]|0;HEAP32[$884+16>>2]=HEAP32[$883+16>>2]|0; //@line 417 "./src/cpp/unrar/arcread.cpp"
             $885 = ((($41)) + 38576|0); //@line 418 "./src/cpp/unrar/arcread.cpp"
             $886 = ((($885)) + 8|0); //@line 418 "./src/cpp/unrar/arcread.cpp"
             $887 = HEAP32[$886>>2]|0; //@line 418 "./src/cpp/unrar/arcread.cpp"
             $888 = $887 & 1; //@line 418 "./src/cpp/unrar/arcread.cpp"
             $889 = ($888|0)!=(0); //@line 418 "./src/cpp/unrar/arcread.cpp"
             $890 = ((($41)) + 38576|0); //@line 418 "./src/cpp/unrar/arcread.cpp"
             $891 = ((($890)) + 28|0); //@line 418 "./src/cpp/unrar/arcread.cpp"
             $892 = $889&1; //@line 418 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$891>>0] = $892; //@line 418 "./src/cpp/unrar/arcread.cpp"
             $893 = ((($41)) + 38576|0); //@line 419 "./src/cpp/unrar/arcread.cpp"
             $894 = ((($893)) + 8|0); //@line 419 "./src/cpp/unrar/arcread.cpp"
             $895 = HEAP32[$894>>2]|0; //@line 419 "./src/cpp/unrar/arcread.cpp"
             $896 = $895 & 2; //@line 419 "./src/cpp/unrar/arcread.cpp"
             $897 = ($896|0)!=(0); //@line 419 "./src/cpp/unrar/arcread.cpp"
             $898 = ((($41)) + 38576|0); //@line 419 "./src/cpp/unrar/arcread.cpp"
             $899 = ((($898)) + 29|0); //@line 419 "./src/cpp/unrar/arcread.cpp"
             $900 = $897&1; //@line 419 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$899>>0] = $900; //@line 419 "./src/cpp/unrar/arcread.cpp"
             $901 = ((($41)) + 38576|0); //@line 420 "./src/cpp/unrar/arcread.cpp"
             $902 = ((($901)) + 8|0); //@line 420 "./src/cpp/unrar/arcread.cpp"
             $903 = HEAP32[$902>>2]|0; //@line 420 "./src/cpp/unrar/arcread.cpp"
             $904 = $903 & 4; //@line 420 "./src/cpp/unrar/arcread.cpp"
             $905 = ($904|0)!=(0); //@line 420 "./src/cpp/unrar/arcread.cpp"
             $906 = ((($41)) + 38576|0); //@line 420 "./src/cpp/unrar/arcread.cpp"
             $907 = ((($906)) + 30|0); //@line 420 "./src/cpp/unrar/arcread.cpp"
             $908 = $905&1; //@line 420 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$907>>0] = $908; //@line 420 "./src/cpp/unrar/arcread.cpp"
             $909 = ((($41)) + 38576|0); //@line 421 "./src/cpp/unrar/arcread.cpp"
             $910 = ((($909)) + 8|0); //@line 421 "./src/cpp/unrar/arcread.cpp"
             $911 = HEAP32[$910>>2]|0; //@line 421 "./src/cpp/unrar/arcread.cpp"
             $912 = $911 & 8; //@line 421 "./src/cpp/unrar/arcread.cpp"
             $913 = ($912|0)!=(0); //@line 421 "./src/cpp/unrar/arcread.cpp"
             $914 = ((($41)) + 38576|0); //@line 421 "./src/cpp/unrar/arcread.cpp"
             $915 = ((($914)) + 31|0); //@line 421 "./src/cpp/unrar/arcread.cpp"
             $916 = $913&1; //@line 421 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$915>>0] = $916; //@line 421 "./src/cpp/unrar/arcread.cpp"
             $917 = ((($41)) + 38576|0); //@line 422 "./src/cpp/unrar/arcread.cpp"
             $918 = ((($917)) + 29|0); //@line 422 "./src/cpp/unrar/arcread.cpp"
             $919 = HEAP8[$918>>0]|0; //@line 422 "./src/cpp/unrar/arcread.cpp"
             $920 = $919&1; //@line 422 "./src/cpp/unrar/arcread.cpp"
             if ($920) {
              __THREW__ = 0;
              $921 = (invoke_ii(137,($3|0))|0); //@line 423 "./src/cpp/unrar/arcread.cpp"
              $922 = __THREW__; __THREW__ = 0;
              $923 = $922&1;
              if ($923) {
               break L14;
              }
              $924 = ((($41)) + 38576|0); //@line 423 "./src/cpp/unrar/arcread.cpp"
              $925 = ((($924)) + 20|0); //@line 423 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$925>>2] = $921; //@line 423 "./src/cpp/unrar/arcread.cpp"
             }
             $926 = ((($41)) + 38576|0); //@line 424 "./src/cpp/unrar/arcread.cpp"
             $927 = ((($926)) + 31|0); //@line 424 "./src/cpp/unrar/arcread.cpp"
             $928 = HEAP8[$927>>0]|0; //@line 424 "./src/cpp/unrar/arcread.cpp"
             $929 = $928&1; //@line 424 "./src/cpp/unrar/arcread.cpp"
             if ($929) {
              __THREW__ = 0;
              $930 = (invoke_ii(134,($3|0))|0); //@line 425 "./src/cpp/unrar/arcread.cpp"
              $931 = __THREW__; __THREW__ = 0;
              $932 = $931&1;
              if ($932) {
               break L14;
              }
              $933 = $930&65535; //@line 425 "./src/cpp/unrar/arcread.cpp"
              $934 = ((($41)) + 38576|0); //@line 425 "./src/cpp/unrar/arcread.cpp"
              $935 = ((($934)) + 24|0); //@line 425 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$935>>2] = $933; //@line 425 "./src/cpp/unrar/arcread.cpp"
              $936 = ((($41)) + 56896|0); //@line 425 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$936>>2] = $933; //@line 425 "./src/cpp/unrar/arcread.cpp"
             }
             break;
            }
            case 117:  {
             $937 = ((($41)) + 21272|0); //@line 429 "./src/cpp/unrar/arcread.cpp"
             $938 = ((($41)) + 55792|0); //@line 429 "./src/cpp/unrar/arcread.cpp"
             ;HEAP32[$938>>2]=HEAP32[$937>>2]|0;HEAP32[$938+4>>2]=HEAP32[$937+4>>2]|0;HEAP32[$938+8>>2]=HEAP32[$937+8>>2]|0;HEAP32[$938+12>>2]=HEAP32[$937+12>>2]|0;HEAP32[$938+16>>2]=HEAP32[$937+16>>2]|0; //@line 429 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $939 = (invoke_ii(134,($3|0))|0); //@line 430 "./src/cpp/unrar/arcread.cpp"
             $940 = __THREW__; __THREW__ = 0;
             $941 = $940&1;
             if ($941) {
              break L14;
             }
             $942 = ((($41)) + 55792|0); //@line 430 "./src/cpp/unrar/arcread.cpp"
             $943 = ((($942)) + 20|0); //@line 430 "./src/cpp/unrar/arcread.cpp"
             HEAP16[$943>>1] = $939; //@line 430 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $944 = (invoke_ii(135,($3|0))|0); //@line 431 "./src/cpp/unrar/arcread.cpp"
             $945 = __THREW__; __THREW__ = 0;
             $946 = $945&1;
             if ($946) {
              break L14;
             }
             $947 = ((($41)) + 55792|0); //@line 431 "./src/cpp/unrar/arcread.cpp"
             $948 = ((($947)) + 22|0); //@line 431 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$948>>0] = $944; //@line 431 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $949 = (invoke_ii(135,($3|0))|0); //@line 432 "./src/cpp/unrar/arcread.cpp"
             $950 = __THREW__; __THREW__ = 0;
             $951 = $950&1;
             if ($951) {
              break L14;
             }
             $952 = ((($41)) + 55792|0); //@line 432 "./src/cpp/unrar/arcread.cpp"
             $953 = ((($952)) + 23|0); //@line 432 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$953>>0] = $949; //@line 432 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $954 = (invoke_ii(134,($3|0))|0); //@line 433 "./src/cpp/unrar/arcread.cpp"
             $955 = __THREW__; __THREW__ = 0;
             $956 = $955&1;
             if ($956) {
              break L14;
             }
             $957 = ((($41)) + 55792|0); //@line 433 "./src/cpp/unrar/arcread.cpp"
             $958 = ((($957)) + 24|0); //@line 433 "./src/cpp/unrar/arcread.cpp"
             HEAP16[$958>>1] = $954; //@line 433 "./src/cpp/unrar/arcread.cpp"
             break;
            }
            case 121:  {
             $959 = ((($41)) + 21272|0); //@line 436 "./src/cpp/unrar/arcread.cpp"
             $960 = ((($41)) + 55888|0); //@line 436 "./src/cpp/unrar/arcread.cpp"
             ;HEAP32[$960>>2]=HEAP32[$959>>2]|0;HEAP32[$960+4>>2]=HEAP32[$959+4>>2]|0;HEAP32[$960+8>>2]=HEAP32[$959+8>>2]|0;HEAP32[$960+12>>2]=HEAP32[$959+12>>2]|0;HEAP32[$960+16>>2]=HEAP32[$959+16>>2]|0; //@line 436 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $961 = (invoke_ii(137,($3|0))|0); //@line 437 "./src/cpp/unrar/arcread.cpp"
             $962 = __THREW__; __THREW__ = 0;
             $963 = $962&1;
             if ($963) {
              break L14;
             }
             $964 = ((($41)) + 55888|0); //@line 437 "./src/cpp/unrar/arcread.cpp"
             $965 = ((($964)) + 20|0); //@line 437 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$965>>2] = $961; //@line 437 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $966 = (invoke_ii(134,($3|0))|0); //@line 438 "./src/cpp/unrar/arcread.cpp"
             $967 = __THREW__; __THREW__ = 0;
             $968 = $967&1;
             if ($968) {
              break L14;
             }
             $969 = ((($41)) + 55888|0); //@line 438 "./src/cpp/unrar/arcread.cpp"
             $970 = ((($969)) + 24|0); //@line 438 "./src/cpp/unrar/arcread.cpp"
             HEAP16[$970>>1] = $966; //@line 438 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $971 = (invoke_ii(134,($3|0))|0); //@line 439 "./src/cpp/unrar/arcread.cpp"
             $972 = __THREW__; __THREW__ = 0;
             $973 = $972&1;
             if ($973) {
              break L14;
             }
             $974 = ((($41)) + 55888|0); //@line 439 "./src/cpp/unrar/arcread.cpp"
             $975 = ((($974)) + 26|0); //@line 439 "./src/cpp/unrar/arcread.cpp"
             HEAP16[$975>>1] = $971; //@line 439 "./src/cpp/unrar/arcread.cpp"
             break;
            }
            case 118:  {
             $976 = ((($41)) + 21272|0); //@line 442 "./src/cpp/unrar/arcread.cpp"
             $977 = ((($41)) + 55860|0); //@line 442 "./src/cpp/unrar/arcread.cpp"
             ;HEAP32[$977>>2]=HEAP32[$976>>2]|0;HEAP32[$977+4>>2]=HEAP32[$976+4>>2]|0;HEAP32[$977+8>>2]=HEAP32[$976+8>>2]|0;HEAP32[$977+12>>2]=HEAP32[$976+12>>2]|0;HEAP32[$977+16>>2]=HEAP32[$976+16>>2]|0; //@line 442 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $978 = (invoke_ii(135,($3|0))|0); //@line 443 "./src/cpp/unrar/arcread.cpp"
             $979 = __THREW__; __THREW__ = 0;
             $980 = $979&1;
             if ($980) {
              break L14;
             }
             $981 = ((($41)) + 55860|0); //@line 443 "./src/cpp/unrar/arcread.cpp"
             $982 = ((($981)) + 20|0); //@line 443 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$982>>0] = $978; //@line 443 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $983 = (invoke_ii(135,($3|0))|0); //@line 444 "./src/cpp/unrar/arcread.cpp"
             $984 = __THREW__; __THREW__ = 0;
             $985 = $984&1;
             if ($985) {
              break L14;
             }
             $986 = ((($41)) + 55860|0); //@line 444 "./src/cpp/unrar/arcread.cpp"
             $987 = ((($986)) + 21|0); //@line 444 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$987>>0] = $983; //@line 444 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $988 = (invoke_ii(135,($3|0))|0); //@line 445 "./src/cpp/unrar/arcread.cpp"
             $989 = __THREW__; __THREW__ = 0;
             $990 = $989&1;
             if ($990) {
              break L14;
             }
             $991 = ((($41)) + 55860|0); //@line 445 "./src/cpp/unrar/arcread.cpp"
             $992 = ((($991)) + 22|0); //@line 445 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$992>>0] = $988; //@line 445 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $993 = (invoke_ii(137,($3|0))|0); //@line 446 "./src/cpp/unrar/arcread.cpp"
             $994 = __THREW__; __THREW__ = 0;
             $995 = $994&1;
             if ($995) {
              break L14;
             }
             $996 = ((($41)) + 55860|0); //@line 446 "./src/cpp/unrar/arcread.cpp"
             $997 = ((($996)) + 24|0); //@line 446 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$997>>2] = $993; //@line 446 "./src/cpp/unrar/arcread.cpp"
             break;
            }
            case 120:  {
             $998 = ((($41)) + 21272|0); //@line 449 "./src/cpp/unrar/arcread.cpp"
             $999 = ((($41)) + 55820|0); //@line 449 "./src/cpp/unrar/arcread.cpp"
             ;HEAP32[$999>>2]=HEAP32[$998>>2]|0;HEAP32[$999+4>>2]=HEAP32[$998+4>>2]|0;HEAP32[$999+8>>2]=HEAP32[$998+8>>2]|0;HEAP32[$999+12>>2]=HEAP32[$998+12>>2]|0;HEAP32[$999+16>>2]=HEAP32[$998+16>>2]|0; //@line 449 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $1000 = (invoke_ii(137,($3|0))|0); //@line 450 "./src/cpp/unrar/arcread.cpp"
             $1001 = __THREW__; __THREW__ = 0;
             $1002 = $1001&1;
             if ($1002) {
              break L14;
             }
             $1003 = ((($41)) + 55820|0); //@line 450 "./src/cpp/unrar/arcread.cpp"
             $1004 = ((($1003)) + 20|0); //@line 450 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$1004>>2] = $1000; //@line 450 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $1005 = (invoke_ii(135,($3|0))|0); //@line 451 "./src/cpp/unrar/arcread.cpp"
             $1006 = __THREW__; __THREW__ = 0;
             $1007 = $1006&1;
             if ($1007) {
              break L14;
             }
             $1008 = ((($41)) + 55820|0); //@line 451 "./src/cpp/unrar/arcread.cpp"
             $1009 = ((($1008)) + 24|0); //@line 451 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$1009>>0] = $1005; //@line 451 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $1010 = (invoke_ii(134,($3|0))|0); //@line 452 "./src/cpp/unrar/arcread.cpp"
             $1011 = __THREW__; __THREW__ = 0;
             $1012 = $1011&1;
             if ($1012) {
              break L14;
             }
             $1013 = ((($41)) + 55820|0); //@line 452 "./src/cpp/unrar/arcread.cpp"
             $1014 = ((($1013)) + 26|0); //@line 452 "./src/cpp/unrar/arcread.cpp"
             HEAP16[$1014>>1] = $1010; //@line 452 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $1015 = (invoke_ii(137,($3|0))|0); //@line 453 "./src/cpp/unrar/arcread.cpp"
             $1016 = __THREW__; __THREW__ = 0;
             $1017 = $1016&1;
             if ($1017) {
              break L14;
             }
             $1018 = ((($41)) + 55820|0); //@line 453 "./src/cpp/unrar/arcread.cpp"
             $1019 = ((($1018)) + 28|0); //@line 453 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$1019>>2] = $1015; //@line 453 "./src/cpp/unrar/arcread.cpp"
             $1020 = ((($41)) + 55820|0); //@line 454 "./src/cpp/unrar/arcread.cpp"
             $1021 = ((($1020)) + 32|0); //@line 454 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             (invoke_iiii(95,($3|0),($1021|0),8)|0); //@line 454 "./src/cpp/unrar/arcread.cpp"
             $1022 = __THREW__; __THREW__ = 0;
             $1023 = $1022&1;
             if ($1023) {
              break L14;
             }
             $1024 = ((($41)) + 55820|0); //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1025 = ((($1024)) + 20|0); //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1026 = HEAP32[$1025>>2]|0; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1027 = ((($41)) + 56848|0); //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1028 = $1027; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1029 = $1028; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1030 = HEAP32[$1029>>2]|0; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1031 = (($1028) + 4)|0; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1032 = $1031; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1033 = HEAP32[$1032>>2]|0; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1034 = (_i64Add(($1030|0),($1033|0),($1026|0),0)|0); //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1035 = tempRet0; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1036 = $1027; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1037 = $1036; //@line 455 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$1037>>2] = $1034; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1038 = (($1036) + 4)|0; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1039 = $1038; //@line 455 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$1039>>2] = $1035; //@line 455 "./src/cpp/unrar/arcread.cpp"
             $1040 = ((($41)) + 55820|0); //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1041 = ((($1040)) + 26|0); //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1042 = HEAP16[$1041>>1]|0; //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1043 = $1042&65535; //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1044 = $1043<<9; //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1045 = ($1044|0)<(0); //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1046 = $1045 << 31 >> 31; //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1047 = ((($41)) + 14768|0); //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1048 = $1047; //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1049 = $1048; //@line 456 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$1049>>2] = $1044; //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1050 = (($1048) + 4)|0; //@line 456 "./src/cpp/unrar/arcread.cpp"
             $1051 = $1050; //@line 456 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$1051>>2] = $1046; //@line 456 "./src/cpp/unrar/arcread.cpp"
             break;
            }
            case 119:  {
             $1052 = ((($41)) + 21272|0); //@line 459 "./src/cpp/unrar/arcread.cpp"
             $1053 = ((($41)) + 38608|0); //@line 459 "./src/cpp/unrar/arcread.cpp"
             ;HEAP32[$1053>>2]=HEAP32[$1052>>2]|0;HEAP32[$1053+4>>2]=HEAP32[$1052+4>>2]|0;HEAP32[$1053+8>>2]=HEAP32[$1052+8>>2]|0;HEAP32[$1053+12>>2]=HEAP32[$1052+12>>2]|0;HEAP32[$1053+16>>2]=HEAP32[$1052+16>>2]|0; //@line 459 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $1054 = (invoke_ii(137,($3|0))|0); //@line 460 "./src/cpp/unrar/arcread.cpp"
             $1055 = __THREW__; __THREW__ = 0;
             $1056 = $1055&1;
             if ($1056) {
              break L14;
             }
             $1057 = ((($41)) + 38608|0); //@line 460 "./src/cpp/unrar/arcread.cpp"
             $1058 = ((($1057)) + 20|0); //@line 460 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$1058>>2] = $1054; //@line 460 "./src/cpp/unrar/arcread.cpp"
             $1059 = ((($41)) + 38608|0); //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1060 = ((($1059)) + 20|0); //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1061 = HEAP32[$1060>>2]|0; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1062 = ((($41)) + 56848|0); //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1063 = $1062; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1064 = $1063; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1065 = HEAP32[$1064>>2]|0; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1066 = (($1063) + 4)|0; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1067 = $1066; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1068 = HEAP32[$1067>>2]|0; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1069 = (_i64Add(($1065|0),($1068|0),($1061|0),0)|0); //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1070 = tempRet0; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1071 = $1062; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1072 = $1071; //@line 461 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$1072>>2] = $1069; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1073 = (($1071) + 4)|0; //@line 461 "./src/cpp/unrar/arcread.cpp"
             $1074 = $1073; //@line 461 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$1074>>2] = $1070; //@line 461 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $1075 = (invoke_ii(134,($3|0))|0); //@line 462 "./src/cpp/unrar/arcread.cpp"
             $1076 = __THREW__; __THREW__ = 0;
             $1077 = $1076&1;
             if ($1077) {
              break L14;
             }
             $1078 = ((($41)) + 38608|0); //@line 462 "./src/cpp/unrar/arcread.cpp"
             $1079 = ((($1078)) + 24|0); //@line 462 "./src/cpp/unrar/arcread.cpp"
             HEAP16[$1079>>1] = $1075; //@line 462 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $1080 = (invoke_ii(135,($3|0))|0); //@line 463 "./src/cpp/unrar/arcread.cpp"
             $1081 = __THREW__; __THREW__ = 0;
             $1082 = $1081&1;
             if ($1082) {
              break L14;
             }
             $1083 = ((($41)) + 38608|0); //@line 463 "./src/cpp/unrar/arcread.cpp"
             $1084 = ((($1083)) + 26|0); //@line 463 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$1084>>0] = $1080; //@line 463 "./src/cpp/unrar/arcread.cpp"
             $1085 = ((($41)) + 38608|0); //@line 464 "./src/cpp/unrar/arcread.cpp"
             $1086 = ((($1085)) + 24|0); //@line 464 "./src/cpp/unrar/arcread.cpp"
             $1087 = HEAP16[$1086>>1]|0; //@line 464 "./src/cpp/unrar/arcread.cpp"
             $1088 = $1087&65535; //@line 464 "./src/cpp/unrar/arcread.cpp"
             switch ($1088|0) {
             case 257:  {
              $1089 = ((($41)) + 38608|0); //@line 467 "./src/cpp/unrar/arcread.cpp"
              $1090 = ((($41)) + 55916|0); //@line 467 "./src/cpp/unrar/arcread.cpp"
              ;HEAP32[$1090>>2]=HEAP32[$1089>>2]|0;HEAP32[$1090+4>>2]=HEAP32[$1089+4>>2]|0;HEAP32[$1090+8>>2]=HEAP32[$1089+8>>2]|0;HEAP32[$1090+12>>2]=HEAP32[$1089+12>>2]|0;HEAP32[$1090+16>>2]=HEAP32[$1089+16>>2]|0;HEAP32[$1090+20>>2]=HEAP32[$1089+20>>2]|0;HEAP16[$1090+24>>1]=HEAP16[$1089+24>>1]|0;HEAP8[$1090+26>>0]=HEAP8[$1089+26>>0]|0; //@line 467 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1091 = (invoke_ii(134,($3|0))|0); //@line 468 "./src/cpp/unrar/arcread.cpp"
              $1092 = __THREW__; __THREW__ = 0;
              $1093 = $1092&1;
              if ($1093) {
               break L14;
              }
              $1094 = ((($41)) + 55916|0); //@line 468 "./src/cpp/unrar/arcread.cpp"
              $1095 = ((($1094)) + 28|0); //@line 468 "./src/cpp/unrar/arcread.cpp"
              HEAP16[$1095>>1] = $1091; //@line 468 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1096 = (invoke_ii(134,($3|0))|0); //@line 469 "./src/cpp/unrar/arcread.cpp"
              $1097 = __THREW__; __THREW__ = 0;
              $1098 = $1097&1;
              if ($1098) {
               break L14;
              }
              $1099 = ((($41)) + 55916|0); //@line 469 "./src/cpp/unrar/arcread.cpp"
              $1100 = ((($1099)) + 30|0); //@line 469 "./src/cpp/unrar/arcread.cpp"
              HEAP16[$1100>>1] = $1096; //@line 469 "./src/cpp/unrar/arcread.cpp"
              $1101 = ((($41)) + 55916|0); //@line 470 "./src/cpp/unrar/arcread.cpp"
              $1102 = ((($1101)) + 28|0); //@line 470 "./src/cpp/unrar/arcread.cpp"
              $1103 = HEAP16[$1102>>1]|0; //@line 470 "./src/cpp/unrar/arcread.cpp"
              $1104 = $1103&65535; //@line 470 "./src/cpp/unrar/arcread.cpp"
              $1105 = ($1104>>>0)>=(256); //@line 470 "./src/cpp/unrar/arcread.cpp"
              if ($1105) {
               $1106 = ((($41)) + 55916|0); //@line 471 "./src/cpp/unrar/arcread.cpp"
               $1107 = ((($1106)) + 28|0); //@line 471 "./src/cpp/unrar/arcread.cpp"
               HEAP16[$1107>>1] = 255; //@line 471 "./src/cpp/unrar/arcread.cpp"
              }
              $1108 = ((($41)) + 55916|0); //@line 472 "./src/cpp/unrar/arcread.cpp"
              $1109 = ((($1108)) + 30|0); //@line 472 "./src/cpp/unrar/arcread.cpp"
              $1110 = HEAP16[$1109>>1]|0; //@line 472 "./src/cpp/unrar/arcread.cpp"
              $1111 = $1110&65535; //@line 472 "./src/cpp/unrar/arcread.cpp"
              $1112 = ($1111>>>0)>=(256); //@line 472 "./src/cpp/unrar/arcread.cpp"
              if ($1112) {
               $1113 = ((($41)) + 55916|0); //@line 473 "./src/cpp/unrar/arcread.cpp"
               $1114 = ((($1113)) + 30|0); //@line 473 "./src/cpp/unrar/arcread.cpp"
               HEAP16[$1114>>1] = 255; //@line 473 "./src/cpp/unrar/arcread.cpp"
              }
              $1115 = ((($41)) + 55916|0); //@line 474 "./src/cpp/unrar/arcread.cpp"
              $1116 = ((($1115)) + 32|0); //@line 474 "./src/cpp/unrar/arcread.cpp"
              $1117 = ((($41)) + 55916|0); //@line 474 "./src/cpp/unrar/arcread.cpp"
              $1118 = ((($1117)) + 28|0); //@line 474 "./src/cpp/unrar/arcread.cpp"
              $1119 = HEAP16[$1118>>1]|0; //@line 474 "./src/cpp/unrar/arcread.cpp"
              $1120 = $1119&65535; //@line 474 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              (invoke_iiii(95,($3|0),($1116|0),($1120|0))|0); //@line 474 "./src/cpp/unrar/arcread.cpp"
              $1121 = __THREW__; __THREW__ = 0;
              $1122 = $1121&1;
              if ($1122) {
               break L14;
              }
              $1123 = ((($41)) + 55916|0); //@line 475 "./src/cpp/unrar/arcread.cpp"
              $1124 = ((($1123)) + 288|0); //@line 475 "./src/cpp/unrar/arcread.cpp"
              $1125 = ((($41)) + 55916|0); //@line 475 "./src/cpp/unrar/arcread.cpp"
              $1126 = ((($1125)) + 30|0); //@line 475 "./src/cpp/unrar/arcread.cpp"
              $1127 = HEAP16[$1126>>1]|0; //@line 475 "./src/cpp/unrar/arcread.cpp"
              $1128 = $1127&65535; //@line 475 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              (invoke_iiii(95,($3|0),($1124|0),($1128|0))|0); //@line 475 "./src/cpp/unrar/arcread.cpp"
              $1129 = __THREW__; __THREW__ = 0;
              $1130 = $1129&1;
              if ($1130) {
               break L14;
              }
              $1131 = ((($41)) + 55916|0); //@line 476 "./src/cpp/unrar/arcread.cpp"
              $1132 = ((($1131)) + 32|0); //@line 476 "./src/cpp/unrar/arcread.cpp"
              $1133 = ((($41)) + 55916|0); //@line 476 "./src/cpp/unrar/arcread.cpp"
              $1134 = ((($1133)) + 28|0); //@line 476 "./src/cpp/unrar/arcread.cpp"
              $1135 = HEAP16[$1134>>1]|0; //@line 476 "./src/cpp/unrar/arcread.cpp"
              $1136 = $1135&65535; //@line 476 "./src/cpp/unrar/arcread.cpp"
              $1137 = (($1132) + ($1136)|0); //@line 476 "./src/cpp/unrar/arcread.cpp"
              HEAP8[$1137>>0] = 0; //@line 476 "./src/cpp/unrar/arcread.cpp"
              $1138 = ((($41)) + 55916|0); //@line 477 "./src/cpp/unrar/arcread.cpp"
              $1139 = ((($1138)) + 288|0); //@line 477 "./src/cpp/unrar/arcread.cpp"
              $1140 = ((($41)) + 55916|0); //@line 477 "./src/cpp/unrar/arcread.cpp"
              $1141 = ((($1140)) + 30|0); //@line 477 "./src/cpp/unrar/arcread.cpp"
              $1142 = HEAP16[$1141>>1]|0; //@line 477 "./src/cpp/unrar/arcread.cpp"
              $1143 = $1142&65535; //@line 477 "./src/cpp/unrar/arcread.cpp"
              $1144 = (($1139) + ($1143)|0); //@line 477 "./src/cpp/unrar/arcread.cpp"
              HEAP8[$1144>>0] = 0; //@line 477 "./src/cpp/unrar/arcread.cpp"
              break L49;
              break;
             }
             case 258:  {
              $1145 = ((($41)) + 38608|0); //@line 480 "./src/cpp/unrar/arcread.cpp"
              $1146 = ((($41)) + 56460|0); //@line 480 "./src/cpp/unrar/arcread.cpp"
              ;HEAP32[$1146>>2]=HEAP32[$1145>>2]|0;HEAP32[$1146+4>>2]=HEAP32[$1145+4>>2]|0;HEAP32[$1146+8>>2]=HEAP32[$1145+8>>2]|0;HEAP32[$1146+12>>2]=HEAP32[$1145+12>>2]|0;HEAP32[$1146+16>>2]=HEAP32[$1145+16>>2]|0;HEAP32[$1146+20>>2]=HEAP32[$1145+20>>2]|0;HEAP16[$1146+24>>1]=HEAP16[$1145+24>>1]|0;HEAP8[$1146+26>>0]=HEAP8[$1145+26>>0]|0; //@line 480 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1147 = (invoke_ii(137,($3|0))|0); //@line 481 "./src/cpp/unrar/arcread.cpp"
              $1148 = __THREW__; __THREW__ = 0;
              $1149 = $1148&1;
              if ($1149) {
               break L14;
              }
              $1150 = ((($41)) + 56460|0); //@line 481 "./src/cpp/unrar/arcread.cpp"
              $1151 = ((($1150)) + 28|0); //@line 481 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$1151>>2] = $1147; //@line 481 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1152 = (invoke_ii(137,($3|0))|0); //@line 482 "./src/cpp/unrar/arcread.cpp"
              $1153 = __THREW__; __THREW__ = 0;
              $1154 = $1153&1;
              if ($1154) {
               break L14;
              }
              $1155 = ((($41)) + 56460|0); //@line 482 "./src/cpp/unrar/arcread.cpp"
              $1156 = ((($1155)) + 32|0); //@line 482 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$1156>>2] = $1152; //@line 482 "./src/cpp/unrar/arcread.cpp"
              break L49;
              break;
             }
             case 260: case 259: case 256:  {
              $1157 = ((($41)) + 38608|0); //@line 487 "./src/cpp/unrar/arcread.cpp"
              $1158 = ((($41)) + 56496|0); //@line 487 "./src/cpp/unrar/arcread.cpp"
              ;HEAP32[$1158>>2]=HEAP32[$1157>>2]|0;HEAP32[$1158+4>>2]=HEAP32[$1157+4>>2]|0;HEAP32[$1158+8>>2]=HEAP32[$1157+8>>2]|0;HEAP32[$1158+12>>2]=HEAP32[$1157+12>>2]|0;HEAP32[$1158+16>>2]=HEAP32[$1157+16>>2]|0;HEAP32[$1158+20>>2]=HEAP32[$1157+20>>2]|0;HEAP16[$1158+24>>1]=HEAP16[$1157+24>>1]|0;HEAP8[$1158+26>>0]=HEAP8[$1157+26>>0]|0; //@line 487 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1159 = (invoke_ii(137,($3|0))|0); //@line 488 "./src/cpp/unrar/arcread.cpp"
              $1160 = __THREW__; __THREW__ = 0;
              $1161 = $1160&1;
              if ($1161) {
               break L14;
              }
              $1162 = ((($41)) + 56496|0); //@line 488 "./src/cpp/unrar/arcread.cpp"
              $1163 = ((($1162)) + 28|0); //@line 488 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$1163>>2] = $1159; //@line 488 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1164 = (invoke_ii(135,($3|0))|0); //@line 489 "./src/cpp/unrar/arcread.cpp"
              $1165 = __THREW__; __THREW__ = 0;
              $1166 = $1165&1;
              if ($1166) {
               break L14;
              }
              $1167 = ((($41)) + 56496|0); //@line 489 "./src/cpp/unrar/arcread.cpp"
              $1168 = ((($1167)) + 32|0); //@line 489 "./src/cpp/unrar/arcread.cpp"
              HEAP8[$1168>>0] = $1164; //@line 489 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1169 = (invoke_ii(135,($3|0))|0); //@line 490 "./src/cpp/unrar/arcread.cpp"
              $1170 = __THREW__; __THREW__ = 0;
              $1171 = $1170&1;
              if ($1171) {
               break L14;
              }
              $1172 = ((($41)) + 56496|0); //@line 490 "./src/cpp/unrar/arcread.cpp"
              $1173 = ((($1172)) + 33|0); //@line 490 "./src/cpp/unrar/arcread.cpp"
              HEAP8[$1173>>0] = $1169; //@line 490 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1174 = (invoke_ii(137,($3|0))|0); //@line 491 "./src/cpp/unrar/arcread.cpp"
              $1175 = __THREW__; __THREW__ = 0;
              $1176 = $1175&1;
              if ($1176) {
               break L14;
              }
              $1177 = ((($41)) + 56496|0); //@line 491 "./src/cpp/unrar/arcread.cpp"
              $1178 = ((($1177)) + 36|0); //@line 491 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$1178>>2] = $1174; //@line 491 "./src/cpp/unrar/arcread.cpp"
              break L49;
              break;
             }
             case 261:  {
              $1179 = ((($41)) + 38608|0); //@line 494 "./src/cpp/unrar/arcread.cpp"
              $1180 = ((($41)) + 56536|0); //@line 494 "./src/cpp/unrar/arcread.cpp"
              ;HEAP32[$1180>>2]=HEAP32[$1179>>2]|0;HEAP32[$1180+4>>2]=HEAP32[$1179+4>>2]|0;HEAP32[$1180+8>>2]=HEAP32[$1179+8>>2]|0;HEAP32[$1180+12>>2]=HEAP32[$1179+12>>2]|0;HEAP32[$1180+16>>2]=HEAP32[$1179+16>>2]|0;HEAP32[$1180+20>>2]=HEAP32[$1179+20>>2]|0;HEAP16[$1180+24>>1]=HEAP16[$1179+24>>1]|0;HEAP8[$1180+26>>0]=HEAP8[$1179+26>>0]|0; //@line 494 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1181 = (invoke_ii(137,($3|0))|0); //@line 495 "./src/cpp/unrar/arcread.cpp"
              $1182 = __THREW__; __THREW__ = 0;
              $1183 = $1182&1;
              if ($1183) {
               break L14;
              }
              $1184 = ((($41)) + 56536|0); //@line 495 "./src/cpp/unrar/arcread.cpp"
              $1185 = ((($1184)) + 28|0); //@line 495 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$1185>>2] = $1181; //@line 495 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1186 = (invoke_ii(135,($3|0))|0); //@line 496 "./src/cpp/unrar/arcread.cpp"
              $1187 = __THREW__; __THREW__ = 0;
              $1188 = $1187&1;
              if ($1188) {
               break L14;
              }
              $1189 = ((($41)) + 56536|0); //@line 496 "./src/cpp/unrar/arcread.cpp"
              $1190 = ((($1189)) + 32|0); //@line 496 "./src/cpp/unrar/arcread.cpp"
              HEAP8[$1190>>0] = $1186; //@line 496 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1191 = (invoke_ii(135,($3|0))|0); //@line 497 "./src/cpp/unrar/arcread.cpp"
              $1192 = __THREW__; __THREW__ = 0;
              $1193 = $1192&1;
              if ($1193) {
               break L14;
              }
              $1194 = ((($41)) + 56536|0); //@line 497 "./src/cpp/unrar/arcread.cpp"
              $1195 = ((($1194)) + 33|0); //@line 497 "./src/cpp/unrar/arcread.cpp"
              HEAP8[$1195>>0] = $1191; //@line 497 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1196 = (invoke_ii(137,($3|0))|0); //@line 498 "./src/cpp/unrar/arcread.cpp"
              $1197 = __THREW__; __THREW__ = 0;
              $1198 = $1197&1;
              if ($1198) {
               break L14;
              }
              $1199 = ((($41)) + 56536|0); //@line 498 "./src/cpp/unrar/arcread.cpp"
              $1200 = ((($1199)) + 36|0); //@line 498 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$1200>>2] = $1196; //@line 498 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              $1201 = (invoke_ii(134,($3|0))|0); //@line 499 "./src/cpp/unrar/arcread.cpp"
              $1202 = __THREW__; __THREW__ = 0;
              $1203 = $1202&1;
              if ($1203) {
               break L14;
              }
              $1204 = ((($41)) + 56536|0); //@line 499 "./src/cpp/unrar/arcread.cpp"
              $1205 = ((($1204)) + 40|0); //@line 499 "./src/cpp/unrar/arcread.cpp"
              HEAP16[$1205>>1] = $1201; //@line 499 "./src/cpp/unrar/arcread.cpp"
              $1206 = ((($41)) + 56536|0); //@line 500 "./src/cpp/unrar/arcread.cpp"
              $1207 = ((($1206)) + 40|0); //@line 500 "./src/cpp/unrar/arcread.cpp"
              $1208 = HEAP16[$1207>>1]|0; //@line 500 "./src/cpp/unrar/arcread.cpp"
              $1209 = $1208&65535; //@line 500 "./src/cpp/unrar/arcread.cpp"
              $1210 = ($1209>>>0)>=(260); //@line 500 "./src/cpp/unrar/arcread.cpp"
              if ($1210) {
               $1211 = ((($41)) + 56536|0); //@line 501 "./src/cpp/unrar/arcread.cpp"
               $1212 = ((($1211)) + 40|0); //@line 501 "./src/cpp/unrar/arcread.cpp"
               HEAP16[$1212>>1] = 259; //@line 501 "./src/cpp/unrar/arcread.cpp"
              }
              $1213 = ((($41)) + 56536|0); //@line 502 "./src/cpp/unrar/arcread.cpp"
              $1214 = ((($1213)) + 42|0); //@line 502 "./src/cpp/unrar/arcread.cpp"
              $1215 = ((($41)) + 56536|0); //@line 502 "./src/cpp/unrar/arcread.cpp"
              $1216 = ((($1215)) + 40|0); //@line 502 "./src/cpp/unrar/arcread.cpp"
              $1217 = HEAP16[$1216>>1]|0; //@line 502 "./src/cpp/unrar/arcread.cpp"
              $1218 = $1217&65535; //@line 502 "./src/cpp/unrar/arcread.cpp"
              __THREW__ = 0;
              (invoke_iiii(95,($3|0),($1214|0),($1218|0))|0); //@line 502 "./src/cpp/unrar/arcread.cpp"
              $1219 = __THREW__; __THREW__ = 0;
              $1220 = $1219&1;
              if ($1220) {
               break L14;
              }
              $1221 = ((($41)) + 56536|0); //@line 503 "./src/cpp/unrar/arcread.cpp"
              $1222 = ((($1221)) + 42|0); //@line 503 "./src/cpp/unrar/arcread.cpp"
              $1223 = ((($41)) + 56536|0); //@line 503 "./src/cpp/unrar/arcread.cpp"
              $1224 = ((($1223)) + 40|0); //@line 503 "./src/cpp/unrar/arcread.cpp"
              $1225 = HEAP16[$1224>>1]|0; //@line 503 "./src/cpp/unrar/arcread.cpp"
              $1226 = $1225&65535; //@line 503 "./src/cpp/unrar/arcread.cpp"
              $1227 = (($1222) + ($1226)|0); //@line 503 "./src/cpp/unrar/arcread.cpp"
              HEAP8[$1227>>0] = 0; //@line 503 "./src/cpp/unrar/arcread.cpp"
              break L49;
              break;
             }
             default: {
              break L49;
             }
             }
             break;
            }
            default: {
             $1228 = ((($41)) + 21272|0); //@line 509 "./src/cpp/unrar/arcread.cpp"
             $1229 = ((($1228)) + 8|0); //@line 509 "./src/cpp/unrar/arcread.cpp"
             $1230 = HEAP32[$1229>>2]|0; //@line 509 "./src/cpp/unrar/arcread.cpp"
             $1231 = $1230 & 32768; //@line 509 "./src/cpp/unrar/arcread.cpp"
             $1232 = ($1231|0)!=(0); //@line 509 "./src/cpp/unrar/arcread.cpp"
             if ($1232) {
              __THREW__ = 0;
              $1233 = (invoke_ii(137,($3|0))|0); //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1234 = __THREW__; __THREW__ = 0;
              $1235 = $1234&1;
              if ($1235) {
               break L14;
              }
              $1236 = ((($41)) + 56848|0); //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1237 = $1236; //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1238 = $1237; //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1239 = HEAP32[$1238>>2]|0; //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1240 = (($1237) + 4)|0; //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1241 = $1240; //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1242 = HEAP32[$1241>>2]|0; //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1243 = (_i64Add(($1239|0),($1242|0),($1233|0),0)|0); //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1244 = tempRet0; //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1245 = $1236; //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1246 = $1245; //@line 510 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$1246>>2] = $1243; //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1247 = (($1245) + 4)|0; //@line 510 "./src/cpp/unrar/arcread.cpp"
              $1248 = $1247; //@line 510 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$1248>>2] = $1244; //@line 510 "./src/cpp/unrar/arcread.cpp"
             }
            }
            }
           } while(0);
           __THREW__ = 0;
           $1249 = (invoke_iii(156,($3|0),0)|0); //@line 514 "./src/cpp/unrar/arcread.cpp"
           $1250 = __THREW__; __THREW__ = 0;
           $1251 = $1250&1;
           if (!($1251)) {
            $1252 = $1249&65535; //@line 514 "./src/cpp/unrar/arcread.cpp"
            $36 = $1252; //@line 514 "./src/cpp/unrar/arcread.cpp"
            $1253 = ((($41)) + 21272|0); //@line 517 "./src/cpp/unrar/arcread.cpp"
            $1254 = HEAP32[$1253>>2]|0; //@line 517 "./src/cpp/unrar/arcread.cpp"
            $1255 = $36; //@line 517 "./src/cpp/unrar/arcread.cpp"
            $1256 = $1255&65535; //@line 517 "./src/cpp/unrar/arcread.cpp"
            $1257 = ($1254|0)!=($1256|0); //@line 517 "./src/cpp/unrar/arcread.cpp"
            do {
             if ($1257) {
              $1258 = ((($41)) + 21272|0); //@line 517 "./src/cpp/unrar/arcread.cpp"
              $1259 = ((($1258)) + 4|0); //@line 517 "./src/cpp/unrar/arcread.cpp"
              $1260 = HEAP32[$1259>>2]|0; //@line 517 "./src/cpp/unrar/arcread.cpp"
              $1261 = ($1260|0)!=(121); //@line 517 "./src/cpp/unrar/arcread.cpp"
              if ($1261) {
               $1262 = ((($41)) + 21272|0); //@line 518 "./src/cpp/unrar/arcread.cpp"
               $1263 = ((($1262)) + 4|0); //@line 518 "./src/cpp/unrar/arcread.cpp"
               $1264 = HEAP32[$1263>>2]|0; //@line 518 "./src/cpp/unrar/arcread.cpp"
               $1265 = ($1264|0)!=(118); //@line 518 "./src/cpp/unrar/arcread.cpp"
               if ($1265) {
                $37 = 0; //@line 520 "./src/cpp/unrar/arcread.cpp"
                $1266 = ((($41)) + 21272|0); //@line 521 "./src/cpp/unrar/arcread.cpp"
                $1267 = ((($1266)) + 4|0); //@line 521 "./src/cpp/unrar/arcread.cpp"
                $1268 = HEAP32[$1267>>2]|0; //@line 521 "./src/cpp/unrar/arcread.cpp"
                $1269 = ($1268|0)==(5); //@line 521 "./src/cpp/unrar/arcread.cpp"
                L246: do {
                 if ($1269) {
                  $1270 = ((($41)) + 38576|0); //@line 521 "./src/cpp/unrar/arcread.cpp"
                  $1271 = ((($1270)) + 30|0); //@line 521 "./src/cpp/unrar/arcread.cpp"
                  $1272 = HEAP8[$1271>>0]|0; //@line 521 "./src/cpp/unrar/arcread.cpp"
                  $1273 = $1272&1; //@line 521 "./src/cpp/unrar/arcread.cpp"
                  if (!($1273)) {
                   break;
                  }
                  __THREW__ = 0;
                  invoke_vii(159,($38|0),($41|0)); //@line 525 "./src/cpp/unrar/arcread.cpp"
                  $1274 = __THREW__; __THREW__ = 0;
                  $1275 = $1274&1;
                  if ($1275) {
                   break L14;
                  }
                  $1276 = HEAP32[$41>>2]|0; //@line 526 "./src/cpp/unrar/arcread.cpp"
                  $1277 = ((($1276)) + 20|0); //@line 526 "./src/cpp/unrar/arcread.cpp"
                  $1278 = HEAP32[$1277>>2]|0; //@line 526 "./src/cpp/unrar/arcread.cpp"
                  __THREW__ = 0;
                  $1279 = (invoke_ii($1278|0,($41|0))|0); //@line 526 "./src/cpp/unrar/arcread.cpp"
                  $1280 = tempRet0; //@line 526 "./src/cpp/unrar/arcread.cpp"
                  $1281 = __THREW__; __THREW__ = 0;
                  $1282 = $1281&1;
                  L250: do {
                   if (!($1282)) {
                    $1283 = $39; //@line 526 "./src/cpp/unrar/arcread.cpp"
                    $1284 = $1283; //@line 526 "./src/cpp/unrar/arcread.cpp"
                    HEAP32[$1284>>2] = $1279; //@line 526 "./src/cpp/unrar/arcread.cpp"
                    $1285 = (($1283) + 4)|0; //@line 526 "./src/cpp/unrar/arcread.cpp"
                    $1286 = $1285; //@line 526 "./src/cpp/unrar/arcread.cpp"
                    HEAP32[$1286>>2] = $1280; //@line 526 "./src/cpp/unrar/arcread.cpp"
                    $1287 = HEAP32[$41>>2]|0; //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1288 = ((($1287)) + 16|0); //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1289 = HEAP32[$1288>>2]|0; //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1290 = $39; //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1291 = $1290; //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1292 = HEAP32[$1291>>2]|0; //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1293 = (($1290) + 4)|0; //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1294 = $1293; //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1295 = HEAP32[$1294>>2]|0; //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1296 = (_i64Subtract(($1292|0),($1295|0),7,0)|0); //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1297 = tempRet0; //@line 527 "./src/cpp/unrar/arcread.cpp"
                    __THREW__ = 0;
                    invoke_viiii($1289|0,($41|0),($1296|0),($1297|0),0); //@line 527 "./src/cpp/unrar/arcread.cpp"
                    $1298 = __THREW__; __THREW__ = 0;
                    $1299 = $1298&1;
                    if ($1299) {
                     break;
                    }
                    $37 = 1; //@line 528 "./src/cpp/unrar/arcread.cpp"
                    $40 = 0; //@line 529 "./src/cpp/unrar/arcread.cpp"
                    while(1) {
                     $1300 = $40; //@line 529 "./src/cpp/unrar/arcread.cpp"
                     $1301 = ($1300|0)<(7); //@line 529 "./src/cpp/unrar/arcread.cpp"
                     if (!($1301)) {
                      break;
                     }
                     __THREW__ = 0;
                     $1302 = (invoke_ii(97,($41|0))|0); //@line 530 "./src/cpp/unrar/arcread.cpp"
                     $1303 = __THREW__; __THREW__ = 0;
                     $1304 = $1303&1;
                     if ($1304) {
                      break L250;
                     }
                     $1305 = $1302&255; //@line 530 "./src/cpp/unrar/arcread.cpp"
                     $1306 = ($1305|0)!=(0); //@line 530 "./src/cpp/unrar/arcread.cpp"
                     if ($1306) {
                      $37 = 0; //@line 531 "./src/cpp/unrar/arcread.cpp"
                     }
                     $1309 = $40; //@line 529 "./src/cpp/unrar/arcread.cpp"
                     $1310 = (($1309) + 1)|0; //@line 529 "./src/cpp/unrar/arcread.cpp"
                     $40 = $1310; //@line 529 "./src/cpp/unrar/arcread.cpp"
                    }
                    __ZN11SaveFilePosD2Ev($38); //@line 532 "./src/cpp/unrar/arcread.cpp"
                    break L246;
                   }
                  } while(0);
                  $1307 = ___cxa_find_matching_catch_2()|0;
                  $1308 = tempRet0;
                  $5 = $1307; //@line 554 "./src/cpp/unrar/arcread.cpp"
                  $6 = $1308; //@line 554 "./src/cpp/unrar/arcread.cpp"
                  __ZN11SaveFilePosD2Ev($38); //@line 532 "./src/cpp/unrar/arcread.cpp"
                  __ZN7RawReadD2Ev($3); //@line 554 "./src/cpp/unrar/arcread.cpp"
                  $1348 = $5; //@line 554 "./src/cpp/unrar/arcread.cpp"
                  $1349 = $6; //@line 554 "./src/cpp/unrar/arcread.cpp"
                  ___resumeException($1348|0);
                  // unreachable;
                 }
                } while(0);
                $1311 = $37; //@line 533 "./src/cpp/unrar/arcread.cpp"
                $1312 = $1311&1; //@line 533 "./src/cpp/unrar/arcread.cpp"
                if ($1312) {
                 break;
                }
                $1313 = ((($41)) + 56876|0); //@line 535 "./src/cpp/unrar/arcread.cpp"
                HEAP8[$1313>>0] = 1; //@line 535 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_vii(157,(756|0),3); //@line 536 "./src/cpp/unrar/arcread.cpp"
                $1314 = __THREW__; __THREW__ = 0;
                $1315 = $1314&1;
                if ($1315) {
                 break L14;
                }
                $1316 = $4; //@line 538 "./src/cpp/unrar/arcread.cpp"
                $1317 = $1316&1; //@line 538 "./src/cpp/unrar/arcread.cpp"
                if (!($1317)) {
                 break;
                }
                $1318 = ((($41)) + 24|0); //@line 540 "./src/cpp/unrar/arcread.cpp"
                $1319 = ((($41)) + 24|0); //@line 540 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_viii(158,4,($1318|0),($1319|0)); //@line 540 "./src/cpp/unrar/arcread.cpp"
                $1320 = __THREW__; __THREW__ = 0;
                $1321 = $1320&1;
                if ($1321) {
                 break L14;
                }
                $1322 = ((($41)) + 56877|0); //@line 541 "./src/cpp/unrar/arcread.cpp"
                HEAP8[$1322>>0] = 1; //@line 541 "./src/cpp/unrar/arcread.cpp"
                $1 = 0; //@line 542 "./src/cpp/unrar/arcread.cpp"
                $8 = 1;
                __ZN7RawReadD2Ev($3); //@line 554 "./src/cpp/unrar/arcread.cpp"
                $1347 = $1; //@line 554 "./src/cpp/unrar/arcread.cpp"
                STACKTOP = sp;return ($1347|0); //@line 554 "./src/cpp/unrar/arcread.cpp"
               }
              }
             }
            } while(0);
            $1323 = ((($41)) + 56848|0); //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1324 = $1323; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1325 = $1324; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1326 = HEAP32[$1325>>2]|0; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1327 = (($1324) + 4)|0; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1328 = $1327; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1329 = HEAP32[$1328>>2]|0; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1330 = ((($41)) + 56840|0); //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1331 = $1330; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1332 = $1331; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1333 = HEAP32[$1332>>2]|0; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1334 = (($1331) + 4)|0; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1335 = $1334; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1336 = HEAP32[$1335>>2]|0; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1337 = ($1329|0)<($1336|0); //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1338 = ($1326>>>0)<=($1333>>>0); //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1339 = ($1329|0)==($1336|0); //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1340 = $1339 & $1338; //@line 547 "./src/cpp/unrar/arcread.cpp"
            $1341 = $1337 | $1340; //@line 547 "./src/cpp/unrar/arcread.cpp"
            if ($1341) {
             __THREW__ = 0;
             invoke_vi(147,($41|0)); //@line 549 "./src/cpp/unrar/arcread.cpp"
             $1342 = __THREW__; __THREW__ = 0;
             $1343 = $1342&1;
             if ($1343) {
              break;
             }
             $1 = 0; //@line 550 "./src/cpp/unrar/arcread.cpp"
             $8 = 1;
             __ZN7RawReadD2Ev($3); //@line 554 "./src/cpp/unrar/arcread.cpp"
             $1347 = $1; //@line 554 "./src/cpp/unrar/arcread.cpp"
             STACKTOP = sp;return ($1347|0); //@line 554 "./src/cpp/unrar/arcread.cpp"
            } else {
             __THREW__ = 0;
             $1344 = (invoke_ii(141,($3|0))|0); //@line 553 "./src/cpp/unrar/arcread.cpp"
             $1345 = __THREW__; __THREW__ = 0;
             $1346 = $1345&1;
             if ($1346) {
              break;
             }
             $1 = $1344; //@line 553 "./src/cpp/unrar/arcread.cpp"
             $8 = 1;
             __ZN7RawReadD2Ev($3); //@line 554 "./src/cpp/unrar/arcread.cpp"
             $1347 = $1; //@line 554 "./src/cpp/unrar/arcread.cpp"
             STACKTOP = sp;return ($1347|0); //@line 554 "./src/cpp/unrar/arcread.cpp"
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 $76 = ___cxa_find_matching_catch_2()|0;
 $77 = tempRet0;
 $5 = $76; //@line 554 "./src/cpp/unrar/arcread.cpp"
 $6 = $77; //@line 554 "./src/cpp/unrar/arcread.cpp"
 __ZN7RawReadD2Ev($3); //@line 554 "./src/cpp/unrar/arcread.cpp"
 $1348 = $5; //@line 554 "./src/cpp/unrar/arcread.cpp"
 $1349 = $6; //@line 554 "./src/cpp/unrar/arcread.cpp"
 ___resumeException($1348|0);
 // unreachable;
 return (0)|0;
}
function __ZN7Archive12ReadHeader50Ev($0) {
 $0 = $0|0;
 var $$sink = 0, $$sink5 = 0, $$sink6 = 0, $$sink8 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0;
 var $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0;
 var $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0;
 var $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0;
 var $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0;
 var $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0;
 var $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0;
 var $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0;
 var $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0;
 var $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0;
 var $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0;
 var $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0;
 var $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0;
 var $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8544|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(8544|0);
 $3 = sp + 224|0;
 $7 = sp + 8512|0;
 $9 = sp + 8504|0;
 $12 = sp + 144|0;
 $17 = sp + 136|0;
 $18 = sp + 128|0;
 $21 = sp + 8496|0;
 $22 = sp + 16|0;
 $23 = sp + 8464|0;
 $25 = sp + 8|0;
 $26 = sp;
 $32 = sp + 264|0;
 $2 = $0;
 $35 = $2;
 __ZN7RawReadC2EP4File($3,$35); //@line 559 "./src/cpp/unrar/arcread.cpp"
 $36 = ((($35)) + 56868|0); //@line 561 "./src/cpp/unrar/arcread.cpp"
 $37 = HEAP8[$36>>0]|0; //@line 561 "./src/cpp/unrar/arcread.cpp"
 $38 = $37&1; //@line 561 "./src/cpp/unrar/arcread.cpp"
 if ($38) {
  $39 = ((($35)) + 56840|0); //@line 561 "./src/cpp/unrar/arcread.cpp"
  $40 = $39; //@line 561 "./src/cpp/unrar/arcread.cpp"
  $41 = $40; //@line 561 "./src/cpp/unrar/arcread.cpp"
  $42 = HEAP32[$41>>2]|0; //@line 561 "./src/cpp/unrar/arcread.cpp"
  $43 = (($40) + 4)|0; //@line 561 "./src/cpp/unrar/arcread.cpp"
  $44 = $43; //@line 561 "./src/cpp/unrar/arcread.cpp"
  $45 = HEAP32[$44>>2]|0; //@line 561 "./src/cpp/unrar/arcread.cpp"
  $46 = ((($35)) + 56872|0); //@line 561 "./src/cpp/unrar/arcread.cpp"
  $47 = HEAP32[$46>>2]|0; //@line 561 "./src/cpp/unrar/arcread.cpp"
  $48 = (_i64Add(($47|0),0,8,0)|0); //@line 561 "./src/cpp/unrar/arcread.cpp"
  $49 = tempRet0; //@line 561 "./src/cpp/unrar/arcread.cpp"
  $50 = ($45|0)>($49|0); //@line 561 "./src/cpp/unrar/arcread.cpp"
  $51 = ($42>>>0)>($48>>>0); //@line 561 "./src/cpp/unrar/arcread.cpp"
  $52 = ($45|0)==($49|0); //@line 561 "./src/cpp/unrar/arcread.cpp"
  $53 = $52 & $51; //@line 561 "./src/cpp/unrar/arcread.cpp"
  $54 = $50 | $53; //@line 561 "./src/cpp/unrar/arcread.cpp"
  $56 = $54;
 } else {
  $56 = 0;
 }
 $55 = $56&1; //@line 561 "./src/cpp/unrar/arcread.cpp"
 $4 = $55; //@line 561 "./src/cpp/unrar/arcread.cpp"
 $57 = $4; //@line 563 "./src/cpp/unrar/arcread.cpp"
 $58 = $57&1; //@line 563 "./src/cpp/unrar/arcread.cpp"
 do {
  if ($58) {
   __THREW__ = 0;
   invoke_vi(142,($35|0)); //@line 568 "./src/cpp/unrar/arcread.cpp"
   $59 = __THREW__; __THREW__ = 0;
   $60 = $59&1;
   if (!($60)) {
    $61 = HEAP32[$35>>2]|0; //@line 571 "./src/cpp/unrar/arcread.cpp"
    $62 = ((($61)) + 12|0); //@line 571 "./src/cpp/unrar/arcread.cpp"
    $63 = HEAP32[$62>>2]|0; //@line 571 "./src/cpp/unrar/arcread.cpp"
    __THREW__ = 0;
    $64 = (invoke_iiii($63|0,($35|0),($7|0),16)|0); //@line 571 "./src/cpp/unrar/arcread.cpp"
    $65 = __THREW__; __THREW__ = 0;
    $66 = $65&1;
    if (!($66)) {
     $67 = ($64|0)!=(16); //@line 571 "./src/cpp/unrar/arcread.cpp"
     if ($67) {
      __THREW__ = 0;
      invoke_vi(143,($35|0)); //@line 573 "./src/cpp/unrar/arcread.cpp"
      $68 = __THREW__; __THREW__ = 0;
      $69 = $68&1;
      if ($69) {
       break;
      }
      $1 = 0; //@line 574 "./src/cpp/unrar/arcread.cpp"
      $8 = 1;
      __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
      $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
      STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
     }
     $74 = ((($35)) + 8220|0); //@line 578 "./src/cpp/unrar/arcread.cpp"
     $75 = ((($35)) + 14764|0); //@line 578 "./src/cpp/unrar/arcread.cpp"
     $76 = HEAP32[$75>>2]|0; //@line 578 "./src/cpp/unrar/arcread.cpp"
     $77 = ((($76)) + 41000|0); //@line 578 "./src/cpp/unrar/arcread.cpp"
     $78 = ((($35)) + 21368|0); //@line 578 "./src/cpp/unrar/arcread.cpp"
     $79 = ((($78)) + 28|0); //@line 578 "./src/cpp/unrar/arcread.cpp"
     $80 = ((($35)) + 21368|0); //@line 578 "./src/cpp/unrar/arcread.cpp"
     $81 = ((($80)) + 24|0); //@line 578 "./src/cpp/unrar/arcread.cpp"
     $82 = HEAP32[$81>>2]|0; //@line 578 "./src/cpp/unrar/arcread.cpp"
     __THREW__ = 0;
     (invoke_iiiiiiiiii(144,($74|0),0,5,($77|0),($79|0),($7|0),($82|0),(0|0),($9|0))|0); //@line 578 "./src/cpp/unrar/arcread.cpp"
     $83 = __THREW__; __THREW__ = 0;
     $84 = $83&1;
     if (!($84)) {
      $85 = ((($35)) + 21368|0); //@line 580 "./src/cpp/unrar/arcread.cpp"
      $86 = ((($85)) + 20|0); //@line 580 "./src/cpp/unrar/arcread.cpp"
      $87 = HEAP8[$86>>0]|0; //@line 580 "./src/cpp/unrar/arcread.cpp"
      $88 = $87&1; //@line 580 "./src/cpp/unrar/arcread.cpp"
      if ($88) {
       $89 = ((($35)) + 21368|0); //@line 580 "./src/cpp/unrar/arcread.cpp"
       $90 = ((($89)) + 44|0); //@line 580 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       $91 = (invoke_iiii(160,($9|0),($90|0),8)|0); //@line 580 "./src/cpp/unrar/arcread.cpp"
       $92 = __THREW__; __THREW__ = 0;
       $93 = $92&1;
       if ($93) {
        break;
       }
       $94 = ($91|0)!=(0); //@line 580 "./src/cpp/unrar/arcread.cpp"
       if ($94) {
        $95 = ((($35)) + 24|0); //@line 582 "./src/cpp/unrar/arcread.cpp"
        __THREW__ = 0;
        invoke_vii(101,6,($95|0)); //@line 582 "./src/cpp/unrar/arcread.cpp"
        $96 = __THREW__; __THREW__ = 0;
        $97 = $96&1;
        if ($97) {
         break;
        }
        $98 = ((($35)) + 56877|0); //@line 583 "./src/cpp/unrar/arcread.cpp"
        HEAP8[$98>>0] = 1; //@line 583 "./src/cpp/unrar/arcread.cpp"
        __THREW__ = 0;
        invoke_vii(157,(756|0),11); //@line 584 "./src/cpp/unrar/arcread.cpp"
        $99 = __THREW__; __THREW__ = 0;
        $100 = $99&1;
        if ($100) {
         break;
        }
        $1 = 0; //@line 585 "./src/cpp/unrar/arcread.cpp"
        $8 = 1;
        __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
        $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
        STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
       }
      }
      $101 = ((($35)) + 8220|0); //@line 588 "./src/cpp/unrar/arcread.cpp"
      __THREW__ = 0;
      invoke_vii(145,($3|0),($101|0)); //@line 588 "./src/cpp/unrar/arcread.cpp"
      $102 = __THREW__; __THREW__ = 0;
      $103 = $102&1;
      if (!($103)) {
       label = 18;
      }
     }
    }
   }
  } else {
   label = 18;
  }
 } while(0);
 L22: do {
  if ((label|0) == 18) {
   $10 = 7; //@line 595 "./src/cpp/unrar/arcread.cpp"
   __THREW__ = 0;
   $104 = (invoke_iii(132,($3|0),7)|0); //@line 596 "./src/cpp/unrar/arcread.cpp"
   $105 = __THREW__; __THREW__ = 0;
   $106 = $105&1;
   if (!($106)) {
    $107 = ($104>>>0)<(7); //@line 596 "./src/cpp/unrar/arcread.cpp"
    if ($107) {
     __THREW__ = 0;
     invoke_vi(143,($35|0)); //@line 598 "./src/cpp/unrar/arcread.cpp"
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      break;
     }
     $1 = 0; //@line 599 "./src/cpp/unrar/arcread.cpp"
     $8 = 1;
     __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
     $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
     STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
    }
    $110 = ((($35)) + 21272|0); //@line 602 "./src/cpp/unrar/arcread.cpp"
    __THREW__ = 0;
    invoke_vi(146,($110|0)); //@line 602 "./src/cpp/unrar/arcread.cpp"
    $111 = __THREW__; __THREW__ = 0;
    $112 = $111&1;
    if (!($112)) {
     __THREW__ = 0;
     $113 = (invoke_ii(137,($3|0))|0); //@line 603 "./src/cpp/unrar/arcread.cpp"
     $114 = __THREW__; __THREW__ = 0;
     $115 = $114&1;
     if (!($115)) {
      $116 = ((($35)) + 21272|0); //@line 603 "./src/cpp/unrar/arcread.cpp"
      HEAP32[$116>>2] = $113; //@line 603 "./src/cpp/unrar/arcread.cpp"
      __THREW__ = 0;
      $117 = (invoke_iii(161,($3|0),4)|0); //@line 604 "./src/cpp/unrar/arcread.cpp"
      $118 = __THREW__; __THREW__ = 0;
      $119 = $118&1;
      if (!($119)) {
       $11 = $117; //@line 604 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       $120 = (invoke_ii(92,($3|0))|0); //@line 605 "./src/cpp/unrar/arcread.cpp"
       $121 = tempRet0; //@line 605 "./src/cpp/unrar/arcread.cpp"
       $122 = __THREW__; __THREW__ = 0;
       $123 = $122&1;
       if (!($123)) {
        $124 = $12; //@line 605 "./src/cpp/unrar/arcread.cpp"
        $125 = $124; //@line 605 "./src/cpp/unrar/arcread.cpp"
        HEAP32[$125>>2] = $120; //@line 605 "./src/cpp/unrar/arcread.cpp"
        $126 = (($124) + 4)|0; //@line 605 "./src/cpp/unrar/arcread.cpp"
        $127 = $126; //@line 605 "./src/cpp/unrar/arcread.cpp"
        HEAP32[$127>>2] = $121; //@line 605 "./src/cpp/unrar/arcread.cpp"
        $128 = $12; //@line 607 "./src/cpp/unrar/arcread.cpp"
        $129 = $128; //@line 607 "./src/cpp/unrar/arcread.cpp"
        $130 = HEAP32[$129>>2]|0; //@line 607 "./src/cpp/unrar/arcread.cpp"
        $131 = (($128) + 4)|0; //@line 607 "./src/cpp/unrar/arcread.cpp"
        $132 = $131; //@line 607 "./src/cpp/unrar/arcread.cpp"
        $133 = HEAP32[$132>>2]|0; //@line 607 "./src/cpp/unrar/arcread.cpp"
        $134 = ($130|0)==(0); //@line 607 "./src/cpp/unrar/arcread.cpp"
        $135 = ($133|0)==(0); //@line 607 "./src/cpp/unrar/arcread.cpp"
        $136 = $134 & $135; //@line 607 "./src/cpp/unrar/arcread.cpp"
        $137 = $11; //@line 607 "./src/cpp/unrar/arcread.cpp"
        $138 = ($137|0)==(0); //@line 607 "./src/cpp/unrar/arcread.cpp"
        $or$cond = $136 | $138; //@line 607 "./src/cpp/unrar/arcread.cpp"
        if ($or$cond) {
         __THREW__ = 0;
         invoke_vi(147,($35|0)); //@line 609 "./src/cpp/unrar/arcread.cpp"
         $139 = __THREW__; __THREW__ = 0;
         $140 = $139&1;
         if ($140) {
          break;
         }
         $1 = 0; //@line 610 "./src/cpp/unrar/arcread.cpp"
         $8 = 1;
         __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
         $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
         STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
        }
        $141 = $12; //@line 613 "./src/cpp/unrar/arcread.cpp"
        $142 = $141; //@line 613 "./src/cpp/unrar/arcread.cpp"
        $143 = HEAP32[$142>>2]|0; //@line 613 "./src/cpp/unrar/arcread.cpp"
        $144 = (($141) + 4)|0; //@line 613 "./src/cpp/unrar/arcread.cpp"
        $145 = $144; //@line 613 "./src/cpp/unrar/arcread.cpp"
        $146 = HEAP32[$145>>2]|0; //@line 613 "./src/cpp/unrar/arcread.cpp"
        $13 = $143; //@line 613 "./src/cpp/unrar/arcread.cpp"
        $147 = $11; //@line 614 "./src/cpp/unrar/arcread.cpp"
        $148 = (7 - ($147))|0; //@line 614 "./src/cpp/unrar/arcread.cpp"
        $149 = (($148) - 4)|0; //@line 614 "./src/cpp/unrar/arcread.cpp"
        $150 = $13; //@line 614 "./src/cpp/unrar/arcread.cpp"
        $151 = (($150) - ($149))|0; //@line 614 "./src/cpp/unrar/arcread.cpp"
        $13 = $151; //@line 614 "./src/cpp/unrar/arcread.cpp"
        $152 = $11; //@line 615 "./src/cpp/unrar/arcread.cpp"
        $153 = (4 + ($152))|0; //@line 615 "./src/cpp/unrar/arcread.cpp"
        $154 = $12; //@line 615 "./src/cpp/unrar/arcread.cpp"
        $155 = $154; //@line 615 "./src/cpp/unrar/arcread.cpp"
        $156 = HEAP32[$155>>2]|0; //@line 615 "./src/cpp/unrar/arcread.cpp"
        $157 = (($154) + 4)|0; //@line 615 "./src/cpp/unrar/arcread.cpp"
        $158 = $157; //@line 615 "./src/cpp/unrar/arcread.cpp"
        $159 = HEAP32[$158>>2]|0; //@line 615 "./src/cpp/unrar/arcread.cpp"
        $160 = (($153) + ($156))|0; //@line 615 "./src/cpp/unrar/arcread.cpp"
        $14 = $160; //@line 615 "./src/cpp/unrar/arcread.cpp"
        $161 = $13; //@line 617 "./src/cpp/unrar/arcread.cpp"
        $162 = ($161|0)<(0); //@line 617 "./src/cpp/unrar/arcread.cpp"
        $163 = $14; //@line 617 "./src/cpp/unrar/arcread.cpp"
        $164 = ($163>>>0)<(7); //@line 617 "./src/cpp/unrar/arcread.cpp"
        $or$cond3 = $162 | $164; //@line 617 "./src/cpp/unrar/arcread.cpp"
        if ($or$cond3) {
         __THREW__ = 0;
         invoke_vi(147,($35|0)); //@line 619 "./src/cpp/unrar/arcread.cpp"
         $165 = __THREW__; __THREW__ = 0;
         $166 = $165&1;
         if ($166) {
          break;
         }
         $1 = 0; //@line 620 "./src/cpp/unrar/arcread.cpp"
         $8 = 1;
         __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
         $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
         STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
        }
        $167 = $13; //@line 623 "./src/cpp/unrar/arcread.cpp"
        __THREW__ = 0;
        (invoke_iii(132,($3|0),($167|0))|0); //@line 623 "./src/cpp/unrar/arcread.cpp"
        $168 = __THREW__; __THREW__ = 0;
        $169 = $168&1;
        if (!($169)) {
         __THREW__ = 0;
         $170 = (invoke_ii(141,($3|0))|0); //@line 625 "./src/cpp/unrar/arcread.cpp"
         $171 = __THREW__; __THREW__ = 0;
         $172 = $171&1;
         if (!($172)) {
          $173 = $14; //@line 625 "./src/cpp/unrar/arcread.cpp"
          $174 = ($170>>>0)<($173>>>0); //@line 625 "./src/cpp/unrar/arcread.cpp"
          if ($174) {
           __THREW__ = 0;
           invoke_vi(143,($35|0)); //@line 627 "./src/cpp/unrar/arcread.cpp"
           $175 = __THREW__; __THREW__ = 0;
           $176 = $175&1;
           if ($176) {
            break;
           }
           $1 = 0; //@line 628 "./src/cpp/unrar/arcread.cpp"
           $8 = 1;
           __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
           $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
           STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
          }
          __THREW__ = 0;
          $177 = (invoke_ii(162,($3|0))|0); //@line 631 "./src/cpp/unrar/arcread.cpp"
          $178 = __THREW__; __THREW__ = 0;
          $179 = $178&1;
          if (!($179)) {
           $15 = $177; //@line 631 "./src/cpp/unrar/arcread.cpp"
           __THREW__ = 0;
           $180 = (invoke_ii(92,($3|0))|0); //@line 633 "./src/cpp/unrar/arcread.cpp"
           $181 = tempRet0; //@line 633 "./src/cpp/unrar/arcread.cpp"
           $182 = __THREW__; __THREW__ = 0;
           $183 = $182&1;
           if (!($183)) {
            $184 = ((($35)) + 21272|0); //@line 633 "./src/cpp/unrar/arcread.cpp"
            $185 = ((($184)) + 4|0); //@line 633 "./src/cpp/unrar/arcread.cpp"
            HEAP32[$185>>2] = $180; //@line 633 "./src/cpp/unrar/arcread.cpp"
            __THREW__ = 0;
            $186 = (invoke_ii(92,($3|0))|0); //@line 634 "./src/cpp/unrar/arcread.cpp"
            $187 = tempRet0; //@line 634 "./src/cpp/unrar/arcread.cpp"
            $188 = __THREW__; __THREW__ = 0;
            $189 = $188&1;
            if (!($189)) {
             $190 = ((($35)) + 21272|0); //@line 634 "./src/cpp/unrar/arcread.cpp"
             $191 = ((($190)) + 8|0); //@line 634 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$191>>2] = $186; //@line 634 "./src/cpp/unrar/arcread.cpp"
             $192 = ((($35)) + 21272|0); //@line 635 "./src/cpp/unrar/arcread.cpp"
             $193 = ((($192)) + 8|0); //@line 635 "./src/cpp/unrar/arcread.cpp"
             $194 = HEAP32[$193>>2]|0; //@line 635 "./src/cpp/unrar/arcread.cpp"
             $195 = $194 & 4; //@line 635 "./src/cpp/unrar/arcread.cpp"
             $196 = ($195|0)!=(0); //@line 635 "./src/cpp/unrar/arcread.cpp"
             $197 = ((($35)) + 21272|0); //@line 635 "./src/cpp/unrar/arcread.cpp"
             $198 = ((($197)) + 16|0); //@line 635 "./src/cpp/unrar/arcread.cpp"
             $199 = $196&1; //@line 635 "./src/cpp/unrar/arcread.cpp"
             HEAP8[$198>>0] = $199; //@line 635 "./src/cpp/unrar/arcread.cpp"
             $200 = $14; //@line 636 "./src/cpp/unrar/arcread.cpp"
             $201 = ((($35)) + 21272|0); //@line 636 "./src/cpp/unrar/arcread.cpp"
             $202 = ((($201)) + 12|0); //@line 636 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$202>>2] = $200; //@line 636 "./src/cpp/unrar/arcread.cpp"
             $203 = ((($35)) + 21272|0); //@line 638 "./src/cpp/unrar/arcread.cpp"
             $204 = ((($203)) + 4|0); //@line 638 "./src/cpp/unrar/arcread.cpp"
             $205 = HEAP32[$204>>2]|0; //@line 638 "./src/cpp/unrar/arcread.cpp"
             $206 = ((($35)) + 14796|0); //@line 638 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$206>>2] = $205; //@line 638 "./src/cpp/unrar/arcread.cpp"
             $207 = ((($35)) + 21272|0); //@line 640 "./src/cpp/unrar/arcread.cpp"
             $208 = HEAP32[$207>>2]|0; //@line 640 "./src/cpp/unrar/arcread.cpp"
             $209 = $15; //@line 640 "./src/cpp/unrar/arcread.cpp"
             $210 = ($208|0)!=($209|0); //@line 640 "./src/cpp/unrar/arcread.cpp"
             $211 = $210&1; //@line 640 "./src/cpp/unrar/arcread.cpp"
             $16 = $211; //@line 640 "./src/cpp/unrar/arcread.cpp"
             $212 = $16; //@line 641 "./src/cpp/unrar/arcread.cpp"
             $213 = $212&1; //@line 641 "./src/cpp/unrar/arcread.cpp"
             do {
              if ($213) {
               __THREW__ = 0;
               invoke_vi(147,($35|0)); //@line 643 "./src/cpp/unrar/arcread.cpp"
               $214 = __THREW__; __THREW__ = 0;
               $215 = $214&1;
               if ($215) {
                break L22;
               }
               $216 = ((($35)) + 56876|0); //@line 645 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$216>>0] = 1; //@line 645 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               invoke_vii(157,(756|0),3); //@line 646 "./src/cpp/unrar/arcread.cpp"
               $217 = __THREW__; __THREW__ = 0;
               $218 = $217&1;
               if ($218) {
                break L22;
               }
               $219 = $4; //@line 648 "./src/cpp/unrar/arcread.cpp"
               $220 = $219&1; //@line 648 "./src/cpp/unrar/arcread.cpp"
               if (!($220)) {
                break;
               }
               $221 = ((($35)) + 24|0); //@line 650 "./src/cpp/unrar/arcread.cpp"
               $222 = ((($35)) + 24|0); //@line 650 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               invoke_viii(158,4,($221|0),($222|0)); //@line 650 "./src/cpp/unrar/arcread.cpp"
               $223 = __THREW__; __THREW__ = 0;
               $224 = $223&1;
               if ($224) {
                break L22;
               }
               $225 = ((($35)) + 56877|0); //@line 651 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$225>>0] = 1; //@line 651 "./src/cpp/unrar/arcread.cpp"
               $1 = 0; //@line 652 "./src/cpp/unrar/arcread.cpp"
               $8 = 1;
               __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
               $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
               STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
              }
             } while(0);
             $226 = $17; //@line 656 "./src/cpp/unrar/arcread.cpp"
             $227 = $226; //@line 656 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$227>>2] = 0; //@line 656 "./src/cpp/unrar/arcread.cpp"
             $228 = (($226) + 4)|0; //@line 656 "./src/cpp/unrar/arcread.cpp"
             $229 = $228; //@line 656 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$229>>2] = 0; //@line 656 "./src/cpp/unrar/arcread.cpp"
             $230 = ((($35)) + 21272|0); //@line 657 "./src/cpp/unrar/arcread.cpp"
             $231 = ((($230)) + 8|0); //@line 657 "./src/cpp/unrar/arcread.cpp"
             $232 = HEAP32[$231>>2]|0; //@line 657 "./src/cpp/unrar/arcread.cpp"
             $233 = $232 & 1; //@line 657 "./src/cpp/unrar/arcread.cpp"
             $234 = ($233|0)!=(0); //@line 657 "./src/cpp/unrar/arcread.cpp"
             do {
              if ($234) {
               __THREW__ = 0;
               $235 = (invoke_ii(92,($3|0))|0); //@line 659 "./src/cpp/unrar/arcread.cpp"
               $236 = tempRet0; //@line 659 "./src/cpp/unrar/arcread.cpp"
               $237 = __THREW__; __THREW__ = 0;
               $238 = $237&1;
               if ($238) {
                break L22;
               }
               $239 = $17; //@line 659 "./src/cpp/unrar/arcread.cpp"
               $240 = $239; //@line 659 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$240>>2] = $235; //@line 659 "./src/cpp/unrar/arcread.cpp"
               $241 = (($239) + 4)|0; //@line 659 "./src/cpp/unrar/arcread.cpp"
               $242 = $241; //@line 659 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$242>>2] = $236; //@line 659 "./src/cpp/unrar/arcread.cpp"
               $243 = $17; //@line 660 "./src/cpp/unrar/arcread.cpp"
               $244 = $243; //@line 660 "./src/cpp/unrar/arcread.cpp"
               $245 = HEAP32[$244>>2]|0; //@line 660 "./src/cpp/unrar/arcread.cpp"
               $246 = (($243) + 4)|0; //@line 660 "./src/cpp/unrar/arcread.cpp"
               $247 = $246; //@line 660 "./src/cpp/unrar/arcread.cpp"
               $248 = HEAP32[$247>>2]|0; //@line 660 "./src/cpp/unrar/arcread.cpp"
               $249 = ((($35)) + 21272|0); //@line 660 "./src/cpp/unrar/arcread.cpp"
               $250 = ((($249)) + 12|0); //@line 660 "./src/cpp/unrar/arcread.cpp"
               $251 = HEAP32[$250>>2]|0; //@line 660 "./src/cpp/unrar/arcread.cpp"
               $252 = ($248>>>0)>(0); //@line 660 "./src/cpp/unrar/arcread.cpp"
               $253 = ($245>>>0)>=($251>>>0); //@line 660 "./src/cpp/unrar/arcread.cpp"
               $254 = ($248|0)==(0); //@line 660 "./src/cpp/unrar/arcread.cpp"
               $255 = $254 & $253; //@line 660 "./src/cpp/unrar/arcread.cpp"
               $256 = $252 | $255; //@line 660 "./src/cpp/unrar/arcread.cpp"
               if (!($256)) {
                break;
               }
               __THREW__ = 0;
               invoke_vi(147,($35|0)); //@line 662 "./src/cpp/unrar/arcread.cpp"
               $257 = __THREW__; __THREW__ = 0;
               $258 = $257&1;
               if ($258) {
                break L22;
               }
               $1 = 0; //@line 663 "./src/cpp/unrar/arcread.cpp"
               $8 = 1;
               __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
               $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
               STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
              }
             } while(0);
             $259 = $18; //@line 667 "./src/cpp/unrar/arcread.cpp"
             $260 = $259; //@line 667 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$260>>2] = 0; //@line 667 "./src/cpp/unrar/arcread.cpp"
             $261 = (($259) + 4)|0; //@line 667 "./src/cpp/unrar/arcread.cpp"
             $262 = $261; //@line 667 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$262>>2] = 0; //@line 667 "./src/cpp/unrar/arcread.cpp"
             $263 = ((($35)) + 21272|0); //@line 668 "./src/cpp/unrar/arcread.cpp"
             $264 = ((($263)) + 8|0); //@line 668 "./src/cpp/unrar/arcread.cpp"
             $265 = HEAP32[$264>>2]|0; //@line 668 "./src/cpp/unrar/arcread.cpp"
             $266 = $265 & 2; //@line 668 "./src/cpp/unrar/arcread.cpp"
             $267 = ($266|0)!=(0); //@line 668 "./src/cpp/unrar/arcread.cpp"
             if ($267) {
              __THREW__ = 0;
              $268 = (invoke_ii(92,($3|0))|0); //@line 669 "./src/cpp/unrar/arcread.cpp"
              $269 = tempRet0; //@line 669 "./src/cpp/unrar/arcread.cpp"
              $270 = __THREW__; __THREW__ = 0;
              $271 = $270&1;
              if ($271) {
               break;
              }
              $272 = $18; //@line 669 "./src/cpp/unrar/arcread.cpp"
              $273 = $272; //@line 669 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$273>>2] = $268; //@line 669 "./src/cpp/unrar/arcread.cpp"
              $274 = (($272) + 4)|0; //@line 669 "./src/cpp/unrar/arcread.cpp"
              $275 = $274; //@line 669 "./src/cpp/unrar/arcread.cpp"
              HEAP32[$275>>2] = $269; //@line 669 "./src/cpp/unrar/arcread.cpp"
             }
             $276 = ((($35)) + 56840|0); //@line 671 "./src/cpp/unrar/arcread.cpp"
             $277 = $276; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $278 = $277; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $279 = HEAP32[$278>>2]|0; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $280 = (($277) + 4)|0; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $281 = $280; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $282 = HEAP32[$281>>2]|0; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $283 = ((($35)) + 21272|0); //@line 671 "./src/cpp/unrar/arcread.cpp"
             $284 = ((($283)) + 12|0); //@line 671 "./src/cpp/unrar/arcread.cpp"
             $285 = HEAP32[$284>>2]|0; //@line 671 "./src/cpp/unrar/arcread.cpp"
             __THREW__ = 0;
             $286 = (invoke_iii(148,($35|0),($285|0))|0); //@line 671 "./src/cpp/unrar/arcread.cpp"
             $287 = __THREW__; __THREW__ = 0;
             $288 = $287&1;
             if ($288) {
              break;
             }
             $289 = (_i64Add(($279|0),($282|0),($286|0),0)|0); //@line 671 "./src/cpp/unrar/arcread.cpp"
             $290 = tempRet0; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $291 = $18; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $292 = $291; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $293 = HEAP32[$292>>2]|0; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $294 = (($291) + 4)|0; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $295 = $294; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $296 = HEAP32[$295>>2]|0; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $297 = (_i64Add(($289|0),($290|0),($293|0),($296|0))|0); //@line 671 "./src/cpp/unrar/arcread.cpp"
             $298 = tempRet0; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $299 = ((($35)) + 56848|0); //@line 671 "./src/cpp/unrar/arcread.cpp"
             $300 = $299; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $301 = $300; //@line 671 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$301>>2] = $297; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $302 = (($300) + 4)|0; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $303 = $302; //@line 671 "./src/cpp/unrar/arcread.cpp"
             HEAP32[$303>>2] = $298; //@line 671 "./src/cpp/unrar/arcread.cpp"
             $304 = ((($35)) + 21272|0); //@line 673 "./src/cpp/unrar/arcread.cpp"
             $305 = ((($304)) + 4|0); //@line 673 "./src/cpp/unrar/arcread.cpp"
             $306 = HEAP32[$305>>2]|0; //@line 673 "./src/cpp/unrar/arcread.cpp"
             L74: do {
              switch ($306|0) {
              case 4:  {
               $307 = ((($35)) + 21272|0); //@line 677 "./src/cpp/unrar/arcread.cpp"
               $308 = ((($35)) + 21368|0); //@line 677 "./src/cpp/unrar/arcread.cpp"
               ;HEAP32[$308>>2]=HEAP32[$307>>2]|0;HEAP32[$308+4>>2]=HEAP32[$307+4>>2]|0;HEAP32[$308+8>>2]=HEAP32[$307+8>>2]|0;HEAP32[$308+12>>2]=HEAP32[$307+12>>2]|0;HEAP32[$308+16>>2]=HEAP32[$307+16>>2]|0; //@line 677 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $309 = (invoke_ii(92,($3|0))|0); //@line 678 "./src/cpp/unrar/arcread.cpp"
               $310 = tempRet0; //@line 678 "./src/cpp/unrar/arcread.cpp"
               $311 = __THREW__; __THREW__ = 0;
               $312 = $311&1;
               if ($312) {
                break L22;
               }
               $19 = $309; //@line 678 "./src/cpp/unrar/arcread.cpp"
               $313 = $19; //@line 679 "./src/cpp/unrar/arcread.cpp"
               $314 = ($313>>>0)>(0); //@line 679 "./src/cpp/unrar/arcread.cpp"
               if ($314) {
                $315 = ((($35)) + 24|0); //@line 681 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_vii(163,($35|0),($315|0)); //@line 681 "./src/cpp/unrar/arcread.cpp"
                $316 = __THREW__; __THREW__ = 0;
                $317 = $316&1;
                if ($317) {
                 break L22;
                }
                $1 = 0; //@line 682 "./src/cpp/unrar/arcread.cpp"
                $8 = 1;
                __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
                $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
                STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
               }
               __THREW__ = 0;
               $318 = (invoke_ii(92,($3|0))|0); //@line 684 "./src/cpp/unrar/arcread.cpp"
               $319 = tempRet0; //@line 684 "./src/cpp/unrar/arcread.cpp"
               $320 = __THREW__; __THREW__ = 0;
               $321 = $320&1;
               if ($321) {
                break L22;
               }
               $20 = $318; //@line 684 "./src/cpp/unrar/arcread.cpp"
               $322 = $20; //@line 685 "./src/cpp/unrar/arcread.cpp"
               $323 = $322 & 1; //@line 685 "./src/cpp/unrar/arcread.cpp"
               $324 = ($323|0)!=(0); //@line 685 "./src/cpp/unrar/arcread.cpp"
               $325 = ((($35)) + 21368|0); //@line 685 "./src/cpp/unrar/arcread.cpp"
               $326 = ((($325)) + 20|0); //@line 685 "./src/cpp/unrar/arcread.cpp"
               $327 = $324&1; //@line 685 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$326>>0] = $327; //@line 685 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $328 = (invoke_ii(135,($3|0))|0); //@line 686 "./src/cpp/unrar/arcread.cpp"
               $329 = __THREW__; __THREW__ = 0;
               $330 = $329&1;
               if ($330) {
                break L22;
               }
               $331 = $328&255; //@line 686 "./src/cpp/unrar/arcread.cpp"
               $332 = ((($35)) + 21368|0); //@line 686 "./src/cpp/unrar/arcread.cpp"
               $333 = ((($332)) + 24|0); //@line 686 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$333>>2] = $331; //@line 686 "./src/cpp/unrar/arcread.cpp"
               $334 = ((($35)) + 21368|0); //@line 687 "./src/cpp/unrar/arcread.cpp"
               $335 = ((($334)) + 24|0); //@line 687 "./src/cpp/unrar/arcread.cpp"
               $336 = HEAP32[$335>>2]|0; //@line 687 "./src/cpp/unrar/arcread.cpp"
               $337 = ($336>>>0)>(24); //@line 687 "./src/cpp/unrar/arcread.cpp"
               if ($337) {
                $338 = ((($35)) + 24|0); //@line 689 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_vii(163,($35|0),($338|0)); //@line 689 "./src/cpp/unrar/arcread.cpp"
                $339 = __THREW__; __THREW__ = 0;
                $340 = $339&1;
                if ($340) {
                 break L22;
                }
                $1 = 0; //@line 690 "./src/cpp/unrar/arcread.cpp"
                $8 = 1;
                __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
                $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
                STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
               }
               $341 = ((($35)) + 21368|0); //@line 692 "./src/cpp/unrar/arcread.cpp"
               $342 = ((($341)) + 28|0); //@line 692 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               (invoke_iiii(95,($3|0),($342|0),16)|0); //@line 692 "./src/cpp/unrar/arcread.cpp"
               $343 = __THREW__; __THREW__ = 0;
               $344 = $343&1;
               if ($344) {
                break L22;
               }
               $345 = ((($35)) + 21368|0); //@line 693 "./src/cpp/unrar/arcread.cpp"
               $346 = ((($345)) + 20|0); //@line 693 "./src/cpp/unrar/arcread.cpp"
               $347 = HEAP8[$346>>0]|0; //@line 693 "./src/cpp/unrar/arcread.cpp"
               $348 = $347&1; //@line 693 "./src/cpp/unrar/arcread.cpp"
               if ($348) {
                $349 = ((($35)) + 21368|0); //@line 695 "./src/cpp/unrar/arcread.cpp"
                $350 = ((($349)) + 44|0); //@line 695 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                (invoke_iiii(95,($3|0),($350|0),8)|0); //@line 695 "./src/cpp/unrar/arcread.cpp"
                $351 = __THREW__; __THREW__ = 0;
                $352 = $351&1;
                if ($352) {
                 break L22;
                }
                __THREW__ = 0;
                (invoke_iiii(95,($3|0),($21|0),4)|0); //@line 698 "./src/cpp/unrar/arcread.cpp"
                $353 = __THREW__; __THREW__ = 0;
                $354 = $353&1;
                if ($354) {
                 break L22;
                }
                __THREW__ = 0;
                invoke_vi(164,($22|0)); //@line 701 "./src/cpp/unrar/arcread.cpp"
                $355 = __THREW__; __THREW__ = 0;
                $356 = $355&1;
                if ($356) {
                 break L22;
                }
                $357 = ((($35)) + 21368|0); //@line 702 "./src/cpp/unrar/arcread.cpp"
                $358 = ((($357)) + 44|0); //@line 702 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_viii(165,($22|0),($358|0),8); //@line 702 "./src/cpp/unrar/arcread.cpp"
                $359 = __THREW__; __THREW__ = 0;
                $360 = $359&1;
                if ($360) {
                 break L22;
                }
                __THREW__ = 0;
                invoke_vii(166,($22|0),($23|0)); //@line 705 "./src/cpp/unrar/arcread.cpp"
                $361 = __THREW__; __THREW__ = 0;
                $362 = $361&1;
                if ($362) {
                 break L22;
                }
                __THREW__ = 0;
                $363 = (invoke_iiii(160,($21|0),($23|0),4)|0); //@line 707 "./src/cpp/unrar/arcread.cpp"
                $364 = __THREW__; __THREW__ = 0;
                $365 = $364&1;
                if ($365) {
                 break L22;
                }
                $366 = ($363|0)==(0); //@line 707 "./src/cpp/unrar/arcread.cpp"
                $367 = ((($35)) + 21368|0); //@line 707 "./src/cpp/unrar/arcread.cpp"
                $368 = ((($367)) + 20|0); //@line 707 "./src/cpp/unrar/arcread.cpp"
                $369 = $366&1; //@line 707 "./src/cpp/unrar/arcread.cpp"
                HEAP8[$368>>0] = $369; //@line 707 "./src/cpp/unrar/arcread.cpp"
               }
               $370 = ((($35)) + 56868|0); //@line 709 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$370>>0] = 1; //@line 709 "./src/cpp/unrar/arcread.cpp"
               break;
              }
              case 1:  {
               $371 = ((($35)) + 21304|0); //@line 714 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               invoke_vi(133,($371|0)); //@line 714 "./src/cpp/unrar/arcread.cpp"
               $372 = __THREW__; __THREW__ = 0;
               $373 = $372&1;
               if ($373) {
                break L22;
               }
               $374 = ((($35)) + 21272|0); //@line 715 "./src/cpp/unrar/arcread.cpp"
               $375 = ((($35)) + 21304|0); //@line 715 "./src/cpp/unrar/arcread.cpp"
               ;HEAP32[$375>>2]=HEAP32[$374>>2]|0;HEAP32[$375+4>>2]=HEAP32[$374+4>>2]|0;HEAP32[$375+8>>2]=HEAP32[$374+8>>2]|0;HEAP32[$375+12>>2]=HEAP32[$374+12>>2]|0;HEAP32[$375+16>>2]=HEAP32[$374+16>>2]|0; //@line 715 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $376 = (invoke_ii(92,($3|0))|0); //@line 716 "./src/cpp/unrar/arcread.cpp"
               $377 = tempRet0; //@line 716 "./src/cpp/unrar/arcread.cpp"
               $378 = __THREW__; __THREW__ = 0;
               $379 = $378&1;
               if ($379) {
                break L22;
               }
               $24 = $376; //@line 716 "./src/cpp/unrar/arcread.cpp"
               $380 = $24; //@line 718 "./src/cpp/unrar/arcread.cpp"
               $381 = $380 & 1; //@line 718 "./src/cpp/unrar/arcread.cpp"
               $382 = ($381|0)!=(0); //@line 718 "./src/cpp/unrar/arcread.cpp"
               $383 = ((($35)) + 56861|0); //@line 718 "./src/cpp/unrar/arcread.cpp"
               $384 = $382&1; //@line 718 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$383>>0] = $384; //@line 718 "./src/cpp/unrar/arcread.cpp"
               $385 = $24; //@line 719 "./src/cpp/unrar/arcread.cpp"
               $386 = $385 & 4; //@line 719 "./src/cpp/unrar/arcread.cpp"
               $387 = ($386|0)!=(0); //@line 719 "./src/cpp/unrar/arcread.cpp"
               $388 = ((($35)) + 56860|0); //@line 719 "./src/cpp/unrar/arcread.cpp"
               $389 = $387&1; //@line 719 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$388>>0] = $389; //@line 719 "./src/cpp/unrar/arcread.cpp"
               $390 = $24; //@line 720 "./src/cpp/unrar/arcread.cpp"
               $391 = $390 & 16; //@line 720 "./src/cpp/unrar/arcread.cpp"
               $392 = ($391|0)!=(0); //@line 720 "./src/cpp/unrar/arcread.cpp"
               $393 = ((($35)) + 56863|0); //@line 720 "./src/cpp/unrar/arcread.cpp"
               $394 = $392&1; //@line 720 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$393>>0] = $394; //@line 720 "./src/cpp/unrar/arcread.cpp"
               $395 = $24; //@line 721 "./src/cpp/unrar/arcread.cpp"
               $396 = $395 & 8; //@line 721 "./src/cpp/unrar/arcread.cpp"
               $397 = ($396|0)!=(0); //@line 721 "./src/cpp/unrar/arcread.cpp"
               $398 = ((($35)) + 56867|0); //@line 721 "./src/cpp/unrar/arcread.cpp"
               $399 = $397&1; //@line 721 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$398>>0] = $399; //@line 721 "./src/cpp/unrar/arcread.cpp"
               $400 = ((($35)) + 56864|0); //@line 722 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$400>>0] = 0; //@line 722 "./src/cpp/unrar/arcread.cpp"
               $401 = ((($35)) + 56866|0); //@line 723 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$401>>0] = 1; //@line 723 "./src/cpp/unrar/arcread.cpp"
               $402 = $24; //@line 725 "./src/cpp/unrar/arcread.cpp"
               $403 = $402 & 2; //@line 725 "./src/cpp/unrar/arcread.cpp"
               $404 = ($403|0)!=(0); //@line 725 "./src/cpp/unrar/arcread.cpp"
               if ($404) {
                __THREW__ = 0;
                $405 = (invoke_ii(92,($3|0))|0); //@line 726 "./src/cpp/unrar/arcread.cpp"
                $406 = tempRet0; //@line 726 "./src/cpp/unrar/arcread.cpp"
                $407 = __THREW__; __THREW__ = 0;
                $408 = $407&1;
                if ($408) {
                 break L22;
                }
                $$sink = $405;
               } else {
                $$sink = 0;
               }
               $409 = ((($35)) + 56896|0);
               HEAP32[$409>>2] = $$sink;
               $410 = ((($35)) + 56861|0); //@line 729 "./src/cpp/unrar/arcread.cpp"
               $411 = HEAP8[$410>>0]|0; //@line 729 "./src/cpp/unrar/arcread.cpp"
               $412 = $411&1; //@line 729 "./src/cpp/unrar/arcread.cpp"
               if ($412) {
                $413 = ((($35)) + 56896|0); //@line 729 "./src/cpp/unrar/arcread.cpp"
                $414 = HEAP32[$413>>2]|0; //@line 729 "./src/cpp/unrar/arcread.cpp"
                $415 = ($414|0)==(0); //@line 729 "./src/cpp/unrar/arcread.cpp"
                $418 = $415;
               } else {
                $418 = 0;
               }
               $416 = ((($35)) + 56865|0); //@line 729 "./src/cpp/unrar/arcread.cpp"
               $417 = $418&1; //@line 729 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$416>>0] = $417; //@line 729 "./src/cpp/unrar/arcread.cpp"
               $419 = $17; //@line 731 "./src/cpp/unrar/arcread.cpp"
               $420 = $419; //@line 731 "./src/cpp/unrar/arcread.cpp"
               $421 = HEAP32[$420>>2]|0; //@line 731 "./src/cpp/unrar/arcread.cpp"
               $422 = (($419) + 4)|0; //@line 731 "./src/cpp/unrar/arcread.cpp"
               $423 = $422; //@line 731 "./src/cpp/unrar/arcread.cpp"
               $424 = HEAP32[$423>>2]|0; //@line 731 "./src/cpp/unrar/arcread.cpp"
               $425 = ($421|0)!=(0); //@line 731 "./src/cpp/unrar/arcread.cpp"
               $426 = ($424|0)!=(0); //@line 731 "./src/cpp/unrar/arcread.cpp"
               $427 = $425 | $426; //@line 731 "./src/cpp/unrar/arcread.cpp"
               if ($427) {
                $428 = $17; //@line 732 "./src/cpp/unrar/arcread.cpp"
                $429 = $428; //@line 732 "./src/cpp/unrar/arcread.cpp"
                $430 = HEAP32[$429>>2]|0; //@line 732 "./src/cpp/unrar/arcread.cpp"
                $431 = (($428) + 4)|0; //@line 732 "./src/cpp/unrar/arcread.cpp"
                $432 = $431; //@line 732 "./src/cpp/unrar/arcread.cpp"
                $433 = HEAP32[$432>>2]|0; //@line 732 "./src/cpp/unrar/arcread.cpp"
                $434 = ((($35)) + 21304|0); //@line 732 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_viiii(167,($35|0),($3|0),($430|0),($434|0)); //@line 732 "./src/cpp/unrar/arcread.cpp"
                $435 = __THREW__; __THREW__ = 0;
                $436 = $435&1;
                if ($436) {
                 break L22;
                }
               }
               $437 = ((($35)) + 21304|0); //@line 735 "./src/cpp/unrar/arcread.cpp"
               $438 = ((($437)) + 30|0); //@line 735 "./src/cpp/unrar/arcread.cpp"
               $439 = HEAP8[$438>>0]|0; //@line 735 "./src/cpp/unrar/arcread.cpp"
               $440 = $439&1; //@line 735 "./src/cpp/unrar/arcread.cpp"
               if (!($440)) {
                break L74;
               }
               $441 = ((($35)) + 21304|0); //@line 735 "./src/cpp/unrar/arcread.cpp"
               $442 = ((($441)) + 32|0); //@line 735 "./src/cpp/unrar/arcread.cpp"
               $443 = $442; //@line 735 "./src/cpp/unrar/arcread.cpp"
               $444 = $443; //@line 735 "./src/cpp/unrar/arcread.cpp"
               $445 = HEAP32[$444>>2]|0; //@line 735 "./src/cpp/unrar/arcread.cpp"
               $446 = (($443) + 4)|0; //@line 735 "./src/cpp/unrar/arcread.cpp"
               $447 = $446; //@line 735 "./src/cpp/unrar/arcread.cpp"
               $448 = HEAP32[$447>>2]|0; //@line 735 "./src/cpp/unrar/arcread.cpp"
               $449 = ($448>>>0)>(0); //@line 735 "./src/cpp/unrar/arcread.cpp"
               $450 = ($445>>>0)>(0); //@line 735 "./src/cpp/unrar/arcread.cpp"
               $451 = ($448|0)==(0); //@line 735 "./src/cpp/unrar/arcread.cpp"
               $452 = $451 & $450; //@line 735 "./src/cpp/unrar/arcread.cpp"
               $453 = $449 | $452; //@line 735 "./src/cpp/unrar/arcread.cpp"
               if (!($453)) {
                break L74;
               }
               $454 = ((($35)) + 14764|0); //@line 735 "./src/cpp/unrar/arcread.cpp"
               $455 = HEAP32[$454>>2]|0; //@line 735 "./src/cpp/unrar/arcread.cpp"
               $456 = ((($455)) + 16400|0); //@line 735 "./src/cpp/unrar/arcread.cpp"
               $457 = HEAP32[$456>>2]|0; //@line 735 "./src/cpp/unrar/arcread.cpp"
               $458 = ($457|0)!=(0); //@line 735 "./src/cpp/unrar/arcread.cpp"
               if (!($458)) {
                break L74;
               }
               $459 = ((($35)) + 56840|0); //@line 740 "./src/cpp/unrar/arcread.cpp"
               $460 = $459; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $461 = $460; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $462 = HEAP32[$461>>2]|0; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $463 = (($460) + 4)|0; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $464 = $463; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $465 = HEAP32[$464>>2]|0; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $466 = $25; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $467 = $466; //@line 740 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$467>>2] = $462; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $468 = (($466) + 4)|0; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $469 = $468; //@line 740 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$469>>2] = $465; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $470 = ((($35)) + 56848|0); //@line 740 "./src/cpp/unrar/arcread.cpp"
               $471 = $470; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $472 = $471; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $473 = HEAP32[$472>>2]|0; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $474 = (($471) + 4)|0; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $475 = $474; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $476 = HEAP32[$475>>2]|0; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $477 = $26; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $478 = $477; //@line 740 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$478>>2] = $473; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $479 = (($477) + 4)|0; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $480 = $479; //@line 740 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$480>>2] = $476; //@line 740 "./src/cpp/unrar/arcread.cpp"
               $481 = ((($35)) + 14796|0); //@line 741 "./src/cpp/unrar/arcread.cpp"
               $482 = HEAP32[$481>>2]|0; //@line 741 "./src/cpp/unrar/arcread.cpp"
               $27 = $482; //@line 741 "./src/cpp/unrar/arcread.cpp"
               $483 = ((($35)) + 14808|0); //@line 743 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               invoke_viii(87,($483|0),($35|0),0); //@line 743 "./src/cpp/unrar/arcread.cpp"
               $484 = __THREW__; __THREW__ = 0;
               $485 = $484&1;
               if ($485) {
                break L22;
               }
               $486 = ((($35)) + 14808|0); //@line 744 "./src/cpp/unrar/arcread.cpp"
               $487 = ((($35)) + 21304|0); //@line 744 "./src/cpp/unrar/arcread.cpp"
               $488 = ((($487)) + 32|0); //@line 744 "./src/cpp/unrar/arcread.cpp"
               $489 = $488; //@line 744 "./src/cpp/unrar/arcread.cpp"
               $490 = $489; //@line 744 "./src/cpp/unrar/arcread.cpp"
               $491 = HEAP32[$490>>2]|0; //@line 744 "./src/cpp/unrar/arcread.cpp"
               $492 = (($489) + 4)|0; //@line 744 "./src/cpp/unrar/arcread.cpp"
               $493 = $492; //@line 744 "./src/cpp/unrar/arcread.cpp"
               $494 = HEAP32[$493>>2]|0; //@line 744 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               invoke_viii(168,($486|0),($491|0),($494|0)); //@line 744 "./src/cpp/unrar/arcread.cpp"
               $495 = __THREW__; __THREW__ = 0;
               $496 = $495&1;
               if ($496) {
                break L22;
               }
               $497 = $25; //@line 746 "./src/cpp/unrar/arcread.cpp"
               $498 = $497; //@line 746 "./src/cpp/unrar/arcread.cpp"
               $499 = HEAP32[$498>>2]|0; //@line 746 "./src/cpp/unrar/arcread.cpp"
               $500 = (($497) + 4)|0; //@line 746 "./src/cpp/unrar/arcread.cpp"
               $501 = $500; //@line 746 "./src/cpp/unrar/arcread.cpp"
               $502 = HEAP32[$501>>2]|0; //@line 746 "./src/cpp/unrar/arcread.cpp"
               $503 = ((($35)) + 56840|0); //@line 746 "./src/cpp/unrar/arcread.cpp"
               $504 = $503; //@line 746 "./src/cpp/unrar/arcread.cpp"
               $505 = $504; //@line 746 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$505>>2] = $499; //@line 746 "./src/cpp/unrar/arcread.cpp"
               $506 = (($504) + 4)|0; //@line 746 "./src/cpp/unrar/arcread.cpp"
               $507 = $506; //@line 746 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$507>>2] = $502; //@line 746 "./src/cpp/unrar/arcread.cpp"
               $508 = $26; //@line 747 "./src/cpp/unrar/arcread.cpp"
               $509 = $508; //@line 747 "./src/cpp/unrar/arcread.cpp"
               $510 = HEAP32[$509>>2]|0; //@line 747 "./src/cpp/unrar/arcread.cpp"
               $511 = (($508) + 4)|0; //@line 747 "./src/cpp/unrar/arcread.cpp"
               $512 = $511; //@line 747 "./src/cpp/unrar/arcread.cpp"
               $513 = HEAP32[$512>>2]|0; //@line 747 "./src/cpp/unrar/arcread.cpp"
               $514 = ((($35)) + 56848|0); //@line 747 "./src/cpp/unrar/arcread.cpp"
               $515 = $514; //@line 747 "./src/cpp/unrar/arcread.cpp"
               $516 = $515; //@line 747 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$516>>2] = $510; //@line 747 "./src/cpp/unrar/arcread.cpp"
               $517 = (($515) + 4)|0; //@line 747 "./src/cpp/unrar/arcread.cpp"
               $518 = $517; //@line 747 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$518>>2] = $513; //@line 747 "./src/cpp/unrar/arcread.cpp"
               $519 = $27; //@line 748 "./src/cpp/unrar/arcread.cpp"
               $520 = ((($35)) + 14796|0); //@line 748 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$520>>2] = $519; //@line 748 "./src/cpp/unrar/arcread.cpp"
               break;
              }
              case 3: case 2:  {
               $521 = ((($35)) + 21272|0); //@line 756 "./src/cpp/unrar/arcread.cpp"
               $522 = ((($521)) + 4|0); //@line 756 "./src/cpp/unrar/arcread.cpp"
               $523 = HEAP32[$522>>2]|0; //@line 756 "./src/cpp/unrar/arcread.cpp"
               $524 = ($523|0)==(2); //@line 756 "./src/cpp/unrar/arcread.cpp"
               $525 = ((($35)) + 21424|0); //@line 756 "./src/cpp/unrar/arcread.cpp"
               $526 = ((($35)) + 38640|0); //@line 756 "./src/cpp/unrar/arcread.cpp"
               $527 = $524 ? $525 : $526; //@line 756 "./src/cpp/unrar/arcread.cpp"
               $28 = $527; //@line 756 "./src/cpp/unrar/arcread.cpp"
               $528 = $28; //@line 757 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               invoke_vii(136,($528|0),0); //@line 757 "./src/cpp/unrar/arcread.cpp"
               $529 = __THREW__; __THREW__ = 0;
               $530 = $529&1;
               if ($530) {
                break L22;
               }
               $531 = ((($35)) + 21272|0); //@line 758 "./src/cpp/unrar/arcread.cpp"
               $532 = $28; //@line 758 "./src/cpp/unrar/arcread.cpp"
               ;HEAP32[$532>>2]=HEAP32[$531>>2]|0;HEAP32[$532+4>>2]=HEAP32[$531+4>>2]|0;HEAP32[$532+8>>2]=HEAP32[$531+8>>2]|0;HEAP32[$532+12>>2]=HEAP32[$531+12>>2]|0;HEAP32[$532+16>>2]=HEAP32[$531+16>>2]|0; //@line 758 "./src/cpp/unrar/arcread.cpp"
               $533 = ((($35)) + 21272|0); //@line 760 "./src/cpp/unrar/arcread.cpp"
               $534 = ((($533)) + 4|0); //@line 760 "./src/cpp/unrar/arcread.cpp"
               $535 = HEAP32[$534>>2]|0; //@line 760 "./src/cpp/unrar/arcread.cpp"
               $536 = ($535|0)==(2); //@line 760 "./src/cpp/unrar/arcread.cpp"
               $537 = $536&1; //@line 760 "./src/cpp/unrar/arcread.cpp"
               $29 = $537; //@line 760 "./src/cpp/unrar/arcread.cpp"
               $538 = $28; //@line 762 "./src/cpp/unrar/arcread.cpp"
               $539 = ((($538)) + 8425|0); //@line 762 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$539>>0] = 1; //@line 762 "./src/cpp/unrar/arcread.cpp"
               $540 = $18; //@line 764 "./src/cpp/unrar/arcread.cpp"
               $541 = $540; //@line 764 "./src/cpp/unrar/arcread.cpp"
               $542 = HEAP32[$541>>2]|0; //@line 764 "./src/cpp/unrar/arcread.cpp"
               $543 = (($540) + 4)|0; //@line 764 "./src/cpp/unrar/arcread.cpp"
               $544 = $543; //@line 764 "./src/cpp/unrar/arcread.cpp"
               $545 = HEAP32[$544>>2]|0; //@line 764 "./src/cpp/unrar/arcread.cpp"
               $546 = $28; //@line 764 "./src/cpp/unrar/arcread.cpp"
               $547 = ((($546)) + 8264|0); //@line 764 "./src/cpp/unrar/arcread.cpp"
               $548 = $547; //@line 764 "./src/cpp/unrar/arcread.cpp"
               $549 = $548; //@line 764 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$549>>2] = $542; //@line 764 "./src/cpp/unrar/arcread.cpp"
               $550 = (($548) + 4)|0; //@line 764 "./src/cpp/unrar/arcread.cpp"
               $551 = $550; //@line 764 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$551>>2] = $545; //@line 764 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $552 = (invoke_ii(92,($3|0))|0); //@line 765 "./src/cpp/unrar/arcread.cpp"
               $553 = tempRet0; //@line 765 "./src/cpp/unrar/arcread.cpp"
               $554 = __THREW__; __THREW__ = 0;
               $555 = $554&1;
               if ($555) {
                break L22;
               }
               $556 = $28; //@line 765 "./src/cpp/unrar/arcread.cpp"
               $557 = ((($556)) + 8324|0); //@line 765 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$557>>2] = $552; //@line 765 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $558 = (invoke_ii(92,($3|0))|0); //@line 766 "./src/cpp/unrar/arcread.cpp"
               $559 = tempRet0; //@line 766 "./src/cpp/unrar/arcread.cpp"
               $560 = __THREW__; __THREW__ = 0;
               $561 = $560&1;
               if ($561) {
                break L22;
               }
               $562 = $28; //@line 766 "./src/cpp/unrar/arcread.cpp"
               $563 = ((($562)) + 8272|0); //@line 766 "./src/cpp/unrar/arcread.cpp"
               $564 = $563; //@line 766 "./src/cpp/unrar/arcread.cpp"
               $565 = $564; //@line 766 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$565>>2] = $558; //@line 766 "./src/cpp/unrar/arcread.cpp"
               $566 = (($564) + 4)|0; //@line 766 "./src/cpp/unrar/arcread.cpp"
               $567 = $566; //@line 766 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$567>>2] = $559; //@line 766 "./src/cpp/unrar/arcread.cpp"
               $568 = $28; //@line 768 "./src/cpp/unrar/arcread.cpp"
               $569 = ((($568)) + 8324|0); //@line 768 "./src/cpp/unrar/arcread.cpp"
               $570 = HEAP32[$569>>2]|0; //@line 768 "./src/cpp/unrar/arcread.cpp"
               $571 = $570 & 8; //@line 768 "./src/cpp/unrar/arcread.cpp"
               $572 = ($571|0)!=(0); //@line 768 "./src/cpp/unrar/arcread.cpp"
               $573 = $28; //@line 768 "./src/cpp/unrar/arcread.cpp"
               $574 = ((($573)) + 8330|0); //@line 768 "./src/cpp/unrar/arcread.cpp"
               $575 = $572&1; //@line 768 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$574>>0] = $575; //@line 768 "./src/cpp/unrar/arcread.cpp"
               $576 = $28; //@line 769 "./src/cpp/unrar/arcread.cpp"
               $577 = ((($576)) + 8330|0); //@line 769 "./src/cpp/unrar/arcread.cpp"
               $578 = HEAP8[$577>>0]|0; //@line 769 "./src/cpp/unrar/arcread.cpp"
               $579 = $578&1; //@line 769 "./src/cpp/unrar/arcread.cpp"
               if ($579) {
                $580 = $28; //@line 770 "./src/cpp/unrar/arcread.cpp"
                $581 = ((($580)) + 8272|0); //@line 770 "./src/cpp/unrar/arcread.cpp"
                $582 = $581; //@line 770 "./src/cpp/unrar/arcread.cpp"
                $583 = $582; //@line 770 "./src/cpp/unrar/arcread.cpp"
                HEAP32[$583>>2] = 2147483647; //@line 770 "./src/cpp/unrar/arcread.cpp"
                $584 = (($582) + 4)|0; //@line 770 "./src/cpp/unrar/arcread.cpp"
                $585 = $584; //@line 770 "./src/cpp/unrar/arcread.cpp"
                HEAP32[$585>>2] = 2147483647; //@line 770 "./src/cpp/unrar/arcread.cpp"
               }
               $586 = $28; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $587 = ((($586)) + 8264|0); //@line 772 "./src/cpp/unrar/arcread.cpp"
               $588 = $587; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $589 = $588; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $590 = HEAP32[$589>>2]|0; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $591 = (($588) + 4)|0; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $592 = $591; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $593 = HEAP32[$592>>2]|0; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $594 = $28; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $595 = ((($594)) + 8272|0); //@line 772 "./src/cpp/unrar/arcread.cpp"
               $596 = $595; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $597 = $596; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $598 = HEAP32[$597>>2]|0; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $599 = (($596) + 4)|0; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $600 = $599; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $601 = HEAP32[$600>>2]|0; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $602 = ($593|0)>($601|0); //@line 772 "./src/cpp/unrar/arcread.cpp"
               $603 = ($590>>>0)>($598>>>0); //@line 772 "./src/cpp/unrar/arcread.cpp"
               $604 = ($593|0)==($601|0); //@line 772 "./src/cpp/unrar/arcread.cpp"
               $605 = $604 & $603; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $606 = $602 | $605; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $607 = $28; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $608 = ((($607)) + 8272|0); //@line 772 "./src/cpp/unrar/arcread.cpp"
               $609 = ((($607)) + 8264|0); //@line 772 "./src/cpp/unrar/arcread.cpp"
               $$sink5 = $606 ? $609 : $608; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $610 = $$sink5; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $611 = $610; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $612 = HEAP32[$611>>2]|0; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $613 = (($610) + 4)|0; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $614 = $613; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $615 = HEAP32[$614>>2]|0; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $616 = $28; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $617 = ((($616)) + 8280|0); //@line 772 "./src/cpp/unrar/arcread.cpp"
               $618 = $617; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $619 = $618; //@line 772 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$619>>2] = $612; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $620 = (($618) + 4)|0; //@line 772 "./src/cpp/unrar/arcread.cpp"
               $621 = $620; //@line 772 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$621>>2] = $615; //@line 772 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $622 = (invoke_ii(92,($3|0))|0); //@line 773 "./src/cpp/unrar/arcread.cpp"
               $623 = tempRet0; //@line 773 "./src/cpp/unrar/arcread.cpp"
               $624 = __THREW__; __THREW__ = 0;
               $625 = $624&1;
               if ($625) {
                break L22;
               }
               $626 = $28; //@line 773 "./src/cpp/unrar/arcread.cpp"
               $627 = ((($626)) + 28|0); //@line 773 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$627>>2] = $622; //@line 773 "./src/cpp/unrar/arcread.cpp"
               $628 = $28; //@line 774 "./src/cpp/unrar/arcread.cpp"
               $629 = ((($628)) + 8324|0); //@line 774 "./src/cpp/unrar/arcread.cpp"
               $630 = HEAP32[$629>>2]|0; //@line 774 "./src/cpp/unrar/arcread.cpp"
               $631 = $630 & 2; //@line 774 "./src/cpp/unrar/arcread.cpp"
               $632 = ($631|0)!=(0); //@line 774 "./src/cpp/unrar/arcread.cpp"
               if ($632) {
                __THREW__ = 0;
                $633 = (invoke_ii(137,($3|0))|0); //@line 775 "./src/cpp/unrar/arcread.cpp"
                $634 = __THREW__; __THREW__ = 0;
                $635 = $634&1;
                if ($635) {
                 break L22;
                }
                $636 = $28; //@line 775 "./src/cpp/unrar/arcread.cpp"
                $637 = ((($636)) + 8240|0); //@line 775 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                (invoke_iii(169,($637|0),($633|0))|0); //@line 775 "./src/cpp/unrar/arcread.cpp"
                $638 = __THREW__; __THREW__ = 0;
                $639 = $638&1;
                if ($639) {
                 break L22;
                }
               }
               $640 = $28; //@line 777 "./src/cpp/unrar/arcread.cpp"
               $641 = ((($640)) + 8288|0); //@line 777 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$641>>2] = 0; //@line 777 "./src/cpp/unrar/arcread.cpp"
               $642 = $28; //@line 778 "./src/cpp/unrar/arcread.cpp"
               $643 = ((($642)) + 8324|0); //@line 778 "./src/cpp/unrar/arcread.cpp"
               $644 = HEAP32[$643>>2]|0; //@line 778 "./src/cpp/unrar/arcread.cpp"
               $645 = $644 & 4; //@line 778 "./src/cpp/unrar/arcread.cpp"
               $646 = ($645|0)!=(0); //@line 778 "./src/cpp/unrar/arcread.cpp"
               if ($646) {
                $647 = $28; //@line 780 "./src/cpp/unrar/arcread.cpp"
                $648 = ((($647)) + 8288|0); //@line 780 "./src/cpp/unrar/arcread.cpp"
                HEAP32[$648>>2] = 2; //@line 780 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                $649 = (invoke_ii(137,($3|0))|0); //@line 781 "./src/cpp/unrar/arcread.cpp"
                $650 = __THREW__; __THREW__ = 0;
                $651 = $650&1;
                if ($651) {
                 break L22;
                }
                $652 = $28; //@line 781 "./src/cpp/unrar/arcread.cpp"
                $653 = ((($652)) + 8288|0); //@line 781 "./src/cpp/unrar/arcread.cpp"
                $654 = ((($653)) + 4|0); //@line 781 "./src/cpp/unrar/arcread.cpp"
                HEAP32[$654>>2] = $649; //@line 781 "./src/cpp/unrar/arcread.cpp"
               }
               $655 = $28; //@line 784 "./src/cpp/unrar/arcread.cpp"
               $656 = ((($655)) + 8432|0); //@line 784 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$656>>2] = 0; //@line 784 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $657 = (invoke_ii(92,($3|0))|0); //@line 786 "./src/cpp/unrar/arcread.cpp"
               $658 = tempRet0; //@line 786 "./src/cpp/unrar/arcread.cpp"
               $659 = __THREW__; __THREW__ = 0;
               $660 = $659&1;
               if ($660) {
                break L22;
               }
               $30 = $657; //@line 786 "./src/cpp/unrar/arcread.cpp"
               $661 = $30; //@line 787 "./src/cpp/unrar/arcread.cpp"
               $662 = $661 >>> 7; //@line 787 "./src/cpp/unrar/arcread.cpp"
               $663 = $662 & 7; //@line 787 "./src/cpp/unrar/arcread.cpp"
               $664 = $663&255; //@line 787 "./src/cpp/unrar/arcread.cpp"
               $665 = $28; //@line 787 "./src/cpp/unrar/arcread.cpp"
               $666 = ((($665)) + 26|0); //@line 787 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$666>>0] = $664; //@line 787 "./src/cpp/unrar/arcread.cpp"
               $667 = $30; //@line 793 "./src/cpp/unrar/arcread.cpp"
               $668 = $667 & 63; //@line 793 "./src/cpp/unrar/arcread.cpp"
               $669 = (($668) + 50)|0; //@line 793 "./src/cpp/unrar/arcread.cpp"
               $670 = $669&255; //@line 793 "./src/cpp/unrar/arcread.cpp"
               $671 = $28; //@line 793 "./src/cpp/unrar/arcread.cpp"
               $672 = ((($671)) + 25|0); //@line 793 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$672>>0] = $670; //@line 793 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $673 = (invoke_ii(92,($3|0))|0); //@line 795 "./src/cpp/unrar/arcread.cpp"
               $674 = tempRet0; //@line 795 "./src/cpp/unrar/arcread.cpp"
               $675 = __THREW__; __THREW__ = 0;
               $676 = $675&1;
               if ($676) {
                break L22;
               }
               $677 = $673&255; //@line 795 "./src/cpp/unrar/arcread.cpp"
               $678 = $28; //@line 795 "./src/cpp/unrar/arcread.cpp"
               $679 = ((($678)) + 24|0); //@line 795 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$679>>0] = $677; //@line 795 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $680 = (invoke_ii(92,($3|0))|0); //@line 796 "./src/cpp/unrar/arcread.cpp"
               $681 = tempRet0; //@line 796 "./src/cpp/unrar/arcread.cpp"
               $682 = __THREW__; __THREW__ = 0;
               $683 = $682&1;
               if ($683) {
                break L22;
               }
               $31 = $680; //@line 796 "./src/cpp/unrar/arcread.cpp"
               $684 = ((($35)) + 21272|0); //@line 797 "./src/cpp/unrar/arcread.cpp"
               $685 = ((($684)) + 8|0); //@line 797 "./src/cpp/unrar/arcread.cpp"
               $686 = HEAP32[$685>>2]|0; //@line 797 "./src/cpp/unrar/arcread.cpp"
               $687 = $686 & 64; //@line 797 "./src/cpp/unrar/arcread.cpp"
               $688 = ($687|0)!=(0); //@line 797 "./src/cpp/unrar/arcread.cpp"
               $689 = $28; //@line 797 "./src/cpp/unrar/arcread.cpp"
               $690 = ((($689)) + 8424|0); //@line 797 "./src/cpp/unrar/arcread.cpp"
               $691 = $688&1; //@line 797 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$690>>0] = $691; //@line 797 "./src/cpp/unrar/arcread.cpp"
               $692 = $28; //@line 799 "./src/cpp/unrar/arcread.cpp"
               $693 = ((($692)) + 8428|0); //@line 799 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$693>>2] = 2; //@line 799 "./src/cpp/unrar/arcread.cpp"
               $694 = $28; //@line 800 "./src/cpp/unrar/arcread.cpp"
               $695 = ((($694)) + 24|0); //@line 800 "./src/cpp/unrar/arcread.cpp"
               $696 = HEAP8[$695>>0]|0; //@line 800 "./src/cpp/unrar/arcread.cpp"
               $697 = $696&255; //@line 800 "./src/cpp/unrar/arcread.cpp"
               $698 = ($697|0)==(1); //@line 800 "./src/cpp/unrar/arcread.cpp"
               $699 = $28;
               do {
                if ($698) {
                 $$sink6 = 1;$$sink8 = $699;
                 label = 108;
                } else {
                 $700 = ((($699)) + 24|0); //@line 803 "./src/cpp/unrar/arcread.cpp"
                 $701 = HEAP8[$700>>0]|0; //@line 803 "./src/cpp/unrar/arcread.cpp"
                 $702 = $701&255; //@line 803 "./src/cpp/unrar/arcread.cpp"
                 $703 = ($702|0)==(0); //@line 803 "./src/cpp/unrar/arcread.cpp"
                 if (!($703)) {
                  break;
                 }
                 $704 = $28; //@line 804 "./src/cpp/unrar/arcread.cpp"
                 $$sink6 = 0;$$sink8 = $704;
                 label = 108;
                }
               } while(0);
               if ((label|0) == 108) {
                $705 = ((($$sink8)) + 8428|0);
                HEAP32[$705>>2] = $$sink6;
               }
               $706 = $28; //@line 806 "./src/cpp/unrar/arcread.cpp"
               $707 = ((($706)) + 8|0); //@line 806 "./src/cpp/unrar/arcread.cpp"
               $708 = HEAP32[$707>>2]|0; //@line 806 "./src/cpp/unrar/arcread.cpp"
               $709 = $708 & 8; //@line 806 "./src/cpp/unrar/arcread.cpp"
               $710 = ($709|0)!=(0); //@line 806 "./src/cpp/unrar/arcread.cpp"
               $711 = $28; //@line 806 "./src/cpp/unrar/arcread.cpp"
               $712 = ((($711)) + 8328|0); //@line 806 "./src/cpp/unrar/arcread.cpp"
               $713 = $710&1; //@line 806 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$712>>0] = $713; //@line 806 "./src/cpp/unrar/arcread.cpp"
               $714 = $28; //@line 807 "./src/cpp/unrar/arcread.cpp"
               $715 = ((($714)) + 8|0); //@line 807 "./src/cpp/unrar/arcread.cpp"
               $716 = HEAP32[$715>>2]|0; //@line 807 "./src/cpp/unrar/arcread.cpp"
               $717 = $716 & 16; //@line 807 "./src/cpp/unrar/arcread.cpp"
               $718 = ($717|0)!=(0); //@line 807 "./src/cpp/unrar/arcread.cpp"
               $719 = $28; //@line 807 "./src/cpp/unrar/arcread.cpp"
               $720 = ((($719)) + 8329|0); //@line 807 "./src/cpp/unrar/arcread.cpp"
               $721 = $718&1; //@line 807 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$720>>0] = $721; //@line 807 "./src/cpp/unrar/arcread.cpp"
               $722 = $28; //@line 808 "./src/cpp/unrar/arcread.cpp"
               $723 = ((($722)) + 8|0); //@line 808 "./src/cpp/unrar/arcread.cpp"
               $724 = HEAP32[$723>>2]|0; //@line 808 "./src/cpp/unrar/arcread.cpp"
               $725 = $724 & 32; //@line 808 "./src/cpp/unrar/arcread.cpp"
               $726 = ($725|0)!=(0); //@line 808 "./src/cpp/unrar/arcread.cpp"
               $727 = $28; //@line 808 "./src/cpp/unrar/arcread.cpp"
               $728 = ((($727)) + 8426|0); //@line 808 "./src/cpp/unrar/arcread.cpp"
               $729 = $726&1; //@line 808 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$728>>0] = $729; //@line 808 "./src/cpp/unrar/arcread.cpp"
               $730 = $29; //@line 809 "./src/cpp/unrar/arcread.cpp"
               $731 = $730&1; //@line 809 "./src/cpp/unrar/arcread.cpp"
               if ($731) {
                $732 = $30; //@line 809 "./src/cpp/unrar/arcread.cpp"
                $733 = $732 & 64; //@line 809 "./src/cpp/unrar/arcread.cpp"
                $734 = ($733|0)!=(0); //@line 809 "./src/cpp/unrar/arcread.cpp"
                $738 = $734;
               } else {
                $738 = 0;
               }
               $735 = $28; //@line 809 "./src/cpp/unrar/arcread.cpp"
               $736 = ((($735)) + 8416|0); //@line 809 "./src/cpp/unrar/arcread.cpp"
               $737 = $738&1; //@line 809 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$736>>0] = $737; //@line 809 "./src/cpp/unrar/arcread.cpp"
               $739 = $28; //@line 810 "./src/cpp/unrar/arcread.cpp"
               $740 = ((($739)) + 8324|0); //@line 810 "./src/cpp/unrar/arcread.cpp"
               $741 = HEAP32[$740>>2]|0; //@line 810 "./src/cpp/unrar/arcread.cpp"
               $742 = $741 & 1; //@line 810 "./src/cpp/unrar/arcread.cpp"
               $743 = ($742|0)!=(0); //@line 810 "./src/cpp/unrar/arcread.cpp"
               $744 = $28; //@line 810 "./src/cpp/unrar/arcread.cpp"
               $745 = ((($744)) + 8417|0); //@line 810 "./src/cpp/unrar/arcread.cpp"
               $746 = $743&1; //@line 810 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$745>>0] = $746; //@line 810 "./src/cpp/unrar/arcread.cpp"
               $747 = $28; //@line 811 "./src/cpp/unrar/arcread.cpp"
               $748 = ((($747)) + 8417|0); //@line 811 "./src/cpp/unrar/arcread.cpp"
               $749 = HEAP8[$748>>0]|0; //@line 811 "./src/cpp/unrar/arcread.cpp"
               $750 = $749&1; //@line 811 "./src/cpp/unrar/arcread.cpp"
               if ($750) {
                $757 = 0;
               } else {
                $751 = $30; //@line 811 "./src/cpp/unrar/arcread.cpp"
                $752 = $751 >>> 10; //@line 811 "./src/cpp/unrar/arcread.cpp"
                $753 = $752 & 15; //@line 811 "./src/cpp/unrar/arcread.cpp"
                $754 = 131072 << $753; //@line 811 "./src/cpp/unrar/arcread.cpp"
                $757 = $754;
               }
               $755 = $28; //@line 811 "./src/cpp/unrar/arcread.cpp"
               $756 = ((($755)) + 8420|0); //@line 811 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$756>>2] = $757; //@line 811 "./src/cpp/unrar/arcread.cpp"
               $758 = $28; //@line 813 "./src/cpp/unrar/arcread.cpp"
               $759 = ((($758)) + 8331|0); //@line 813 "./src/cpp/unrar/arcread.cpp"
               $760 = HEAP8[$759>>0]|0; //@line 813 "./src/cpp/unrar/arcread.cpp"
               $761 = $760&1; //@line 813 "./src/cpp/unrar/arcread.cpp"
               $762 = $761 ? 5 : 0; //@line 813 "./src/cpp/unrar/arcread.cpp"
               $763 = $28; //@line 813 "./src/cpp/unrar/arcread.cpp"
               $764 = ((($763)) + 8332|0); //@line 813 "./src/cpp/unrar/arcread.cpp"
               HEAP32[$764>>2] = $762; //@line 813 "./src/cpp/unrar/arcread.cpp"
               $765 = $31; //@line 816 "./src/cpp/unrar/arcread.cpp"
               $766 = ($765>>>0)<(8191); //@line 816 "./src/cpp/unrar/arcread.cpp"
               $767 = $31; //@line 816 "./src/cpp/unrar/arcread.cpp"
               $768 = $766 ? $767 : 8191; //@line 816 "./src/cpp/unrar/arcread.cpp"
               $33 = $768; //@line 816 "./src/cpp/unrar/arcread.cpp"
               $769 = $33; //@line 817 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               (invoke_iiii(95,($3|0),($32|0),($769|0))|0); //@line 817 "./src/cpp/unrar/arcread.cpp"
               $770 = __THREW__; __THREW__ = 0;
               $771 = $770&1;
               if ($771) {
                break L22;
               }
               $772 = $33; //@line 818 "./src/cpp/unrar/arcread.cpp"
               $773 = (($32) + ($772)|0); //@line 818 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$773>>0] = 0; //@line 818 "./src/cpp/unrar/arcread.cpp"
               $774 = $28; //@line 820 "./src/cpp/unrar/arcread.cpp"
               $775 = ((($774)) + 32|0); //@line 820 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               (invoke_iiii(123,($32|0),($775|0),2048)|0); //@line 820 "./src/cpp/unrar/arcread.cpp"
               $776 = __THREW__; __THREW__ = 0;
               $777 = $776&1;
               if ($777) {
                break L22;
               }
               $778 = $17; //@line 824 "./src/cpp/unrar/arcread.cpp"
               $779 = $778; //@line 824 "./src/cpp/unrar/arcread.cpp"
               $780 = HEAP32[$779>>2]|0; //@line 824 "./src/cpp/unrar/arcread.cpp"
               $781 = (($778) + 4)|0; //@line 824 "./src/cpp/unrar/arcread.cpp"
               $782 = $781; //@line 824 "./src/cpp/unrar/arcread.cpp"
               $783 = HEAP32[$782>>2]|0; //@line 824 "./src/cpp/unrar/arcread.cpp"
               $784 = ($780|0)!=(0); //@line 824 "./src/cpp/unrar/arcread.cpp"
               $785 = ($783|0)!=(0); //@line 824 "./src/cpp/unrar/arcread.cpp"
               $786 = $784 | $785; //@line 824 "./src/cpp/unrar/arcread.cpp"
               if ($786) {
                $787 = $17; //@line 825 "./src/cpp/unrar/arcread.cpp"
                $788 = $787; //@line 825 "./src/cpp/unrar/arcread.cpp"
                $789 = HEAP32[$788>>2]|0; //@line 825 "./src/cpp/unrar/arcread.cpp"
                $790 = (($787) + 4)|0; //@line 825 "./src/cpp/unrar/arcread.cpp"
                $791 = $790; //@line 825 "./src/cpp/unrar/arcread.cpp"
                $792 = HEAP32[$791>>2]|0; //@line 825 "./src/cpp/unrar/arcread.cpp"
                $793 = $28; //@line 825 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_viiii(167,($35|0),($3|0),($789|0),($793|0)); //@line 825 "./src/cpp/unrar/arcread.cpp"
                $794 = __THREW__; __THREW__ = 0;
                $795 = $794&1;
                if ($795) {
                 break L22;
                }
               }
               $796 = $29; //@line 827 "./src/cpp/unrar/arcread.cpp"
               $797 = $796&1; //@line 827 "./src/cpp/unrar/arcread.cpp"
               if ($797) {
                $798 = $28; //@line 830 "./src/cpp/unrar/arcread.cpp"
                $799 = ((($798)) + 32|0); //@line 830 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_vii(140,($35|0),($799|0)); //@line 830 "./src/cpp/unrar/arcread.cpp"
                $800 = __THREW__; __THREW__ = 0;
                $801 = $800&1;
                if ($801) {
                 break L22;
                }
                $802 = $28; //@line 832 "./src/cpp/unrar/arcread.cpp"
                __THREW__ = 0;
                invoke_vii(152,($35|0),($802|0)); //@line 832 "./src/cpp/unrar/arcread.cpp"
                $803 = __THREW__; __THREW__ = 0;
                $804 = $803&1;
                if ($804) {
                 break L22;
                }
               }
               $805 = $29; //@line 835 "./src/cpp/unrar/arcread.cpp"
               $806 = $805&1; //@line 835 "./src/cpp/unrar/arcread.cpp"
               do {
                if (!($806)) {
                 $807 = $28; //@line 835 "./src/cpp/unrar/arcread.cpp"
                 __THREW__ = 0;
                 $808 = (invoke_iii(89,($807|0),(804|0))|0); //@line 835 "./src/cpp/unrar/arcread.cpp"
                 $809 = __THREW__; __THREW__ = 0;
                 $810 = $809&1;
                 if ($810) {
                  break L22;
                 }
                 if (!($808)) {
                  break;
                 }
                 $811 = ((($35)) + 56862|0); //@line 836 "./src/cpp/unrar/arcread.cpp"
                 HEAP8[$811>>0] = 1; //@line 836 "./src/cpp/unrar/arcread.cpp"
                }
               } while(0);
               $812 = $16; //@line 839 "./src/cpp/unrar/arcread.cpp"
               $813 = $812&1; //@line 839 "./src/cpp/unrar/arcread.cpp"
               if (!($813)) {
                break L74;
               }
               $814 = ((($35)) + 24|0); //@line 840 "./src/cpp/unrar/arcread.cpp"
               $815 = $28; //@line 840 "./src/cpp/unrar/arcread.cpp"
               $816 = ((($815)) + 32|0); //@line 840 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               invoke_viii(158,26,($814|0),($816|0)); //@line 840 "./src/cpp/unrar/arcread.cpp"
               $817 = __THREW__; __THREW__ = 0;
               $818 = $817&1;
               if ($818) {
                break L22;
               }
               break;
              }
              case 5:  {
               $819 = ((($35)) + 21272|0); //@line 845 "./src/cpp/unrar/arcread.cpp"
               $820 = ((($35)) + 38576|0); //@line 845 "./src/cpp/unrar/arcread.cpp"
               ;HEAP32[$820>>2]=HEAP32[$819>>2]|0;HEAP32[$820+4>>2]=HEAP32[$819+4>>2]|0;HEAP32[$820+8>>2]=HEAP32[$819+8>>2]|0;HEAP32[$820+12>>2]=HEAP32[$819+12>>2]|0;HEAP32[$820+16>>2]=HEAP32[$819+16>>2]|0; //@line 845 "./src/cpp/unrar/arcread.cpp"
               __THREW__ = 0;
               $821 = (invoke_ii(92,($3|0))|0); //@line 846 "./src/cpp/unrar/arcread.cpp"
               $822 = tempRet0; //@line 846 "./src/cpp/unrar/arcread.cpp"
               $823 = __THREW__; __THREW__ = 0;
               $824 = $823&1;
               if ($824) {
                break L22;
               }
               $34 = $821; //@line 846 "./src/cpp/unrar/arcread.cpp"
               $825 = $34; //@line 847 "./src/cpp/unrar/arcread.cpp"
               $826 = $825 & 1; //@line 847 "./src/cpp/unrar/arcread.cpp"
               $827 = ($826|0)!=(0); //@line 847 "./src/cpp/unrar/arcread.cpp"
               $828 = ((($35)) + 38576|0); //@line 847 "./src/cpp/unrar/arcread.cpp"
               $829 = ((($828)) + 28|0); //@line 847 "./src/cpp/unrar/arcread.cpp"
               $830 = $827&1; //@line 847 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$829>>0] = $830; //@line 847 "./src/cpp/unrar/arcread.cpp"
               $831 = ((($35)) + 38576|0); //@line 848 "./src/cpp/unrar/arcread.cpp"
               $832 = ((($831)) + 31|0); //@line 848 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$832>>0] = 0; //@line 848 "./src/cpp/unrar/arcread.cpp"
               $833 = ((($35)) + 38576|0); //@line 849 "./src/cpp/unrar/arcread.cpp"
               $834 = ((($833)) + 29|0); //@line 849 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$834>>0] = 0; //@line 849 "./src/cpp/unrar/arcread.cpp"
               $835 = ((($35)) + 38576|0); //@line 850 "./src/cpp/unrar/arcread.cpp"
               $836 = ((($835)) + 30|0); //@line 850 "./src/cpp/unrar/arcread.cpp"
               HEAP8[$836>>0] = 0; //@line 850 "./src/cpp/unrar/arcread.cpp"
               break;
              }
              default: {
              }
              }
             } while(0);
             $837 = ((($35)) + 56848|0); //@line 855 "./src/cpp/unrar/arcread.cpp"
             $838 = $837; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $839 = $838; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $840 = HEAP32[$839>>2]|0; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $841 = (($838) + 4)|0; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $842 = $841; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $843 = HEAP32[$842>>2]|0; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $844 = ((($35)) + 56840|0); //@line 855 "./src/cpp/unrar/arcread.cpp"
             $845 = $844; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $846 = $845; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $847 = HEAP32[$846>>2]|0; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $848 = (($845) + 4)|0; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $849 = $848; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $850 = HEAP32[$849>>2]|0; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $851 = ($843|0)<($850|0); //@line 855 "./src/cpp/unrar/arcread.cpp"
             $852 = ($840>>>0)<=($847>>>0); //@line 855 "./src/cpp/unrar/arcread.cpp"
             $853 = ($843|0)==($850|0); //@line 855 "./src/cpp/unrar/arcread.cpp"
             $854 = $853 & $852; //@line 855 "./src/cpp/unrar/arcread.cpp"
             $855 = $851 | $854; //@line 855 "./src/cpp/unrar/arcread.cpp"
             if ($855) {
              __THREW__ = 0;
              invoke_vi(147,($35|0)); //@line 857 "./src/cpp/unrar/arcread.cpp"
              $856 = __THREW__; __THREW__ = 0;
              $857 = $856&1;
              if ($857) {
               break;
              }
              $1 = 0; //@line 858 "./src/cpp/unrar/arcread.cpp"
              $8 = 1;
              __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
              $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
              STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
             } else {
              __THREW__ = 0;
              $858 = (invoke_ii(141,($3|0))|0); //@line 860 "./src/cpp/unrar/arcread.cpp"
              $859 = __THREW__; __THREW__ = 0;
              $860 = $859&1;
              if ($860) {
               break;
              }
              $1 = $858; //@line 860 "./src/cpp/unrar/arcread.cpp"
              $8 = 1;
              __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
              $861 = $1; //@line 861 "./src/cpp/unrar/arcread.cpp"
              STACKTOP = sp;return ($861|0); //@line 861 "./src/cpp/unrar/arcread.cpp"
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 $70 = ___cxa_find_matching_catch_2()|0;
 $71 = tempRet0;
 $5 = $70; //@line 861 "./src/cpp/unrar/arcread.cpp"
 $6 = $71; //@line 861 "./src/cpp/unrar/arcread.cpp"
 __ZN7RawReadD2Ev($3); //@line 861 "./src/cpp/unrar/arcread.cpp"
 $72 = $5; //@line 861 "./src/cpp/unrar/arcread.cpp"
 $73 = $6; //@line 861 "./src/cpp/unrar/arcread.cpp"
 ___resumeException($72|0);
 // unreachable;
 return (0)|0;
}
function __ZN7Archive15BrokenHeaderMsgEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0); //@line 103 "./src/cpp/unrar/arcread.cpp"
 __Z5uiMsgIPwEv14UIMESSAGE_CODET_(24,$3); //@line 103 "./src/cpp/unrar/arcread.cpp"
 $4 = ((($2)) + 56876|0); //@line 104 "./src/cpp/unrar/arcread.cpp"
 HEAP8[$4>>0] = 1; //@line 104 "./src/cpp/unrar/arcread.cpp"
 __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,3); //@line 105 "./src/cpp/unrar/arcread.cpp"
 STACKTOP = sp;return; //@line 106 "./src/cpp/unrar/arcread.cpp"
}
function __ZN7Archive18RequestArcPasswordEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 656|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(656|0);
 $2 = sp;
 $3 = sp + 520|0;
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 14764|0); //@line 867 "./src/cpp/unrar/arcread.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 867 "./src/cpp/unrar/arcread.cpp"
 $7 = ((($6)) + 41000|0); //@line 867 "./src/cpp/unrar/arcread.cpp"
 $8 = (__ZN11SecPassword5IsSetEv($7)|0); //@line 867 "./src/cpp/unrar/arcread.cpp"
 if ($8) {
  STACKTOP = sp;return; //@line 905 "./src/cpp/unrar/arcread.cpp"
 }
 $9 = ((($4)) + 14764|0); //@line 870 "./src/cpp/unrar/arcread.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 870 "./src/cpp/unrar/arcread.cpp"
 $11 = ((($10)) + 75184|0); //@line 870 "./src/cpp/unrar/arcread.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 870 "./src/cpp/unrar/arcread.cpp"
 $13 = ($12|0)!=(0|0); //@line 870 "./src/cpp/unrar/arcread.cpp"
 if ($13) {
  HEAP32[$2>>2] = 0; //@line 873 "./src/cpp/unrar/arcread.cpp"
  $14 = ((($4)) + 14764|0); //@line 874 "./src/cpp/unrar/arcread.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 874 "./src/cpp/unrar/arcread.cpp"
  $16 = ((($15)) + 75184|0); //@line 874 "./src/cpp/unrar/arcread.cpp"
  $17 = HEAP32[$16>>2]|0; //@line 874 "./src/cpp/unrar/arcread.cpp"
  $18 = ((($4)) + 14764|0); //@line 874 "./src/cpp/unrar/arcread.cpp"
  $19 = HEAP32[$18>>2]|0; //@line 874 "./src/cpp/unrar/arcread.cpp"
  $20 = ((($19)) + 75180|0); //@line 874 "./src/cpp/unrar/arcread.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 874 "./src/cpp/unrar/arcread.cpp"
  $22 = $2; //@line 874 "./src/cpp/unrar/arcread.cpp"
  $23 = (FUNCTION_TABLE_iiiii[$17 & 511](4,$21,$22,128)|0); //@line 874 "./src/cpp/unrar/arcread.cpp"
  $24 = ($23|0)==(-1); //@line 874 "./src/cpp/unrar/arcread.cpp"
  if ($24) {
   HEAP32[$2>>2] = 0; //@line 875 "./src/cpp/unrar/arcread.cpp"
  }
  $25 = HEAP32[$2>>2]|0; //@line 876 "./src/cpp/unrar/arcread.cpp"
  $26 = ($25|0)==(0); //@line 876 "./src/cpp/unrar/arcread.cpp"
  if ($26) {
   HEAP8[$3>>0] = 0; //@line 879 "./src/cpp/unrar/arcread.cpp"
   $27 = ((($4)) + 14764|0); //@line 880 "./src/cpp/unrar/arcread.cpp"
   $28 = HEAP32[$27>>2]|0; //@line 880 "./src/cpp/unrar/arcread.cpp"
   $29 = ((($28)) + 75184|0); //@line 880 "./src/cpp/unrar/arcread.cpp"
   $30 = HEAP32[$29>>2]|0; //@line 880 "./src/cpp/unrar/arcread.cpp"
   $31 = ((($4)) + 14764|0); //@line 880 "./src/cpp/unrar/arcread.cpp"
   $32 = HEAP32[$31>>2]|0; //@line 880 "./src/cpp/unrar/arcread.cpp"
   $33 = ((($32)) + 75180|0); //@line 880 "./src/cpp/unrar/arcread.cpp"
   $34 = HEAP32[$33>>2]|0; //@line 880 "./src/cpp/unrar/arcread.cpp"
   $35 = $3; //@line 880 "./src/cpp/unrar/arcread.cpp"
   $36 = (FUNCTION_TABLE_iiiii[$30 & 511](2,$34,$35,128)|0); //@line 880 "./src/cpp/unrar/arcread.cpp"
   $37 = ($36|0)==(-1); //@line 880 "./src/cpp/unrar/arcread.cpp"
   if ($37) {
    HEAP8[$3>>0] = 0; //@line 881 "./src/cpp/unrar/arcread.cpp"
   }
   (__Z11GetWideNamePKcPKwPwj($3,0,$2,128)|0); //@line 882 "./src/cpp/unrar/arcread.cpp"
   __Z9cleandataPvj($3,128); //@line 883 "./src/cpp/unrar/arcread.cpp"
  }
  $38 = ((($4)) + 14764|0); //@line 885 "./src/cpp/unrar/arcread.cpp"
  $39 = HEAP32[$38>>2]|0; //@line 885 "./src/cpp/unrar/arcread.cpp"
  $40 = ((($39)) + 41000|0); //@line 885 "./src/cpp/unrar/arcread.cpp"
  __ZN11SecPassword3SetEPKw($40,$2); //@line 885 "./src/cpp/unrar/arcread.cpp"
  __Z9cleandataPvj($2,512); //@line 886 "./src/cpp/unrar/arcread.cpp"
 }
 $41 = ((($4)) + 14764|0); //@line 888 "./src/cpp/unrar/arcread.cpp"
 $42 = HEAP32[$41>>2]|0; //@line 888 "./src/cpp/unrar/arcread.cpp"
 $43 = ((($42)) + 41000|0); //@line 888 "./src/cpp/unrar/arcread.cpp"
 $44 = (__ZN11SecPassword5IsSetEv($43)|0); //@line 888 "./src/cpp/unrar/arcread.cpp"
 if (!($44)) {
  (__ZN4File5CloseEv($4)|0); //@line 890 "./src/cpp/unrar/arcread.cpp"
  $45 = ((($4)) + 14764|0); //@line 891 "./src/cpp/unrar/arcread.cpp"
  $46 = HEAP32[$45>>2]|0; //@line 891 "./src/cpp/unrar/arcread.cpp"
  $47 = ((($46)) + 75176|0); //@line 891 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$47>>2] = 22; //@line 891 "./src/cpp/unrar/arcread.cpp"
  __ZN12ErrorHandler4ExitE8RAR_EXIT(756,255); //@line 892 "./src/cpp/unrar/arcread.cpp"
 }
 $48 = ((($4)) + 14764|0); //@line 903 "./src/cpp/unrar/arcread.cpp"
 $49 = HEAP32[$48>>2]|0; //@line 903 "./src/cpp/unrar/arcread.cpp"
 $50 = ((($49)) + 41517|0); //@line 903 "./src/cpp/unrar/arcread.cpp"
 HEAP8[$50>>0] = 1; //@line 903 "./src/cpp/unrar/arcread.cpp"
 STACKTOP = sp;return; //@line 905 "./src/cpp/unrar/arcread.cpp"
}
function __ZN7Archive14UnexpEndArcMsgEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1;
 $4 = (__ZN4File10FileLengthEv($3)|0); //@line 88 "./src/cpp/unrar/arcread.cpp"
 $5 = tempRet0; //@line 88 "./src/cpp/unrar/arcread.cpp"
 $6 = $2; //@line 88 "./src/cpp/unrar/arcread.cpp"
 $7 = $6; //@line 88 "./src/cpp/unrar/arcread.cpp"
 HEAP32[$7>>2] = $4; //@line 88 "./src/cpp/unrar/arcread.cpp"
 $8 = (($6) + 4)|0; //@line 88 "./src/cpp/unrar/arcread.cpp"
 $9 = $8; //@line 88 "./src/cpp/unrar/arcread.cpp"
 HEAP32[$9>>2] = $5; //@line 88 "./src/cpp/unrar/arcread.cpp"
 $10 = ((($3)) + 56840|0); //@line 93 "./src/cpp/unrar/arcread.cpp"
 $11 = $10; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $12 = $11; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $14 = (($11) + 4)|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $15 = $14; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $16 = HEAP32[$15>>2]|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $17 = $2; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $18 = $17; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $19 = HEAP32[$18>>2]|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $20 = (($17) + 4)|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $21 = $20; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
 $23 = ($13|0)!=($19|0); //@line 93 "./src/cpp/unrar/arcread.cpp"
 $24 = ($16|0)!=($22|0); //@line 93 "./src/cpp/unrar/arcread.cpp"
 $25 = $23 | $24; //@line 93 "./src/cpp/unrar/arcread.cpp"
 if (!($25)) {
  $26 = ((($3)) + 56848|0); //@line 93 "./src/cpp/unrar/arcread.cpp"
  $27 = $26; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $28 = $27; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $29 = HEAP32[$28>>2]|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $30 = (($27) + 4)|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $31 = $30; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $32 = HEAP32[$31>>2]|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $33 = $2; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $34 = $33; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $35 = HEAP32[$34>>2]|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $36 = (($33) + 4)|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $37 = $36; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $38 = HEAP32[$37>>2]|0; //@line 93 "./src/cpp/unrar/arcread.cpp"
  $39 = ($29|0)!=($35|0); //@line 93 "./src/cpp/unrar/arcread.cpp"
  $40 = ($32|0)!=($38|0); //@line 93 "./src/cpp/unrar/arcread.cpp"
  $41 = $39 | $40; //@line 93 "./src/cpp/unrar/arcread.cpp"
  if (!($41)) {
   STACKTOP = sp;return; //@line 98 "./src/cpp/unrar/arcread.cpp"
  }
 }
 $42 = ((($3)) + 24|0); //@line 95 "./src/cpp/unrar/arcread.cpp"
 __Z5uiMsgIPwEv14UIMESSAGE_CODET_(55,$42); //@line 95 "./src/cpp/unrar/arcread.cpp"
 __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 96 "./src/cpp/unrar/arcread.cpp"
 STACKTOP = sp;return; //@line 98 "./src/cpp/unrar/arcread.cpp"
}
function __ZN7RawRead8SetCryptEP9CryptData($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 39 "./src/cpp/unrar/rawread.hpp"
 $6 = ((($4)) + 28|0); //@line 39 "./src/cpp/unrar/rawread.hpp"
 HEAP32[$6>>2] = $5; //@line 39 "./src/cpp/unrar/rawread.hpp"
 STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/rawread.hpp"
}
function __ZN9BaseBlock5ResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0); //@line 151 "./src/cpp/unrar/headers.hpp"
 HEAP8[$3>>0] = 0; //@line 151 "./src/cpp/unrar/headers.hpp"
 STACKTOP = sp;return; //@line 152 "./src/cpp/unrar/headers.hpp"
}
function __ZN7RawRead4SizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0); //@line 31 "./src/cpp/unrar/rawread.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 31 "./src/cpp/unrar/rawread.hpp"
 STACKTOP = sp;return ($4|0); //@line 31 "./src/cpp/unrar/rawread.hpp"
}
function __ZN7Archive12UnkEncVerMsgEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 24|0); //@line 111 "./src/cpp/unrar/arcread.cpp"
 $6 = $3; //@line 111 "./src/cpp/unrar/arcread.cpp"
 __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(32,$5,$6); //@line 111 "./src/cpp/unrar/arcread.cpp"
 __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 112 "./src/cpp/unrar/arcread.cpp"
 STACKTOP = sp;return; //@line 113 "./src/cpp/unrar/arcread.cpp"
}
function __ZN7Archive14ProcessExtra50EP7RawReadjP9BaseBlock($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond31 = 0, $cond32 = 0, $cond33 = 0, $cond34 = 0, $cond35 = 0, $cond36 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(8560|0);
 $vararg_buffer = sp + 144|0;
 $9 = sp + 136|0;
 $11 = sp + 128|0;
 $14 = sp + 120|0;
 $15 = sp + 112|0;
 $20 = sp + 8544|0;
 $21 = sp;
 $22 = sp + 8512|0;
 $28 = sp + 168|0;
 $31 = sp + 312|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $35 = $4;
 $36 = $5; //@line 912 "./src/cpp/unrar/arcread.cpp"
 $37 = (__ZN7RawRead4SizeEv($36)|0); //@line 912 "./src/cpp/unrar/arcread.cpp"
 $38 = $6; //@line 912 "./src/cpp/unrar/arcread.cpp"
 $39 = (($37) - ($38))|0; //@line 912 "./src/cpp/unrar/arcread.cpp"
 $8 = $39; //@line 912 "./src/cpp/unrar/arcread.cpp"
 $40 = $8; //@line 913 "./src/cpp/unrar/arcread.cpp"
 $41 = $5; //@line 913 "./src/cpp/unrar/arcread.cpp"
 $42 = (__ZN7RawRead6GetPosEv($41)|0); //@line 913 "./src/cpp/unrar/arcread.cpp"
 $43 = ($40>>>0)<($42>>>0); //@line 913 "./src/cpp/unrar/arcread.cpp"
 if ($43) {
  STACKTOP = sp;return; //@line 1131 "./src/cpp/unrar/arcread.cpp"
 }
 $44 = $5; //@line 915 "./src/cpp/unrar/arcread.cpp"
 $45 = $8; //@line 915 "./src/cpp/unrar/arcread.cpp"
 __ZN7RawRead6SetPosEj($44,$45); //@line 915 "./src/cpp/unrar/arcread.cpp"
 while(1) {
  $46 = $5; //@line 916 "./src/cpp/unrar/arcread.cpp"
  $47 = (__ZN7RawRead8DataLeftEv($46)|0); //@line 916 "./src/cpp/unrar/arcread.cpp"
  $48 = ($47>>>0)>=(2); //@line 916 "./src/cpp/unrar/arcread.cpp"
  if (!($48)) {
   label = 69;
   break;
  }
  $49 = $5; //@line 918 "./src/cpp/unrar/arcread.cpp"
  $50 = (__ZN7RawRead4GetVEv($49)|0); //@line 918 "./src/cpp/unrar/arcread.cpp"
  $51 = tempRet0; //@line 918 "./src/cpp/unrar/arcread.cpp"
  $52 = $9; //@line 918 "./src/cpp/unrar/arcread.cpp"
  $53 = $52; //@line 918 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$53>>2] = $50; //@line 918 "./src/cpp/unrar/arcread.cpp"
  $54 = (($52) + 4)|0; //@line 918 "./src/cpp/unrar/arcread.cpp"
  $55 = $54; //@line 918 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$55>>2] = $51; //@line 918 "./src/cpp/unrar/arcread.cpp"
  $56 = $9; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $57 = $56; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $58 = HEAP32[$57>>2]|0; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $59 = (($56) + 4)|0; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $60 = $59; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $61 = HEAP32[$60>>2]|0; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $62 = ($58|0)==(0); //@line 919 "./src/cpp/unrar/arcread.cpp"
  $63 = ($61|0)==(0); //@line 919 "./src/cpp/unrar/arcread.cpp"
  $64 = $62 & $63; //@line 919 "./src/cpp/unrar/arcread.cpp"
  if ($64) {
   label = 69;
   break;
  }
  $65 = $5; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $66 = (__ZN7RawRead8DataLeftEv($65)|0); //@line 919 "./src/cpp/unrar/arcread.cpp"
  $67 = ($66|0)==(0); //@line 919 "./src/cpp/unrar/arcread.cpp"
  if ($67) {
   label = 69;
   break;
  }
  $68 = $9; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $69 = $68; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $70 = HEAP32[$69>>2]|0; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $71 = (($68) + 4)|0; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $72 = $71; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $73 = HEAP32[$72>>2]|0; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $74 = $5; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $75 = (__ZN7RawRead8DataLeftEv($74)|0); //@line 919 "./src/cpp/unrar/arcread.cpp"
  $76 = ($73|0)>(0); //@line 919 "./src/cpp/unrar/arcread.cpp"
  $77 = ($70>>>0)>($75>>>0); //@line 919 "./src/cpp/unrar/arcread.cpp"
  $78 = ($73|0)==(0); //@line 919 "./src/cpp/unrar/arcread.cpp"
  $79 = $78 & $77; //@line 919 "./src/cpp/unrar/arcread.cpp"
  $80 = $76 | $79; //@line 919 "./src/cpp/unrar/arcread.cpp"
  if ($80) {
   label = 69;
   break;
  }
  $81 = $5; //@line 921 "./src/cpp/unrar/arcread.cpp"
  $82 = (__ZN7RawRead6GetPosEv($81)|0); //@line 921 "./src/cpp/unrar/arcread.cpp"
  $83 = $9; //@line 921 "./src/cpp/unrar/arcread.cpp"
  $84 = $83; //@line 921 "./src/cpp/unrar/arcread.cpp"
  $85 = HEAP32[$84>>2]|0; //@line 921 "./src/cpp/unrar/arcread.cpp"
  $86 = (($83) + 4)|0; //@line 921 "./src/cpp/unrar/arcread.cpp"
  $87 = $86; //@line 921 "./src/cpp/unrar/arcread.cpp"
  $88 = HEAP32[$87>>2]|0; //@line 921 "./src/cpp/unrar/arcread.cpp"
  $89 = (_i64Add(($82|0),0,($85|0),($88|0))|0); //@line 921 "./src/cpp/unrar/arcread.cpp"
  $90 = tempRet0; //@line 921 "./src/cpp/unrar/arcread.cpp"
  $10 = $89; //@line 921 "./src/cpp/unrar/arcread.cpp"
  $91 = $5; //@line 922 "./src/cpp/unrar/arcread.cpp"
  $92 = (__ZN7RawRead4GetVEv($91)|0); //@line 922 "./src/cpp/unrar/arcread.cpp"
  $93 = tempRet0; //@line 922 "./src/cpp/unrar/arcread.cpp"
  $94 = $11; //@line 922 "./src/cpp/unrar/arcread.cpp"
  $95 = $94; //@line 922 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$95>>2] = $92; //@line 922 "./src/cpp/unrar/arcread.cpp"
  $96 = (($94) + 4)|0; //@line 922 "./src/cpp/unrar/arcread.cpp"
  $97 = $96; //@line 922 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$97>>2] = $93; //@line 922 "./src/cpp/unrar/arcread.cpp"
  $98 = $10; //@line 924 "./src/cpp/unrar/arcread.cpp"
  $99 = $5; //@line 924 "./src/cpp/unrar/arcread.cpp"
  $100 = (__ZN7RawRead6GetPosEv($99)|0); //@line 924 "./src/cpp/unrar/arcread.cpp"
  $101 = (($98) - ($100))|0; //@line 924 "./src/cpp/unrar/arcread.cpp"
  $102 = $9; //@line 924 "./src/cpp/unrar/arcread.cpp"
  $103 = $102; //@line 924 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$103>>2] = $101; //@line 924 "./src/cpp/unrar/arcread.cpp"
  $104 = (($102) + 4)|0; //@line 924 "./src/cpp/unrar/arcread.cpp"
  $105 = $104; //@line 924 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$105>>2] = 0; //@line 924 "./src/cpp/unrar/arcread.cpp"
  $106 = $7; //@line 926 "./src/cpp/unrar/arcread.cpp"
  $107 = ((($106)) + 4|0); //@line 926 "./src/cpp/unrar/arcread.cpp"
  $108 = HEAP32[$107>>2]|0; //@line 926 "./src/cpp/unrar/arcread.cpp"
  $109 = ($108|0)==(1); //@line 926 "./src/cpp/unrar/arcread.cpp"
  if ($109) {
   $110 = $7; //@line 928 "./src/cpp/unrar/arcread.cpp"
   $12 = $110; //@line 928 "./src/cpp/unrar/arcread.cpp"
   $111 = $11; //@line 929 "./src/cpp/unrar/arcread.cpp"
   $112 = $111; //@line 929 "./src/cpp/unrar/arcread.cpp"
   $113 = HEAP32[$112>>2]|0; //@line 929 "./src/cpp/unrar/arcread.cpp"
   $114 = (($111) + 4)|0; //@line 929 "./src/cpp/unrar/arcread.cpp"
   $115 = $114; //@line 929 "./src/cpp/unrar/arcread.cpp"
   $116 = HEAP32[$115>>2]|0; //@line 929 "./src/cpp/unrar/arcread.cpp"
   $117 = ($113|0)==(1); //@line 929 "./src/cpp/unrar/arcread.cpp"
   $118 = ($116|0)==(0); //@line 929 "./src/cpp/unrar/arcread.cpp"
   $119 = $117 & $118; //@line 929 "./src/cpp/unrar/arcread.cpp"
   if ($119) {
    $120 = $12; //@line 931 "./src/cpp/unrar/arcread.cpp"
    $121 = ((($120)) + 30|0); //@line 931 "./src/cpp/unrar/arcread.cpp"
    HEAP8[$121>>0] = 1; //@line 931 "./src/cpp/unrar/arcread.cpp"
    $122 = $5; //@line 932 "./src/cpp/unrar/arcread.cpp"
    $123 = (__ZN7RawRead4GetVEv($122)|0); //@line 932 "./src/cpp/unrar/arcread.cpp"
    $124 = tempRet0; //@line 932 "./src/cpp/unrar/arcread.cpp"
    $13 = $123; //@line 932 "./src/cpp/unrar/arcread.cpp"
    $125 = $13; //@line 933 "./src/cpp/unrar/arcread.cpp"
    $126 = $125 & 1; //@line 933 "./src/cpp/unrar/arcread.cpp"
    $127 = ($126|0)!=(0); //@line 933 "./src/cpp/unrar/arcread.cpp"
    if ($127) {
     $128 = $5; //@line 935 "./src/cpp/unrar/arcread.cpp"
     $129 = (__ZN7RawRead4GetVEv($128)|0); //@line 935 "./src/cpp/unrar/arcread.cpp"
     $130 = tempRet0; //@line 935 "./src/cpp/unrar/arcread.cpp"
     $131 = $14; //@line 935 "./src/cpp/unrar/arcread.cpp"
     $132 = $131; //@line 935 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$132>>2] = $129; //@line 935 "./src/cpp/unrar/arcread.cpp"
     $133 = (($131) + 4)|0; //@line 935 "./src/cpp/unrar/arcread.cpp"
     $134 = $133; //@line 935 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$134>>2] = $130; //@line 935 "./src/cpp/unrar/arcread.cpp"
     $135 = $14; //@line 936 "./src/cpp/unrar/arcread.cpp"
     $136 = $135; //@line 936 "./src/cpp/unrar/arcread.cpp"
     $137 = HEAP32[$136>>2]|0; //@line 936 "./src/cpp/unrar/arcread.cpp"
     $138 = (($135) + 4)|0; //@line 936 "./src/cpp/unrar/arcread.cpp"
     $139 = $138; //@line 936 "./src/cpp/unrar/arcread.cpp"
     $140 = HEAP32[$139>>2]|0; //@line 936 "./src/cpp/unrar/arcread.cpp"
     $141 = ($137|0)!=(0); //@line 936 "./src/cpp/unrar/arcread.cpp"
     $142 = ($140|0)!=(0); //@line 936 "./src/cpp/unrar/arcread.cpp"
     $143 = $141 | $142; //@line 936 "./src/cpp/unrar/arcread.cpp"
     if ($143) {
      $144 = $14; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $145 = $144; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $146 = HEAP32[$145>>2]|0; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $147 = (($144) + 4)|0; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $148 = $147; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $149 = HEAP32[$148>>2]|0; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $150 = ((($35)) + 56840|0); //@line 937 "./src/cpp/unrar/arcread.cpp"
      $151 = $150; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $152 = $151; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $153 = HEAP32[$152>>2]|0; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $154 = (($151) + 4)|0; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $155 = $154; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $156 = HEAP32[$155>>2]|0; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $157 = (_i64Add(($146|0),($149|0),($153|0),($156|0))|0); //@line 937 "./src/cpp/unrar/arcread.cpp"
      $158 = tempRet0; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $159 = $12; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $160 = ((($159)) + 32|0); //@line 937 "./src/cpp/unrar/arcread.cpp"
      $161 = $160; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $162 = $161; //@line 937 "./src/cpp/unrar/arcread.cpp"
      HEAP32[$162>>2] = $157; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $163 = (($161) + 4)|0; //@line 937 "./src/cpp/unrar/arcread.cpp"
      $164 = $163; //@line 937 "./src/cpp/unrar/arcread.cpp"
      HEAP32[$164>>2] = $158; //@line 937 "./src/cpp/unrar/arcread.cpp"
     }
    }
    $165 = $13; //@line 939 "./src/cpp/unrar/arcread.cpp"
    $166 = $165 & 2; //@line 939 "./src/cpp/unrar/arcread.cpp"
    $167 = ($166|0)!=(0); //@line 939 "./src/cpp/unrar/arcread.cpp"
    if ($167) {
     $168 = $5; //@line 941 "./src/cpp/unrar/arcread.cpp"
     $169 = (__ZN7RawRead4GetVEv($168)|0); //@line 941 "./src/cpp/unrar/arcread.cpp"
     $170 = tempRet0; //@line 941 "./src/cpp/unrar/arcread.cpp"
     $171 = $15; //@line 941 "./src/cpp/unrar/arcread.cpp"
     $172 = $171; //@line 941 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$172>>2] = $169; //@line 941 "./src/cpp/unrar/arcread.cpp"
     $173 = (($171) + 4)|0; //@line 941 "./src/cpp/unrar/arcread.cpp"
     $174 = $173; //@line 941 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$174>>2] = $170; //@line 941 "./src/cpp/unrar/arcread.cpp"
     $175 = $15; //@line 942 "./src/cpp/unrar/arcread.cpp"
     $176 = $175; //@line 942 "./src/cpp/unrar/arcread.cpp"
     $177 = HEAP32[$176>>2]|0; //@line 942 "./src/cpp/unrar/arcread.cpp"
     $178 = (($175) + 4)|0; //@line 942 "./src/cpp/unrar/arcread.cpp"
     $179 = $178; //@line 942 "./src/cpp/unrar/arcread.cpp"
     $180 = HEAP32[$179>>2]|0; //@line 942 "./src/cpp/unrar/arcread.cpp"
     $181 = ($177|0)!=(0); //@line 942 "./src/cpp/unrar/arcread.cpp"
     $182 = ($180|0)!=(0); //@line 942 "./src/cpp/unrar/arcread.cpp"
     $183 = $181 | $182; //@line 942 "./src/cpp/unrar/arcread.cpp"
     if ($183) {
      $184 = $15; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $185 = $184; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $186 = HEAP32[$185>>2]|0; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $187 = (($184) + 4)|0; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $188 = $187; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $189 = HEAP32[$188>>2]|0; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $190 = ((($35)) + 56840|0); //@line 943 "./src/cpp/unrar/arcread.cpp"
      $191 = $190; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $192 = $191; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $193 = HEAP32[$192>>2]|0; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $194 = (($191) + 4)|0; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $195 = $194; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $196 = HEAP32[$195>>2]|0; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $197 = (_i64Add(($186|0),($189|0),($193|0),($196|0))|0); //@line 943 "./src/cpp/unrar/arcread.cpp"
      $198 = tempRet0; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $199 = $12; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $200 = ((($199)) + 48|0); //@line 943 "./src/cpp/unrar/arcread.cpp"
      $201 = $200; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $202 = $201; //@line 943 "./src/cpp/unrar/arcread.cpp"
      HEAP32[$202>>2] = $197; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $203 = (($201) + 4)|0; //@line 943 "./src/cpp/unrar/arcread.cpp"
      $204 = $203; //@line 943 "./src/cpp/unrar/arcread.cpp"
      HEAP32[$204>>2] = $198; //@line 943 "./src/cpp/unrar/arcread.cpp"
     }
    }
   }
  }
  $205 = $7; //@line 948 "./src/cpp/unrar/arcread.cpp"
  $206 = ((($205)) + 4|0); //@line 948 "./src/cpp/unrar/arcread.cpp"
  $207 = HEAP32[$206>>2]|0; //@line 948 "./src/cpp/unrar/arcread.cpp"
  $208 = ($207|0)==(2); //@line 948 "./src/cpp/unrar/arcread.cpp"
  if ($208) {
   label = 17;
  } else {
   $209 = $7; //@line 948 "./src/cpp/unrar/arcread.cpp"
   $210 = ((($209)) + 4|0); //@line 948 "./src/cpp/unrar/arcread.cpp"
   $211 = HEAP32[$210>>2]|0; //@line 948 "./src/cpp/unrar/arcread.cpp"
   $212 = ($211|0)==(3); //@line 948 "./src/cpp/unrar/arcread.cpp"
   if ($212) {
    label = 17;
   }
  }
  L22: do {
   if ((label|0) == 17) {
    label = 0;
    $213 = $7; //@line 950 "./src/cpp/unrar/arcread.cpp"
    $16 = $213; //@line 950 "./src/cpp/unrar/arcread.cpp"
    $214 = $11; //@line 951 "./src/cpp/unrar/arcread.cpp"
    $215 = $214; //@line 951 "./src/cpp/unrar/arcread.cpp"
    $216 = HEAP32[$215>>2]|0; //@line 951 "./src/cpp/unrar/arcread.cpp"
    $217 = (($214) + 4)|0; //@line 951 "./src/cpp/unrar/arcread.cpp"
    $218 = $217; //@line 951 "./src/cpp/unrar/arcread.cpp"
    $219 = HEAP32[$218>>2]|0; //@line 951 "./src/cpp/unrar/arcread.cpp"
    switch ($216|0) {
    case 1:  {
     $cond36 = ($219|0)==(0);
     if (!($cond36)) {
      break L22;
     }
     $220 = $7; //@line 955 "./src/cpp/unrar/arcread.cpp"
     $17 = $220; //@line 955 "./src/cpp/unrar/arcread.cpp"
     $221 = $5; //@line 956 "./src/cpp/unrar/arcread.cpp"
     $222 = (__ZN7RawRead4GetVEv($221)|0); //@line 956 "./src/cpp/unrar/arcread.cpp"
     $223 = tempRet0; //@line 956 "./src/cpp/unrar/arcread.cpp"
     $18 = $222; //@line 956 "./src/cpp/unrar/arcread.cpp"
     $224 = $18; //@line 957 "./src/cpp/unrar/arcread.cpp"
     $225 = ($224>>>0)>(0); //@line 957 "./src/cpp/unrar/arcread.cpp"
     if ($225) {
      $226 = $17; //@line 958 "./src/cpp/unrar/arcread.cpp"
      $227 = ((($226)) + 32|0); //@line 958 "./src/cpp/unrar/arcread.cpp"
      __ZN7Archive12UnkEncVerMsgEPKw($35,$227); //@line 958 "./src/cpp/unrar/arcread.cpp"
      break L22;
     }
     $228 = $5; //@line 961 "./src/cpp/unrar/arcread.cpp"
     $229 = (__ZN7RawRead4GetVEv($228)|0); //@line 961 "./src/cpp/unrar/arcread.cpp"
     $230 = tempRet0; //@line 961 "./src/cpp/unrar/arcread.cpp"
     $19 = $229; //@line 961 "./src/cpp/unrar/arcread.cpp"
     $231 = $19; //@line 962 "./src/cpp/unrar/arcread.cpp"
     $232 = $231 & 1; //@line 962 "./src/cpp/unrar/arcread.cpp"
     $233 = ($232|0)!=(0); //@line 962 "./src/cpp/unrar/arcread.cpp"
     $234 = $17; //@line 962 "./src/cpp/unrar/arcread.cpp"
     $235 = ((($234)) + 8369|0); //@line 962 "./src/cpp/unrar/arcread.cpp"
     $236 = $233&1; //@line 962 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$235>>0] = $236; //@line 962 "./src/cpp/unrar/arcread.cpp"
     $237 = $19; //@line 963 "./src/cpp/unrar/arcread.cpp"
     $238 = $237 & 2; //@line 963 "./src/cpp/unrar/arcread.cpp"
     $239 = ($238|0)!=(0); //@line 963 "./src/cpp/unrar/arcread.cpp"
     $240 = $17; //@line 963 "./src/cpp/unrar/arcread.cpp"
     $241 = ((($240)) + 8378|0); //@line 963 "./src/cpp/unrar/arcread.cpp"
     $242 = $239&1; //@line 963 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$241>>0] = $242; //@line 963 "./src/cpp/unrar/arcread.cpp"
     $243 = $5; //@line 964 "./src/cpp/unrar/arcread.cpp"
     $244 = (__ZN7RawRead4Get1Ev($243)|0); //@line 964 "./src/cpp/unrar/arcread.cpp"
     $245 = $244&255; //@line 964 "./src/cpp/unrar/arcread.cpp"
     $246 = $17; //@line 964 "./src/cpp/unrar/arcread.cpp"
     $247 = ((($246)) + 8412|0); //@line 964 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$247>>2] = $245; //@line 964 "./src/cpp/unrar/arcread.cpp"
     $248 = $17; //@line 965 "./src/cpp/unrar/arcread.cpp"
     $249 = ((($248)) + 8412|0); //@line 965 "./src/cpp/unrar/arcread.cpp"
     $250 = HEAP32[$249>>2]|0; //@line 965 "./src/cpp/unrar/arcread.cpp"
     $251 = ($250>>>0)>(24); //@line 965 "./src/cpp/unrar/arcread.cpp"
     if ($251) {
      $252 = $17; //@line 966 "./src/cpp/unrar/arcread.cpp"
      $253 = ((($252)) + 32|0); //@line 966 "./src/cpp/unrar/arcread.cpp"
      __ZN7Archive12UnkEncVerMsgEPKw($35,$253); //@line 966 "./src/cpp/unrar/arcread.cpp"
     }
     $254 = $5; //@line 967 "./src/cpp/unrar/arcread.cpp"
     $255 = $17; //@line 967 "./src/cpp/unrar/arcread.cpp"
     $256 = ((($255)) + 8337|0); //@line 967 "./src/cpp/unrar/arcread.cpp"
     (__ZN7RawRead4GetBEPvj($254,$256,16)|0); //@line 967 "./src/cpp/unrar/arcread.cpp"
     $257 = $5; //@line 968 "./src/cpp/unrar/arcread.cpp"
     $258 = $17; //@line 968 "./src/cpp/unrar/arcread.cpp"
     $259 = ((($258)) + 8353|0); //@line 968 "./src/cpp/unrar/arcread.cpp"
     (__ZN7RawRead4GetBEPvj($257,$259,16)|0); //@line 968 "./src/cpp/unrar/arcread.cpp"
     $260 = $17; //@line 969 "./src/cpp/unrar/arcread.cpp"
     $261 = ((($260)) + 8369|0); //@line 969 "./src/cpp/unrar/arcread.cpp"
     $262 = HEAP8[$261>>0]|0; //@line 969 "./src/cpp/unrar/arcread.cpp"
     $263 = $262&1; //@line 969 "./src/cpp/unrar/arcread.cpp"
     if ($263) {
      $264 = $5; //@line 971 "./src/cpp/unrar/arcread.cpp"
      $265 = $17; //@line 971 "./src/cpp/unrar/arcread.cpp"
      $266 = ((($265)) + 8370|0); //@line 971 "./src/cpp/unrar/arcread.cpp"
      (__ZN7RawRead4GetBEPvj($264,$266,8)|0); //@line 971 "./src/cpp/unrar/arcread.cpp"
      $267 = $5; //@line 981 "./src/cpp/unrar/arcread.cpp"
      (__ZN7RawRead4GetBEPvj($267,$20,4)|0); //@line 981 "./src/cpp/unrar/arcread.cpp"
      __Z11sha256_initP14sha256_context($21); //@line 984 "./src/cpp/unrar/arcread.cpp"
      $268 = $17; //@line 985 "./src/cpp/unrar/arcread.cpp"
      $269 = ((($268)) + 8370|0); //@line 985 "./src/cpp/unrar/arcread.cpp"
      __Z14sha256_processP14sha256_contextPKvj($21,$269,8); //@line 985 "./src/cpp/unrar/arcread.cpp"
      __Z11sha256_doneP14sha256_contextPh($21,$22); //@line 988 "./src/cpp/unrar/arcread.cpp"
      $270 = (_memcmp($20,$22,4)|0); //@line 990 "./src/cpp/unrar/arcread.cpp"
      $271 = ($270|0)==(0); //@line 990 "./src/cpp/unrar/arcread.cpp"
      $272 = $17; //@line 990 "./src/cpp/unrar/arcread.cpp"
      $273 = ((($272)) + 8369|0); //@line 990 "./src/cpp/unrar/arcread.cpp"
      $274 = $271&1; //@line 990 "./src/cpp/unrar/arcread.cpp"
      HEAP8[$273>>0] = $274; //@line 990 "./src/cpp/unrar/arcread.cpp"
      $275 = $7; //@line 994 "./src/cpp/unrar/arcread.cpp"
      $276 = ((($275)) + 4|0); //@line 994 "./src/cpp/unrar/arcread.cpp"
      $277 = HEAP32[$276>>2]|0; //@line 994 "./src/cpp/unrar/arcread.cpp"
      $278 = ($277|0)==(3); //@line 994 "./src/cpp/unrar/arcread.cpp"
      if ($278) {
       $279 = $17; //@line 994 "./src/cpp/unrar/arcread.cpp"
       $280 = ((($279)) + 8370|0); //@line 994 "./src/cpp/unrar/arcread.cpp"
       $281 = (_memcmp($280,56024,8)|0); //@line 994 "./src/cpp/unrar/arcread.cpp"
       $282 = ($281|0)==(0); //@line 994 "./src/cpp/unrar/arcread.cpp"
       if ($282) {
        $283 = $17; //@line 995 "./src/cpp/unrar/arcread.cpp"
        $284 = ((($283)) + 8369|0); //@line 995 "./src/cpp/unrar/arcread.cpp"
        HEAP8[$284>>0] = 0; //@line 995 "./src/cpp/unrar/arcread.cpp"
       }
      }
     }
     $285 = $17; //@line 997 "./src/cpp/unrar/arcread.cpp"
     $286 = ((($285)) + 8336|0); //@line 997 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$286>>0] = 1; //@line 997 "./src/cpp/unrar/arcread.cpp"
     $287 = $17; //@line 998 "./src/cpp/unrar/arcread.cpp"
     $288 = ((($287)) + 8332|0); //@line 998 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$288>>2] = 5; //@line 998 "./src/cpp/unrar/arcread.cpp"
     $289 = $17; //@line 999 "./src/cpp/unrar/arcread.cpp"
     $290 = ((($289)) + 8331|0); //@line 999 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$290>>0] = 1; //@line 999 "./src/cpp/unrar/arcread.cpp"
     break L22;
     break;
    }
    case 2:  {
     $cond35 = ($219|0)==(0);
     if (!($cond35)) {
      break L22;
     }
     $291 = $7; //@line 1005 "./src/cpp/unrar/arcread.cpp"
     $23 = $291; //@line 1005 "./src/cpp/unrar/arcread.cpp"
     $292 = $5; //@line 1006 "./src/cpp/unrar/arcread.cpp"
     $293 = (__ZN7RawRead4GetVEv($292)|0); //@line 1006 "./src/cpp/unrar/arcread.cpp"
     $294 = tempRet0; //@line 1006 "./src/cpp/unrar/arcread.cpp"
     $24 = $293; //@line 1006 "./src/cpp/unrar/arcread.cpp"
     $295 = $24; //@line 1007 "./src/cpp/unrar/arcread.cpp"
     $296 = ($295|0)==(0); //@line 1007 "./src/cpp/unrar/arcread.cpp"
     if (!($296)) {
      break L22;
     }
     $297 = $23; //@line 1009 "./src/cpp/unrar/arcread.cpp"
     $298 = ((($297)) + 8288|0); //@line 1009 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$298>>2] = 3; //@line 1009 "./src/cpp/unrar/arcread.cpp"
     $299 = $5; //@line 1010 "./src/cpp/unrar/arcread.cpp"
     $300 = $23; //@line 1010 "./src/cpp/unrar/arcread.cpp"
     $301 = ((($300)) + 8288|0); //@line 1010 "./src/cpp/unrar/arcread.cpp"
     $302 = ((($301)) + 4|0); //@line 1010 "./src/cpp/unrar/arcread.cpp"
     (__ZN7RawRead4GetBEPvj($299,$302,32)|0); //@line 1010 "./src/cpp/unrar/arcread.cpp"
     break L22;
     break;
    }
    case 3:  {
     $cond34 = ($219|0)==(0);
     if (!($cond34)) {
      break L22;
     }
     $303 = $9; //@line 1015 "./src/cpp/unrar/arcread.cpp"
     $304 = $303; //@line 1015 "./src/cpp/unrar/arcread.cpp"
     $305 = HEAP32[$304>>2]|0; //@line 1015 "./src/cpp/unrar/arcread.cpp"
     $306 = (($303) + 4)|0; //@line 1015 "./src/cpp/unrar/arcread.cpp"
     $307 = $306; //@line 1015 "./src/cpp/unrar/arcread.cpp"
     $308 = HEAP32[$307>>2]|0; //@line 1015 "./src/cpp/unrar/arcread.cpp"
     $309 = ($308|0)>(0); //@line 1015 "./src/cpp/unrar/arcread.cpp"
     $310 = ($305>>>0)>=(9); //@line 1015 "./src/cpp/unrar/arcread.cpp"
     $311 = ($308|0)==(0); //@line 1015 "./src/cpp/unrar/arcread.cpp"
     $312 = $311 & $310; //@line 1015 "./src/cpp/unrar/arcread.cpp"
     $313 = $309 | $312; //@line 1015 "./src/cpp/unrar/arcread.cpp"
     if (!($313)) {
      break L22;
     }
     $314 = $5; //@line 1017 "./src/cpp/unrar/arcread.cpp"
     $315 = (__ZN7RawRead4GetVEv($314)|0); //@line 1017 "./src/cpp/unrar/arcread.cpp"
     $316 = tempRet0; //@line 1017 "./src/cpp/unrar/arcread.cpp"
     $317 = $315&255; //@line 1017 "./src/cpp/unrar/arcread.cpp"
     $25 = $317; //@line 1017 "./src/cpp/unrar/arcread.cpp"
     $318 = $25; //@line 1018 "./src/cpp/unrar/arcread.cpp"
     $319 = $318&255; //@line 1018 "./src/cpp/unrar/arcread.cpp"
     $320 = $319 & 1; //@line 1018 "./src/cpp/unrar/arcread.cpp"
     $321 = ($320|0)!=(0); //@line 1018 "./src/cpp/unrar/arcread.cpp"
     $322 = $321&1; //@line 1018 "./src/cpp/unrar/arcread.cpp"
     $26 = $322; //@line 1018 "./src/cpp/unrar/arcread.cpp"
     $323 = $25; //@line 1019 "./src/cpp/unrar/arcread.cpp"
     $324 = $323&255; //@line 1019 "./src/cpp/unrar/arcread.cpp"
     $325 = $324 & 2; //@line 1019 "./src/cpp/unrar/arcread.cpp"
     $326 = ($325|0)!=(0); //@line 1019 "./src/cpp/unrar/arcread.cpp"
     do {
      if ($326) {
       $327 = $26; //@line 1020 "./src/cpp/unrar/arcread.cpp"
       $328 = $327&1; //@line 1020 "./src/cpp/unrar/arcread.cpp"
       if ($328) {
        $329 = $5; //@line 1021 "./src/cpp/unrar/arcread.cpp"
        $330 = (__ZN7RawRead4Get4Ev($329)|0); //@line 1021 "./src/cpp/unrar/arcread.cpp"
        $331 = $16; //@line 1021 "./src/cpp/unrar/arcread.cpp"
        $332 = ((($331)) + 8240|0); //@line 1021 "./src/cpp/unrar/arcread.cpp"
        (__ZN7RarTimeaSEl($332,$330)|0); //@line 1021 "./src/cpp/unrar/arcread.cpp"
        break;
       } else {
        $333 = $16; //@line 1023 "./src/cpp/unrar/arcread.cpp"
        $334 = ((($333)) + 8240|0); //@line 1023 "./src/cpp/unrar/arcread.cpp"
        $335 = $5; //@line 1023 "./src/cpp/unrar/arcread.cpp"
        $336 = (__ZN7RawRead4Get8Ev($335)|0); //@line 1023 "./src/cpp/unrar/arcread.cpp"
        $337 = tempRet0; //@line 1023 "./src/cpp/unrar/arcread.cpp"
        __ZN7RarTime6SetRawEy($334,$336,$337); //@line 1023 "./src/cpp/unrar/arcread.cpp"
        break;
       }
      }
     } while(0);
     $338 = $25; //@line 1024 "./src/cpp/unrar/arcread.cpp"
     $339 = $338&255; //@line 1024 "./src/cpp/unrar/arcread.cpp"
     $340 = $339 & 4; //@line 1024 "./src/cpp/unrar/arcread.cpp"
     $341 = ($340|0)!=(0); //@line 1024 "./src/cpp/unrar/arcread.cpp"
     do {
      if ($341) {
       $342 = $26; //@line 1025 "./src/cpp/unrar/arcread.cpp"
       $343 = $342&1; //@line 1025 "./src/cpp/unrar/arcread.cpp"
       if ($343) {
        $344 = $5; //@line 1026 "./src/cpp/unrar/arcread.cpp"
        $345 = (__ZN7RawRead4Get4Ev($344)|0); //@line 1026 "./src/cpp/unrar/arcread.cpp"
        $346 = $16; //@line 1026 "./src/cpp/unrar/arcread.cpp"
        $347 = ((($346)) + 8248|0); //@line 1026 "./src/cpp/unrar/arcread.cpp"
        (__ZN7RarTimeaSEl($347,$345)|0); //@line 1026 "./src/cpp/unrar/arcread.cpp"
        break;
       } else {
        $348 = $16; //@line 1028 "./src/cpp/unrar/arcread.cpp"
        $349 = ((($348)) + 8248|0); //@line 1028 "./src/cpp/unrar/arcread.cpp"
        $350 = $5; //@line 1028 "./src/cpp/unrar/arcread.cpp"
        $351 = (__ZN7RawRead4Get8Ev($350)|0); //@line 1028 "./src/cpp/unrar/arcread.cpp"
        $352 = tempRet0; //@line 1028 "./src/cpp/unrar/arcread.cpp"
        __ZN7RarTime6SetRawEy($349,$351,$352); //@line 1028 "./src/cpp/unrar/arcread.cpp"
        break;
       }
      }
     } while(0);
     $353 = $25; //@line 1029 "./src/cpp/unrar/arcread.cpp"
     $354 = $353&255; //@line 1029 "./src/cpp/unrar/arcread.cpp"
     $355 = $354 & 8; //@line 1029 "./src/cpp/unrar/arcread.cpp"
     $356 = ($355|0)!=(0); //@line 1029 "./src/cpp/unrar/arcread.cpp"
     if (!($356)) {
      break L22;
     }
     $357 = $26; //@line 1030 "./src/cpp/unrar/arcread.cpp"
     $358 = $357&1; //@line 1030 "./src/cpp/unrar/arcread.cpp"
     if ($358) {
      $359 = $5; //@line 1031 "./src/cpp/unrar/arcread.cpp"
      $360 = (__ZN7RawRead4Get4Ev($359)|0); //@line 1031 "./src/cpp/unrar/arcread.cpp"
      $361 = $16; //@line 1031 "./src/cpp/unrar/arcread.cpp"
      $362 = ((($361)) + 8256|0); //@line 1031 "./src/cpp/unrar/arcread.cpp"
      (__ZN7RarTimeaSEl($362,$360)|0); //@line 1031 "./src/cpp/unrar/arcread.cpp"
      break L22;
     } else {
      $363 = $16; //@line 1033 "./src/cpp/unrar/arcread.cpp"
      $364 = ((($363)) + 8256|0); //@line 1033 "./src/cpp/unrar/arcread.cpp"
      $365 = $5; //@line 1033 "./src/cpp/unrar/arcread.cpp"
      $366 = (__ZN7RawRead4Get8Ev($365)|0); //@line 1033 "./src/cpp/unrar/arcread.cpp"
      $367 = tempRet0; //@line 1033 "./src/cpp/unrar/arcread.cpp"
      __ZN7RarTime6SetRawEy($364,$366,$367); //@line 1033 "./src/cpp/unrar/arcread.cpp"
      break L22;
     }
     break;
    }
    case 4:  {
     $cond33 = ($219|0)==(0);
     if (!($cond33)) {
      break L22;
     }
     $368 = $9; //@line 1037 "./src/cpp/unrar/arcread.cpp"
     $369 = $368; //@line 1037 "./src/cpp/unrar/arcread.cpp"
     $370 = HEAP32[$369>>2]|0; //@line 1037 "./src/cpp/unrar/arcread.cpp"
     $371 = (($368) + 4)|0; //@line 1037 "./src/cpp/unrar/arcread.cpp"
     $372 = $371; //@line 1037 "./src/cpp/unrar/arcread.cpp"
     $373 = HEAP32[$372>>2]|0; //@line 1037 "./src/cpp/unrar/arcread.cpp"
     $374 = ($373|0)>(0); //@line 1037 "./src/cpp/unrar/arcread.cpp"
     $375 = ($370>>>0)>=(1); //@line 1037 "./src/cpp/unrar/arcread.cpp"
     $376 = ($373|0)==(0); //@line 1037 "./src/cpp/unrar/arcread.cpp"
     $377 = $376 & $375; //@line 1037 "./src/cpp/unrar/arcread.cpp"
     $378 = $374 | $377; //@line 1037 "./src/cpp/unrar/arcread.cpp"
     if (!($378)) {
      break L22;
     }
     $379 = $5; //@line 1039 "./src/cpp/unrar/arcread.cpp"
     (__ZN7RawRead4GetVEv($379)|0); //@line 1039 "./src/cpp/unrar/arcread.cpp"
     $380 = tempRet0; //@line 1039 "./src/cpp/unrar/arcread.cpp"
     $381 = $5; //@line 1040 "./src/cpp/unrar/arcread.cpp"
     $382 = (__ZN7RawRead4GetVEv($381)|0); //@line 1040 "./src/cpp/unrar/arcread.cpp"
     $383 = tempRet0; //@line 1040 "./src/cpp/unrar/arcread.cpp"
     $27 = $382; //@line 1040 "./src/cpp/unrar/arcread.cpp"
     $384 = $27; //@line 1041 "./src/cpp/unrar/arcread.cpp"
     $385 = ($384|0)!=(0); //@line 1041 "./src/cpp/unrar/arcread.cpp"
     if (!($385)) {
      break L22;
     }
     $386 = $16; //@line 1043 "./src/cpp/unrar/arcread.cpp"
     $387 = ((($386)) + 8419|0); //@line 1043 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$387>>0] = 1; //@line 1043 "./src/cpp/unrar/arcread.cpp"
     $388 = $27; //@line 1046 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$vararg_buffer>>2] = $388; //@line 1046 "./src/cpp/unrar/arcread.cpp"
     (_swprintf($28,20,820,$vararg_buffer)|0); //@line 1046 "./src/cpp/unrar/arcread.cpp"
     $389 = ((($35)) + 21424|0); //@line 1047 "./src/cpp/unrar/arcread.cpp"
     $390 = ((($389)) + 32|0); //@line 1047 "./src/cpp/unrar/arcread.cpp"
     (__Z8wcsncatzPwPKwj($390,$28,2048)|0); //@line 1047 "./src/cpp/unrar/arcread.cpp"
     break L22;
     break;
    }
    case 5:  {
     $cond32 = ($219|0)==(0);
     if (!($cond32)) {
      break L22;
     }
     $391 = $5; //@line 1053 "./src/cpp/unrar/arcread.cpp"
     $392 = (__ZN7RawRead4GetVEv($391)|0); //@line 1053 "./src/cpp/unrar/arcread.cpp"
     $393 = tempRet0; //@line 1053 "./src/cpp/unrar/arcread.cpp"
     $394 = $16; //@line 1053 "./src/cpp/unrar/arcread.cpp"
     $395 = ((($394)) + 8432|0); //@line 1053 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$395>>2] = $392; //@line 1053 "./src/cpp/unrar/arcread.cpp"
     $396 = $5; //@line 1054 "./src/cpp/unrar/arcread.cpp"
     $397 = (__ZN7RawRead4GetVEv($396)|0); //@line 1054 "./src/cpp/unrar/arcread.cpp"
     $398 = tempRet0; //@line 1054 "./src/cpp/unrar/arcread.cpp"
     $29 = $397; //@line 1054 "./src/cpp/unrar/arcread.cpp"
     $399 = $29; //@line 1055 "./src/cpp/unrar/arcread.cpp"
     $400 = $399 & 1; //@line 1055 "./src/cpp/unrar/arcread.cpp"
     $401 = ($400|0)!=(0); //@line 1055 "./src/cpp/unrar/arcread.cpp"
     $402 = $16; //@line 1055 "./src/cpp/unrar/arcread.cpp"
     $403 = ((($402)) + 16628|0); //@line 1055 "./src/cpp/unrar/arcread.cpp"
     $404 = $401&1; //@line 1055 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$403>>0] = $404; //@line 1055 "./src/cpp/unrar/arcread.cpp"
     $405 = $5; //@line 1056 "./src/cpp/unrar/arcread.cpp"
     $406 = (__ZN7RawRead4GetVEv($405)|0); //@line 1056 "./src/cpp/unrar/arcread.cpp"
     $407 = tempRet0; //@line 1056 "./src/cpp/unrar/arcread.cpp"
     $30 = $406; //@line 1056 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$31>>0] = 0; //@line 1059 "./src/cpp/unrar/arcread.cpp"
     $408 = $30; //@line 1060 "./src/cpp/unrar/arcread.cpp"
     $409 = ($408>>>0)<(8191); //@line 1060 "./src/cpp/unrar/arcread.cpp"
     if ($409) {
      $410 = $5; //@line 1062 "./src/cpp/unrar/arcread.cpp"
      $411 = $30; //@line 1062 "./src/cpp/unrar/arcread.cpp"
      (__ZN7RawRead4GetBEPvj($410,$31,$411)|0); //@line 1062 "./src/cpp/unrar/arcread.cpp"
      $412 = $30; //@line 1063 "./src/cpp/unrar/arcread.cpp"
      $413 = (($31) + ($412)|0); //@line 1063 "./src/cpp/unrar/arcread.cpp"
      HEAP8[$413>>0] = 0; //@line 1063 "./src/cpp/unrar/arcread.cpp"
     }
     $414 = $16; //@line 1068 "./src/cpp/unrar/arcread.cpp"
     $415 = ((($414)) + 8436|0); //@line 1068 "./src/cpp/unrar/arcread.cpp"
     (__Z9UtfToWidePKcPwj($31,$415,2048)|0); //@line 1068 "./src/cpp/unrar/arcread.cpp"
     break L22;
     break;
    }
    case 6:  {
     $cond31 = ($219|0)==(0);
     if (!($cond31)) {
      break L22;
     }
     $416 = $5; //@line 1073 "./src/cpp/unrar/arcread.cpp"
     $417 = (__ZN7RawRead4GetVEv($416)|0); //@line 1073 "./src/cpp/unrar/arcread.cpp"
     $418 = tempRet0; //@line 1073 "./src/cpp/unrar/arcread.cpp"
     $32 = $417; //@line 1073 "./src/cpp/unrar/arcread.cpp"
     $419 = $32; //@line 1074 "./src/cpp/unrar/arcread.cpp"
     $420 = $419 & 4; //@line 1074 "./src/cpp/unrar/arcread.cpp"
     $421 = ($420|0)!=(0); //@line 1074 "./src/cpp/unrar/arcread.cpp"
     $422 = $16; //@line 1074 "./src/cpp/unrar/arcread.cpp"
     $423 = ((($422)) + 16630|0); //@line 1074 "./src/cpp/unrar/arcread.cpp"
     $424 = $421&1; //@line 1074 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$423>>0] = $424; //@line 1074 "./src/cpp/unrar/arcread.cpp"
     $425 = $32; //@line 1075 "./src/cpp/unrar/arcread.cpp"
     $426 = $425 & 8; //@line 1075 "./src/cpp/unrar/arcread.cpp"
     $427 = ($426|0)!=(0); //@line 1075 "./src/cpp/unrar/arcread.cpp"
     $428 = $16; //@line 1075 "./src/cpp/unrar/arcread.cpp"
     $429 = ((($428)) + 16631|0); //@line 1075 "./src/cpp/unrar/arcread.cpp"
     $430 = $427&1; //@line 1075 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$429>>0] = $430; //@line 1075 "./src/cpp/unrar/arcread.cpp"
     $431 = $16; //@line 1076 "./src/cpp/unrar/arcread.cpp"
     $432 = ((($431)) + 16888|0); //@line 1076 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$432>>0] = 0; //@line 1076 "./src/cpp/unrar/arcread.cpp"
     $433 = $16; //@line 1076 "./src/cpp/unrar/arcread.cpp"
     $434 = ((($433)) + 16632|0); //@line 1076 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$434>>0] = 0; //@line 1076 "./src/cpp/unrar/arcread.cpp"
     $435 = $32; //@line 1077 "./src/cpp/unrar/arcread.cpp"
     $436 = $435 & 1; //@line 1077 "./src/cpp/unrar/arcread.cpp"
     $437 = ($436|0)!=(0); //@line 1077 "./src/cpp/unrar/arcread.cpp"
     if ($437) {
      $438 = $5; //@line 1079 "./src/cpp/unrar/arcread.cpp"
      $439 = (__ZN7RawRead4GetVEv($438)|0); //@line 1079 "./src/cpp/unrar/arcread.cpp"
      $440 = tempRet0; //@line 1079 "./src/cpp/unrar/arcread.cpp"
      $33 = $439; //@line 1079 "./src/cpp/unrar/arcread.cpp"
      $441 = $33; //@line 1080 "./src/cpp/unrar/arcread.cpp"
      $442 = ($441>>>0)<(255); //@line 1080 "./src/cpp/unrar/arcread.cpp"
      $443 = $33; //@line 1080 "./src/cpp/unrar/arcread.cpp"
      $444 = $442 ? $443 : 255; //@line 1080 "./src/cpp/unrar/arcread.cpp"
      $33 = $444; //@line 1080 "./src/cpp/unrar/arcread.cpp"
      $445 = $5; //@line 1081 "./src/cpp/unrar/arcread.cpp"
      $446 = $16; //@line 1081 "./src/cpp/unrar/arcread.cpp"
      $447 = ((($446)) + 16632|0); //@line 1081 "./src/cpp/unrar/arcread.cpp"
      $448 = $33; //@line 1081 "./src/cpp/unrar/arcread.cpp"
      (__ZN7RawRead4GetBEPvj($445,$447,$448)|0); //@line 1081 "./src/cpp/unrar/arcread.cpp"
      $449 = $16; //@line 1082 "./src/cpp/unrar/arcread.cpp"
      $450 = ((($449)) + 16632|0); //@line 1082 "./src/cpp/unrar/arcread.cpp"
      $451 = $33; //@line 1082 "./src/cpp/unrar/arcread.cpp"
      $452 = (($450) + ($451)|0); //@line 1082 "./src/cpp/unrar/arcread.cpp"
      HEAP8[$452>>0] = 0; //@line 1082 "./src/cpp/unrar/arcread.cpp"
     }
     $453 = $32; //@line 1084 "./src/cpp/unrar/arcread.cpp"
     $454 = $453 & 2; //@line 1084 "./src/cpp/unrar/arcread.cpp"
     $455 = ($454|0)!=(0); //@line 1084 "./src/cpp/unrar/arcread.cpp"
     if ($455) {
      $456 = $5; //@line 1086 "./src/cpp/unrar/arcread.cpp"
      $457 = (__ZN7RawRead4GetVEv($456)|0); //@line 1086 "./src/cpp/unrar/arcread.cpp"
      $458 = tempRet0; //@line 1086 "./src/cpp/unrar/arcread.cpp"
      $34 = $457; //@line 1086 "./src/cpp/unrar/arcread.cpp"
      $459 = $34; //@line 1087 "./src/cpp/unrar/arcread.cpp"
      $460 = ($459>>>0)<(255); //@line 1087 "./src/cpp/unrar/arcread.cpp"
      $461 = $34; //@line 1087 "./src/cpp/unrar/arcread.cpp"
      $462 = $460 ? $461 : 255; //@line 1087 "./src/cpp/unrar/arcread.cpp"
      $34 = $462; //@line 1087 "./src/cpp/unrar/arcread.cpp"
      $463 = $5; //@line 1088 "./src/cpp/unrar/arcread.cpp"
      $464 = $16; //@line 1088 "./src/cpp/unrar/arcread.cpp"
      $465 = ((($464)) + 16888|0); //@line 1088 "./src/cpp/unrar/arcread.cpp"
      $466 = $34; //@line 1088 "./src/cpp/unrar/arcread.cpp"
      (__ZN7RawRead4GetBEPvj($463,$465,$466)|0); //@line 1088 "./src/cpp/unrar/arcread.cpp"
      $467 = $16; //@line 1089 "./src/cpp/unrar/arcread.cpp"
      $468 = ((($467)) + 16888|0); //@line 1089 "./src/cpp/unrar/arcread.cpp"
      $469 = $34; //@line 1089 "./src/cpp/unrar/arcread.cpp"
      $470 = (($468) + ($469)|0); //@line 1089 "./src/cpp/unrar/arcread.cpp"
      HEAP8[$470>>0] = 0; //@line 1089 "./src/cpp/unrar/arcread.cpp"
     }
     $471 = $16; //@line 1092 "./src/cpp/unrar/arcread.cpp"
     $472 = ((($471)) + 16630|0); //@line 1092 "./src/cpp/unrar/arcread.cpp"
     $473 = HEAP8[$472>>0]|0; //@line 1092 "./src/cpp/unrar/arcread.cpp"
     $474 = $473&1; //@line 1092 "./src/cpp/unrar/arcread.cpp"
     if ($474) {
      $475 = $5; //@line 1093 "./src/cpp/unrar/arcread.cpp"
      $476 = (__ZN7RawRead4GetVEv($475)|0); //@line 1093 "./src/cpp/unrar/arcread.cpp"
      $477 = tempRet0; //@line 1093 "./src/cpp/unrar/arcread.cpp"
      $478 = $16; //@line 1093 "./src/cpp/unrar/arcread.cpp"
      $479 = ((($478)) + 17144|0); //@line 1093 "./src/cpp/unrar/arcread.cpp"
      HEAP32[$479>>2] = $476; //@line 1093 "./src/cpp/unrar/arcread.cpp"
     }
     $480 = $16; //@line 1094 "./src/cpp/unrar/arcread.cpp"
     $481 = ((($480)) + 16631|0); //@line 1094 "./src/cpp/unrar/arcread.cpp"
     $482 = HEAP8[$481>>0]|0; //@line 1094 "./src/cpp/unrar/arcread.cpp"
     $483 = $482&1; //@line 1094 "./src/cpp/unrar/arcread.cpp"
     if ($483) {
      $484 = $5; //@line 1095 "./src/cpp/unrar/arcread.cpp"
      $485 = (__ZN7RawRead4GetVEv($484)|0); //@line 1095 "./src/cpp/unrar/arcread.cpp"
      $486 = tempRet0; //@line 1095 "./src/cpp/unrar/arcread.cpp"
      $487 = $16; //@line 1095 "./src/cpp/unrar/arcread.cpp"
      $488 = ((($487)) + 17148|0); //@line 1095 "./src/cpp/unrar/arcread.cpp"
      HEAP32[$488>>2] = $485; //@line 1095 "./src/cpp/unrar/arcread.cpp"
     }
     $489 = $16; //@line 1104 "./src/cpp/unrar/arcread.cpp"
     $490 = ((($489)) + 16629|0); //@line 1104 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$490>>0] = 1; //@line 1104 "./src/cpp/unrar/arcread.cpp"
     break L22;
     break;
    }
    case 7:  {
     $cond = ($219|0)==(0);
     if (!($cond)) {
      break L22;
     }
     $491 = $7; //@line 1119 "./src/cpp/unrar/arcread.cpp"
     $492 = ((($491)) + 4|0); //@line 1119 "./src/cpp/unrar/arcread.cpp"
     $493 = HEAP32[$492>>2]|0; //@line 1119 "./src/cpp/unrar/arcread.cpp"
     $494 = ($493|0)==(3); //@line 1119 "./src/cpp/unrar/arcread.cpp"
     if ($494) {
      $495 = $5; //@line 1119 "./src/cpp/unrar/arcread.cpp"
      $496 = (__ZN7RawRead4SizeEv($495)|0); //@line 1119 "./src/cpp/unrar/arcread.cpp"
      $497 = $10; //@line 1119 "./src/cpp/unrar/arcread.cpp"
      $498 = (($496) - ($497))|0; //@line 1119 "./src/cpp/unrar/arcread.cpp"
      $499 = ($498|0)==(1); //@line 1119 "./src/cpp/unrar/arcread.cpp"
      if ($499) {
       $500 = $9; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $501 = $500; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $502 = HEAP32[$501>>2]|0; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $503 = (($500) + 4)|0; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $504 = $503; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $505 = HEAP32[$504>>2]|0; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $506 = (_i64Add(($502|0),($505|0),1,0)|0); //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $507 = tempRet0; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $508 = $9; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $509 = $508; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       HEAP32[$509>>2] = $506; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $510 = (($508) + 4)|0; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       $511 = $510; //@line 1120 "./src/cpp/unrar/arcread.cpp"
       HEAP32[$511>>2] = $507; //@line 1120 "./src/cpp/unrar/arcread.cpp"
      }
     }
     $512 = $16; //@line 1122 "./src/cpp/unrar/arcread.cpp"
     $513 = ((($512)) + 8224|0); //@line 1122 "./src/cpp/unrar/arcread.cpp"
     $514 = $9; //@line 1122 "./src/cpp/unrar/arcread.cpp"
     $515 = $514; //@line 1122 "./src/cpp/unrar/arcread.cpp"
     $516 = HEAP32[$515>>2]|0; //@line 1122 "./src/cpp/unrar/arcread.cpp"
     $517 = (($514) + 4)|0; //@line 1122 "./src/cpp/unrar/arcread.cpp"
     $518 = $517; //@line 1122 "./src/cpp/unrar/arcread.cpp"
     $519 = HEAP32[$518>>2]|0; //@line 1122 "./src/cpp/unrar/arcread.cpp"
     __ZN5ArrayIhE5AllocEj($513,$516); //@line 1122 "./src/cpp/unrar/arcread.cpp"
     $520 = $5; //@line 1123 "./src/cpp/unrar/arcread.cpp"
     $521 = $16; //@line 1123 "./src/cpp/unrar/arcread.cpp"
     $522 = ((($521)) + 8224|0); //@line 1123 "./src/cpp/unrar/arcread.cpp"
     $523 = (__ZN5ArrayIhE4AddrEj($522,0)|0); //@line 1123 "./src/cpp/unrar/arcread.cpp"
     $524 = $9; //@line 1123 "./src/cpp/unrar/arcread.cpp"
     $525 = $524; //@line 1123 "./src/cpp/unrar/arcread.cpp"
     $526 = HEAP32[$525>>2]|0; //@line 1123 "./src/cpp/unrar/arcread.cpp"
     $527 = (($524) + 4)|0; //@line 1123 "./src/cpp/unrar/arcread.cpp"
     $528 = $527; //@line 1123 "./src/cpp/unrar/arcread.cpp"
     $529 = HEAP32[$528>>2]|0; //@line 1123 "./src/cpp/unrar/arcread.cpp"
     (__ZN7RawRead4GetBEPvj($520,$523,$526)|0); //@line 1123 "./src/cpp/unrar/arcread.cpp"
     break L22;
     break;
    }
    default: {
     break L22;
    }
    }
   }
  } while(0);
  $530 = $5; //@line 1129 "./src/cpp/unrar/arcread.cpp"
  $531 = $10; //@line 1129 "./src/cpp/unrar/arcread.cpp"
  __ZN7RawRead6SetPosEj($530,$531); //@line 1129 "./src/cpp/unrar/arcread.cpp"
 }
 if ((label|0) == 69) {
  STACKTOP = sp;return; //@line 1131 "./src/cpp/unrar/arcread.cpp"
 }
}
function __ZN7Archive15ConvertNameCaseEPw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 14764|0); //@line 1204 "./src/cpp/unrar/arcread.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 1204 "./src/cpp/unrar/arcread.cpp"
 $7 = ((($6)) + 49804|0); //@line 1204 "./src/cpp/unrar/arcread.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 1204 "./src/cpp/unrar/arcread.cpp"
 $9 = ($8|0)==(1); //@line 1204 "./src/cpp/unrar/arcread.cpp"
 if ($9) {
  $10 = $3; //@line 1205 "./src/cpp/unrar/arcread.cpp"
  (__Z8wcsupperPw($10)|0); //@line 1205 "./src/cpp/unrar/arcread.cpp"
 }
 $11 = ((($4)) + 14764|0); //@line 1206 "./src/cpp/unrar/arcread.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 1206 "./src/cpp/unrar/arcread.cpp"
 $13 = ((($12)) + 49804|0); //@line 1206 "./src/cpp/unrar/arcread.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 1206 "./src/cpp/unrar/arcread.cpp"
 $15 = ($14|0)==(2); //@line 1206 "./src/cpp/unrar/arcread.cpp"
 if (!($15)) {
  STACKTOP = sp;return; //@line 1208 "./src/cpp/unrar/arcread.cpp"
 }
 $16 = $3; //@line 1207 "./src/cpp/unrar/arcread.cpp"
 (__Z8wcslowerPw($16)|0); //@line 1207 "./src/cpp/unrar/arcread.cpp"
 STACKTOP = sp;return; //@line 1208 "./src/cpp/unrar/arcread.cpp"
}
function __ZN7Archive17ConvertFileHeaderEP10FileHeader($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 56856|0); //@line 1285 "./src/cpp/unrar/arcread.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 1285 "./src/cpp/unrar/arcread.cpp"
 $8 = ($7|0)==(2); //@line 1285 "./src/cpp/unrar/arcread.cpp"
 if ($8) {
  $9 = $3; //@line 1285 "./src/cpp/unrar/arcread.cpp"
  $10 = ((($9)) + 25|0); //@line 1285 "./src/cpp/unrar/arcread.cpp"
  $11 = HEAP8[$10>>0]|0; //@line 1285 "./src/cpp/unrar/arcread.cpp"
  $12 = $11&255; //@line 1285 "./src/cpp/unrar/arcread.cpp"
  $13 = ($12|0)<(20); //@line 1285 "./src/cpp/unrar/arcread.cpp"
  if ($13) {
   $14 = $3; //@line 1285 "./src/cpp/unrar/arcread.cpp"
   $15 = ((($14)) + 28|0); //@line 1285 "./src/cpp/unrar/arcread.cpp"
   $16 = HEAP32[$15>>2]|0; //@line 1285 "./src/cpp/unrar/arcread.cpp"
   $17 = $16 & 16; //@line 1285 "./src/cpp/unrar/arcread.cpp"
   $18 = ($17|0)!=(0); //@line 1285 "./src/cpp/unrar/arcread.cpp"
   if ($18) {
    $19 = $3; //@line 1286 "./src/cpp/unrar/arcread.cpp"
    $20 = ((($19)) + 8417|0); //@line 1286 "./src/cpp/unrar/arcread.cpp"
    HEAP8[$20>>0] = 1; //@line 1286 "./src/cpp/unrar/arcread.cpp"
   }
  }
 }
 $21 = $3; //@line 1287 "./src/cpp/unrar/arcread.cpp"
 $22 = ((($21)) + 8428|0); //@line 1287 "./src/cpp/unrar/arcread.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 1287 "./src/cpp/unrar/arcread.cpp"
 $24 = ($23|0)==(2); //@line 1287 "./src/cpp/unrar/arcread.cpp"
 if ($24) {
  $25 = $3; //@line 1288 "./src/cpp/unrar/arcread.cpp"
  $26 = ((($25)) + 8417|0); //@line 1288 "./src/cpp/unrar/arcread.cpp"
  $27 = HEAP8[$26>>0]|0; //@line 1288 "./src/cpp/unrar/arcread.cpp"
  $28 = $27&1; //@line 1288 "./src/cpp/unrar/arcread.cpp"
  $29 = $3;
  $30 = ((($29)) + 28|0);
  $$sink = $28 ? 16 : 32; //@line 1288 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$30>>2] = $$sink;
 }
 $31 = $3; //@line 1298 "./src/cpp/unrar/arcread.cpp"
 $32 = ((($31)) + 32|0); //@line 1298 "./src/cpp/unrar/arcread.cpp"
 $4 = $32; //@line 1298 "./src/cpp/unrar/arcread.cpp"
 while(1) {
  $33 = $4; //@line 1298 "./src/cpp/unrar/arcread.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 1298 "./src/cpp/unrar/arcread.cpp"
  $35 = ($34|0)!=(0); //@line 1298 "./src/cpp/unrar/arcread.cpp"
  if (!($35)) {
   break;
  }
  $36 = $4; //@line 1303 "./src/cpp/unrar/arcread.cpp"
  $37 = HEAP32[$36>>2]|0; //@line 1303 "./src/cpp/unrar/arcread.cpp"
  $38 = ($37|0)==(92); //@line 1303 "./src/cpp/unrar/arcread.cpp"
  if ($38) {
   $39 = ((($5)) + 56856|0); //@line 1303 "./src/cpp/unrar/arcread.cpp"
   $40 = HEAP32[$39>>2]|0; //@line 1303 "./src/cpp/unrar/arcread.cpp"
   $41 = ($40|0)==(3); //@line 1303 "./src/cpp/unrar/arcread.cpp"
   if ($41) {
    $42 = $3; //@line 1303 "./src/cpp/unrar/arcread.cpp"
    $43 = ((($42)) + 8428|0); //@line 1303 "./src/cpp/unrar/arcread.cpp"
    $44 = HEAP32[$43>>2]|0; //@line 1303 "./src/cpp/unrar/arcread.cpp"
    $45 = ($44|0)==(0); //@line 1303 "./src/cpp/unrar/arcread.cpp"
    if ($45) {
     $46 = $4; //@line 1304 "./src/cpp/unrar/arcread.cpp"
     HEAP32[$46>>2] = 95; //@line 1304 "./src/cpp/unrar/arcread.cpp"
    }
   }
  }
  $47 = $4; //@line 1329 "./src/cpp/unrar/arcread.cpp"
  $48 = HEAP32[$47>>2]|0; //@line 1329 "./src/cpp/unrar/arcread.cpp"
  $49 = ($48|0)==(47); //@line 1329 "./src/cpp/unrar/arcread.cpp"
  if ($49) {
   label = 16;
  } else {
   $50 = $4; //@line 1329 "./src/cpp/unrar/arcread.cpp"
   $51 = HEAP32[$50>>2]|0; //@line 1329 "./src/cpp/unrar/arcread.cpp"
   $52 = ($51|0)==(92); //@line 1329 "./src/cpp/unrar/arcread.cpp"
   if ($52) {
    $53 = ((($5)) + 56856|0); //@line 1329 "./src/cpp/unrar/arcread.cpp"
    $54 = HEAP32[$53>>2]|0; //@line 1329 "./src/cpp/unrar/arcread.cpp"
    $55 = ($54|0)!=(3); //@line 1329 "./src/cpp/unrar/arcread.cpp"
    if ($55) {
     label = 16;
    }
   }
  }
  if ((label|0) == 16) {
   label = 0;
   $56 = $4; //@line 1330 "./src/cpp/unrar/arcread.cpp"
   HEAP32[$56>>2] = 47; //@line 1330 "./src/cpp/unrar/arcread.cpp"
  }
  $57 = $4; //@line 1298 "./src/cpp/unrar/arcread.cpp"
  $58 = ((($57)) + 4|0); //@line 1298 "./src/cpp/unrar/arcread.cpp"
  $4 = $58; //@line 1298 "./src/cpp/unrar/arcread.cpp"
 }
 STACKTOP = sp;return; //@line 1332 "./src/cpp/unrar/arcread.cpp"
}
function __ZN7RawRead6GetPosEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0); //@line 34 "./src/cpp/unrar/rawread.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 34 "./src/cpp/unrar/rawread.hpp"
 STACKTOP = sp;return ($4|0); //@line 34 "./src/cpp/unrar/rawread.hpp"
}
function __ZN7RawRead6SetPosEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 35 "./src/cpp/unrar/rawread.hpp"
 $6 = ((($4)) + 24|0); //@line 35 "./src/cpp/unrar/rawread.hpp"
 HEAP32[$6>>2] = $5; //@line 35 "./src/cpp/unrar/rawread.hpp"
 STACKTOP = sp;return; //@line 35 "./src/cpp/unrar/rawread.hpp"
}
function __ZN7RawRead8DataLeftEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0); //@line 33 "./src/cpp/unrar/rawread.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 33 "./src/cpp/unrar/rawread.hpp"
 $5 = ((($2)) + 24|0); //@line 33 "./src/cpp/unrar/rawread.hpp"
 $6 = HEAP32[$5>>2]|0; //@line 33 "./src/cpp/unrar/rawread.hpp"
 $7 = (($4) - ($6))|0; //@line 33 "./src/cpp/unrar/rawread.hpp"
 STACKTOP = sp;return ($7|0); //@line 33 "./src/cpp/unrar/rawread.hpp"
}
function __ZN5ArrayIhE4AddrEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 29 "./src/cpp/unrar/array.hpp"
 $6 = $3; //@line 29 "./src/cpp/unrar/array.hpp"
 $7 = (($5) + ($6)|0); //@line 29 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($7|0); //@line 29 "./src/cpp/unrar/array.hpp"
}
function __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 150 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStoreC2E14UIMESSAGE_CODE($6,$7); //@line 150 "./src/cpp/unrar/ui.hpp"
 $8 = $4; //@line 151 "./src/cpp/unrar/ui.hpp"
 $9 = (__ZN10uiMsgStorelsEPKw($6,$8)|0); //@line 151 "./src/cpp/unrar/ui.hpp"
 $10 = $5; //@line 151 "./src/cpp/unrar/ui.hpp"
 (__ZN10uiMsgStorelsEPKw($9,$10)|0); //@line 151 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStore3MsgEv($6); //@line 152 "./src/cpp/unrar/ui.hpp"
 STACKTOP = sp;return; //@line 153 "./src/cpp/unrar/ui.hpp"
}
function __ZN7Archive11SearchBlockE11HEADER_TYPE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $3;
 $6 = 0; //@line 40 "./src/cpp/unrar/arcread.cpp"
 while(1) {
  $8 = (__ZN7Archive10ReadHeaderEv($7)|0); //@line 41 "./src/cpp/unrar/arcread.cpp"
  $5 = $8; //@line 41 "./src/cpp/unrar/arcread.cpp"
  $9 = ($8|0)!=(0); //@line 41 "./src/cpp/unrar/arcread.cpp"
  if (!($9)) {
   label = 10;
   break;
  }
  $10 = $4; //@line 42 "./src/cpp/unrar/arcread.cpp"
  $11 = ($10|0)==(5); //@line 42 "./src/cpp/unrar/arcread.cpp"
  if (!($11)) {
   $12 = (__ZN7Archive13GetHeaderTypeEv($7)|0); //@line 42 "./src/cpp/unrar/arcread.cpp"
   $13 = ($12|0)!=(5); //@line 42 "./src/cpp/unrar/arcread.cpp"
   if (!($13)) {
    label = 10;
    break;
   }
  }
  $14 = $6; //@line 44 "./src/cpp/unrar/arcread.cpp"
  $15 = (($14) + 1)|0; //@line 44 "./src/cpp/unrar/arcread.cpp"
  $6 = $15; //@line 44 "./src/cpp/unrar/arcread.cpp"
  $16 = $15 & 127; //@line 44 "./src/cpp/unrar/arcread.cpp"
  $17 = ($16|0)==(0); //@line 44 "./src/cpp/unrar/arcread.cpp"
  if ($17) {
   __Z4Waitv(); //@line 45 "./src/cpp/unrar/arcread.cpp"
  }
  $18 = (__ZN7Archive13GetHeaderTypeEv($7)|0); //@line 46 "./src/cpp/unrar/arcread.cpp"
  $19 = $4; //@line 46 "./src/cpp/unrar/arcread.cpp"
  $20 = ($18|0)==($19|0); //@line 46 "./src/cpp/unrar/arcread.cpp"
  if ($20) {
   label = 8;
   break;
  }
  __ZN7Archive10SeekToNextEv($7); //@line 48 "./src/cpp/unrar/arcread.cpp"
 }
 if ((label|0) == 8) {
  $21 = $5; //@line 47 "./src/cpp/unrar/arcread.cpp"
  $2 = $21; //@line 47 "./src/cpp/unrar/arcread.cpp"
  $22 = $2; //@line 51 "./src/cpp/unrar/arcread.cpp"
  STACKTOP = sp;return ($22|0); //@line 51 "./src/cpp/unrar/arcread.cpp"
 }
 else if ((label|0) == 10) {
  $2 = 0; //@line 50 "./src/cpp/unrar/arcread.cpp"
  $22 = $2; //@line 51 "./src/cpp/unrar/arcread.cpp"
  STACKTOP = sp;return ($22|0); //@line 51 "./src/cpp/unrar/arcread.cpp"
 }
 return (0)|0;
}
function __ZN7Archive14SearchSubBlockEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $3;
 $6 = 0; //@line 56 "./src/cpp/unrar/arcread.cpp"
 while(1) {
  $8 = (__ZN7Archive10ReadHeaderEv($7)|0); //@line 57 "./src/cpp/unrar/arcread.cpp"
  $5 = $8; //@line 57 "./src/cpp/unrar/arcread.cpp"
  $9 = ($8|0)!=(0); //@line 57 "./src/cpp/unrar/arcread.cpp"
  if (!($9)) {
   label = 10;
   break;
  }
  $10 = (__ZN7Archive13GetHeaderTypeEv($7)|0); //@line 57 "./src/cpp/unrar/arcread.cpp"
  $11 = ($10|0)!=(5); //@line 57 "./src/cpp/unrar/arcread.cpp"
  if (!($11)) {
   label = 10;
   break;
  }
  $12 = $6; //@line 59 "./src/cpp/unrar/arcread.cpp"
  $13 = (($12) + 1)|0; //@line 59 "./src/cpp/unrar/arcread.cpp"
  $6 = $13; //@line 59 "./src/cpp/unrar/arcread.cpp"
  $14 = $13 & 127; //@line 59 "./src/cpp/unrar/arcread.cpp"
  $15 = ($14|0)==(0); //@line 59 "./src/cpp/unrar/arcread.cpp"
  if ($15) {
   __Z4Waitv(); //@line 60 "./src/cpp/unrar/arcread.cpp"
  }
  $16 = (__ZN7Archive13GetHeaderTypeEv($7)|0); //@line 61 "./src/cpp/unrar/arcread.cpp"
  $17 = ($16|0)==(3); //@line 61 "./src/cpp/unrar/arcread.cpp"
  if ($17) {
   $18 = ((($7)) + 38640|0); //@line 61 "./src/cpp/unrar/arcread.cpp"
   $19 = $4; //@line 61 "./src/cpp/unrar/arcread.cpp"
   $20 = (__ZN10FileHeader7CmpNameEPKw($18,$19)|0); //@line 61 "./src/cpp/unrar/arcread.cpp"
   if ($20) {
    label = 8;
    break;
   }
  }
  __ZN7Archive10SeekToNextEv($7); //@line 63 "./src/cpp/unrar/arcread.cpp"
 }
 if ((label|0) == 8) {
  $21 = $5; //@line 62 "./src/cpp/unrar/arcread.cpp"
  $2 = $21; //@line 62 "./src/cpp/unrar/arcread.cpp"
  $22 = $2; //@line 66 "./src/cpp/unrar/arcread.cpp"
  STACKTOP = sp;return ($22|0); //@line 66 "./src/cpp/unrar/arcread.cpp"
 }
 else if ((label|0) == 10) {
  $2 = 0; //@line 65 "./src/cpp/unrar/arcread.cpp"
  $22 = $2; //@line 66 "./src/cpp/unrar/arcread.cpp"
  STACKTOP = sp;return ($22|0); //@line 66 "./src/cpp/unrar/arcread.cpp"
 }
 return (0)|0;
}
function __ZN7Archive8IsArcDirEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 21424|0); //@line 1214 "./src/cpp/unrar/arcread.cpp"
 $4 = ((($3)) + 8417|0); //@line 1214 "./src/cpp/unrar/arcread.cpp"
 $5 = HEAP8[$4>>0]|0; //@line 1214 "./src/cpp/unrar/arcread.cpp"
 $6 = $5&1; //@line 1214 "./src/cpp/unrar/arcread.cpp"
 STACKTOP = sp;return ($6|0); //@line 1214 "./src/cpp/unrar/arcread.cpp"
}
function __ZN7Archive17ConvertAttributesEv($0) {
 $0 = $0|0;
 var $$sink12 = 0, $$sink13 = 0, $$sink4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[212]|0; //@line 1235 "./src/cpp/unrar/arcread.cpp"
 $4 = ($3|0)==(-1); //@line 1235 "./src/cpp/unrar/arcread.cpp"
 if ($4) {
  $5 = (_umask(18)|0); //@line 1239 "./src/cpp/unrar/arcread.cpp"
  HEAP32[212] = $5; //@line 1239 "./src/cpp/unrar/arcread.cpp"
  $6 = HEAP32[212]|0; //@line 1242 "./src/cpp/unrar/arcread.cpp"
  (_umask($6)|0); //@line 1242 "./src/cpp/unrar/arcread.cpp"
 }
 $7 = ((($2)) + 21424|0); //@line 1245 "./src/cpp/unrar/arcread.cpp"
 $8 = ((($7)) + 8428|0); //@line 1245 "./src/cpp/unrar/arcread.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 1245 "./src/cpp/unrar/arcread.cpp"
 L4: do {
  switch ($9|0) {
  case 0:  {
   $10 = ((($2)) + 21424|0); //@line 1251 "./src/cpp/unrar/arcread.cpp"
   $11 = ((($10)) + 28|0); //@line 1251 "./src/cpp/unrar/arcread.cpp"
   $12 = HEAP32[$11>>2]|0; //@line 1251 "./src/cpp/unrar/arcread.cpp"
   $13 = $12 & 16; //@line 1251 "./src/cpp/unrar/arcread.cpp"
   $14 = ($13|0)!=(0); //@line 1251 "./src/cpp/unrar/arcread.cpp"
   if ($14) {
    $15 = HEAP32[212]|0; //@line 1254 "./src/cpp/unrar/arcread.cpp"
    $16 = $15 ^ -1; //@line 1254 "./src/cpp/unrar/arcread.cpp"
    $17 = 511 & $16; //@line 1254 "./src/cpp/unrar/arcread.cpp"
    $$sink13 = $17;
    break L4;
   } else {
    $18 = ((($2)) + 21424|0); //@line 1257 "./src/cpp/unrar/arcread.cpp"
    $19 = ((($18)) + 28|0); //@line 1257 "./src/cpp/unrar/arcread.cpp"
    $20 = HEAP32[$19>>2]|0; //@line 1257 "./src/cpp/unrar/arcread.cpp"
    $21 = $20 & 1; //@line 1257 "./src/cpp/unrar/arcread.cpp"
    $22 = ($21|0)!=(0); //@line 1257 "./src/cpp/unrar/arcread.cpp"
    $23 = HEAP32[212]|0;
    $24 = $23 ^ -1;
    $$sink4 = $22 ? 292 : 438; //@line 1257 "./src/cpp/unrar/arcread.cpp"
    $25 = $$sink4 & $24;
    $$sink13 = $25;
    break L4;
   }
   break;
  }
  case 1:  {
   STACKTOP = sp;return; //@line 1280 "./src/cpp/unrar/arcread.cpp"
   break;
  }
  default: {
   $26 = ((($2)) + 21424|0); //@line 1273 "./src/cpp/unrar/arcread.cpp"
   $27 = ((($26)) + 8417|0); //@line 1273 "./src/cpp/unrar/arcread.cpp"
   $28 = HEAP8[$27>>0]|0; //@line 1273 "./src/cpp/unrar/arcread.cpp"
   $29 = $28&1; //@line 1273 "./src/cpp/unrar/arcread.cpp"
   $30 = HEAP32[212]|0;
   $31 = $30 ^ -1;
   $$sink12 = $29 ? 16895 : 33206; //@line 1273 "./src/cpp/unrar/arcread.cpp"
   $32 = $$sink12 & $31;
   $$sink13 = $32;
  }
  }
 } while(0);
 $33 = ((($2)) + 21424|0);
 $34 = ((($33)) + 28|0);
 HEAP32[$34>>2] = $$sink13;
 STACKTOP = sp;return; //@line 1280 "./src/cpp/unrar/arcread.cpp"
}
function __ZN7Archive11GetStartPosEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1;
 $4 = ((($3)) + 56872|0); //@line 1337 "./src/cpp/unrar/arcread.cpp"
 $5 = HEAP32[$4>>2]|0; //@line 1337 "./src/cpp/unrar/arcread.cpp"
 $6 = ((($3)) + 21292|0); //@line 1337 "./src/cpp/unrar/arcread.cpp"
 $7 = ((($6)) + 8|0); //@line 1337 "./src/cpp/unrar/arcread.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 1337 "./src/cpp/unrar/arcread.cpp"
 $9 = (($5) + ($8))|0; //@line 1337 "./src/cpp/unrar/arcread.cpp"
 $10 = $2; //@line 1337 "./src/cpp/unrar/arcread.cpp"
 $11 = $10; //@line 1337 "./src/cpp/unrar/arcread.cpp"
 HEAP32[$11>>2] = $9; //@line 1337 "./src/cpp/unrar/arcread.cpp"
 $12 = (($10) + 4)|0; //@line 1337 "./src/cpp/unrar/arcread.cpp"
 $13 = $12; //@line 1337 "./src/cpp/unrar/arcread.cpp"
 HEAP32[$13>>2] = 0; //@line 1337 "./src/cpp/unrar/arcread.cpp"
 $14 = ((($3)) + 56856|0); //@line 1338 "./src/cpp/unrar/arcread.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 1338 "./src/cpp/unrar/arcread.cpp"
 $16 = ($15|0)==(2); //@line 1338 "./src/cpp/unrar/arcread.cpp"
 if ($16) {
  $17 = ((($3)) + 21304|0); //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $18 = ((($17)) + 12|0); //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $19 = HEAP32[$18>>2]|0; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $20 = $2; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $21 = $20; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $22 = HEAP32[$21>>2]|0; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $23 = (($20) + 4)|0; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $24 = $23; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $25 = HEAP32[$24>>2]|0; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $26 = (_i64Add(($22|0),($25|0),($19|0),0)|0); //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $27 = tempRet0; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $28 = $2; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $29 = $28; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$29>>2] = $26; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $30 = (($28) + 4)|0; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $31 = $30; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$31>>2] = $27; //@line 1339 "./src/cpp/unrar/arcread.cpp"
  $52 = $2; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  $53 = $52; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  $54 = HEAP32[$53>>2]|0; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  $55 = (($52) + 4)|0; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  $56 = $55; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  $57 = HEAP32[$56>>2]|0; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  tempRet0 = ($57); //@line 1342 "./src/cpp/unrar/arcread.cpp"
  STACKTOP = sp;return ($54|0); //@line 1342 "./src/cpp/unrar/arcread.cpp"
 } else {
  $32 = ((($3)) + 21368|0); //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $33 = ((($32)) + 12|0); //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $35 = ((($3)) + 21304|0); //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $36 = ((($35)) + 12|0); //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $37 = HEAP32[$36>>2]|0; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $38 = (__ZN7Archive14FullHeaderSizeEj($3,$37)|0); //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $39 = (($34) + ($38))|0; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $40 = $2; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $41 = $40; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $42 = HEAP32[$41>>2]|0; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $43 = (($40) + 4)|0; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $44 = $43; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $45 = HEAP32[$44>>2]|0; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $46 = (_i64Add(($42|0),($45|0),($39|0),0)|0); //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $47 = tempRet0; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $48 = $2; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $49 = $48; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$49>>2] = $46; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $50 = (($48) + 4)|0; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $51 = $50; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  HEAP32[$51>>2] = $47; //@line 1341 "./src/cpp/unrar/arcread.cpp"
  $52 = $2; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  $53 = $52; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  $54 = HEAP32[$53>>2]|0; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  $55 = (($52) + 4)|0; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  $56 = $55; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  $57 = HEAP32[$56>>2]|0; //@line 1342 "./src/cpp/unrar/arcread.cpp"
  tempRet0 = ($57); //@line 1342 "./src/cpp/unrar/arcread.cpp"
  STACKTOP = sp;return ($54|0); //@line 1342 "./src/cpp/unrar/arcread.cpp"
 }
 return (0)|0;
}
function __ZN7Archive11ReadSubDataEP5ArrayIhEP4File($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val10 = 0, $$expand_i1_val12 = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$expand_i1_val8 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 59136|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(59136|0);
 $3 = sp + 59120|0;
 $7 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $11 = $4;
 $12 = ((($11)) + 56876|0); //@line 1349 "./src/cpp/unrar/arcread.cpp"
 $13 = HEAP8[$12>>0]|0; //@line 1349 "./src/cpp/unrar/arcread.cpp"
 $14 = $13&1; //@line 1349 "./src/cpp/unrar/arcread.cpp"
 if ($14) {
  $15 = ((($11)) + 24|0); //@line 1351 "./src/cpp/unrar/arcread.cpp"
  __Z5uiMsgIPwEv14UIMESSAGE_CODET_(27,$15); //@line 1351 "./src/cpp/unrar/arcread.cpp"
  __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,3); //@line 1352 "./src/cpp/unrar/arcread.cpp"
  $$expand_i1_val = 0; //@line 1353 "./src/cpp/unrar/arcread.cpp"
  HEAP8[$3>>0] = $$expand_i1_val; //@line 1353 "./src/cpp/unrar/arcread.cpp"
  $$pre_trunc = HEAP8[$3>>0]|0; //@line 1412 "./src/cpp/unrar/arcread.cpp"
  $235 = $$pre_trunc&1; //@line 1412 "./src/cpp/unrar/arcread.cpp"
  STACKTOP = sp;return ($235|0); //@line 1412 "./src/cpp/unrar/arcread.cpp"
 }
 $16 = ((($11)) + 38640|0); //@line 1355 "./src/cpp/unrar/arcread.cpp"
 $17 = ((($16)) + 26|0); //@line 1355 "./src/cpp/unrar/arcread.cpp"
 $18 = HEAP8[$17>>0]|0; //@line 1355 "./src/cpp/unrar/arcread.cpp"
 $19 = $18&255; //@line 1355 "./src/cpp/unrar/arcread.cpp"
 $20 = ($19|0)>(5); //@line 1355 "./src/cpp/unrar/arcread.cpp"
 if (!($20)) {
  $21 = ((($11)) + 38640|0); //@line 1355 "./src/cpp/unrar/arcread.cpp"
  $22 = ((($21)) + 25|0); //@line 1355 "./src/cpp/unrar/arcread.cpp"
  $23 = HEAP8[$22>>0]|0; //@line 1355 "./src/cpp/unrar/arcread.cpp"
  $24 = $23&255; //@line 1355 "./src/cpp/unrar/arcread.cpp"
  $25 = ((($11)) + 56856|0); //@line 1355 "./src/cpp/unrar/arcread.cpp"
  $26 = HEAP32[$25>>2]|0; //@line 1355 "./src/cpp/unrar/arcread.cpp"
  $27 = ($26|0)==(3); //@line 1355 "./src/cpp/unrar/arcread.cpp"
  $28 = $27 ? 50 : 29; //@line 1355 "./src/cpp/unrar/arcread.cpp"
  $29 = ($24|0)>($28|0); //@line 1355 "./src/cpp/unrar/arcread.cpp"
  if (!($29)) {
   $31 = ((($11)) + 38640|0); //@line 1361 "./src/cpp/unrar/arcread.cpp"
   $32 = ((($31)) + 8264|0); //@line 1361 "./src/cpp/unrar/arcread.cpp"
   $33 = $32; //@line 1361 "./src/cpp/unrar/arcread.cpp"
   $34 = $33; //@line 1361 "./src/cpp/unrar/arcread.cpp"
   $35 = HEAP32[$34>>2]|0; //@line 1361 "./src/cpp/unrar/arcread.cpp"
   $36 = (($33) + 4)|0; //@line 1361 "./src/cpp/unrar/arcread.cpp"
   $37 = $36; //@line 1361 "./src/cpp/unrar/arcread.cpp"
   $38 = HEAP32[$37>>2]|0; //@line 1361 "./src/cpp/unrar/arcread.cpp"
   $39 = ($35|0)==(0); //@line 1361 "./src/cpp/unrar/arcread.cpp"
   $40 = ($38|0)==(0); //@line 1361 "./src/cpp/unrar/arcread.cpp"
   $41 = $39 & $40; //@line 1361 "./src/cpp/unrar/arcread.cpp"
   if ($41) {
    $42 = ((($11)) + 38640|0); //@line 1361 "./src/cpp/unrar/arcread.cpp"
    $43 = ((($42)) + 8329|0); //@line 1361 "./src/cpp/unrar/arcread.cpp"
    $44 = HEAP8[$43>>0]|0; //@line 1361 "./src/cpp/unrar/arcread.cpp"
    $45 = $44&1; //@line 1361 "./src/cpp/unrar/arcread.cpp"
    if (!($45)) {
     $$expand_i1_val4 = 1; //@line 1362 "./src/cpp/unrar/arcread.cpp"
     HEAP8[$3>>0] = $$expand_i1_val4; //@line 1362 "./src/cpp/unrar/arcread.cpp"
     $$pre_trunc = HEAP8[$3>>0]|0; //@line 1412 "./src/cpp/unrar/arcread.cpp"
     $235 = $$pre_trunc&1; //@line 1412 "./src/cpp/unrar/arcread.cpp"
     STACKTOP = sp;return ($235|0); //@line 1412 "./src/cpp/unrar/arcread.cpp"
    }
   }
   $46 = ((($11)) + 14576|0); //@line 1364 "./src/cpp/unrar/arcread.cpp"
   __ZN11ComprDataIO4InitEv($46); //@line 1364 "./src/cpp/unrar/arcread.cpp"
   $47 = ((($11)) + 14576|0); //@line 1365 "./src/cpp/unrar/arcread.cpp"
   __ZN6UnpackC2EP11ComprDataIO($7,$47); //@line 1365 "./src/cpp/unrar/arcread.cpp"
   $48 = ((($11)) + 38640|0); //@line 1366 "./src/cpp/unrar/arcread.cpp"
   $49 = ((($48)) + 8420|0); //@line 1366 "./src/cpp/unrar/arcread.cpp"
   $50 = HEAP32[$49>>2]|0; //@line 1366 "./src/cpp/unrar/arcread.cpp"
   __THREW__ = 0;
   invoke_viii(110,($7|0),($50|0),0); //@line 1366 "./src/cpp/unrar/arcread.cpp"
   $51 = __THREW__; __THREW__ = 0;
   $52 = $51&1;
   L13: do {
    if (!($52)) {
     $53 = $6; //@line 1368 "./src/cpp/unrar/arcread.cpp"
     $54 = ($53|0)==(0|0); //@line 1368 "./src/cpp/unrar/arcread.cpp"
     do {
      if ($54) {
       $55 = ((($11)) + 38640|0); //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $56 = ((($55)) + 8272|0); //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $57 = $56; //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $58 = $57; //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $59 = HEAP32[$58>>2]|0; //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $60 = (($57) + 4)|0; //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $61 = $60; //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $62 = HEAP32[$61>>2]|0; //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $63 = ($62|0)>(0); //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $64 = ($59>>>0)>(16777216); //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $65 = ($62|0)==(0); //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $66 = $65 & $64; //@line 1370 "./src/cpp/unrar/arcread.cpp"
       $67 = $63 | $66; //@line 1370 "./src/cpp/unrar/arcread.cpp"
       if ($67) {
        $68 = ((($11)) + 24|0); //@line 1373 "./src/cpp/unrar/arcread.cpp"
        __THREW__ = 0;
        invoke_vii(101,28,($68|0)); //@line 1373 "./src/cpp/unrar/arcread.cpp"
        $69 = __THREW__; __THREW__ = 0;
        $70 = $69&1;
        if ($70) {
         break L13;
        }
        $$expand_i1_val6 = 0; //@line 1374 "./src/cpp/unrar/arcread.cpp"
        HEAP8[$3>>0] = $$expand_i1_val6; //@line 1374 "./src/cpp/unrar/arcread.cpp"
        $10 = 1;
        break;
       }
       $75 = $5; //@line 1376 "./src/cpp/unrar/arcread.cpp"
       $76 = ($75|0)==(0|0); //@line 1376 "./src/cpp/unrar/arcread.cpp"
       if ($76) {
        $77 = ((($11)) + 14576|0); //@line 1377 "./src/cpp/unrar/arcread.cpp"
        __THREW__ = 0;
        invoke_vii(103,($77|0),1); //@line 1377 "./src/cpp/unrar/arcread.cpp"
        $78 = __THREW__; __THREW__ = 0;
        $79 = $78&1;
        if ($79) {
         break L13;
        } else {
         label = 20;
         break;
        }
       }
       $80 = $5; //@line 1380 "./src/cpp/unrar/arcread.cpp"
       $81 = ((($11)) + 38640|0); //@line 1380 "./src/cpp/unrar/arcread.cpp"
       $82 = ((($81)) + 8272|0); //@line 1380 "./src/cpp/unrar/arcread.cpp"
       $83 = $82; //@line 1380 "./src/cpp/unrar/arcread.cpp"
       $84 = $83; //@line 1380 "./src/cpp/unrar/arcread.cpp"
       $85 = HEAP32[$84>>2]|0; //@line 1380 "./src/cpp/unrar/arcread.cpp"
       $86 = (($83) + 4)|0; //@line 1380 "./src/cpp/unrar/arcread.cpp"
       $87 = $86; //@line 1380 "./src/cpp/unrar/arcread.cpp"
       $88 = HEAP32[$87>>2]|0; //@line 1380 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       invoke_vii(93,($80|0),($85|0)); //@line 1380 "./src/cpp/unrar/arcread.cpp"
       $89 = __THREW__; __THREW__ = 0;
       $90 = $89&1;
       if ($90) {
        break L13;
       }
       $91 = ((($11)) + 14576|0); //@line 1381 "./src/cpp/unrar/arcread.cpp"
       $92 = $5; //@line 1381 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       $93 = (invoke_iii(94,($92|0),0)|0); //@line 1381 "./src/cpp/unrar/arcread.cpp"
       $94 = __THREW__; __THREW__ = 0;
       $95 = $94&1;
       if ($95) {
        break L13;
       }
       $96 = ((($11)) + 38640|0); //@line 1381 "./src/cpp/unrar/arcread.cpp"
       $97 = ((($96)) + 8272|0); //@line 1381 "./src/cpp/unrar/arcread.cpp"
       $98 = $97; //@line 1381 "./src/cpp/unrar/arcread.cpp"
       $99 = $98; //@line 1381 "./src/cpp/unrar/arcread.cpp"
       $100 = HEAP32[$99>>2]|0; //@line 1381 "./src/cpp/unrar/arcread.cpp"
       $101 = (($98) + 4)|0; //@line 1381 "./src/cpp/unrar/arcread.cpp"
       $102 = $101; //@line 1381 "./src/cpp/unrar/arcread.cpp"
       $103 = HEAP32[$102>>2]|0; //@line 1381 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       invoke_viii(170,($91|0),($93|0),($100|0)); //@line 1381 "./src/cpp/unrar/arcread.cpp"
       $104 = __THREW__; __THREW__ = 0;
       $105 = $104&1;
       if ($105) {
        break L13;
       } else {
        label = 20;
       }
      } else {
       label = 20;
      }
     } while(0);
     L26: do {
      if ((label|0) == 20) {
       $106 = ((($11)) + 38640|0); //@line 1384 "./src/cpp/unrar/arcread.cpp"
       $107 = ((($106)) + 8331|0); //@line 1384 "./src/cpp/unrar/arcread.cpp"
       $108 = HEAP8[$107>>0]|0; //@line 1384 "./src/cpp/unrar/arcread.cpp"
       $109 = $108&1; //@line 1384 "./src/cpp/unrar/arcread.cpp"
       do {
        if ($109) {
         $110 = ((($11)) + 14764|0); //@line 1385 "./src/cpp/unrar/arcread.cpp"
         $111 = HEAP32[$110>>2]|0; //@line 1385 "./src/cpp/unrar/arcread.cpp"
         $112 = ((($111)) + 41000|0); //@line 1385 "./src/cpp/unrar/arcread.cpp"
         __THREW__ = 0;
         $113 = (invoke_ii(171,($112|0))|0); //@line 1385 "./src/cpp/unrar/arcread.cpp"
         $114 = __THREW__; __THREW__ = 0;
         $115 = $114&1;
         if ($115) {
          break L13;
         }
         if ($113) {
          $116 = ((($11)) + 14576|0); //@line 1386 "./src/cpp/unrar/arcread.cpp"
          $117 = ((($11)) + 38640|0); //@line 1386 "./src/cpp/unrar/arcread.cpp"
          $118 = ((($117)) + 8332|0); //@line 1386 "./src/cpp/unrar/arcread.cpp"
          $119 = HEAP32[$118>>2]|0; //@line 1386 "./src/cpp/unrar/arcread.cpp"
          $120 = ((($11)) + 14764|0); //@line 1386 "./src/cpp/unrar/arcread.cpp"
          $121 = HEAP32[$120>>2]|0; //@line 1386 "./src/cpp/unrar/arcread.cpp"
          $122 = ((($121)) + 41000|0); //@line 1386 "./src/cpp/unrar/arcread.cpp"
          $123 = ((($11)) + 38640|0); //@line 1387 "./src/cpp/unrar/arcread.cpp"
          $124 = ((($123)) + 8336|0); //@line 1387 "./src/cpp/unrar/arcread.cpp"
          $125 = HEAP8[$124>>0]|0; //@line 1387 "./src/cpp/unrar/arcread.cpp"
          $126 = $125&1; //@line 1387 "./src/cpp/unrar/arcread.cpp"
          $127 = ((($11)) + 38640|0); //@line 1387 "./src/cpp/unrar/arcread.cpp"
          $128 = ((($127)) + 8337|0); //@line 1387 "./src/cpp/unrar/arcread.cpp"
          $129 = $126 ? $128 : 0; //@line 1387 "./src/cpp/unrar/arcread.cpp"
          $130 = ((($11)) + 38640|0); //@line 1387 "./src/cpp/unrar/arcread.cpp"
          $131 = ((($130)) + 8353|0); //@line 1387 "./src/cpp/unrar/arcread.cpp"
          $132 = ((($11)) + 38640|0); //@line 1388 "./src/cpp/unrar/arcread.cpp"
          $133 = ((($132)) + 8412|0); //@line 1388 "./src/cpp/unrar/arcread.cpp"
          $134 = HEAP32[$133>>2]|0; //@line 1388 "./src/cpp/unrar/arcread.cpp"
          $135 = ((($11)) + 38640|0); //@line 1388 "./src/cpp/unrar/arcread.cpp"
          $136 = ((($135)) + 8379|0); //@line 1388 "./src/cpp/unrar/arcread.cpp"
          $137 = ((($11)) + 38640|0); //@line 1388 "./src/cpp/unrar/arcread.cpp"
          $138 = ((($137)) + 8370|0); //@line 1388 "./src/cpp/unrar/arcread.cpp"
          __THREW__ = 0;
          invoke_viiiiiiiii(172,($116|0),0,($119|0),($122|0),($129|0),($131|0),($134|0),($136|0),($138|0)); //@line 1386 "./src/cpp/unrar/arcread.cpp"
          $139 = __THREW__; __THREW__ = 0;
          $140 = $139&1;
          if ($140) {
           break L13;
          } else {
           break;
          }
         } else {
          $$expand_i1_val8 = 0; //@line 1390 "./src/cpp/unrar/arcread.cpp"
          HEAP8[$3>>0] = $$expand_i1_val8; //@line 1390 "./src/cpp/unrar/arcread.cpp"
          $10 = 1;
          break L26;
         }
        }
       } while(0);
       $141 = ((($11)) + 14576|0); //@line 1391 "./src/cpp/unrar/arcread.cpp"
       $142 = ((($141)) + 168|0); //@line 1391 "./src/cpp/unrar/arcread.cpp"
       $143 = ((($11)) + 38640|0); //@line 1391 "./src/cpp/unrar/arcread.cpp"
       $144 = ((($143)) + 8288|0); //@line 1391 "./src/cpp/unrar/arcread.cpp"
       $145 = HEAP32[$144>>2]|0; //@line 1391 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       invoke_viii(108,($142|0),($145|0),1); //@line 1391 "./src/cpp/unrar/arcread.cpp"
       $146 = __THREW__; __THREW__ = 0;
       $147 = $146&1;
       if ($147) {
        break L13;
       }
       $148 = ((($11)) + 14576|0); //@line 1392 "./src/cpp/unrar/arcread.cpp"
       $149 = ((($11)) + 38640|0); //@line 1392 "./src/cpp/unrar/arcread.cpp"
       $150 = ((($149)) + 8264|0); //@line 1392 "./src/cpp/unrar/arcread.cpp"
       $151 = $150; //@line 1392 "./src/cpp/unrar/arcread.cpp"
       $152 = $151; //@line 1392 "./src/cpp/unrar/arcread.cpp"
       $153 = HEAP32[$152>>2]|0; //@line 1392 "./src/cpp/unrar/arcread.cpp"
       $154 = (($151) + 4)|0; //@line 1392 "./src/cpp/unrar/arcread.cpp"
       $155 = $154; //@line 1392 "./src/cpp/unrar/arcread.cpp"
       $156 = HEAP32[$155>>2]|0; //@line 1392 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       invoke_viii(107,($148|0),($153|0),($156|0)); //@line 1392 "./src/cpp/unrar/arcread.cpp"
       $157 = __THREW__; __THREW__ = 0;
       $158 = $157&1;
       if ($158) {
        break L13;
       }
       $159 = ((($11)) + 14576|0); //@line 1393 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       invoke_vii(106,($159|0),0); //@line 1393 "./src/cpp/unrar/arcread.cpp"
       $160 = __THREW__; __THREW__ = 0;
       $161 = $160&1;
       if ($161) {
        break L13;
       }
       $162 = ((($11)) + 14576|0); //@line 1394 "./src/cpp/unrar/arcread.cpp"
       $163 = $6; //@line 1394 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       invoke_viii(105,($162|0),($11|0),($163|0)); //@line 1394 "./src/cpp/unrar/arcread.cpp"
       $164 = __THREW__; __THREW__ = 0;
       $165 = $164&1;
       if ($165) {
        break L13;
       }
       $166 = ((($11)) + 38640|0); //@line 1395 "./src/cpp/unrar/arcread.cpp"
       $167 = ((($166)) + 8329|0); //@line 1395 "./src/cpp/unrar/arcread.cpp"
       $168 = HEAP8[$167>>0]|0; //@line 1395 "./src/cpp/unrar/arcread.cpp"
       $169 = $168&1; //@line 1395 "./src/cpp/unrar/arcread.cpp"
       $170 = ((($11)) + 14576|0); //@line 1395 "./src/cpp/unrar/arcread.cpp"
       $171 = ((($170)) + 81|0); //@line 1395 "./src/cpp/unrar/arcread.cpp"
       $172 = $169&1; //@line 1395 "./src/cpp/unrar/arcread.cpp"
       HEAP8[$171>>0] = $172; //@line 1395 "./src/cpp/unrar/arcread.cpp"
       $173 = ((($11)) + 14576|0); //@line 1396 "./src/cpp/unrar/arcread.cpp"
       $174 = ((($11)) + 38640|0); //@line 1396 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       invoke_viii(173,($173|0),($174|0),(0|0)); //@line 1396 "./src/cpp/unrar/arcread.cpp"
       $175 = __THREW__; __THREW__ = 0;
       $176 = $175&1;
       if ($176) {
        break L13;
       }
       $177 = ((($11)) + 38640|0); //@line 1397 "./src/cpp/unrar/arcread.cpp"
       $178 = ((($177)) + 8272|0); //@line 1397 "./src/cpp/unrar/arcread.cpp"
       $179 = $178; //@line 1397 "./src/cpp/unrar/arcread.cpp"
       $180 = $179; //@line 1397 "./src/cpp/unrar/arcread.cpp"
       $181 = HEAP32[$180>>2]|0; //@line 1397 "./src/cpp/unrar/arcread.cpp"
       $182 = (($179) + 4)|0; //@line 1397 "./src/cpp/unrar/arcread.cpp"
       $183 = $182; //@line 1397 "./src/cpp/unrar/arcread.cpp"
       $184 = HEAP32[$183>>2]|0; //@line 1397 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       invoke_viii(111,($7|0),($181|0),($184|0)); //@line 1397 "./src/cpp/unrar/arcread.cpp"
       $185 = __THREW__; __THREW__ = 0;
       $186 = $185&1;
       if ($186) {
        break L13;
       }
       $187 = ((($11)) + 38640|0); //@line 1398 "./src/cpp/unrar/arcread.cpp"
       $188 = ((($187)) + 26|0); //@line 1398 "./src/cpp/unrar/arcread.cpp"
       $189 = HEAP8[$188>>0]|0; //@line 1398 "./src/cpp/unrar/arcread.cpp"
       $190 = $189&255; //@line 1398 "./src/cpp/unrar/arcread.cpp"
       $191 = ($190|0)==(0); //@line 1398 "./src/cpp/unrar/arcread.cpp"
       if ($191) {
        $192 = ((($11)) + 14576|0); //@line 1399 "./src/cpp/unrar/arcread.cpp"
        $193 = ((($11)) + 38640|0); //@line 1399 "./src/cpp/unrar/arcread.cpp"
        $194 = ((($193)) + 8272|0); //@line 1399 "./src/cpp/unrar/arcread.cpp"
        $195 = $194; //@line 1399 "./src/cpp/unrar/arcread.cpp"
        $196 = $195; //@line 1399 "./src/cpp/unrar/arcread.cpp"
        $197 = HEAP32[$196>>2]|0; //@line 1399 "./src/cpp/unrar/arcread.cpp"
        $198 = (($195) + 4)|0; //@line 1399 "./src/cpp/unrar/arcread.cpp"
        $199 = $198; //@line 1399 "./src/cpp/unrar/arcread.cpp"
        $200 = HEAP32[$199>>2]|0; //@line 1399 "./src/cpp/unrar/arcread.cpp"
        __THREW__ = 0;
        invoke_viii(174,($192|0),($197|0),($200|0)); //@line 1399 "./src/cpp/unrar/arcread.cpp"
        $201 = __THREW__; __THREW__ = 0;
        $202 = $201&1;
        if ($202) {
         break L13;
        }
       } else {
        $203 = ((($11)) + 38640|0); //@line 1401 "./src/cpp/unrar/arcread.cpp"
        $204 = ((($203)) + 25|0); //@line 1401 "./src/cpp/unrar/arcread.cpp"
        $205 = HEAP8[$204>>0]|0; //@line 1401 "./src/cpp/unrar/arcread.cpp"
        $206 = $205&255; //@line 1401 "./src/cpp/unrar/arcread.cpp"
        __THREW__ = 0;
        invoke_viii(112,($7|0),($206|0),0); //@line 1401 "./src/cpp/unrar/arcread.cpp"
        $207 = __THREW__; __THREW__ = 0;
        $208 = $207&1;
        if ($208) {
         break L13;
        }
       }
       $209 = ((($11)) + 14576|0); //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $210 = ((($209)) + 168|0); //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $211 = ((($11)) + 38640|0); //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $212 = ((($211)) + 8288|0); //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $213 = ((($11)) + 38640|0); //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $214 = ((($213)) + 8378|0); //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $215 = HEAP8[$214>>0]|0; //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $216 = $215&1; //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $217 = ((($11)) + 38640|0); //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $218 = ((($217)) + 8379|0); //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $219 = $216 ? $218 : 0; //@line 1403 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       $220 = (invoke_iiii(175,($210|0),($212|0),($219|0))|0); //@line 1403 "./src/cpp/unrar/arcread.cpp"
       $221 = __THREW__; __THREW__ = 0;
       $222 = $221&1;
       if ($222) {
        break L13;
       }
       if ($220) {
        $$expand_i1_val12 = 1; //@line 1411 "./src/cpp/unrar/arcread.cpp"
        HEAP8[$3>>0] = $$expand_i1_val12; //@line 1411 "./src/cpp/unrar/arcread.cpp"
        $10 = 1;
        break;
       }
       $223 = ((($11)) + 24|0); //@line 1405 "./src/cpp/unrar/arcread.cpp"
       $224 = ((($11)) + 38640|0); //@line 1405 "./src/cpp/unrar/arcread.cpp"
       $225 = ((($224)) + 32|0); //@line 1405 "./src/cpp/unrar/arcread.cpp"
       __THREW__ = 0;
       invoke_viii(158,29,($223|0),($225|0)); //@line 1405 "./src/cpp/unrar/arcread.cpp"
       $226 = __THREW__; __THREW__ = 0;
       $227 = $226&1;
       if ($227) {
        break L13;
       }
       __THREW__ = 0;
       invoke_vii(157,(756|0),3); //@line 1406 "./src/cpp/unrar/arcread.cpp"
       $228 = __THREW__; __THREW__ = 0;
       $229 = $228&1;
       if ($229) {
        break L13;
       }
       $230 = $5; //@line 1407 "./src/cpp/unrar/arcread.cpp"
       $231 = ($230|0)!=(0|0); //@line 1407 "./src/cpp/unrar/arcread.cpp"
       if ($231) {
        $232 = $5; //@line 1408 "./src/cpp/unrar/arcread.cpp"
        __THREW__ = 0;
        invoke_vi(176,($232|0)); //@line 1408 "./src/cpp/unrar/arcread.cpp"
        $233 = __THREW__; __THREW__ = 0;
        $234 = $233&1;
        if ($234) {
         break L13;
        }
       }
       $$expand_i1_val10 = 0; //@line 1409 "./src/cpp/unrar/arcread.cpp"
       HEAP8[$3>>0] = $$expand_i1_val10; //@line 1409 "./src/cpp/unrar/arcread.cpp"
       $10 = 1;
      }
     } while(0);
     __ZN6UnpackD2Ev($7); //@line 1412 "./src/cpp/unrar/arcread.cpp"
     $$pre_trunc = HEAP8[$3>>0]|0; //@line 1412 "./src/cpp/unrar/arcread.cpp"
     $235 = $$pre_trunc&1; //@line 1412 "./src/cpp/unrar/arcread.cpp"
     STACKTOP = sp;return ($235|0); //@line 1412 "./src/cpp/unrar/arcread.cpp"
    }
   } while(0);
   $71 = ___cxa_find_matching_catch_2()|0;
   $72 = tempRet0;
   $8 = $71; //@line 1412 "./src/cpp/unrar/arcread.cpp"
   $9 = $72; //@line 1412 "./src/cpp/unrar/arcread.cpp"
   __ZN6UnpackD2Ev($7); //@line 1412 "./src/cpp/unrar/arcread.cpp"
   $73 = $8; //@line 1412 "./src/cpp/unrar/arcread.cpp"
   $74 = $9; //@line 1412 "./src/cpp/unrar/arcread.cpp"
   ___resumeException($73|0);
   // unreachable;
  }
 }
 $30 = ((($11)) + 24|0); //@line 1357 "./src/cpp/unrar/arcread.cpp"
 __Z5uiMsgIPwEv14UIMESSAGE_CODET_(28,$30); //@line 1357 "./src/cpp/unrar/arcread.cpp"
 $$expand_i1_val2 = 0; //@line 1358 "./src/cpp/unrar/arcread.cpp"
 HEAP8[$3>>0] = $$expand_i1_val2; //@line 1358 "./src/cpp/unrar/arcread.cpp"
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 1412 "./src/cpp/unrar/arcread.cpp"
 $235 = $$pre_trunc&1; //@line 1412 "./src/cpp/unrar/arcread.cpp"
 STACKTOP = sp;return ($235|0); //@line 1412 "./src/cpp/unrar/arcread.cpp"
}
function __ZN11ComprDataIO12SetSubHeaderEP10FileHeaderPx($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4; //@line 63 "./src/cpp/unrar/rdwrfn.hpp"
 $8 = ((($6)) + 56|0); //@line 63 "./src/cpp/unrar/rdwrfn.hpp"
 HEAP32[$8>>2] = $7; //@line 63 "./src/cpp/unrar/rdwrfn.hpp"
 $9 = $5; //@line 63 "./src/cpp/unrar/rdwrfn.hpp"
 $10 = ((($6)) + 60|0); //@line 63 "./src/cpp/unrar/rdwrfn.hpp"
 HEAP32[$10>>2] = $9; //@line 63 "./src/cpp/unrar/rdwrfn.hpp"
 STACKTOP = sp;return; //@line 63 "./src/cpp/unrar/rdwrfn.hpp"
}
function __Z10WideToCharPKwPcj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 28|0;
 $7 = sp + 8|0;
 $8 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 HEAP8[$6>>0] = 1; //@line 22 "./src/cpp/unrar/unicode.cpp"
 $10 = $4; //@line 23 "./src/cpp/unrar/unicode.cpp"
 HEAP8[$10>>0] = 0; //@line 23 "./src/cpp/unrar/unicode.cpp"
 $11 = $3; //@line 34 "./src/cpp/unrar/unicode.cpp"
 $12 = $4; //@line 34 "./src/cpp/unrar/unicode.cpp"
 $13 = $5; //@line 34 "./src/cpp/unrar/unicode.cpp"
 $14 = (__ZL13WideToCharMapPKwPcjRb($11,$12,$13,$6)|0); //@line 34 "./src/cpp/unrar/unicode.cpp"
 if (!($14)) {
  ;HEAP32[$7>>2]=0|0;HEAP32[$7+4>>2]=0|0; //@line 37 "./src/cpp/unrar/unicode.cpp"
  $15 = $3; //@line 38 "./src/cpp/unrar/unicode.cpp"
  HEAP32[$8>>2] = $15; //@line 38 "./src/cpp/unrar/unicode.cpp"
  $16 = $4; //@line 39 "./src/cpp/unrar/unicode.cpp"
  $17 = $5; //@line 39 "./src/cpp/unrar/unicode.cpp"
  $18 = (_wcsrtombs($16,$8,$17,$7)|0); //@line 39 "./src/cpp/unrar/unicode.cpp"
  $9 = $18; //@line 39 "./src/cpp/unrar/unicode.cpp"
  $19 = $9; //@line 40 "./src/cpp/unrar/unicode.cpp"
  $20 = ($19|0)==(-1); //@line 40 "./src/cpp/unrar/unicode.cpp"
  if ($20) {
   HEAP8[$6>>0] = 0; //@line 41 "./src/cpp/unrar/unicode.cpp"
  }
  $21 = $9; //@line 42 "./src/cpp/unrar/unicode.cpp"
  $22 = ($21|0)==(0); //@line 42 "./src/cpp/unrar/unicode.cpp"
  if ($22) {
   $23 = $3; //@line 42 "./src/cpp/unrar/unicode.cpp"
   $24 = HEAP32[$23>>2]|0; //@line 42 "./src/cpp/unrar/unicode.cpp"
   $25 = ($24|0)!=(0); //@line 42 "./src/cpp/unrar/unicode.cpp"
   if ($25) {
    HEAP8[$6>>0] = 0; //@line 43 "./src/cpp/unrar/unicode.cpp"
   }
  }
 }
 $26 = $5; //@line 53 "./src/cpp/unrar/unicode.cpp"
 $27 = ($26>>>0)>(0); //@line 53 "./src/cpp/unrar/unicode.cpp"
 if (!($27)) {
  $32 = HEAP8[$6>>0]|0; //@line 63 "./src/cpp/unrar/unicode.cpp"
  $33 = $32&1; //@line 63 "./src/cpp/unrar/unicode.cpp"
  STACKTOP = sp;return ($33|0); //@line 63 "./src/cpp/unrar/unicode.cpp"
 }
 $28 = $4; //@line 54 "./src/cpp/unrar/unicode.cpp"
 $29 = $5; //@line 54 "./src/cpp/unrar/unicode.cpp"
 $30 = (($29) - 1)|0; //@line 54 "./src/cpp/unrar/unicode.cpp"
 $31 = (($28) + ($30)|0); //@line 54 "./src/cpp/unrar/unicode.cpp"
 HEAP8[$31>>0] = 0; //@line 54 "./src/cpp/unrar/unicode.cpp"
 $32 = HEAP8[$6>>0]|0; //@line 63 "./src/cpp/unrar/unicode.cpp"
 $33 = $32&1; //@line 63 "./src/cpp/unrar/unicode.cpp"
 STACKTOP = sp;return ($33|0); //@line 63 "./src/cpp/unrar/unicode.cpp"
}
function __ZL13WideToCharMapPKwPcjRb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $8 = sp + 56|0;
 $15 = sp + 8|0;
 $9 = $0;
 $10 = $1;
 $11 = $2;
 $12 = $3;
 $17 = $9; //@line 120 "./src/cpp/unrar/unicode.cpp"
 $6 = $17;
 $7 = 65534;
 $18 = $6; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
 $19 = $7; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
 $4 = $18;
 $5 = $19;
 $20 = $4; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
 $21 = $5; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
 $22 = (_wcschr($20,$21)|0); //@line 133 "/emscripten/system/include/libcxx/wchar.h"
 $23 = ($22|0)==(0|0); //@line 120 "./src/cpp/unrar/unicode.cpp"
 if ($23) {
  $$expand_i1_val = 0; //@line 121 "./src/cpp/unrar/unicode.cpp"
  HEAP8[$8>>0] = $$expand_i1_val; //@line 121 "./src/cpp/unrar/unicode.cpp"
  $$pre_trunc = HEAP8[$8>>0]|0; //@line 154 "./src/cpp/unrar/unicode.cpp"
  $89 = $$pre_trunc&1; //@line 154 "./src/cpp/unrar/unicode.cpp"
  STACKTOP = sp;return ($89|0); //@line 154 "./src/cpp/unrar/unicode.cpp"
 }
 $24 = $12; //@line 123 "./src/cpp/unrar/unicode.cpp"
 HEAP8[$24>>0] = 1; //@line 123 "./src/cpp/unrar/unicode.cpp"
 $13 = 0; //@line 124 "./src/cpp/unrar/unicode.cpp"
 $14 = 0; //@line 124 "./src/cpp/unrar/unicode.cpp"
 while(1) {
  $25 = $14; //@line 125 "./src/cpp/unrar/unicode.cpp"
  $26 = $11; //@line 125 "./src/cpp/unrar/unicode.cpp"
  $27 = (___ctype_get_mb_cur_max()|0); //@line 125 "./src/cpp/unrar/unicode.cpp"
  $28 = (($26) - ($27))|0; //@line 125 "./src/cpp/unrar/unicode.cpp"
  $29 = ($25>>>0)<($28>>>0); //@line 125 "./src/cpp/unrar/unicode.cpp"
  if (!($29)) {
   break;
  }
  $30 = $9; //@line 127 "./src/cpp/unrar/unicode.cpp"
  $31 = $13; //@line 127 "./src/cpp/unrar/unicode.cpp"
  $32 = (($30) + ($31<<2)|0); //@line 127 "./src/cpp/unrar/unicode.cpp"
  $33 = HEAP32[$32>>2]|0; //@line 127 "./src/cpp/unrar/unicode.cpp"
  $34 = ($33|0)==(0); //@line 127 "./src/cpp/unrar/unicode.cpp"
  if ($34) {
   label = 6;
   break;
  }
  $38 = $9; //@line 132 "./src/cpp/unrar/unicode.cpp"
  $39 = $13; //@line 132 "./src/cpp/unrar/unicode.cpp"
  $40 = (($38) + ($39<<2)|0); //@line 132 "./src/cpp/unrar/unicode.cpp"
  $41 = HEAP32[$40>>2]|0; //@line 132 "./src/cpp/unrar/unicode.cpp"
  $42 = ($41|0)==(65534); //@line 132 "./src/cpp/unrar/unicode.cpp"
  if ($42) {
   $43 = $13; //@line 134 "./src/cpp/unrar/unicode.cpp"
   $44 = (($43) + 1)|0; //@line 134 "./src/cpp/unrar/unicode.cpp"
   $13 = $44; //@line 134 "./src/cpp/unrar/unicode.cpp"
   continue;
  }
  $45 = $9; //@line 139 "./src/cpp/unrar/unicode.cpp"
  $46 = $13; //@line 139 "./src/cpp/unrar/unicode.cpp"
  $47 = (($45) + ($46<<2)|0); //@line 139 "./src/cpp/unrar/unicode.cpp"
  $48 = HEAP32[$47>>2]|0; //@line 139 "./src/cpp/unrar/unicode.cpp"
  $49 = ($48>>>0)>=(57472); //@line 139 "./src/cpp/unrar/unicode.cpp"
  if ($49) {
   $50 = $9; //@line 139 "./src/cpp/unrar/unicode.cpp"
   $51 = $13; //@line 139 "./src/cpp/unrar/unicode.cpp"
   $52 = (($50) + ($51<<2)|0); //@line 139 "./src/cpp/unrar/unicode.cpp"
   $53 = HEAP32[$52>>2]|0; //@line 139 "./src/cpp/unrar/unicode.cpp"
   $54 = ($53>>>0)<(57600); //@line 139 "./src/cpp/unrar/unicode.cpp"
   if ($54) {
    $55 = $9; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $56 = $13; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $57 = (($56) + 1)|0; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $13 = $57; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $58 = (($55) + ($56<<2)|0); //@line 140 "./src/cpp/unrar/unicode.cpp"
    $59 = HEAP32[$58>>2]|0; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $60 = (($59) - 57344)|0; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $61 = $60&255; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $62 = $10; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $63 = $14; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $64 = (($63) + 1)|0; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $14 = $64; //@line 140 "./src/cpp/unrar/unicode.cpp"
    $65 = (($62) + ($63)|0); //@line 140 "./src/cpp/unrar/unicode.cpp"
    HEAP8[$65>>0] = $61; //@line 140 "./src/cpp/unrar/unicode.cpp"
    continue;
   }
  }
  ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0; //@line 144 "./src/cpp/unrar/unicode.cpp"
  $66 = $10; //@line 145 "./src/cpp/unrar/unicode.cpp"
  $67 = $14; //@line 145 "./src/cpp/unrar/unicode.cpp"
  $68 = (($66) + ($67)|0); //@line 145 "./src/cpp/unrar/unicode.cpp"
  $69 = $9; //@line 145 "./src/cpp/unrar/unicode.cpp"
  $70 = $13; //@line 145 "./src/cpp/unrar/unicode.cpp"
  $71 = (($69) + ($70<<2)|0); //@line 145 "./src/cpp/unrar/unicode.cpp"
  $72 = HEAP32[$71>>2]|0; //@line 145 "./src/cpp/unrar/unicode.cpp"
  $73 = (_wcrtomb($68,$72,$15)|0); //@line 145 "./src/cpp/unrar/unicode.cpp"
  $74 = ($73|0)==(-1); //@line 145 "./src/cpp/unrar/unicode.cpp"
  if ($74) {
   $75 = $12; //@line 146 "./src/cpp/unrar/unicode.cpp"
   HEAP8[$75>>0] = 0; //@line 146 "./src/cpp/unrar/unicode.cpp"
  }
  $76 = $13; //@line 147 "./src/cpp/unrar/unicode.cpp"
  $77 = (($76) + 1)|0; //@line 147 "./src/cpp/unrar/unicode.cpp"
  $13 = $77; //@line 147 "./src/cpp/unrar/unicode.cpp"
  ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0; //@line 148 "./src/cpp/unrar/unicode.cpp"
  $78 = $10; //@line 149 "./src/cpp/unrar/unicode.cpp"
  $79 = $14; //@line 149 "./src/cpp/unrar/unicode.cpp"
  $80 = (($78) + ($79)|0); //@line 149 "./src/cpp/unrar/unicode.cpp"
  $81 = (___ctype_get_mb_cur_max()|0); //@line 149 "./src/cpp/unrar/unicode.cpp"
  $82 = (_mbrlen($80,$81,$15)|0); //@line 149 "./src/cpp/unrar/unicode.cpp"
  $16 = $82; //@line 149 "./src/cpp/unrar/unicode.cpp"
  $83 = $16; //@line 150 "./src/cpp/unrar/unicode.cpp"
  $84 = ($83|0)>(1); //@line 150 "./src/cpp/unrar/unicode.cpp"
  $85 = $16; //@line 150 "./src/cpp/unrar/unicode.cpp"
  $86 = $84 ? $85 : 1; //@line 150 "./src/cpp/unrar/unicode.cpp"
  $87 = $14; //@line 150 "./src/cpp/unrar/unicode.cpp"
  $88 = (($87) + ($86))|0; //@line 150 "./src/cpp/unrar/unicode.cpp"
  $14 = $88; //@line 150 "./src/cpp/unrar/unicode.cpp"
 }
 if ((label|0) == 6) {
  $35 = $10; //@line 129 "./src/cpp/unrar/unicode.cpp"
  $36 = $14; //@line 129 "./src/cpp/unrar/unicode.cpp"
  $37 = (($35) + ($36)|0); //@line 129 "./src/cpp/unrar/unicode.cpp"
  HEAP8[$37>>0] = 0; //@line 129 "./src/cpp/unrar/unicode.cpp"
 }
 $$expand_i1_val2 = 1; //@line 153 "./src/cpp/unrar/unicode.cpp"
 HEAP8[$8>>0] = $$expand_i1_val2; //@line 153 "./src/cpp/unrar/unicode.cpp"
 $$pre_trunc = HEAP8[$8>>0]|0; //@line 154 "./src/cpp/unrar/unicode.cpp"
 $89 = $$pre_trunc&1; //@line 154 "./src/cpp/unrar/unicode.cpp"
 STACKTOP = sp;return ($89|0); //@line 154 "./src/cpp/unrar/unicode.cpp"
}
function __Z10CharToWidePKcPwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 28|0;
 $7 = sp + 8|0;
 $8 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 HEAP8[$6>>0] = 1; //@line 69 "./src/cpp/unrar/unicode.cpp"
 $10 = $4; //@line 70 "./src/cpp/unrar/unicode.cpp"
 HEAP32[$10>>2] = 0; //@line 70 "./src/cpp/unrar/unicode.cpp"
 ;HEAP32[$7>>2]=0|0;HEAP32[$7+4>>2]=0|0; //@line 82 "./src/cpp/unrar/unicode.cpp"
 $11 = $3; //@line 83 "./src/cpp/unrar/unicode.cpp"
 HEAP32[$8>>2] = $11; //@line 83 "./src/cpp/unrar/unicode.cpp"
 $12 = $4; //@line 84 "./src/cpp/unrar/unicode.cpp"
 $13 = $5; //@line 84 "./src/cpp/unrar/unicode.cpp"
 $14 = (_mbsrtowcs($12,$8,$13,$7)|0); //@line 84 "./src/cpp/unrar/unicode.cpp"
 $9 = $14; //@line 84 "./src/cpp/unrar/unicode.cpp"
 $15 = $9; //@line 85 "./src/cpp/unrar/unicode.cpp"
 $16 = ($15|0)==(-1); //@line 85 "./src/cpp/unrar/unicode.cpp"
 if ($16) {
  HEAP8[$6>>0] = 0; //@line 86 "./src/cpp/unrar/unicode.cpp"
 }
 $17 = $9; //@line 87 "./src/cpp/unrar/unicode.cpp"
 $18 = ($17|0)==(0); //@line 87 "./src/cpp/unrar/unicode.cpp"
 if ($18) {
  $19 = $3; //@line 87 "./src/cpp/unrar/unicode.cpp"
  $20 = HEAP8[$19>>0]|0; //@line 87 "./src/cpp/unrar/unicode.cpp"
  $21 = $20 << 24 >> 24; //@line 87 "./src/cpp/unrar/unicode.cpp"
  $22 = ($21|0)!=(0); //@line 87 "./src/cpp/unrar/unicode.cpp"
  if ($22) {
   HEAP8[$6>>0] = 0; //@line 88 "./src/cpp/unrar/unicode.cpp"
  }
 }
 $23 = HEAP8[$6>>0]|0; //@line 90 "./src/cpp/unrar/unicode.cpp"
 $24 = $23&1; //@line 90 "./src/cpp/unrar/unicode.cpp"
 $25 = $24&1; //@line 90 "./src/cpp/unrar/unicode.cpp"
 $26 = ($25|0)==(0); //@line 90 "./src/cpp/unrar/unicode.cpp"
 $27 = $5; //@line 90 "./src/cpp/unrar/unicode.cpp"
 $28 = ($27>>>0)>(1); //@line 90 "./src/cpp/unrar/unicode.cpp"
 $or$cond = $26 & $28; //@line 90 "./src/cpp/unrar/unicode.cpp"
 if ($or$cond) {
  $29 = $3; //@line 91 "./src/cpp/unrar/unicode.cpp"
  $30 = $4; //@line 91 "./src/cpp/unrar/unicode.cpp"
  $31 = $5; //@line 91 "./src/cpp/unrar/unicode.cpp"
  __ZL13CharToWideMapPKcPwjRb($29,$30,$31,$6); //@line 91 "./src/cpp/unrar/unicode.cpp"
 }
 $32 = $5; //@line 100 "./src/cpp/unrar/unicode.cpp"
 $33 = ($32>>>0)>(0); //@line 100 "./src/cpp/unrar/unicode.cpp"
 if (!($33)) {
  $38 = HEAP8[$6>>0]|0; //@line 109 "./src/cpp/unrar/unicode.cpp"
  $39 = $38&1; //@line 109 "./src/cpp/unrar/unicode.cpp"
  STACKTOP = sp;return ($39|0); //@line 109 "./src/cpp/unrar/unicode.cpp"
 }
 $34 = $4; //@line 101 "./src/cpp/unrar/unicode.cpp"
 $35 = $5; //@line 101 "./src/cpp/unrar/unicode.cpp"
 $36 = (($35) - 1)|0; //@line 101 "./src/cpp/unrar/unicode.cpp"
 $37 = (($34) + ($36<<2)|0); //@line 101 "./src/cpp/unrar/unicode.cpp"
 HEAP32[$37>>2] = 0; //@line 101 "./src/cpp/unrar/unicode.cpp"
 $38 = HEAP8[$6>>0]|0; //@line 109 "./src/cpp/unrar/unicode.cpp"
 $39 = $38&1; //@line 109 "./src/cpp/unrar/unicode.cpp"
 STACKTOP = sp;return ($39|0); //@line 109 "./src/cpp/unrar/unicode.cpp"
}
function __ZL13CharToWideMapPKcPwjRb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $11 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $13 = $7; //@line 166 "./src/cpp/unrar/unicode.cpp"
 HEAP8[$13>>0] = 0; //@line 166 "./src/cpp/unrar/unicode.cpp"
 $8 = 0; //@line 167 "./src/cpp/unrar/unicode.cpp"
 $9 = 0; //@line 168 "./src/cpp/unrar/unicode.cpp"
 $10 = 0; //@line 168 "./src/cpp/unrar/unicode.cpp"
 while(1) {
  $14 = $10; //@line 169 "./src/cpp/unrar/unicode.cpp"
  $15 = $6; //@line 169 "./src/cpp/unrar/unicode.cpp"
  $16 = ($14>>>0)<($15>>>0); //@line 169 "./src/cpp/unrar/unicode.cpp"
  if (!($16)) {
   label = 11;
   break;
  }
  $17 = $4; //@line 171 "./src/cpp/unrar/unicode.cpp"
  $18 = $9; //@line 171 "./src/cpp/unrar/unicode.cpp"
  $19 = (($17) + ($18)|0); //@line 171 "./src/cpp/unrar/unicode.cpp"
  $20 = HEAP8[$19>>0]|0; //@line 171 "./src/cpp/unrar/unicode.cpp"
  $21 = $20 << 24 >> 24; //@line 171 "./src/cpp/unrar/unicode.cpp"
  $22 = ($21|0)==(0); //@line 171 "./src/cpp/unrar/unicode.cpp"
  if ($22) {
   label = 4;
   break;
  }
  ;HEAP32[$11>>2]=0|0;HEAP32[$11+4>>2]=0|0; //@line 178 "./src/cpp/unrar/unicode.cpp"
  $27 = $5; //@line 179 "./src/cpp/unrar/unicode.cpp"
  $28 = $10; //@line 179 "./src/cpp/unrar/unicode.cpp"
  $29 = (($27) + ($28<<2)|0); //@line 179 "./src/cpp/unrar/unicode.cpp"
  $30 = $4; //@line 179 "./src/cpp/unrar/unicode.cpp"
  $31 = $9; //@line 179 "./src/cpp/unrar/unicode.cpp"
  $32 = (($30) + ($31)|0); //@line 179 "./src/cpp/unrar/unicode.cpp"
  $33 = (___ctype_get_mb_cur_max()|0); //@line 179 "./src/cpp/unrar/unicode.cpp"
  $34 = (_mbrtowc($29,$32,$33,$11)|0); //@line 179 "./src/cpp/unrar/unicode.cpp"
  $35 = ($34|0)==(-1); //@line 179 "./src/cpp/unrar/unicode.cpp"
  if (!($35)) {
   ;HEAP32[$11>>2]=0|0;HEAP32[$11+4>>2]=0|0; //@line 199 "./src/cpp/unrar/unicode.cpp"
   $62 = $4; //@line 200 "./src/cpp/unrar/unicode.cpp"
   $63 = $9; //@line 200 "./src/cpp/unrar/unicode.cpp"
   $64 = (($62) + ($63)|0); //@line 200 "./src/cpp/unrar/unicode.cpp"
   $65 = (___ctype_get_mb_cur_max()|0); //@line 200 "./src/cpp/unrar/unicode.cpp"
   $66 = (_mbrlen($64,$65,$11)|0); //@line 200 "./src/cpp/unrar/unicode.cpp"
   $12 = $66; //@line 200 "./src/cpp/unrar/unicode.cpp"
   $67 = $12; //@line 201 "./src/cpp/unrar/unicode.cpp"
   $68 = ($67|0)>(1); //@line 201 "./src/cpp/unrar/unicode.cpp"
   $69 = $12; //@line 201 "./src/cpp/unrar/unicode.cpp"
   $70 = $68 ? $69 : 1; //@line 201 "./src/cpp/unrar/unicode.cpp"
   $71 = $9; //@line 201 "./src/cpp/unrar/unicode.cpp"
   $72 = (($71) + ($70))|0; //@line 201 "./src/cpp/unrar/unicode.cpp"
   $9 = $72; //@line 201 "./src/cpp/unrar/unicode.cpp"
   $73 = $10; //@line 202 "./src/cpp/unrar/unicode.cpp"
   $74 = (($73) + 1)|0; //@line 202 "./src/cpp/unrar/unicode.cpp"
   $10 = $74; //@line 202 "./src/cpp/unrar/unicode.cpp"
   continue;
  }
  $36 = $4; //@line 183 "./src/cpp/unrar/unicode.cpp"
  $37 = $9; //@line 183 "./src/cpp/unrar/unicode.cpp"
  $38 = (($36) + ($37)|0); //@line 183 "./src/cpp/unrar/unicode.cpp"
  $39 = HEAP8[$38>>0]|0; //@line 183 "./src/cpp/unrar/unicode.cpp"
  $40 = $39&255; //@line 183 "./src/cpp/unrar/unicode.cpp"
  $41 = ($40|0)>=(128); //@line 183 "./src/cpp/unrar/unicode.cpp"
  if (!($41)) {
   label = 11;
   break;
  }
  $42 = $8; //@line 185 "./src/cpp/unrar/unicode.cpp"
  $43 = $42&1; //@line 185 "./src/cpp/unrar/unicode.cpp"
  if (!($43)) {
   $44 = $5; //@line 187 "./src/cpp/unrar/unicode.cpp"
   $45 = $10; //@line 187 "./src/cpp/unrar/unicode.cpp"
   $46 = (($45) + 1)|0; //@line 187 "./src/cpp/unrar/unicode.cpp"
   $10 = $46; //@line 187 "./src/cpp/unrar/unicode.cpp"
   $47 = (($44) + ($45<<2)|0); //@line 187 "./src/cpp/unrar/unicode.cpp"
   HEAP32[$47>>2] = 65534; //@line 187 "./src/cpp/unrar/unicode.cpp"
   $8 = 1; //@line 188 "./src/cpp/unrar/unicode.cpp"
   $48 = $10; //@line 189 "./src/cpp/unrar/unicode.cpp"
   $49 = $6; //@line 189 "./src/cpp/unrar/unicode.cpp"
   $50 = ($48>>>0)>=($49>>>0); //@line 189 "./src/cpp/unrar/unicode.cpp"
   if ($50) {
    label = 11;
    break;
   }
  }
  $51 = $4; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $52 = $9; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $53 = (($52) + 1)|0; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $9 = $53; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $54 = (($51) + ($52)|0); //@line 192 "./src/cpp/unrar/unicode.cpp"
  $55 = HEAP8[$54>>0]|0; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $56 = $55&255; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $57 = (($56) + 57344)|0; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $58 = $5; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $59 = $10; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $60 = (($59) + 1)|0; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $10 = $60; //@line 192 "./src/cpp/unrar/unicode.cpp"
  $61 = (($58) + ($59<<2)|0); //@line 192 "./src/cpp/unrar/unicode.cpp"
  HEAP32[$61>>2] = $57; //@line 192 "./src/cpp/unrar/unicode.cpp"
 }
 if ((label|0) == 4) {
  $23 = $5; //@line 173 "./src/cpp/unrar/unicode.cpp"
  $24 = $10; //@line 173 "./src/cpp/unrar/unicode.cpp"
  $25 = (($23) + ($24<<2)|0); //@line 173 "./src/cpp/unrar/unicode.cpp"
  HEAP32[$25>>2] = 0; //@line 173 "./src/cpp/unrar/unicode.cpp"
  $26 = $7; //@line 174 "./src/cpp/unrar/unicode.cpp"
  HEAP8[$26>>0] = 1; //@line 174 "./src/cpp/unrar/unicode.cpp"
  STACKTOP = sp;return; //@line 205 "./src/cpp/unrar/unicode.cpp"
 }
 else if ((label|0) == 11) {
  STACKTOP = sp;return; //@line 205 "./src/cpp/unrar/unicode.cpp"
 }
}
function __Z9WideToRawPKwPhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 0; //@line 212 "./src/cpp/unrar/unicode.cpp"
 while(1) {
  $7 = $6; //@line 212 "./src/cpp/unrar/unicode.cpp"
  $8 = $5; //@line 212 "./src/cpp/unrar/unicode.cpp"
  $9 = ($7>>>0)<($8>>>0); //@line 212 "./src/cpp/unrar/unicode.cpp"
  if (!($9)) {
   label = 5;
   break;
  }
  $10 = $3; //@line 214 "./src/cpp/unrar/unicode.cpp"
  $11 = HEAP32[$10>>2]|0; //@line 214 "./src/cpp/unrar/unicode.cpp"
  $12 = $11&255; //@line 214 "./src/cpp/unrar/unicode.cpp"
  $13 = $4; //@line 214 "./src/cpp/unrar/unicode.cpp"
  $14 = $6; //@line 214 "./src/cpp/unrar/unicode.cpp"
  $15 = $14<<1; //@line 214 "./src/cpp/unrar/unicode.cpp"
  $16 = (($13) + ($15)|0); //@line 214 "./src/cpp/unrar/unicode.cpp"
  HEAP8[$16>>0] = $12; //@line 214 "./src/cpp/unrar/unicode.cpp"
  $17 = $3; //@line 215 "./src/cpp/unrar/unicode.cpp"
  $18 = HEAP32[$17>>2]|0; //@line 215 "./src/cpp/unrar/unicode.cpp"
  $19 = $18 >> 8; //@line 215 "./src/cpp/unrar/unicode.cpp"
  $20 = $19&255; //@line 215 "./src/cpp/unrar/unicode.cpp"
  $21 = $4; //@line 215 "./src/cpp/unrar/unicode.cpp"
  $22 = $6; //@line 215 "./src/cpp/unrar/unicode.cpp"
  $23 = $22<<1; //@line 215 "./src/cpp/unrar/unicode.cpp"
  $24 = (($23) + 1)|0; //@line 215 "./src/cpp/unrar/unicode.cpp"
  $25 = (($21) + ($24)|0); //@line 215 "./src/cpp/unrar/unicode.cpp"
  HEAP8[$25>>0] = $20; //@line 215 "./src/cpp/unrar/unicode.cpp"
  $26 = $3; //@line 216 "./src/cpp/unrar/unicode.cpp"
  $27 = HEAP32[$26>>2]|0; //@line 216 "./src/cpp/unrar/unicode.cpp"
  $28 = ($27|0)==(0); //@line 216 "./src/cpp/unrar/unicode.cpp"
  if ($28) {
   label = 5;
   break;
  }
  $29 = $6; //@line 212 "./src/cpp/unrar/unicode.cpp"
  $30 = (($29) + 1)|0; //@line 212 "./src/cpp/unrar/unicode.cpp"
  $6 = $30; //@line 212 "./src/cpp/unrar/unicode.cpp"
  $31 = $3; //@line 212 "./src/cpp/unrar/unicode.cpp"
  $32 = ((($31)) + 4|0); //@line 212 "./src/cpp/unrar/unicode.cpp"
  $3 = $32; //@line 212 "./src/cpp/unrar/unicode.cpp"
 }
 if ((label|0) == 5) {
  $33 = $4; //@line 219 "./src/cpp/unrar/unicode.cpp"
  STACKTOP = sp;return ($33|0); //@line 219 "./src/cpp/unrar/unicode.cpp"
 }
 return (0)|0;
}
function __Z9RawToWidePKhPwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 0; //@line 225 "./src/cpp/unrar/unicode.cpp"
 while(1) {
  $7 = $6; //@line 225 "./src/cpp/unrar/unicode.cpp"
  $8 = $5; //@line 225 "./src/cpp/unrar/unicode.cpp"
  $9 = ($7>>>0)<($8>>>0); //@line 225 "./src/cpp/unrar/unicode.cpp"
  if (!($9)) {
   label = 5;
   break;
  }
  $10 = $3; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $11 = $6; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $12 = $11<<1; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $13 = (($10) + ($12)|0); //@line 226 "./src/cpp/unrar/unicode.cpp"
  $14 = HEAP8[$13>>0]|0; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $15 = $14&255; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $16 = $3; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $17 = $6; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $18 = $17<<1; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $19 = (($18) + 1)|0; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $20 = (($16) + ($19)|0); //@line 226 "./src/cpp/unrar/unicode.cpp"
  $21 = HEAP8[$20>>0]|0; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $22 = $21&255; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $23 = $22 << 8; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $24 = (($15) + ($23))|0; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $25 = $4; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $26 = $6; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $27 = (($25) + ($26<<2)|0); //@line 226 "./src/cpp/unrar/unicode.cpp"
  HEAP32[$27>>2] = $24; //@line 226 "./src/cpp/unrar/unicode.cpp"
  $28 = ($24|0)==(0); //@line 226 "./src/cpp/unrar/unicode.cpp"
  if ($28) {
   label = 5;
   break;
  }
  $29 = $6; //@line 225 "./src/cpp/unrar/unicode.cpp"
  $30 = (($29) + 1)|0; //@line 225 "./src/cpp/unrar/unicode.cpp"
  $6 = $30; //@line 225 "./src/cpp/unrar/unicode.cpp"
 }
 if ((label|0) == 5) {
  $31 = $4; //@line 228 "./src/cpp/unrar/unicode.cpp"
  STACKTOP = sp;return ($31|0); //@line 228 "./src/cpp/unrar/unicode.cpp"
 }
 return (0)|0;
}
function __Z9WideToUtfPKwPcj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $5; //@line 234 "./src/cpp/unrar/unicode.cpp"
 $6 = $8; //@line 234 "./src/cpp/unrar/unicode.cpp"
 $9 = $6; //@line 235 "./src/cpp/unrar/unicode.cpp"
 $10 = (($9) + -1)|0; //@line 235 "./src/cpp/unrar/unicode.cpp"
 $6 = $10; //@line 235 "./src/cpp/unrar/unicode.cpp"
 while(1) {
  $11 = $3; //@line 236 "./src/cpp/unrar/unicode.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 236 "./src/cpp/unrar/unicode.cpp"
  $13 = ($12|0)!=(0); //@line 236 "./src/cpp/unrar/unicode.cpp"
  if (!($13)) {
   label = 19;
   break;
  }
  $14 = $6; //@line 236 "./src/cpp/unrar/unicode.cpp"
  $15 = (($14) + -1)|0; //@line 236 "./src/cpp/unrar/unicode.cpp"
  $6 = $15; //@line 236 "./src/cpp/unrar/unicode.cpp"
  $16 = ($15|0)>=(0); //@line 236 "./src/cpp/unrar/unicode.cpp"
  if (!($16)) {
   label = 19;
   break;
  }
  $17 = $3; //@line 238 "./src/cpp/unrar/unicode.cpp"
  $18 = ((($17)) + 4|0); //@line 238 "./src/cpp/unrar/unicode.cpp"
  $3 = $18; //@line 238 "./src/cpp/unrar/unicode.cpp"
  $19 = HEAP32[$17>>2]|0; //@line 238 "./src/cpp/unrar/unicode.cpp"
  $7 = $19; //@line 238 "./src/cpp/unrar/unicode.cpp"
  $20 = $7; //@line 239 "./src/cpp/unrar/unicode.cpp"
  $21 = ($20>>>0)<(128); //@line 239 "./src/cpp/unrar/unicode.cpp"
  $22 = $7;
  if ($21) {
   $23 = $22&255; //@line 240 "./src/cpp/unrar/unicode.cpp"
   $24 = $4; //@line 240 "./src/cpp/unrar/unicode.cpp"
   $25 = ((($24)) + 1|0); //@line 240 "./src/cpp/unrar/unicode.cpp"
   $4 = $25; //@line 240 "./src/cpp/unrar/unicode.cpp"
   HEAP8[$24>>0] = $23; //@line 240 "./src/cpp/unrar/unicode.cpp"
   continue;
  }
  $26 = ($22>>>0)<(2048); //@line 242 "./src/cpp/unrar/unicode.cpp"
  if ($26) {
   $27 = $6; //@line 242 "./src/cpp/unrar/unicode.cpp"
   $28 = (($27) + -1)|0; //@line 242 "./src/cpp/unrar/unicode.cpp"
   $6 = $28; //@line 242 "./src/cpp/unrar/unicode.cpp"
   $29 = ($28|0)>=(0); //@line 242 "./src/cpp/unrar/unicode.cpp"
   if ($29) {
    $30 = $7; //@line 244 "./src/cpp/unrar/unicode.cpp"
    $31 = $30 >>> 6; //@line 244 "./src/cpp/unrar/unicode.cpp"
    $32 = 192 | $31; //@line 244 "./src/cpp/unrar/unicode.cpp"
    $33 = $32&255; //@line 244 "./src/cpp/unrar/unicode.cpp"
    $34 = $4; //@line 244 "./src/cpp/unrar/unicode.cpp"
    $35 = ((($34)) + 1|0); //@line 244 "./src/cpp/unrar/unicode.cpp"
    $4 = $35; //@line 244 "./src/cpp/unrar/unicode.cpp"
    HEAP8[$34>>0] = $33; //@line 244 "./src/cpp/unrar/unicode.cpp"
    $36 = $7; //@line 245 "./src/cpp/unrar/unicode.cpp"
    $37 = $36 & 63; //@line 245 "./src/cpp/unrar/unicode.cpp"
    $38 = 128 | $37; //@line 245 "./src/cpp/unrar/unicode.cpp"
    $39 = $38&255; //@line 245 "./src/cpp/unrar/unicode.cpp"
    $40 = $4; //@line 245 "./src/cpp/unrar/unicode.cpp"
    $41 = ((($40)) + 1|0); //@line 245 "./src/cpp/unrar/unicode.cpp"
    $4 = $41; //@line 245 "./src/cpp/unrar/unicode.cpp"
    HEAP8[$40>>0] = $39; //@line 245 "./src/cpp/unrar/unicode.cpp"
    continue;
   }
  }
  $42 = $7; //@line 249 "./src/cpp/unrar/unicode.cpp"
  $43 = ($42>>>0)>=(55296); //@line 249 "./src/cpp/unrar/unicode.cpp"
  $44 = $7; //@line 249 "./src/cpp/unrar/unicode.cpp"
  $45 = ($44>>>0)<=(56319); //@line 249 "./src/cpp/unrar/unicode.cpp"
  $or$cond = $43 & $45; //@line 249 "./src/cpp/unrar/unicode.cpp"
  if ($or$cond) {
   $46 = $3; //@line 249 "./src/cpp/unrar/unicode.cpp"
   $47 = HEAP32[$46>>2]|0; //@line 249 "./src/cpp/unrar/unicode.cpp"
   $48 = ($47|0)>=(56320); //@line 249 "./src/cpp/unrar/unicode.cpp"
   if ($48) {
    $49 = $3; //@line 249 "./src/cpp/unrar/unicode.cpp"
    $50 = HEAP32[$49>>2]|0; //@line 249 "./src/cpp/unrar/unicode.cpp"
    $51 = ($50|0)<=(57343); //@line 249 "./src/cpp/unrar/unicode.cpp"
    if ($51) {
     $52 = $7; //@line 251 "./src/cpp/unrar/unicode.cpp"
     $53 = (($52) - 55296)|0; //@line 251 "./src/cpp/unrar/unicode.cpp"
     $54 = $53 << 10; //@line 251 "./src/cpp/unrar/unicode.cpp"
     $55 = $3; //@line 251 "./src/cpp/unrar/unicode.cpp"
     $56 = HEAP32[$55>>2]|0; //@line 251 "./src/cpp/unrar/unicode.cpp"
     $57 = (($56) - 56320)|0; //@line 251 "./src/cpp/unrar/unicode.cpp"
     $58 = (($54) + ($57))|0; //@line 251 "./src/cpp/unrar/unicode.cpp"
     $59 = (($58) + 65536)|0; //@line 251 "./src/cpp/unrar/unicode.cpp"
     $7 = $59; //@line 251 "./src/cpp/unrar/unicode.cpp"
     $60 = $3; //@line 252 "./src/cpp/unrar/unicode.cpp"
     $61 = ((($60)) + 4|0); //@line 252 "./src/cpp/unrar/unicode.cpp"
     $3 = $61; //@line 252 "./src/cpp/unrar/unicode.cpp"
    }
   }
  }
  $62 = $7; //@line 254 "./src/cpp/unrar/unicode.cpp"
  $63 = ($62>>>0)<(65536); //@line 254 "./src/cpp/unrar/unicode.cpp"
  if ($63) {
   $64 = $6; //@line 254 "./src/cpp/unrar/unicode.cpp"
   $65 = (($64) - 2)|0; //@line 254 "./src/cpp/unrar/unicode.cpp"
   $6 = $65; //@line 254 "./src/cpp/unrar/unicode.cpp"
   $66 = ($65|0)>=(0); //@line 254 "./src/cpp/unrar/unicode.cpp"
   if ($66) {
    $67 = $7; //@line 256 "./src/cpp/unrar/unicode.cpp"
    $68 = $67 >>> 12; //@line 256 "./src/cpp/unrar/unicode.cpp"
    $69 = 224 | $68; //@line 256 "./src/cpp/unrar/unicode.cpp"
    $70 = $69&255; //@line 256 "./src/cpp/unrar/unicode.cpp"
    $71 = $4; //@line 256 "./src/cpp/unrar/unicode.cpp"
    $72 = ((($71)) + 1|0); //@line 256 "./src/cpp/unrar/unicode.cpp"
    $4 = $72; //@line 256 "./src/cpp/unrar/unicode.cpp"
    HEAP8[$71>>0] = $70; //@line 256 "./src/cpp/unrar/unicode.cpp"
    $73 = $7; //@line 257 "./src/cpp/unrar/unicode.cpp"
    $74 = $73 >>> 6; //@line 257 "./src/cpp/unrar/unicode.cpp"
    $75 = $74 & 63; //@line 257 "./src/cpp/unrar/unicode.cpp"
    $76 = 128 | $75; //@line 257 "./src/cpp/unrar/unicode.cpp"
    $77 = $76&255; //@line 257 "./src/cpp/unrar/unicode.cpp"
    $78 = $4; //@line 257 "./src/cpp/unrar/unicode.cpp"
    $79 = ((($78)) + 1|0); //@line 257 "./src/cpp/unrar/unicode.cpp"
    $4 = $79; //@line 257 "./src/cpp/unrar/unicode.cpp"
    HEAP8[$78>>0] = $77; //@line 257 "./src/cpp/unrar/unicode.cpp"
    $80 = $7; //@line 258 "./src/cpp/unrar/unicode.cpp"
    $81 = $80 & 63; //@line 258 "./src/cpp/unrar/unicode.cpp"
    $82 = 128 | $81; //@line 258 "./src/cpp/unrar/unicode.cpp"
    $83 = $82&255; //@line 258 "./src/cpp/unrar/unicode.cpp"
    $84 = $4; //@line 258 "./src/cpp/unrar/unicode.cpp"
    $85 = ((($84)) + 1|0); //@line 258 "./src/cpp/unrar/unicode.cpp"
    $4 = $85; //@line 258 "./src/cpp/unrar/unicode.cpp"
    HEAP8[$84>>0] = $83; //@line 258 "./src/cpp/unrar/unicode.cpp"
    continue;
   }
  }
  $86 = $7; //@line 261 "./src/cpp/unrar/unicode.cpp"
  $87 = ($86>>>0)<(2097152); //@line 261 "./src/cpp/unrar/unicode.cpp"
  if (!($87)) {
   continue;
  }
  $88 = $6; //@line 261 "./src/cpp/unrar/unicode.cpp"
  $89 = (($88) - 3)|0; //@line 261 "./src/cpp/unrar/unicode.cpp"
  $6 = $89; //@line 261 "./src/cpp/unrar/unicode.cpp"
  $90 = ($89|0)>=(0); //@line 261 "./src/cpp/unrar/unicode.cpp"
  if (!($90)) {
   continue;
  }
  $91 = $7; //@line 263 "./src/cpp/unrar/unicode.cpp"
  $92 = $91 >>> 18; //@line 263 "./src/cpp/unrar/unicode.cpp"
  $93 = 240 | $92; //@line 263 "./src/cpp/unrar/unicode.cpp"
  $94 = $93&255; //@line 263 "./src/cpp/unrar/unicode.cpp"
  $95 = $4; //@line 263 "./src/cpp/unrar/unicode.cpp"
  $96 = ((($95)) + 1|0); //@line 263 "./src/cpp/unrar/unicode.cpp"
  $4 = $96; //@line 263 "./src/cpp/unrar/unicode.cpp"
  HEAP8[$95>>0] = $94; //@line 263 "./src/cpp/unrar/unicode.cpp"
  $97 = $7; //@line 264 "./src/cpp/unrar/unicode.cpp"
  $98 = $97 >>> 12; //@line 264 "./src/cpp/unrar/unicode.cpp"
  $99 = $98 & 63; //@line 264 "./src/cpp/unrar/unicode.cpp"
  $100 = 128 | $99; //@line 264 "./src/cpp/unrar/unicode.cpp"
  $101 = $100&255; //@line 264 "./src/cpp/unrar/unicode.cpp"
  $102 = $4; //@line 264 "./src/cpp/unrar/unicode.cpp"
  $103 = ((($102)) + 1|0); //@line 264 "./src/cpp/unrar/unicode.cpp"
  $4 = $103; //@line 264 "./src/cpp/unrar/unicode.cpp"
  HEAP8[$102>>0] = $101; //@line 264 "./src/cpp/unrar/unicode.cpp"
  $104 = $7; //@line 265 "./src/cpp/unrar/unicode.cpp"
  $105 = $104 >>> 6; //@line 265 "./src/cpp/unrar/unicode.cpp"
  $106 = $105 & 63; //@line 265 "./src/cpp/unrar/unicode.cpp"
  $107 = 128 | $106; //@line 265 "./src/cpp/unrar/unicode.cpp"
  $108 = $107&255; //@line 265 "./src/cpp/unrar/unicode.cpp"
  $109 = $4; //@line 265 "./src/cpp/unrar/unicode.cpp"
  $110 = ((($109)) + 1|0); //@line 265 "./src/cpp/unrar/unicode.cpp"
  $4 = $110; //@line 265 "./src/cpp/unrar/unicode.cpp"
  HEAP8[$109>>0] = $108; //@line 265 "./src/cpp/unrar/unicode.cpp"
  $111 = $7; //@line 266 "./src/cpp/unrar/unicode.cpp"
  $112 = $111 & 63; //@line 266 "./src/cpp/unrar/unicode.cpp"
  $113 = 128 | $112; //@line 266 "./src/cpp/unrar/unicode.cpp"
  $114 = $113&255; //@line 266 "./src/cpp/unrar/unicode.cpp"
  $115 = $4; //@line 266 "./src/cpp/unrar/unicode.cpp"
  $116 = ((($115)) + 1|0); //@line 266 "./src/cpp/unrar/unicode.cpp"
  $4 = $116; //@line 266 "./src/cpp/unrar/unicode.cpp"
  HEAP8[$115>>0] = $114; //@line 266 "./src/cpp/unrar/unicode.cpp"
 }
 if ((label|0) == 19) {
  $117 = $4; //@line 270 "./src/cpp/unrar/unicode.cpp"
  HEAP8[$117>>0] = 0; //@line 270 "./src/cpp/unrar/unicode.cpp"
  STACKTOP = sp;return; //@line 271 "./src/cpp/unrar/unicode.cpp"
 }
}
function __Z9UtfToWidePKcPwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 1; //@line 304 "./src/cpp/unrar/unicode.cpp"
 $10 = $5; //@line 305 "./src/cpp/unrar/unicode.cpp"
 $7 = $10; //@line 305 "./src/cpp/unrar/unicode.cpp"
 $11 = $7; //@line 306 "./src/cpp/unrar/unicode.cpp"
 $12 = (($11) + -1)|0; //@line 306 "./src/cpp/unrar/unicode.cpp"
 $7 = $12; //@line 306 "./src/cpp/unrar/unicode.cpp"
 L1: while(1) {
  $13 = $3; //@line 307 "./src/cpp/unrar/unicode.cpp"
  $14 = HEAP8[$13>>0]|0; //@line 307 "./src/cpp/unrar/unicode.cpp"
  $15 = $14 << 24 >> 24; //@line 307 "./src/cpp/unrar/unicode.cpp"
  $16 = ($15|0)!=(0); //@line 307 "./src/cpp/unrar/unicode.cpp"
  if (!($16)) {
   break;
  }
  $17 = $3; //@line 309 "./src/cpp/unrar/unicode.cpp"
  $18 = ((($17)) + 1|0); //@line 309 "./src/cpp/unrar/unicode.cpp"
  $3 = $18; //@line 309 "./src/cpp/unrar/unicode.cpp"
  $19 = HEAP8[$17>>0]|0; //@line 309 "./src/cpp/unrar/unicode.cpp"
  $20 = $19&255; //@line 309 "./src/cpp/unrar/unicode.cpp"
  $8 = $20; //@line 309 "./src/cpp/unrar/unicode.cpp"
  $21 = $8; //@line 310 "./src/cpp/unrar/unicode.cpp"
  $22 = ($21>>>0)<(128); //@line 310 "./src/cpp/unrar/unicode.cpp"
  $23 = $8;
  do {
   if ($22) {
    $9 = $23; //@line 311 "./src/cpp/unrar/unicode.cpp"
   } else {
    $24 = $23 >>> 5; //@line 313 "./src/cpp/unrar/unicode.cpp"
    $25 = ($24|0)==(6); //@line 313 "./src/cpp/unrar/unicode.cpp"
    if ($25) {
     $26 = $3; //@line 315 "./src/cpp/unrar/unicode.cpp"
     $27 = HEAP8[$26>>0]|0; //@line 315 "./src/cpp/unrar/unicode.cpp"
     $28 = $27 << 24 >> 24; //@line 315 "./src/cpp/unrar/unicode.cpp"
     $29 = $28 & 192; //@line 315 "./src/cpp/unrar/unicode.cpp"
     $30 = ($29|0)!=(128); //@line 315 "./src/cpp/unrar/unicode.cpp"
     if ($30) {
      label = 7;
      break L1;
     }
     $31 = $8; //@line 320 "./src/cpp/unrar/unicode.cpp"
     $32 = $31 & 31; //@line 320 "./src/cpp/unrar/unicode.cpp"
     $33 = $32 << 6; //@line 320 "./src/cpp/unrar/unicode.cpp"
     $34 = $3; //@line 320 "./src/cpp/unrar/unicode.cpp"
     $35 = HEAP8[$34>>0]|0; //@line 320 "./src/cpp/unrar/unicode.cpp"
     $36 = $35 << 24 >> 24; //@line 320 "./src/cpp/unrar/unicode.cpp"
     $37 = $36 & 63; //@line 320 "./src/cpp/unrar/unicode.cpp"
     $38 = $33 | $37; //@line 320 "./src/cpp/unrar/unicode.cpp"
     $9 = $38; //@line 320 "./src/cpp/unrar/unicode.cpp"
     $39 = $3; //@line 321 "./src/cpp/unrar/unicode.cpp"
     $40 = ((($39)) + 1|0); //@line 321 "./src/cpp/unrar/unicode.cpp"
     $3 = $40; //@line 321 "./src/cpp/unrar/unicode.cpp"
     break;
    }
    $41 = $8; //@line 324 "./src/cpp/unrar/unicode.cpp"
    $42 = $41 >>> 4; //@line 324 "./src/cpp/unrar/unicode.cpp"
    $43 = ($42|0)==(14); //@line 324 "./src/cpp/unrar/unicode.cpp"
    if ($43) {
     $44 = $3; //@line 326 "./src/cpp/unrar/unicode.cpp"
     $45 = HEAP8[$44>>0]|0; //@line 326 "./src/cpp/unrar/unicode.cpp"
     $46 = $45 << 24 >> 24; //@line 326 "./src/cpp/unrar/unicode.cpp"
     $47 = $46 & 192; //@line 326 "./src/cpp/unrar/unicode.cpp"
     $48 = ($47|0)!=(128); //@line 326 "./src/cpp/unrar/unicode.cpp"
     if ($48) {
      label = 12;
      break L1;
     }
     $49 = $3; //@line 326 "./src/cpp/unrar/unicode.cpp"
     $50 = ((($49)) + 1|0); //@line 326 "./src/cpp/unrar/unicode.cpp"
     $51 = HEAP8[$50>>0]|0; //@line 326 "./src/cpp/unrar/unicode.cpp"
     $52 = $51 << 24 >> 24; //@line 326 "./src/cpp/unrar/unicode.cpp"
     $53 = $52 & 192; //@line 326 "./src/cpp/unrar/unicode.cpp"
     $54 = ($53|0)!=(128); //@line 326 "./src/cpp/unrar/unicode.cpp"
     if ($54) {
      label = 12;
      break L1;
     }
     $55 = $8; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $56 = $55 & 15; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $57 = $56 << 12; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $58 = $3; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $59 = HEAP8[$58>>0]|0; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $60 = $59 << 24 >> 24; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $61 = $60 & 63; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $62 = $61 << 6; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $63 = $57 | $62; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $64 = $3; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $65 = ((($64)) + 1|0); //@line 331 "./src/cpp/unrar/unicode.cpp"
     $66 = HEAP8[$65>>0]|0; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $67 = $66 << 24 >> 24; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $68 = $67 & 63; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $69 = $63 | $68; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $9 = $69; //@line 331 "./src/cpp/unrar/unicode.cpp"
     $70 = $3; //@line 332 "./src/cpp/unrar/unicode.cpp"
     $71 = ((($70)) + 2|0); //@line 332 "./src/cpp/unrar/unicode.cpp"
     $3 = $71; //@line 332 "./src/cpp/unrar/unicode.cpp"
     break;
    }
    $72 = $8; //@line 335 "./src/cpp/unrar/unicode.cpp"
    $73 = $72 >>> 3; //@line 335 "./src/cpp/unrar/unicode.cpp"
    $74 = ($73|0)==(30); //@line 335 "./src/cpp/unrar/unicode.cpp"
    if (!($74)) {
     label = 20;
     break L1;
    }
    $75 = $3; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $76 = HEAP8[$75>>0]|0; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $77 = $76 << 24 >> 24; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $78 = $77 & 192; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $79 = ($78|0)!=(128); //@line 337 "./src/cpp/unrar/unicode.cpp"
    if ($79) {
     label = 18;
     break L1;
    }
    $80 = $3; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $81 = ((($80)) + 1|0); //@line 337 "./src/cpp/unrar/unicode.cpp"
    $82 = HEAP8[$81>>0]|0; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $83 = $82 << 24 >> 24; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $84 = $83 & 192; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $85 = ($84|0)!=(128); //@line 337 "./src/cpp/unrar/unicode.cpp"
    if ($85) {
     label = 18;
     break L1;
    }
    $86 = $3; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $87 = ((($86)) + 2|0); //@line 337 "./src/cpp/unrar/unicode.cpp"
    $88 = HEAP8[$87>>0]|0; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $89 = $88 << 24 >> 24; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $90 = $89 & 192; //@line 337 "./src/cpp/unrar/unicode.cpp"
    $91 = ($90|0)!=(128); //@line 337 "./src/cpp/unrar/unicode.cpp"
    if ($91) {
     label = 18;
     break L1;
    }
    $92 = $8; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $93 = $92 & 7; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $94 = $93 << 18; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $95 = $3; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $96 = HEAP8[$95>>0]|0; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $97 = $96 << 24 >> 24; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $98 = $97 & 63; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $99 = $98 << 12; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $100 = $94 | $99; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $101 = $3; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $102 = ((($101)) + 1|0); //@line 342 "./src/cpp/unrar/unicode.cpp"
    $103 = HEAP8[$102>>0]|0; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $104 = $103 << 24 >> 24; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $105 = $104 & 63; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $106 = $105 << 6; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $107 = $100 | $106; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $108 = $3; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $109 = ((($108)) + 2|0); //@line 342 "./src/cpp/unrar/unicode.cpp"
    $110 = HEAP8[$109>>0]|0; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $111 = $110 << 24 >> 24; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $112 = $111 & 63; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $113 = $107 | $112; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $9 = $113; //@line 342 "./src/cpp/unrar/unicode.cpp"
    $114 = $3; //@line 343 "./src/cpp/unrar/unicode.cpp"
    $115 = ((($114)) + 3|0); //@line 343 "./src/cpp/unrar/unicode.cpp"
    $3 = $115; //@line 343 "./src/cpp/unrar/unicode.cpp"
   }
  } while(0);
  $116 = $4; //@line 350 "./src/cpp/unrar/unicode.cpp"
  $117 = ($116|0)!=(0|0); //@line 350 "./src/cpp/unrar/unicode.cpp"
  if ($117) {
   $118 = $7; //@line 350 "./src/cpp/unrar/unicode.cpp"
   $119 = (($118) + -1)|0; //@line 350 "./src/cpp/unrar/unicode.cpp"
   $7 = $119; //@line 350 "./src/cpp/unrar/unicode.cpp"
   $120 = ($119|0)<(0); //@line 350 "./src/cpp/unrar/unicode.cpp"
   if ($120) {
    break;
   }
  }
  $121 = $9; //@line 352 "./src/cpp/unrar/unicode.cpp"
  $122 = ($121>>>0)>(65535); //@line 352 "./src/cpp/unrar/unicode.cpp"
  $123 = $4;
  $124 = ($123|0)!=(0|0);
  if (!($122)) {
   if (!($124)) {
    continue;
   }
   $135 = $9; //@line 372 "./src/cpp/unrar/unicode.cpp"
   $136 = $4; //@line 372 "./src/cpp/unrar/unicode.cpp"
   $137 = ((($136)) + 4|0); //@line 372 "./src/cpp/unrar/unicode.cpp"
   $4 = $137; //@line 372 "./src/cpp/unrar/unicode.cpp"
   HEAP32[$136>>2] = $135; //@line 372 "./src/cpp/unrar/unicode.cpp"
   continue;
  }
  if ($124) {
   $125 = $7; //@line 354 "./src/cpp/unrar/unicode.cpp"
   $126 = (($125) + -1)|0; //@line 354 "./src/cpp/unrar/unicode.cpp"
   $7 = $126; //@line 354 "./src/cpp/unrar/unicode.cpp"
   $127 = ($126|0)<(0); //@line 354 "./src/cpp/unrar/unicode.cpp"
   if ($127) {
    break;
   }
  }
  $128 = $9; //@line 356 "./src/cpp/unrar/unicode.cpp"
  $129 = ($128>>>0)>(1114111); //@line 356 "./src/cpp/unrar/unicode.cpp"
  if ($129) {
   $6 = 0; //@line 358 "./src/cpp/unrar/unicode.cpp"
   continue;
  }
  $130 = $4; //@line 361 "./src/cpp/unrar/unicode.cpp"
  $131 = ($130|0)!=(0|0); //@line 361 "./src/cpp/unrar/unicode.cpp"
  if (!($131)) {
   continue;
  }
  $132 = $9; //@line 368 "./src/cpp/unrar/unicode.cpp"
  $133 = $4; //@line 368 "./src/cpp/unrar/unicode.cpp"
  $134 = ((($133)) + 4|0); //@line 368 "./src/cpp/unrar/unicode.cpp"
  $4 = $134; //@line 368 "./src/cpp/unrar/unicode.cpp"
  HEAP32[$133>>2] = $132; //@line 368 "./src/cpp/unrar/unicode.cpp"
 }
 if ((label|0) == 7) {
  $6 = 0; //@line 317 "./src/cpp/unrar/unicode.cpp"
 }
 else if ((label|0) == 12) {
  $6 = 0; //@line 328 "./src/cpp/unrar/unicode.cpp"
 }
 else if ((label|0) == 18) {
  $6 = 0; //@line 339 "./src/cpp/unrar/unicode.cpp"
 }
 else if ((label|0) == 20) {
  $6 = 0; //@line 347 "./src/cpp/unrar/unicode.cpp"
 }
 $138 = $4; //@line 374 "./src/cpp/unrar/unicode.cpp"
 $139 = ($138|0)!=(0|0); //@line 374 "./src/cpp/unrar/unicode.cpp"
 if (!($139)) {
  $141 = $6; //@line 376 "./src/cpp/unrar/unicode.cpp"
  $142 = $141&1; //@line 376 "./src/cpp/unrar/unicode.cpp"
  STACKTOP = sp;return ($142|0); //@line 376 "./src/cpp/unrar/unicode.cpp"
 }
 $140 = $4; //@line 375 "./src/cpp/unrar/unicode.cpp"
 HEAP32[$140>>2] = 0; //@line 375 "./src/cpp/unrar/unicode.cpp"
 $141 = $6; //@line 376 "./src/cpp/unrar/unicode.cpp"
 $142 = $141&1; //@line 376 "./src/cpp/unrar/unicode.cpp"
 STACKTOP = sp;return ($142|0); //@line 376 "./src/cpp/unrar/unicode.cpp"
}
function __Z8wcsicompPKwS0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 while(1) {
  $7 = $3; //@line 387 "./src/cpp/unrar/unicode.cpp"
  $8 = HEAP32[$7>>2]|0; //@line 387 "./src/cpp/unrar/unicode.cpp"
  $9 = (_towupper($8)|0); //@line 387 "./src/cpp/unrar/unicode.cpp"
  $5 = $9; //@line 387 "./src/cpp/unrar/unicode.cpp"
  $10 = $4; //@line 388 "./src/cpp/unrar/unicode.cpp"
  $11 = HEAP32[$10>>2]|0; //@line 388 "./src/cpp/unrar/unicode.cpp"
  $12 = (_towupper($11)|0); //@line 388 "./src/cpp/unrar/unicode.cpp"
  $6 = $12; //@line 388 "./src/cpp/unrar/unicode.cpp"
  $13 = $5; //@line 389 "./src/cpp/unrar/unicode.cpp"
  $14 = $6; //@line 389 "./src/cpp/unrar/unicode.cpp"
  $15 = ($13|0)!=($14|0); //@line 389 "./src/cpp/unrar/unicode.cpp"
  if ($15) {
   label = 3;
   break;
  }
  $20 = $3; //@line 391 "./src/cpp/unrar/unicode.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 391 "./src/cpp/unrar/unicode.cpp"
  $22 = ($21|0)==(0); //@line 391 "./src/cpp/unrar/unicode.cpp"
  if ($22) {
   label = 6;
   break;
  }
  $23 = $3; //@line 393 "./src/cpp/unrar/unicode.cpp"
  $24 = ((($23)) + 4|0); //@line 393 "./src/cpp/unrar/unicode.cpp"
  $3 = $24; //@line 393 "./src/cpp/unrar/unicode.cpp"
  $25 = $4; //@line 394 "./src/cpp/unrar/unicode.cpp"
  $26 = ((($25)) + 4|0); //@line 394 "./src/cpp/unrar/unicode.cpp"
  $4 = $26; //@line 394 "./src/cpp/unrar/unicode.cpp"
 }
 if ((label|0) == 3) {
  $16 = $5; //@line 390 "./src/cpp/unrar/unicode.cpp"
  $17 = $6; //@line 390 "./src/cpp/unrar/unicode.cpp"
  $18 = ($16|0)<($17|0); //@line 390 "./src/cpp/unrar/unicode.cpp"
  $19 = $18 ? -1 : 1; //@line 390 "./src/cpp/unrar/unicode.cpp"
  $2 = $19; //@line 390 "./src/cpp/unrar/unicode.cpp"
  $27 = $2; //@line 398 "./src/cpp/unrar/unicode.cpp"
  STACKTOP = sp;return ($27|0); //@line 398 "./src/cpp/unrar/unicode.cpp"
 }
 else if ((label|0) == 6) {
  $2 = 0; //@line 396 "./src/cpp/unrar/unicode.cpp"
  $27 = $2; //@line 398 "./src/cpp/unrar/unicode.cpp"
  STACKTOP = sp;return ($27|0); //@line 398 "./src/cpp/unrar/unicode.cpp"
 }
 return (0)|0;
}
function __Z8wcslowerPw($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 449 "./src/cpp/unrar/unicode.cpp"
 $2 = $3; //@line 449 "./src/cpp/unrar/unicode.cpp"
 while(1) {
  $4 = $2; //@line 449 "./src/cpp/unrar/unicode.cpp"
  $5 = HEAP32[$4>>2]|0; //@line 449 "./src/cpp/unrar/unicode.cpp"
  $6 = ($5|0)!=(0); //@line 449 "./src/cpp/unrar/unicode.cpp"
  if (!($6)) {
   break;
  }
  $7 = $2; //@line 450 "./src/cpp/unrar/unicode.cpp"
  $8 = HEAP32[$7>>2]|0; //@line 450 "./src/cpp/unrar/unicode.cpp"
  $9 = (_towlower($8)|0); //@line 450 "./src/cpp/unrar/unicode.cpp"
  $10 = $2; //@line 450 "./src/cpp/unrar/unicode.cpp"
  HEAP32[$10>>2] = $9; //@line 450 "./src/cpp/unrar/unicode.cpp"
  $11 = $2; //@line 449 "./src/cpp/unrar/unicode.cpp"
  $12 = ((($11)) + 4|0); //@line 449 "./src/cpp/unrar/unicode.cpp"
  $2 = $12; //@line 449 "./src/cpp/unrar/unicode.cpp"
 }
 $13 = $1; //@line 452 "./src/cpp/unrar/unicode.cpp"
 STACKTOP = sp;return ($13|0); //@line 452 "./src/cpp/unrar/unicode.cpp"
}
function __Z8wcsupperPw($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 463 "./src/cpp/unrar/unicode.cpp"
 $2 = $3; //@line 463 "./src/cpp/unrar/unicode.cpp"
 while(1) {
  $4 = $2; //@line 463 "./src/cpp/unrar/unicode.cpp"
  $5 = HEAP32[$4>>2]|0; //@line 463 "./src/cpp/unrar/unicode.cpp"
  $6 = ($5|0)!=(0); //@line 463 "./src/cpp/unrar/unicode.cpp"
  if (!($6)) {
   break;
  }
  $7 = $2; //@line 464 "./src/cpp/unrar/unicode.cpp"
  $8 = HEAP32[$7>>2]|0; //@line 464 "./src/cpp/unrar/unicode.cpp"
  $9 = (_towupper($8)|0); //@line 464 "./src/cpp/unrar/unicode.cpp"
  $10 = $2; //@line 464 "./src/cpp/unrar/unicode.cpp"
  HEAP32[$10>>2] = $9; //@line 464 "./src/cpp/unrar/unicode.cpp"
  $11 = $2; //@line 463 "./src/cpp/unrar/unicode.cpp"
  $12 = ((($11)) + 4|0); //@line 463 "./src/cpp/unrar/unicode.cpp"
  $2 = $12; //@line 463 "./src/cpp/unrar/unicode.cpp"
 }
 $13 = $1; //@line 466 "./src/cpp/unrar/unicode.cpp"
 STACKTOP = sp;return ($13|0); //@line 466 "./src/cpp/unrar/unicode.cpp"
}
function __Z8toupperwi($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 481 "./src/cpp/unrar/unicode.cpp"
 $3 = (_towupper($2)|0); //@line 481 "./src/cpp/unrar/unicode.cpp"
 STACKTOP = sp;return ($3|0); //@line 481 "./src/cpp/unrar/unicode.cpp"
}
function __Z5atoiwPKw($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 500 "./src/cpp/unrar/unicode.cpp"
 $3 = (__Z6atoilwPKw($2)|0); //@line 500 "./src/cpp/unrar/unicode.cpp"
 $4 = tempRet0; //@line 500 "./src/cpp/unrar/unicode.cpp"
 STACKTOP = sp;return ($3|0); //@line 500 "./src/cpp/unrar/unicode.cpp"
}
function __Z6atoilwPKw($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $1 = $0;
 $2 = 1; //@line 506 "./src/cpp/unrar/unicode.cpp"
 $4 = $1; //@line 507 "./src/cpp/unrar/unicode.cpp"
 $5 = HEAP32[$4>>2]|0; //@line 507 "./src/cpp/unrar/unicode.cpp"
 $6 = ($5|0)==(45); //@line 507 "./src/cpp/unrar/unicode.cpp"
 if ($6) {
  $7 = $1; //@line 509 "./src/cpp/unrar/unicode.cpp"
  $8 = ((($7)) + 4|0); //@line 509 "./src/cpp/unrar/unicode.cpp"
  $1 = $8; //@line 509 "./src/cpp/unrar/unicode.cpp"
  $2 = -1; //@line 510 "./src/cpp/unrar/unicode.cpp"
 }
 $9 = $3; //@line 512 "./src/cpp/unrar/unicode.cpp"
 $10 = $9; //@line 512 "./src/cpp/unrar/unicode.cpp"
 HEAP32[$10>>2] = 0; //@line 512 "./src/cpp/unrar/unicode.cpp"
 $11 = (($9) + 4)|0; //@line 512 "./src/cpp/unrar/unicode.cpp"
 $12 = $11; //@line 512 "./src/cpp/unrar/unicode.cpp"
 HEAP32[$12>>2] = 0; //@line 512 "./src/cpp/unrar/unicode.cpp"
 while(1) {
  $13 = $1; //@line 513 "./src/cpp/unrar/unicode.cpp"
  $14 = HEAP32[$13>>2]|0; //@line 513 "./src/cpp/unrar/unicode.cpp"
  $15 = ($14|0)>=(48); //@line 513 "./src/cpp/unrar/unicode.cpp"
  if (!($15)) {
   break;
  }
  $16 = $1; //@line 513 "./src/cpp/unrar/unicode.cpp"
  $17 = HEAP32[$16>>2]|0; //@line 513 "./src/cpp/unrar/unicode.cpp"
  $18 = ($17|0)<=(57); //@line 513 "./src/cpp/unrar/unicode.cpp"
  if (!($18)) {
   break;
  }
  $19 = $3; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $20 = $19; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $22 = (($19) + 4)|0; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $23 = $22; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $24 = HEAP32[$23>>2]|0; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $25 = (___muldi3(($21|0),($24|0),10,0)|0); //@line 515 "./src/cpp/unrar/unicode.cpp"
  $26 = tempRet0; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $27 = $1; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $29 = (($28) - 48)|0; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $30 = ($29|0)<(0); //@line 515 "./src/cpp/unrar/unicode.cpp"
  $31 = $30 << 31 >> 31; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $32 = (_i64Add(($25|0),($26|0),($29|0),($31|0))|0); //@line 515 "./src/cpp/unrar/unicode.cpp"
  $33 = tempRet0; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $34 = $3; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $35 = $34; //@line 515 "./src/cpp/unrar/unicode.cpp"
  HEAP32[$35>>2] = $32; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $36 = (($34) + 4)|0; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $37 = $36; //@line 515 "./src/cpp/unrar/unicode.cpp"
  HEAP32[$37>>2] = $33; //@line 515 "./src/cpp/unrar/unicode.cpp"
  $38 = $1; //@line 516 "./src/cpp/unrar/unicode.cpp"
  $39 = ((($38)) + 4|0); //@line 516 "./src/cpp/unrar/unicode.cpp"
  $1 = $39; //@line 516 "./src/cpp/unrar/unicode.cpp"
 }
 $40 = $2; //@line 518 "./src/cpp/unrar/unicode.cpp"
 $41 = ($40|0)<(0); //@line 518 "./src/cpp/unrar/unicode.cpp"
 $42 = $41 << 31 >> 31; //@line 518 "./src/cpp/unrar/unicode.cpp"
 $43 = $3; //@line 518 "./src/cpp/unrar/unicode.cpp"
 $44 = $43; //@line 518 "./src/cpp/unrar/unicode.cpp"
 $45 = HEAP32[$44>>2]|0; //@line 518 "./src/cpp/unrar/unicode.cpp"
 $46 = (($43) + 4)|0; //@line 518 "./src/cpp/unrar/unicode.cpp"
 $47 = $46; //@line 518 "./src/cpp/unrar/unicode.cpp"
 $48 = HEAP32[$47>>2]|0; //@line 518 "./src/cpp/unrar/unicode.cpp"
 $49 = (___muldi3(($40|0),($42|0),($45|0),($48|0))|0); //@line 518 "./src/cpp/unrar/unicode.cpp"
 $50 = tempRet0; //@line 518 "./src/cpp/unrar/unicode.cpp"
 tempRet0 = ($50); //@line 518 "./src/cpp/unrar/unicode.cpp"
 STACKTOP = sp;return ($49|0); //@line 518 "./src/cpp/unrar/unicode.cpp"
}
function __Z4Waitv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[(767)>>0]|0; //@line 91 "./src/cpp/unrar/system.cpp"
 $1 = $0&1; //@line 91 "./src/cpp/unrar/system.cpp"
 if (!($1)) {
  return; //@line 108 "./src/cpp/unrar/system.cpp"
 }
 __ZN12ErrorHandler4ExitE8RAR_EXIT(756,255); //@line 92 "./src/cpp/unrar/system.cpp"
 return; //@line 108 "./src/cpp/unrar/system.cpp"
}
function __ZN9CryptData8SetKey13EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = ((($6)) + 6340|0); //@line 8 "./src/cpp/unrar/crypt1.cpp"
 $8 = ((($7)) + 2|0); //@line 8 "./src/cpp/unrar/crypt1.cpp"
 HEAP8[$8>>0] = 0; //@line 8 "./src/cpp/unrar/crypt1.cpp"
 $9 = ((($6)) + 6340|0); //@line 8 "./src/cpp/unrar/crypt1.cpp"
 $10 = ((($9)) + 1|0); //@line 8 "./src/cpp/unrar/crypt1.cpp"
 HEAP8[$10>>0] = 0; //@line 8 "./src/cpp/unrar/crypt1.cpp"
 $11 = ((($6)) + 6340|0); //@line 8 "./src/cpp/unrar/crypt1.cpp"
 HEAP8[$11>>0] = 0; //@line 8 "./src/cpp/unrar/crypt1.cpp"
 $4 = 0; //@line 9 "./src/cpp/unrar/crypt1.cpp"
 while(1) {
  $12 = $3; //@line 9 "./src/cpp/unrar/crypt1.cpp"
  $13 = $4; //@line 9 "./src/cpp/unrar/crypt1.cpp"
  $14 = (($12) + ($13)|0); //@line 9 "./src/cpp/unrar/crypt1.cpp"
  $15 = HEAP8[$14>>0]|0; //@line 9 "./src/cpp/unrar/crypt1.cpp"
  $16 = $15 << 24 >> 24; //@line 9 "./src/cpp/unrar/crypt1.cpp"
  $17 = ($16|0)!=(0); //@line 9 "./src/cpp/unrar/crypt1.cpp"
  if (!($17)) {
   break;
  }
  $18 = $3; //@line 11 "./src/cpp/unrar/crypt1.cpp"
  $19 = $4; //@line 11 "./src/cpp/unrar/crypt1.cpp"
  $20 = (($18) + ($19)|0); //@line 11 "./src/cpp/unrar/crypt1.cpp"
  $21 = HEAP8[$20>>0]|0; //@line 11 "./src/cpp/unrar/crypt1.cpp"
  $5 = $21; //@line 11 "./src/cpp/unrar/crypt1.cpp"
  $22 = $5; //@line 12 "./src/cpp/unrar/crypt1.cpp"
  $23 = $22&255; //@line 12 "./src/cpp/unrar/crypt1.cpp"
  $24 = ((($6)) + 6340|0); //@line 12 "./src/cpp/unrar/crypt1.cpp"
  $25 = HEAP8[$24>>0]|0; //@line 12 "./src/cpp/unrar/crypt1.cpp"
  $26 = $25&255; //@line 12 "./src/cpp/unrar/crypt1.cpp"
  $27 = (($26) + ($23))|0; //@line 12 "./src/cpp/unrar/crypt1.cpp"
  $28 = $27&255; //@line 12 "./src/cpp/unrar/crypt1.cpp"
  HEAP8[$24>>0] = $28; //@line 12 "./src/cpp/unrar/crypt1.cpp"
  $29 = $5; //@line 13 "./src/cpp/unrar/crypt1.cpp"
  $30 = $29&255; //@line 13 "./src/cpp/unrar/crypt1.cpp"
  $31 = ((($6)) + 6340|0); //@line 13 "./src/cpp/unrar/crypt1.cpp"
  $32 = ((($31)) + 1|0); //@line 13 "./src/cpp/unrar/crypt1.cpp"
  $33 = HEAP8[$32>>0]|0; //@line 13 "./src/cpp/unrar/crypt1.cpp"
  $34 = $33&255; //@line 13 "./src/cpp/unrar/crypt1.cpp"
  $35 = $34 ^ $30; //@line 13 "./src/cpp/unrar/crypt1.cpp"
  $36 = $35&255; //@line 13 "./src/cpp/unrar/crypt1.cpp"
  HEAP8[$32>>0] = $36; //@line 13 "./src/cpp/unrar/crypt1.cpp"
  $37 = $5; //@line 14 "./src/cpp/unrar/crypt1.cpp"
  $38 = $37&255; //@line 14 "./src/cpp/unrar/crypt1.cpp"
  $39 = ((($6)) + 6340|0); //@line 14 "./src/cpp/unrar/crypt1.cpp"
  $40 = ((($39)) + 2|0); //@line 14 "./src/cpp/unrar/crypt1.cpp"
  $41 = HEAP8[$40>>0]|0; //@line 14 "./src/cpp/unrar/crypt1.cpp"
  $42 = $41&255; //@line 14 "./src/cpp/unrar/crypt1.cpp"
  $43 = (($42) + ($38))|0; //@line 14 "./src/cpp/unrar/crypt1.cpp"
  $44 = $43&255; //@line 14 "./src/cpp/unrar/crypt1.cpp"
  HEAP8[$40>>0] = $44; //@line 14 "./src/cpp/unrar/crypt1.cpp"
  $45 = ((($6)) + 6340|0); //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $46 = ((($45)) + 2|0); //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $47 = HEAP8[$46>>0]|0; //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $48 = $47&255; //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $49 = $48 << 1; //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $50 = ((($6)) + 6340|0); //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $51 = ((($50)) + 2|0); //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $52 = HEAP8[$51>>0]|0; //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $53 = $52&255; //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $54 = $53 >> 7; //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $55 = $49 | $54; //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $56 = $55&255; //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $57 = ((($6)) + 6340|0); //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $58 = ((($57)) + 2|0); //@line 15 "./src/cpp/unrar/crypt1.cpp"
  HEAP8[$58>>0] = $56; //@line 15 "./src/cpp/unrar/crypt1.cpp"
  $59 = $4; //@line 9 "./src/cpp/unrar/crypt1.cpp"
  $60 = (($59) + 1)|0; //@line 9 "./src/cpp/unrar/crypt1.cpp"
  $4 = $60; //@line 9 "./src/cpp/unrar/crypt1.cpp"
 }
 STACKTOP = sp;return; //@line 17 "./src/cpp/unrar/crypt1.cpp"
}
function __ZN9CryptData8SetKey15EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = ((($7)) + 5044|0); //@line 22 "./src/cpp/unrar/crypt1.cpp"
 __Z9InitCRC32Pj($8); //@line 22 "./src/cpp/unrar/crypt1.cpp"
 $9 = $3; //@line 23 "./src/cpp/unrar/crypt1.cpp"
 $10 = $3; //@line 23 "./src/cpp/unrar/crypt1.cpp"
 $11 = (_strlen($10)|0); //@line 23 "./src/cpp/unrar/crypt1.cpp"
 $12 = (__Z5CRC32jPKvj(-1,$9,$11)|0); //@line 23 "./src/cpp/unrar/crypt1.cpp"
 $4 = $12; //@line 23 "./src/cpp/unrar/crypt1.cpp"
 $13 = $4; //@line 24 "./src/cpp/unrar/crypt1.cpp"
 $14 = $13 & 65535; //@line 24 "./src/cpp/unrar/crypt1.cpp"
 $15 = $14&65535; //@line 24 "./src/cpp/unrar/crypt1.cpp"
 $16 = ((($7)) + 6344|0); //@line 24 "./src/cpp/unrar/crypt1.cpp"
 HEAP16[$16>>1] = $15; //@line 24 "./src/cpp/unrar/crypt1.cpp"
 $17 = $4; //@line 25 "./src/cpp/unrar/crypt1.cpp"
 $18 = $17 >>> 16; //@line 25 "./src/cpp/unrar/crypt1.cpp"
 $19 = $18 & 65535; //@line 25 "./src/cpp/unrar/crypt1.cpp"
 $20 = $19&65535; //@line 25 "./src/cpp/unrar/crypt1.cpp"
 $21 = ((($7)) + 6344|0); //@line 25 "./src/cpp/unrar/crypt1.cpp"
 $22 = ((($21)) + 2|0); //@line 25 "./src/cpp/unrar/crypt1.cpp"
 HEAP16[$22>>1] = $20; //@line 25 "./src/cpp/unrar/crypt1.cpp"
 $23 = ((($7)) + 6344|0); //@line 26 "./src/cpp/unrar/crypt1.cpp"
 $24 = ((($23)) + 6|0); //@line 26 "./src/cpp/unrar/crypt1.cpp"
 HEAP16[$24>>1] = 0; //@line 26 "./src/cpp/unrar/crypt1.cpp"
 $25 = ((($7)) + 6344|0); //@line 26 "./src/cpp/unrar/crypt1.cpp"
 $26 = ((($25)) + 4|0); //@line 26 "./src/cpp/unrar/crypt1.cpp"
 HEAP16[$26>>1] = 0; //@line 26 "./src/cpp/unrar/crypt1.cpp"
 $5 = 0; //@line 27 "./src/cpp/unrar/crypt1.cpp"
 while(1) {
  $27 = $3; //@line 27 "./src/cpp/unrar/crypt1.cpp"
  $28 = $5; //@line 27 "./src/cpp/unrar/crypt1.cpp"
  $29 = (($27) + ($28)|0); //@line 27 "./src/cpp/unrar/crypt1.cpp"
  $30 = HEAP8[$29>>0]|0; //@line 27 "./src/cpp/unrar/crypt1.cpp"
  $31 = $30 << 24 >> 24; //@line 27 "./src/cpp/unrar/crypt1.cpp"
  $32 = ($31|0)!=(0); //@line 27 "./src/cpp/unrar/crypt1.cpp"
  if (!($32)) {
   break;
  }
  $33 = $3; //@line 29 "./src/cpp/unrar/crypt1.cpp"
  $34 = $5; //@line 29 "./src/cpp/unrar/crypt1.cpp"
  $35 = (($33) + ($34)|0); //@line 29 "./src/cpp/unrar/crypt1.cpp"
  $36 = HEAP8[$35>>0]|0; //@line 29 "./src/cpp/unrar/crypt1.cpp"
  $6 = $36; //@line 29 "./src/cpp/unrar/crypt1.cpp"
  $37 = $6; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $38 = $37&255; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $39 = ((($7)) + 5044|0); //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $40 = $6; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $41 = $40&255; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $42 = (($39) + ($41<<2)|0); //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $43 = HEAP32[$42>>2]|0; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $44 = $38 ^ $43; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $45 = ((($7)) + 6344|0); //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $46 = ((($45)) + 4|0); //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $47 = HEAP16[$46>>1]|0; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $48 = $47&65535; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $49 = $48 ^ $44; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $50 = $49&65535; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  HEAP16[$46>>1] = $50; //@line 30 "./src/cpp/unrar/crypt1.cpp"
  $51 = $6; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $52 = $51&255; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $53 = ((($7)) + 5044|0); //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $54 = $6; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $55 = $54&255; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $56 = (($53) + ($55<<2)|0); //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $57 = HEAP32[$56>>2]|0; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $58 = $57 >>> 16; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $59 = (($52) + ($58))|0; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $60 = ((($7)) + 6344|0); //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $61 = ((($60)) + 6|0); //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $62 = HEAP16[$61>>1]|0; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $63 = $62&65535; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $64 = (($63) + ($59))|0; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $65 = $64&65535; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  HEAP16[$61>>1] = $65; //@line 31 "./src/cpp/unrar/crypt1.cpp"
  $66 = $5; //@line 27 "./src/cpp/unrar/crypt1.cpp"
  $67 = (($66) + 1)|0; //@line 27 "./src/cpp/unrar/crypt1.cpp"
  $5 = $67; //@line 27 "./src/cpp/unrar/crypt1.cpp"
 }
 STACKTOP = sp;return; //@line 33 "./src/cpp/unrar/crypt1.cpp"
}
function __ZN9CryptData18SetCmt13EncryptionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4776|0); //@line 49 "./src/cpp/unrar/crypt1.cpp"
 HEAP32[$3>>2] = 1; //@line 49 "./src/cpp/unrar/crypt1.cpp"
 $4 = ((($2)) + 6340|0); //@line 50 "./src/cpp/unrar/crypt1.cpp"
 HEAP8[$4>>0] = 0; //@line 50 "./src/cpp/unrar/crypt1.cpp"
 $5 = ((($2)) + 6340|0); //@line 51 "./src/cpp/unrar/crypt1.cpp"
 $6 = ((($5)) + 1|0); //@line 51 "./src/cpp/unrar/crypt1.cpp"
 HEAP8[$6>>0] = 7; //@line 51 "./src/cpp/unrar/crypt1.cpp"
 $7 = ((($2)) + 6340|0); //@line 52 "./src/cpp/unrar/crypt1.cpp"
 $8 = ((($7)) + 2|0); //@line 52 "./src/cpp/unrar/crypt1.cpp"
 HEAP8[$8>>0] = 77; //@line 52 "./src/cpp/unrar/crypt1.cpp"
 STACKTOP = sp;return; //@line 53 "./src/cpp/unrar/crypt1.cpp"
}
function __ZN9CryptData9Decrypt13EPhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 while(1) {
  $7 = $5; //@line 58 "./src/cpp/unrar/crypt1.cpp"
  $8 = (($7) + -1)|0; //@line 58 "./src/cpp/unrar/crypt1.cpp"
  $5 = $8; //@line 58 "./src/cpp/unrar/crypt1.cpp"
  $9 = ($7|0)!=(0); //@line 58 "./src/cpp/unrar/crypt1.cpp"
  if (!($9)) {
   break;
  }
  $10 = ((($6)) + 6340|0); //@line 60 "./src/cpp/unrar/crypt1.cpp"
  $11 = ((($10)) + 2|0); //@line 60 "./src/cpp/unrar/crypt1.cpp"
  $12 = HEAP8[$11>>0]|0; //@line 60 "./src/cpp/unrar/crypt1.cpp"
  $13 = $12&255; //@line 60 "./src/cpp/unrar/crypt1.cpp"
  $14 = ((($6)) + 6340|0); //@line 60 "./src/cpp/unrar/crypt1.cpp"
  $15 = ((($14)) + 1|0); //@line 60 "./src/cpp/unrar/crypt1.cpp"
  $16 = HEAP8[$15>>0]|0; //@line 60 "./src/cpp/unrar/crypt1.cpp"
  $17 = $16&255; //@line 60 "./src/cpp/unrar/crypt1.cpp"
  $18 = (($17) + ($13))|0; //@line 60 "./src/cpp/unrar/crypt1.cpp"
  $19 = $18&255; //@line 60 "./src/cpp/unrar/crypt1.cpp"
  HEAP8[$15>>0] = $19; //@line 60 "./src/cpp/unrar/crypt1.cpp"
  $20 = ((($6)) + 6340|0); //@line 61 "./src/cpp/unrar/crypt1.cpp"
  $21 = ((($20)) + 1|0); //@line 61 "./src/cpp/unrar/crypt1.cpp"
  $22 = HEAP8[$21>>0]|0; //@line 61 "./src/cpp/unrar/crypt1.cpp"
  $23 = $22&255; //@line 61 "./src/cpp/unrar/crypt1.cpp"
  $24 = ((($6)) + 6340|0); //@line 61 "./src/cpp/unrar/crypt1.cpp"
  $25 = HEAP8[$24>>0]|0; //@line 61 "./src/cpp/unrar/crypt1.cpp"
  $26 = $25&255; //@line 61 "./src/cpp/unrar/crypt1.cpp"
  $27 = (($26) + ($23))|0; //@line 61 "./src/cpp/unrar/crypt1.cpp"
  $28 = $27&255; //@line 61 "./src/cpp/unrar/crypt1.cpp"
  HEAP8[$24>>0] = $28; //@line 61 "./src/cpp/unrar/crypt1.cpp"
  $29 = ((($6)) + 6340|0); //@line 62 "./src/cpp/unrar/crypt1.cpp"
  $30 = HEAP8[$29>>0]|0; //@line 62 "./src/cpp/unrar/crypt1.cpp"
  $31 = $30&255; //@line 62 "./src/cpp/unrar/crypt1.cpp"
  $32 = $4; //@line 62 "./src/cpp/unrar/crypt1.cpp"
  $33 = HEAP8[$32>>0]|0; //@line 62 "./src/cpp/unrar/crypt1.cpp"
  $34 = $33&255; //@line 62 "./src/cpp/unrar/crypt1.cpp"
  $35 = (($34) - ($31))|0; //@line 62 "./src/cpp/unrar/crypt1.cpp"
  $36 = $35&255; //@line 62 "./src/cpp/unrar/crypt1.cpp"
  HEAP8[$32>>0] = $36; //@line 62 "./src/cpp/unrar/crypt1.cpp"
  $37 = $4; //@line 63 "./src/cpp/unrar/crypt1.cpp"
  $38 = ((($37)) + 1|0); //@line 63 "./src/cpp/unrar/crypt1.cpp"
  $4 = $38; //@line 63 "./src/cpp/unrar/crypt1.cpp"
 }
 STACKTOP = sp;return; //@line 65 "./src/cpp/unrar/crypt1.cpp"
}
function __ZN9CryptData7Crypt15EPhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 while(1) {
  $7 = $5; //@line 70 "./src/cpp/unrar/crypt1.cpp"
  $8 = (($7) + -1)|0; //@line 70 "./src/cpp/unrar/crypt1.cpp"
  $5 = $8; //@line 70 "./src/cpp/unrar/crypt1.cpp"
  $9 = ($7|0)!=(0); //@line 70 "./src/cpp/unrar/crypt1.cpp"
  if (!($9)) {
   break;
  }
  $10 = ((($6)) + 6344|0); //@line 72 "./src/cpp/unrar/crypt1.cpp"
  $11 = HEAP16[$10>>1]|0; //@line 72 "./src/cpp/unrar/crypt1.cpp"
  $12 = $11&65535; //@line 72 "./src/cpp/unrar/crypt1.cpp"
  $13 = (($12) + 4660)|0; //@line 72 "./src/cpp/unrar/crypt1.cpp"
  $14 = $13&65535; //@line 72 "./src/cpp/unrar/crypt1.cpp"
  HEAP16[$10>>1] = $14; //@line 72 "./src/cpp/unrar/crypt1.cpp"
  $15 = ((($6)) + 5044|0); //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $16 = ((($6)) + 6344|0); //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $17 = HEAP16[$16>>1]|0; //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $18 = $17&65535; //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $19 = $18 & 510; //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $20 = $19 >> 1; //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $21 = (($15) + ($20<<2)|0); //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $22 = HEAP32[$21>>2]|0; //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $23 = ((($6)) + 6344|0); //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $24 = ((($23)) + 2|0); //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $25 = HEAP16[$24>>1]|0; //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $26 = $25&65535; //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $27 = $26 ^ $22; //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $28 = $27&65535; //@line 73 "./src/cpp/unrar/crypt1.cpp"
  HEAP16[$24>>1] = $28; //@line 73 "./src/cpp/unrar/crypt1.cpp"
  $29 = ((($6)) + 5044|0); //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $30 = ((($6)) + 6344|0); //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $31 = HEAP16[$30>>1]|0; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $32 = $31&65535; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $33 = $32 & 510; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $34 = $33 >> 1; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $35 = (($29) + ($34<<2)|0); //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $36 = HEAP32[$35>>2]|0; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $37 = $36 >>> 16; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $38 = ((($6)) + 6344|0); //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $39 = ((($38)) + 4|0); //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $40 = HEAP16[$39>>1]|0; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $41 = $40&65535; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $42 = (($41) - ($37))|0; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $43 = $42&65535; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  HEAP16[$39>>1] = $43; //@line 74 "./src/cpp/unrar/crypt1.cpp"
  $44 = ((($6)) + 6344|0); //@line 75 "./src/cpp/unrar/crypt1.cpp"
  $45 = ((($44)) + 4|0); //@line 75 "./src/cpp/unrar/crypt1.cpp"
  $46 = HEAP16[$45>>1]|0; //@line 75 "./src/cpp/unrar/crypt1.cpp"
  $47 = $46&65535; //@line 75 "./src/cpp/unrar/crypt1.cpp"
  $48 = ((($6)) + 6344|0); //@line 75 "./src/cpp/unrar/crypt1.cpp"
  $49 = HEAP16[$48>>1]|0; //@line 75 "./src/cpp/unrar/crypt1.cpp"
  $50 = $49&65535; //@line 75 "./src/cpp/unrar/crypt1.cpp"
  $51 = $50 ^ $47; //@line 75 "./src/cpp/unrar/crypt1.cpp"
  $52 = $51&65535; //@line 75 "./src/cpp/unrar/crypt1.cpp"
  HEAP16[$48>>1] = $52; //@line 75 "./src/cpp/unrar/crypt1.cpp"
  $53 = ((($6)) + 6344|0); //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $54 = ((($53)) + 6|0); //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $55 = HEAP16[$54>>1]|0; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $56 = $55&65535; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $57 = $56 & 65535; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $58 = $57 >> 1; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $59 = ((($6)) + 6344|0); //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $60 = ((($59)) + 6|0); //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $61 = HEAP16[$60>>1]|0; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $62 = $61&65535; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $63 = $62 & 65535; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $64 = $63 << 15; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $65 = $58 | $64; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $66 = ((($6)) + 6344|0); //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $67 = ((($66)) + 2|0); //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $68 = HEAP16[$67>>1]|0; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $69 = $68&65535; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $70 = $65 ^ $69; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $71 = $70&65535; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $72 = ((($6)) + 6344|0); //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $73 = ((($72)) + 6|0); //@line 76 "./src/cpp/unrar/crypt1.cpp"
  HEAP16[$73>>1] = $71; //@line 76 "./src/cpp/unrar/crypt1.cpp"
  $74 = ((($6)) + 6344|0); //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $75 = ((($74)) + 6|0); //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $76 = HEAP16[$75>>1]|0; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $77 = $76&65535; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $78 = $77 & 65535; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $79 = $78 >> 1; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $80 = ((($6)) + 6344|0); //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $81 = ((($80)) + 6|0); //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $82 = HEAP16[$81>>1]|0; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $83 = $82&65535; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $84 = $83 & 65535; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $85 = $84 << 15; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $86 = $79 | $85; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $87 = $86&65535; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $88 = ((($6)) + 6344|0); //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $89 = ((($88)) + 6|0); //@line 77 "./src/cpp/unrar/crypt1.cpp"
  HEAP16[$89>>1] = $87; //@line 77 "./src/cpp/unrar/crypt1.cpp"
  $90 = ((($6)) + 6344|0); //@line 78 "./src/cpp/unrar/crypt1.cpp"
  $91 = ((($90)) + 6|0); //@line 78 "./src/cpp/unrar/crypt1.cpp"
  $92 = HEAP16[$91>>1]|0; //@line 78 "./src/cpp/unrar/crypt1.cpp"
  $93 = $92&65535; //@line 78 "./src/cpp/unrar/crypt1.cpp"
  $94 = ((($6)) + 6344|0); //@line 78 "./src/cpp/unrar/crypt1.cpp"
  $95 = HEAP16[$94>>1]|0; //@line 78 "./src/cpp/unrar/crypt1.cpp"
  $96 = $95&65535; //@line 78 "./src/cpp/unrar/crypt1.cpp"
  $97 = $96 ^ $93; //@line 78 "./src/cpp/unrar/crypt1.cpp"
  $98 = $97&65535; //@line 78 "./src/cpp/unrar/crypt1.cpp"
  HEAP16[$94>>1] = $98; //@line 78 "./src/cpp/unrar/crypt1.cpp"
  $99 = ((($6)) + 6344|0); //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $100 = HEAP16[$99>>1]|0; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $101 = $100&65535; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $102 = $101 >> 8; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $103 = $102&255; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $104 = $103&255; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $105 = $4; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $106 = HEAP8[$105>>0]|0; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $107 = $106&255; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $108 = $107 ^ $104; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $109 = $108&255; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  HEAP8[$105>>0] = $109; //@line 79 "./src/cpp/unrar/crypt1.cpp"
  $110 = $4; //@line 80 "./src/cpp/unrar/crypt1.cpp"
  $111 = ((($110)) + 1|0); //@line 80 "./src/cpp/unrar/crypt1.cpp"
  $4 = $111; //@line 80 "./src/cpp/unrar/crypt1.cpp"
 }
 STACKTOP = sp;return; //@line 82 "./src/cpp/unrar/crypt1.cpp"
}
function __ZN9CryptData8SetKey20EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $4 = sp + 40|0;
 $2 = $0;
 $3 = $1;
 $13 = $2;
 $14 = ((($13)) + 5044|0); //@line 31 "./src/cpp/unrar/crypt2.cpp"
 __Z9InitCRC32Pj($14); //@line 31 "./src/cpp/unrar/crypt2.cpp"
 $15 = $3; //@line 34 "./src/cpp/unrar/crypt2.cpp"
 (__Z8strncpyzPcPKcj($4,$15,128)|0); //@line 34 "./src/cpp/unrar/crypt2.cpp"
 $16 = (_strlen($4)|0); //@line 35 "./src/cpp/unrar/crypt2.cpp"
 $5 = $16; //@line 35 "./src/cpp/unrar/crypt2.cpp"
 $17 = ((($13)) + 6324|0); //@line 37 "./src/cpp/unrar/crypt2.cpp"
 HEAP32[$17>>2] = -744245127; //@line 37 "./src/cpp/unrar/crypt2.cpp"
 $18 = ((($13)) + 6324|0); //@line 38 "./src/cpp/unrar/crypt2.cpp"
 $19 = ((($18)) + 4|0); //@line 38 "./src/cpp/unrar/crypt2.cpp"
 HEAP32[$19>>2] = 1064112887; //@line 38 "./src/cpp/unrar/crypt2.cpp"
 $20 = ((($13)) + 6324|0); //@line 39 "./src/cpp/unrar/crypt2.cpp"
 $21 = ((($20)) + 8|0); //@line 39 "./src/cpp/unrar/crypt2.cpp"
 HEAP32[$21>>2] = 1964352053; //@line 39 "./src/cpp/unrar/crypt2.cpp"
 $22 = ((($13)) + 6324|0); //@line 40 "./src/cpp/unrar/crypt2.cpp"
 $23 = ((($22)) + 12|0); //@line 40 "./src/cpp/unrar/crypt2.cpp"
 HEAP32[$23>>2] = -1528303325; //@line 40 "./src/cpp/unrar/crypt2.cpp"
 $24 = ((($13)) + 6068|0); //@line 42 "./src/cpp/unrar/crypt2.cpp"
 _memcpy(($24|0),(4879|0),256)|0; //@line 42 "./src/cpp/unrar/crypt2.cpp"
 $6 = 0; //@line 43 "./src/cpp/unrar/crypt2.cpp"
 while(1) {
  $25 = $6; //@line 43 "./src/cpp/unrar/crypt2.cpp"
  $26 = ($25|0)<(256); //@line 43 "./src/cpp/unrar/crypt2.cpp"
  if (!($26)) {
   break;
  }
  $7 = 0; //@line 44 "./src/cpp/unrar/crypt2.cpp"
  while(1) {
   $27 = $7; //@line 44 "./src/cpp/unrar/crypt2.cpp"
   $28 = $5; //@line 44 "./src/cpp/unrar/crypt2.cpp"
   $29 = ($27>>>0)<($28>>>0); //@line 44 "./src/cpp/unrar/crypt2.cpp"
   if (!($29)) {
    break;
   }
   $30 = ((($13)) + 5044|0); //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $31 = $3; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $32 = $7; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $33 = (($31) + ($32)|0); //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $34 = HEAP8[$33>>0]|0; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $35 = $34&255; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $36 = $6; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $37 = (($35) - ($36))|0; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $38 = $37 & 255; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $39 = (($30) + ($38<<2)|0); //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $40 = HEAP32[$39>>2]|0; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $41 = $40&255; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $42 = $41&255; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $8 = $42; //@line 46 "./src/cpp/unrar/crypt2.cpp"
   $43 = ((($13)) + 5044|0); //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $44 = $3; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $45 = $7; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $46 = (($45) + 1)|0; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $47 = (($44) + ($46)|0); //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $48 = HEAP8[$47>>0]|0; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $49 = $48&255; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $50 = $6; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $51 = (($49) + ($50))|0; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $52 = $51 & 255; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $53 = (($43) + ($52<<2)|0); //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $54 = HEAP32[$53>>2]|0; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $55 = $54&255; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $56 = $55&255; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $9 = $56; //@line 47 "./src/cpp/unrar/crypt2.cpp"
   $10 = 1; //@line 48 "./src/cpp/unrar/crypt2.cpp"
   while(1) {
    $57 = $8; //@line 48 "./src/cpp/unrar/crypt2.cpp"
    $58 = $9; //@line 48 "./src/cpp/unrar/crypt2.cpp"
    $59 = ($57|0)!=($58|0); //@line 48 "./src/cpp/unrar/crypt2.cpp"
    if (!($59)) {
     break;
    }
    $60 = ((($13)) + 6068|0); //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $61 = $8; //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $62 = (($60) + ($61)|0); //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $63 = ((($13)) + 6068|0); //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $64 = $8; //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $65 = $7; //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $66 = (($64) + ($65))|0; //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $67 = $10; //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $68 = (($66) + ($67))|0; //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $69 = $68 & 255; //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $70 = (($63) + ($69)|0); //@line 49 "./src/cpp/unrar/crypt2.cpp"
    __ZN9CryptData6Swap20EPhS0_($13,$62,$70); //@line 49 "./src/cpp/unrar/crypt2.cpp"
    $71 = $8; //@line 48 "./src/cpp/unrar/crypt2.cpp"
    $72 = (($71) + 1)|0; //@line 48 "./src/cpp/unrar/crypt2.cpp"
    $73 = $72 & 255; //@line 48 "./src/cpp/unrar/crypt2.cpp"
    $8 = $73; //@line 48 "./src/cpp/unrar/crypt2.cpp"
    $74 = $10; //@line 48 "./src/cpp/unrar/crypt2.cpp"
    $75 = (($74) + 1)|0; //@line 48 "./src/cpp/unrar/crypt2.cpp"
    $10 = $75; //@line 48 "./src/cpp/unrar/crypt2.cpp"
   }
   $76 = $7; //@line 44 "./src/cpp/unrar/crypt2.cpp"
   $77 = (($76) + 2)|0; //@line 44 "./src/cpp/unrar/crypt2.cpp"
   $7 = $77; //@line 44 "./src/cpp/unrar/crypt2.cpp"
  }
  $78 = $6; //@line 43 "./src/cpp/unrar/crypt2.cpp"
  $79 = (($78) + 1)|0; //@line 43 "./src/cpp/unrar/crypt2.cpp"
  $6 = $79; //@line 43 "./src/cpp/unrar/crypt2.cpp"
 }
 $80 = $5; //@line 53 "./src/cpp/unrar/crypt2.cpp"
 $81 = $80 & 15; //@line 53 "./src/cpp/unrar/crypt2.cpp"
 $82 = ($81|0)!=(0); //@line 53 "./src/cpp/unrar/crypt2.cpp"
 L13: do {
  if ($82) {
   $83 = $5; //@line 54 "./src/cpp/unrar/crypt2.cpp"
   $11 = $83; //@line 54 "./src/cpp/unrar/crypt2.cpp"
   while(1) {
    $84 = $11; //@line 54 "./src/cpp/unrar/crypt2.cpp"
    $85 = $5; //@line 54 "./src/cpp/unrar/crypt2.cpp"
    $86 = $85 | 15; //@line 54 "./src/cpp/unrar/crypt2.cpp"
    $87 = ($84>>>0)<=($86>>>0); //@line 54 "./src/cpp/unrar/crypt2.cpp"
    if (!($87)) {
     break L13;
    }
    $88 = $11; //@line 55 "./src/cpp/unrar/crypt2.cpp"
    $89 = (($4) + ($88)|0); //@line 55 "./src/cpp/unrar/crypt2.cpp"
    HEAP8[$89>>0] = 0; //@line 55 "./src/cpp/unrar/crypt2.cpp"
    $90 = $11; //@line 54 "./src/cpp/unrar/crypt2.cpp"
    $91 = (($90) + 1)|0; //@line 54 "./src/cpp/unrar/crypt2.cpp"
    $11 = $91; //@line 54 "./src/cpp/unrar/crypt2.cpp"
   }
  }
 } while(0);
 $12 = 0; //@line 57 "./src/cpp/unrar/crypt2.cpp"
 while(1) {
  $92 = $12; //@line 57 "./src/cpp/unrar/crypt2.cpp"
  $93 = $5; //@line 57 "./src/cpp/unrar/crypt2.cpp"
  $94 = ($92>>>0)<($93>>>0); //@line 57 "./src/cpp/unrar/crypt2.cpp"
  if (!($94)) {
   break;
  }
  $95 = $12; //@line 58 "./src/cpp/unrar/crypt2.cpp"
  $96 = (($4) + ($95)|0); //@line 58 "./src/cpp/unrar/crypt2.cpp"
  __ZN9CryptData14EncryptBlock20EPh($13,$96); //@line 58 "./src/cpp/unrar/crypt2.cpp"
  $97 = $12; //@line 57 "./src/cpp/unrar/crypt2.cpp"
  $98 = (($97) + 16)|0; //@line 57 "./src/cpp/unrar/crypt2.cpp"
  $12 = $98; //@line 57 "./src/cpp/unrar/crypt2.cpp"
 }
 STACKTOP = sp;return; //@line 59 "./src/cpp/unrar/crypt2.cpp"
}
function __ZN9CryptData6Swap20EPhS0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $4; //@line 192 "./src/cpp/unrar/crypt2.cpp"
 $8 = HEAP8[$7>>0]|0; //@line 192 "./src/cpp/unrar/crypt2.cpp"
 $6 = $8; //@line 192 "./src/cpp/unrar/crypt2.cpp"
 $9 = $5; //@line 193 "./src/cpp/unrar/crypt2.cpp"
 $10 = HEAP8[$9>>0]|0; //@line 193 "./src/cpp/unrar/crypt2.cpp"
 $11 = $4; //@line 193 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$11>>0] = $10; //@line 193 "./src/cpp/unrar/crypt2.cpp"
 $12 = $6; //@line 194 "./src/cpp/unrar/crypt2.cpp"
 $13 = $5; //@line 194 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$13>>0] = $12; //@line 194 "./src/cpp/unrar/crypt2.cpp"
 STACKTOP = sp;return; //@line 195 "./src/cpp/unrar/crypt2.cpp"
}
function __ZN9CryptData14EncryptBlock20EPh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = $0;
 $3 = $1;
 $12 = $2;
 $13 = $3; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $14 = HEAP8[$13>>0]|0; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $15 = $14&255; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $16 = $3; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $17 = ((($16)) + 1|0); //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $18 = HEAP8[$17>>0]|0; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $19 = $18&255; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $20 = $19 << 8; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $21 = $15 | $20; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $22 = $3; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $23 = ((($22)) + 2|0); //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $24 = HEAP8[$23>>0]|0; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $25 = $24&255; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $26 = $25 << 16; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $27 = $21 | $26; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $28 = $3; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $29 = ((($28)) + 3|0); //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $30 = HEAP8[$29>>0]|0; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $31 = $30&255; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $32 = $31 << 24; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $33 = $27 | $32; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $34 = ((($12)) + 6324|0); //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $36 = $33 ^ $35; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $4 = $36; //@line 66 "./src/cpp/unrar/crypt2.cpp"
 $37 = $3; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $38 = ((($37)) + 4|0); //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $39 = HEAP8[$38>>0]|0; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $40 = $39&255; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $41 = $3; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $42 = ((($41)) + 5|0); //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $43 = HEAP8[$42>>0]|0; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $44 = $43&255; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $45 = $44 << 8; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $46 = $40 | $45; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $47 = $3; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $48 = ((($47)) + 6|0); //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $49 = HEAP8[$48>>0]|0; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $50 = $49&255; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $51 = $50 << 16; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $52 = $46 | $51; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $53 = $3; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $54 = ((($53)) + 7|0); //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $55 = HEAP8[$54>>0]|0; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $56 = $55&255; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $57 = $56 << 24; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $58 = $52 | $57; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $59 = ((($12)) + 6324|0); //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $60 = ((($59)) + 4|0); //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $61 = HEAP32[$60>>2]|0; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $62 = $58 ^ $61; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $5 = $62; //@line 67 "./src/cpp/unrar/crypt2.cpp"
 $63 = $3; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $64 = ((($63)) + 8|0); //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $65 = HEAP8[$64>>0]|0; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $66 = $65&255; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $67 = $3; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $68 = ((($67)) + 9|0); //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $69 = HEAP8[$68>>0]|0; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $70 = $69&255; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $71 = $70 << 8; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $72 = $66 | $71; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $73 = $3; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $74 = ((($73)) + 10|0); //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $75 = HEAP8[$74>>0]|0; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $76 = $75&255; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $77 = $76 << 16; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $78 = $72 | $77; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $79 = $3; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $80 = ((($79)) + 11|0); //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $81 = HEAP8[$80>>0]|0; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $82 = $81&255; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $83 = $82 << 24; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $84 = $78 | $83; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $85 = ((($12)) + 6324|0); //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $86 = ((($85)) + 8|0); //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $87 = HEAP32[$86>>2]|0; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $88 = $84 ^ $87; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $6 = $88; //@line 68 "./src/cpp/unrar/crypt2.cpp"
 $89 = $3; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $90 = ((($89)) + 12|0); //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $91 = HEAP8[$90>>0]|0; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $92 = $91&255; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $93 = $3; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $94 = ((($93)) + 13|0); //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $95 = HEAP8[$94>>0]|0; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $96 = $95&255; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $97 = $96 << 8; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $98 = $92 | $97; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $99 = $3; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $100 = ((($99)) + 14|0); //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $101 = HEAP8[$100>>0]|0; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $102 = $101&255; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $103 = $102 << 16; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $104 = $98 | $103; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $105 = $3; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $106 = ((($105)) + 15|0); //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $107 = HEAP8[$106>>0]|0; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $108 = $107&255; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $109 = $108 << 24; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $110 = $104 | $109; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $111 = ((($12)) + 6324|0); //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $112 = ((($111)) + 12|0); //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $113 = HEAP32[$112>>2]|0; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $114 = $110 ^ $113; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $7 = $114; //@line 69 "./src/cpp/unrar/crypt2.cpp"
 $11 = 0; //@line 77 "./src/cpp/unrar/crypt2.cpp"
 while(1) {
  $115 = $11; //@line 77 "./src/cpp/unrar/crypt2.cpp"
  $116 = ($115|0)<(32); //@line 77 "./src/cpp/unrar/crypt2.cpp"
  if (!($116)) {
   break;
  }
  $117 = $6; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $118 = $7; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $119 = $118 << 11; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $120 = $7; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $121 = $120 >>> 21; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $122 = $119 | $121; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $123 = (($117) + ($122))|0; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $124 = ((($12)) + 6324|0); //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $125 = $11; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $126 = $125 & 3; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $127 = (($124) + ($126<<2)|0); //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $128 = HEAP32[$127>>2]|0; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $129 = $123 ^ $128; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $8 = $129; //@line 79 "./src/cpp/unrar/crypt2.cpp"
  $130 = $4; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $131 = ((($12)) + 6068|0); //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $132 = $8; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $133 = $132 & 255; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $134 = (($131) + ($133)|0); //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $135 = HEAP8[$134>>0]|0; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $136 = $135&255; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $137 = ((($12)) + 6068|0); //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $138 = $8; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $139 = $138 >>> 8; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $140 = $139 & 255; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $141 = (($137) + ($140)|0); //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $142 = HEAP8[$141>>0]|0; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $143 = $142&255; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $144 = $143 << 8; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $145 = $136 | $144; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $146 = ((($12)) + 6068|0); //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $147 = $8; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $148 = $147 >>> 16; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $149 = $148 & 255; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $150 = (($146) + ($149)|0); //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $151 = HEAP8[$150>>0]|0; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $152 = $151&255; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $153 = $152 << 16; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $154 = $145 | $153; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $155 = ((($12)) + 6068|0); //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $156 = $8; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $157 = $156 >>> 24; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $158 = $157 & 255; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $159 = (($155) + ($158)|0); //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $160 = HEAP8[$159>>0]|0; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $161 = $160&255; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $162 = $161 << 24; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $163 = $154 | $162; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $164 = $130 ^ $163; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $9 = $164; //@line 80 "./src/cpp/unrar/crypt2.cpp"
  $165 = $7; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $166 = $6; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $167 = $166 << 17; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $168 = $6; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $169 = $168 >>> 15; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $170 = $167 | $169; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $171 = $165 ^ $170; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $172 = ((($12)) + 6324|0); //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $173 = $11; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $174 = $173 & 3; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $175 = (($172) + ($174<<2)|0); //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $176 = HEAP32[$175>>2]|0; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $177 = (($171) + ($176))|0; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $8 = $177; //@line 81 "./src/cpp/unrar/crypt2.cpp"
  $178 = $5; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $179 = ((($12)) + 6068|0); //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $180 = $8; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $181 = $180 & 255; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $182 = (($179) + ($181)|0); //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $183 = HEAP8[$182>>0]|0; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $184 = $183&255; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $185 = ((($12)) + 6068|0); //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $186 = $8; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $187 = $186 >>> 8; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $188 = $187 & 255; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $189 = (($185) + ($188)|0); //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $190 = HEAP8[$189>>0]|0; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $191 = $190&255; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $192 = $191 << 8; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $193 = $184 | $192; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $194 = ((($12)) + 6068|0); //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $195 = $8; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $196 = $195 >>> 16; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $197 = $196 & 255; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $198 = (($194) + ($197)|0); //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $199 = HEAP8[$198>>0]|0; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $200 = $199&255; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $201 = $200 << 16; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $202 = $193 | $201; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $203 = ((($12)) + 6068|0); //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $204 = $8; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $205 = $204 >>> 24; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $206 = $205 & 255; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $207 = (($203) + ($206)|0); //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $208 = HEAP8[$207>>0]|0; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $209 = $208&255; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $210 = $209 << 24; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $211 = $202 | $210; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $212 = $178 ^ $211; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $10 = $212; //@line 82 "./src/cpp/unrar/crypt2.cpp"
  $213 = $6; //@line 83 "./src/cpp/unrar/crypt2.cpp"
  $4 = $213; //@line 83 "./src/cpp/unrar/crypt2.cpp"
  $214 = $7; //@line 84 "./src/cpp/unrar/crypt2.cpp"
  $5 = $214; //@line 84 "./src/cpp/unrar/crypt2.cpp"
  $215 = $9; //@line 85 "./src/cpp/unrar/crypt2.cpp"
  $6 = $215; //@line 85 "./src/cpp/unrar/crypt2.cpp"
  $216 = $10; //@line 86 "./src/cpp/unrar/crypt2.cpp"
  $7 = $216; //@line 86 "./src/cpp/unrar/crypt2.cpp"
  $217 = $11; //@line 77 "./src/cpp/unrar/crypt2.cpp"
  $218 = (($217) + 1)|0; //@line 77 "./src/cpp/unrar/crypt2.cpp"
  $11 = $218; //@line 77 "./src/cpp/unrar/crypt2.cpp"
 }
 $219 = ((($12)) + 6324|0); //@line 89 "./src/cpp/unrar/crypt2.cpp"
 $220 = HEAP32[$219>>2]|0; //@line 89 "./src/cpp/unrar/crypt2.cpp"
 $221 = $6; //@line 89 "./src/cpp/unrar/crypt2.cpp"
 $222 = $221 ^ $220; //@line 89 "./src/cpp/unrar/crypt2.cpp"
 $6 = $222; //@line 89 "./src/cpp/unrar/crypt2.cpp"
 $223 = $6; //@line 90 "./src/cpp/unrar/crypt2.cpp"
 $224 = $223&255; //@line 90 "./src/cpp/unrar/crypt2.cpp"
 $225 = $3; //@line 90 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$225>>0] = $224; //@line 90 "./src/cpp/unrar/crypt2.cpp"
 $226 = $6; //@line 91 "./src/cpp/unrar/crypt2.cpp"
 $227 = $226 >>> 8; //@line 91 "./src/cpp/unrar/crypt2.cpp"
 $228 = $227&255; //@line 91 "./src/cpp/unrar/crypt2.cpp"
 $229 = $3; //@line 91 "./src/cpp/unrar/crypt2.cpp"
 $230 = ((($229)) + 1|0); //@line 91 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$230>>0] = $228; //@line 91 "./src/cpp/unrar/crypt2.cpp"
 $231 = $6; //@line 92 "./src/cpp/unrar/crypt2.cpp"
 $232 = $231 >>> 16; //@line 92 "./src/cpp/unrar/crypt2.cpp"
 $233 = $232&255; //@line 92 "./src/cpp/unrar/crypt2.cpp"
 $234 = $3; //@line 92 "./src/cpp/unrar/crypt2.cpp"
 $235 = ((($234)) + 2|0); //@line 92 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$235>>0] = $233; //@line 92 "./src/cpp/unrar/crypt2.cpp"
 $236 = $6; //@line 93 "./src/cpp/unrar/crypt2.cpp"
 $237 = $236 >>> 24; //@line 93 "./src/cpp/unrar/crypt2.cpp"
 $238 = $237&255; //@line 93 "./src/cpp/unrar/crypt2.cpp"
 $239 = $3; //@line 93 "./src/cpp/unrar/crypt2.cpp"
 $240 = ((($239)) + 3|0); //@line 93 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$240>>0] = $238; //@line 93 "./src/cpp/unrar/crypt2.cpp"
 $241 = ((($12)) + 6324|0); //@line 94 "./src/cpp/unrar/crypt2.cpp"
 $242 = ((($241)) + 4|0); //@line 94 "./src/cpp/unrar/crypt2.cpp"
 $243 = HEAP32[$242>>2]|0; //@line 94 "./src/cpp/unrar/crypt2.cpp"
 $244 = $7; //@line 94 "./src/cpp/unrar/crypt2.cpp"
 $245 = $244 ^ $243; //@line 94 "./src/cpp/unrar/crypt2.cpp"
 $7 = $245; //@line 94 "./src/cpp/unrar/crypt2.cpp"
 $246 = $7; //@line 95 "./src/cpp/unrar/crypt2.cpp"
 $247 = $246&255; //@line 95 "./src/cpp/unrar/crypt2.cpp"
 $248 = $3; //@line 95 "./src/cpp/unrar/crypt2.cpp"
 $249 = ((($248)) + 4|0); //@line 95 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$249>>0] = $247; //@line 95 "./src/cpp/unrar/crypt2.cpp"
 $250 = $7; //@line 96 "./src/cpp/unrar/crypt2.cpp"
 $251 = $250 >>> 8; //@line 96 "./src/cpp/unrar/crypt2.cpp"
 $252 = $251&255; //@line 96 "./src/cpp/unrar/crypt2.cpp"
 $253 = $3; //@line 96 "./src/cpp/unrar/crypt2.cpp"
 $254 = ((($253)) + 5|0); //@line 96 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$254>>0] = $252; //@line 96 "./src/cpp/unrar/crypt2.cpp"
 $255 = $7; //@line 97 "./src/cpp/unrar/crypt2.cpp"
 $256 = $255 >>> 16; //@line 97 "./src/cpp/unrar/crypt2.cpp"
 $257 = $256&255; //@line 97 "./src/cpp/unrar/crypt2.cpp"
 $258 = $3; //@line 97 "./src/cpp/unrar/crypt2.cpp"
 $259 = ((($258)) + 6|0); //@line 97 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$259>>0] = $257; //@line 97 "./src/cpp/unrar/crypt2.cpp"
 $260 = $7; //@line 98 "./src/cpp/unrar/crypt2.cpp"
 $261 = $260 >>> 24; //@line 98 "./src/cpp/unrar/crypt2.cpp"
 $262 = $261&255; //@line 98 "./src/cpp/unrar/crypt2.cpp"
 $263 = $3; //@line 98 "./src/cpp/unrar/crypt2.cpp"
 $264 = ((($263)) + 7|0); //@line 98 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$264>>0] = $262; //@line 98 "./src/cpp/unrar/crypt2.cpp"
 $265 = ((($12)) + 6324|0); //@line 99 "./src/cpp/unrar/crypt2.cpp"
 $266 = ((($265)) + 8|0); //@line 99 "./src/cpp/unrar/crypt2.cpp"
 $267 = HEAP32[$266>>2]|0; //@line 99 "./src/cpp/unrar/crypt2.cpp"
 $268 = $4; //@line 99 "./src/cpp/unrar/crypt2.cpp"
 $269 = $268 ^ $267; //@line 99 "./src/cpp/unrar/crypt2.cpp"
 $4 = $269; //@line 99 "./src/cpp/unrar/crypt2.cpp"
 $270 = $4; //@line 100 "./src/cpp/unrar/crypt2.cpp"
 $271 = $270&255; //@line 100 "./src/cpp/unrar/crypt2.cpp"
 $272 = $3; //@line 100 "./src/cpp/unrar/crypt2.cpp"
 $273 = ((($272)) + 8|0); //@line 100 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$273>>0] = $271; //@line 100 "./src/cpp/unrar/crypt2.cpp"
 $274 = $4; //@line 101 "./src/cpp/unrar/crypt2.cpp"
 $275 = $274 >>> 8; //@line 101 "./src/cpp/unrar/crypt2.cpp"
 $276 = $275&255; //@line 101 "./src/cpp/unrar/crypt2.cpp"
 $277 = $3; //@line 101 "./src/cpp/unrar/crypt2.cpp"
 $278 = ((($277)) + 9|0); //@line 101 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$278>>0] = $276; //@line 101 "./src/cpp/unrar/crypt2.cpp"
 $279 = $4; //@line 102 "./src/cpp/unrar/crypt2.cpp"
 $280 = $279 >>> 16; //@line 102 "./src/cpp/unrar/crypt2.cpp"
 $281 = $280&255; //@line 102 "./src/cpp/unrar/crypt2.cpp"
 $282 = $3; //@line 102 "./src/cpp/unrar/crypt2.cpp"
 $283 = ((($282)) + 10|0); //@line 102 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$283>>0] = $281; //@line 102 "./src/cpp/unrar/crypt2.cpp"
 $284 = $4; //@line 103 "./src/cpp/unrar/crypt2.cpp"
 $285 = $284 >>> 24; //@line 103 "./src/cpp/unrar/crypt2.cpp"
 $286 = $285&255; //@line 103 "./src/cpp/unrar/crypt2.cpp"
 $287 = $3; //@line 103 "./src/cpp/unrar/crypt2.cpp"
 $288 = ((($287)) + 11|0); //@line 103 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$288>>0] = $286; //@line 103 "./src/cpp/unrar/crypt2.cpp"
 $289 = ((($12)) + 6324|0); //@line 104 "./src/cpp/unrar/crypt2.cpp"
 $290 = ((($289)) + 12|0); //@line 104 "./src/cpp/unrar/crypt2.cpp"
 $291 = HEAP32[$290>>2]|0; //@line 104 "./src/cpp/unrar/crypt2.cpp"
 $292 = $5; //@line 104 "./src/cpp/unrar/crypt2.cpp"
 $293 = $292 ^ $291; //@line 104 "./src/cpp/unrar/crypt2.cpp"
 $5 = $293; //@line 104 "./src/cpp/unrar/crypt2.cpp"
 $294 = $5; //@line 105 "./src/cpp/unrar/crypt2.cpp"
 $295 = $294&255; //@line 105 "./src/cpp/unrar/crypt2.cpp"
 $296 = $3; //@line 105 "./src/cpp/unrar/crypt2.cpp"
 $297 = ((($296)) + 12|0); //@line 105 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$297>>0] = $295; //@line 105 "./src/cpp/unrar/crypt2.cpp"
 $298 = $5; //@line 106 "./src/cpp/unrar/crypt2.cpp"
 $299 = $298 >>> 8; //@line 106 "./src/cpp/unrar/crypt2.cpp"
 $300 = $299&255; //@line 106 "./src/cpp/unrar/crypt2.cpp"
 $301 = $3; //@line 106 "./src/cpp/unrar/crypt2.cpp"
 $302 = ((($301)) + 13|0); //@line 106 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$302>>0] = $300; //@line 106 "./src/cpp/unrar/crypt2.cpp"
 $303 = $5; //@line 107 "./src/cpp/unrar/crypt2.cpp"
 $304 = $303 >>> 16; //@line 107 "./src/cpp/unrar/crypt2.cpp"
 $305 = $304&255; //@line 107 "./src/cpp/unrar/crypt2.cpp"
 $306 = $3; //@line 107 "./src/cpp/unrar/crypt2.cpp"
 $307 = ((($306)) + 14|0); //@line 107 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$307>>0] = $305; //@line 107 "./src/cpp/unrar/crypt2.cpp"
 $308 = $5; //@line 108 "./src/cpp/unrar/crypt2.cpp"
 $309 = $308 >>> 24; //@line 108 "./src/cpp/unrar/crypt2.cpp"
 $310 = $309&255; //@line 108 "./src/cpp/unrar/crypt2.cpp"
 $311 = $3; //@line 108 "./src/cpp/unrar/crypt2.cpp"
 $312 = ((($311)) + 15|0); //@line 108 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$312>>0] = $310; //@line 108 "./src/cpp/unrar/crypt2.cpp"
 $313 = $3; //@line 115 "./src/cpp/unrar/crypt2.cpp"
 __ZN9CryptData9UpdKeys20EPh($12,$313); //@line 115 "./src/cpp/unrar/crypt2.cpp"
 STACKTOP = sp;return; //@line 116 "./src/cpp/unrar/crypt2.cpp"
}
function __ZN9CryptData9UpdKeys20EPh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $4 = 0; //@line 180 "./src/cpp/unrar/crypt2.cpp"
 while(1) {
  $6 = $4; //@line 180 "./src/cpp/unrar/crypt2.cpp"
  $7 = ($6|0)<(16); //@line 180 "./src/cpp/unrar/crypt2.cpp"
  if (!($7)) {
   break;
  }
  $8 = ((($5)) + 5044|0); //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $9 = $3; //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $10 = $4; //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $11 = (($9) + ($10)|0); //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $12 = HEAP8[$11>>0]|0; //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $13 = $12&255; //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $14 = (($8) + ($13<<2)|0); //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $16 = ((($5)) + 6324|0); //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $17 = HEAP32[$16>>2]|0; //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $18 = $17 ^ $15; //@line 182 "./src/cpp/unrar/crypt2.cpp"
  HEAP32[$16>>2] = $18; //@line 182 "./src/cpp/unrar/crypt2.cpp"
  $19 = ((($5)) + 5044|0); //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $20 = $3; //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $21 = $4; //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $22 = (($21) + 1)|0; //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $23 = (($20) + ($22)|0); //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $24 = HEAP8[$23>>0]|0; //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $25 = $24&255; //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $26 = (($19) + ($25<<2)|0); //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $27 = HEAP32[$26>>2]|0; //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $28 = ((($5)) + 6324|0); //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $29 = ((($28)) + 4|0); //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $30 = HEAP32[$29>>2]|0; //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $31 = $30 ^ $27; //@line 183 "./src/cpp/unrar/crypt2.cpp"
  HEAP32[$29>>2] = $31; //@line 183 "./src/cpp/unrar/crypt2.cpp"
  $32 = ((($5)) + 5044|0); //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $33 = $3; //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $34 = $4; //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $35 = (($34) + 2)|0; //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $36 = (($33) + ($35)|0); //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $37 = HEAP8[$36>>0]|0; //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $38 = $37&255; //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $39 = (($32) + ($38<<2)|0); //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $40 = HEAP32[$39>>2]|0; //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $41 = ((($5)) + 6324|0); //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $42 = ((($41)) + 8|0); //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $43 = HEAP32[$42>>2]|0; //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $44 = $43 ^ $40; //@line 184 "./src/cpp/unrar/crypt2.cpp"
  HEAP32[$42>>2] = $44; //@line 184 "./src/cpp/unrar/crypt2.cpp"
  $45 = ((($5)) + 5044|0); //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $46 = $3; //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $47 = $4; //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $48 = (($47) + 3)|0; //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $49 = (($46) + ($48)|0); //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $50 = HEAP8[$49>>0]|0; //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $51 = $50&255; //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $52 = (($45) + ($51<<2)|0); //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $53 = HEAP32[$52>>2]|0; //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $54 = ((($5)) + 6324|0); //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $55 = ((($54)) + 12|0); //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $56 = HEAP32[$55>>2]|0; //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $57 = $56 ^ $53; //@line 185 "./src/cpp/unrar/crypt2.cpp"
  HEAP32[$55>>2] = $57; //@line 185 "./src/cpp/unrar/crypt2.cpp"
  $58 = $4; //@line 180 "./src/cpp/unrar/crypt2.cpp"
  $59 = (($58) + 4)|0; //@line 180 "./src/cpp/unrar/crypt2.cpp"
  $4 = $59; //@line 180 "./src/cpp/unrar/crypt2.cpp"
 }
 STACKTOP = sp;return; //@line 187 "./src/cpp/unrar/crypt2.cpp"
}
function __ZN9CryptData14DecryptBlock20EPh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp + 40|0;
 $2 = $0;
 $3 = $1;
 $13 = $2;
 $14 = $3; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $15 = HEAP8[$14>>0]|0; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $16 = $15&255; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $17 = $3; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $18 = ((($17)) + 1|0); //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $19 = HEAP8[$18>>0]|0; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $20 = $19&255; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $21 = $20 << 8; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $22 = $16 | $21; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $23 = $3; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $24 = ((($23)) + 2|0); //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $25 = HEAP8[$24>>0]|0; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $26 = $25&255; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $27 = $26 << 16; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $28 = $22 | $27; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $29 = $3; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $30 = ((($29)) + 3|0); //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $31 = HEAP8[$30>>0]|0; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $32 = $31&255; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $33 = $32 << 24; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $34 = $28 | $33; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $35 = ((($13)) + 6324|0); //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $36 = HEAP32[$35>>2]|0; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $37 = $34 ^ $36; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $5 = $37; //@line 124 "./src/cpp/unrar/crypt2.cpp"
 $38 = $3; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $39 = ((($38)) + 4|0); //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $40 = HEAP8[$39>>0]|0; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $41 = $40&255; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $42 = $3; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $43 = ((($42)) + 5|0); //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $44 = HEAP8[$43>>0]|0; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $45 = $44&255; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $46 = $45 << 8; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $47 = $41 | $46; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $48 = $3; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $49 = ((($48)) + 6|0); //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $50 = HEAP8[$49>>0]|0; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $51 = $50&255; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $52 = $51 << 16; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $53 = $47 | $52; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $54 = $3; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $55 = ((($54)) + 7|0); //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $56 = HEAP8[$55>>0]|0; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $57 = $56&255; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $58 = $57 << 24; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $59 = $53 | $58; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $60 = ((($13)) + 6324|0); //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $61 = ((($60)) + 4|0); //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $62 = HEAP32[$61>>2]|0; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $63 = $59 ^ $62; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $6 = $63; //@line 125 "./src/cpp/unrar/crypt2.cpp"
 $64 = $3; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $65 = ((($64)) + 8|0); //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $66 = HEAP8[$65>>0]|0; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $67 = $66&255; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $68 = $3; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $69 = ((($68)) + 9|0); //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $70 = HEAP8[$69>>0]|0; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $71 = $70&255; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $72 = $71 << 8; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $73 = $67 | $72; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $74 = $3; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $75 = ((($74)) + 10|0); //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $76 = HEAP8[$75>>0]|0; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $77 = $76&255; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $78 = $77 << 16; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $79 = $73 | $78; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $80 = $3; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $81 = ((($80)) + 11|0); //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $82 = HEAP8[$81>>0]|0; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $83 = $82&255; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $84 = $83 << 24; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $85 = $79 | $84; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $86 = ((($13)) + 6324|0); //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $87 = ((($86)) + 8|0); //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $88 = HEAP32[$87>>2]|0; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $89 = $85 ^ $88; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $7 = $89; //@line 126 "./src/cpp/unrar/crypt2.cpp"
 $90 = $3; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $91 = ((($90)) + 12|0); //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $92 = HEAP8[$91>>0]|0; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $93 = $92&255; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $94 = $3; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $95 = ((($94)) + 13|0); //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $96 = HEAP8[$95>>0]|0; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $97 = $96&255; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $98 = $97 << 8; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $99 = $93 | $98; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $100 = $3; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $101 = ((($100)) + 14|0); //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $102 = HEAP8[$101>>0]|0; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $103 = $102&255; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $104 = $103 << 16; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $105 = $99 | $104; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $106 = $3; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $107 = ((($106)) + 15|0); //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $108 = HEAP8[$107>>0]|0; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $109 = $108&255; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $110 = $109 << 24; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $111 = $105 | $110; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $112 = ((($13)) + 6324|0); //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $113 = ((($112)) + 12|0); //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $114 = HEAP32[$113>>2]|0; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $115 = $111 ^ $114; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $8 = $115; //@line 127 "./src/cpp/unrar/crypt2.cpp"
 $116 = $3; //@line 135 "./src/cpp/unrar/crypt2.cpp"
 dest=$4; src=$116; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 135 "./src/cpp/unrar/crypt2.cpp"
 $12 = 31; //@line 136 "./src/cpp/unrar/crypt2.cpp"
 while(1) {
  $117 = $12; //@line 136 "./src/cpp/unrar/crypt2.cpp"
  $118 = ($117|0)>=(0); //@line 136 "./src/cpp/unrar/crypt2.cpp"
  if (!($118)) {
   break;
  }
  $119 = $7; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $120 = $8; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $121 = $120 << 11; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $122 = $8; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $123 = $122 >>> 21; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $124 = $121 | $123; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $125 = (($119) + ($124))|0; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $126 = ((($13)) + 6324|0); //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $127 = $12; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $128 = $127 & 3; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $129 = (($126) + ($128<<2)|0); //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $130 = HEAP32[$129>>2]|0; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $131 = $125 ^ $130; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $9 = $131; //@line 138 "./src/cpp/unrar/crypt2.cpp"
  $132 = $5; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $133 = ((($13)) + 6068|0); //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $134 = $9; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $135 = $134 & 255; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $136 = (($133) + ($135)|0); //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $137 = HEAP8[$136>>0]|0; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $138 = $137&255; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $139 = ((($13)) + 6068|0); //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $140 = $9; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $141 = $140 >>> 8; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $142 = $141 & 255; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $143 = (($139) + ($142)|0); //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $144 = HEAP8[$143>>0]|0; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $145 = $144&255; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $146 = $145 << 8; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $147 = $138 | $146; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $148 = ((($13)) + 6068|0); //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $149 = $9; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $150 = $149 >>> 16; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $151 = $150 & 255; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $152 = (($148) + ($151)|0); //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $153 = HEAP8[$152>>0]|0; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $154 = $153&255; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $155 = $154 << 16; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $156 = $147 | $155; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $157 = ((($13)) + 6068|0); //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $158 = $9; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $159 = $158 >>> 24; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $160 = $159 & 255; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $161 = (($157) + ($160)|0); //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $162 = HEAP8[$161>>0]|0; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $163 = $162&255; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $164 = $163 << 24; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $165 = $156 | $164; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $166 = $132 ^ $165; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $10 = $166; //@line 139 "./src/cpp/unrar/crypt2.cpp"
  $167 = $8; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $168 = $7; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $169 = $168 << 17; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $170 = $7; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $171 = $170 >>> 15; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $172 = $169 | $171; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $173 = $167 ^ $172; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $174 = ((($13)) + 6324|0); //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $175 = $12; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $176 = $175 & 3; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $177 = (($174) + ($176<<2)|0); //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $178 = HEAP32[$177>>2]|0; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $179 = (($173) + ($178))|0; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $9 = $179; //@line 140 "./src/cpp/unrar/crypt2.cpp"
  $180 = $6; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $181 = ((($13)) + 6068|0); //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $182 = $9; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $183 = $182 & 255; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $184 = (($181) + ($183)|0); //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $185 = HEAP8[$184>>0]|0; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $186 = $185&255; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $187 = ((($13)) + 6068|0); //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $188 = $9; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $189 = $188 >>> 8; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $190 = $189 & 255; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $191 = (($187) + ($190)|0); //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $192 = HEAP8[$191>>0]|0; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $193 = $192&255; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $194 = $193 << 8; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $195 = $186 | $194; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $196 = ((($13)) + 6068|0); //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $197 = $9; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $198 = $197 >>> 16; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $199 = $198 & 255; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $200 = (($196) + ($199)|0); //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $201 = HEAP8[$200>>0]|0; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $202 = $201&255; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $203 = $202 << 16; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $204 = $195 | $203; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $205 = ((($13)) + 6068|0); //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $206 = $9; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $207 = $206 >>> 24; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $208 = $207 & 255; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $209 = (($205) + ($208)|0); //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $210 = HEAP8[$209>>0]|0; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $211 = $210&255; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $212 = $211 << 24; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $213 = $204 | $212; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $214 = $180 ^ $213; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $11 = $214; //@line 141 "./src/cpp/unrar/crypt2.cpp"
  $215 = $7; //@line 142 "./src/cpp/unrar/crypt2.cpp"
  $5 = $215; //@line 142 "./src/cpp/unrar/crypt2.cpp"
  $216 = $8; //@line 143 "./src/cpp/unrar/crypt2.cpp"
  $6 = $216; //@line 143 "./src/cpp/unrar/crypt2.cpp"
  $217 = $10; //@line 144 "./src/cpp/unrar/crypt2.cpp"
  $7 = $217; //@line 144 "./src/cpp/unrar/crypt2.cpp"
  $218 = $11; //@line 145 "./src/cpp/unrar/crypt2.cpp"
  $8 = $218; //@line 145 "./src/cpp/unrar/crypt2.cpp"
  $219 = $12; //@line 136 "./src/cpp/unrar/crypt2.cpp"
  $220 = (($219) + -1)|0; //@line 136 "./src/cpp/unrar/crypt2.cpp"
  $12 = $220; //@line 136 "./src/cpp/unrar/crypt2.cpp"
 }
 $221 = ((($13)) + 6324|0); //@line 148 "./src/cpp/unrar/crypt2.cpp"
 $222 = HEAP32[$221>>2]|0; //@line 148 "./src/cpp/unrar/crypt2.cpp"
 $223 = $7; //@line 148 "./src/cpp/unrar/crypt2.cpp"
 $224 = $223 ^ $222; //@line 148 "./src/cpp/unrar/crypt2.cpp"
 $7 = $224; //@line 148 "./src/cpp/unrar/crypt2.cpp"
 $225 = $7; //@line 149 "./src/cpp/unrar/crypt2.cpp"
 $226 = $225&255; //@line 149 "./src/cpp/unrar/crypt2.cpp"
 $227 = $3; //@line 149 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$227>>0] = $226; //@line 149 "./src/cpp/unrar/crypt2.cpp"
 $228 = $7; //@line 150 "./src/cpp/unrar/crypt2.cpp"
 $229 = $228 >>> 8; //@line 150 "./src/cpp/unrar/crypt2.cpp"
 $230 = $229&255; //@line 150 "./src/cpp/unrar/crypt2.cpp"
 $231 = $3; //@line 150 "./src/cpp/unrar/crypt2.cpp"
 $232 = ((($231)) + 1|0); //@line 150 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$232>>0] = $230; //@line 150 "./src/cpp/unrar/crypt2.cpp"
 $233 = $7; //@line 151 "./src/cpp/unrar/crypt2.cpp"
 $234 = $233 >>> 16; //@line 151 "./src/cpp/unrar/crypt2.cpp"
 $235 = $234&255; //@line 151 "./src/cpp/unrar/crypt2.cpp"
 $236 = $3; //@line 151 "./src/cpp/unrar/crypt2.cpp"
 $237 = ((($236)) + 2|0); //@line 151 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$237>>0] = $235; //@line 151 "./src/cpp/unrar/crypt2.cpp"
 $238 = $7; //@line 152 "./src/cpp/unrar/crypt2.cpp"
 $239 = $238 >>> 24; //@line 152 "./src/cpp/unrar/crypt2.cpp"
 $240 = $239&255; //@line 152 "./src/cpp/unrar/crypt2.cpp"
 $241 = $3; //@line 152 "./src/cpp/unrar/crypt2.cpp"
 $242 = ((($241)) + 3|0); //@line 152 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$242>>0] = $240; //@line 152 "./src/cpp/unrar/crypt2.cpp"
 $243 = ((($13)) + 6324|0); //@line 153 "./src/cpp/unrar/crypt2.cpp"
 $244 = ((($243)) + 4|0); //@line 153 "./src/cpp/unrar/crypt2.cpp"
 $245 = HEAP32[$244>>2]|0; //@line 153 "./src/cpp/unrar/crypt2.cpp"
 $246 = $8; //@line 153 "./src/cpp/unrar/crypt2.cpp"
 $247 = $246 ^ $245; //@line 153 "./src/cpp/unrar/crypt2.cpp"
 $8 = $247; //@line 153 "./src/cpp/unrar/crypt2.cpp"
 $248 = $8; //@line 154 "./src/cpp/unrar/crypt2.cpp"
 $249 = $248&255; //@line 154 "./src/cpp/unrar/crypt2.cpp"
 $250 = $3; //@line 154 "./src/cpp/unrar/crypt2.cpp"
 $251 = ((($250)) + 4|0); //@line 154 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$251>>0] = $249; //@line 154 "./src/cpp/unrar/crypt2.cpp"
 $252 = $8; //@line 155 "./src/cpp/unrar/crypt2.cpp"
 $253 = $252 >>> 8; //@line 155 "./src/cpp/unrar/crypt2.cpp"
 $254 = $253&255; //@line 155 "./src/cpp/unrar/crypt2.cpp"
 $255 = $3; //@line 155 "./src/cpp/unrar/crypt2.cpp"
 $256 = ((($255)) + 5|0); //@line 155 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$256>>0] = $254; //@line 155 "./src/cpp/unrar/crypt2.cpp"
 $257 = $8; //@line 156 "./src/cpp/unrar/crypt2.cpp"
 $258 = $257 >>> 16; //@line 156 "./src/cpp/unrar/crypt2.cpp"
 $259 = $258&255; //@line 156 "./src/cpp/unrar/crypt2.cpp"
 $260 = $3; //@line 156 "./src/cpp/unrar/crypt2.cpp"
 $261 = ((($260)) + 6|0); //@line 156 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$261>>0] = $259; //@line 156 "./src/cpp/unrar/crypt2.cpp"
 $262 = $8; //@line 157 "./src/cpp/unrar/crypt2.cpp"
 $263 = $262 >>> 24; //@line 157 "./src/cpp/unrar/crypt2.cpp"
 $264 = $263&255; //@line 157 "./src/cpp/unrar/crypt2.cpp"
 $265 = $3; //@line 157 "./src/cpp/unrar/crypt2.cpp"
 $266 = ((($265)) + 7|0); //@line 157 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$266>>0] = $264; //@line 157 "./src/cpp/unrar/crypt2.cpp"
 $267 = ((($13)) + 6324|0); //@line 158 "./src/cpp/unrar/crypt2.cpp"
 $268 = ((($267)) + 8|0); //@line 158 "./src/cpp/unrar/crypt2.cpp"
 $269 = HEAP32[$268>>2]|0; //@line 158 "./src/cpp/unrar/crypt2.cpp"
 $270 = $5; //@line 158 "./src/cpp/unrar/crypt2.cpp"
 $271 = $270 ^ $269; //@line 158 "./src/cpp/unrar/crypt2.cpp"
 $5 = $271; //@line 158 "./src/cpp/unrar/crypt2.cpp"
 $272 = $5; //@line 159 "./src/cpp/unrar/crypt2.cpp"
 $273 = $272&255; //@line 159 "./src/cpp/unrar/crypt2.cpp"
 $274 = $3; //@line 159 "./src/cpp/unrar/crypt2.cpp"
 $275 = ((($274)) + 8|0); //@line 159 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$275>>0] = $273; //@line 159 "./src/cpp/unrar/crypt2.cpp"
 $276 = $5; //@line 160 "./src/cpp/unrar/crypt2.cpp"
 $277 = $276 >>> 8; //@line 160 "./src/cpp/unrar/crypt2.cpp"
 $278 = $277&255; //@line 160 "./src/cpp/unrar/crypt2.cpp"
 $279 = $3; //@line 160 "./src/cpp/unrar/crypt2.cpp"
 $280 = ((($279)) + 9|0); //@line 160 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$280>>0] = $278; //@line 160 "./src/cpp/unrar/crypt2.cpp"
 $281 = $5; //@line 161 "./src/cpp/unrar/crypt2.cpp"
 $282 = $281 >>> 16; //@line 161 "./src/cpp/unrar/crypt2.cpp"
 $283 = $282&255; //@line 161 "./src/cpp/unrar/crypt2.cpp"
 $284 = $3; //@line 161 "./src/cpp/unrar/crypt2.cpp"
 $285 = ((($284)) + 10|0); //@line 161 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$285>>0] = $283; //@line 161 "./src/cpp/unrar/crypt2.cpp"
 $286 = $5; //@line 162 "./src/cpp/unrar/crypt2.cpp"
 $287 = $286 >>> 24; //@line 162 "./src/cpp/unrar/crypt2.cpp"
 $288 = $287&255; //@line 162 "./src/cpp/unrar/crypt2.cpp"
 $289 = $3; //@line 162 "./src/cpp/unrar/crypt2.cpp"
 $290 = ((($289)) + 11|0); //@line 162 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$290>>0] = $288; //@line 162 "./src/cpp/unrar/crypt2.cpp"
 $291 = ((($13)) + 6324|0); //@line 163 "./src/cpp/unrar/crypt2.cpp"
 $292 = ((($291)) + 12|0); //@line 163 "./src/cpp/unrar/crypt2.cpp"
 $293 = HEAP32[$292>>2]|0; //@line 163 "./src/cpp/unrar/crypt2.cpp"
 $294 = $6; //@line 163 "./src/cpp/unrar/crypt2.cpp"
 $295 = $294 ^ $293; //@line 163 "./src/cpp/unrar/crypt2.cpp"
 $6 = $295; //@line 163 "./src/cpp/unrar/crypt2.cpp"
 $296 = $6; //@line 164 "./src/cpp/unrar/crypt2.cpp"
 $297 = $296&255; //@line 164 "./src/cpp/unrar/crypt2.cpp"
 $298 = $3; //@line 164 "./src/cpp/unrar/crypt2.cpp"
 $299 = ((($298)) + 12|0); //@line 164 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$299>>0] = $297; //@line 164 "./src/cpp/unrar/crypt2.cpp"
 $300 = $6; //@line 165 "./src/cpp/unrar/crypt2.cpp"
 $301 = $300 >>> 8; //@line 165 "./src/cpp/unrar/crypt2.cpp"
 $302 = $301&255; //@line 165 "./src/cpp/unrar/crypt2.cpp"
 $303 = $3; //@line 165 "./src/cpp/unrar/crypt2.cpp"
 $304 = ((($303)) + 13|0); //@line 165 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$304>>0] = $302; //@line 165 "./src/cpp/unrar/crypt2.cpp"
 $305 = $6; //@line 166 "./src/cpp/unrar/crypt2.cpp"
 $306 = $305 >>> 16; //@line 166 "./src/cpp/unrar/crypt2.cpp"
 $307 = $306&255; //@line 166 "./src/cpp/unrar/crypt2.cpp"
 $308 = $3; //@line 166 "./src/cpp/unrar/crypt2.cpp"
 $309 = ((($308)) + 14|0); //@line 166 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$309>>0] = $307; //@line 166 "./src/cpp/unrar/crypt2.cpp"
 $310 = $6; //@line 167 "./src/cpp/unrar/crypt2.cpp"
 $311 = $310 >>> 24; //@line 167 "./src/cpp/unrar/crypt2.cpp"
 $312 = $311&255; //@line 167 "./src/cpp/unrar/crypt2.cpp"
 $313 = $3; //@line 167 "./src/cpp/unrar/crypt2.cpp"
 $314 = ((($313)) + 15|0); //@line 167 "./src/cpp/unrar/crypt2.cpp"
 HEAP8[$314>>0] = $312; //@line 167 "./src/cpp/unrar/crypt2.cpp"
 __ZN9CryptData9UpdKeys20EPh($13,$4); //@line 174 "./src/cpp/unrar/crypt2.cpp"
 STACKTOP = sp;return; //@line 175 "./src/cpp/unrar/crypt2.cpp"
}
function __ZN9CryptData8SetKey30EbP11SecPasswordPKwPKh($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 720|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(720|0);
 $10 = sp + 688|0;
 $11 = sp + 672|0;
 $14 = sp + 400|0;
 $16 = sp + 212|0;
 $19 = sp + 392|0;
 $20 = sp + 48|0;
 $21 = sp + 28|0;
 $22 = sp + 8|0;
 $5 = $0;
 $25 = $1&1;
 $6 = $25;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $26 = $5;
 $12 = 0; //@line 5 "./src/cpp/unrar/crypt3.cpp"
 $13 = 0; //@line 6 "./src/cpp/unrar/crypt3.cpp"
 while(1) {
  $27 = $13; //@line 6 "./src/cpp/unrar/crypt3.cpp"
  $28 = ($27>>>0)<(4); //@line 6 "./src/cpp/unrar/crypt3.cpp"
  if (!($28)) {
   break;
  }
  $29 = $13; //@line 7 "./src/cpp/unrar/crypt3.cpp"
  $30 = (($26) + (($29*560)|0)|0); //@line 7 "./src/cpp/unrar/crypt3.cpp"
  $31 = $7; //@line 7 "./src/cpp/unrar/crypt3.cpp"
  $32 = (__ZN11SecPasswordeqERS_($30,$31)|0); //@line 7 "./src/cpp/unrar/crypt3.cpp"
  if ($32) {
   $33 = $9; //@line 8 "./src/cpp/unrar/crypt3.cpp"
   $34 = ($33|0)==(0|0); //@line 8 "./src/cpp/unrar/crypt3.cpp"
   if ($34) {
    $35 = $13; //@line 8 "./src/cpp/unrar/crypt3.cpp"
    $36 = (($26) + (($35*560)|0)|0); //@line 8 "./src/cpp/unrar/crypt3.cpp"
    $37 = ((($36)) + 556|0); //@line 8 "./src/cpp/unrar/crypt3.cpp"
    $38 = HEAP8[$37>>0]|0; //@line 8 "./src/cpp/unrar/crypt3.cpp"
    $39 = $38&1; //@line 8 "./src/cpp/unrar/crypt3.cpp"
    if (!($39)) {
     label = 9;
     break;
    }
   }
   $40 = $9; //@line 8 "./src/cpp/unrar/crypt3.cpp"
   $41 = ($40|0)!=(0|0); //@line 8 "./src/cpp/unrar/crypt3.cpp"
   if ($41) {
    $42 = $13; //@line 9 "./src/cpp/unrar/crypt3.cpp"
    $43 = (($26) + (($42*560)|0)|0); //@line 9 "./src/cpp/unrar/crypt3.cpp"
    $44 = ((($43)) + 556|0); //@line 9 "./src/cpp/unrar/crypt3.cpp"
    $45 = HEAP8[$44>>0]|0; //@line 9 "./src/cpp/unrar/crypt3.cpp"
    $46 = $45&1; //@line 9 "./src/cpp/unrar/crypt3.cpp"
    if ($46) {
     $47 = $13; //@line 9 "./src/cpp/unrar/crypt3.cpp"
     $48 = (($26) + (($47*560)|0)|0); //@line 9 "./src/cpp/unrar/crypt3.cpp"
     $49 = ((($48)) + 516|0); //@line 9 "./src/cpp/unrar/crypt3.cpp"
     $50 = $9; //@line 9 "./src/cpp/unrar/crypt3.cpp"
     $51 = (_memcmp($49,$50,8)|0); //@line 9 "./src/cpp/unrar/crypt3.cpp"
     $52 = ($51|0)==(0); //@line 9 "./src/cpp/unrar/crypt3.cpp"
     if ($52) {
      label = 9;
      break;
     }
    }
   }
  }
  $59 = $13; //@line 6 "./src/cpp/unrar/crypt3.cpp"
  $60 = (($59) + 1)|0; //@line 6 "./src/cpp/unrar/crypt3.cpp"
  $13 = $60; //@line 6 "./src/cpp/unrar/crypt3.cpp"
 }
 if ((label|0) == 9) {
  $53 = $13; //@line 11 "./src/cpp/unrar/crypt3.cpp"
  $54 = (($26) + (($53*560)|0)|0); //@line 11 "./src/cpp/unrar/crypt3.cpp"
  $55 = ((($54)) + 524|0); //@line 11 "./src/cpp/unrar/crypt3.cpp"
  dest=$10; src=$55; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 11 "./src/cpp/unrar/crypt3.cpp"
  $56 = $13; //@line 12 "./src/cpp/unrar/crypt3.cpp"
  $57 = (($26) + (($56*560)|0)|0); //@line 12 "./src/cpp/unrar/crypt3.cpp"
  $58 = ((($57)) + 540|0); //@line 12 "./src/cpp/unrar/crypt3.cpp"
  dest=$11; src=$58; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 12 "./src/cpp/unrar/crypt3.cpp"
  $12 = 1; //@line 13 "./src/cpp/unrar/crypt3.cpp"
 }
 $61 = $12; //@line 17 "./src/cpp/unrar/crypt3.cpp"
 $62 = $61&1; //@line 17 "./src/cpp/unrar/crypt3.cpp"
 if ($62) {
  $148 = ((($26)) + 4780|0); //@line 62 "./src/cpp/unrar/crypt3.cpp"
  $149 = $6; //@line 62 "./src/cpp/unrar/crypt3.cpp"
  $150 = $149&1; //@line 62 "./src/cpp/unrar/crypt3.cpp"
  __ZN8Rijndael4InitEbPKhjS1_($148,$150,$10,128,$11); //@line 62 "./src/cpp/unrar/crypt3.cpp"
  __Z9cleandataPvj($10,16); //@line 63 "./src/cpp/unrar/crypt3.cpp"
  __Z9cleandataPvj($11,16); //@line 64 "./src/cpp/unrar/crypt3.cpp"
  STACKTOP = sp;return; //@line 65 "./src/cpp/unrar/crypt3.cpp"
 }
 $63 = $8; //@line 20 "./src/cpp/unrar/crypt3.cpp"
 (__Z9WideToRawPKwPhj($63,$14,264)|0); //@line 20 "./src/cpp/unrar/crypt3.cpp"
 $64 = $8; //@line 21 "./src/cpp/unrar/crypt3.cpp"
 $65 = (_wcslen($64)|0); //@line 21 "./src/cpp/unrar/crypt3.cpp"
 $66 = $65<<1; //@line 21 "./src/cpp/unrar/crypt3.cpp"
 $15 = $66; //@line 21 "./src/cpp/unrar/crypt3.cpp"
 $67 = $9; //@line 22 "./src/cpp/unrar/crypt3.cpp"
 $68 = ($67|0)!=(0|0); //@line 22 "./src/cpp/unrar/crypt3.cpp"
 if ($68) {
  $69 = $15; //@line 24 "./src/cpp/unrar/crypt3.cpp"
  $70 = (($14) + ($69)|0); //@line 24 "./src/cpp/unrar/crypt3.cpp"
  $71 = $9; //@line 24 "./src/cpp/unrar/crypt3.cpp"
  ;HEAP8[$70>>0]=HEAP8[$71>>0]|0;HEAP8[$70+1>>0]=HEAP8[$71+1>>0]|0;HEAP8[$70+2>>0]=HEAP8[$71+2>>0]|0;HEAP8[$70+3>>0]=HEAP8[$71+3>>0]|0;HEAP8[$70+4>>0]=HEAP8[$71+4>>0]|0;HEAP8[$70+5>>0]=HEAP8[$71+5>>0]|0;HEAP8[$70+6>>0]=HEAP8[$71+6>>0]|0;HEAP8[$70+7>>0]=HEAP8[$71+7>>0]|0; //@line 24 "./src/cpp/unrar/crypt3.cpp"
  $72 = $15; //@line 25 "./src/cpp/unrar/crypt3.cpp"
  $73 = (($72) + 8)|0; //@line 25 "./src/cpp/unrar/crypt3.cpp"
  $15 = $73; //@line 25 "./src/cpp/unrar/crypt3.cpp"
 }
 __Z9sha1_initP12sha1_context($16); //@line 28 "./src/cpp/unrar/crypt3.cpp"
 $17 = 262144; //@line 30 "./src/cpp/unrar/crypt3.cpp"
 $18 = 0; //@line 31 "./src/cpp/unrar/crypt3.cpp"
 while(1) {
  $74 = $18; //@line 31 "./src/cpp/unrar/crypt3.cpp"
  $75 = ($74|0)<(262144); //@line 31 "./src/cpp/unrar/crypt3.cpp"
  if (!($75)) {
   break;
  }
  $76 = $15; //@line 33 "./src/cpp/unrar/crypt3.cpp"
  __Z12sha1_processP12sha1_contextPKhjb($16,$14,$76,0); //@line 33 "./src/cpp/unrar/crypt3.cpp"
  $77 = $18; //@line 35 "./src/cpp/unrar/crypt3.cpp"
  $78 = $77&255; //@line 35 "./src/cpp/unrar/crypt3.cpp"
  HEAP8[$19>>0] = $78; //@line 35 "./src/cpp/unrar/crypt3.cpp"
  $79 = $18; //@line 36 "./src/cpp/unrar/crypt3.cpp"
  $80 = $79 >> 8; //@line 36 "./src/cpp/unrar/crypt3.cpp"
  $81 = $80&255; //@line 36 "./src/cpp/unrar/crypt3.cpp"
  $82 = ((($19)) + 1|0); //@line 36 "./src/cpp/unrar/crypt3.cpp"
  HEAP8[$82>>0] = $81; //@line 36 "./src/cpp/unrar/crypt3.cpp"
  $83 = $18; //@line 37 "./src/cpp/unrar/crypt3.cpp"
  $84 = $83 >> 16; //@line 37 "./src/cpp/unrar/crypt3.cpp"
  $85 = $84&255; //@line 37 "./src/cpp/unrar/crypt3.cpp"
  $86 = ((($19)) + 2|0); //@line 37 "./src/cpp/unrar/crypt3.cpp"
  HEAP8[$86>>0] = $85; //@line 37 "./src/cpp/unrar/crypt3.cpp"
  __Z12sha1_processP12sha1_contextPKhjb($16,$19,3,0); //@line 38 "./src/cpp/unrar/crypt3.cpp"
  $87 = $18; //@line 39 "./src/cpp/unrar/crypt3.cpp"
  $88 = (($87|0) % 16384)&-1; //@line 39 "./src/cpp/unrar/crypt3.cpp"
  $89 = ($88|0)==(0); //@line 39 "./src/cpp/unrar/crypt3.cpp"
  if ($89) {
   _memcpy(($20|0),($16|0),156)|0; //@line 41 "./src/cpp/unrar/crypt3.cpp"
   __Z9sha1_doneP12sha1_contextPjb($20,$21,0); //@line 43 "./src/cpp/unrar/crypt3.cpp"
   $90 = ((($21)) + 16|0); //@line 44 "./src/cpp/unrar/crypt3.cpp"
   $91 = HEAP32[$90>>2]|0; //@line 44 "./src/cpp/unrar/crypt3.cpp"
   $92 = $91&255; //@line 44 "./src/cpp/unrar/crypt3.cpp"
   $93 = $18; //@line 44 "./src/cpp/unrar/crypt3.cpp"
   $94 = (($93|0) / 16384)&-1; //@line 44 "./src/cpp/unrar/crypt3.cpp"
   $95 = (($11) + ($94)|0); //@line 44 "./src/cpp/unrar/crypt3.cpp"
   HEAP8[$95>>0] = $92; //@line 44 "./src/cpp/unrar/crypt3.cpp"
  }
  $96 = $18; //@line 31 "./src/cpp/unrar/crypt3.cpp"
  $97 = (($96) + 1)|0; //@line 31 "./src/cpp/unrar/crypt3.cpp"
  $18 = $97; //@line 31 "./src/cpp/unrar/crypt3.cpp"
 }
 __Z9sha1_doneP12sha1_contextPjb($16,$22,0); //@line 48 "./src/cpp/unrar/crypt3.cpp"
 $23 = 0; //@line 49 "./src/cpp/unrar/crypt3.cpp"
 while(1) {
  $98 = $23; //@line 49 "./src/cpp/unrar/crypt3.cpp"
  $99 = ($98|0)<(4); //@line 49 "./src/cpp/unrar/crypt3.cpp"
  if (!($99)) {
   break;
  }
  $24 = 0; //@line 50 "./src/cpp/unrar/crypt3.cpp"
  while(1) {
   $100 = $24; //@line 50 "./src/cpp/unrar/crypt3.cpp"
   $101 = ($100|0)<(4); //@line 50 "./src/cpp/unrar/crypt3.cpp"
   $102 = $23;
   if (!($101)) {
    break;
   }
   $103 = (($22) + ($102<<2)|0); //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $104 = HEAP32[$103>>2]|0; //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $105 = $24; //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $106 = $105<<3; //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $107 = $104 >>> $106; //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $108 = $107&255; //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $109 = $23; //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $110 = $109<<2; //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $111 = $24; //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $112 = (($110) + ($111))|0; //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $113 = (($10) + ($112)|0); //@line 51 "./src/cpp/unrar/crypt3.cpp"
   HEAP8[$113>>0] = $108; //@line 51 "./src/cpp/unrar/crypt3.cpp"
   $114 = $24; //@line 50 "./src/cpp/unrar/crypt3.cpp"
   $115 = (($114) + 1)|0; //@line 50 "./src/cpp/unrar/crypt3.cpp"
   $24 = $115; //@line 50 "./src/cpp/unrar/crypt3.cpp"
  }
  $116 = (($102) + 1)|0; //@line 49 "./src/cpp/unrar/crypt3.cpp"
  $23 = $116; //@line 49 "./src/cpp/unrar/crypt3.cpp"
 }
 $117 = $7; //@line 53 "./src/cpp/unrar/crypt3.cpp"
 $118 = ((($26)) + 2240|0); //@line 53 "./src/cpp/unrar/crypt3.cpp"
 $119 = HEAP32[$118>>2]|0; //@line 53 "./src/cpp/unrar/crypt3.cpp"
 $120 = (($26) + (($119*560)|0)|0); //@line 53 "./src/cpp/unrar/crypt3.cpp"
 _memcpy(($120|0),($117|0),514)|0; //@line 53 "./src/cpp/unrar/crypt3.cpp"
 $121 = $9; //@line 54 "./src/cpp/unrar/crypt3.cpp"
 $122 = ($121|0)!=(0|0); //@line 54 "./src/cpp/unrar/crypt3.cpp"
 $123 = ((($26)) + 2240|0); //@line 54 "./src/cpp/unrar/crypt3.cpp"
 $124 = HEAP32[$123>>2]|0; //@line 54 "./src/cpp/unrar/crypt3.cpp"
 $125 = (($26) + (($124*560)|0)|0); //@line 54 "./src/cpp/unrar/crypt3.cpp"
 $126 = ((($125)) + 556|0); //@line 54 "./src/cpp/unrar/crypt3.cpp"
 $127 = $122&1; //@line 54 "./src/cpp/unrar/crypt3.cpp"
 HEAP8[$126>>0] = $127; //@line 54 "./src/cpp/unrar/crypt3.cpp"
 $128 = $122&1; //@line 54 "./src/cpp/unrar/crypt3.cpp"
 $129 = ($128|0)==(1); //@line 54 "./src/cpp/unrar/crypt3.cpp"
 if ($129) {
  $130 = ((($26)) + 2240|0); //@line 55 "./src/cpp/unrar/crypt3.cpp"
  $131 = HEAP32[$130>>2]|0; //@line 55 "./src/cpp/unrar/crypt3.cpp"
  $132 = (($26) + (($131*560)|0)|0); //@line 55 "./src/cpp/unrar/crypt3.cpp"
  $133 = ((($132)) + 516|0); //@line 55 "./src/cpp/unrar/crypt3.cpp"
  $134 = $9; //@line 55 "./src/cpp/unrar/crypt3.cpp"
  ;HEAP8[$133>>0]=HEAP8[$134>>0]|0;HEAP8[$133+1>>0]=HEAP8[$134+1>>0]|0;HEAP8[$133+2>>0]=HEAP8[$134+2>>0]|0;HEAP8[$133+3>>0]=HEAP8[$134+3>>0]|0;HEAP8[$133+4>>0]=HEAP8[$134+4>>0]|0;HEAP8[$133+5>>0]=HEAP8[$134+5>>0]|0;HEAP8[$133+6>>0]=HEAP8[$134+6>>0]|0;HEAP8[$133+7>>0]=HEAP8[$134+7>>0]|0; //@line 55 "./src/cpp/unrar/crypt3.cpp"
 }
 $135 = ((($26)) + 2240|0); //@line 56 "./src/cpp/unrar/crypt3.cpp"
 $136 = HEAP32[$135>>2]|0; //@line 56 "./src/cpp/unrar/crypt3.cpp"
 $137 = (($26) + (($136*560)|0)|0); //@line 56 "./src/cpp/unrar/crypt3.cpp"
 $138 = ((($137)) + 524|0); //@line 56 "./src/cpp/unrar/crypt3.cpp"
 dest=$138; src=$10; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 56 "./src/cpp/unrar/crypt3.cpp"
 $139 = ((($26)) + 2240|0); //@line 57 "./src/cpp/unrar/crypt3.cpp"
 $140 = HEAP32[$139>>2]|0; //@line 57 "./src/cpp/unrar/crypt3.cpp"
 $141 = (($26) + (($140*560)|0)|0); //@line 57 "./src/cpp/unrar/crypt3.cpp"
 $142 = ((($141)) + 540|0); //@line 57 "./src/cpp/unrar/crypt3.cpp"
 dest=$142; src=$11; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 57 "./src/cpp/unrar/crypt3.cpp"
 $143 = ((($26)) + 2240|0); //@line 58 "./src/cpp/unrar/crypt3.cpp"
 $144 = HEAP32[$143>>2]|0; //@line 58 "./src/cpp/unrar/crypt3.cpp"
 $145 = (($144) + 1)|0; //@line 58 "./src/cpp/unrar/crypt3.cpp"
 $146 = (($145>>>0) % 4)&-1; //@line 58 "./src/cpp/unrar/crypt3.cpp"
 $147 = ((($26)) + 2240|0); //@line 58 "./src/cpp/unrar/crypt3.cpp"
 HEAP32[$147>>2] = $146; //@line 58 "./src/cpp/unrar/crypt3.cpp"
 __Z9cleandataPvj($14,264); //@line 60 "./src/cpp/unrar/crypt3.cpp"
 $148 = ((($26)) + 4780|0); //@line 62 "./src/cpp/unrar/crypt3.cpp"
 $149 = $6; //@line 62 "./src/cpp/unrar/crypt3.cpp"
 $150 = $149&1; //@line 62 "./src/cpp/unrar/crypt3.cpp"
 __ZN8Rijndael4InitEbPKhjS1_($148,$150,$10,128,$11); //@line 62 "./src/cpp/unrar/crypt3.cpp"
 __Z9cleandataPvj($10,16); //@line 63 "./src/cpp/unrar/crypt3.cpp"
 __Z9cleandataPvj($11,16); //@line 64 "./src/cpp/unrar/crypt3.cpp"
 STACKTOP = sp;return; //@line 65 "./src/cpp/unrar/crypt3.cpp"
}
function __Z11hmac_sha256PKhjS0_jPh($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(512|0);
 $11 = sp + 472|0;
 $12 = sp + 224|0;
 $13 = sp + 408|0;
 $16 = sp + 112|0;
 $17 = sp + 376|0;
 $18 = sp;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = 64; //@line 4 "./src/cpp/unrar/crypt5.cpp"
 $21 = $6; //@line 7 "./src/cpp/unrar/crypt5.cpp"
 $22 = ($21>>>0)>(64); //@line 7 "./src/cpp/unrar/crypt5.cpp"
 if ($22) {
  __Z11sha256_initP14sha256_context($12); //@line 10 "./src/cpp/unrar/crypt5.cpp"
  $23 = $5; //@line 11 "./src/cpp/unrar/crypt5.cpp"
  $24 = $6; //@line 11 "./src/cpp/unrar/crypt5.cpp"
  __Z14sha256_processP14sha256_contextPKvj($12,$23,$24); //@line 11 "./src/cpp/unrar/crypt5.cpp"
  __Z11sha256_doneP14sha256_contextPh($12,$11); //@line 12 "./src/cpp/unrar/crypt5.cpp"
  $5 = $11; //@line 14 "./src/cpp/unrar/crypt5.cpp"
  $6 = 32; //@line 15 "./src/cpp/unrar/crypt5.cpp"
 }
 $14 = 0; //@line 19 "./src/cpp/unrar/crypt5.cpp"
 while(1) {
  $25 = $14; //@line 19 "./src/cpp/unrar/crypt5.cpp"
  $26 = $6; //@line 19 "./src/cpp/unrar/crypt5.cpp"
  $27 = ($25>>>0)<($26>>>0); //@line 19 "./src/cpp/unrar/crypt5.cpp"
  if (!($27)) {
   break;
  }
  $28 = $5; //@line 20 "./src/cpp/unrar/crypt5.cpp"
  $29 = $14; //@line 20 "./src/cpp/unrar/crypt5.cpp"
  $30 = (($28) + ($29)|0); //@line 20 "./src/cpp/unrar/crypt5.cpp"
  $31 = HEAP8[$30>>0]|0; //@line 20 "./src/cpp/unrar/crypt5.cpp"
  $32 = $31&255; //@line 20 "./src/cpp/unrar/crypt5.cpp"
  $33 = $32 ^ 54; //@line 20 "./src/cpp/unrar/crypt5.cpp"
  $34 = $33&255; //@line 20 "./src/cpp/unrar/crypt5.cpp"
  $35 = $14; //@line 20 "./src/cpp/unrar/crypt5.cpp"
  $36 = (($13) + ($35)|0); //@line 20 "./src/cpp/unrar/crypt5.cpp"
  HEAP8[$36>>0] = $34; //@line 20 "./src/cpp/unrar/crypt5.cpp"
  $37 = $14; //@line 19 "./src/cpp/unrar/crypt5.cpp"
  $38 = (($37) + 1)|0; //@line 19 "./src/cpp/unrar/crypt5.cpp"
  $14 = $38; //@line 19 "./src/cpp/unrar/crypt5.cpp"
 }
 $39 = $6; //@line 21 "./src/cpp/unrar/crypt5.cpp"
 $15 = $39; //@line 21 "./src/cpp/unrar/crypt5.cpp"
 while(1) {
  $40 = $15; //@line 21 "./src/cpp/unrar/crypt5.cpp"
  $41 = ($40>>>0)<(64); //@line 21 "./src/cpp/unrar/crypt5.cpp"
  if (!($41)) {
   break;
  }
  $42 = $15; //@line 22 "./src/cpp/unrar/crypt5.cpp"
  $43 = (($13) + ($42)|0); //@line 22 "./src/cpp/unrar/crypt5.cpp"
  HEAP8[$43>>0] = 54; //@line 22 "./src/cpp/unrar/crypt5.cpp"
  $44 = $15; //@line 21 "./src/cpp/unrar/crypt5.cpp"
  $45 = (($44) + 1)|0; //@line 21 "./src/cpp/unrar/crypt5.cpp"
  $15 = $45; //@line 21 "./src/cpp/unrar/crypt5.cpp"
 }
 __Z11sha256_initP14sha256_context($16); //@line 25 "./src/cpp/unrar/crypt5.cpp"
 __Z14sha256_processP14sha256_contextPKvj($16,$13,64); //@line 26 "./src/cpp/unrar/crypt5.cpp"
 $46 = $7; //@line 27 "./src/cpp/unrar/crypt5.cpp"
 $47 = $8; //@line 27 "./src/cpp/unrar/crypt5.cpp"
 __Z14sha256_processP14sha256_contextPKvj($16,$46,$47); //@line 27 "./src/cpp/unrar/crypt5.cpp"
 __Z11sha256_doneP14sha256_contextPh($16,$17); //@line 30 "./src/cpp/unrar/crypt5.cpp"
 __Z11sha256_initP14sha256_context($18); //@line 33 "./src/cpp/unrar/crypt5.cpp"
 $19 = 0; //@line 35 "./src/cpp/unrar/crypt5.cpp"
 while(1) {
  $48 = $19; //@line 35 "./src/cpp/unrar/crypt5.cpp"
  $49 = $6; //@line 35 "./src/cpp/unrar/crypt5.cpp"
  $50 = ($48>>>0)<($49>>>0); //@line 35 "./src/cpp/unrar/crypt5.cpp"
  if (!($50)) {
   break;
  }
  $51 = $5; //@line 36 "./src/cpp/unrar/crypt5.cpp"
  $52 = $19; //@line 36 "./src/cpp/unrar/crypt5.cpp"
  $53 = (($51) + ($52)|0); //@line 36 "./src/cpp/unrar/crypt5.cpp"
  $54 = HEAP8[$53>>0]|0; //@line 36 "./src/cpp/unrar/crypt5.cpp"
  $55 = $54&255; //@line 36 "./src/cpp/unrar/crypt5.cpp"
  $56 = $55 ^ 92; //@line 36 "./src/cpp/unrar/crypt5.cpp"
  $57 = $56&255; //@line 36 "./src/cpp/unrar/crypt5.cpp"
  $58 = $19; //@line 36 "./src/cpp/unrar/crypt5.cpp"
  $59 = (($13) + ($58)|0); //@line 36 "./src/cpp/unrar/crypt5.cpp"
  HEAP8[$59>>0] = $57; //@line 36 "./src/cpp/unrar/crypt5.cpp"
  $60 = $19; //@line 35 "./src/cpp/unrar/crypt5.cpp"
  $61 = (($60) + 1)|0; //@line 35 "./src/cpp/unrar/crypt5.cpp"
  $19 = $61; //@line 35 "./src/cpp/unrar/crypt5.cpp"
 }
 $62 = $6; //@line 37 "./src/cpp/unrar/crypt5.cpp"
 $20 = $62; //@line 37 "./src/cpp/unrar/crypt5.cpp"
 while(1) {
  $63 = $20; //@line 37 "./src/cpp/unrar/crypt5.cpp"
  $64 = ($63>>>0)<(64); //@line 37 "./src/cpp/unrar/crypt5.cpp"
  if (!($64)) {
   break;
  }
  $65 = $20; //@line 38 "./src/cpp/unrar/crypt5.cpp"
  $66 = (($13) + ($65)|0); //@line 38 "./src/cpp/unrar/crypt5.cpp"
  HEAP8[$66>>0] = 92; //@line 38 "./src/cpp/unrar/crypt5.cpp"
  $67 = $20; //@line 37 "./src/cpp/unrar/crypt5.cpp"
  $68 = (($67) + 1)|0; //@line 37 "./src/cpp/unrar/crypt5.cpp"
  $20 = $68; //@line 37 "./src/cpp/unrar/crypt5.cpp"
 }
 __Z14sha256_processP14sha256_contextPKvj($18,$13,64); //@line 40 "./src/cpp/unrar/crypt5.cpp"
 __Z14sha256_processP14sha256_contextPKvj($18,$17,32); //@line 41 "./src/cpp/unrar/crypt5.cpp"
 $69 = $9; //@line 43 "./src/cpp/unrar/crypt5.cpp"
 __Z11sha256_doneP14sha256_contextPh($18,$69); //@line 43 "./src/cpp/unrar/crypt5.cpp"
 STACKTOP = sp;return; //@line 44 "./src/cpp/unrar/crypt5.cpp"
}
function __Z6pbkdf2PKhjS0_jPhS1_S1_j($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, dest = 0, label = 0;
 var sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $17 = sp + 168|0;
 $18 = sp + 136|0;
 $19 = sp + 104|0;
 $20 = sp + 24|0;
 $21 = sp + 12|0;
 $22 = sp + 72|0;
 $8 = $0;
 $9 = $1;
 $10 = $2;
 $11 = $3;
 $12 = $4;
 $13 = $5;
 $14 = $6;
 $15 = $7;
 $16 = 64; //@line 54 "./src/cpp/unrar/crypt5.cpp"
 $26 = $10; //@line 56 "./src/cpp/unrar/crypt5.cpp"
 $27 = $11; //@line 56 "./src/cpp/unrar/crypt5.cpp"
 $28 = ($27>>>0)<(64); //@line 56 "./src/cpp/unrar/crypt5.cpp"
 $29 = $11; //@line 56 "./src/cpp/unrar/crypt5.cpp"
 $30 = $28 ? $29 : 64; //@line 56 "./src/cpp/unrar/crypt5.cpp"
 _memcpy(($17|0),($26|0),($30|0))|0; //@line 56 "./src/cpp/unrar/crypt5.cpp"
 $31 = $11; //@line 58 "./src/cpp/unrar/crypt5.cpp"
 $32 = (($31) + 0)|0; //@line 58 "./src/cpp/unrar/crypt5.cpp"
 $33 = (($17) + ($32)|0); //@line 58 "./src/cpp/unrar/crypt5.cpp"
 HEAP8[$33>>0] = 0; //@line 58 "./src/cpp/unrar/crypt5.cpp"
 $34 = $11; //@line 59 "./src/cpp/unrar/crypt5.cpp"
 $35 = (($34) + 1)|0; //@line 59 "./src/cpp/unrar/crypt5.cpp"
 $36 = (($17) + ($35)|0); //@line 59 "./src/cpp/unrar/crypt5.cpp"
 HEAP8[$36>>0] = 0; //@line 59 "./src/cpp/unrar/crypt5.cpp"
 $37 = $11; //@line 60 "./src/cpp/unrar/crypt5.cpp"
 $38 = (($37) + 2)|0; //@line 60 "./src/cpp/unrar/crypt5.cpp"
 $39 = (($17) + ($38)|0); //@line 60 "./src/cpp/unrar/crypt5.cpp"
 HEAP8[$39>>0] = 0; //@line 60 "./src/cpp/unrar/crypt5.cpp"
 $40 = $11; //@line 61 "./src/cpp/unrar/crypt5.cpp"
 $41 = (($40) + 3)|0; //@line 61 "./src/cpp/unrar/crypt5.cpp"
 $42 = (($17) + ($41)|0); //@line 61 "./src/cpp/unrar/crypt5.cpp"
 HEAP8[$42>>0] = 1; //@line 61 "./src/cpp/unrar/crypt5.cpp"
 $43 = $8; //@line 65 "./src/cpp/unrar/crypt5.cpp"
 $44 = $9; //@line 65 "./src/cpp/unrar/crypt5.cpp"
 $45 = $11; //@line 65 "./src/cpp/unrar/crypt5.cpp"
 $46 = (($45) + 4)|0; //@line 65 "./src/cpp/unrar/crypt5.cpp"
 __Z11hmac_sha256PKhjS0_jPh($43,$44,$17,$46,$18); //@line 65 "./src/cpp/unrar/crypt5.cpp"
 dest=$19; src=$18; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 67 "./src/cpp/unrar/crypt5.cpp"
 $47 = $15; //@line 69 "./src/cpp/unrar/crypt5.cpp"
 $48 = (($47) - 1)|0; //@line 69 "./src/cpp/unrar/crypt5.cpp"
 HEAP32[$20>>2] = $48; //@line 69 "./src/cpp/unrar/crypt5.cpp"
 $49 = ((($20)) + 4|0); //@line 69 "./src/cpp/unrar/crypt5.cpp"
 HEAP32[$49>>2] = 16; //@line 69 "./src/cpp/unrar/crypt5.cpp"
 $50 = ((($49)) + 4|0); //@line 69 "./src/cpp/unrar/crypt5.cpp"
 HEAP32[$50>>2] = 16; //@line 69 "./src/cpp/unrar/crypt5.cpp"
 $51 = $12; //@line 70 "./src/cpp/unrar/crypt5.cpp"
 HEAP32[$21>>2] = $51; //@line 70 "./src/cpp/unrar/crypt5.cpp"
 $52 = ((($21)) + 4|0); //@line 70 "./src/cpp/unrar/crypt5.cpp"
 $53 = $13; //@line 70 "./src/cpp/unrar/crypt5.cpp"
 HEAP32[$52>>2] = $53; //@line 70 "./src/cpp/unrar/crypt5.cpp"
 $54 = ((($52)) + 4|0); //@line 70 "./src/cpp/unrar/crypt5.cpp"
 $55 = $14; //@line 70 "./src/cpp/unrar/crypt5.cpp"
 HEAP32[$54>>2] = $55; //@line 70 "./src/cpp/unrar/crypt5.cpp"
 $23 = 0; //@line 73 "./src/cpp/unrar/crypt5.cpp"
 while(1) {
  $56 = $23; //@line 73 "./src/cpp/unrar/crypt5.cpp"
  $57 = ($56>>>0)<(3); //@line 73 "./src/cpp/unrar/crypt5.cpp"
  if (!($57)) {
   break;
  }
  $24 = 0; //@line 75 "./src/cpp/unrar/crypt5.cpp"
  while(1) {
   $58 = $24; //@line 75 "./src/cpp/unrar/crypt5.cpp"
   $59 = $23; //@line 75 "./src/cpp/unrar/crypt5.cpp"
   $60 = (($20) + ($59<<2)|0); //@line 75 "./src/cpp/unrar/crypt5.cpp"
   $61 = HEAP32[$60>>2]|0; //@line 75 "./src/cpp/unrar/crypt5.cpp"
   $62 = ($58>>>0)<($61>>>0); //@line 75 "./src/cpp/unrar/crypt5.cpp"
   if (!($62)) {
    break;
   }
   $63 = $8; //@line 77 "./src/cpp/unrar/crypt5.cpp"
   $64 = $9; //@line 77 "./src/cpp/unrar/crypt5.cpp"
   __Z11hmac_sha256PKhjS0_jPh($63,$64,$18,32,$22); //@line 77 "./src/cpp/unrar/crypt5.cpp"
   dest=$18; src=$22; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 78 "./src/cpp/unrar/crypt5.cpp"
   $25 = 0; //@line 79 "./src/cpp/unrar/crypt5.cpp"
   while(1) {
    $65 = $25; //@line 79 "./src/cpp/unrar/crypt5.cpp"
    $66 = ($65>>>0)<(32); //@line 79 "./src/cpp/unrar/crypt5.cpp"
    if (!($66)) {
     break;
    }
    $67 = $25; //@line 80 "./src/cpp/unrar/crypt5.cpp"
    $68 = (($18) + ($67)|0); //@line 80 "./src/cpp/unrar/crypt5.cpp"
    $69 = HEAP8[$68>>0]|0; //@line 80 "./src/cpp/unrar/crypt5.cpp"
    $70 = $69&255; //@line 80 "./src/cpp/unrar/crypt5.cpp"
    $71 = $25; //@line 80 "./src/cpp/unrar/crypt5.cpp"
    $72 = (($19) + ($71)|0); //@line 80 "./src/cpp/unrar/crypt5.cpp"
    $73 = HEAP8[$72>>0]|0; //@line 80 "./src/cpp/unrar/crypt5.cpp"
    $74 = $73&255; //@line 80 "./src/cpp/unrar/crypt5.cpp"
    $75 = $74 ^ $70; //@line 80 "./src/cpp/unrar/crypt5.cpp"
    $76 = $75&255; //@line 80 "./src/cpp/unrar/crypt5.cpp"
    HEAP8[$72>>0] = $76; //@line 80 "./src/cpp/unrar/crypt5.cpp"
    $77 = $25; //@line 79 "./src/cpp/unrar/crypt5.cpp"
    $78 = (($77) + 1)|0; //@line 79 "./src/cpp/unrar/crypt5.cpp"
    $25 = $78; //@line 79 "./src/cpp/unrar/crypt5.cpp"
   }
   $79 = $24; //@line 75 "./src/cpp/unrar/crypt5.cpp"
   $80 = (($79) + 1)|0; //@line 75 "./src/cpp/unrar/crypt5.cpp"
   $24 = $80; //@line 75 "./src/cpp/unrar/crypt5.cpp"
  }
  $81 = $23; //@line 82 "./src/cpp/unrar/crypt5.cpp"
  $82 = (($21) + ($81<<2)|0); //@line 82 "./src/cpp/unrar/crypt5.cpp"
  $83 = HEAP32[$82>>2]|0; //@line 82 "./src/cpp/unrar/crypt5.cpp"
  dest=$83; src=$19; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 82 "./src/cpp/unrar/crypt5.cpp"
  $84 = $23; //@line 73 "./src/cpp/unrar/crypt5.cpp"
  $85 = (($84) + 1)|0; //@line 73 "./src/cpp/unrar/crypt5.cpp"
  $23 = $85; //@line 73 "./src/cpp/unrar/crypt5.cpp"
 }
 __Z9cleandataPvj($17,68); //@line 85 "./src/cpp/unrar/crypt5.cpp"
 __Z9cleandataPvj($19,32); //@line 86 "./src/cpp/unrar/crypt5.cpp"
 __Z9cleandataPvj($18,32); //@line 87 "./src/cpp/unrar/crypt5.cpp"
 __Z9cleandataPvj($22,32); //@line 88 "./src/cpp/unrar/crypt5.cpp"
 STACKTOP = sp;return; //@line 89 "./src/cpp/unrar/crypt5.cpp"
}
function __ZN9CryptData8SetKey50EbP11SecPasswordPKwPKhS5_jPhS6_($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 672|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(672|0);
 $18 = sp + 632|0;
 $19 = sp + 600|0;
 $20 = sp + 568|0;
 $24 = sp + 48|0;
 $9 = $0;
 $27 = $1&1;
 $10 = $27;
 $11 = $2;
 $12 = $3;
 $13 = $4;
 $14 = $5;
 $15 = $6;
 $16 = $7;
 $17 = $8;
 $28 = $9;
 $29 = $15; //@line 96 "./src/cpp/unrar/crypt5.cpp"
 $30 = ($29>>>0)>(24); //@line 96 "./src/cpp/unrar/crypt5.cpp"
 if ($30) {
  STACKTOP = sp;return; //@line 151 "./src/cpp/unrar/crypt5.cpp"
 }
 $21 = 0; //@line 100 "./src/cpp/unrar/crypt5.cpp"
 $22 = 0; //@line 101 "./src/cpp/unrar/crypt5.cpp"
 while(1) {
  $31 = $22; //@line 101 "./src/cpp/unrar/crypt5.cpp"
  $32 = ($31>>>0)<(4); //@line 101 "./src/cpp/unrar/crypt5.cpp"
  if (!($32)) {
   break;
  }
  $33 = ((($28)) + 2244|0); //@line 103 "./src/cpp/unrar/crypt5.cpp"
  $34 = $22; //@line 103 "./src/cpp/unrar/crypt5.cpp"
  $35 = (($33) + (($34*632)|0)|0); //@line 103 "./src/cpp/unrar/crypt5.cpp"
  $23 = $35; //@line 103 "./src/cpp/unrar/crypt5.cpp"
  $36 = $23; //@line 104 "./src/cpp/unrar/crypt5.cpp"
  $37 = ((($36)) + 564|0); //@line 104 "./src/cpp/unrar/crypt5.cpp"
  $38 = HEAP32[$37>>2]|0; //@line 104 "./src/cpp/unrar/crypt5.cpp"
  $39 = $15; //@line 104 "./src/cpp/unrar/crypt5.cpp"
  $40 = ($38|0)==($39|0); //@line 104 "./src/cpp/unrar/crypt5.cpp"
  if ($40) {
   $41 = $23; //@line 104 "./src/cpp/unrar/crypt5.cpp"
   $42 = $11; //@line 104 "./src/cpp/unrar/crypt5.cpp"
   $43 = (__ZN11SecPasswordeqERS_($41,$42)|0); //@line 104 "./src/cpp/unrar/crypt5.cpp"
   if ($43) {
    $44 = $23; //@line 105 "./src/cpp/unrar/crypt5.cpp"
    $45 = ((($44)) + 516|0); //@line 105 "./src/cpp/unrar/crypt5.cpp"
    $46 = $13; //@line 105 "./src/cpp/unrar/crypt5.cpp"
    $47 = (_memcmp($45,$46,16)|0); //@line 105 "./src/cpp/unrar/crypt5.cpp"
    $48 = ($47|0)==(0); //@line 105 "./src/cpp/unrar/crypt5.cpp"
    if ($48) {
     label = 7;
     break;
    }
   }
  }
  $59 = $22; //@line 101 "./src/cpp/unrar/crypt5.cpp"
  $60 = (($59) + 1)|0; //@line 101 "./src/cpp/unrar/crypt5.cpp"
  $22 = $60; //@line 101 "./src/cpp/unrar/crypt5.cpp"
 }
 if ((label|0) == 7) {
  $49 = $23; //@line 107 "./src/cpp/unrar/crypt5.cpp"
  $50 = ((($49)) + 532|0); //@line 107 "./src/cpp/unrar/crypt5.cpp"
  __Z11SecHideDataPvjbb($50,32,0,0); //@line 107 "./src/cpp/unrar/crypt5.cpp"
  $51 = $23; //@line 108 "./src/cpp/unrar/crypt5.cpp"
  $52 = ((($51)) + 532|0); //@line 108 "./src/cpp/unrar/crypt5.cpp"
  dest=$18; src=$52; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 108 "./src/cpp/unrar/crypt5.cpp"
  $53 = $23; //@line 109 "./src/cpp/unrar/crypt5.cpp"
  $54 = ((($53)) + 532|0); //@line 109 "./src/cpp/unrar/crypt5.cpp"
  __Z11SecHideDataPvjbb($54,32,1,0); //@line 109 "./src/cpp/unrar/crypt5.cpp"
  $55 = $23; //@line 111 "./src/cpp/unrar/crypt5.cpp"
  $56 = ((($55)) + 568|0); //@line 111 "./src/cpp/unrar/crypt5.cpp"
  dest=$19; src=$56; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 111 "./src/cpp/unrar/crypt5.cpp"
  $57 = $23; //@line 112 "./src/cpp/unrar/crypt5.cpp"
  $58 = ((($57)) + 600|0); //@line 112 "./src/cpp/unrar/crypt5.cpp"
  dest=$20; src=$58; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 112 "./src/cpp/unrar/crypt5.cpp"
  $21 = 1; //@line 113 "./src/cpp/unrar/crypt5.cpp"
 }
 $61 = $21; //@line 118 "./src/cpp/unrar/crypt5.cpp"
 $62 = $61&1; //@line 118 "./src/cpp/unrar/crypt5.cpp"
 if (!($62)) {
  $63 = $12; //@line 121 "./src/cpp/unrar/crypt5.cpp"
  __Z9WideToUtfPKwPcj($63,$24,512); //@line 121 "./src/cpp/unrar/crypt5.cpp"
  $64 = (_strlen($24)|0); //@line 123 "./src/cpp/unrar/crypt5.cpp"
  $65 = $13; //@line 123 "./src/cpp/unrar/crypt5.cpp"
  $66 = $15; //@line 123 "./src/cpp/unrar/crypt5.cpp"
  $67 = 1 << $66; //@line 123 "./src/cpp/unrar/crypt5.cpp"
  __Z6pbkdf2PKhjS0_jPhS1_S1_j($24,$64,$65,16,$18,$20,$19,$67); //@line 123 "./src/cpp/unrar/crypt5.cpp"
  __Z9cleandataPvj($24,512); //@line 124 "./src/cpp/unrar/crypt5.cpp"
  $68 = ((($28)) + 2244|0); //@line 126 "./src/cpp/unrar/crypt5.cpp"
  $69 = ((($28)) + 4772|0); //@line 126 "./src/cpp/unrar/crypt5.cpp"
  $70 = HEAP32[$69>>2]|0; //@line 126 "./src/cpp/unrar/crypt5.cpp"
  $71 = (($70) + 1)|0; //@line 126 "./src/cpp/unrar/crypt5.cpp"
  HEAP32[$69>>2] = $71; //@line 126 "./src/cpp/unrar/crypt5.cpp"
  $72 = (($70>>>0) % 4)&-1; //@line 126 "./src/cpp/unrar/crypt5.cpp"
  $73 = (($68) + (($72*632)|0)|0); //@line 126 "./src/cpp/unrar/crypt5.cpp"
  $25 = $73; //@line 126 "./src/cpp/unrar/crypt5.cpp"
  $74 = $15; //@line 127 "./src/cpp/unrar/crypt5.cpp"
  $75 = $25; //@line 127 "./src/cpp/unrar/crypt5.cpp"
  $76 = ((($75)) + 564|0); //@line 127 "./src/cpp/unrar/crypt5.cpp"
  HEAP32[$76>>2] = $74; //@line 127 "./src/cpp/unrar/crypt5.cpp"
  $77 = $11; //@line 128 "./src/cpp/unrar/crypt5.cpp"
  $78 = $25; //@line 128 "./src/cpp/unrar/crypt5.cpp"
  _memcpy(($78|0),($77|0),514)|0; //@line 128 "./src/cpp/unrar/crypt5.cpp"
  $79 = $25; //@line 129 "./src/cpp/unrar/crypt5.cpp"
  $80 = ((($79)) + 516|0); //@line 129 "./src/cpp/unrar/crypt5.cpp"
  $81 = $13; //@line 129 "./src/cpp/unrar/crypt5.cpp"
  dest=$80; src=$81; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 129 "./src/cpp/unrar/crypt5.cpp"
  $82 = $25; //@line 130 "./src/cpp/unrar/crypt5.cpp"
  $83 = ((($82)) + 532|0); //@line 130 "./src/cpp/unrar/crypt5.cpp"
  dest=$83; src=$18; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 130 "./src/cpp/unrar/crypt5.cpp"
  $84 = $25; //@line 131 "./src/cpp/unrar/crypt5.cpp"
  $85 = ((($84)) + 568|0); //@line 131 "./src/cpp/unrar/crypt5.cpp"
  dest=$85; src=$19; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 131 "./src/cpp/unrar/crypt5.cpp"
  $86 = $25; //@line 132 "./src/cpp/unrar/crypt5.cpp"
  $87 = ((($86)) + 600|0); //@line 132 "./src/cpp/unrar/crypt5.cpp"
  dest=$87; src=$20; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 132 "./src/cpp/unrar/crypt5.cpp"
  $88 = $25; //@line 133 "./src/cpp/unrar/crypt5.cpp"
  $89 = ((($88)) + 532|0); //@line 133 "./src/cpp/unrar/crypt5.cpp"
  __Z11SecHideDataPvjbb($89,32,1,0); //@line 133 "./src/cpp/unrar/crypt5.cpp"
 }
 $90 = $16; //@line 135 "./src/cpp/unrar/crypt5.cpp"
 $91 = ($90|0)!=(0|0); //@line 135 "./src/cpp/unrar/crypt5.cpp"
 if ($91) {
  $92 = $16; //@line 136 "./src/cpp/unrar/crypt5.cpp"
  dest=$92; src=$20; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 136 "./src/cpp/unrar/crypt5.cpp"
 }
 $93 = $17; //@line 137 "./src/cpp/unrar/crypt5.cpp"
 $94 = ($93|0)!=(0|0); //@line 137 "./src/cpp/unrar/crypt5.cpp"
 if ($94) {
  $95 = $17; //@line 139 "./src/cpp/unrar/crypt5.cpp"
  ;HEAP8[$95>>0]=0|0;HEAP8[$95+1>>0]=0|0;HEAP8[$95+2>>0]=0|0;HEAP8[$95+3>>0]=0|0;HEAP8[$95+4>>0]=0|0;HEAP8[$95+5>>0]=0|0;HEAP8[$95+6>>0]=0|0;HEAP8[$95+7>>0]=0|0; //@line 139 "./src/cpp/unrar/crypt5.cpp"
  $26 = 0; //@line 140 "./src/cpp/unrar/crypt5.cpp"
  while(1) {
   $96 = $26; //@line 140 "./src/cpp/unrar/crypt5.cpp"
   $97 = ($96>>>0)<(32); //@line 140 "./src/cpp/unrar/crypt5.cpp"
   if (!($97)) {
    break;
   }
   $98 = $26; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $99 = (($19) + ($98)|0); //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $100 = HEAP8[$99>>0]|0; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $101 = $100&255; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $102 = $17; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $103 = $26; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $104 = (($103>>>0) % 8)&-1; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $105 = (($102) + ($104)|0); //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $106 = HEAP8[$105>>0]|0; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $107 = $106&255; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $108 = $107 ^ $101; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $109 = $108&255; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   HEAP8[$105>>0] = $109; //@line 141 "./src/cpp/unrar/crypt5.cpp"
   $110 = $26; //@line 140 "./src/cpp/unrar/crypt5.cpp"
   $111 = (($110) + 1)|0; //@line 140 "./src/cpp/unrar/crypt5.cpp"
   $26 = $111; //@line 140 "./src/cpp/unrar/crypt5.cpp"
  }
  __Z9cleandataPvj($19,32); //@line 142 "./src/cpp/unrar/crypt5.cpp"
 }
 $112 = $14; //@line 147 "./src/cpp/unrar/crypt5.cpp"
 $113 = ($112|0)!=(0|0); //@line 147 "./src/cpp/unrar/crypt5.cpp"
 if ($113) {
  $114 = ((($28)) + 4780|0); //@line 148 "./src/cpp/unrar/crypt5.cpp"
  $115 = $10; //@line 148 "./src/cpp/unrar/crypt5.cpp"
  $116 = $115&1; //@line 148 "./src/cpp/unrar/crypt5.cpp"
  $117 = $14; //@line 148 "./src/cpp/unrar/crypt5.cpp"
  __ZN8Rijndael4InitEbPKhjS1_($114,$116,$18,256,$117); //@line 148 "./src/cpp/unrar/crypt5.cpp"
 }
 __Z9cleandataPvj($18,32); //@line 150 "./src/cpp/unrar/crypt5.cpp"
 STACKTOP = sp;return; //@line 151 "./src/cpp/unrar/crypt5.cpp"
}
function __Z16ConvertHashToMACP9HashValuePh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0;
 var label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $4 = sp + 80|0;
 $5 = sp + 48|0;
 $7 = sp + 16|0;
 $2 = $0;
 $3 = $1;
 $8 = $2; //@line 156 "./src/cpp/unrar/crypt5.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 156 "./src/cpp/unrar/crypt5.cpp"
 $10 = ($9|0)==(2); //@line 156 "./src/cpp/unrar/crypt5.cpp"
 L1: do {
  if ($10) {
   $11 = $2; //@line 159 "./src/cpp/unrar/crypt5.cpp"
   $12 = ((($11)) + 4|0); //@line 159 "./src/cpp/unrar/crypt5.cpp"
   $13 = HEAP32[$12>>2]|0; //@line 159 "./src/cpp/unrar/crypt5.cpp"
   __Z7RawPut4jPv($13,$4); //@line 159 "./src/cpp/unrar/crypt5.cpp"
   $14 = $3; //@line 161 "./src/cpp/unrar/crypt5.cpp"
   __Z11hmac_sha256PKhjS0_jPh($14,32,$4,4,$5); //@line 161 "./src/cpp/unrar/crypt5.cpp"
   $15 = $2; //@line 162 "./src/cpp/unrar/crypt5.cpp"
   $16 = ((($15)) + 4|0); //@line 162 "./src/cpp/unrar/crypt5.cpp"
   HEAP32[$16>>2] = 0; //@line 162 "./src/cpp/unrar/crypt5.cpp"
   $6 = 0; //@line 163 "./src/cpp/unrar/crypt5.cpp"
   while(1) {
    $17 = $6; //@line 163 "./src/cpp/unrar/crypt5.cpp"
    $18 = ($17>>>0)<(32); //@line 163 "./src/cpp/unrar/crypt5.cpp"
    if (!($18)) {
     break L1;
    }
    $19 = $6; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $20 = (($5) + ($19)|0); //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $21 = HEAP8[$20>>0]|0; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $22 = $21&255; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $23 = $6; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $24 = $23 & 3; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $25 = $24<<3; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $26 = $22 << $25; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $27 = $2; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $28 = ((($27)) + 4|0); //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $29 = HEAP32[$28>>2]|0; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $30 = $29 ^ $26; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    HEAP32[$28>>2] = $30; //@line 164 "./src/cpp/unrar/crypt5.cpp"
    $31 = $6; //@line 163 "./src/cpp/unrar/crypt5.cpp"
    $32 = (($31) + 1)|0; //@line 163 "./src/cpp/unrar/crypt5.cpp"
    $6 = $32; //@line 163 "./src/cpp/unrar/crypt5.cpp"
   }
  }
 } while(0);
 $33 = $2; //@line 166 "./src/cpp/unrar/crypt5.cpp"
 $34 = HEAP32[$33>>2]|0; //@line 166 "./src/cpp/unrar/crypt5.cpp"
 $35 = ($34|0)==(3); //@line 166 "./src/cpp/unrar/crypt5.cpp"
 if (!($35)) {
  STACKTOP = sp;return; //@line 172 "./src/cpp/unrar/crypt5.cpp"
 }
 $36 = $3; //@line 169 "./src/cpp/unrar/crypt5.cpp"
 $37 = $2; //@line 169 "./src/cpp/unrar/crypt5.cpp"
 $38 = ((($37)) + 4|0); //@line 169 "./src/cpp/unrar/crypt5.cpp"
 __Z11hmac_sha256PKhjS0_jPh($36,32,$38,32,$7); //@line 169 "./src/cpp/unrar/crypt5.cpp"
 $39 = $2; //@line 170 "./src/cpp/unrar/crypt5.cpp"
 $40 = ((($39)) + 4|0); //@line 170 "./src/cpp/unrar/crypt5.cpp"
 dest=$40; src=$7; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 170 "./src/cpp/unrar/crypt5.cpp"
 STACKTOP = sp;return; //@line 172 "./src/cpp/unrar/crypt5.cpp"
}
function __Z7RawPut4jPv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 80 "./src/cpp/unrar/rawread.hpp"
 $4 = $5; //@line 80 "./src/cpp/unrar/rawread.hpp"
 $6 = $2; //@line 82 "./src/cpp/unrar/rawread.hpp"
 $7 = $6&255; //@line 82 "./src/cpp/unrar/rawread.hpp"
 $8 = $4; //@line 82 "./src/cpp/unrar/rawread.hpp"
 HEAP8[$8>>0] = $7; //@line 82 "./src/cpp/unrar/rawread.hpp"
 $9 = $2; //@line 83 "./src/cpp/unrar/rawread.hpp"
 $10 = $9 >>> 8; //@line 83 "./src/cpp/unrar/rawread.hpp"
 $11 = $10&255; //@line 83 "./src/cpp/unrar/rawread.hpp"
 $12 = $4; //@line 83 "./src/cpp/unrar/rawread.hpp"
 $13 = ((($12)) + 1|0); //@line 83 "./src/cpp/unrar/rawread.hpp"
 HEAP8[$13>>0] = $11; //@line 83 "./src/cpp/unrar/rawread.hpp"
 $14 = $2; //@line 84 "./src/cpp/unrar/rawread.hpp"
 $15 = $14 >>> 16; //@line 84 "./src/cpp/unrar/rawread.hpp"
 $16 = $15&255; //@line 84 "./src/cpp/unrar/rawread.hpp"
 $17 = $4; //@line 84 "./src/cpp/unrar/rawread.hpp"
 $18 = ((($17)) + 2|0); //@line 84 "./src/cpp/unrar/rawread.hpp"
 HEAP8[$18>>0] = $16; //@line 84 "./src/cpp/unrar/rawread.hpp"
 $19 = $2; //@line 85 "./src/cpp/unrar/rawread.hpp"
 $20 = $19 >>> 24; //@line 85 "./src/cpp/unrar/rawread.hpp"
 $21 = $20&255; //@line 85 "./src/cpp/unrar/rawread.hpp"
 $22 = $4; //@line 85 "./src/cpp/unrar/rawread.hpp"
 $23 = ((($22)) + 3|0); //@line 85 "./src/cpp/unrar/rawread.hpp"
 HEAP8[$23>>0] = $21; //@line 85 "./src/cpp/unrar/rawread.hpp"
 STACKTOP = sp;return; //@line 89 "./src/cpp/unrar/rawread.hpp"
}
function __ZN9CryptDataC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 2240|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
 $6 = $4;
 while(1) {
  __THREW__ = 0;
  invoke_vi(177,($6|0)); //@line 11 "./src/cpp/unrar/crypt.cpp"
  $7 = __THREW__; __THREW__ = 0;
  $8 = $7&1;
  if ($8) {
   label = 9;
   break;
  }
  $9 = ((($6)) + 560|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
  $10 = ($9|0)==($5|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
  if ($10) {
   break;
  } else {
   $6 = $9;
  }
 }
 if ((label|0) == 9) {
  $26 = ___cxa_find_matching_catch_2()|0;
  $27 = tempRet0;
  $2 = $26; //@line 19 "./src/cpp/unrar/crypt.cpp"
  $3 = $27; //@line 19 "./src/cpp/unrar/crypt.cpp"
  $28 = ($4|0)==($6|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
  if ($28) {
   $48 = $2; //@line 11 "./src/cpp/unrar/crypt.cpp"
   $49 = $3; //@line 11 "./src/cpp/unrar/crypt.cpp"
   ___resumeException($48|0);
   // unreachable;
  } else {
   $30 = $6;
  }
  while(1) {
   $29 = ((($30)) + -560|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
   __ZN9CryptData13KDF3CacheItemD2Ev($29); //@line 11 "./src/cpp/unrar/crypt.cpp"
   $31 = ($29|0)==($4|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
   if ($31) {
    break;
   } else {
    $30 = $29;
   }
  }
  $48 = $2; //@line 11 "./src/cpp/unrar/crypt.cpp"
  $49 = $3; //@line 11 "./src/cpp/unrar/crypt.cpp"
  ___resumeException($48|0);
  // unreachable;
 }
 $11 = ((($4)) + 2244|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
 $12 = ((($11)) + 2528|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
 $13 = $11;
 while(1) {
  __THREW__ = 0;
  invoke_vi(178,($13|0)); //@line 11 "./src/cpp/unrar/crypt.cpp"
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   label = 11;
   break;
  }
  $16 = ((($13)) + 632|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
  $17 = ($16|0)==($12|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
  if ($17) {
   label = 7;
   break;
  } else {
   $13 = $16;
  }
 }
 if ((label|0) == 7) {
  $18 = ((($4)) + 4780|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
  __THREW__ = 0;
  invoke_vi(179,($18|0)); //@line 11 "./src/cpp/unrar/crypt.cpp"
  $19 = __THREW__; __THREW__ = 0;
  $20 = $19&1;
  if (!($20)) {
   $21 = ((($4)) + 4776|0); //@line 13 "./src/cpp/unrar/crypt.cpp"
   HEAP32[$21>>2] = 0; //@line 13 "./src/cpp/unrar/crypt.cpp"
   _memset(($4|0),0,2240)|0; //@line 14 "./src/cpp/unrar/crypt.cpp"
   $22 = ((($4)) + 2244|0); //@line 15 "./src/cpp/unrar/crypt.cpp"
   _memset(($22|0),0,2528)|0; //@line 15 "./src/cpp/unrar/crypt.cpp"
   $23 = ((($4)) + 2240|0); //@line 16 "./src/cpp/unrar/crypt.cpp"
   HEAP32[$23>>2] = 0; //@line 16 "./src/cpp/unrar/crypt.cpp"
   $24 = ((($4)) + 4772|0); //@line 17 "./src/cpp/unrar/crypt.cpp"
   HEAP32[$24>>2] = 0; //@line 17 "./src/cpp/unrar/crypt.cpp"
   $25 = ((($4)) + 5044|0); //@line 18 "./src/cpp/unrar/crypt.cpp"
   _memset(($25|0),0,1024)|0; //@line 18 "./src/cpp/unrar/crypt.cpp"
   STACKTOP = sp;return; //@line 19 "./src/cpp/unrar/crypt.cpp"
  }
  $38 = ___cxa_find_matching_catch_2()|0;
  $39 = tempRet0;
  $2 = $38; //@line 19 "./src/cpp/unrar/crypt.cpp"
  $3 = $39; //@line 19 "./src/cpp/unrar/crypt.cpp"
  $40 = ((($11)) + 2528|0); //@line 19 "./src/cpp/unrar/crypt.cpp"
  $42 = $40;
  while(1) {
   $41 = ((($42)) + -632|0); //@line 19 "./src/cpp/unrar/crypt.cpp"
   __ZN9CryptData13KDF5CacheItemD2Ev($41); //@line 19 "./src/cpp/unrar/crypt.cpp"
   $43 = ($41|0)==($11|0); //@line 19 "./src/cpp/unrar/crypt.cpp"
   if ($43) {
    break;
   } else {
    $42 = $41;
   }
  }
 }
 else if ((label|0) == 11) {
  $32 = ___cxa_find_matching_catch_2()|0;
  $33 = tempRet0;
  $2 = $32; //@line 19 "./src/cpp/unrar/crypt.cpp"
  $3 = $33; //@line 19 "./src/cpp/unrar/crypt.cpp"
  $34 = ($11|0)==($13|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
  if (!($34)) {
   $36 = $13;
   while(1) {
    $35 = ((($36)) + -632|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
    __ZN9CryptData13KDF5CacheItemD2Ev($35); //@line 11 "./src/cpp/unrar/crypt.cpp"
    $37 = ($35|0)==($11|0); //@line 11 "./src/cpp/unrar/crypt.cpp"
    if ($37) {
     break;
    } else {
     $36 = $35;
    }
   }
  }
 }
 $44 = ((($4)) + 2240|0); //@line 19 "./src/cpp/unrar/crypt.cpp"
 $46 = $44;
 while(1) {
  $45 = ((($46)) + -560|0); //@line 19 "./src/cpp/unrar/crypt.cpp"
  __ZN9CryptData13KDF3CacheItemD2Ev($45); //@line 19 "./src/cpp/unrar/crypt.cpp"
  $47 = ($45|0)==($4|0); //@line 19 "./src/cpp/unrar/crypt.cpp"
  if ($47) {
   break;
  } else {
   $46 = $45;
  }
 }
 $48 = $2; //@line 11 "./src/cpp/unrar/crypt.cpp"
 $49 = $3; //@line 11 "./src/cpp/unrar/crypt.cpp"
 ___resumeException($48|0);
 // unreachable;
}
function __ZN9CryptData13KDF3CacheItemC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN11SecPasswordC2Ev($2); //@line 35 "./src/cpp/unrar/crypt.hpp"
 STACKTOP = sp;return; //@line 35 "./src/cpp/unrar/crypt.hpp"
}
function __ZN9CryptData13KDF5CacheItemC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN11SecPasswordC2Ev($2); //@line 25 "./src/cpp/unrar/crypt.hpp"
 STACKTOP = sp;return; //@line 25 "./src/cpp/unrar/crypt.hpp"
}
function __ZN9CryptData13KDF3CacheItemD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN11SecPasswordD2Ev($2); //@line 35 "./src/cpp/unrar/crypt.hpp"
 STACKTOP = sp;return; //@line 35 "./src/cpp/unrar/crypt.hpp"
}
function __ZN9CryptData13KDF5CacheItemD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN11SecPasswordD2Ev($2); //@line 25 "./src/cpp/unrar/crypt.hpp"
 STACKTOP = sp;return; //@line 25 "./src/cpp/unrar/crypt.hpp"
}
function __ZN9CryptDataD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __THREW__ = 0;
 invoke_vii(180,($4|0),2240); //@line 24 "./src/cpp/unrar/crypt.cpp"
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if (!($6)) {
  $7 = ((($4)) + 2244|0); //@line 25 "./src/cpp/unrar/crypt.cpp"
  __THREW__ = 0;
  invoke_vii(180,($7|0),2528); //@line 25 "./src/cpp/unrar/crypt.cpp"
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   $10 = ((($4)) + 2244|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
   $11 = ((($10)) + 2528|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
   $13 = $11;
   while(1) {
    $12 = ((($13)) + -632|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
    __ZN9CryptData13KDF5CacheItemD2Ev($12); //@line 26 "./src/cpp/unrar/crypt.cpp"
    $14 = ($12|0)==($10|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
    if ($14) {
     break;
    } else {
     $13 = $12;
    }
   }
   $15 = ((($4)) + 2240|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
   $17 = $15;
   while(1) {
    $16 = ((($17)) + -560|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
    __ZN9CryptData13KDF3CacheItemD2Ev($16); //@line 26 "./src/cpp/unrar/crypt.cpp"
    $18 = ($16|0)==($4|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
    if ($18) {
     break;
    } else {
     $17 = $16;
    }
   }
   STACKTOP = sp;return; //@line 26 "./src/cpp/unrar/crypt.cpp"
  }
 }
 $19 = ___cxa_find_matching_catch_3(0|0)|0;
 $20 = tempRet0;
 $2 = $19; //@line 26 "./src/cpp/unrar/crypt.cpp"
 $3 = $20; //@line 26 "./src/cpp/unrar/crypt.cpp"
 $21 = ((($4)) + 2244|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
 $22 = ((($21)) + 2528|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
 $24 = $22;
 while(1) {
  $23 = ((($24)) + -632|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
  __ZN9CryptData13KDF5CacheItemD2Ev($23); //@line 26 "./src/cpp/unrar/crypt.cpp"
  $25 = ($23|0)==($21|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
  if ($25) {
   break;
  } else {
   $24 = $23;
  }
 }
 $26 = ((($4)) + 2240|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
 $28 = $26;
 while(1) {
  $27 = ((($28)) + -560|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
  __ZN9CryptData13KDF3CacheItemD2Ev($27); //@line 26 "./src/cpp/unrar/crypt.cpp"
  $29 = ($27|0)==($4|0); //@line 26 "./src/cpp/unrar/crypt.cpp"
  if ($29) {
   break;
  } else {
   $28 = $27;
  }
 }
 $30 = $2; //@line 26 "./src/cpp/unrar/crypt.cpp"
 ___clang_call_terminate($30); //@line 26 "./src/cpp/unrar/crypt.cpp"
 // unreachable; //@line 26 "./src/cpp/unrar/crypt.cpp"
}
function __ZN9CryptData12DecryptBlockEPhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = ((($7)) + 4776|0); //@line 33 "./src/cpp/unrar/crypt.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 33 "./src/cpp/unrar/crypt.cpp"
 switch ($9|0) {
 case 1:  {
  $10 = $4; //@line 37 "./src/cpp/unrar/crypt.cpp"
  $11 = $5; //@line 37 "./src/cpp/unrar/crypt.cpp"
  __ZN9CryptData9Decrypt13EPhj($7,$10,$11); //@line 37 "./src/cpp/unrar/crypt.cpp"
  STACKTOP = sp;return; //@line 52 "./src/cpp/unrar/crypt.cpp"
  break;
 }
 case 2:  {
  $12 = $4; //@line 40 "./src/cpp/unrar/crypt.cpp"
  $13 = $5; //@line 40 "./src/cpp/unrar/crypt.cpp"
  __ZN9CryptData7Crypt15EPhj($7,$12,$13); //@line 40 "./src/cpp/unrar/crypt.cpp"
  STACKTOP = sp;return; //@line 52 "./src/cpp/unrar/crypt.cpp"
  break;
 }
 case 3:  {
  $6 = 0; //@line 43 "./src/cpp/unrar/crypt.cpp"
  while(1) {
   $14 = $6; //@line 43 "./src/cpp/unrar/crypt.cpp"
   $15 = $5; //@line 43 "./src/cpp/unrar/crypt.cpp"
   $16 = ($14>>>0)<($15>>>0); //@line 43 "./src/cpp/unrar/crypt.cpp"
   if (!($16)) {
    break;
   }
   $17 = $4; //@line 44 "./src/cpp/unrar/crypt.cpp"
   $18 = $6; //@line 44 "./src/cpp/unrar/crypt.cpp"
   $19 = (($17) + ($18)|0); //@line 44 "./src/cpp/unrar/crypt.cpp"
   __ZN9CryptData14DecryptBlock20EPh($7,$19); //@line 44 "./src/cpp/unrar/crypt.cpp"
   $20 = $6; //@line 43 "./src/cpp/unrar/crypt.cpp"
   $21 = (($20) + 16)|0; //@line 43 "./src/cpp/unrar/crypt.cpp"
   $6 = $21; //@line 43 "./src/cpp/unrar/crypt.cpp"
  }
  STACKTOP = sp;return; //@line 52 "./src/cpp/unrar/crypt.cpp"
  break;
 }
 case 5: case 4:  {
  $22 = ((($7)) + 4780|0); //@line 49 "./src/cpp/unrar/crypt.cpp"
  $23 = $4; //@line 49 "./src/cpp/unrar/crypt.cpp"
  $24 = $5; //@line 49 "./src/cpp/unrar/crypt.cpp"
  $25 = $4; //@line 49 "./src/cpp/unrar/crypt.cpp"
  __ZN8Rijndael12blockDecryptEPKhjPh($22,$23,$24,$25); //@line 49 "./src/cpp/unrar/crypt.cpp"
  STACKTOP = sp;return; //@line 52 "./src/cpp/unrar/crypt.cpp"
  break;
 }
 default: {
  STACKTOP = sp;return; //@line 52 "./src/cpp/unrar/crypt.cpp"
 }
 }
}
function __ZN9CryptData12SetCryptKeysEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$expand_i1_val = 0, $$expand_i1_val3 = 0, $$not = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 688|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(688|0);
 $9 = sp + 673|0;
 $19 = sp;
 $20 = sp + 544|0;
 $10 = $0;
 $21 = $1&1;
 $11 = $21;
 $12 = $2;
 $13 = $3;
 $14 = $4;
 $15 = $5;
 $16 = $6;
 $17 = $7;
 $18 = $8;
 $22 = $10;
 $23 = $13; //@line 59 "./src/cpp/unrar/crypt.cpp"
 $24 = (__ZN11SecPassword5IsSetEv($23)|0); //@line 59 "./src/cpp/unrar/crypt.cpp"
 $$not = $24 ^ 1; //@line 59 "./src/cpp/unrar/crypt.cpp"
 $25 = $12; //@line 59 "./src/cpp/unrar/crypt.cpp"
 $26 = ($25|0)==(0); //@line 59 "./src/cpp/unrar/crypt.cpp"
 $or$cond = $$not | $26; //@line 59 "./src/cpp/unrar/crypt.cpp"
 if ($or$cond) {
  $$expand_i1_val = 0; //@line 60 "./src/cpp/unrar/crypt.cpp"
  HEAP8[$9>>0] = $$expand_i1_val; //@line 60 "./src/cpp/unrar/crypt.cpp"
  $$pre_trunc = HEAP8[$9>>0]|0; //@line 92 "./src/cpp/unrar/crypt.cpp"
  $43 = $$pre_trunc&1; //@line 92 "./src/cpp/unrar/crypt.cpp"
  STACKTOP = sp;return ($43|0); //@line 92 "./src/cpp/unrar/crypt.cpp"
 }
 $27 = $12; //@line 62 "./src/cpp/unrar/crypt.cpp"
 $28 = ((($22)) + 4776|0); //@line 62 "./src/cpp/unrar/crypt.cpp"
 HEAP32[$28>>2] = $27; //@line 62 "./src/cpp/unrar/crypt.cpp"
 $29 = $13; //@line 65 "./src/cpp/unrar/crypt.cpp"
 __ZN11SecPassword3GetEPwj($29,$19,128); //@line 65 "./src/cpp/unrar/crypt.cpp"
 (__Z10WideToCharPKwPcj($19,$20,128)|0); //@line 67 "./src/cpp/unrar/crypt.cpp"
 $30 = $12; //@line 69 "./src/cpp/unrar/crypt.cpp"
 switch ($30|0) {
 case 1:  {
  __ZN9CryptData8SetKey13EPKc($22,$20); //@line 73 "./src/cpp/unrar/crypt.cpp"
  break;
 }
 case 2:  {
  __ZN9CryptData8SetKey15EPKc($22,$20); //@line 76 "./src/cpp/unrar/crypt.cpp"
  break;
 }
 case 3:  {
  __ZN9CryptData8SetKey20EPKc($22,$20); //@line 79 "./src/cpp/unrar/crypt.cpp"
  break;
 }
 case 4:  {
  $31 = $11; //@line 83 "./src/cpp/unrar/crypt.cpp"
  $32 = $31&1; //@line 83 "./src/cpp/unrar/crypt.cpp"
  $33 = $13; //@line 83 "./src/cpp/unrar/crypt.cpp"
  $34 = $14; //@line 83 "./src/cpp/unrar/crypt.cpp"
  __ZN9CryptData8SetKey30EbP11SecPasswordPKwPKh($22,$32,$33,$19,$34); //@line 83 "./src/cpp/unrar/crypt.cpp"
  break;
 }
 case 5:  {
  $35 = $11; //@line 86 "./src/cpp/unrar/crypt.cpp"
  $36 = $35&1; //@line 86 "./src/cpp/unrar/crypt.cpp"
  $37 = $13; //@line 86 "./src/cpp/unrar/crypt.cpp"
  $38 = $14; //@line 86 "./src/cpp/unrar/crypt.cpp"
  $39 = $15; //@line 86 "./src/cpp/unrar/crypt.cpp"
  $40 = $16; //@line 86 "./src/cpp/unrar/crypt.cpp"
  $41 = $17; //@line 86 "./src/cpp/unrar/crypt.cpp"
  $42 = $18; //@line 86 "./src/cpp/unrar/crypt.cpp"
  __ZN9CryptData8SetKey50EbP11SecPasswordPKwPKhS5_jPhS6_($22,$36,$37,$19,$38,$39,$40,$41,$42); //@line 86 "./src/cpp/unrar/crypt.cpp"
  break;
 }
 default: {
 }
 }
 __Z9cleandataPvj($20,128); //@line 89 "./src/cpp/unrar/crypt.cpp"
 __Z9cleandataPvj($19,512); //@line 90 "./src/cpp/unrar/crypt.cpp"
 $$expand_i1_val3 = 1; //@line 91 "./src/cpp/unrar/crypt.cpp"
 HEAP8[$9>>0] = $$expand_i1_val3; //@line 91 "./src/cpp/unrar/crypt.cpp"
 $$pre_trunc = HEAP8[$9>>0]|0; //@line 92 "./src/cpp/unrar/crypt.cpp"
 $43 = $$pre_trunc&1; //@line 92 "./src/cpp/unrar/crypt.cpp"
 STACKTOP = sp;return ($43|0); //@line 92 "./src/cpp/unrar/crypt.cpp"
}
function __GLOBAL__sub_I_crc_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init_92();
 return;
}
function ___cxx_global_var_init_92() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN11CallInitCRCC2Ev(56033); //@line 52 "./src/cpp/unrar/crc.cpp"
 return; //@line 52 "./src/cpp/unrar/crc.cpp"
}
function __ZN11CallInitCRCC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 __ZL10InitTablesv(); //@line 52 "./src/cpp/unrar/crc.cpp"
 STACKTOP = sp;return; //@line 52 "./src/cpp/unrar/crc.cpp"
}
function __ZL10InitTablesv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 __Z9InitCRC32Pj(46932); //@line 38 "./src/cpp/unrar/crc.cpp"
 $0 = 0; //@line 40 "./src/cpp/unrar/crc.cpp"
 while(1) {
  $3 = $0; //@line 40 "./src/cpp/unrar/crc.cpp"
  $4 = ($3>>>0)<(256); //@line 40 "./src/cpp/unrar/crc.cpp"
  if (!($4)) {
   break;
  }
  $5 = $0; //@line 42 "./src/cpp/unrar/crc.cpp"
  $6 = (46932 + ($5<<2)|0); //@line 42 "./src/cpp/unrar/crc.cpp"
  $7 = HEAP32[$6>>2]|0; //@line 42 "./src/cpp/unrar/crc.cpp"
  $1 = $7; //@line 42 "./src/cpp/unrar/crc.cpp"
  $2 = 1; //@line 43 "./src/cpp/unrar/crc.cpp"
  while(1) {
   $8 = $2; //@line 43 "./src/cpp/unrar/crc.cpp"
   $9 = ($8>>>0)<(8); //@line 43 "./src/cpp/unrar/crc.cpp"
   if (!($9)) {
    break;
   }
   $10 = $1; //@line 45 "./src/cpp/unrar/crc.cpp"
   $11 = $10&255; //@line 45 "./src/cpp/unrar/crc.cpp"
   $12 = $11&255; //@line 45 "./src/cpp/unrar/crc.cpp"
   $13 = (46932 + ($12<<2)|0); //@line 45 "./src/cpp/unrar/crc.cpp"
   $14 = HEAP32[$13>>2]|0; //@line 45 "./src/cpp/unrar/crc.cpp"
   $15 = $1; //@line 45 "./src/cpp/unrar/crc.cpp"
   $16 = $15 >>> 8; //@line 45 "./src/cpp/unrar/crc.cpp"
   $17 = $14 ^ $16; //@line 45 "./src/cpp/unrar/crc.cpp"
   $1 = $17; //@line 45 "./src/cpp/unrar/crc.cpp"
   $18 = $1; //@line 46 "./src/cpp/unrar/crc.cpp"
   $19 = $2; //@line 46 "./src/cpp/unrar/crc.cpp"
   $20 = (46932 + ($19<<10)|0); //@line 46 "./src/cpp/unrar/crc.cpp"
   $21 = $0; //@line 46 "./src/cpp/unrar/crc.cpp"
   $22 = (($20) + ($21<<2)|0); //@line 46 "./src/cpp/unrar/crc.cpp"
   HEAP32[$22>>2] = $18; //@line 46 "./src/cpp/unrar/crc.cpp"
   $23 = $2; //@line 43 "./src/cpp/unrar/crc.cpp"
   $24 = (($23) + 1)|0; //@line 43 "./src/cpp/unrar/crc.cpp"
   $2 = $24; //@line 43 "./src/cpp/unrar/crc.cpp"
  }
  $25 = $0; //@line 40 "./src/cpp/unrar/crc.cpp"
  $26 = (($25) + 1)|0; //@line 40 "./src/cpp/unrar/crc.cpp"
  $0 = $26; //@line 40 "./src/cpp/unrar/crc.cpp"
 }
 STACKTOP = sp;return; //@line 49 "./src/cpp/unrar/crc.cpp"
}
function __Z9InitCRC32Pj($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $5 = $1; //@line 24 "./src/cpp/unrar/crc.cpp"
 $6 = ((($5)) + 4|0); //@line 24 "./src/cpp/unrar/crc.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 24 "./src/cpp/unrar/crc.cpp"
 $8 = ($7|0)!=(0); //@line 24 "./src/cpp/unrar/crc.cpp"
 if ($8) {
  STACKTOP = sp;return; //@line 33 "./src/cpp/unrar/crc.cpp"
 }
 $2 = 0; //@line 26 "./src/cpp/unrar/crc.cpp"
 while(1) {
  $9 = $2; //@line 26 "./src/cpp/unrar/crc.cpp"
  $10 = ($9>>>0)<(256); //@line 26 "./src/cpp/unrar/crc.cpp"
  if (!($10)) {
   break;
  }
  $11 = $2; //@line 28 "./src/cpp/unrar/crc.cpp"
  $3 = $11; //@line 28 "./src/cpp/unrar/crc.cpp"
  $4 = 0; //@line 29 "./src/cpp/unrar/crc.cpp"
  while(1) {
   $12 = $4; //@line 29 "./src/cpp/unrar/crc.cpp"
   $13 = ($12>>>0)<(8); //@line 29 "./src/cpp/unrar/crc.cpp"
   $14 = $3;
   if (!($13)) {
    break;
   }
   $15 = $14 & 1; //@line 30 "./src/cpp/unrar/crc.cpp"
   $16 = ($15|0)!=(0); //@line 30 "./src/cpp/unrar/crc.cpp"
   $17 = $3;
   $18 = $17 >>> 1;
   $19 = $18 ^ -306674912; //@line 30 "./src/cpp/unrar/crc.cpp"
   $20 = $16 ? $19 : $18; //@line 30 "./src/cpp/unrar/crc.cpp"
   $3 = $20; //@line 30 "./src/cpp/unrar/crc.cpp"
   $21 = $4; //@line 29 "./src/cpp/unrar/crc.cpp"
   $22 = (($21) + 1)|0; //@line 29 "./src/cpp/unrar/crc.cpp"
   $4 = $22; //@line 29 "./src/cpp/unrar/crc.cpp"
  }
  $23 = $1; //@line 31 "./src/cpp/unrar/crc.cpp"
  $24 = $2; //@line 31 "./src/cpp/unrar/crc.cpp"
  $25 = (($23) + ($24<<2)|0); //@line 31 "./src/cpp/unrar/crc.cpp"
  HEAP32[$25>>2] = $14; //@line 31 "./src/cpp/unrar/crc.cpp"
  $26 = $2; //@line 26 "./src/cpp/unrar/crc.cpp"
  $27 = (($26) + 1)|0; //@line 26 "./src/cpp/unrar/crc.cpp"
  $2 = $27; //@line 26 "./src/cpp/unrar/crc.cpp"
 }
 STACKTOP = sp;return; //@line 33 "./src/cpp/unrar/crc.cpp"
}
function __Z5CRC32jPKvj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4; //@line 56 "./src/cpp/unrar/crc.cpp"
 $6 = $8; //@line 56 "./src/cpp/unrar/crc.cpp"
 while(1) {
  $9 = $5; //@line 59 "./src/cpp/unrar/crc.cpp"
  $10 = ($9>>>0)>(0); //@line 59 "./src/cpp/unrar/crc.cpp"
  if (!($10)) {
   break;
  }
  $11 = $6; //@line 59 "./src/cpp/unrar/crc.cpp"
  $12 = $11; //@line 59 "./src/cpp/unrar/crc.cpp"
  $13 = $12 & 7; //@line 59 "./src/cpp/unrar/crc.cpp"
  $14 = ($13|0)!=(0); //@line 59 "./src/cpp/unrar/crc.cpp"
  if (!($14)) {
   break;
  }
  $15 = $3; //@line 60 "./src/cpp/unrar/crc.cpp"
  $16 = $6; //@line 60 "./src/cpp/unrar/crc.cpp"
  $17 = HEAP8[$16>>0]|0; //@line 60 "./src/cpp/unrar/crc.cpp"
  $18 = $17&255; //@line 60 "./src/cpp/unrar/crc.cpp"
  $19 = $15 ^ $18; //@line 60 "./src/cpp/unrar/crc.cpp"
  $20 = $19&255; //@line 60 "./src/cpp/unrar/crc.cpp"
  $21 = $20&255; //@line 60 "./src/cpp/unrar/crc.cpp"
  $22 = (46932 + ($21<<2)|0); //@line 60 "./src/cpp/unrar/crc.cpp"
  $23 = HEAP32[$22>>2]|0; //@line 60 "./src/cpp/unrar/crc.cpp"
  $24 = $3; //@line 60 "./src/cpp/unrar/crc.cpp"
  $25 = $24 >>> 8; //@line 60 "./src/cpp/unrar/crc.cpp"
  $26 = $23 ^ $25; //@line 60 "./src/cpp/unrar/crc.cpp"
  $3 = $26; //@line 60 "./src/cpp/unrar/crc.cpp"
  $27 = $5; //@line 59 "./src/cpp/unrar/crc.cpp"
  $28 = (($27) + -1)|0; //@line 59 "./src/cpp/unrar/crc.cpp"
  $5 = $28; //@line 59 "./src/cpp/unrar/crc.cpp"
  $29 = $6; //@line 59 "./src/cpp/unrar/crc.cpp"
  $30 = ((($29)) + 1|0); //@line 59 "./src/cpp/unrar/crc.cpp"
  $6 = $30; //@line 59 "./src/cpp/unrar/crc.cpp"
 }
 while(1) {
  $31 = $5; //@line 62 "./src/cpp/unrar/crc.cpp"
  $32 = ($31>>>0)>=(8); //@line 62 "./src/cpp/unrar/crc.cpp"
  if (!($32)) {
   break;
  }
  $33 = $6; //@line 68 "./src/cpp/unrar/crc.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 68 "./src/cpp/unrar/crc.cpp"
  $35 = $3; //@line 68 "./src/cpp/unrar/crc.cpp"
  $36 = $35 ^ $34; //@line 68 "./src/cpp/unrar/crc.cpp"
  $3 = $36; //@line 68 "./src/cpp/unrar/crc.cpp"
  $37 = $6; //@line 69 "./src/cpp/unrar/crc.cpp"
  $38 = ((($37)) + 4|0); //@line 69 "./src/cpp/unrar/crc.cpp"
  $39 = HEAP32[$38>>2]|0; //@line 69 "./src/cpp/unrar/crc.cpp"
  $7 = $39; //@line 69 "./src/cpp/unrar/crc.cpp"
  $40 = $3; //@line 71 "./src/cpp/unrar/crc.cpp"
  $41 = $40&255; //@line 71 "./src/cpp/unrar/crc.cpp"
  $42 = $41&255; //@line 71 "./src/cpp/unrar/crc.cpp"
  $43 = ((54100) + ($42<<2)|0); //@line 71 "./src/cpp/unrar/crc.cpp"
  $44 = HEAP32[$43>>2]|0; //@line 71 "./src/cpp/unrar/crc.cpp"
  $45 = $3; //@line 72 "./src/cpp/unrar/crc.cpp"
  $46 = $45 >>> 8; //@line 72 "./src/cpp/unrar/crc.cpp"
  $47 = $46&255; //@line 72 "./src/cpp/unrar/crc.cpp"
  $48 = $47&255; //@line 72 "./src/cpp/unrar/crc.cpp"
  $49 = ((53076) + ($48<<2)|0); //@line 72 "./src/cpp/unrar/crc.cpp"
  $50 = HEAP32[$49>>2]|0; //@line 72 "./src/cpp/unrar/crc.cpp"
  $51 = $44 ^ $50; //@line 71 "./src/cpp/unrar/crc.cpp"
  $52 = $3; //@line 73 "./src/cpp/unrar/crc.cpp"
  $53 = $52 >>> 16; //@line 73 "./src/cpp/unrar/crc.cpp"
  $54 = $53&255; //@line 73 "./src/cpp/unrar/crc.cpp"
  $55 = $54&255; //@line 73 "./src/cpp/unrar/crc.cpp"
  $56 = ((52052) + ($55<<2)|0); //@line 73 "./src/cpp/unrar/crc.cpp"
  $57 = HEAP32[$56>>2]|0; //@line 73 "./src/cpp/unrar/crc.cpp"
  $58 = $51 ^ $57; //@line 72 "./src/cpp/unrar/crc.cpp"
  $59 = $3; //@line 74 "./src/cpp/unrar/crc.cpp"
  $60 = $59 >>> 24; //@line 74 "./src/cpp/unrar/crc.cpp"
  $61 = $60&255; //@line 74 "./src/cpp/unrar/crc.cpp"
  $62 = $61&255; //@line 74 "./src/cpp/unrar/crc.cpp"
  $63 = ((51028) + ($62<<2)|0); //@line 74 "./src/cpp/unrar/crc.cpp"
  $64 = HEAP32[$63>>2]|0; //@line 74 "./src/cpp/unrar/crc.cpp"
  $65 = $58 ^ $64; //@line 73 "./src/cpp/unrar/crc.cpp"
  $66 = $7; //@line 75 "./src/cpp/unrar/crc.cpp"
  $67 = $66&255; //@line 75 "./src/cpp/unrar/crc.cpp"
  $68 = $67&255; //@line 75 "./src/cpp/unrar/crc.cpp"
  $69 = ((50004) + ($68<<2)|0); //@line 75 "./src/cpp/unrar/crc.cpp"
  $70 = HEAP32[$69>>2]|0; //@line 75 "./src/cpp/unrar/crc.cpp"
  $71 = $65 ^ $70; //@line 74 "./src/cpp/unrar/crc.cpp"
  $72 = $7; //@line 76 "./src/cpp/unrar/crc.cpp"
  $73 = $72 >>> 8; //@line 76 "./src/cpp/unrar/crc.cpp"
  $74 = $73&255; //@line 76 "./src/cpp/unrar/crc.cpp"
  $75 = $74&255; //@line 76 "./src/cpp/unrar/crc.cpp"
  $76 = ((48980) + ($75<<2)|0); //@line 76 "./src/cpp/unrar/crc.cpp"
  $77 = HEAP32[$76>>2]|0; //@line 76 "./src/cpp/unrar/crc.cpp"
  $78 = $71 ^ $77; //@line 75 "./src/cpp/unrar/crc.cpp"
  $79 = $7; //@line 77 "./src/cpp/unrar/crc.cpp"
  $80 = $79 >>> 16; //@line 77 "./src/cpp/unrar/crc.cpp"
  $81 = $80&255; //@line 77 "./src/cpp/unrar/crc.cpp"
  $82 = $81&255; //@line 77 "./src/cpp/unrar/crc.cpp"
  $83 = ((47956) + ($82<<2)|0); //@line 77 "./src/cpp/unrar/crc.cpp"
  $84 = HEAP32[$83>>2]|0; //@line 77 "./src/cpp/unrar/crc.cpp"
  $85 = $78 ^ $84; //@line 76 "./src/cpp/unrar/crc.cpp"
  $86 = $7; //@line 78 "./src/cpp/unrar/crc.cpp"
  $87 = $86 >>> 24; //@line 78 "./src/cpp/unrar/crc.cpp"
  $88 = $87&255; //@line 78 "./src/cpp/unrar/crc.cpp"
  $89 = $88&255; //@line 78 "./src/cpp/unrar/crc.cpp"
  $90 = (46932 + ($89<<2)|0); //@line 78 "./src/cpp/unrar/crc.cpp"
  $91 = HEAP32[$90>>2]|0; //@line 78 "./src/cpp/unrar/crc.cpp"
  $92 = $85 ^ $91; //@line 77 "./src/cpp/unrar/crc.cpp"
  $3 = $92; //@line 71 "./src/cpp/unrar/crc.cpp"
  $93 = $5; //@line 62 "./src/cpp/unrar/crc.cpp"
  $94 = (($93) - 8)|0; //@line 62 "./src/cpp/unrar/crc.cpp"
  $5 = $94; //@line 62 "./src/cpp/unrar/crc.cpp"
  $95 = $6; //@line 62 "./src/cpp/unrar/crc.cpp"
  $96 = ((($95)) + 8|0); //@line 62 "./src/cpp/unrar/crc.cpp"
  $6 = $96; //@line 62 "./src/cpp/unrar/crc.cpp"
 }
 while(1) {
  $97 = $5; //@line 81 "./src/cpp/unrar/crc.cpp"
  $98 = ($97>>>0)>(0); //@line 81 "./src/cpp/unrar/crc.cpp"
  $99 = $3;
  if (!($98)) {
   break;
  }
  $100 = $6; //@line 82 "./src/cpp/unrar/crc.cpp"
  $101 = HEAP8[$100>>0]|0; //@line 82 "./src/cpp/unrar/crc.cpp"
  $102 = $101&255; //@line 82 "./src/cpp/unrar/crc.cpp"
  $103 = $99 ^ $102; //@line 82 "./src/cpp/unrar/crc.cpp"
  $104 = $103&255; //@line 82 "./src/cpp/unrar/crc.cpp"
  $105 = $104&255; //@line 82 "./src/cpp/unrar/crc.cpp"
  $106 = (46932 + ($105<<2)|0); //@line 82 "./src/cpp/unrar/crc.cpp"
  $107 = HEAP32[$106>>2]|0; //@line 82 "./src/cpp/unrar/crc.cpp"
  $108 = $3; //@line 82 "./src/cpp/unrar/crc.cpp"
  $109 = $108 >>> 8; //@line 82 "./src/cpp/unrar/crc.cpp"
  $110 = $107 ^ $109; //@line 82 "./src/cpp/unrar/crc.cpp"
  $3 = $110; //@line 82 "./src/cpp/unrar/crc.cpp"
  $111 = $5; //@line 81 "./src/cpp/unrar/crc.cpp"
  $112 = (($111) + -1)|0; //@line 81 "./src/cpp/unrar/crc.cpp"
  $5 = $112; //@line 81 "./src/cpp/unrar/crc.cpp"
  $113 = $6; //@line 81 "./src/cpp/unrar/crc.cpp"
  $114 = ((($113)) + 1|0); //@line 81 "./src/cpp/unrar/crc.cpp"
  $6 = $114; //@line 81 "./src/cpp/unrar/crc.cpp"
 }
 STACKTOP = sp;return ($99|0); //@line 84 "./src/cpp/unrar/crc.cpp"
}
function __Z10Checksum14tPKvj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4; //@line 92 "./src/cpp/unrar/crc.cpp"
 $6 = $8; //@line 92 "./src/cpp/unrar/crc.cpp"
 $7 = 0; //@line 93 "./src/cpp/unrar/crc.cpp"
 while(1) {
  $9 = $7; //@line 93 "./src/cpp/unrar/crc.cpp"
  $10 = $5; //@line 93 "./src/cpp/unrar/crc.cpp"
  $11 = ($9>>>0)<($10>>>0); //@line 93 "./src/cpp/unrar/crc.cpp"
  $12 = $3;
  if (!($11)) {
   break;
  }
  $13 = $12&65535; //@line 95 "./src/cpp/unrar/crc.cpp"
  $14 = $6; //@line 95 "./src/cpp/unrar/crc.cpp"
  $15 = $7; //@line 95 "./src/cpp/unrar/crc.cpp"
  $16 = (($14) + ($15)|0); //@line 95 "./src/cpp/unrar/crc.cpp"
  $17 = HEAP8[$16>>0]|0; //@line 95 "./src/cpp/unrar/crc.cpp"
  $18 = $17&255; //@line 95 "./src/cpp/unrar/crc.cpp"
  $19 = (($13) + ($18))|0; //@line 95 "./src/cpp/unrar/crc.cpp"
  $20 = $19 & 65535; //@line 95 "./src/cpp/unrar/crc.cpp"
  $21 = $20&65535; //@line 95 "./src/cpp/unrar/crc.cpp"
  $3 = $21; //@line 95 "./src/cpp/unrar/crc.cpp"
  $22 = $3; //@line 96 "./src/cpp/unrar/crc.cpp"
  $23 = $22&65535; //@line 96 "./src/cpp/unrar/crc.cpp"
  $24 = $23 << 1; //@line 96 "./src/cpp/unrar/crc.cpp"
  $25 = $3; //@line 96 "./src/cpp/unrar/crc.cpp"
  $26 = $25&65535; //@line 96 "./src/cpp/unrar/crc.cpp"
  $27 = $26 >> 15; //@line 96 "./src/cpp/unrar/crc.cpp"
  $28 = $24 | $27; //@line 96 "./src/cpp/unrar/crc.cpp"
  $29 = $28 & 65535; //@line 96 "./src/cpp/unrar/crc.cpp"
  $30 = $29&65535; //@line 96 "./src/cpp/unrar/crc.cpp"
  $3 = $30; //@line 96 "./src/cpp/unrar/crc.cpp"
  $31 = $7; //@line 93 "./src/cpp/unrar/crc.cpp"
  $32 = (($31) + 1)|0; //@line 93 "./src/cpp/unrar/crc.cpp"
  $7 = $32; //@line 93 "./src/cpp/unrar/crc.cpp"
 }
 STACKTOP = sp;return ($12|0); //@line 98 "./src/cpp/unrar/crc.cpp"
}
function __ZN7RawRead5ResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5ArrayIhE9SoftResetEv($2); //@line 19 "./src/cpp/unrar/rawread.cpp"
 $3 = ((($2)) + 24|0); //@line 20 "./src/cpp/unrar/rawread.cpp"
 HEAP32[$3>>2] = 0; //@line 20 "./src/cpp/unrar/rawread.cpp"
 $4 = ((($2)) + 20|0); //@line 21 "./src/cpp/unrar/rawread.cpp"
 HEAP32[$4>>2] = 0; //@line 21 "./src/cpp/unrar/rawread.cpp"
 $5 = ((($2)) + 28|0); //@line 23 "./src/cpp/unrar/rawread.cpp"
 HEAP32[$5>>2] = 0; //@line 23 "./src/cpp/unrar/rawread.cpp"
 STACKTOP = sp;return; //@line 25 "./src/cpp/unrar/rawread.cpp"
}
function __ZN5ArrayIhE9SoftResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 138 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 138 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 139 "./src/cpp/unrar/array.hpp"
}
function __ZN7RawReadC2EP4File($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5ArrayIhEC2Ev($6); //@line 10 "./src/cpp/unrar/rawread.cpp"
 $7 = $3; //@line 12 "./src/cpp/unrar/rawread.cpp"
 $8 = ((($6)) + 16|0); //@line 12 "./src/cpp/unrar/rawread.cpp"
 HEAP32[$8>>2] = $7; //@line 12 "./src/cpp/unrar/rawread.cpp"
 __THREW__ = 0;
 invoke_vi(181,($6|0)); //@line 13 "./src/cpp/unrar/rawread.cpp"
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $11 = ___cxa_find_matching_catch_2()|0;
  $12 = tempRet0;
  $4 = $11; //@line 14 "./src/cpp/unrar/rawread.cpp"
  $5 = $12; //@line 14 "./src/cpp/unrar/rawread.cpp"
  __ZN5ArrayIhED2Ev($6); //@line 14 "./src/cpp/unrar/rawread.cpp"
  $13 = $4; //@line 14 "./src/cpp/unrar/rawread.cpp"
  $14 = $5; //@line 14 "./src/cpp/unrar/rawread.cpp"
  ___resumeException($13|0);
  // unreachable;
 } else {
  STACKTOP = sp;return; //@line 14 "./src/cpp/unrar/rawread.cpp"
 }
}
function __ZN7RawRead4ReadEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink6 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $9 = $2;
 $4 = 0; //@line 30 "./src/cpp/unrar/rawread.cpp"
 $10 = ((($9)) + 28|0); //@line 32 "./src/cpp/unrar/rawread.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 32 "./src/cpp/unrar/rawread.cpp"
 $12 = ($11|0)!=(0|0); //@line 32 "./src/cpp/unrar/rawread.cpp"
 do {
  if ($12) {
   $13 = (__ZN5ArrayIhE4SizeEv($9)|0); //@line 36 "./src/cpp/unrar/rawread.cpp"
   $5 = $13; //@line 36 "./src/cpp/unrar/rawread.cpp"
   $14 = $5; //@line 39 "./src/cpp/unrar/rawread.cpp"
   $15 = ((($9)) + 20|0); //@line 39 "./src/cpp/unrar/rawread.cpp"
   $16 = HEAP32[$15>>2]|0; //@line 39 "./src/cpp/unrar/rawread.cpp"
   $17 = (($14) - ($16))|0; //@line 39 "./src/cpp/unrar/rawread.cpp"
   $6 = $17; //@line 39 "./src/cpp/unrar/rawread.cpp"
   $18 = $3; //@line 41 "./src/cpp/unrar/rawread.cpp"
   $19 = $6; //@line 41 "./src/cpp/unrar/rawread.cpp"
   $20 = ($18>>>0)>($19>>>0); //@line 41 "./src/cpp/unrar/rawread.cpp"
   $21 = $3;
   if ($20) {
    $22 = $6; //@line 43 "./src/cpp/unrar/rawread.cpp"
    $23 = (($21) - ($22))|0; //@line 43 "./src/cpp/unrar/rawread.cpp"
    $7 = $23; //@line 43 "./src/cpp/unrar/rawread.cpp"
    $24 = $7; //@line 44 "./src/cpp/unrar/rawread.cpp"
    $25 = $7; //@line 44 "./src/cpp/unrar/rawread.cpp"
    $26 = $25 ^ -1; //@line 44 "./src/cpp/unrar/rawread.cpp"
    $27 = (($26) + 1)|0; //@line 44 "./src/cpp/unrar/rawread.cpp"
    $28 = $27 & 15; //@line 44 "./src/cpp/unrar/rawread.cpp"
    $29 = (($24) + ($28))|0; //@line 44 "./src/cpp/unrar/rawread.cpp"
    $8 = $29; //@line 44 "./src/cpp/unrar/rawread.cpp"
    $30 = $8; //@line 45 "./src/cpp/unrar/rawread.cpp"
    __ZN5ArrayIhE3AddEj($9,$30); //@line 45 "./src/cpp/unrar/rawread.cpp"
    $31 = ((($9)) + 16|0); //@line 46 "./src/cpp/unrar/rawread.cpp"
    $32 = HEAP32[$31>>2]|0; //@line 46 "./src/cpp/unrar/rawread.cpp"
    $33 = HEAP32[$32>>2]|0; //@line 46 "./src/cpp/unrar/rawread.cpp"
    $34 = ((($33)) + 12|0); //@line 46 "./src/cpp/unrar/rawread.cpp"
    $35 = HEAP32[$34>>2]|0; //@line 46 "./src/cpp/unrar/rawread.cpp"
    $36 = $5; //@line 46 "./src/cpp/unrar/rawread.cpp"
    $37 = (__ZNK5ArrayIhEixEj($9,$36)|0); //@line 46 "./src/cpp/unrar/rawread.cpp"
    $38 = $8; //@line 46 "./src/cpp/unrar/rawread.cpp"
    $39 = (FUNCTION_TABLE_iiii[$35 & 511]($32,$37,$38)|0); //@line 46 "./src/cpp/unrar/rawread.cpp"
    $4 = $39; //@line 46 "./src/cpp/unrar/rawread.cpp"
    $40 = ((($9)) + 28|0); //@line 47 "./src/cpp/unrar/rawread.cpp"
    $41 = HEAP32[$40>>2]|0; //@line 47 "./src/cpp/unrar/rawread.cpp"
    $42 = $5; //@line 47 "./src/cpp/unrar/rawread.cpp"
    $43 = (__ZNK5ArrayIhEixEj($9,$42)|0); //@line 47 "./src/cpp/unrar/rawread.cpp"
    $44 = $8; //@line 47 "./src/cpp/unrar/rawread.cpp"
    __ZN9CryptData12DecryptBlockEPhj($41,$43,$44); //@line 47 "./src/cpp/unrar/rawread.cpp"
    $45 = $4; //@line 48 "./src/cpp/unrar/rawread.cpp"
    $46 = ($45|0)==(0); //@line 48 "./src/cpp/unrar/rawread.cpp"
    $47 = $3; //@line 48 "./src/cpp/unrar/rawread.cpp"
    $48 = $46 ? 0 : $47; //@line 48 "./src/cpp/unrar/rawread.cpp"
    $$sink6 = $48;
    break;
   } else {
    $4 = $21; //@line 52 "./src/cpp/unrar/rawread.cpp"
    $49 = $3; //@line 53 "./src/cpp/unrar/rawread.cpp"
    $$sink6 = $49;
    break;
   }
  } else {
   $50 = $3; //@line 58 "./src/cpp/unrar/rawread.cpp"
   $51 = ($50|0)!=(0); //@line 58 "./src/cpp/unrar/rawread.cpp"
   if ($51) {
    $52 = $3; //@line 60 "./src/cpp/unrar/rawread.cpp"
    __ZN5ArrayIhE3AddEj($9,$52); //@line 60 "./src/cpp/unrar/rawread.cpp"
    $53 = ((($9)) + 16|0); //@line 61 "./src/cpp/unrar/rawread.cpp"
    $54 = HEAP32[$53>>2]|0; //@line 61 "./src/cpp/unrar/rawread.cpp"
    $55 = HEAP32[$54>>2]|0; //@line 61 "./src/cpp/unrar/rawread.cpp"
    $56 = ((($55)) + 12|0); //@line 61 "./src/cpp/unrar/rawread.cpp"
    $57 = HEAP32[$56>>2]|0; //@line 61 "./src/cpp/unrar/rawread.cpp"
    $58 = ((($9)) + 20|0); //@line 61 "./src/cpp/unrar/rawread.cpp"
    $59 = HEAP32[$58>>2]|0; //@line 61 "./src/cpp/unrar/rawread.cpp"
    $60 = (__ZNK5ArrayIhEixEj($9,$59)|0); //@line 61 "./src/cpp/unrar/rawread.cpp"
    $61 = $3; //@line 61 "./src/cpp/unrar/rawread.cpp"
    $62 = (FUNCTION_TABLE_iiii[$57 & 511]($54,$60,$61)|0); //@line 61 "./src/cpp/unrar/rawread.cpp"
    $4 = $62; //@line 61 "./src/cpp/unrar/rawread.cpp"
    $63 = $4; //@line 62 "./src/cpp/unrar/rawread.cpp"
    $$sink6 = $63;
    break;
   } else {
    $67 = $4; //@line 64 "./src/cpp/unrar/rawread.cpp"
    STACKTOP = sp;return ($67|0); //@line 64 "./src/cpp/unrar/rawread.cpp"
   }
  }
 } while(0);
 $64 = ((($9)) + 20|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = (($65) + ($$sink6))|0;
 HEAP32[$64>>2] = $66;
 $67 = $4; //@line 64 "./src/cpp/unrar/rawread.cpp"
 STACKTOP = sp;return ($67|0); //@line 64 "./src/cpp/unrar/rawread.cpp"
}
function __ZN7RawRead4ReadEPhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5; //@line 70 "./src/cpp/unrar/rawread.cpp"
 $8 = ($7|0)!=(0); //@line 70 "./src/cpp/unrar/rawread.cpp"
 if (!($8)) {
  STACKTOP = sp;return; //@line 76 "./src/cpp/unrar/rawread.cpp"
 }
 $9 = $5; //@line 72 "./src/cpp/unrar/rawread.cpp"
 __ZN5ArrayIhE3AddEj($6,$9); //@line 72 "./src/cpp/unrar/rawread.cpp"
 $10 = ((($6)) + 20|0); //@line 73 "./src/cpp/unrar/rawread.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 73 "./src/cpp/unrar/rawread.cpp"
 $12 = (__ZNK5ArrayIhEixEj($6,$11)|0); //@line 73 "./src/cpp/unrar/rawread.cpp"
 $13 = $4; //@line 73 "./src/cpp/unrar/rawread.cpp"
 $14 = $5; //@line 73 "./src/cpp/unrar/rawread.cpp"
 _memcpy(($12|0),($13|0),($14|0))|0; //@line 73 "./src/cpp/unrar/rawread.cpp"
 $15 = $5; //@line 74 "./src/cpp/unrar/rawread.cpp"
 $16 = ((($6)) + 20|0); //@line 74 "./src/cpp/unrar/rawread.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 74 "./src/cpp/unrar/rawread.cpp"
 $18 = (($17) + ($15))|0; //@line 74 "./src/cpp/unrar/rawread.cpp"
 HEAP32[$16>>2] = $18; //@line 74 "./src/cpp/unrar/rawread.cpp"
 STACKTOP = sp;return; //@line 76 "./src/cpp/unrar/rawread.cpp"
}
function __ZN7RawRead4Get1Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0); //@line 81 "./src/cpp/unrar/rawread.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 81 "./src/cpp/unrar/rawread.cpp"
 $5 = ((($2)) + 20|0); //@line 81 "./src/cpp/unrar/rawread.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 81 "./src/cpp/unrar/rawread.cpp"
 $7 = ($4>>>0)<($6>>>0); //@line 81 "./src/cpp/unrar/rawread.cpp"
 if (!($7)) {
  $15 = 0;
  $14 = $15&255; //@line 81 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($14|0); //@line 81 "./src/cpp/unrar/rawread.cpp"
 }
 $8 = ((($2)) + 24|0); //@line 81 "./src/cpp/unrar/rawread.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 81 "./src/cpp/unrar/rawread.cpp"
 $10 = (($9) + 1)|0; //@line 81 "./src/cpp/unrar/rawread.cpp"
 HEAP32[$8>>2] = $10; //@line 81 "./src/cpp/unrar/rawread.cpp"
 $11 = (__ZNK5ArrayIhEixEj($2,$9)|0); //@line 81 "./src/cpp/unrar/rawread.cpp"
 $12 = HEAP8[$11>>0]|0; //@line 81 "./src/cpp/unrar/rawread.cpp"
 $13 = $12&255; //@line 81 "./src/cpp/unrar/rawread.cpp"
 $15 = $13;
 $14 = $15&255; //@line 81 "./src/cpp/unrar/rawread.cpp"
 STACKTOP = sp;return ($14|0); //@line 81 "./src/cpp/unrar/rawread.cpp"
}
function __ZN7RawRead4Get2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2;
 $5 = ((($4)) + 24|0); //@line 87 "./src/cpp/unrar/rawread.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 87 "./src/cpp/unrar/rawread.cpp"
 $7 = (($6) + 1)|0; //@line 87 "./src/cpp/unrar/rawread.cpp"
 $8 = ((($4)) + 20|0); //@line 87 "./src/cpp/unrar/rawread.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 87 "./src/cpp/unrar/rawread.cpp"
 $10 = ($7>>>0)<($9>>>0); //@line 87 "./src/cpp/unrar/rawread.cpp"
 if ($10) {
  $11 = ((($4)) + 24|0); //@line 89 "./src/cpp/unrar/rawread.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $13 = (__ZNK5ArrayIhEixEj($4,$12)|0); //@line 89 "./src/cpp/unrar/rawread.cpp"
  $14 = HEAP8[$13>>0]|0; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $15 = $14&255; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $16 = ((($4)) + 24|0); //@line 89 "./src/cpp/unrar/rawread.cpp"
  $17 = HEAP32[$16>>2]|0; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $18 = (($17) + 1)|0; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $19 = (__ZNK5ArrayIhEixEj($4,$18)|0); //@line 89 "./src/cpp/unrar/rawread.cpp"
  $20 = HEAP8[$19>>0]|0; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $21 = $20&255; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $22 = $21 << 8; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $23 = (($15) + ($22))|0; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $24 = $23&65535; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $3 = $24; //@line 89 "./src/cpp/unrar/rawread.cpp"
  $25 = ((($4)) + 24|0); //@line 90 "./src/cpp/unrar/rawread.cpp"
  $26 = HEAP32[$25>>2]|0; //@line 90 "./src/cpp/unrar/rawread.cpp"
  $27 = (($26) + 2)|0; //@line 90 "./src/cpp/unrar/rawread.cpp"
  HEAP32[$25>>2] = $27; //@line 90 "./src/cpp/unrar/rawread.cpp"
  $28 = $3; //@line 91 "./src/cpp/unrar/rawread.cpp"
  $1 = $28; //@line 91 "./src/cpp/unrar/rawread.cpp"
  $29 = $1; //@line 94 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($29|0); //@line 94 "./src/cpp/unrar/rawread.cpp"
 } else {
  $1 = 0; //@line 93 "./src/cpp/unrar/rawread.cpp"
  $29 = $1; //@line 94 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($29|0); //@line 94 "./src/cpp/unrar/rawread.cpp"
 }
 return (0)|0;
}
function __ZN7RawRead4Get4Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2;
 $5 = ((($4)) + 24|0); //@line 99 "./src/cpp/unrar/rawread.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 99 "./src/cpp/unrar/rawread.cpp"
 $7 = (($6) + 3)|0; //@line 99 "./src/cpp/unrar/rawread.cpp"
 $8 = ((($4)) + 20|0); //@line 99 "./src/cpp/unrar/rawread.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 99 "./src/cpp/unrar/rawread.cpp"
 $10 = ($7>>>0)<($9>>>0); //@line 99 "./src/cpp/unrar/rawread.cpp"
 if ($10) {
  $11 = ((($4)) + 24|0); //@line 101 "./src/cpp/unrar/rawread.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $13 = (__ZNK5ArrayIhEixEj($4,$12)|0); //@line 101 "./src/cpp/unrar/rawread.cpp"
  $14 = HEAP8[$13>>0]|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $15 = $14&255; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $16 = ((($4)) + 24|0); //@line 101 "./src/cpp/unrar/rawread.cpp"
  $17 = HEAP32[$16>>2]|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $18 = (($17) + 1)|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $19 = (__ZNK5ArrayIhEixEj($4,$18)|0); //@line 101 "./src/cpp/unrar/rawread.cpp"
  $20 = HEAP8[$19>>0]|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $21 = $20&255; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $22 = $21 << 8; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $23 = (($15) + ($22))|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $24 = ((($4)) + 24|0); //@line 101 "./src/cpp/unrar/rawread.cpp"
  $25 = HEAP32[$24>>2]|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $26 = (($25) + 2)|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $27 = (__ZNK5ArrayIhEixEj($4,$26)|0); //@line 101 "./src/cpp/unrar/rawread.cpp"
  $28 = HEAP8[$27>>0]|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $29 = $28&255; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $30 = $29 << 16; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $31 = (($23) + ($30))|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $32 = ((($4)) + 24|0); //@line 102 "./src/cpp/unrar/rawread.cpp"
  $33 = HEAP32[$32>>2]|0; //@line 102 "./src/cpp/unrar/rawread.cpp"
  $34 = (($33) + 3)|0; //@line 102 "./src/cpp/unrar/rawread.cpp"
  $35 = (__ZNK5ArrayIhEixEj($4,$34)|0); //@line 102 "./src/cpp/unrar/rawread.cpp"
  $36 = HEAP8[$35>>0]|0; //@line 102 "./src/cpp/unrar/rawread.cpp"
  $37 = $36&255; //@line 102 "./src/cpp/unrar/rawread.cpp"
  $38 = $37 << 24; //@line 102 "./src/cpp/unrar/rawread.cpp"
  $39 = (($31) + ($38))|0; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $3 = $39; //@line 101 "./src/cpp/unrar/rawread.cpp"
  $40 = ((($4)) + 24|0); //@line 103 "./src/cpp/unrar/rawread.cpp"
  $41 = HEAP32[$40>>2]|0; //@line 103 "./src/cpp/unrar/rawread.cpp"
  $42 = (($41) + 4)|0; //@line 103 "./src/cpp/unrar/rawread.cpp"
  HEAP32[$40>>2] = $42; //@line 103 "./src/cpp/unrar/rawread.cpp"
  $43 = $3; //@line 104 "./src/cpp/unrar/rawread.cpp"
  $1 = $43; //@line 104 "./src/cpp/unrar/rawread.cpp"
  $44 = $1; //@line 107 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($44|0); //@line 107 "./src/cpp/unrar/rawread.cpp"
 } else {
  $1 = 0; //@line 106 "./src/cpp/unrar/rawread.cpp"
  $44 = $1; //@line 107 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($44|0); //@line 107 "./src/cpp/unrar/rawread.cpp"
 }
 return (0)|0;
}
function __ZN7RawRead4Get8Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZN7RawRead4Get4Ev($4)|0); //@line 112 "./src/cpp/unrar/rawread.cpp"
 $2 = $5; //@line 112 "./src/cpp/unrar/rawread.cpp"
 $6 = (__ZN7RawRead4Get4Ev($4)|0); //@line 112 "./src/cpp/unrar/rawread.cpp"
 $3 = $6; //@line 112 "./src/cpp/unrar/rawread.cpp"
 $7 = $3; //@line 113 "./src/cpp/unrar/rawread.cpp"
 $8 = $2; //@line 113 "./src/cpp/unrar/rawread.cpp"
 $9 = (_i64Add(0,($7|0),($8|0),0)|0); //@line 113 "./src/cpp/unrar/rawread.cpp"
 $10 = tempRet0; //@line 113 "./src/cpp/unrar/rawread.cpp"
 tempRet0 = ($10); //@line 113 "./src/cpp/unrar/rawread.cpp"
 STACKTOP = sp;return ($9|0); //@line 113 "./src/cpp/unrar/rawread.cpp"
}
function __ZN7RawRead4GetVEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = sp + 8|0;
 $3 = sp;
 $2 = $0;
 $6 = $2;
 $7 = $3; //@line 119 "./src/cpp/unrar/rawread.cpp"
 $8 = $7; //@line 119 "./src/cpp/unrar/rawread.cpp"
 HEAP32[$8>>2] = 0; //@line 119 "./src/cpp/unrar/rawread.cpp"
 $9 = (($7) + 4)|0; //@line 119 "./src/cpp/unrar/rawread.cpp"
 $10 = $9; //@line 119 "./src/cpp/unrar/rawread.cpp"
 HEAP32[$10>>2] = 0; //@line 119 "./src/cpp/unrar/rawread.cpp"
 $4 = 0; //@line 120 "./src/cpp/unrar/rawread.cpp"
 while(1) {
  $11 = ((($6)) + 24|0); //@line 120 "./src/cpp/unrar/rawread.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 120 "./src/cpp/unrar/rawread.cpp"
  $13 = ((($6)) + 20|0); //@line 120 "./src/cpp/unrar/rawread.cpp"
  $14 = HEAP32[$13>>2]|0; //@line 120 "./src/cpp/unrar/rawread.cpp"
  $15 = ($12>>>0)<($14>>>0); //@line 120 "./src/cpp/unrar/rawread.cpp"
  if (!($15)) {
   label = 6;
   break;
  }
  $16 = ((($6)) + 24|0); //@line 122 "./src/cpp/unrar/rawread.cpp"
  $17 = HEAP32[$16>>2]|0; //@line 122 "./src/cpp/unrar/rawread.cpp"
  $18 = (($17) + 1)|0; //@line 122 "./src/cpp/unrar/rawread.cpp"
  HEAP32[$16>>2] = $18; //@line 122 "./src/cpp/unrar/rawread.cpp"
  $19 = (__ZNK5ArrayIhEixEj($6,$17)|0); //@line 122 "./src/cpp/unrar/rawread.cpp"
  $20 = HEAP8[$19>>0]|0; //@line 122 "./src/cpp/unrar/rawread.cpp"
  $5 = $20; //@line 122 "./src/cpp/unrar/rawread.cpp"
  $21 = $5; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $22 = $21&255; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $23 = $22 & 127; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $24 = ($23|0)<(0); //@line 123 "./src/cpp/unrar/rawread.cpp"
  $25 = $24 << 31 >> 31; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $26 = $4; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $27 = (_bitshift64Shl(($23|0),($25|0),($26|0))|0); //@line 123 "./src/cpp/unrar/rawread.cpp"
  $28 = tempRet0; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $29 = $3; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $30 = $29; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $31 = HEAP32[$30>>2]|0; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $32 = (($29) + 4)|0; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $33 = $32; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $35 = (_i64Add(($31|0),($34|0),($27|0),($28|0))|0); //@line 123 "./src/cpp/unrar/rawread.cpp"
  $36 = tempRet0; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $37 = $3; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $38 = $37; //@line 123 "./src/cpp/unrar/rawread.cpp"
  HEAP32[$38>>2] = $35; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $39 = (($37) + 4)|0; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $40 = $39; //@line 123 "./src/cpp/unrar/rawread.cpp"
  HEAP32[$40>>2] = $36; //@line 123 "./src/cpp/unrar/rawread.cpp"
  $41 = $5; //@line 124 "./src/cpp/unrar/rawread.cpp"
  $42 = $41&255; //@line 124 "./src/cpp/unrar/rawread.cpp"
  $43 = $42 & 128; //@line 124 "./src/cpp/unrar/rawread.cpp"
  $44 = ($43|0)==(0); //@line 124 "./src/cpp/unrar/rawread.cpp"
  if ($44) {
   label = 4;
   break;
  }
  $55 = $4; //@line 120 "./src/cpp/unrar/rawread.cpp"
  $56 = (($55) + 7)|0; //@line 120 "./src/cpp/unrar/rawread.cpp"
  $4 = $56; //@line 120 "./src/cpp/unrar/rawread.cpp"
 }
 if ((label|0) == 4) {
  $45 = $3; //@line 125 "./src/cpp/unrar/rawread.cpp"
  $46 = $45; //@line 125 "./src/cpp/unrar/rawread.cpp"
  $47 = HEAP32[$46>>2]|0; //@line 125 "./src/cpp/unrar/rawread.cpp"
  $48 = (($45) + 4)|0; //@line 125 "./src/cpp/unrar/rawread.cpp"
  $49 = $48; //@line 125 "./src/cpp/unrar/rawread.cpp"
  $50 = HEAP32[$49>>2]|0; //@line 125 "./src/cpp/unrar/rawread.cpp"
  $51 = $1; //@line 125 "./src/cpp/unrar/rawread.cpp"
  $52 = $51; //@line 125 "./src/cpp/unrar/rawread.cpp"
  HEAP32[$52>>2] = $47; //@line 125 "./src/cpp/unrar/rawread.cpp"
  $53 = (($51) + 4)|0; //@line 125 "./src/cpp/unrar/rawread.cpp"
  $54 = $53; //@line 125 "./src/cpp/unrar/rawread.cpp"
  HEAP32[$54>>2] = $50; //@line 125 "./src/cpp/unrar/rawread.cpp"
  $61 = $1; //@line 128 "./src/cpp/unrar/rawread.cpp"
  $62 = $61; //@line 128 "./src/cpp/unrar/rawread.cpp"
  $63 = HEAP32[$62>>2]|0; //@line 128 "./src/cpp/unrar/rawread.cpp"
  $64 = (($61) + 4)|0; //@line 128 "./src/cpp/unrar/rawread.cpp"
  $65 = $64; //@line 128 "./src/cpp/unrar/rawread.cpp"
  $66 = HEAP32[$65>>2]|0; //@line 128 "./src/cpp/unrar/rawread.cpp"
  tempRet0 = ($66); //@line 128 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($63|0); //@line 128 "./src/cpp/unrar/rawread.cpp"
 }
 else if ((label|0) == 6) {
  $57 = $1; //@line 127 "./src/cpp/unrar/rawread.cpp"
  $58 = $57; //@line 127 "./src/cpp/unrar/rawread.cpp"
  HEAP32[$58>>2] = 0; //@line 127 "./src/cpp/unrar/rawread.cpp"
  $59 = (($57) + 4)|0; //@line 127 "./src/cpp/unrar/rawread.cpp"
  $60 = $59; //@line 127 "./src/cpp/unrar/rawread.cpp"
  HEAP32[$60>>2] = 0; //@line 127 "./src/cpp/unrar/rawread.cpp"
  $61 = $1; //@line 128 "./src/cpp/unrar/rawread.cpp"
  $62 = $61; //@line 128 "./src/cpp/unrar/rawread.cpp"
  $63 = HEAP32[$62>>2]|0; //@line 128 "./src/cpp/unrar/rawread.cpp"
  $64 = (($61) + 4)|0; //@line 128 "./src/cpp/unrar/rawread.cpp"
  $65 = $64; //@line 128 "./src/cpp/unrar/rawread.cpp"
  $66 = HEAP32[$65>>2]|0; //@line 128 "./src/cpp/unrar/rawread.cpp"
  tempRet0 = ($66); //@line 128 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($63|0); //@line 128 "./src/cpp/unrar/rawread.cpp"
 }
 return (0)|0;
}
function __ZN7RawRead8GetVSizeEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3;
 $7 = $4; //@line 134 "./src/cpp/unrar/rawread.cpp"
 $5 = $7; //@line 134 "./src/cpp/unrar/rawread.cpp"
 while(1) {
  $8 = $5; //@line 134 "./src/cpp/unrar/rawread.cpp"
  $9 = ((($6)) + 20|0); //@line 134 "./src/cpp/unrar/rawread.cpp"
  $10 = HEAP32[$9>>2]|0; //@line 134 "./src/cpp/unrar/rawread.cpp"
  $11 = ($8>>>0)<($10>>>0); //@line 134 "./src/cpp/unrar/rawread.cpp"
  if (!($11)) {
   label = 6;
   break;
  }
  $12 = $5; //@line 135 "./src/cpp/unrar/rawread.cpp"
  $13 = (__ZNK5ArrayIhEixEj($6,$12)|0); //@line 135 "./src/cpp/unrar/rawread.cpp"
  $14 = HEAP8[$13>>0]|0; //@line 135 "./src/cpp/unrar/rawread.cpp"
  $15 = $14&255; //@line 135 "./src/cpp/unrar/rawread.cpp"
  $16 = $15 & 128; //@line 135 "./src/cpp/unrar/rawread.cpp"
  $17 = ($16|0)==(0); //@line 135 "./src/cpp/unrar/rawread.cpp"
  $18 = $5;
  if ($17) {
   label = 4;
   break;
  }
  $22 = (($18) + 1)|0; //@line 134 "./src/cpp/unrar/rawread.cpp"
  $5 = $22; //@line 134 "./src/cpp/unrar/rawread.cpp"
 }
 if ((label|0) == 4) {
  $19 = $4; //@line 136 "./src/cpp/unrar/rawread.cpp"
  $20 = (($18) - ($19))|0; //@line 136 "./src/cpp/unrar/rawread.cpp"
  $21 = (($20) + 1)|0; //@line 136 "./src/cpp/unrar/rawread.cpp"
  $2 = $21; //@line 136 "./src/cpp/unrar/rawread.cpp"
  $23 = $2; //@line 138 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($23|0); //@line 138 "./src/cpp/unrar/rawread.cpp"
 }
 else if ((label|0) == 6) {
  $2 = 0; //@line 137 "./src/cpp/unrar/rawread.cpp"
  $23 = $2; //@line 138 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($23|0); //@line 138 "./src/cpp/unrar/rawread.cpp"
 }
 return (0)|0;
}
function __ZN7RawRead4GetBEPvj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = $4; //@line 143 "./src/cpp/unrar/rawread.cpp"
 $6 = $9; //@line 143 "./src/cpp/unrar/rawread.cpp"
 $10 = ((($8)) + 20|0); //@line 144 "./src/cpp/unrar/rawread.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 144 "./src/cpp/unrar/rawread.cpp"
 $12 = ((($8)) + 24|0); //@line 144 "./src/cpp/unrar/rawread.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 144 "./src/cpp/unrar/rawread.cpp"
 $14 = (($11) - ($13))|0; //@line 144 "./src/cpp/unrar/rawread.cpp"
 $15 = $5; //@line 144 "./src/cpp/unrar/rawread.cpp"
 $16 = ($14>>>0)<($15>>>0); //@line 144 "./src/cpp/unrar/rawread.cpp"
 if ($16) {
  $17 = ((($8)) + 20|0); //@line 144 "./src/cpp/unrar/rawread.cpp"
  $18 = HEAP32[$17>>2]|0; //@line 144 "./src/cpp/unrar/rawread.cpp"
  $19 = ((($8)) + 24|0); //@line 144 "./src/cpp/unrar/rawread.cpp"
  $20 = HEAP32[$19>>2]|0; //@line 144 "./src/cpp/unrar/rawread.cpp"
  $21 = (($18) - ($20))|0; //@line 144 "./src/cpp/unrar/rawread.cpp"
  $23 = $21;
 } else {
  $22 = $5; //@line 144 "./src/cpp/unrar/rawread.cpp"
  $23 = $22;
 }
 $7 = $23; //@line 144 "./src/cpp/unrar/rawread.cpp"
 $24 = $7; //@line 145 "./src/cpp/unrar/rawread.cpp"
 $25 = ($24>>>0)>(0); //@line 145 "./src/cpp/unrar/rawread.cpp"
 if ($25) {
  $26 = $6; //@line 146 "./src/cpp/unrar/rawread.cpp"
  $27 = ((($8)) + 24|0); //@line 146 "./src/cpp/unrar/rawread.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 146 "./src/cpp/unrar/rawread.cpp"
  $29 = (__ZNK5ArrayIhEixEj($8,$28)|0); //@line 146 "./src/cpp/unrar/rawread.cpp"
  $30 = $7; //@line 146 "./src/cpp/unrar/rawread.cpp"
  _memcpy(($26|0),($29|0),($30|0))|0; //@line 146 "./src/cpp/unrar/rawread.cpp"
 }
 $31 = $5; //@line 147 "./src/cpp/unrar/rawread.cpp"
 $32 = $7; //@line 147 "./src/cpp/unrar/rawread.cpp"
 $33 = ($31>>>0)>($32>>>0); //@line 147 "./src/cpp/unrar/rawread.cpp"
 if (!($33)) {
  $40 = $7; //@line 149 "./src/cpp/unrar/rawread.cpp"
  $41 = ((($8)) + 24|0); //@line 149 "./src/cpp/unrar/rawread.cpp"
  $42 = HEAP32[$41>>2]|0; //@line 149 "./src/cpp/unrar/rawread.cpp"
  $43 = (($42) + ($40))|0; //@line 149 "./src/cpp/unrar/rawread.cpp"
  HEAP32[$41>>2] = $43; //@line 149 "./src/cpp/unrar/rawread.cpp"
  $44 = $7; //@line 150 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($44|0); //@line 150 "./src/cpp/unrar/rawread.cpp"
 }
 $34 = $6; //@line 148 "./src/cpp/unrar/rawread.cpp"
 $35 = $7; //@line 148 "./src/cpp/unrar/rawread.cpp"
 $36 = (($34) + ($35)|0); //@line 148 "./src/cpp/unrar/rawread.cpp"
 $37 = $5; //@line 148 "./src/cpp/unrar/rawread.cpp"
 $38 = $7; //@line 148 "./src/cpp/unrar/rawread.cpp"
 $39 = (($37) - ($38))|0; //@line 148 "./src/cpp/unrar/rawread.cpp"
 _memset(($36|0),0,($39|0))|0; //@line 148 "./src/cpp/unrar/rawread.cpp"
 $40 = $7; //@line 149 "./src/cpp/unrar/rawread.cpp"
 $41 = ((($8)) + 24|0); //@line 149 "./src/cpp/unrar/rawread.cpp"
 $42 = HEAP32[$41>>2]|0; //@line 149 "./src/cpp/unrar/rawread.cpp"
 $43 = (($42) + ($40))|0; //@line 149 "./src/cpp/unrar/rawread.cpp"
 HEAP32[$41>>2] = $43; //@line 149 "./src/cpp/unrar/rawread.cpp"
 $44 = $7; //@line 150 "./src/cpp/unrar/rawread.cpp"
 STACKTOP = sp;return ($44|0); //@line 150 "./src/cpp/unrar/rawread.cpp"
}
function __ZN7RawRead8GetCRC15Eb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $6 = $1&1;
 $4 = $6;
 $7 = $3;
 $8 = ((($7)) + 20|0); //@line 168 "./src/cpp/unrar/rawread.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 168 "./src/cpp/unrar/rawread.cpp"
 $10 = ($9>>>0)<=(2); //@line 168 "./src/cpp/unrar/rawread.cpp"
 if ($10) {
  $2 = 0; //@line 169 "./src/cpp/unrar/rawread.cpp"
  $22 = $2; //@line 172 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($22|0); //@line 172 "./src/cpp/unrar/rawread.cpp"
 } else {
  $11 = (__ZNK5ArrayIhEixEj($7,2)|0); //@line 170 "./src/cpp/unrar/rawread.cpp"
  $12 = $4; //@line 170 "./src/cpp/unrar/rawread.cpp"
  $13 = $12&1; //@line 170 "./src/cpp/unrar/rawread.cpp"
  $14 = ((($7)) + 20|0); //@line 170 "./src/cpp/unrar/rawread.cpp"
  $15 = ((($7)) + 24|0); //@line 170 "./src/cpp/unrar/rawread.cpp"
  $$sink = $13 ? $15 : $14; //@line 170 "./src/cpp/unrar/rawread.cpp"
  $16 = HEAP32[$$sink>>2]|0;
  $17 = (($16) - 2)|0; //@line 170 "./src/cpp/unrar/rawread.cpp"
  $18 = (__Z5CRC32jPKvj(-1,$11,$17)|0); //@line 170 "./src/cpp/unrar/rawread.cpp"
  $5 = $18; //@line 170 "./src/cpp/unrar/rawread.cpp"
  $19 = $5; //@line 171 "./src/cpp/unrar/rawread.cpp"
  $20 = $19 ^ -1; //@line 171 "./src/cpp/unrar/rawread.cpp"
  $21 = $20 & 65535; //@line 171 "./src/cpp/unrar/rawread.cpp"
  $2 = $21; //@line 171 "./src/cpp/unrar/rawread.cpp"
  $22 = $2; //@line 172 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($22|0); //@line 172 "./src/cpp/unrar/rawread.cpp"
 }
 return (0)|0;
}
function __ZN7RawRead8GetCRC50Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $4 = ((($3)) + 20|0); //@line 177 "./src/cpp/unrar/rawread.cpp"
 $5 = HEAP32[$4>>2]|0; //@line 177 "./src/cpp/unrar/rawread.cpp"
 $6 = ($5>>>0)<=(4); //@line 177 "./src/cpp/unrar/rawread.cpp"
 if ($6) {
  $1 = -1; //@line 178 "./src/cpp/unrar/rawread.cpp"
  $13 = $1; //@line 180 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($13|0); //@line 180 "./src/cpp/unrar/rawread.cpp"
 } else {
  $7 = (__ZNK5ArrayIhEixEj($3,4)|0); //@line 179 "./src/cpp/unrar/rawread.cpp"
  $8 = ((($3)) + 20|0); //@line 179 "./src/cpp/unrar/rawread.cpp"
  $9 = HEAP32[$8>>2]|0; //@line 179 "./src/cpp/unrar/rawread.cpp"
  $10 = (($9) - 4)|0; //@line 179 "./src/cpp/unrar/rawread.cpp"
  $11 = (__Z5CRC32jPKvj(-1,$7,$10)|0); //@line 179 "./src/cpp/unrar/rawread.cpp"
  $12 = $11 ^ -1; //@line 179 "./src/cpp/unrar/rawread.cpp"
  $1 = $12; //@line 179 "./src/cpp/unrar/rawread.cpp"
  $13 = $1; //@line 180 "./src/cpp/unrar/rawread.cpp"
  STACKTOP = sp;return ($13|0); //@line 180 "./src/cpp/unrar/rawread.cpp"
 }
 return (0)|0;
}
function __ZN14EncodeFileNameC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 5 "./src/cpp/unrar/encname.cpp"
 HEAP8[$3>>0] = 0; //@line 5 "./src/cpp/unrar/encname.cpp"
 $4 = ((($2)) + 8|0); //@line 6 "./src/cpp/unrar/encname.cpp"
 HEAP32[$4>>2] = 0; //@line 6 "./src/cpp/unrar/encname.cpp"
 $5 = ((($2)) + 12|0); //@line 7 "./src/cpp/unrar/encname.cpp"
 HEAP32[$5>>2] = 0; //@line 7 "./src/cpp/unrar/encname.cpp"
 $6 = ((($2)) + 16|0); //@line 8 "./src/cpp/unrar/encname.cpp"
 HEAP32[$6>>2] = 0; //@line 8 "./src/cpp/unrar/encname.cpp"
 STACKTOP = sp;return; //@line 9 "./src/cpp/unrar/encname.cpp"
}
function __ZN14EncodeFileName6DecodeEPcPhjPwj($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $17 = $6;
 $12 = 0; //@line 17 "./src/cpp/unrar/encname.cpp"
 $13 = 0; //@line 17 "./src/cpp/unrar/encname.cpp"
 $18 = $8; //@line 18 "./src/cpp/unrar/encname.cpp"
 $19 = $12; //@line 18 "./src/cpp/unrar/encname.cpp"
 $20 = (($19) + 1)|0; //@line 18 "./src/cpp/unrar/encname.cpp"
 $12 = $20; //@line 18 "./src/cpp/unrar/encname.cpp"
 $21 = (($18) + ($19)|0); //@line 18 "./src/cpp/unrar/encname.cpp"
 $22 = HEAP8[$21>>0]|0; //@line 18 "./src/cpp/unrar/encname.cpp"
 $14 = $22; //@line 18 "./src/cpp/unrar/encname.cpp"
 L1: while(1) {
  $23 = $12; //@line 19 "./src/cpp/unrar/encname.cpp"
  $24 = $9; //@line 19 "./src/cpp/unrar/encname.cpp"
  $25 = ($23>>>0)<($24>>>0); //@line 19 "./src/cpp/unrar/encname.cpp"
  if (!($25)) {
   label = 21;
   break;
  }
  $26 = $13; //@line 19 "./src/cpp/unrar/encname.cpp"
  $27 = $11; //@line 19 "./src/cpp/unrar/encname.cpp"
  $28 = ($26>>>0)<($27>>>0); //@line 19 "./src/cpp/unrar/encname.cpp"
  if (!($28)) {
   label = 21;
   break;
  }
  $29 = ((($17)) + 8|0); //@line 21 "./src/cpp/unrar/encname.cpp"
  $30 = HEAP32[$29>>2]|0; //@line 21 "./src/cpp/unrar/encname.cpp"
  $31 = ($30|0)==(0); //@line 21 "./src/cpp/unrar/encname.cpp"
  if ($31) {
   $32 = $8; //@line 23 "./src/cpp/unrar/encname.cpp"
   $33 = $12; //@line 23 "./src/cpp/unrar/encname.cpp"
   $34 = (($33) + 1)|0; //@line 23 "./src/cpp/unrar/encname.cpp"
   $12 = $34; //@line 23 "./src/cpp/unrar/encname.cpp"
   $35 = (($32) + ($33)|0); //@line 23 "./src/cpp/unrar/encname.cpp"
   $36 = HEAP8[$35>>0]|0; //@line 23 "./src/cpp/unrar/encname.cpp"
   $37 = ((($17)) + 4|0); //@line 23 "./src/cpp/unrar/encname.cpp"
   HEAP8[$37>>0] = $36; //@line 23 "./src/cpp/unrar/encname.cpp"
   $38 = ((($17)) + 8|0); //@line 24 "./src/cpp/unrar/encname.cpp"
   HEAP32[$38>>2] = 8; //@line 24 "./src/cpp/unrar/encname.cpp"
  }
  $39 = ((($17)) + 4|0); //@line 26 "./src/cpp/unrar/encname.cpp"
  $40 = HEAP8[$39>>0]|0; //@line 26 "./src/cpp/unrar/encname.cpp"
  $41 = $40&255; //@line 26 "./src/cpp/unrar/encname.cpp"
  $42 = $41 >> 6; //@line 26 "./src/cpp/unrar/encname.cpp"
  L8: do {
   switch ($42|0) {
   case 0:  {
    $43 = $8; //@line 29 "./src/cpp/unrar/encname.cpp"
    $44 = $12; //@line 29 "./src/cpp/unrar/encname.cpp"
    $45 = (($44) + 1)|0; //@line 29 "./src/cpp/unrar/encname.cpp"
    $12 = $45; //@line 29 "./src/cpp/unrar/encname.cpp"
    $46 = (($43) + ($44)|0); //@line 29 "./src/cpp/unrar/encname.cpp"
    $47 = HEAP8[$46>>0]|0; //@line 29 "./src/cpp/unrar/encname.cpp"
    $48 = $47&255; //@line 29 "./src/cpp/unrar/encname.cpp"
    $49 = $10; //@line 29 "./src/cpp/unrar/encname.cpp"
    $50 = $13; //@line 29 "./src/cpp/unrar/encname.cpp"
    $51 = (($50) + 1)|0; //@line 29 "./src/cpp/unrar/encname.cpp"
    $13 = $51; //@line 29 "./src/cpp/unrar/encname.cpp"
    $52 = (($49) + ($50<<2)|0); //@line 29 "./src/cpp/unrar/encname.cpp"
    HEAP32[$52>>2] = $48; //@line 29 "./src/cpp/unrar/encname.cpp"
    break;
   }
   case 1:  {
    $53 = $8; //@line 32 "./src/cpp/unrar/encname.cpp"
    $54 = $12; //@line 32 "./src/cpp/unrar/encname.cpp"
    $55 = (($54) + 1)|0; //@line 32 "./src/cpp/unrar/encname.cpp"
    $12 = $55; //@line 32 "./src/cpp/unrar/encname.cpp"
    $56 = (($53) + ($54)|0); //@line 32 "./src/cpp/unrar/encname.cpp"
    $57 = HEAP8[$56>>0]|0; //@line 32 "./src/cpp/unrar/encname.cpp"
    $58 = $57&255; //@line 32 "./src/cpp/unrar/encname.cpp"
    $59 = $14; //@line 32 "./src/cpp/unrar/encname.cpp"
    $60 = $59&255; //@line 32 "./src/cpp/unrar/encname.cpp"
    $61 = $60 << 8; //@line 32 "./src/cpp/unrar/encname.cpp"
    $62 = (($58) + ($61))|0; //@line 32 "./src/cpp/unrar/encname.cpp"
    $63 = $10; //@line 32 "./src/cpp/unrar/encname.cpp"
    $64 = $13; //@line 32 "./src/cpp/unrar/encname.cpp"
    $65 = (($64) + 1)|0; //@line 32 "./src/cpp/unrar/encname.cpp"
    $13 = $65; //@line 32 "./src/cpp/unrar/encname.cpp"
    $66 = (($63) + ($64<<2)|0); //@line 32 "./src/cpp/unrar/encname.cpp"
    HEAP32[$66>>2] = $62; //@line 32 "./src/cpp/unrar/encname.cpp"
    break;
   }
   case 2:  {
    $67 = $8; //@line 35 "./src/cpp/unrar/encname.cpp"
    $68 = $12; //@line 35 "./src/cpp/unrar/encname.cpp"
    $69 = (($67) + ($68)|0); //@line 35 "./src/cpp/unrar/encname.cpp"
    $70 = HEAP8[$69>>0]|0; //@line 35 "./src/cpp/unrar/encname.cpp"
    $71 = $70&255; //@line 35 "./src/cpp/unrar/encname.cpp"
    $72 = $8; //@line 35 "./src/cpp/unrar/encname.cpp"
    $73 = $12; //@line 35 "./src/cpp/unrar/encname.cpp"
    $74 = (($73) + 1)|0; //@line 35 "./src/cpp/unrar/encname.cpp"
    $75 = (($72) + ($74)|0); //@line 35 "./src/cpp/unrar/encname.cpp"
    $76 = HEAP8[$75>>0]|0; //@line 35 "./src/cpp/unrar/encname.cpp"
    $77 = $76&255; //@line 35 "./src/cpp/unrar/encname.cpp"
    $78 = $77 << 8; //@line 35 "./src/cpp/unrar/encname.cpp"
    $79 = (($71) + ($78))|0; //@line 35 "./src/cpp/unrar/encname.cpp"
    $80 = $10; //@line 35 "./src/cpp/unrar/encname.cpp"
    $81 = $13; //@line 35 "./src/cpp/unrar/encname.cpp"
    $82 = (($81) + 1)|0; //@line 35 "./src/cpp/unrar/encname.cpp"
    $13 = $82; //@line 35 "./src/cpp/unrar/encname.cpp"
    $83 = (($80) + ($81<<2)|0); //@line 35 "./src/cpp/unrar/encname.cpp"
    HEAP32[$83>>2] = $79; //@line 35 "./src/cpp/unrar/encname.cpp"
    $84 = $12; //@line 36 "./src/cpp/unrar/encname.cpp"
    $85 = (($84) + 2)|0; //@line 36 "./src/cpp/unrar/encname.cpp"
    $12 = $85; //@line 36 "./src/cpp/unrar/encname.cpp"
    break;
   }
   case 3:  {
    $86 = $8; //@line 40 "./src/cpp/unrar/encname.cpp"
    $87 = $12; //@line 40 "./src/cpp/unrar/encname.cpp"
    $88 = (($87) + 1)|0; //@line 40 "./src/cpp/unrar/encname.cpp"
    $12 = $88; //@line 40 "./src/cpp/unrar/encname.cpp"
    $89 = (($86) + ($87)|0); //@line 40 "./src/cpp/unrar/encname.cpp"
    $90 = HEAP8[$89>>0]|0; //@line 40 "./src/cpp/unrar/encname.cpp"
    $91 = $90&255; //@line 40 "./src/cpp/unrar/encname.cpp"
    $15 = $91; //@line 40 "./src/cpp/unrar/encname.cpp"
    $92 = $15; //@line 41 "./src/cpp/unrar/encname.cpp"
    $93 = $92 & 128; //@line 41 "./src/cpp/unrar/encname.cpp"
    $94 = ($93|0)!=(0); //@line 41 "./src/cpp/unrar/encname.cpp"
    if ($94) {
     $95 = $8; //@line 43 "./src/cpp/unrar/encname.cpp"
     $96 = $12; //@line 43 "./src/cpp/unrar/encname.cpp"
     $97 = (($96) + 1)|0; //@line 43 "./src/cpp/unrar/encname.cpp"
     $12 = $97; //@line 43 "./src/cpp/unrar/encname.cpp"
     $98 = (($95) + ($96)|0); //@line 43 "./src/cpp/unrar/encname.cpp"
     $99 = HEAP8[$98>>0]|0; //@line 43 "./src/cpp/unrar/encname.cpp"
     $16 = $99; //@line 43 "./src/cpp/unrar/encname.cpp"
     $100 = $15; //@line 44 "./src/cpp/unrar/encname.cpp"
     $101 = $100 & 127; //@line 44 "./src/cpp/unrar/encname.cpp"
     $102 = (($101) + 2)|0; //@line 44 "./src/cpp/unrar/encname.cpp"
     $15 = $102; //@line 44 "./src/cpp/unrar/encname.cpp"
     while(1) {
      $103 = $15; //@line 44 "./src/cpp/unrar/encname.cpp"
      $104 = ($103|0)>(0); //@line 44 "./src/cpp/unrar/encname.cpp"
      if (!($104)) {
       break L8;
      }
      $105 = $13; //@line 44 "./src/cpp/unrar/encname.cpp"
      $106 = $11; //@line 44 "./src/cpp/unrar/encname.cpp"
      $107 = ($105>>>0)<($106>>>0); //@line 44 "./src/cpp/unrar/encname.cpp"
      if (!($107)) {
       break L8;
      }
      $108 = $7; //@line 45 "./src/cpp/unrar/encname.cpp"
      $109 = $13; //@line 45 "./src/cpp/unrar/encname.cpp"
      $110 = (($108) + ($109)|0); //@line 45 "./src/cpp/unrar/encname.cpp"
      $111 = HEAP8[$110>>0]|0; //@line 45 "./src/cpp/unrar/encname.cpp"
      $112 = $111 << 24 >> 24; //@line 45 "./src/cpp/unrar/encname.cpp"
      $113 = $16; //@line 45 "./src/cpp/unrar/encname.cpp"
      $114 = $113&255; //@line 45 "./src/cpp/unrar/encname.cpp"
      $115 = (($112) + ($114))|0; //@line 45 "./src/cpp/unrar/encname.cpp"
      $116 = $115 & 255; //@line 45 "./src/cpp/unrar/encname.cpp"
      $117 = $14; //@line 45 "./src/cpp/unrar/encname.cpp"
      $118 = $117&255; //@line 45 "./src/cpp/unrar/encname.cpp"
      $119 = $118 << 8; //@line 45 "./src/cpp/unrar/encname.cpp"
      $120 = (($116) + ($119))|0; //@line 45 "./src/cpp/unrar/encname.cpp"
      $121 = $10; //@line 45 "./src/cpp/unrar/encname.cpp"
      $122 = $13; //@line 45 "./src/cpp/unrar/encname.cpp"
      $123 = (($121) + ($122<<2)|0); //@line 45 "./src/cpp/unrar/encname.cpp"
      HEAP32[$123>>2] = $120; //@line 45 "./src/cpp/unrar/encname.cpp"
      $124 = $15; //@line 44 "./src/cpp/unrar/encname.cpp"
      $125 = (($124) + -1)|0; //@line 44 "./src/cpp/unrar/encname.cpp"
      $15 = $125; //@line 44 "./src/cpp/unrar/encname.cpp"
      $126 = $13; //@line 44 "./src/cpp/unrar/encname.cpp"
      $127 = (($126) + 1)|0; //@line 44 "./src/cpp/unrar/encname.cpp"
      $13 = $127; //@line 44 "./src/cpp/unrar/encname.cpp"
     }
    } else {
     $128 = $15; //@line 48 "./src/cpp/unrar/encname.cpp"
     $129 = (($128) + 2)|0; //@line 48 "./src/cpp/unrar/encname.cpp"
     $15 = $129; //@line 48 "./src/cpp/unrar/encname.cpp"
     while(1) {
      $130 = $15; //@line 48 "./src/cpp/unrar/encname.cpp"
      $131 = ($130|0)>(0); //@line 48 "./src/cpp/unrar/encname.cpp"
      if (!($131)) {
       break L8;
      }
      $132 = $13; //@line 48 "./src/cpp/unrar/encname.cpp"
      $133 = $11; //@line 48 "./src/cpp/unrar/encname.cpp"
      $134 = ($132>>>0)<($133>>>0); //@line 48 "./src/cpp/unrar/encname.cpp"
      if (!($134)) {
       break L8;
      }
      $135 = $7; //@line 49 "./src/cpp/unrar/encname.cpp"
      $136 = $13; //@line 49 "./src/cpp/unrar/encname.cpp"
      $137 = (($135) + ($136)|0); //@line 49 "./src/cpp/unrar/encname.cpp"
      $138 = HEAP8[$137>>0]|0; //@line 49 "./src/cpp/unrar/encname.cpp"
      $139 = $138 << 24 >> 24; //@line 49 "./src/cpp/unrar/encname.cpp"
      $140 = $10; //@line 49 "./src/cpp/unrar/encname.cpp"
      $141 = $13; //@line 49 "./src/cpp/unrar/encname.cpp"
      $142 = (($140) + ($141<<2)|0); //@line 49 "./src/cpp/unrar/encname.cpp"
      HEAP32[$142>>2] = $139; //@line 49 "./src/cpp/unrar/encname.cpp"
      $143 = $15; //@line 48 "./src/cpp/unrar/encname.cpp"
      $144 = (($143) + -1)|0; //@line 48 "./src/cpp/unrar/encname.cpp"
      $15 = $144; //@line 48 "./src/cpp/unrar/encname.cpp"
      $145 = $13; //@line 48 "./src/cpp/unrar/encname.cpp"
      $146 = (($145) + 1)|0; //@line 48 "./src/cpp/unrar/encname.cpp"
      $13 = $146; //@line 48 "./src/cpp/unrar/encname.cpp"
     }
    }
    break;
   }
   default: {
    label = 19;
    break L1;
   }
   }
  } while(0);
  $147 = ((($17)) + 4|0); //@line 53 "./src/cpp/unrar/encname.cpp"
  $148 = HEAP8[$147>>0]|0; //@line 53 "./src/cpp/unrar/encname.cpp"
  $149 = $148&255; //@line 53 "./src/cpp/unrar/encname.cpp"
  $150 = $149 << 2; //@line 53 "./src/cpp/unrar/encname.cpp"
  $151 = $150&255; //@line 53 "./src/cpp/unrar/encname.cpp"
  HEAP8[$147>>0] = $151; //@line 53 "./src/cpp/unrar/encname.cpp"
  $152 = ((($17)) + 8|0); //@line 54 "./src/cpp/unrar/encname.cpp"
  $153 = HEAP32[$152>>2]|0; //@line 54 "./src/cpp/unrar/encname.cpp"
  $154 = (($153) - 2)|0; //@line 54 "./src/cpp/unrar/encname.cpp"
  HEAP32[$152>>2] = $154; //@line 54 "./src/cpp/unrar/encname.cpp"
 }
 if ((label|0) == 19) {
  // unreachable;
 }
 else if ((label|0) == 21) {
  $155 = $10; //@line 56 "./src/cpp/unrar/encname.cpp"
  $156 = $13; //@line 56 "./src/cpp/unrar/encname.cpp"
  $157 = $11; //@line 56 "./src/cpp/unrar/encname.cpp"
  $158 = ($156>>>0)<($157>>>0); //@line 56 "./src/cpp/unrar/encname.cpp"
  $159 = $13; //@line 56 "./src/cpp/unrar/encname.cpp"
  $160 = $11; //@line 56 "./src/cpp/unrar/encname.cpp"
  $161 = (($160) - 1)|0; //@line 56 "./src/cpp/unrar/encname.cpp"
  $162 = $158 ? $159 : $161; //@line 56 "./src/cpp/unrar/encname.cpp"
  $163 = (($155) + ($162<<2)|0); //@line 56 "./src/cpp/unrar/encname.cpp"
  HEAP32[$163>>2] = 0; //@line 56 "./src/cpp/unrar/encname.cpp"
  STACKTOP = sp;return; //@line 57 "./src/cpp/unrar/encname.cpp"
 }
}
function __Z7CmpNamePKwS0_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val13 = 0, $$expand_i1_val15 = 0, $$expand_i1_val17 = 0, $$expand_i1_val19 = 0, $$expand_i1_val21 = 0, $$expand_i1_val23 = 0, $$expand_i1_val25 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16416|0);
 $3 = sp + 16413|0;
 $10 = sp + 8200|0;
 $11 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $14 = $6; //@line 21 "./src/cpp/unrar/match.cpp"
 $15 = $14 & -2147483648; //@line 21 "./src/cpp/unrar/match.cpp"
 $16 = ($15|0)!=(0); //@line 21 "./src/cpp/unrar/match.cpp"
 $17 = $16&1; //@line 21 "./src/cpp/unrar/match.cpp"
 $7 = $17; //@line 21 "./src/cpp/unrar/match.cpp"
 $18 = $6; //@line 23 "./src/cpp/unrar/match.cpp"
 $19 = $18 & 65535; //@line 23 "./src/cpp/unrar/match.cpp"
 $6 = $19; //@line 23 "./src/cpp/unrar/match.cpp"
 $20 = $6; //@line 25 "./src/cpp/unrar/match.cpp"
 $21 = ($20|0)!=(0); //@line 25 "./src/cpp/unrar/match.cpp"
 do {
  if ($21) {
   $22 = $4; //@line 27 "./src/cpp/unrar/match.cpp"
   $23 = (_wcslen($22)|0); //@line 27 "./src/cpp/unrar/match.cpp"
   $8 = $23; //@line 27 "./src/cpp/unrar/match.cpp"
   $24 = $6; //@line 28 "./src/cpp/unrar/match.cpp"
   $25 = ($24|0)!=(2); //@line 28 "./src/cpp/unrar/match.cpp"
   $26 = $6; //@line 28 "./src/cpp/unrar/match.cpp"
   $27 = ($26|0)!=(3); //@line 28 "./src/cpp/unrar/match.cpp"
   $or$cond = $25 & $27; //@line 28 "./src/cpp/unrar/match.cpp"
   if ($or$cond) {
    $28 = $4; //@line 29 "./src/cpp/unrar/match.cpp"
    $29 = $5; //@line 29 "./src/cpp/unrar/match.cpp"
    $30 = $8; //@line 29 "./src/cpp/unrar/match.cpp"
    $31 = $7; //@line 29 "./src/cpp/unrar/match.cpp"
    $32 = $31&1; //@line 29 "./src/cpp/unrar/match.cpp"
    $33 = (__ZL11mwcsnicompcPKwS0_jb($28,$29,$30,$32)|0); //@line 29 "./src/cpp/unrar/match.cpp"
    $34 = ($33|0)==(0); //@line 29 "./src/cpp/unrar/match.cpp"
    if ($34) {
     $35 = $5; //@line 33 "./src/cpp/unrar/match.cpp"
     $36 = $8; //@line 33 "./src/cpp/unrar/match.cpp"
     $37 = (($35) + ($36<<2)|0); //@line 33 "./src/cpp/unrar/match.cpp"
     $38 = HEAP32[$37>>2]|0; //@line 33 "./src/cpp/unrar/match.cpp"
     $9 = $38; //@line 33 "./src/cpp/unrar/match.cpp"
     $39 = $9; //@line 34 "./src/cpp/unrar/match.cpp"
     $40 = ($39|0)==(92); //@line 34 "./src/cpp/unrar/match.cpp"
     $41 = $9; //@line 34 "./src/cpp/unrar/match.cpp"
     $42 = ($41|0)==(47); //@line 34 "./src/cpp/unrar/match.cpp"
     $or$cond3 = $40 | $42; //@line 34 "./src/cpp/unrar/match.cpp"
     $43 = $9; //@line 34 "./src/cpp/unrar/match.cpp"
     $44 = ($43|0)==(0); //@line 34 "./src/cpp/unrar/match.cpp"
     $or$cond5 = $or$cond3 | $44; //@line 34 "./src/cpp/unrar/match.cpp"
     if ($or$cond5) {
      $$expand_i1_val = 1; //@line 35 "./src/cpp/unrar/match.cpp"
      HEAP8[$3>>0] = $$expand_i1_val; //@line 35 "./src/cpp/unrar/match.cpp"
      break;
     }
    }
   }
   $45 = $6; //@line 39 "./src/cpp/unrar/match.cpp"
   $46 = ($45|0)==(1); //@line 39 "./src/cpp/unrar/match.cpp"
   if ($46) {
    $$expand_i1_val11 = 0; //@line 40 "./src/cpp/unrar/match.cpp"
    HEAP8[$3>>0] = $$expand_i1_val11; //@line 40 "./src/cpp/unrar/match.cpp"
    break;
   }
   $47 = $4; //@line 43 "./src/cpp/unrar/match.cpp"
   __Z11GetFilePathPKwPwj($47,$10,2048); //@line 43 "./src/cpp/unrar/match.cpp"
   $48 = $5; //@line 44 "./src/cpp/unrar/match.cpp"
   __Z11GetFilePathPKwPwj($48,$11,2048); //@line 44 "./src/cpp/unrar/match.cpp"
   $49 = $6; //@line 46 "./src/cpp/unrar/match.cpp"
   $50 = ($49|0)==(2); //@line 46 "./src/cpp/unrar/match.cpp"
   $51 = $6; //@line 46 "./src/cpp/unrar/match.cpp"
   $52 = ($51|0)==(3); //@line 46 "./src/cpp/unrar/match.cpp"
   $or$cond7 = $50 | $52; //@line 46 "./src/cpp/unrar/match.cpp"
   if ($or$cond7) {
    $53 = $7; //@line 47 "./src/cpp/unrar/match.cpp"
    $54 = $53&1; //@line 47 "./src/cpp/unrar/match.cpp"
    $55 = (__ZL10mwcsicompcPKwS0_b($10,$11,$54)|0); //@line 47 "./src/cpp/unrar/match.cpp"
    $56 = ($55|0)!=(0); //@line 47 "./src/cpp/unrar/match.cpp"
    if ($56) {
     $$expand_i1_val13 = 0; //@line 48 "./src/cpp/unrar/match.cpp"
     HEAP8[$3>>0] = $$expand_i1_val13; //@line 48 "./src/cpp/unrar/match.cpp"
     break;
    }
   }
   $57 = $6; //@line 49 "./src/cpp/unrar/match.cpp"
   $58 = ($57|0)==(4); //@line 49 "./src/cpp/unrar/match.cpp"
   $59 = $6; //@line 49 "./src/cpp/unrar/match.cpp"
   $60 = ($59|0)==(5); //@line 49 "./src/cpp/unrar/match.cpp"
   $or$cond9 = $58 | $60; //@line 49 "./src/cpp/unrar/match.cpp"
   if ($or$cond9) {
    $61 = (__Z10IsWildcardPKw($10)|0); //@line 50 "./src/cpp/unrar/match.cpp"
    if ($61) {
     $62 = $4; //@line 51 "./src/cpp/unrar/match.cpp"
     $63 = $5; //@line 51 "./src/cpp/unrar/match.cpp"
     $64 = $7; //@line 51 "./src/cpp/unrar/match.cpp"
     $65 = $64&1; //@line 51 "./src/cpp/unrar/match.cpp"
     $66 = (__ZL5matchPKwS0_b($62,$63,$65)|0); //@line 51 "./src/cpp/unrar/match.cpp"
     $$expand_i1_val15 = $66&1; //@line 51 "./src/cpp/unrar/match.cpp"
     HEAP8[$3>>0] = $$expand_i1_val15; //@line 51 "./src/cpp/unrar/match.cpp"
     break;
    }
    $67 = $6; //@line 53 "./src/cpp/unrar/match.cpp"
    $68 = ($67|0)==(4); //@line 53 "./src/cpp/unrar/match.cpp"
    if (!($68)) {
     $69 = $4; //@line 53 "./src/cpp/unrar/match.cpp"
     $70 = (__Z10IsWildcardPKw($69)|0); //@line 53 "./src/cpp/unrar/match.cpp"
     if (!($70)) {
      $78 = $7; //@line 59 "./src/cpp/unrar/match.cpp"
      $79 = $78&1; //@line 59 "./src/cpp/unrar/match.cpp"
      $80 = (__ZL10mwcsicompcPKwS0_b($10,$11,$79)|0); //@line 59 "./src/cpp/unrar/match.cpp"
      $81 = ($80|0)!=(0); //@line 59 "./src/cpp/unrar/match.cpp"
      if (!($81)) {
       label = 21;
       break;
      }
      $$expand_i1_val19 = 0; //@line 60 "./src/cpp/unrar/match.cpp"
      HEAP8[$3>>0] = $$expand_i1_val19; //@line 60 "./src/cpp/unrar/match.cpp"
      break;
     }
    }
    $71 = HEAP32[$10>>2]|0; //@line 55 "./src/cpp/unrar/match.cpp"
    $72 = ($71|0)!=(0); //@line 55 "./src/cpp/unrar/match.cpp"
    if ($72) {
     $73 = (_wcslen($10)|0); //@line 55 "./src/cpp/unrar/match.cpp"
     $74 = $7; //@line 55 "./src/cpp/unrar/match.cpp"
     $75 = $74&1; //@line 55 "./src/cpp/unrar/match.cpp"
     $76 = (__ZL11mwcsnicompcPKwS0_jb($10,$11,$73,$75)|0); //@line 55 "./src/cpp/unrar/match.cpp"
     $77 = ($76|0)!=(0); //@line 55 "./src/cpp/unrar/match.cpp"
     if ($77) {
      $$expand_i1_val17 = 0; //@line 56 "./src/cpp/unrar/match.cpp"
      HEAP8[$3>>0] = $$expand_i1_val17; //@line 56 "./src/cpp/unrar/match.cpp"
     } else {
      label = 21;
     }
    } else {
     label = 21;
    }
   } else {
    label = 21;
   }
  } else {
   label = 21;
  }
 } while(0);
 do {
  if ((label|0) == 21) {
   $82 = $4; //@line 62 "./src/cpp/unrar/match.cpp"
   $83 = (__Z11PointToNamePKw($82)|0); //@line 62 "./src/cpp/unrar/match.cpp"
   $12 = $83; //@line 62 "./src/cpp/unrar/match.cpp"
   $84 = $5; //@line 63 "./src/cpp/unrar/match.cpp"
   $85 = (__Z11PointToNamePKw($84)|0); //@line 63 "./src/cpp/unrar/match.cpp"
   $13 = $85; //@line 63 "./src/cpp/unrar/match.cpp"
   $86 = $13; //@line 67 "./src/cpp/unrar/match.cpp"
   $87 = (__ZL11mwcsnicompcPKwS0_jb(852,$86,6,0)|0); //@line 67 "./src/cpp/unrar/match.cpp"
   $88 = ($87|0)==(0); //@line 67 "./src/cpp/unrar/match.cpp"
   if ($88) {
    $$expand_i1_val21 = 0; //@line 68 "./src/cpp/unrar/match.cpp"
    HEAP8[$3>>0] = $$expand_i1_val21; //@line 68 "./src/cpp/unrar/match.cpp"
    break;
   }
   $89 = $6; //@line 70 "./src/cpp/unrar/match.cpp"
   $90 = ($89|0)==(2); //@line 70 "./src/cpp/unrar/match.cpp"
   $91 = $12;
   $92 = $13;
   $93 = $7;
   $94 = $93&1;
   if ($90) {
    $95 = (__ZL10mwcsicompcPKwS0_b($91,$92,$94)|0); //@line 71 "./src/cpp/unrar/match.cpp"
    $96 = ($95|0)==(0); //@line 71 "./src/cpp/unrar/match.cpp"
    $$expand_i1_val23 = $96&1; //@line 71 "./src/cpp/unrar/match.cpp"
    HEAP8[$3>>0] = $$expand_i1_val23; //@line 71 "./src/cpp/unrar/match.cpp"
    break;
   } else {
    $97 = (__ZL5matchPKwS0_b($91,$92,$94)|0); //@line 73 "./src/cpp/unrar/match.cpp"
    $$expand_i1_val25 = $97&1; //@line 73 "./src/cpp/unrar/match.cpp"
    HEAP8[$3>>0] = $$expand_i1_val25; //@line 73 "./src/cpp/unrar/match.cpp"
    break;
   }
  }
 } while(0);
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 74 "./src/cpp/unrar/match.cpp"
 $98 = $$pre_trunc&1; //@line 74 "./src/cpp/unrar/match.cpp"
 STACKTOP = sp;return ($98|0); //@line 74 "./src/cpp/unrar/match.cpp"
}
function __ZL11mwcsnicompcPKwS0_jb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $9 = $3&1;
 $8 = $9;
 $10 = $5;
 $11 = $6;
 $12 = $7;
 $13 = (_wcsncmp($10,$11,$12)|0); //@line 139 "./src/cpp/unrar/match.cpp"
 $4 = $13;
 $14 = $4; //@line 145 "./src/cpp/unrar/match.cpp"
 STACKTOP = sp;return ($14|0); //@line 145 "./src/cpp/unrar/match.cpp"
}
function __ZL10mwcsicompcPKwS0_b($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $7 = $2&1;
 $6 = $7;
 $8 = $6; //@line 130 "./src/cpp/unrar/match.cpp"
 $9 = $8&1; //@line 130 "./src/cpp/unrar/match.cpp"
 $10 = $4;
 $11 = $5;
 if ($9) {
  $12 = (_wcscmp($10,$11)|0); //@line 131 "./src/cpp/unrar/match.cpp"
  $3 = $12; //@line 131 "./src/cpp/unrar/match.cpp"
 } else {
  $13 = (__Z9wcsicompcPKwS0_($10,$11)|0); //@line 132 "./src/cpp/unrar/match.cpp"
  $3 = $13; //@line 132 "./src/cpp/unrar/match.cpp"
 }
 $14 = $3; //@line 133 "./src/cpp/unrar/match.cpp"
 STACKTOP = sp;return ($14|0); //@line 133 "./src/cpp/unrar/match.cpp"
}
function __ZL5matchPKwS0_b($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val13 = 0, $$expand_i1_val15 = 0, $$expand_i1_val17 = 0, $$expand_i1_val19 = 0, $$expand_i1_val21 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$expand_i1_val9 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $15 = sp + 69|0;
 $16 = $0;
 $17 = $1;
 $22 = $2&1;
 $18 = $22;
 L1: while(1) {
  $23 = $17; //@line 81 "./src/cpp/unrar/match.cpp"
  $24 = HEAP32[$23>>2]|0; //@line 81 "./src/cpp/unrar/match.cpp"
  $25 = $18; //@line 81 "./src/cpp/unrar/match.cpp"
  $26 = $25&1; //@line 81 "./src/cpp/unrar/match.cpp"
  $27 = (__Z9touppercwjb($24,$26)|0); //@line 81 "./src/cpp/unrar/match.cpp"
  $19 = $27; //@line 81 "./src/cpp/unrar/match.cpp"
  $28 = $16; //@line 82 "./src/cpp/unrar/match.cpp"
  $29 = ((($28)) + 4|0); //@line 82 "./src/cpp/unrar/match.cpp"
  $16 = $29; //@line 82 "./src/cpp/unrar/match.cpp"
  $30 = HEAP32[$28>>2]|0; //@line 82 "./src/cpp/unrar/match.cpp"
  $31 = $18; //@line 82 "./src/cpp/unrar/match.cpp"
  $32 = $31&1; //@line 82 "./src/cpp/unrar/match.cpp"
  $33 = (__Z9touppercwjb($30,$32)|0); //@line 82 "./src/cpp/unrar/match.cpp"
  $20 = $33; //@line 82 "./src/cpp/unrar/match.cpp"
  $34 = $20; //@line 83 "./src/cpp/unrar/match.cpp"
  switch ($34|0) {
  case 0:  {
   label = 3;
   break L1;
   break;
  }
  case 42:  {
   label = 6;
   break L1;
   break;
  }
  case 63:  {
   $37 = $19; //@line 88 "./src/cpp/unrar/match.cpp"
   $38 = ($37|0)==(0); //@line 88 "./src/cpp/unrar/match.cpp"
   if ($38) {
    label = 5;
    break L1;
   }
   break;
  }
  default: {
   $104 = $20; //@line 114 "./src/cpp/unrar/match.cpp"
   $105 = $19; //@line 114 "./src/cpp/unrar/match.cpp"
   $106 = ($104|0)!=($105|0); //@line 114 "./src/cpp/unrar/match.cpp"
   if ($106) {
    label = 25;
    break L1;
   }
  }
  }
  $120 = $17; //@line 79 "./src/cpp/unrar/match.cpp"
  $121 = ((($120)) + 4|0); //@line 79 "./src/cpp/unrar/match.cpp"
  $17 = $121; //@line 79 "./src/cpp/unrar/match.cpp"
 }
 do {
  if ((label|0) == 3) {
   $35 = $19; //@line 86 "./src/cpp/unrar/match.cpp"
   $36 = ($35|0)==(0); //@line 86 "./src/cpp/unrar/match.cpp"
   $$expand_i1_val = $36&1; //@line 86 "./src/cpp/unrar/match.cpp"
   HEAP8[$15>>0] = $$expand_i1_val; //@line 86 "./src/cpp/unrar/match.cpp"
  }
  else if ((label|0) == 5) {
   $$expand_i1_val5 = 0; //@line 89 "./src/cpp/unrar/match.cpp"
   HEAP8[$15>>0] = $$expand_i1_val5; //@line 89 "./src/cpp/unrar/match.cpp"
  }
  else if ((label|0) == 6) {
   $39 = $16; //@line 92 "./src/cpp/unrar/match.cpp"
   $40 = HEAP32[$39>>2]|0; //@line 92 "./src/cpp/unrar/match.cpp"
   $41 = ($40|0)==(0); //@line 92 "./src/cpp/unrar/match.cpp"
   if ($41) {
    $$expand_i1_val7 = 1; //@line 93 "./src/cpp/unrar/match.cpp"
    HEAP8[$15>>0] = $$expand_i1_val7; //@line 93 "./src/cpp/unrar/match.cpp"
    break;
   }
   $42 = $16; //@line 94 "./src/cpp/unrar/match.cpp"
   $43 = HEAP32[$42>>2]|0; //@line 94 "./src/cpp/unrar/match.cpp"
   $44 = ($43|0)==(46); //@line 94 "./src/cpp/unrar/match.cpp"
   if ($44) {
    $45 = $16; //@line 96 "./src/cpp/unrar/match.cpp"
    $46 = ((($45)) + 4|0); //@line 96 "./src/cpp/unrar/match.cpp"
    $47 = HEAP32[$46>>2]|0; //@line 96 "./src/cpp/unrar/match.cpp"
    $48 = ($47|0)==(42); //@line 96 "./src/cpp/unrar/match.cpp"
    if ($48) {
     $49 = $16; //@line 96 "./src/cpp/unrar/match.cpp"
     $50 = ((($49)) + 8|0); //@line 96 "./src/cpp/unrar/match.cpp"
     $51 = HEAP32[$50>>2]|0; //@line 96 "./src/cpp/unrar/match.cpp"
     $52 = ($51|0)==(0); //@line 96 "./src/cpp/unrar/match.cpp"
     if ($52) {
      $$expand_i1_val9 = 1; //@line 97 "./src/cpp/unrar/match.cpp"
      HEAP8[$15>>0] = $$expand_i1_val9; //@line 97 "./src/cpp/unrar/match.cpp"
      break;
     }
    }
    $53 = $17; //@line 98 "./src/cpp/unrar/match.cpp"
    $13 = $53;
    $14 = 46;
    $54 = $13; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
    $55 = $14; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
    $11 = $54;
    $12 = $55;
    $56 = $11; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
    $57 = $12; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
    $58 = (_wcschr($56,$57)|0); //@line 133 "/emscripten/system/include/libcxx/wchar.h"
    $21 = $58; //@line 98 "./src/cpp/unrar/match.cpp"
    $59 = $16; //@line 99 "./src/cpp/unrar/match.cpp"
    $60 = ((($59)) + 4|0); //@line 99 "./src/cpp/unrar/match.cpp"
    $61 = HEAP32[$60>>2]|0; //@line 99 "./src/cpp/unrar/match.cpp"
    $62 = ($61|0)==(0); //@line 99 "./src/cpp/unrar/match.cpp"
    $63 = $21;
    if ($62) {
     $64 = ($63|0)==(0|0); //@line 100 "./src/cpp/unrar/match.cpp"
     if ($64) {
      $69 = 1;
     } else {
      $65 = $21; //@line 100 "./src/cpp/unrar/match.cpp"
      $66 = ((($65)) + 4|0); //@line 100 "./src/cpp/unrar/match.cpp"
      $67 = HEAP32[$66>>2]|0; //@line 100 "./src/cpp/unrar/match.cpp"
      $68 = ($67|0)==(0); //@line 100 "./src/cpp/unrar/match.cpp"
      $69 = $68;
     }
     $$expand_i1_val11 = $69&1; //@line 100 "./src/cpp/unrar/match.cpp"
     HEAP8[$15>>0] = $$expand_i1_val11; //@line 100 "./src/cpp/unrar/match.cpp"
     break;
    }
    $70 = ($63|0)!=(0|0); //@line 101 "./src/cpp/unrar/match.cpp"
    if ($70) {
     $71 = $21; //@line 103 "./src/cpp/unrar/match.cpp"
     $17 = $71; //@line 103 "./src/cpp/unrar/match.cpp"
     $72 = $16; //@line 104 "./src/cpp/unrar/match.cpp"
     $9 = $72;
     $10 = 880;
     $73 = $9; //@line 142 "/emscripten/system/include/libcxx/wchar.h"
     $74 = $10; //@line 142 "/emscripten/system/include/libcxx/wchar.h"
     $7 = $73;
     $8 = $74;
     $75 = $7; //@line 140 "/emscripten/system/include/libcxx/wchar.h"
     $76 = $8; //@line 140 "/emscripten/system/include/libcxx/wchar.h"
     $77 = (_wcspbrk($75,$76)|0); //@line 140 "/emscripten/system/include/libcxx/wchar.h"
     $78 = ($77|0)==(0|0); //@line 104 "./src/cpp/unrar/match.cpp"
     if ($78) {
      $79 = $17; //@line 104 "./src/cpp/unrar/match.cpp"
      $80 = ((($79)) + 4|0); //@line 104 "./src/cpp/unrar/match.cpp"
      $5 = $80;
      $6 = 46;
      $81 = $5; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
      $82 = $6; //@line 135 "/emscripten/system/include/libcxx/wchar.h"
      $3 = $81;
      $4 = $82;
      $83 = $3; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
      $84 = $4; //@line 133 "/emscripten/system/include/libcxx/wchar.h"
      $85 = (_wcschr($83,$84)|0); //@line 133 "/emscripten/system/include/libcxx/wchar.h"
      $86 = ($85|0)==(0|0); //@line 104 "./src/cpp/unrar/match.cpp"
      if ($86) {
       $87 = $16; //@line 105 "./src/cpp/unrar/match.cpp"
       $88 = ((($87)) + 4|0); //@line 105 "./src/cpp/unrar/match.cpp"
       $89 = $17; //@line 105 "./src/cpp/unrar/match.cpp"
       $90 = ((($89)) + 4|0); //@line 105 "./src/cpp/unrar/match.cpp"
       $91 = $18; //@line 105 "./src/cpp/unrar/match.cpp"
       $92 = $91&1; //@line 105 "./src/cpp/unrar/match.cpp"
       $93 = (__ZL10mwcsicompcPKwS0_b($88,$90,$92)|0); //@line 105 "./src/cpp/unrar/match.cpp"
       $94 = ($93|0)==(0); //@line 105 "./src/cpp/unrar/match.cpp"
       $$expand_i1_val13 = $94&1; //@line 105 "./src/cpp/unrar/match.cpp"
       HEAP8[$15>>0] = $$expand_i1_val13; //@line 105 "./src/cpp/unrar/match.cpp"
       break;
      }
     }
    }
   }
   while(1) {
    $95 = $17; //@line 109 "./src/cpp/unrar/match.cpp"
    $96 = HEAP32[$95>>2]|0; //@line 109 "./src/cpp/unrar/match.cpp"
    $97 = ($96|0)!=(0); //@line 109 "./src/cpp/unrar/match.cpp"
    if (!($97)) {
     label = 23;
     break;
    }
    $98 = $16; //@line 110 "./src/cpp/unrar/match.cpp"
    $99 = $17; //@line 110 "./src/cpp/unrar/match.cpp"
    $100 = ((($99)) + 4|0); //@line 110 "./src/cpp/unrar/match.cpp"
    $17 = $100; //@line 110 "./src/cpp/unrar/match.cpp"
    $101 = $18; //@line 110 "./src/cpp/unrar/match.cpp"
    $102 = $101&1; //@line 110 "./src/cpp/unrar/match.cpp"
    $103 = (__ZL5matchPKwS0_b($98,$99,$102)|0); //@line 110 "./src/cpp/unrar/match.cpp"
    if ($103) {
     label = 22;
     break;
    }
   }
   if ((label|0) == 22) {
    $$expand_i1_val15 = 1; //@line 111 "./src/cpp/unrar/match.cpp"
    HEAP8[$15>>0] = $$expand_i1_val15; //@line 111 "./src/cpp/unrar/match.cpp"
    break;
   }
   else if ((label|0) == 23) {
    $$expand_i1_val17 = 0; //@line 112 "./src/cpp/unrar/match.cpp"
    HEAP8[$15>>0] = $$expand_i1_val17; //@line 112 "./src/cpp/unrar/match.cpp"
    break;
   }
  }
  else if ((label|0) == 25) {
   $107 = $20; //@line 117 "./src/cpp/unrar/match.cpp"
   $108 = ($107|0)==(46); //@line 117 "./src/cpp/unrar/match.cpp"
   if ($108) {
    $109 = $19; //@line 117 "./src/cpp/unrar/match.cpp"
    $110 = ($109|0)==(0); //@line 117 "./src/cpp/unrar/match.cpp"
    $111 = $19; //@line 117 "./src/cpp/unrar/match.cpp"
    $112 = ($111|0)==(92); //@line 117 "./src/cpp/unrar/match.cpp"
    $or$cond = $110 | $112; //@line 117 "./src/cpp/unrar/match.cpp"
    $113 = $19; //@line 117 "./src/cpp/unrar/match.cpp"
    $114 = ($113|0)==(46); //@line 117 "./src/cpp/unrar/match.cpp"
    $or$cond3 = $or$cond | $114; //@line 117 "./src/cpp/unrar/match.cpp"
    if ($or$cond3) {
     $115 = $16; //@line 118 "./src/cpp/unrar/match.cpp"
     $116 = $17; //@line 118 "./src/cpp/unrar/match.cpp"
     $117 = $18; //@line 118 "./src/cpp/unrar/match.cpp"
     $118 = $117&1; //@line 118 "./src/cpp/unrar/match.cpp"
     $119 = (__ZL5matchPKwS0_b($115,$116,$118)|0); //@line 118 "./src/cpp/unrar/match.cpp"
     $$expand_i1_val19 = $119&1; //@line 118 "./src/cpp/unrar/match.cpp"
     HEAP8[$15>>0] = $$expand_i1_val19; //@line 118 "./src/cpp/unrar/match.cpp"
     break;
    }
   }
   $$expand_i1_val21 = 0; //@line 120 "./src/cpp/unrar/match.cpp"
   HEAP8[$15>>0] = $$expand_i1_val21; //@line 120 "./src/cpp/unrar/match.cpp"
  }
 } while(0);
 $$pre_trunc = HEAP8[$15>>0]|0; //@line 125 "./src/cpp/unrar/match.cpp"
 $122 = $$pre_trunc&1; //@line 125 "./src/cpp/unrar/match.cpp"
 STACKTOP = sp;return ($122|0); //@line 125 "./src/cpp/unrar/match.cpp"
}
function __Z9touppercwjb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $5 = $1&1;
 $4 = $5;
 $6 = $3;
 $2 = $6;
 $7 = $2; //@line 16 "./src/cpp/unrar/match.cpp"
 STACKTOP = sp;return ($7|0); //@line 16 "./src/cpp/unrar/match.cpp"
}
function __ZN7RarTimeaSEl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $4; //@line 24 "./src/cpp/unrar/timefn.cpp"
 $7 = $6; //@line 24 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$7>>2] = -717324288; //@line 24 "./src/cpp/unrar/timefn.cpp"
 $8 = (($6) + 4)|0; //@line 24 "./src/cpp/unrar/timefn.cpp"
 $9 = $8; //@line 24 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$9>>2] = 27111902; //@line 24 "./src/cpp/unrar/timefn.cpp"
 $10 = $3; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $11 = ($10|0)<(0); //@line 25 "./src/cpp/unrar/timefn.cpp"
 $12 = $11 << 31 >> 31; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $13 = (___muldi3(($10|0),($12|0),10000000,0)|0); //@line 25 "./src/cpp/unrar/timefn.cpp"
 $14 = tempRet0; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $15 = $4; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $16 = $15; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $18 = (($15) + 4)|0; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $19 = $18; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $20 = HEAP32[$19>>2]|0; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $21 = (_i64Add(($13|0),($14|0),($17|0),($20|0))|0); //@line 25 "./src/cpp/unrar/timefn.cpp"
 $22 = tempRet0; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $23 = $5; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $24 = $23; //@line 25 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$24>>2] = $21; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $25 = (($23) + 4)|0; //@line 25 "./src/cpp/unrar/timefn.cpp"
 $26 = $25; //@line 25 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$26>>2] = $22; //@line 25 "./src/cpp/unrar/timefn.cpp"
 STACKTOP = sp;return ($5|0); //@line 26 "./src/cpp/unrar/timefn.cpp"
}
function __ZN7RarTime7GetUnixEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $4 = $1;
 $5 = $2; //@line 32 "./src/cpp/unrar/timefn.cpp"
 $6 = $5; //@line 32 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$6>>2] = -717324288; //@line 32 "./src/cpp/unrar/timefn.cpp"
 $7 = (($5) + 4)|0; //@line 32 "./src/cpp/unrar/timefn.cpp"
 $8 = $7; //@line 32 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$8>>2] = 27111902; //@line 32 "./src/cpp/unrar/timefn.cpp"
 $9 = $4; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $10 = $9; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $12 = (($9) + 4)|0; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $13 = $12; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $15 = $2; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $16 = $15; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $18 = (($15) + 4)|0; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $19 = $18; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $20 = HEAP32[$19>>2]|0; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $21 = (_i64Subtract(($11|0),($14|0),($17|0),($20|0))|0); //@line 33 "./src/cpp/unrar/timefn.cpp"
 $22 = tempRet0; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $23 = (___udivdi3(($21|0),($22|0),10000000,0)|0); //@line 33 "./src/cpp/unrar/timefn.cpp"
 $24 = tempRet0; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $3 = $23; //@line 33 "./src/cpp/unrar/timefn.cpp"
 $25 = $3; //@line 34 "./src/cpp/unrar/timefn.cpp"
 STACKTOP = sp;return ($25|0); //@line 34 "./src/cpp/unrar/timefn.cpp"
}
function __ZN7RarTime8GetLocalEP12RarLocalTime($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = (__ZN7RarTime7GetUnixEv($6)|0); //@line 97 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$4>>2] = $7; //@line 97 "./src/cpp/unrar/timefn.cpp"
 $8 = (_localtime(($4|0))|0); //@line 99 "./src/cpp/unrar/timefn.cpp"
 $5 = $8; //@line 99 "./src/cpp/unrar/timefn.cpp"
 $9 = $5; //@line 101 "./src/cpp/unrar/timefn.cpp"
 $10 = ((($9)) + 20|0); //@line 101 "./src/cpp/unrar/timefn.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 101 "./src/cpp/unrar/timefn.cpp"
 $12 = (($11) + 1900)|0; //@line 101 "./src/cpp/unrar/timefn.cpp"
 $13 = $3; //@line 101 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$13>>2] = $12; //@line 101 "./src/cpp/unrar/timefn.cpp"
 $14 = $5; //@line 102 "./src/cpp/unrar/timefn.cpp"
 $15 = ((($14)) + 16|0); //@line 102 "./src/cpp/unrar/timefn.cpp"
 $16 = HEAP32[$15>>2]|0; //@line 102 "./src/cpp/unrar/timefn.cpp"
 $17 = (($16) + 1)|0; //@line 102 "./src/cpp/unrar/timefn.cpp"
 $18 = $3; //@line 102 "./src/cpp/unrar/timefn.cpp"
 $19 = ((($18)) + 4|0); //@line 102 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$19>>2] = $17; //@line 102 "./src/cpp/unrar/timefn.cpp"
 $20 = $5; //@line 103 "./src/cpp/unrar/timefn.cpp"
 $21 = ((($20)) + 12|0); //@line 103 "./src/cpp/unrar/timefn.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 103 "./src/cpp/unrar/timefn.cpp"
 $23 = $3; //@line 103 "./src/cpp/unrar/timefn.cpp"
 $24 = ((($23)) + 8|0); //@line 103 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$24>>2] = $22; //@line 103 "./src/cpp/unrar/timefn.cpp"
 $25 = $5; //@line 104 "./src/cpp/unrar/timefn.cpp"
 $26 = ((($25)) + 8|0); //@line 104 "./src/cpp/unrar/timefn.cpp"
 $27 = HEAP32[$26>>2]|0; //@line 104 "./src/cpp/unrar/timefn.cpp"
 $28 = $3; //@line 104 "./src/cpp/unrar/timefn.cpp"
 $29 = ((($28)) + 12|0); //@line 104 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$29>>2] = $27; //@line 104 "./src/cpp/unrar/timefn.cpp"
 $30 = $5; //@line 105 "./src/cpp/unrar/timefn.cpp"
 $31 = ((($30)) + 4|0); //@line 105 "./src/cpp/unrar/timefn.cpp"
 $32 = HEAP32[$31>>2]|0; //@line 105 "./src/cpp/unrar/timefn.cpp"
 $33 = $3; //@line 105 "./src/cpp/unrar/timefn.cpp"
 $34 = ((($33)) + 16|0); //@line 105 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$34>>2] = $32; //@line 105 "./src/cpp/unrar/timefn.cpp"
 $35 = $5; //@line 106 "./src/cpp/unrar/timefn.cpp"
 $36 = HEAP32[$35>>2]|0; //@line 106 "./src/cpp/unrar/timefn.cpp"
 $37 = $3; //@line 106 "./src/cpp/unrar/timefn.cpp"
 $38 = ((($37)) + 20|0); //@line 106 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$38>>2] = $36; //@line 106 "./src/cpp/unrar/timefn.cpp"
 $39 = $6; //@line 107 "./src/cpp/unrar/timefn.cpp"
 $40 = $39; //@line 107 "./src/cpp/unrar/timefn.cpp"
 $41 = HEAP32[$40>>2]|0; //@line 107 "./src/cpp/unrar/timefn.cpp"
 $42 = (($39) + 4)|0; //@line 107 "./src/cpp/unrar/timefn.cpp"
 $43 = $42; //@line 107 "./src/cpp/unrar/timefn.cpp"
 $44 = HEAP32[$43>>2]|0; //@line 107 "./src/cpp/unrar/timefn.cpp"
 $45 = (___uremdi3(($41|0),($44|0),10000000,0)|0); //@line 107 "./src/cpp/unrar/timefn.cpp"
 $46 = tempRet0; //@line 107 "./src/cpp/unrar/timefn.cpp"
 $47 = $3; //@line 107 "./src/cpp/unrar/timefn.cpp"
 $48 = ((($47)) + 24|0); //@line 107 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$48>>2] = $45; //@line 107 "./src/cpp/unrar/timefn.cpp"
 $49 = $5; //@line 108 "./src/cpp/unrar/timefn.cpp"
 $50 = ((($49)) + 24|0); //@line 108 "./src/cpp/unrar/timefn.cpp"
 $51 = HEAP32[$50>>2]|0; //@line 108 "./src/cpp/unrar/timefn.cpp"
 $52 = $3; //@line 108 "./src/cpp/unrar/timefn.cpp"
 $53 = ((($52)) + 28|0); //@line 108 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$53>>2] = $51; //@line 108 "./src/cpp/unrar/timefn.cpp"
 $54 = $5; //@line 109 "./src/cpp/unrar/timefn.cpp"
 $55 = ((($54)) + 28|0); //@line 109 "./src/cpp/unrar/timefn.cpp"
 $56 = HEAP32[$55>>2]|0; //@line 109 "./src/cpp/unrar/timefn.cpp"
 $57 = $3; //@line 109 "./src/cpp/unrar/timefn.cpp"
 $58 = ((($57)) + 32|0); //@line 109 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$58>>2] = $56; //@line 109 "./src/cpp/unrar/timefn.cpp"
 STACKTOP = sp;return; //@line 111 "./src/cpp/unrar/timefn.cpp"
}
function __ZN7RarTime8SetLocalEP12RarLocalTime($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3; //@line 165 "./src/cpp/unrar/timefn.cpp"
 $7 = ((($6)) + 20|0); //@line 165 "./src/cpp/unrar/timefn.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 165 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$4>>2] = $8; //@line 165 "./src/cpp/unrar/timefn.cpp"
 $9 = $3; //@line 166 "./src/cpp/unrar/timefn.cpp"
 $10 = ((($9)) + 16|0); //@line 166 "./src/cpp/unrar/timefn.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 166 "./src/cpp/unrar/timefn.cpp"
 $12 = ((($4)) + 4|0); //@line 166 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$12>>2] = $11; //@line 166 "./src/cpp/unrar/timefn.cpp"
 $13 = $3; //@line 167 "./src/cpp/unrar/timefn.cpp"
 $14 = ((($13)) + 12|0); //@line 167 "./src/cpp/unrar/timefn.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 167 "./src/cpp/unrar/timefn.cpp"
 $16 = ((($4)) + 8|0); //@line 167 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$16>>2] = $15; //@line 167 "./src/cpp/unrar/timefn.cpp"
 $17 = $3; //@line 168 "./src/cpp/unrar/timefn.cpp"
 $18 = ((($17)) + 8|0); //@line 168 "./src/cpp/unrar/timefn.cpp"
 $19 = HEAP32[$18>>2]|0; //@line 168 "./src/cpp/unrar/timefn.cpp"
 $20 = ((($4)) + 12|0); //@line 168 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$20>>2] = $19; //@line 168 "./src/cpp/unrar/timefn.cpp"
 $21 = $3; //@line 169 "./src/cpp/unrar/timefn.cpp"
 $22 = ((($21)) + 4|0); //@line 169 "./src/cpp/unrar/timefn.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 169 "./src/cpp/unrar/timefn.cpp"
 $24 = (($23) - 1)|0; //@line 169 "./src/cpp/unrar/timefn.cpp"
 $25 = ((($4)) + 16|0); //@line 169 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$25>>2] = $24; //@line 169 "./src/cpp/unrar/timefn.cpp"
 $26 = $3; //@line 170 "./src/cpp/unrar/timefn.cpp"
 $27 = HEAP32[$26>>2]|0; //@line 170 "./src/cpp/unrar/timefn.cpp"
 $28 = (($27) - 1900)|0; //@line 170 "./src/cpp/unrar/timefn.cpp"
 $29 = ((($4)) + 20|0); //@line 170 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$29>>2] = $28; //@line 170 "./src/cpp/unrar/timefn.cpp"
 $30 = ((($4)) + 32|0); //@line 171 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$30>>2] = -1; //@line 171 "./src/cpp/unrar/timefn.cpp"
 $31 = (_mktime(($4|0))|0); //@line 172 "./src/cpp/unrar/timefn.cpp"
 (__ZN7RarTimeaSEl($5,$31)|0); //@line 172 "./src/cpp/unrar/timefn.cpp"
 $32 = $3; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $33 = ((($32)) + 24|0); //@line 173 "./src/cpp/unrar/timefn.cpp"
 $34 = HEAP32[$33>>2]|0; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $35 = $5; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $36 = $35; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $37 = HEAP32[$36>>2]|0; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $38 = (($35) + 4)|0; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $39 = $38; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $40 = HEAP32[$39>>2]|0; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $41 = (_i64Add(($37|0),($40|0),($34|0),0)|0); //@line 173 "./src/cpp/unrar/timefn.cpp"
 $42 = tempRet0; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $43 = $5; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $44 = $43; //@line 173 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$44>>2] = $41; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $45 = (($43) + 4)|0; //@line 173 "./src/cpp/unrar/timefn.cpp"
 $46 = $45; //@line 173 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$46>>2] = $42; //@line 173 "./src/cpp/unrar/timefn.cpp"
 STACKTOP = sp;return; //@line 175 "./src/cpp/unrar/timefn.cpp"
}
function __ZN7RarTime6SetRawEy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $3 = $0;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $1;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $2;
 $9 = $3;
 $10 = $4; //@line 236 "./src/cpp/unrar/timefn.cpp"
 $11 = $10; //@line 236 "./src/cpp/unrar/timefn.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 236 "./src/cpp/unrar/timefn.cpp"
 $13 = (($10) + 4)|0; //@line 236 "./src/cpp/unrar/timefn.cpp"
 $14 = $13; //@line 236 "./src/cpp/unrar/timefn.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 236 "./src/cpp/unrar/timefn.cpp"
 $16 = $9; //@line 236 "./src/cpp/unrar/timefn.cpp"
 $17 = $16; //@line 236 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$17>>2] = $12; //@line 236 "./src/cpp/unrar/timefn.cpp"
 $18 = (($16) + 4)|0; //@line 236 "./src/cpp/unrar/timefn.cpp"
 $19 = $18; //@line 236 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$19>>2] = $15; //@line 236 "./src/cpp/unrar/timefn.cpp"
 STACKTOP = sp;return; //@line 237 "./src/cpp/unrar/timefn.cpp"
}
function __ZN7RarTime6GetDosEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 4|0;
 $1 = $0;
 $4 = $1;
 __ZN7RarTime8GetLocalEP12RarLocalTime($4,$2); //@line 243 "./src/cpp/unrar/timefn.cpp"
 $5 = ((($2)) + 20|0); //@line 244 "./src/cpp/unrar/timefn.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 244 "./src/cpp/unrar/timefn.cpp"
 $7 = (($6>>>0) / 2)&-1; //@line 244 "./src/cpp/unrar/timefn.cpp"
 $8 = ((($2)) + 16|0); //@line 244 "./src/cpp/unrar/timefn.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 244 "./src/cpp/unrar/timefn.cpp"
 $10 = $9 << 5; //@line 244 "./src/cpp/unrar/timefn.cpp"
 $11 = $7 | $10; //@line 244 "./src/cpp/unrar/timefn.cpp"
 $12 = ((($2)) + 12|0); //@line 244 "./src/cpp/unrar/timefn.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 244 "./src/cpp/unrar/timefn.cpp"
 $14 = $13 << 11; //@line 244 "./src/cpp/unrar/timefn.cpp"
 $15 = $11 | $14; //@line 244 "./src/cpp/unrar/timefn.cpp"
 $16 = ((($2)) + 8|0); //@line 245 "./src/cpp/unrar/timefn.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 245 "./src/cpp/unrar/timefn.cpp"
 $18 = $17 << 16; //@line 245 "./src/cpp/unrar/timefn.cpp"
 $19 = $15 | $18; //@line 244 "./src/cpp/unrar/timefn.cpp"
 $20 = ((($2)) + 4|0); //@line 245 "./src/cpp/unrar/timefn.cpp"
 $21 = HEAP32[$20>>2]|0; //@line 245 "./src/cpp/unrar/timefn.cpp"
 $22 = $21 << 21; //@line 245 "./src/cpp/unrar/timefn.cpp"
 $23 = $19 | $22; //@line 245 "./src/cpp/unrar/timefn.cpp"
 $24 = HEAP32[$2>>2]|0; //@line 245 "./src/cpp/unrar/timefn.cpp"
 $25 = (($24) - 1980)|0; //@line 245 "./src/cpp/unrar/timefn.cpp"
 $26 = $25 << 25; //@line 245 "./src/cpp/unrar/timefn.cpp"
 $27 = $23 | $26; //@line 245 "./src/cpp/unrar/timefn.cpp"
 $3 = $27; //@line 244 "./src/cpp/unrar/timefn.cpp"
 $28 = $3; //@line 246 "./src/cpp/unrar/timefn.cpp"
 STACKTOP = sp;return ($28|0); //@line 246 "./src/cpp/unrar/timefn.cpp"
}
function __ZN7RarTime6SetDosEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3; //@line 253 "./src/cpp/unrar/timefn.cpp"
 $7 = $6 & 31; //@line 253 "./src/cpp/unrar/timefn.cpp"
 $8 = $7<<1; //@line 253 "./src/cpp/unrar/timefn.cpp"
 $9 = ((($4)) + 20|0); //@line 253 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$9>>2] = $8; //@line 253 "./src/cpp/unrar/timefn.cpp"
 $10 = $3; //@line 254 "./src/cpp/unrar/timefn.cpp"
 $11 = $10 >>> 5; //@line 254 "./src/cpp/unrar/timefn.cpp"
 $12 = $11 & 63; //@line 254 "./src/cpp/unrar/timefn.cpp"
 $13 = ((($4)) + 16|0); //@line 254 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$13>>2] = $12; //@line 254 "./src/cpp/unrar/timefn.cpp"
 $14 = $3; //@line 255 "./src/cpp/unrar/timefn.cpp"
 $15 = $14 >>> 11; //@line 255 "./src/cpp/unrar/timefn.cpp"
 $16 = $15 & 31; //@line 255 "./src/cpp/unrar/timefn.cpp"
 $17 = ((($4)) + 12|0); //@line 255 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$17>>2] = $16; //@line 255 "./src/cpp/unrar/timefn.cpp"
 $18 = $3; //@line 256 "./src/cpp/unrar/timefn.cpp"
 $19 = $18 >>> 16; //@line 256 "./src/cpp/unrar/timefn.cpp"
 $20 = $19 & 31; //@line 256 "./src/cpp/unrar/timefn.cpp"
 $21 = ((($4)) + 8|0); //@line 256 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$21>>2] = $20; //@line 256 "./src/cpp/unrar/timefn.cpp"
 $22 = $3; //@line 257 "./src/cpp/unrar/timefn.cpp"
 $23 = $22 >>> 21; //@line 257 "./src/cpp/unrar/timefn.cpp"
 $24 = $23 & 15; //@line 257 "./src/cpp/unrar/timefn.cpp"
 $25 = ((($4)) + 4|0); //@line 257 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$25>>2] = $24; //@line 257 "./src/cpp/unrar/timefn.cpp"
 $26 = $3; //@line 258 "./src/cpp/unrar/timefn.cpp"
 $27 = $26 >>> 25; //@line 258 "./src/cpp/unrar/timefn.cpp"
 $28 = (($27) + 1980)|0; //@line 258 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$4>>2] = $28; //@line 258 "./src/cpp/unrar/timefn.cpp"
 $29 = ((($4)) + 24|0); //@line 259 "./src/cpp/unrar/timefn.cpp"
 HEAP32[$29>>2] = 0; //@line 259 "./src/cpp/unrar/timefn.cpp"
 __ZN7RarTime8SetLocalEP12RarLocalTime($5,$4); //@line 260 "./src/cpp/unrar/timefn.cpp"
 STACKTOP = sp;return; //@line 261 "./src/cpp/unrar/timefn.cpp"
}
function __ZN7RarTime5IsSetEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = $2; //@line 54 "./src/cpp/unrar/timefn.hpp"
 $4 = $3; //@line 54 "./src/cpp/unrar/timefn.hpp"
 $5 = HEAP32[$4>>2]|0; //@line 54 "./src/cpp/unrar/timefn.hpp"
 $6 = (($3) + 4)|0; //@line 54 "./src/cpp/unrar/timefn.hpp"
 $7 = $6; //@line 54 "./src/cpp/unrar/timefn.hpp"
 $8 = HEAP32[$7>>2]|0; //@line 54 "./src/cpp/unrar/timefn.hpp"
 $9 = ($5|0)!=(0); //@line 54 "./src/cpp/unrar/timefn.hpp"
 $10 = ($8|0)!=(0); //@line 54 "./src/cpp/unrar/timefn.hpp"
 $11 = $9 | $10; //@line 54 "./src/cpp/unrar/timefn.hpp"
 STACKTOP = sp;return ($11|0); //@line 54 "./src/cpp/unrar/timefn.hpp"
}
function __ZN7RarTime14SetCurrentTimeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1;
 (_time(($2|0))|0); //@line 356 "./src/cpp/unrar/timefn.cpp"
 $4 = HEAP32[$2>>2]|0; //@line 357 "./src/cpp/unrar/timefn.cpp"
 (__ZN7RarTimeaSEl($3,$4)|0); //@line 357 "./src/cpp/unrar/timefn.cpp"
 STACKTOP = sp;return; //@line 359 "./src/cpp/unrar/timefn.cpp"
}
function __ZN11ComprDataIOC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 144|0); //@line 3 "./src/cpp/unrar/rdwrfn.cpp"
 __ZN8DataHashC2Ev($5); //@line 3 "./src/cpp/unrar/rdwrfn.cpp"
 $6 = ((($4)) + 156|0); //@line 3 "./src/cpp/unrar/rdwrfn.cpp"
 __THREW__ = 0;
 invoke_vi(182,($6|0)); //@line 3 "./src/cpp/unrar/rdwrfn.cpp"
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $26 = ___cxa_find_matching_catch_2()|0;
  $27 = tempRet0;
  $2 = $26; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
  $3 = $27; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
  __ZN8DataHashD2Ev($5); //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
  $36 = $2; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
  $37 = $3; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
  ___resumeException($36|0);
  // unreachable;
 }
 $9 = ((($4)) + 168|0); //@line 3 "./src/cpp/unrar/rdwrfn.cpp"
 __THREW__ = 0;
 invoke_vi(182,($9|0)); //@line 3 "./src/cpp/unrar/rdwrfn.cpp"
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $28 = ___cxa_find_matching_catch_2()|0;
  $29 = tempRet0;
  $2 = $28; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
  $3 = $29; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
 } else {
  __THREW__ = 0;
  $12 = (invoke_ii(49,6352)|0); //@line 6 "./src/cpp/unrar/rdwrfn.cpp"
  $13 = __THREW__; __THREW__ = 0;
  $14 = $13&1;
  do {
   if ($14) {
    label = 11;
   } else {
    __THREW__ = 0;
    invoke_vi(125,($12|0)); //@line 6 "./src/cpp/unrar/rdwrfn.cpp"
    $15 = __THREW__; __THREW__ = 0;
    $16 = $15&1;
    if ($16) {
     $32 = ___cxa_find_matching_catch_2()|0;
     $33 = tempRet0;
     $2 = $32; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
     $3 = $33; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
     __ZdlPv($12); //@line 6 "./src/cpp/unrar/rdwrfn.cpp"
     break;
    }
    $17 = ((($4)) + 64|0); //@line 6 "./src/cpp/unrar/rdwrfn.cpp"
    HEAP32[$17>>2] = $12; //@line 6 "./src/cpp/unrar/rdwrfn.cpp"
    __THREW__ = 0;
    $18 = (invoke_ii(49,6352)|0); //@line 7 "./src/cpp/unrar/rdwrfn.cpp"
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if ($20) {
     label = 11;
    } else {
     __THREW__ = 0;
     invoke_vi(125,($18|0)); //@line 7 "./src/cpp/unrar/rdwrfn.cpp"
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if ($22) {
      $34 = ___cxa_find_matching_catch_2()|0;
      $35 = tempRet0;
      $2 = $34; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
      $3 = $35; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
      __ZdlPv($18); //@line 7 "./src/cpp/unrar/rdwrfn.cpp"
      break;
     }
     $23 = ((($4)) + 68|0); //@line 7 "./src/cpp/unrar/rdwrfn.cpp"
     HEAP32[$23>>2] = $18; //@line 7 "./src/cpp/unrar/rdwrfn.cpp"
     __THREW__ = 0;
     invoke_vi(183,($4|0)); //@line 10 "./src/cpp/unrar/rdwrfn.cpp"
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 11;
     } else {
      STACKTOP = sp;return; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
     }
    }
   }
  } while(0);
  if ((label|0) == 11) {
   $30 = ___cxa_find_matching_catch_2()|0;
   $31 = tempRet0;
   $2 = $30; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
   $3 = $31; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
  }
  __ZN8DataHashD2Ev($9); //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
 }
 __ZN8DataHashD2Ev($6); //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
 __ZN8DataHashD2Ev($5); //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
 $36 = $2; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
 $37 = $3; //@line 11 "./src/cpp/unrar/rdwrfn.cpp"
 ___resumeException($36|0);
 // unreachable;
}
function __ZN11ComprDataIO4InitEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0; //@line 16 "./src/cpp/unrar/rdwrfn.cpp"
 $3 = ((($2)) + 12|0); //@line 17 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$3>>0] = 0; //@line 17 "./src/cpp/unrar/rdwrfn.cpp"
 $4 = ((($2)) + 32|0); //@line 18 "./src/cpp/unrar/rdwrfn.cpp"
 $5 = $4; //@line 18 "./src/cpp/unrar/rdwrfn.cpp"
 $6 = $5; //@line 18 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$6>>2] = 0; //@line 18 "./src/cpp/unrar/rdwrfn.cpp"
 $7 = (($5) + 4)|0; //@line 18 "./src/cpp/unrar/rdwrfn.cpp"
 $8 = $7; //@line 18 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$8>>2] = 0; //@line 18 "./src/cpp/unrar/rdwrfn.cpp"
 $9 = ((($2)) + 40|0); //@line 19 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$9>>0] = 1; //@line 19 "./src/cpp/unrar/rdwrfn.cpp"
 $10 = ((($2)) + 41|0); //@line 20 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$10>>0] = 0; //@line 20 "./src/cpp/unrar/rdwrfn.cpp"
 $11 = ((($2)) + 42|0); //@line 21 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$11>>0] = 0; //@line 21 "./src/cpp/unrar/rdwrfn.cpp"
 $12 = ((($2)) + 80|0); //@line 22 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$12>>0] = 0; //@line 22 "./src/cpp/unrar/rdwrfn.cpp"
 $13 = ((($2)) + 81|0); //@line 23 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$13>>0] = 0; //@line 23 "./src/cpp/unrar/rdwrfn.cpp"
 $14 = ((($2)) + 82|0); //@line 24 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$14>>0] = 0; //@line 24 "./src/cpp/unrar/rdwrfn.cpp"
 $15 = ((($2)) + 44|0); //@line 25 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$15>>2] = 0; //@line 25 "./src/cpp/unrar/rdwrfn.cpp"
 $16 = ((($2)) + 48|0); //@line 26 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$16>>2] = 0; //@line 26 "./src/cpp/unrar/rdwrfn.cpp"
 $17 = ((($2)) + 24|0); //@line 27 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$17>>2] = 0; //@line 27 "./src/cpp/unrar/rdwrfn.cpp"
 $18 = ((($2)) + 52|0); //@line 28 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$18>>2] = 0; //@line 28 "./src/cpp/unrar/rdwrfn.cpp"
 $19 = ((($2)) + 180|0); //@line 29 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$19>>0] = 0; //@line 29 "./src/cpp/unrar/rdwrfn.cpp"
 $20 = ((($2)) + 181|0); //@line 30 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$20>>0] = 0; //@line 30 "./src/cpp/unrar/rdwrfn.cpp"
 $21 = ((($2)) + 120|0); //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $22 = $21; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $23 = $22; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$23>>2] = 0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $24 = (($22) + 4)|0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $25 = $24; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$25>>2] = 0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $26 = ((($2)) + 112|0); //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $27 = $26; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $28 = $27; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$28>>2] = 0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $29 = (($27) + 4)|0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $30 = $29; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$30>>2] = 0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $31 = ((($2)) + 104|0); //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $32 = $31; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $33 = $32; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$33>>2] = 0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $34 = (($32) + 4)|0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $35 = $34; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$35>>2] = 0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $36 = ((($2)) + 96|0); //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $37 = $36; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $38 = $37; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$38>>2] = 0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $39 = (($37) + 4)|0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $40 = $39; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$40>>2] = 0; //@line 31 "./src/cpp/unrar/rdwrfn.cpp"
 $41 = ((($2)) + 72|0); //@line 32 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$41>>2] = -1; //@line 32 "./src/cpp/unrar/rdwrfn.cpp"
 $42 = ((($2)) + 56|0); //@line 33 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$42>>2] = 0; //@line 33 "./src/cpp/unrar/rdwrfn.cpp"
 $43 = ((($2)) + 60|0); //@line 34 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$43>>2] = 0; //@line 34 "./src/cpp/unrar/rdwrfn.cpp"
 $44 = ((($2)) + 76|0); //@line 35 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$44>>2] = 0; //@line 35 "./src/cpp/unrar/rdwrfn.cpp"
 $45 = ((($2)) + 136|0); //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 $46 = $45; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 $47 = $46; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$47>>2] = 0; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 $48 = (($46) + 4)|0; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 $49 = $48; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$49>>2] = 0; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 $50 = ((($2)) + 128|0); //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 $51 = $50; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 $52 = $51; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$52>>2] = 0; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 $53 = (($51) + 4)|0; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 $54 = $53; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$54>>2] = 0; //@line 36 "./src/cpp/unrar/rdwrfn.cpp"
 STACKTOP = sp;return; //@line 37 "./src/cpp/unrar/rdwrfn.cpp"
}
function __ZN11ComprDataIOD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 64|0); //@line 43 "./src/cpp/unrar/rdwrfn.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 43 "./src/cpp/unrar/rdwrfn.cpp"
 $5 = ($4|0)==(0|0); //@line 43 "./src/cpp/unrar/rdwrfn.cpp"
 if (!($5)) {
  __ZN9CryptDataD2Ev($4); //@line 43 "./src/cpp/unrar/rdwrfn.cpp"
  __ZdlPv($4); //@line 43 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $6 = ((($2)) + 68|0); //@line 44 "./src/cpp/unrar/rdwrfn.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 44 "./src/cpp/unrar/rdwrfn.cpp"
 $8 = ($7|0)==(0|0); //@line 44 "./src/cpp/unrar/rdwrfn.cpp"
 if (!($8)) {
  __ZN9CryptDataD2Ev($7); //@line 44 "./src/cpp/unrar/rdwrfn.cpp"
  __ZdlPv($7); //@line 44 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $9 = ((($2)) + 168|0); //@line 46 "./src/cpp/unrar/rdwrfn.cpp"
 __ZN8DataHashD2Ev($9); //@line 46 "./src/cpp/unrar/rdwrfn.cpp"
 $10 = ((($2)) + 156|0); //@line 46 "./src/cpp/unrar/rdwrfn.cpp"
 __ZN8DataHashD2Ev($10); //@line 46 "./src/cpp/unrar/rdwrfn.cpp"
 $11 = ((($2)) + 144|0); //@line 46 "./src/cpp/unrar/rdwrfn.cpp"
 __ZN8DataHashD2Ev($11); //@line 46 "./src/cpp/unrar/rdwrfn.cpp"
 STACKTOP = sp;return; //@line 46 "./src/cpp/unrar/rdwrfn.cpp"
}
function __ZN11ComprDataIO7UnpReadEPhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $17 = $4;
 $18 = ((($17)) + 181|0); //@line 57 "./src/cpp/unrar/rdwrfn.cpp"
 $19 = HEAP8[$18>>0]|0; //@line 57 "./src/cpp/unrar/rdwrfn.cpp"
 $20 = $19&1; //@line 57 "./src/cpp/unrar/rdwrfn.cpp"
 if ($20) {
  $21 = $6; //@line 58 "./src/cpp/unrar/rdwrfn.cpp"
  $22 = $21 & -16; //@line 58 "./src/cpp/unrar/rdwrfn.cpp"
  $6 = $22; //@line 58 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $7 = 0; //@line 61 "./src/cpp/unrar/rdwrfn.cpp"
 $8 = 0; //@line 61 "./src/cpp/unrar/rdwrfn.cpp"
 $23 = $5; //@line 63 "./src/cpp/unrar/rdwrfn.cpp"
 $9 = $23; //@line 63 "./src/cpp/unrar/rdwrfn.cpp"
 while(1) {
  $24 = $6; //@line 64 "./src/cpp/unrar/rdwrfn.cpp"
  $25 = ($24>>>0)>(0); //@line 64 "./src/cpp/unrar/rdwrfn.cpp"
  if (!($25)) {
   label = 30;
   break;
  }
  $26 = ((($17)) + 44|0); //@line 66 "./src/cpp/unrar/rdwrfn.cpp"
  $27 = HEAP32[$26>>2]|0; //@line 66 "./src/cpp/unrar/rdwrfn.cpp"
  $10 = $27; //@line 66 "./src/cpp/unrar/rdwrfn.cpp"
  $28 = HEAP8[$17>>0]|0; //@line 68 "./src/cpp/unrar/rdwrfn.cpp"
  $29 = $28&1; //@line 68 "./src/cpp/unrar/rdwrfn.cpp"
  if ($29) {
   $30 = $5; //@line 70 "./src/cpp/unrar/rdwrfn.cpp"
   $31 = ((($17)) + 8|0); //@line 70 "./src/cpp/unrar/rdwrfn.cpp"
   $32 = HEAP32[$31>>2]|0; //@line 70 "./src/cpp/unrar/rdwrfn.cpp"
   $33 = ((($17)) + 4|0); //@line 70 "./src/cpp/unrar/rdwrfn.cpp"
   $34 = HEAP32[$33>>2]|0; //@line 70 "./src/cpp/unrar/rdwrfn.cpp"
   _memcpy(($30|0),($32|0),($34|0))|0; //@line 70 "./src/cpp/unrar/rdwrfn.cpp"
   $35 = ((($17)) + 4|0); //@line 71 "./src/cpp/unrar/rdwrfn.cpp"
   $36 = HEAP32[$35>>2]|0; //@line 71 "./src/cpp/unrar/rdwrfn.cpp"
   $7 = $36; //@line 71 "./src/cpp/unrar/rdwrfn.cpp"
   $37 = ((($17)) + 4|0); //@line 72 "./src/cpp/unrar/rdwrfn.cpp"
   HEAP32[$37>>2] = 0; //@line 72 "./src/cpp/unrar/rdwrfn.cpp"
  } else {
   $38 = $6; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $39 = ((($17)) + 32|0); //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $40 = $39; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $41 = $40; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $42 = HEAP32[$41>>2]|0; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $43 = (($40) + 4)|0; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $44 = $43; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $45 = HEAP32[$44>>2]|0; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $46 = (0)>($45|0); //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $47 = ($38>>>0)>($42>>>0); //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $48 = (0)==($45|0); //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $49 = $48 & $47; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $50 = $46 | $49; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   if ($50) {
    $51 = ((($17)) + 32|0); //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
    $52 = $51; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
    $53 = $52; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
    $54 = HEAP32[$53>>2]|0; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
    $55 = (($52) + 4)|0; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
    $56 = $55; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
    $57 = HEAP32[$56>>2]|0; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
    $59 = $54;
   } else {
    $58 = $6; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
    $59 = $58;
   }
   $11 = $59; //@line 76 "./src/cpp/unrar/rdwrfn.cpp"
   $60 = $11; //@line 77 "./src/cpp/unrar/rdwrfn.cpp"
   $61 = ($60>>>0)>(0); //@line 77 "./src/cpp/unrar/rdwrfn.cpp"
   if ($61) {
    $62 = ((($17)) + 81|0); //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
    $63 = HEAP8[$62>>0]|0; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
    $64 = $63&1; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
    if ($64) {
     $65 = ((($17)) + 181|0); //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
     $66 = HEAP8[$65>>0]|0; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
     $67 = $66&1; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
     if ($67) {
      $68 = $6; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $69 = ((($17)) + 32|0); //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $70 = $69; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $71 = $70; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $72 = HEAP32[$71>>2]|0; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $73 = (($70) + 4)|0; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $74 = $73; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $75 = HEAP32[$74>>2]|0; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $76 = (0)>($75|0); //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $77 = ($68>>>0)>($72>>>0); //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $78 = (0)==($75|0); //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $79 = $78 & $77; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      $80 = $76 | $79; //@line 79 "./src/cpp/unrar/rdwrfn.cpp"
      if ($80) {
       $81 = $8; //@line 87 "./src/cpp/unrar/rdwrfn.cpp"
       $82 = $11; //@line 87 "./src/cpp/unrar/rdwrfn.cpp"
       $83 = (($81) + ($82))|0; //@line 87 "./src/cpp/unrar/rdwrfn.cpp"
       $12 = $83; //@line 87 "./src/cpp/unrar/rdwrfn.cpp"
       $84 = $12; //@line 88 "./src/cpp/unrar/rdwrfn.cpp"
       $85 = $12; //@line 88 "./src/cpp/unrar/rdwrfn.cpp"
       $86 = $85 & -16; //@line 88 "./src/cpp/unrar/rdwrfn.cpp"
       $87 = (($84) - ($86))|0; //@line 88 "./src/cpp/unrar/rdwrfn.cpp"
       $13 = $87; //@line 88 "./src/cpp/unrar/rdwrfn.cpp"
       $88 = $11; //@line 89 "./src/cpp/unrar/rdwrfn.cpp"
       $89 = $13; //@line 89 "./src/cpp/unrar/rdwrfn.cpp"
       $90 = (($88) - ($89))|0; //@line 89 "./src/cpp/unrar/rdwrfn.cpp"
       $14 = $90; //@line 89 "./src/cpp/unrar/rdwrfn.cpp"
       $91 = $14; //@line 90 "./src/cpp/unrar/rdwrfn.cpp"
       $92 = ($91|0)>(0); //@line 90 "./src/cpp/unrar/rdwrfn.cpp"
       if ($92) {
        $93 = $14; //@line 91 "./src/cpp/unrar/rdwrfn.cpp"
        $11 = $93; //@line 91 "./src/cpp/unrar/rdwrfn.cpp"
       }
      }
     }
    }
    $94 = ((($17)) + 44|0); //@line 94 "./src/cpp/unrar/rdwrfn.cpp"
    $95 = HEAP32[$94>>2]|0; //@line 94 "./src/cpp/unrar/rdwrfn.cpp"
    $96 = (__ZN4File8IsOpenedEv($95)|0); //@line 94 "./src/cpp/unrar/rdwrfn.cpp"
    if (!($96)) {
     label = 17;
     break;
    }
    $97 = ((($17)) + 44|0); //@line 96 "./src/cpp/unrar/rdwrfn.cpp"
    $98 = HEAP32[$97>>2]|0; //@line 96 "./src/cpp/unrar/rdwrfn.cpp"
    $99 = HEAP32[$98>>2]|0; //@line 96 "./src/cpp/unrar/rdwrfn.cpp"
    $100 = ((($99)) + 12|0); //@line 96 "./src/cpp/unrar/rdwrfn.cpp"
    $101 = HEAP32[$100>>2]|0; //@line 96 "./src/cpp/unrar/rdwrfn.cpp"
    $102 = $9; //@line 96 "./src/cpp/unrar/rdwrfn.cpp"
    $103 = $11; //@line 96 "./src/cpp/unrar/rdwrfn.cpp"
    $104 = (FUNCTION_TABLE_iiii[$101 & 511]($98,$102,$103)|0); //@line 96 "./src/cpp/unrar/rdwrfn.cpp"
    $7 = $104; //@line 96 "./src/cpp/unrar/rdwrfn.cpp"
    $105 = ((($17)) + 56|0); //@line 97 "./src/cpp/unrar/rdwrfn.cpp"
    $106 = HEAP32[$105>>2]|0; //@line 97 "./src/cpp/unrar/rdwrfn.cpp"
    $107 = ($106|0)!=(0|0); //@line 97 "./src/cpp/unrar/rdwrfn.cpp"
    if ($107) {
     $108 = ((($17)) + 56|0); //@line 97 "./src/cpp/unrar/rdwrfn.cpp"
     $109 = HEAP32[$108>>2]|0; //@line 97 "./src/cpp/unrar/rdwrfn.cpp"
     $112 = $109;
    } else {
     $110 = $10; //@line 97 "./src/cpp/unrar/rdwrfn.cpp"
     $111 = ((($110)) + 21424|0); //@line 97 "./src/cpp/unrar/rdwrfn.cpp"
     $112 = $111;
    }
    $15 = $112; //@line 97 "./src/cpp/unrar/rdwrfn.cpp"
    $113 = $15; //@line 98 "./src/cpp/unrar/rdwrfn.cpp"
    $114 = ((($113)) + 8329|0); //@line 98 "./src/cpp/unrar/rdwrfn.cpp"
    $115 = HEAP8[$114>>0]|0; //@line 98 "./src/cpp/unrar/rdwrfn.cpp"
    $116 = $115&1; //@line 98 "./src/cpp/unrar/rdwrfn.cpp"
    if ($116) {
     $117 = ((($17)) + 144|0); //@line 99 "./src/cpp/unrar/rdwrfn.cpp"
     $118 = $9; //@line 99 "./src/cpp/unrar/rdwrfn.cpp"
     $119 = $7; //@line 99 "./src/cpp/unrar/rdwrfn.cpp"
     __ZN8DataHash6UpdateEPKvj($117,$118,$119); //@line 99 "./src/cpp/unrar/rdwrfn.cpp"
    }
   }
  }
  $120 = $7; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $121 = ($120|0)<(0); //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $122 = $121 << 31 >> 31; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $123 = ((($17)) + 112|0); //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $124 = $123; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $125 = $124; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $126 = HEAP32[$125>>2]|0; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $127 = (($124) + 4)|0; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $128 = $127; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $129 = HEAP32[$128>>2]|0; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $130 = (_i64Add(($126|0),($129|0),($120|0),($122|0))|0); //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $131 = tempRet0; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $132 = $123; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $133 = $132; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP32[$133>>2] = $130; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $134 = (($132) + 4)|0; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $135 = $134; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP32[$135>>2] = $131; //@line 102 "./src/cpp/unrar/rdwrfn.cpp"
  $136 = $7; //@line 103 "./src/cpp/unrar/rdwrfn.cpp"
  $137 = $8; //@line 103 "./src/cpp/unrar/rdwrfn.cpp"
  $138 = (($137) + ($136))|0; //@line 103 "./src/cpp/unrar/rdwrfn.cpp"
  $8 = $138; //@line 103 "./src/cpp/unrar/rdwrfn.cpp"
  $139 = $7; //@line 107 "./src/cpp/unrar/rdwrfn.cpp"
  $140 = $9; //@line 107 "./src/cpp/unrar/rdwrfn.cpp"
  $141 = (($140) + ($139)|0); //@line 107 "./src/cpp/unrar/rdwrfn.cpp"
  $9 = $141; //@line 107 "./src/cpp/unrar/rdwrfn.cpp"
  $142 = $7; //@line 108 "./src/cpp/unrar/rdwrfn.cpp"
  $143 = $6; //@line 108 "./src/cpp/unrar/rdwrfn.cpp"
  $144 = (($143) - ($142))|0; //@line 108 "./src/cpp/unrar/rdwrfn.cpp"
  $6 = $144; //@line 108 "./src/cpp/unrar/rdwrfn.cpp"
  $145 = $7; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $146 = ($145|0)<(0); //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $147 = $146 << 31 >> 31; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $148 = ((($17)) + 32|0); //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $149 = $148; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $150 = $149; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $151 = HEAP32[$150>>2]|0; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $152 = (($149) + 4)|0; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $153 = $152; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $154 = HEAP32[$153>>2]|0; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $155 = (_i64Subtract(($151|0),($154|0),($145|0),($147|0))|0); //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $156 = tempRet0; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $157 = $148; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $158 = $157; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP32[$158>>2] = $155; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $159 = (($157) + 4)|0; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $160 = $159; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP32[$160>>2] = $156; //@line 110 "./src/cpp/unrar/rdwrfn.cpp"
  $161 = ((($17)) + 81|0); //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $162 = HEAP8[$161>>0]|0; //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $163 = $162&1; //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  if (!($163)) {
   label = 30;
   break;
  }
  $164 = ((($17)) + 32|0); //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $165 = $164; //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $166 = $165; //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $167 = HEAP32[$166>>2]|0; //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $168 = (($165) + 4)|0; //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $169 = $168; //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $170 = HEAP32[$169>>2]|0; //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $171 = ($167|0)==(0); //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $172 = ($170|0)==(0); //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  $173 = $171 & $172; //@line 119 "./src/cpp/unrar/rdwrfn.cpp"
  if (!($173)) {
   label = 30;
   break;
  }
  $174 = $7; //@line 120 "./src/cpp/unrar/rdwrfn.cpp"
  $175 = ($174|0)==(0); //@line 120 "./src/cpp/unrar/rdwrfn.cpp"
  if (!($175)) {
   $176 = ((($17)) + 181|0); //@line 120 "./src/cpp/unrar/rdwrfn.cpp"
   $177 = HEAP8[$176>>0]|0; //@line 120 "./src/cpp/unrar/rdwrfn.cpp"
   $178 = $177&1; //@line 120 "./src/cpp/unrar/rdwrfn.cpp"
   if (!($178)) {
    label = 30;
    break;
   }
   $179 = $8; //@line 120 "./src/cpp/unrar/rdwrfn.cpp"
   $180 = $179 & 15; //@line 120 "./src/cpp/unrar/rdwrfn.cpp"
   $181 = ($180|0)!=(0); //@line 120 "./src/cpp/unrar/rdwrfn.cpp"
   if (!($181)) {
    label = 30;
    break;
   }
  }
  $182 = $10; //@line 123 "./src/cpp/unrar/rdwrfn.cpp"
  $183 = ((($17)) + 76|0); //@line 123 "./src/cpp/unrar/rdwrfn.cpp"
  $184 = HEAP32[$183>>2]|0; //@line 123 "./src/cpp/unrar/rdwrfn.cpp"
  $185 = (__Z12MergeArchiveR7ArchiveP11ComprDataIObw($182,$17,1,$184)|0); //@line 123 "./src/cpp/unrar/rdwrfn.cpp"
  if (!($185)) {
   label = 29;
   break;
  }
 }
 if ((label|0) == 17) {
  $3 = -1; //@line 95 "./src/cpp/unrar/rdwrfn.cpp"
  $226 = $3; //@line 146 "./src/cpp/unrar/rdwrfn.cpp"
  STACKTOP = sp;return ($226|0); //@line 146 "./src/cpp/unrar/rdwrfn.cpp"
 }
 else if ((label|0) == 29) {
  $186 = ((($17)) + 82|0); //@line 126 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP8[$186>>0] = 1; //@line 126 "./src/cpp/unrar/rdwrfn.cpp"
  $3 = -1; //@line 127 "./src/cpp/unrar/rdwrfn.cpp"
  $226 = $3; //@line 146 "./src/cpp/unrar/rdwrfn.cpp"
  STACKTOP = sp;return ($226|0); //@line 146 "./src/cpp/unrar/rdwrfn.cpp"
 }
 else if ((label|0) == 30) {
  $187 = ((($17)) + 44|0); //@line 133 "./src/cpp/unrar/rdwrfn.cpp"
  $188 = HEAP32[$187>>2]|0; //@line 133 "./src/cpp/unrar/rdwrfn.cpp"
  $16 = $188; //@line 133 "./src/cpp/unrar/rdwrfn.cpp"
  $189 = $16; //@line 134 "./src/cpp/unrar/rdwrfn.cpp"
  $190 = ($189|0)!=(0|0); //@line 134 "./src/cpp/unrar/rdwrfn.cpp"
  if ($190) {
   $191 = $16; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $192 = ((($191)) + 56840|0); //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $193 = $192; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $194 = $193; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $195 = HEAP32[$194>>2]|0; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $196 = (($193) + 4)|0; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $197 = $196; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $198 = HEAP32[$197>>2]|0; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $199 = ((($17)) + 112|0); //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $200 = $199; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $201 = $200; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $202 = HEAP32[$201>>2]|0; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $203 = (($200) + 4)|0; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $204 = $203; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $205 = HEAP32[$204>>2]|0; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $206 = (_i64Add(($195|0),($198|0),($202|0),($205|0))|0); //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $207 = tempRet0; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $208 = ((($17)) + 88|0); //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $209 = $208; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $210 = $209; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $211 = HEAP32[$210>>2]|0; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $212 = (($209) + 4)|0; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $213 = $212; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   $214 = HEAP32[$213>>2]|0; //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
   __ZN11ComprDataIO11ShowUnpReadExx($17,$206,$207,$211,$214); //@line 135 "./src/cpp/unrar/rdwrfn.cpp"
  }
  $215 = $7; //@line 136 "./src/cpp/unrar/rdwrfn.cpp"
  $216 = ($215|0)!=(-1); //@line 136 "./src/cpp/unrar/rdwrfn.cpp"
  if ($216) {
   $217 = $8; //@line 138 "./src/cpp/unrar/rdwrfn.cpp"
   $7 = $217; //@line 138 "./src/cpp/unrar/rdwrfn.cpp"
   $218 = ((($17)) + 181|0); //@line 140 "./src/cpp/unrar/rdwrfn.cpp"
   $219 = HEAP8[$218>>0]|0; //@line 140 "./src/cpp/unrar/rdwrfn.cpp"
   $220 = $219&1; //@line 140 "./src/cpp/unrar/rdwrfn.cpp"
   if ($220) {
    $221 = ((($17)) + 68|0); //@line 141 "./src/cpp/unrar/rdwrfn.cpp"
    $222 = HEAP32[$221>>2]|0; //@line 141 "./src/cpp/unrar/rdwrfn.cpp"
    $223 = $5; //@line 141 "./src/cpp/unrar/rdwrfn.cpp"
    $224 = $7; //@line 141 "./src/cpp/unrar/rdwrfn.cpp"
    __ZN9CryptData12DecryptBlockEPhj($222,$223,$224); //@line 141 "./src/cpp/unrar/rdwrfn.cpp"
   }
  }
  __Z4Waitv(); //@line 144 "./src/cpp/unrar/rdwrfn.cpp"
  $225 = $7; //@line 145 "./src/cpp/unrar/rdwrfn.cpp"
  $3 = $225; //@line 145 "./src/cpp/unrar/rdwrfn.cpp"
  $226 = $3; //@line 146 "./src/cpp/unrar/rdwrfn.cpp"
  STACKTOP = sp;return ($226|0); //@line 146 "./src/cpp/unrar/rdwrfn.cpp"
 }
 return (0)|0;
}
function __ZN11ComprDataIO11ShowUnpReadExx($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 8|0;
 $7 = sp;
 $5 = $0;
 $11 = $6;
 $12 = $11;
 HEAP32[$12>>2] = $1;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $2;
 $15 = $7;
 $16 = $15;
 HEAP32[$16>>2] = $3;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = $4;
 $19 = $5;
 $20 = ((($19)) + 40|0); //@line 229 "./src/cpp/unrar/rdwrfn.cpp"
 $21 = HEAP8[$20>>0]|0; //@line 229 "./src/cpp/unrar/rdwrfn.cpp"
 $22 = $21&1; //@line 229 "./src/cpp/unrar/rdwrfn.cpp"
 if (!($22)) {
  STACKTOP = sp;return; //@line 248 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $23 = ((($19)) + 44|0); //@line 229 "./src/cpp/unrar/rdwrfn.cpp"
 $24 = HEAP32[$23>>2]|0; //@line 229 "./src/cpp/unrar/rdwrfn.cpp"
 $25 = ($24|0)!=(0|0); //@line 229 "./src/cpp/unrar/rdwrfn.cpp"
 if (!($25)) {
  STACKTOP = sp;return; //@line 248 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $26 = ((($19)) + 136|0); //@line 231 "./src/cpp/unrar/rdwrfn.cpp"
 $27 = $26; //@line 231 "./src/cpp/unrar/rdwrfn.cpp"
 $28 = $27; //@line 231 "./src/cpp/unrar/rdwrfn.cpp"
 $29 = HEAP32[$28>>2]|0; //@line 231 "./src/cpp/unrar/rdwrfn.cpp"
 $30 = (($27) + 4)|0; //@line 231 "./src/cpp/unrar/rdwrfn.cpp"
 $31 = $30; //@line 231 "./src/cpp/unrar/rdwrfn.cpp"
 $32 = HEAP32[$31>>2]|0; //@line 231 "./src/cpp/unrar/rdwrfn.cpp"
 $33 = ($29|0)!=(0); //@line 231 "./src/cpp/unrar/rdwrfn.cpp"
 $34 = ($32|0)!=(0); //@line 231 "./src/cpp/unrar/rdwrfn.cpp"
 $35 = $33 | $34; //@line 231 "./src/cpp/unrar/rdwrfn.cpp"
 if ($35) {
  $36 = ((($19)) + 136|0); //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $37 = $36; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $38 = $37; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $39 = HEAP32[$38>>2]|0; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $40 = (($37) + 4)|0; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $41 = $40; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $42 = HEAP32[$41>>2]|0; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $43 = $7; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $44 = $43; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP32[$44>>2] = $39; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $45 = (($43) + 4)|0; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $46 = $45; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP32[$46>>2] = $42; //@line 234 "./src/cpp/unrar/rdwrfn.cpp"
  $47 = ((($19)) + 128|0); //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $48 = $47; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $49 = $48; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $50 = HEAP32[$49>>2]|0; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $51 = (($48) + 4)|0; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $52 = $51; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $53 = HEAP32[$52>>2]|0; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $54 = $6; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $55 = $54; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $56 = HEAP32[$55>>2]|0; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $57 = (($54) + 4)|0; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $58 = $57; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $59 = HEAP32[$58>>2]|0; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $60 = (_i64Add(($56|0),($59|0),($50|0),($53|0))|0); //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $61 = tempRet0; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $62 = $6; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $63 = $62; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP32[$63>>2] = $60; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $64 = (($62) + 4)|0; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  $65 = $64; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP32[$65>>2] = $61; //@line 235 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $66 = ((($19)) + 44|0); //@line 238 "./src/cpp/unrar/rdwrfn.cpp"
 $67 = HEAP32[$66>>2]|0; //@line 238 "./src/cpp/unrar/rdwrfn.cpp"
 $8 = $67; //@line 238 "./src/cpp/unrar/rdwrfn.cpp"
 $68 = $8; //@line 239 "./src/cpp/unrar/rdwrfn.cpp"
 $69 = (__ZN7Archive13GetRAROptionsEv($68)|0); //@line 239 "./src/cpp/unrar/rdwrfn.cpp"
 $9 = $69; //@line 239 "./src/cpp/unrar/rdwrfn.cpp"
 $70 = $6; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $71 = $70; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $72 = HEAP32[$71>>2]|0; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $73 = (($70) + 4)|0; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $74 = $73; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $75 = HEAP32[$74>>2]|0; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $76 = $7; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $77 = $76; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $78 = HEAP32[$77>>2]|0; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $79 = (($76) + 4)|0; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $80 = $79; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $81 = HEAP32[$80>>2]|0; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $82 = (__Z9ToPercentxx($72,$75,$78,$81)|0); //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $10 = $82; //@line 241 "./src/cpp/unrar/rdwrfn.cpp"
 $83 = $9; //@line 242 "./src/cpp/unrar/rdwrfn.cpp"
 $84 = ((($83)) + 49740|0); //@line 242 "./src/cpp/unrar/rdwrfn.cpp"
 $85 = HEAP8[$84>>0]|0; //@line 242 "./src/cpp/unrar/rdwrfn.cpp"
 $86 = $85&1; //@line 242 "./src/cpp/unrar/rdwrfn.cpp"
 if ($86) {
  STACKTOP = sp;return; //@line 248 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $87 = $10; //@line 242 "./src/cpp/unrar/rdwrfn.cpp"
 $88 = ((($19)) + 72|0); //@line 242 "./src/cpp/unrar/rdwrfn.cpp"
 $89 = HEAP32[$88>>2]|0; //@line 242 "./src/cpp/unrar/rdwrfn.cpp"
 $90 = ($87|0)!=($89|0); //@line 242 "./src/cpp/unrar/rdwrfn.cpp"
 if (!($90)) {
  STACKTOP = sp;return; //@line 248 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $91 = ((($19)) + 120|0); //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $92 = $91; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $93 = $92; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $94 = HEAP32[$93>>2]|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $95 = (($92) + 4)|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $96 = $95; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $97 = HEAP32[$96>>2]|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $98 = $8; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $99 = ((($98)) + 21424|0); //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $100 = ((($99)) + 8272|0); //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $101 = $100; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $102 = $101; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $103 = HEAP32[$102>>2]|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $104 = (($101) + 4)|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $105 = $104; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $106 = HEAP32[$105>>2]|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $107 = $6; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $108 = $107; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $109 = HEAP32[$108>>2]|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $110 = (($107) + 4)|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $111 = $110; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $112 = HEAP32[$111>>2]|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $113 = $7; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $114 = $113; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $115 = HEAP32[$114>>2]|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $116 = (($113) + 4)|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $117 = $116; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $118 = HEAP32[$117>>2]|0; //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 __Z17uiExtractProgressxxxx($94,$97,$103,$106,$109,$112,$115,$118); //@line 244 "./src/cpp/unrar/rdwrfn.cpp"
 $119 = $10; //@line 245 "./src/cpp/unrar/rdwrfn.cpp"
 $120 = ((($19)) + 72|0); //@line 245 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$120>>2] = $119; //@line 245 "./src/cpp/unrar/rdwrfn.cpp"
 STACKTOP = sp;return; //@line 248 "./src/cpp/unrar/rdwrfn.cpp"
}
function __ZN11ComprDataIO8UnpWriteEPhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = ((($8)) + 44|0); //@line 160 "./src/cpp/unrar/rdwrfn.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 160 "./src/cpp/unrar/rdwrfn.cpp"
 $11 = (__ZN7Archive13GetRAROptionsEv($10)|0); //@line 160 "./src/cpp/unrar/rdwrfn.cpp"
 $6 = $11; //@line 160 "./src/cpp/unrar/rdwrfn.cpp"
 $12 = $6; //@line 161 "./src/cpp/unrar/rdwrfn.cpp"
 $13 = ((($12)) + 75172|0); //@line 161 "./src/cpp/unrar/rdwrfn.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 161 "./src/cpp/unrar/rdwrfn.cpp"
 $15 = ($14|0)!=(0); //@line 161 "./src/cpp/unrar/rdwrfn.cpp"
 if ($15) {
  $16 = $6; //@line 163 "./src/cpp/unrar/rdwrfn.cpp"
  $17 = ((($16)) + 75184|0); //@line 163 "./src/cpp/unrar/rdwrfn.cpp"
  $18 = HEAP32[$17>>2]|0; //@line 163 "./src/cpp/unrar/rdwrfn.cpp"
  $19 = ($18|0)!=(0|0); //@line 163 "./src/cpp/unrar/rdwrfn.cpp"
  if ($19) {
   $20 = $6; //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   $21 = ((($20)) + 75184|0); //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   $22 = HEAP32[$21>>2]|0; //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   $23 = $6; //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   $24 = ((($23)) + 75180|0); //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   $25 = HEAP32[$24>>2]|0; //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   $26 = $4; //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   $27 = $26; //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   $28 = $5; //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   $29 = (FUNCTION_TABLE_iiiii[$22 & 511](1,$25,$27,$28)|0); //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   $30 = ($29|0)==(-1); //@line 164 "./src/cpp/unrar/rdwrfn.cpp"
   if ($30) {
    __ZN12ErrorHandler4ExitE8RAR_EXIT(756,255); //@line 165 "./src/cpp/unrar/rdwrfn.cpp"
   }
  }
  $31 = $6; //@line 166 "./src/cpp/unrar/rdwrfn.cpp"
  $32 = ((($31)) + 75192|0); //@line 166 "./src/cpp/unrar/rdwrfn.cpp"
  $33 = HEAP32[$32>>2]|0; //@line 166 "./src/cpp/unrar/rdwrfn.cpp"
  $34 = ($33|0)!=(0|0); //@line 166 "./src/cpp/unrar/rdwrfn.cpp"
  if ($34) {
   $35 = $6; //@line 179 "./src/cpp/unrar/rdwrfn.cpp"
   $36 = ((($35)) + 75192|0); //@line 179 "./src/cpp/unrar/rdwrfn.cpp"
   $37 = HEAP32[$36>>2]|0; //@line 179 "./src/cpp/unrar/rdwrfn.cpp"
   $38 = $4; //@line 179 "./src/cpp/unrar/rdwrfn.cpp"
   $39 = $5; //@line 179 "./src/cpp/unrar/rdwrfn.cpp"
   $40 = (FUNCTION_TABLE_iii[$37 & 511]($38,$39)|0); //@line 179 "./src/cpp/unrar/rdwrfn.cpp"
   $7 = $40; //@line 179 "./src/cpp/unrar/rdwrfn.cpp"
   $41 = $7; //@line 190 "./src/cpp/unrar/rdwrfn.cpp"
   $42 = ($41|0)==(0); //@line 190 "./src/cpp/unrar/rdwrfn.cpp"
   if ($42) {
    __ZN12ErrorHandler4ExitE8RAR_EXIT(756,255); //@line 191 "./src/cpp/unrar/rdwrfn.cpp"
   }
  }
 }
 $43 = $4; //@line 196 "./src/cpp/unrar/rdwrfn.cpp"
 $44 = ((($8)) + 28|0); //@line 196 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$44>>2] = $43; //@line 196 "./src/cpp/unrar/rdwrfn.cpp"
 $45 = $5; //@line 197 "./src/cpp/unrar/rdwrfn.cpp"
 $46 = ((($8)) + 24|0); //@line 197 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$46>>2] = $45; //@line 197 "./src/cpp/unrar/rdwrfn.cpp"
 $47 = ((($8)) + 12|0); //@line 198 "./src/cpp/unrar/rdwrfn.cpp"
 $48 = HEAP8[$47>>0]|0; //@line 198 "./src/cpp/unrar/rdwrfn.cpp"
 $49 = $48&1; //@line 198 "./src/cpp/unrar/rdwrfn.cpp"
 if ($49) {
  $50 = $5; //@line 200 "./src/cpp/unrar/rdwrfn.cpp"
  $51 = ((($8)) + 16|0); //@line 200 "./src/cpp/unrar/rdwrfn.cpp"
  $52 = HEAP32[$51>>2]|0; //@line 200 "./src/cpp/unrar/rdwrfn.cpp"
  $53 = ($50>>>0)<=($52>>>0); //@line 200 "./src/cpp/unrar/rdwrfn.cpp"
  if ($53) {
   $54 = ((($8)) + 20|0); //@line 202 "./src/cpp/unrar/rdwrfn.cpp"
   $55 = HEAP32[$54>>2]|0; //@line 202 "./src/cpp/unrar/rdwrfn.cpp"
   $56 = $4; //@line 202 "./src/cpp/unrar/rdwrfn.cpp"
   $57 = $5; //@line 202 "./src/cpp/unrar/rdwrfn.cpp"
   _memcpy(($55|0),($56|0),($57|0))|0; //@line 202 "./src/cpp/unrar/rdwrfn.cpp"
   $58 = $5; //@line 203 "./src/cpp/unrar/rdwrfn.cpp"
   $59 = ((($8)) + 20|0); //@line 203 "./src/cpp/unrar/rdwrfn.cpp"
   $60 = HEAP32[$59>>2]|0; //@line 203 "./src/cpp/unrar/rdwrfn.cpp"
   $61 = (($60) + ($58)|0); //@line 203 "./src/cpp/unrar/rdwrfn.cpp"
   HEAP32[$59>>2] = $61; //@line 203 "./src/cpp/unrar/rdwrfn.cpp"
   $62 = $5; //@line 204 "./src/cpp/unrar/rdwrfn.cpp"
   $63 = ((($8)) + 16|0); //@line 204 "./src/cpp/unrar/rdwrfn.cpp"
   $64 = HEAP32[$63>>2]|0; //@line 204 "./src/cpp/unrar/rdwrfn.cpp"
   $65 = (($64) - ($62))|0; //@line 204 "./src/cpp/unrar/rdwrfn.cpp"
   HEAP32[$63>>2] = $65; //@line 204 "./src/cpp/unrar/rdwrfn.cpp"
  }
 } else {
  $66 = ((($8)) + 41|0); //@line 208 "./src/cpp/unrar/rdwrfn.cpp"
  $67 = HEAP8[$66>>0]|0; //@line 208 "./src/cpp/unrar/rdwrfn.cpp"
  $68 = $67&1; //@line 208 "./src/cpp/unrar/rdwrfn.cpp"
  if (!($68)) {
   $69 = ((($8)) + 48|0); //@line 209 "./src/cpp/unrar/rdwrfn.cpp"
   $70 = HEAP32[$69>>2]|0; //@line 209 "./src/cpp/unrar/rdwrfn.cpp"
   $71 = $4; //@line 209 "./src/cpp/unrar/rdwrfn.cpp"
   $72 = $5; //@line 209 "./src/cpp/unrar/rdwrfn.cpp"
   (__ZN4File5WriteEPKvj($70,$71,$72)|0); //@line 209 "./src/cpp/unrar/rdwrfn.cpp"
  }
 }
 $73 = $5; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $74 = ((($8)) + 120|0); //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $75 = $74; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $76 = $75; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $77 = HEAP32[$76>>2]|0; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $78 = (($75) + 4)|0; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $79 = $78; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $80 = HEAP32[$79>>2]|0; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $81 = (_i64Add(($77|0),($80|0),($73|0),0)|0); //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $82 = tempRet0; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $83 = $74; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $84 = $83; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$84>>2] = $81; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $85 = (($83) + 4)|0; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $86 = $85; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$86>>2] = $82; //@line 210 "./src/cpp/unrar/rdwrfn.cpp"
 $87 = ((($8)) + 42|0); //@line 211 "./src/cpp/unrar/rdwrfn.cpp"
 $88 = HEAP8[$87>>0]|0; //@line 211 "./src/cpp/unrar/rdwrfn.cpp"
 $89 = $88&1; //@line 211 "./src/cpp/unrar/rdwrfn.cpp"
 if ($89) {
  __ZN11ComprDataIO12ShowUnpWriteEv($8); //@line 213 "./src/cpp/unrar/rdwrfn.cpp"
  __Z4Waitv(); //@line 214 "./src/cpp/unrar/rdwrfn.cpp"
  STACKTOP = sp;return; //@line 215 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $90 = ((($8)) + 168|0); //@line 212 "./src/cpp/unrar/rdwrfn.cpp"
 $91 = $4; //@line 212 "./src/cpp/unrar/rdwrfn.cpp"
 $92 = $5; //@line 212 "./src/cpp/unrar/rdwrfn.cpp"
 __ZN8DataHash6UpdateEPKvj($90,$91,$92); //@line 212 "./src/cpp/unrar/rdwrfn.cpp"
 __ZN11ComprDataIO12ShowUnpWriteEv($8); //@line 213 "./src/cpp/unrar/rdwrfn.cpp"
 __Z4Waitv(); //@line 214 "./src/cpp/unrar/rdwrfn.cpp"
 STACKTOP = sp;return; //@line 215 "./src/cpp/unrar/rdwrfn.cpp"
}
function __ZN11ComprDataIO12ShowUnpWriteEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 253 "./src/cpp/unrar/rdwrfn.cpp"
}
function __ZN11ComprDataIO8SetFilesEP4FileS1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4; //@line 266 "./src/cpp/unrar/rdwrfn.cpp"
 $8 = ($7|0)!=(0|0); //@line 266 "./src/cpp/unrar/rdwrfn.cpp"
 if ($8) {
  $9 = $4; //@line 267 "./src/cpp/unrar/rdwrfn.cpp"
  $10 = ((($6)) + 44|0); //@line 267 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP32[$10>>2] = $9; //@line 267 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $11 = $5; //@line 268 "./src/cpp/unrar/rdwrfn.cpp"
 $12 = ($11|0)!=(0|0); //@line 268 "./src/cpp/unrar/rdwrfn.cpp"
 if ($12) {
  $13 = $5; //@line 269 "./src/cpp/unrar/rdwrfn.cpp"
  $14 = ((($6)) + 48|0); //@line 269 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP32[$14>>2] = $13; //@line 269 "./src/cpp/unrar/rdwrfn.cpp"
 }
 $15 = ((($6)) + 72|0); //@line 270 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$15>>2] = -1; //@line 270 "./src/cpp/unrar/rdwrfn.cpp"
 STACKTOP = sp;return; //@line 271 "./src/cpp/unrar/rdwrfn.cpp"
}
function __ZN11ComprDataIO15GetUnpackedDataEPPhPj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 28|0); //@line 276 "./src/cpp/unrar/rdwrfn.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 276 "./src/cpp/unrar/rdwrfn.cpp"
 $9 = $4; //@line 276 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$9>>2] = $8; //@line 276 "./src/cpp/unrar/rdwrfn.cpp"
 $10 = ((($6)) + 24|0); //@line 277 "./src/cpp/unrar/rdwrfn.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 277 "./src/cpp/unrar/rdwrfn.cpp"
 $12 = $5; //@line 277 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$12>>2] = $11; //@line 277 "./src/cpp/unrar/rdwrfn.cpp"
 STACKTOP = sp;return; //@line 278 "./src/cpp/unrar/rdwrfn.cpp"
}
function __ZN11ComprDataIO13SetEncryptionEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $18 = $1&1;
 $10 = $18;
 $11 = $2;
 $12 = $3;
 $13 = $4;
 $14 = $5;
 $15 = $6;
 $16 = $7;
 $17 = $8;
 $19 = $9;
 $20 = $10; //@line 286 "./src/cpp/unrar/rdwrfn.cpp"
 $21 = $20&1; //@line 286 "./src/cpp/unrar/rdwrfn.cpp"
 if ($21) {
  $22 = ((($19)) + 64|0); //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $23 = HEAP32[$22>>2]|0; //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $24 = $11; //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $25 = $12; //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $26 = $13; //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $27 = $14; //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $28 = $15; //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $29 = $16; //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $30 = $17; //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $31 = (__ZN9CryptData12SetCryptKeysEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_($23,1,$24,$25,$26,$27,$28,$29,$30)|0); //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $32 = ((($19)) + 180|0); //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  $33 = $31&1; //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP8[$32>>0] = $33; //@line 287 "./src/cpp/unrar/rdwrfn.cpp"
  STACKTOP = sp;return; //@line 291 "./src/cpp/unrar/rdwrfn.cpp"
 } else {
  $34 = ((($19)) + 68|0); //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $35 = HEAP32[$34>>2]|0; //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $36 = $11; //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $37 = $12; //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $38 = $13; //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $39 = $14; //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $40 = $15; //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $41 = $16; //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $42 = $17; //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $43 = (__ZN9CryptData12SetCryptKeysEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_($35,0,$36,$37,$38,$39,$40,$41,$42)|0); //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $44 = ((($19)) + 181|0); //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  $45 = $43&1; //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  HEAP8[$44>>0] = $45; //@line 289 "./src/cpp/unrar/rdwrfn.cpp"
  STACKTOP = sp;return; //@line 291 "./src/cpp/unrar/rdwrfn.cpp"
 }
}
function __ZN11ComprDataIO18SetCmt13EncryptionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 181|0); //@line 306 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$3>>0] = 1; //@line 306 "./src/cpp/unrar/rdwrfn.cpp"
 $4 = ((($2)) + 68|0); //@line 307 "./src/cpp/unrar/rdwrfn.cpp"
 $5 = HEAP32[$4>>2]|0; //@line 307 "./src/cpp/unrar/rdwrfn.cpp"
 __ZN9CryptData18SetCmt13EncryptionEv($5); //@line 307 "./src/cpp/unrar/rdwrfn.cpp"
 STACKTOP = sp;return; //@line 308 "./src/cpp/unrar/rdwrfn.cpp"
}
function __ZN11ComprDataIO17SetUnpackToMemoryEPhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 12|0); //@line 316 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP8[$7>>0] = 1; //@line 316 "./src/cpp/unrar/rdwrfn.cpp"
 $8 = $4; //@line 317 "./src/cpp/unrar/rdwrfn.cpp"
 $9 = ((($6)) + 20|0); //@line 317 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$9>>2] = $8; //@line 317 "./src/cpp/unrar/rdwrfn.cpp"
 $10 = $5; //@line 318 "./src/cpp/unrar/rdwrfn.cpp"
 $11 = ((($6)) + 16|0); //@line 318 "./src/cpp/unrar/rdwrfn.cpp"
 HEAP32[$11>>2] = $10; //@line 318 "./src/cpp/unrar/rdwrfn.cpp"
 STACKTOP = sp;return; //@line 319 "./src/cpp/unrar/rdwrfn.cpp"
}
function __ZN10RAROptionsC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 41000|0); //@line 3 "./src/cpp/unrar/options.cpp"
 __ZN11SecPasswordC2Ev($5); //@line 3 "./src/cpp/unrar/options.cpp"
 $6 = ((($4)) + 49776|0); //@line 3 "./src/cpp/unrar/options.cpp"
 __THREW__ = 0;
 invoke_vi(184,($6|0)); //@line 3 "./src/cpp/unrar/options.cpp"
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if ($8) {
  $17 = ___cxa_find_matching_catch_2()|0;
  $18 = tempRet0;
  $2 = $17; //@line 6 "./src/cpp/unrar/options.cpp"
  $3 = $18; //@line 6 "./src/cpp/unrar/options.cpp"
  __ZN11SecPasswordD2Ev($5); //@line 6 "./src/cpp/unrar/options.cpp"
  $21 = $2; //@line 6 "./src/cpp/unrar/options.cpp"
  $22 = $3; //@line 6 "./src/cpp/unrar/options.cpp"
  ___resumeException($21|0);
  // unreachable;
 }
 $9 = ((($4)) + 50344|0); //@line 3 "./src/cpp/unrar/options.cpp"
 __THREW__ = 0;
 invoke_vi(126,($9|0)); //@line 3 "./src/cpp/unrar/options.cpp"
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  $12 = ((($4)) + 50352|0); //@line 3 "./src/cpp/unrar/options.cpp"
  __THREW__ = 0;
  invoke_vi(126,($12|0)); //@line 3 "./src/cpp/unrar/options.cpp"
  $13 = __THREW__; __THREW__ = 0;
  $14 = $13&1;
  if (!($14)) {
   __THREW__ = 0;
   invoke_vi(185,($4|0)); //@line 5 "./src/cpp/unrar/options.cpp"
   $15 = __THREW__; __THREW__ = 0;
   $16 = $15&1;
   if (!($16)) {
    STACKTOP = sp;return; //@line 6 "./src/cpp/unrar/options.cpp"
   }
  }
 }
 $19 = ___cxa_find_matching_catch_2()|0;
 $20 = tempRet0;
 $2 = $19; //@line 6 "./src/cpp/unrar/options.cpp"
 $3 = $20; //@line 6 "./src/cpp/unrar/options.cpp"
 __ZN5ArrayIxED2Ev($6); //@line 6 "./src/cpp/unrar/options.cpp"
 __ZN11SecPasswordD2Ev($5); //@line 6 "./src/cpp/unrar/options.cpp"
 $21 = $2; //@line 6 "./src/cpp/unrar/options.cpp"
 $22 = $3; //@line 6 "./src/cpp/unrar/options.cpp"
 ___resumeException($21|0);
 // unreachable;
}
function __ZN5ArrayIxEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5ArrayIxE9CleanDataEv($2); //@line 44 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 45 "./src/cpp/unrar/array.hpp"
}
function __ZN10RAROptions4InitEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 _memset(($2|0),0,75200)|0; //@line 19 "./src/cpp/unrar/options.cpp"
 $3 = ((($2)) + 12|0); //@line 20 "./src/cpp/unrar/options.cpp"
 HEAP32[$3>>2] = 33554432; //@line 20 "./src/cpp/unrar/options.cpp"
 $4 = ((($2)) + 49720|0); //@line 21 "./src/cpp/unrar/options.cpp"
 HEAP32[$4>>2] = 0; //@line 21 "./src/cpp/unrar/options.cpp"
 $5 = ((($2)) + 49724|0); //@line 22 "./src/cpp/unrar/options.cpp"
 HEAP32[$5>>2] = 3; //@line 22 "./src/cpp/unrar/options.cpp"
 $6 = ((($2)) + 49712|0); //@line 23 "./src/cpp/unrar/options.cpp"
 HEAP32[$6>>2] = 0; //@line 23 "./src/cpp/unrar/options.cpp"
 $7 = ((($2)) + 49804|0); //@line 24 "./src/cpp/unrar/options.cpp"
 HEAP32[$7>>2] = 0; //@line 24 "./src/cpp/unrar/options.cpp"
 $8 = ((($2)) + 58772|0); //@line 25 "./src/cpp/unrar/options.cpp"
 HEAP32[$8>>2] = 4; //@line 25 "./src/cpp/unrar/options.cpp"
 $9 = ((($2)) + 50360|0); //@line 26 "./src/cpp/unrar/options.cpp"
 $10 = $9; //@line 26 "./src/cpp/unrar/options.cpp"
 $11 = $10; //@line 26 "./src/cpp/unrar/options.cpp"
 HEAP32[$11>>2] = 2147483647; //@line 26 "./src/cpp/unrar/options.cpp"
 $12 = (($10) + 4)|0; //@line 26 "./src/cpp/unrar/options.cpp"
 $13 = $12; //@line 26 "./src/cpp/unrar/options.cpp"
 HEAP32[$13>>2] = 2147483647; //@line 26 "./src/cpp/unrar/options.cpp"
 $14 = ((($2)) + 50368|0); //@line 27 "./src/cpp/unrar/options.cpp"
 $15 = $14; //@line 27 "./src/cpp/unrar/options.cpp"
 $16 = $15; //@line 27 "./src/cpp/unrar/options.cpp"
 HEAP32[$16>>2] = 2147483647; //@line 27 "./src/cpp/unrar/options.cpp"
 $17 = (($15) + 4)|0; //@line 27 "./src/cpp/unrar/options.cpp"
 $18 = $17; //@line 27 "./src/cpp/unrar/options.cpp"
 HEAP32[$18>>2] = 2147483647; //@line 27 "./src/cpp/unrar/options.cpp"
 $19 = ((($2)) + 49728|0); //@line 28 "./src/cpp/unrar/options.cpp"
 HEAP32[$19>>2] = 2; //@line 28 "./src/cpp/unrar/options.cpp"
 $20 = ((($2)) + 16400|0); //@line 33 "./src/cpp/unrar/options.cpp"
 HEAP32[$20>>2] = 1; //@line 33 "./src/cpp/unrar/options.cpp"
 STACKTOP = sp;return; //@line 35 "./src/cpp/unrar/options.cpp"
}
function __ZN5ArrayIxED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 67 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 67 "./src/cpp/unrar/array.hpp"
 if (!($4)) {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
 $5 = HEAP32[$2>>2]|0; //@line 68 "./src/cpp/unrar/array.hpp"
 __THREW__ = 0;
 invoke_vi(70,($5|0)); //@line 68 "./src/cpp/unrar/array.hpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_3(0|0)|0;
  $9 = tempRet0;
  ___clang_call_terminate($8); //@line 68 "./src/cpp/unrar/array.hpp"
  // unreachable; //@line 68 "./src/cpp/unrar/array.hpp"
 } else {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
}
function __ZN5ArrayIxE9CleanDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0; //@line 35 "./src/cpp/unrar/array.hpp"
 $3 = ((($2)) + 4|0); //@line 36 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 36 "./src/cpp/unrar/array.hpp"
 $4 = ((($2)) + 8|0); //@line 37 "./src/cpp/unrar/array.hpp"
 HEAP32[$4>>2] = 0; //@line 37 "./src/cpp/unrar/array.hpp"
 $5 = ((($2)) + 12|0); //@line 38 "./src/cpp/unrar/array.hpp"
 HEAP32[$5>>2] = 0; //@line 38 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/array.hpp"
}
function __ZN10RAROptionsD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 _memset(($2|0),0,75200)|0; //@line 13 "./src/cpp/unrar/options.cpp"
 $3 = ((($2)) + 49776|0); //@line 14 "./src/cpp/unrar/options.cpp"
 __ZN5ArrayIxED2Ev($3); //@line 14 "./src/cpp/unrar/options.cpp"
 $4 = ((($2)) + 41000|0); //@line 14 "./src/cpp/unrar/options.cpp"
 __ZN11SecPasswordD2Ev($4); //@line 14 "./src/cpp/unrar/options.cpp"
 STACKTOP = sp;return; //@line 14 "./src/cpp/unrar/options.cpp"
}
function __ZN12ErrorHandler11MemoryErrorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN12ErrorHandler14MemoryErrorMsgEv($2); //@line 23 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler4ExitE8RAR_EXIT($2,8); //@line 24 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 25 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler14MemoryErrorMsgEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __Z5uiMsg14UIMESSAGE_CODE(7); //@line 156 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT($2,8); //@line 157 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 158 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler4ExitE8RAR_EXIT($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __Z7uiAlarm12UIALARM_TYPE(0); //@line 235 "./src/cpp/unrar/errhnd.cpp"
 $5 = $3; //@line 237 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler5ThrowE8RAR_EXIT($4,$5); //@line 237 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 238 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler5ThrowE8RAR_EXIT($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 330 "./src/cpp/unrar/errhnd.cpp"
 $6 = ($5|0)==(255); //@line 330 "./src/cpp/unrar/errhnd.cpp"
 if ($6) {
  $7 = ((($4)) + 8|0); //@line 330 "./src/cpp/unrar/errhnd.cpp"
  $8 = HEAP8[$7>>0]|0; //@line 330 "./src/cpp/unrar/errhnd.cpp"
  $9 = $8&1; //@line 330 "./src/cpp/unrar/errhnd.cpp"
  if (!($9)) {
   STACKTOP = sp;return; //@line 331 "./src/cpp/unrar/errhnd.cpp"
  }
 }
 $10 = $3; //@line 337 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT($4,$10); //@line 337 "./src/cpp/unrar/errhnd.cpp"
 $11 = (___cxa_allocate_exception(4)|0); //@line 338 "./src/cpp/unrar/errhnd.cpp"
 $12 = $3; //@line 338 "./src/cpp/unrar/errhnd.cpp"
 HEAP32[$11>>2] = $12; //@line 338 "./src/cpp/unrar/errhnd.cpp"
 ___cxa_throw(($11|0),(8|0),(0|0)); //@line 338 "./src/cpp/unrar/errhnd.cpp"
 // unreachable; //@line 338 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 243 "./src/cpp/unrar/errhnd.cpp"
 L1: do {
  switch ($5|0) {
  case 255: case 1:  {
   $6 = HEAP32[$4>>2]|0; //@line 247 "./src/cpp/unrar/errhnd.cpp"
   $7 = ($6|0)==(0); //@line 247 "./src/cpp/unrar/errhnd.cpp"
   if ($7) {
    $8 = $3; //@line 248 "./src/cpp/unrar/errhnd.cpp"
    HEAP32[$4>>2] = $8; //@line 248 "./src/cpp/unrar/errhnd.cpp"
   }
   break;
  }
  case 3:  {
   $9 = HEAP32[$4>>2]|0; //@line 251 "./src/cpp/unrar/errhnd.cpp"
   $10 = ($9|0)!=(11); //@line 251 "./src/cpp/unrar/errhnd.cpp"
   if ($10) {
    $11 = $3; //@line 252 "./src/cpp/unrar/errhnd.cpp"
    HEAP32[$4>>2] = $11; //@line 252 "./src/cpp/unrar/errhnd.cpp"
   }
   break;
  }
  case 2:  {
   $12 = HEAP32[$4>>2]|0; //@line 255 "./src/cpp/unrar/errhnd.cpp"
   $13 = ($12|0)==(0); //@line 255 "./src/cpp/unrar/errhnd.cpp"
   if (!($13)) {
    $14 = HEAP32[$4>>2]|0; //@line 255 "./src/cpp/unrar/errhnd.cpp"
    $15 = ($14|0)==(1); //@line 255 "./src/cpp/unrar/errhnd.cpp"
    if (!($15)) {
     break L1;
    }
   }
   HEAP32[$4>>2] = 2; //@line 256 "./src/cpp/unrar/errhnd.cpp"
   break;
  }
  default: {
   $16 = $3; //@line 259 "./src/cpp/unrar/errhnd.cpp"
   HEAP32[$4>>2] = $16; //@line 259 "./src/cpp/unrar/errhnd.cpp"
  }
  }
 } while(0);
 $17 = ((($4)) + 4|0); //@line 262 "./src/cpp/unrar/errhnd.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 262 "./src/cpp/unrar/errhnd.cpp"
 $19 = (($18) + 1)|0; //@line 262 "./src/cpp/unrar/errhnd.cpp"
 HEAP32[$17>>2] = $19; //@line 262 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 263 "./src/cpp/unrar/errhnd.cpp"
}
function __Z5uiMsg14UIMESSAGE_CODE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $2 = sp;
 $1 = $0;
 $3 = $1; //@line 137 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStoreC2E14UIMESSAGE_CODE($2,$3); //@line 137 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStore3MsgEv($2); //@line 138 "./src/cpp/unrar/ui.hpp"
 STACKTOP = sp;return; //@line 139 "./src/cpp/unrar/ui.hpp"
}
function __ZN12ErrorHandler10CloseErrorEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 11|0); //@line 39 "./src/cpp/unrar/errhnd.cpp"
 $6 = HEAP8[$5>>0]|0; //@line 39 "./src/cpp/unrar/errhnd.cpp"
 $7 = $6&1; //@line 39 "./src/cpp/unrar/errhnd.cpp"
 if (!($7)) {
  $8 = $3; //@line 41 "./src/cpp/unrar/errhnd.cpp"
  __Z5uiMsgIPKwEv14UIMESSAGE_CODET_(10,$8); //@line 41 "./src/cpp/unrar/errhnd.cpp"
  __ZN12ErrorHandler9SysErrMsgEv($4); //@line 42 "./src/cpp/unrar/errhnd.cpp"
 }
 __ZN12ErrorHandler4ExitE8RAR_EXIT($4,2); //@line 45 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 47 "./src/cpp/unrar/errhnd.cpp"
}
function __Z5uiMsgIPKwEv14UIMESSAGE_CODET_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 143 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStoreC2E14UIMESSAGE_CODE($4,$5); //@line 143 "./src/cpp/unrar/ui.hpp"
 $6 = $3; //@line 144 "./src/cpp/unrar/ui.hpp"
 (__ZN10uiMsgStorelsEPKw($4,$6)|0); //@line 144 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStore3MsgEv($4); //@line 145 "./src/cpp/unrar/ui.hpp"
 STACKTOP = sp;return; //@line 146 "./src/cpp/unrar/ui.hpp"
}
function __ZN12ErrorHandler9SysErrMsgEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 394 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler9ReadErrorEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN12ErrorHandler4ExitE8RAR_EXIT($4,2); //@line 56 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 58 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler13AskRepeatReadEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 0; //@line 73 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler10WriteErrorEPKwS1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN12ErrorHandler4ExitE8RAR_EXIT($6,5); //@line 83 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 85 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler9SeekErrorEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 11|0); //@line 122 "./src/cpp/unrar/errhnd.cpp"
 $6 = HEAP8[$5>>0]|0; //@line 122 "./src/cpp/unrar/errhnd.cpp"
 $7 = $6&1; //@line 122 "./src/cpp/unrar/errhnd.cpp"
 if (!($7)) {
  $8 = $3; //@line 124 "./src/cpp/unrar/errhnd.cpp"
  __Z5uiMsgIPKwEv14UIMESSAGE_CODET_(11,$8); //@line 124 "./src/cpp/unrar/errhnd.cpp"
  __ZN12ErrorHandler9SysErrMsgEv($4); //@line 125 "./src/cpp/unrar/errhnd.cpp"
 }
 __ZN12ErrorHandler4ExitE8RAR_EXIT($4,2); //@line 128 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 130 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler13GeneralErrMsgEPKwz($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4128|0);
 $4 = sp + 4096|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $2;
 HEAP32[$4>>2] = $varargs; //@line 136 "./src/cpp/unrar/errhnd.cpp"
 $7 = $3; //@line 146 "./src/cpp/unrar/errhnd.cpp"
 (_vswprintf($5,1024,$7,$4)|0); //@line 146 "./src/cpp/unrar/errhnd.cpp"
 __Z5uiMsgIPwEv14UIMESSAGE_CODET_(1,$5); //@line 148 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler9SysErrMsgEv($6); //@line 149 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 151 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler12OpenErrorMsgEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 163 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler12OpenErrorMsgEPKwS1_($4,0,$5); //@line 163 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 164 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler12OpenErrorMsgEPKwS1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4; //@line 169 "./src/cpp/unrar/errhnd.cpp"
 $8 = $5; //@line 169 "./src/cpp/unrar/errhnd.cpp"
 __Z5uiMsgIPKwS1_Ev14UIMESSAGE_CODET_T0_(8,$7,$8); //@line 169 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler9SysErrMsgEv($6); //@line 170 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT($6,6); //@line 171 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 172 "./src/cpp/unrar/errhnd.cpp"
}
function __Z5uiMsgIPKwS1_Ev14UIMESSAGE_CODET_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 150 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStoreC2E14UIMESSAGE_CODE($6,$7); //@line 150 "./src/cpp/unrar/ui.hpp"
 $8 = $4; //@line 151 "./src/cpp/unrar/ui.hpp"
 $9 = (__ZN10uiMsgStorelsEPKw($6,$8)|0); //@line 151 "./src/cpp/unrar/ui.hpp"
 $10 = $5; //@line 151 "./src/cpp/unrar/ui.hpp"
 (__ZN10uiMsgStorelsEPKw($9,$10)|0); //@line 151 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStore3MsgEv($6); //@line 152 "./src/cpp/unrar/ui.hpp"
 STACKTOP = sp;return; //@line 153 "./src/cpp/unrar/ui.hpp"
}
function __ZN12ErrorHandler14CreateErrorMsgEPKwS1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4; //@line 183 "./src/cpp/unrar/errhnd.cpp"
 $8 = $5; //@line 183 "./src/cpp/unrar/errhnd.cpp"
 __Z5uiMsgIPKwS1_Ev14UIMESSAGE_CODET_T0_(9,$7,$8); //@line 183 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler9SysErrMsgEv($6); //@line 184 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT($6,9); //@line 185 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 186 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN12ErrorHandler16UnknownMethodMsgEPKwS1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4; //@line 227 "./src/cpp/unrar/errhnd.cpp"
 $7 = $5; //@line 227 "./src/cpp/unrar/errhnd.cpp"
 __Z5uiMsgIPKwS1_Ev14UIMESSAGE_CODET_T0_(31,$6,$7); //@line 227 "./src/cpp/unrar/errhnd.cpp"
 __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,2); //@line 228 "./src/cpp/unrar/errhnd.cpp"
 STACKTOP = sp;return; //@line 229 "./src/cpp/unrar/errhnd.cpp"
}
function __ZN5RarVMC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN8BitInputC2Eb($2,1); //@line 6 "./src/cpp/unrar/rarvm.cpp"
 $3 = ((($2)) + 16|0); //@line 8 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$3>>2] = 0; //@line 8 "./src/cpp/unrar/rarvm.cpp"
 STACKTOP = sp;return; //@line 9 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN5RarVMD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0); //@line 14 "./src/cpp/unrar/rarvm.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 14 "./src/cpp/unrar/rarvm.cpp"
 $5 = ($4|0)==(0|0); //@line 14 "./src/cpp/unrar/rarvm.cpp"
 if (!($5)) {
  __ZdaPv($4); //@line 14 "./src/cpp/unrar/rarvm.cpp"
 }
 __ZN8BitInputD2Ev($2); //@line 15 "./src/cpp/unrar/rarvm.cpp"
 STACKTOP = sp;return; //@line 15 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN5RarVM4InitEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0); //@line 20 "./src/cpp/unrar/rarvm.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 20 "./src/cpp/unrar/rarvm.cpp"
 $5 = ($4|0)==(0|0); //@line 20 "./src/cpp/unrar/rarvm.cpp"
 if (!($5)) {
  STACKTOP = sp;return; //@line 22 "./src/cpp/unrar/rarvm.cpp"
 }
 $6 = (__Znaj(262148)|0); //@line 21 "./src/cpp/unrar/rarvm.cpp"
 $7 = ((($2)) + 16|0); //@line 21 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$7>>2] = $6; //@line 21 "./src/cpp/unrar/rarvm.cpp"
 STACKTOP = sp;return; //@line 22 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN5RarVM17SetLowEndianValueEPjj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 109 "./src/cpp/unrar/rarvm.cpp"
 $7 = $6&255; //@line 109 "./src/cpp/unrar/rarvm.cpp"
 $8 = $4; //@line 109 "./src/cpp/unrar/rarvm.cpp"
 HEAP8[$8>>0] = $7; //@line 109 "./src/cpp/unrar/rarvm.cpp"
 $9 = $5; //@line 110 "./src/cpp/unrar/rarvm.cpp"
 $10 = $9 >>> 8; //@line 110 "./src/cpp/unrar/rarvm.cpp"
 $11 = $10&255; //@line 110 "./src/cpp/unrar/rarvm.cpp"
 $12 = $4; //@line 110 "./src/cpp/unrar/rarvm.cpp"
 $13 = ((($12)) + 1|0); //@line 110 "./src/cpp/unrar/rarvm.cpp"
 HEAP8[$13>>0] = $11; //@line 110 "./src/cpp/unrar/rarvm.cpp"
 $14 = $5; //@line 111 "./src/cpp/unrar/rarvm.cpp"
 $15 = $14 >>> 16; //@line 111 "./src/cpp/unrar/rarvm.cpp"
 $16 = $15&255; //@line 111 "./src/cpp/unrar/rarvm.cpp"
 $17 = $4; //@line 111 "./src/cpp/unrar/rarvm.cpp"
 $18 = ((($17)) + 2|0); //@line 111 "./src/cpp/unrar/rarvm.cpp"
 HEAP8[$18>>0] = $16; //@line 111 "./src/cpp/unrar/rarvm.cpp"
 $19 = $5; //@line 112 "./src/cpp/unrar/rarvm.cpp"
 $20 = $19 >>> 24; //@line 112 "./src/cpp/unrar/rarvm.cpp"
 $21 = $20&255; //@line 112 "./src/cpp/unrar/rarvm.cpp"
 $22 = $4; //@line 112 "./src/cpp/unrar/rarvm.cpp"
 $23 = ((($22)) + 3|0); //@line 112 "./src/cpp/unrar/rarvm.cpp"
 HEAP8[$23>>0] = $21; //@line 112 "./src/cpp/unrar/rarvm.cpp"
 STACKTOP = sp;return; //@line 116 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN5RarVM7ExecuteEP18VM_PreparedProgram($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $10 = $2;
 $11 = ((($10)) + 20|0); //@line 130 "./src/cpp/unrar/rarvm.cpp"
 $12 = $3; //@line 130 "./src/cpp/unrar/rarvm.cpp"
 $13 = ((($12)) + 56|0); //@line 130 "./src/cpp/unrar/rarvm.cpp"
 ;HEAP32[$11>>2]=HEAP32[$13>>2]|0;HEAP32[$11+4>>2]=HEAP32[$13+4>>2]|0;HEAP32[$11+8>>2]=HEAP32[$13+8>>2]|0;HEAP32[$11+12>>2]=HEAP32[$13+12>>2]|0;HEAP32[$11+16>>2]=HEAP32[$13+16>>2]|0;HEAP32[$11+20>>2]=HEAP32[$13+20>>2]|0;HEAP32[$11+24>>2]=HEAP32[$13+24>>2]|0; //@line 130 "./src/cpp/unrar/rarvm.cpp"
 $14 = $3; //@line 131 "./src/cpp/unrar/rarvm.cpp"
 $15 = ((($14)) + 24|0); //@line 131 "./src/cpp/unrar/rarvm.cpp"
 $16 = (__ZN5ArrayIhE4SizeEv($15)|0); //@line 131 "./src/cpp/unrar/rarvm.cpp"
 $17 = ($16>>>0)<(8192); //@line 131 "./src/cpp/unrar/rarvm.cpp"
 if ($17) {
  $18 = $3; //@line 131 "./src/cpp/unrar/rarvm.cpp"
  $19 = ((($18)) + 24|0); //@line 131 "./src/cpp/unrar/rarvm.cpp"
  $20 = (__ZN5ArrayIhE4SizeEv($19)|0); //@line 131 "./src/cpp/unrar/rarvm.cpp"
  $21 = $20;
 } else {
  $21 = 8192;
 }
 $4 = $21; //@line 131 "./src/cpp/unrar/rarvm.cpp"
 $22 = $4; //@line 132 "./src/cpp/unrar/rarvm.cpp"
 $23 = ($22|0)!=(0); //@line 132 "./src/cpp/unrar/rarvm.cpp"
 if ($23) {
  $24 = ((($10)) + 16|0); //@line 133 "./src/cpp/unrar/rarvm.cpp"
  $25 = HEAP32[$24>>2]|0; //@line 133 "./src/cpp/unrar/rarvm.cpp"
  $26 = ((($25)) + 245760|0); //@line 133 "./src/cpp/unrar/rarvm.cpp"
  $27 = $3; //@line 133 "./src/cpp/unrar/rarvm.cpp"
  $28 = ((($27)) + 24|0); //@line 133 "./src/cpp/unrar/rarvm.cpp"
  $29 = (__ZNK5ArrayIhEixEj($28,0)|0); //@line 133 "./src/cpp/unrar/rarvm.cpp"
  $30 = $4; //@line 133 "./src/cpp/unrar/rarvm.cpp"
  _memcpy(($26|0),($29|0),($30|0))|0; //@line 133 "./src/cpp/unrar/rarvm.cpp"
 }
 $31 = $3; //@line 134 "./src/cpp/unrar/rarvm.cpp"
 $32 = ((($31)) + 40|0); //@line 134 "./src/cpp/unrar/rarvm.cpp"
 $33 = (__ZN5ArrayIhE4SizeEv($32)|0); //@line 134 "./src/cpp/unrar/rarvm.cpp"
 $34 = $4; //@line 134 "./src/cpp/unrar/rarvm.cpp"
 $35 = (8192 - ($34))|0; //@line 134 "./src/cpp/unrar/rarvm.cpp"
 $36 = ($33>>>0)<($35>>>0); //@line 134 "./src/cpp/unrar/rarvm.cpp"
 if ($36) {
  $37 = $3; //@line 134 "./src/cpp/unrar/rarvm.cpp"
  $38 = ((($37)) + 40|0); //@line 134 "./src/cpp/unrar/rarvm.cpp"
  $39 = (__ZN5ArrayIhE4SizeEv($38)|0); //@line 134 "./src/cpp/unrar/rarvm.cpp"
  $42 = $39;
 } else {
  $40 = $4; //@line 134 "./src/cpp/unrar/rarvm.cpp"
  $41 = (8192 - ($40))|0; //@line 134 "./src/cpp/unrar/rarvm.cpp"
  $42 = $41;
 }
 $5 = $42; //@line 134 "./src/cpp/unrar/rarvm.cpp"
 $43 = $5; //@line 135 "./src/cpp/unrar/rarvm.cpp"
 $44 = ($43|0)!=(0); //@line 135 "./src/cpp/unrar/rarvm.cpp"
 if ($44) {
  $45 = ((($10)) + 16|0); //@line 136 "./src/cpp/unrar/rarvm.cpp"
  $46 = HEAP32[$45>>2]|0; //@line 136 "./src/cpp/unrar/rarvm.cpp"
  $47 = ((($46)) + 245760|0); //@line 136 "./src/cpp/unrar/rarvm.cpp"
  $48 = $4; //@line 136 "./src/cpp/unrar/rarvm.cpp"
  $49 = (($47) + ($48)|0); //@line 136 "./src/cpp/unrar/rarvm.cpp"
  $50 = $3; //@line 136 "./src/cpp/unrar/rarvm.cpp"
  $51 = ((($50)) + 40|0); //@line 136 "./src/cpp/unrar/rarvm.cpp"
  $52 = (__ZNK5ArrayIhEixEj($51,0)|0); //@line 136 "./src/cpp/unrar/rarvm.cpp"
  $53 = $5; //@line 136 "./src/cpp/unrar/rarvm.cpp"
  _memcpy(($49|0),($52|0),($53|0))|0; //@line 136 "./src/cpp/unrar/rarvm.cpp"
 }
 $54 = ((($10)) + 20|0); //@line 138 "./src/cpp/unrar/rarvm.cpp"
 $55 = ((($54)) + 28|0); //@line 138 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$55>>2] = 262144; //@line 138 "./src/cpp/unrar/rarvm.cpp"
 $56 = ((($10)) + 52|0); //@line 139 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$56>>2] = 0; //@line 139 "./src/cpp/unrar/rarvm.cpp"
 $57 = $3; //@line 141 "./src/cpp/unrar/rarvm.cpp"
 $58 = ((($57)) + 16|0); //@line 141 "./src/cpp/unrar/rarvm.cpp"
 $59 = HEAP32[$58>>2]|0; //@line 141 "./src/cpp/unrar/rarvm.cpp"
 $60 = ($59|0)!=(0|0); //@line 141 "./src/cpp/unrar/rarvm.cpp"
 $61 = $3;
 if ($60) {
  $62 = ((($61)) + 16|0); //@line 141 "./src/cpp/unrar/rarvm.cpp"
  $63 = HEAP32[$62>>2]|0; //@line 141 "./src/cpp/unrar/rarvm.cpp"
  $65 = $63;
 } else {
  $64 = (__ZNK5ArrayI18VM_PreparedCommandEixEj($61,0)|0); //@line 141 "./src/cpp/unrar/rarvm.cpp"
  $65 = $64;
 }
 $6 = $65; //@line 141 "./src/cpp/unrar/rarvm.cpp"
 $66 = $3; //@line 142 "./src/cpp/unrar/rarvm.cpp"
 $67 = ((($66)) + 20|0); //@line 142 "./src/cpp/unrar/rarvm.cpp"
 $68 = HEAP32[$67>>2]|0; //@line 142 "./src/cpp/unrar/rarvm.cpp"
 $69 = ($68|0)>(0); //@line 142 "./src/cpp/unrar/rarvm.cpp"
 if ($69) {
  $70 = $6; //@line 142 "./src/cpp/unrar/rarvm.cpp"
  $71 = $3; //@line 142 "./src/cpp/unrar/rarvm.cpp"
  $72 = ((($71)) + 20|0); //@line 142 "./src/cpp/unrar/rarvm.cpp"
  $73 = HEAP32[$72>>2]|0; //@line 142 "./src/cpp/unrar/rarvm.cpp"
  $74 = (__ZN5RarVM11ExecuteCodeEP18VM_PreparedCommandj($10,$70,$73)|0); //@line 142 "./src/cpp/unrar/rarvm.cpp"
  if (!($74)) {
   $75 = $6; //@line 145 "./src/cpp/unrar/rarvm.cpp"
   HEAP32[$75>>2] = 22; //@line 145 "./src/cpp/unrar/rarvm.cpp"
  }
 }
 $76 = ((($10)) + 16|0); //@line 147 "./src/cpp/unrar/rarvm.cpp"
 $77 = HEAP32[$76>>2]|0; //@line 147 "./src/cpp/unrar/rarvm.cpp"
 $78 = ((($77)) + 245792|0); //@line 147 "./src/cpp/unrar/rarvm.cpp"
 $79 = (__ZN5RarVM8GetValueEbPj($10,0,$78)|0); //@line 147 "./src/cpp/unrar/rarvm.cpp"
 $80 = $79 & 262143; //@line 147 "./src/cpp/unrar/rarvm.cpp"
 $7 = $80; //@line 147 "./src/cpp/unrar/rarvm.cpp"
 $81 = ((($10)) + 16|0); //@line 148 "./src/cpp/unrar/rarvm.cpp"
 $82 = HEAP32[$81>>2]|0; //@line 148 "./src/cpp/unrar/rarvm.cpp"
 $83 = ((($82)) + 245788|0); //@line 148 "./src/cpp/unrar/rarvm.cpp"
 $84 = (__ZN5RarVM8GetValueEbPj($10,0,$83)|0); //@line 148 "./src/cpp/unrar/rarvm.cpp"
 $85 = $84 & 262143; //@line 148 "./src/cpp/unrar/rarvm.cpp"
 $8 = $85; //@line 148 "./src/cpp/unrar/rarvm.cpp"
 $86 = $7; //@line 149 "./src/cpp/unrar/rarvm.cpp"
 $87 = $8; //@line 149 "./src/cpp/unrar/rarvm.cpp"
 $88 = (($86) + ($87))|0; //@line 149 "./src/cpp/unrar/rarvm.cpp"
 $89 = ($88>>>0)>=(262144); //@line 149 "./src/cpp/unrar/rarvm.cpp"
 if ($89) {
  $8 = 0; //@line 150 "./src/cpp/unrar/rarvm.cpp"
  $7 = 0; //@line 150 "./src/cpp/unrar/rarvm.cpp"
 }
 $90 = ((($10)) + 16|0); //@line 151 "./src/cpp/unrar/rarvm.cpp"
 $91 = HEAP32[$90>>2]|0; //@line 151 "./src/cpp/unrar/rarvm.cpp"
 $92 = $7; //@line 151 "./src/cpp/unrar/rarvm.cpp"
 $93 = (($91) + ($92)|0); //@line 151 "./src/cpp/unrar/rarvm.cpp"
 $94 = $3; //@line 151 "./src/cpp/unrar/rarvm.cpp"
 $95 = ((($94)) + 84|0); //@line 151 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$95>>2] = $93; //@line 151 "./src/cpp/unrar/rarvm.cpp"
 $96 = $8; //@line 152 "./src/cpp/unrar/rarvm.cpp"
 $97 = $3; //@line 152 "./src/cpp/unrar/rarvm.cpp"
 $98 = ((($97)) + 88|0); //@line 152 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$98>>2] = $96; //@line 152 "./src/cpp/unrar/rarvm.cpp"
 $99 = $3; //@line 154 "./src/cpp/unrar/rarvm.cpp"
 $100 = ((($99)) + 24|0); //@line 154 "./src/cpp/unrar/rarvm.cpp"
 __ZN5ArrayIhE5ResetEv($100); //@line 154 "./src/cpp/unrar/rarvm.cpp"
 $101 = ((($10)) + 16|0); //@line 156 "./src/cpp/unrar/rarvm.cpp"
 $102 = HEAP32[$101>>2]|0; //@line 156 "./src/cpp/unrar/rarvm.cpp"
 $103 = ((($102)) + 245808|0); //@line 156 "./src/cpp/unrar/rarvm.cpp"
 $104 = (__ZN5RarVM8GetValueEbPj($10,0,$103)|0); //@line 156 "./src/cpp/unrar/rarvm.cpp"
 $105 = ($104>>>0)<(8128); //@line 156 "./src/cpp/unrar/rarvm.cpp"
 if ($105) {
  $106 = ((($10)) + 16|0); //@line 156 "./src/cpp/unrar/rarvm.cpp"
  $107 = HEAP32[$106>>2]|0; //@line 156 "./src/cpp/unrar/rarvm.cpp"
  $108 = ((($107)) + 245808|0); //@line 156 "./src/cpp/unrar/rarvm.cpp"
  $109 = (__ZN5RarVM8GetValueEbPj($10,0,$108)|0); //@line 156 "./src/cpp/unrar/rarvm.cpp"
  $110 = $109;
 } else {
  $110 = 8128;
 }
 $9 = $110; //@line 156 "./src/cpp/unrar/rarvm.cpp"
 $111 = $9; //@line 157 "./src/cpp/unrar/rarvm.cpp"
 $112 = ($111|0)!=(0); //@line 157 "./src/cpp/unrar/rarvm.cpp"
 if (!($112)) {
  STACKTOP = sp;return; //@line 162 "./src/cpp/unrar/rarvm.cpp"
 }
 $113 = $3; //@line 159 "./src/cpp/unrar/rarvm.cpp"
 $114 = ((($113)) + 24|0); //@line 159 "./src/cpp/unrar/rarvm.cpp"
 $115 = $9; //@line 159 "./src/cpp/unrar/rarvm.cpp"
 $116 = (($115) + 64)|0; //@line 159 "./src/cpp/unrar/rarvm.cpp"
 __ZN5ArrayIhE3AddEj($114,$116); //@line 159 "./src/cpp/unrar/rarvm.cpp"
 $117 = $3; //@line 160 "./src/cpp/unrar/rarvm.cpp"
 $118 = ((($117)) + 24|0); //@line 160 "./src/cpp/unrar/rarvm.cpp"
 $119 = (__ZNK5ArrayIhEixEj($118,0)|0); //@line 160 "./src/cpp/unrar/rarvm.cpp"
 $120 = ((($10)) + 16|0); //@line 160 "./src/cpp/unrar/rarvm.cpp"
 $121 = HEAP32[$120>>2]|0; //@line 160 "./src/cpp/unrar/rarvm.cpp"
 $122 = ((($121)) + 245760|0); //@line 160 "./src/cpp/unrar/rarvm.cpp"
 $123 = $9; //@line 160 "./src/cpp/unrar/rarvm.cpp"
 $124 = (($123) + 64)|0; //@line 160 "./src/cpp/unrar/rarvm.cpp"
 _memcpy(($119|0),($122|0),($124|0))|0; //@line 160 "./src/cpp/unrar/rarvm.cpp"
 STACKTOP = sp;return; //@line 162 "./src/cpp/unrar/rarvm.cpp"
}
function __ZNK5ArrayI18VM_PreparedCommandEixEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 74 "./src/cpp/unrar/array.hpp"
 $6 = $3; //@line 74 "./src/cpp/unrar/array.hpp"
 $7 = (($5) + (($6*40)|0)|0); //@line 74 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($7|0); //@line 74 "./src/cpp/unrar/array.hpp"
}
function __ZN5RarVM11ExecuteCodeEP18VM_PreparedCommandj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp + 20|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $9 = $4;
 $7 = 25000000; //@line 182 "./src/cpp/unrar/rarvm.cpp"
 $10 = $5; //@line 183 "./src/cpp/unrar/rarvm.cpp"
 $8 = $10; //@line 183 "./src/cpp/unrar/rarvm.cpp"
 L1: while(1) {
  $11 = $8; //@line 191 "./src/cpp/unrar/rarvm.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 191 "./src/cpp/unrar/rarvm.cpp"
  switch ($12|0) {
  case 40:  {
   label = 10;
   break L1;
   break;
  }
  case 22:  {
   break;
  }
  default: {
   $48 = $8; //@line 533 "./src/cpp/unrar/rarvm.cpp"
   $49 = ((($48)) + 40|0); //@line 533 "./src/cpp/unrar/rarvm.cpp"
   $8 = $49; //@line 533 "./src/cpp/unrar/rarvm.cpp"
   $50 = $7; //@line 534 "./src/cpp/unrar/rarvm.cpp"
   $51 = (($50) + -1)|0; //@line 534 "./src/cpp/unrar/rarvm.cpp"
   $7 = $51; //@line 534 "./src/cpp/unrar/rarvm.cpp"
   continue L1;
  }
  }
  $13 = ((($9)) + 20|0); //@line 520 "./src/cpp/unrar/rarvm.cpp"
  $14 = ((($13)) + 28|0); //@line 520 "./src/cpp/unrar/rarvm.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 520 "./src/cpp/unrar/rarvm.cpp"
  $16 = ($15>>>0)>=(262144); //@line 520 "./src/cpp/unrar/rarvm.cpp"
  if ($16) {
   label = 4;
   break;
  }
  $17 = ((($9)) + 16|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $18 = HEAP32[$17>>2]|0; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $19 = ((($9)) + 20|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $20 = ((($19)) + 28|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $22 = $21 & 262143; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $23 = (($18) + ($22)|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $24 = (__ZN5RarVM8GetValueEbPj($9,0,$23)|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $25 = $6; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $26 = ($24>>>0)>=($25>>>0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  if ($26) {
   label = 6;
   break;
  }
  $27 = $7; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $28 = (($27) + -1)|0; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $7 = $28; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $29 = ($28|0)<=(0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  if ($29) {
   label = 8;
   break;
  }
  $30 = $5; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $31 = ((($9)) + 16|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $32 = HEAP32[$31>>2]|0; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $33 = ((($9)) + 20|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $34 = ((($33)) + 28|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $35 = HEAP32[$34>>2]|0; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $36 = $35 & 262143; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $37 = (($32) + ($36)|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $38 = (__ZN5RarVM8GetValueEbPj($9,0,$37)|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $39 = (($30) + (($38*40)|0)|0); //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $8 = $39; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $40 = ((($9)) + 20|0); //@line 523 "./src/cpp/unrar/rarvm.cpp"
  $41 = ((($40)) + 28|0); //@line 523 "./src/cpp/unrar/rarvm.cpp"
  $42 = HEAP32[$41>>2]|0; //@line 523 "./src/cpp/unrar/rarvm.cpp"
  $43 = (($42) + 4)|0; //@line 523 "./src/cpp/unrar/rarvm.cpp"
  HEAP32[$41>>2] = $43; //@line 523 "./src/cpp/unrar/rarvm.cpp"
 }
 if ((label|0) == 4) {
  $$expand_i1_val = 1; //@line 521 "./src/cpp/unrar/rarvm.cpp"
  HEAP8[$3>>0] = $$expand_i1_val; //@line 521 "./src/cpp/unrar/rarvm.cpp"
  $$pre_trunc = HEAP8[$3>>0]|0; //@line 536 "./src/cpp/unrar/rarvm.cpp"
  $52 = $$pre_trunc&1; //@line 536 "./src/cpp/unrar/rarvm.cpp"
  STACKTOP = sp;return ($52|0); //@line 536 "./src/cpp/unrar/rarvm.cpp"
 }
 else if ((label|0) == 6) {
  $$expand_i1_val2 = 1; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  HEAP8[$3>>0] = $$expand_i1_val2; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $$pre_trunc = HEAP8[$3>>0]|0; //@line 536 "./src/cpp/unrar/rarvm.cpp"
  $52 = $$pre_trunc&1; //@line 536 "./src/cpp/unrar/rarvm.cpp"
  STACKTOP = sp;return ($52|0); //@line 536 "./src/cpp/unrar/rarvm.cpp"
 }
 else if ((label|0) == 8) {
  $$expand_i1_val4 = 0; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  HEAP8[$3>>0] = $$expand_i1_val4; //@line 522 "./src/cpp/unrar/rarvm.cpp"
  $$pre_trunc = HEAP8[$3>>0]|0; //@line 536 "./src/cpp/unrar/rarvm.cpp"
  $52 = $$pre_trunc&1; //@line 536 "./src/cpp/unrar/rarvm.cpp"
  STACKTOP = sp;return ($52|0); //@line 536 "./src/cpp/unrar/rarvm.cpp"
 }
 else if ((label|0) == 10) {
  $44 = $8; //@line 527 "./src/cpp/unrar/rarvm.cpp"
  $45 = ((($44)) + 8|0); //@line 527 "./src/cpp/unrar/rarvm.cpp"
  $46 = ((($45)) + 4|0); //@line 527 "./src/cpp/unrar/rarvm.cpp"
  $47 = HEAP32[$46>>2]|0; //@line 527 "./src/cpp/unrar/rarvm.cpp"
  __ZN5RarVM21ExecuteStandardFilterE18VM_StandardFilters($9,$47); //@line 527 "./src/cpp/unrar/rarvm.cpp"
  $$expand_i1_val6 = 1; //@line 528 "./src/cpp/unrar/rarvm.cpp"
  HEAP8[$3>>0] = $$expand_i1_val6; //@line 528 "./src/cpp/unrar/rarvm.cpp"
  $$pre_trunc = HEAP8[$3>>0]|0; //@line 536 "./src/cpp/unrar/rarvm.cpp"
  $52 = $$pre_trunc&1; //@line 536 "./src/cpp/unrar/rarvm.cpp"
  STACKTOP = sp;return ($52|0); //@line 536 "./src/cpp/unrar/rarvm.cpp"
 }
 return (0)|0;
}
function __ZN5RarVM8GetValueEbPj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $8 = $1&1;
 $5 = $8;
 $6 = $2;
 $9 = $4;
 $10 = $5; //@line 34 "./src/cpp/unrar/rarvm.cpp"
 $11 = $10&1; //@line 34 "./src/cpp/unrar/rarvm.cpp"
 $12 = $6;
 if ($11) {
  $13 = HEAP8[$12>>0]|0; //@line 42 "./src/cpp/unrar/rarvm.cpp"
  $14 = $13&255; //@line 42 "./src/cpp/unrar/rarvm.cpp"
  $3 = $14; //@line 42 "./src/cpp/unrar/rarvm.cpp"
  $47 = $3; //@line 59 "./src/cpp/unrar/rarvm.cpp"
  STACKTOP = sp;return ($47|0); //@line 59 "./src/cpp/unrar/rarvm.cpp"
 }
 $15 = ((($9)) + 16|0); //@line 48 "./src/cpp/unrar/rarvm.cpp"
 $16 = HEAP32[$15>>2]|0; //@line 48 "./src/cpp/unrar/rarvm.cpp"
 $17 = ($12>>>0)>=($16>>>0); //@line 48 "./src/cpp/unrar/rarvm.cpp"
 if ($17) {
  $18 = $6; //@line 48 "./src/cpp/unrar/rarvm.cpp"
  $19 = ((($9)) + 16|0); //@line 48 "./src/cpp/unrar/rarvm.cpp"
  $20 = HEAP32[$19>>2]|0; //@line 48 "./src/cpp/unrar/rarvm.cpp"
  $21 = ((($20)) + 262144|0); //@line 48 "./src/cpp/unrar/rarvm.cpp"
  $22 = ($18>>>0)<($21>>>0); //@line 48 "./src/cpp/unrar/rarvm.cpp"
  if ($22) {
   $23 = $6; //@line 50 "./src/cpp/unrar/rarvm.cpp"
   $7 = $23; //@line 50 "./src/cpp/unrar/rarvm.cpp"
   $24 = $7; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $25 = HEAP8[$24>>0]|0; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $26 = $25&255; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $27 = $7; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $28 = ((($27)) + 1|0); //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $29 = HEAP8[$28>>0]|0; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $30 = $29&255; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $31 = $30 << 8; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $32 = $26 | $31; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $33 = $7; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $34 = ((($33)) + 2|0); //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $35 = HEAP8[$34>>0]|0; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $36 = $35&255; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $37 = $36 << 16; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $38 = $32 | $37; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $39 = $7; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $40 = ((($39)) + 3|0); //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $41 = HEAP8[$40>>0]|0; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $42 = $41&255; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $43 = $42 << 24; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $44 = $38 | $43; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $3 = $44; //@line 51 "./src/cpp/unrar/rarvm.cpp"
   $47 = $3; //@line 59 "./src/cpp/unrar/rarvm.cpp"
   STACKTOP = sp;return ($47|0); //@line 59 "./src/cpp/unrar/rarvm.cpp"
  }
 }
 $45 = $6; //@line 54 "./src/cpp/unrar/rarvm.cpp"
 $46 = HEAP32[$45>>2]|0; //@line 54 "./src/cpp/unrar/rarvm.cpp"
 $3 = $46; //@line 54 "./src/cpp/unrar/rarvm.cpp"
 $47 = $3; //@line 59 "./src/cpp/unrar/rarvm.cpp"
 STACKTOP = sp;return ($47|0); //@line 59 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN5RarVM21ExecuteStandardFilterE18VM_StandardFilters($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $57 = sp + 56|0;
 $2 = $0;
 $3 = $1;
 $72 = $2;
 $73 = $3; //@line 876 "./src/cpp/unrar/rarvm.cpp"
 switch ($73|0) {
 case 2: case 1:  {
  $74 = ((($72)) + 16|0); //@line 881 "./src/cpp/unrar/rarvm.cpp"
  $75 = HEAP32[$74>>2]|0; //@line 881 "./src/cpp/unrar/rarvm.cpp"
  $4 = $75; //@line 881 "./src/cpp/unrar/rarvm.cpp"
  $76 = ((($72)) + 20|0); //@line 882 "./src/cpp/unrar/rarvm.cpp"
  $77 = ((($76)) + 16|0); //@line 882 "./src/cpp/unrar/rarvm.cpp"
  $78 = HEAP32[$77>>2]|0; //@line 882 "./src/cpp/unrar/rarvm.cpp"
  $5 = $78; //@line 882 "./src/cpp/unrar/rarvm.cpp"
  $79 = ((($72)) + 20|0); //@line 883 "./src/cpp/unrar/rarvm.cpp"
  $80 = ((($79)) + 24|0); //@line 883 "./src/cpp/unrar/rarvm.cpp"
  $81 = HEAP32[$80>>2]|0; //@line 883 "./src/cpp/unrar/rarvm.cpp"
  $6 = $81; //@line 883 "./src/cpp/unrar/rarvm.cpp"
  $82 = $5; //@line 885 "./src/cpp/unrar/rarvm.cpp"
  $83 = ($82>>>0)>=(245760); //@line 885 "./src/cpp/unrar/rarvm.cpp"
  $84 = $5; //@line 885 "./src/cpp/unrar/rarvm.cpp"
  $85 = ($84|0)<(4); //@line 885 "./src/cpp/unrar/rarvm.cpp"
  $or$cond = $83 | $85; //@line 885 "./src/cpp/unrar/rarvm.cpp"
  if ($or$cond) {
   STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
  }
  $7 = 16777216; //@line 888 "./src/cpp/unrar/rarvm.cpp"
  $86 = $3; //@line 889 "./src/cpp/unrar/rarvm.cpp"
  $87 = ($86|0)==(2); //@line 889 "./src/cpp/unrar/rarvm.cpp"
  $88 = $87 ? 233 : 232; //@line 889 "./src/cpp/unrar/rarvm.cpp"
  $89 = $88&255; //@line 889 "./src/cpp/unrar/rarvm.cpp"
  $8 = $89; //@line 889 "./src/cpp/unrar/rarvm.cpp"
  $9 = 0; //@line 890 "./src/cpp/unrar/rarvm.cpp"
  while(1) {
   $90 = $9; //@line 890 "./src/cpp/unrar/rarvm.cpp"
   $91 = $5; //@line 890 "./src/cpp/unrar/rarvm.cpp"
   $92 = (($91) - 4)|0; //@line 890 "./src/cpp/unrar/rarvm.cpp"
   $93 = ($90|0)<($92|0); //@line 890 "./src/cpp/unrar/rarvm.cpp"
   if (!($93)) {
    break;
   }
   $94 = $4; //@line 892 "./src/cpp/unrar/rarvm.cpp"
   $95 = ((($94)) + 1|0); //@line 892 "./src/cpp/unrar/rarvm.cpp"
   $4 = $95; //@line 892 "./src/cpp/unrar/rarvm.cpp"
   $96 = HEAP8[$94>>0]|0; //@line 892 "./src/cpp/unrar/rarvm.cpp"
   $10 = $96; //@line 892 "./src/cpp/unrar/rarvm.cpp"
   $97 = $9; //@line 893 "./src/cpp/unrar/rarvm.cpp"
   $98 = (($97) + 1)|0; //@line 893 "./src/cpp/unrar/rarvm.cpp"
   $9 = $98; //@line 893 "./src/cpp/unrar/rarvm.cpp"
   $99 = $10; //@line 894 "./src/cpp/unrar/rarvm.cpp"
   $100 = $99&255; //@line 894 "./src/cpp/unrar/rarvm.cpp"
   $101 = ($100|0)==(232); //@line 894 "./src/cpp/unrar/rarvm.cpp"
   if (!($101)) {
    $102 = $10; //@line 894 "./src/cpp/unrar/rarvm.cpp"
    $103 = $102&255; //@line 894 "./src/cpp/unrar/rarvm.cpp"
    $104 = $8; //@line 894 "./src/cpp/unrar/rarvm.cpp"
    $105 = $104&255; //@line 894 "./src/cpp/unrar/rarvm.cpp"
    $106 = ($103|0)==($105|0); //@line 894 "./src/cpp/unrar/rarvm.cpp"
    if (!($106)) {
     continue;
    }
   }
   $107 = $9; //@line 897 "./src/cpp/unrar/rarvm.cpp"
   $108 = $6; //@line 897 "./src/cpp/unrar/rarvm.cpp"
   $109 = (($107) + ($108))|0; //@line 897 "./src/cpp/unrar/rarvm.cpp"
   $11 = $109; //@line 897 "./src/cpp/unrar/rarvm.cpp"
   $110 = $4; //@line 898 "./src/cpp/unrar/rarvm.cpp"
   $111 = (__ZN5RarVM8GetValueEbPj($72,0,$110)|0); //@line 898 "./src/cpp/unrar/rarvm.cpp"
   $12 = $111; //@line 898 "./src/cpp/unrar/rarvm.cpp"
   $112 = $12; //@line 899 "./src/cpp/unrar/rarvm.cpp"
   $113 = ($112|0)<(0); //@line 899 "./src/cpp/unrar/rarvm.cpp"
   $114 = $12;
   if ($113) {
    $115 = $11; //@line 901 "./src/cpp/unrar/rarvm.cpp"
    $116 = (($114) + ($115))|0; //@line 901 "./src/cpp/unrar/rarvm.cpp"
    $117 = ($116|0)>=(0); //@line 901 "./src/cpp/unrar/rarvm.cpp"
    if ($117) {
     $118 = $4; //@line 902 "./src/cpp/unrar/rarvm.cpp"
     $119 = $12; //@line 902 "./src/cpp/unrar/rarvm.cpp"
     $120 = (($119) + 16777216)|0; //@line 902 "./src/cpp/unrar/rarvm.cpp"
     __ZN5RarVM8SetValueEbPjj($72,0,$118,$120); //@line 902 "./src/cpp/unrar/rarvm.cpp"
    }
   } else {
    $121 = ($114|0)<(16777216); //@line 905 "./src/cpp/unrar/rarvm.cpp"
    if ($121) {
     $122 = $4; //@line 906 "./src/cpp/unrar/rarvm.cpp"
     $123 = $12; //@line 906 "./src/cpp/unrar/rarvm.cpp"
     $124 = $11; //@line 906 "./src/cpp/unrar/rarvm.cpp"
     $125 = (($123) - ($124))|0; //@line 906 "./src/cpp/unrar/rarvm.cpp"
     __ZN5RarVM8SetValueEbPjj($72,0,$122,$125); //@line 906 "./src/cpp/unrar/rarvm.cpp"
    }
   }
   $126 = $4; //@line 919 "./src/cpp/unrar/rarvm.cpp"
   $127 = ((($126)) + 4|0); //@line 919 "./src/cpp/unrar/rarvm.cpp"
   $4 = $127; //@line 919 "./src/cpp/unrar/rarvm.cpp"
   $128 = $9; //@line 920 "./src/cpp/unrar/rarvm.cpp"
   $129 = (($128) + 4)|0; //@line 920 "./src/cpp/unrar/rarvm.cpp"
   $9 = $129; //@line 920 "./src/cpp/unrar/rarvm.cpp"
  }
  STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
  break;
 }
 case 3:  {
  $130 = ((($72)) + 16|0); //@line 927 "./src/cpp/unrar/rarvm.cpp"
  $131 = HEAP32[$130>>2]|0; //@line 927 "./src/cpp/unrar/rarvm.cpp"
  $13 = $131; //@line 927 "./src/cpp/unrar/rarvm.cpp"
  $132 = ((($72)) + 20|0); //@line 928 "./src/cpp/unrar/rarvm.cpp"
  $133 = ((($132)) + 16|0); //@line 928 "./src/cpp/unrar/rarvm.cpp"
  $134 = HEAP32[$133>>2]|0; //@line 928 "./src/cpp/unrar/rarvm.cpp"
  $14 = $134; //@line 928 "./src/cpp/unrar/rarvm.cpp"
  $135 = ((($72)) + 20|0); //@line 929 "./src/cpp/unrar/rarvm.cpp"
  $136 = ((($135)) + 24|0); //@line 929 "./src/cpp/unrar/rarvm.cpp"
  $137 = HEAP32[$136>>2]|0; //@line 929 "./src/cpp/unrar/rarvm.cpp"
  $15 = $137; //@line 929 "./src/cpp/unrar/rarvm.cpp"
  $138 = $14; //@line 931 "./src/cpp/unrar/rarvm.cpp"
  $139 = ($138>>>0)>=(245760); //@line 931 "./src/cpp/unrar/rarvm.cpp"
  $140 = $14; //@line 931 "./src/cpp/unrar/rarvm.cpp"
  $141 = ($140|0)<(21); //@line 931 "./src/cpp/unrar/rarvm.cpp"
  $or$cond3 = $139 | $141; //@line 931 "./src/cpp/unrar/rarvm.cpp"
  if ($or$cond3) {
   STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
  }
  $16 = 0; //@line 934 "./src/cpp/unrar/rarvm.cpp"
  $142 = $15; //@line 936 "./src/cpp/unrar/rarvm.cpp"
  $143 = $142 >>> 4; //@line 936 "./src/cpp/unrar/rarvm.cpp"
  $15 = $143; //@line 936 "./src/cpp/unrar/rarvm.cpp"
  while(1) {
   $144 = $16; //@line 938 "./src/cpp/unrar/rarvm.cpp"
   $145 = $14; //@line 938 "./src/cpp/unrar/rarvm.cpp"
   $146 = (($145) - 21)|0; //@line 938 "./src/cpp/unrar/rarvm.cpp"
   $147 = ($144|0)<($146|0); //@line 938 "./src/cpp/unrar/rarvm.cpp"
   if (!($147)) {
    break;
   }
   $148 = $13; //@line 940 "./src/cpp/unrar/rarvm.cpp"
   $149 = HEAP8[$148>>0]|0; //@line 940 "./src/cpp/unrar/rarvm.cpp"
   $150 = $149&255; //@line 940 "./src/cpp/unrar/rarvm.cpp"
   $151 = $150 & 31; //@line 940 "./src/cpp/unrar/rarvm.cpp"
   $152 = (($151) - 16)|0; //@line 940 "./src/cpp/unrar/rarvm.cpp"
   $17 = $152; //@line 940 "./src/cpp/unrar/rarvm.cpp"
   $153 = $17; //@line 941 "./src/cpp/unrar/rarvm.cpp"
   $154 = ($153|0)>=(0); //@line 941 "./src/cpp/unrar/rarvm.cpp"
   L26: do {
    if ($154) {
     $155 = $17; //@line 944 "./src/cpp/unrar/rarvm.cpp"
     $156 = (5135 + ($155)|0); //@line 944 "./src/cpp/unrar/rarvm.cpp"
     $157 = HEAP8[$156>>0]|0; //@line 944 "./src/cpp/unrar/rarvm.cpp"
     $18 = $157; //@line 944 "./src/cpp/unrar/rarvm.cpp"
     $158 = $18; //@line 945 "./src/cpp/unrar/rarvm.cpp"
     $159 = $158&255; //@line 945 "./src/cpp/unrar/rarvm.cpp"
     $160 = ($159|0)!=(0); //@line 945 "./src/cpp/unrar/rarvm.cpp"
     if ($160) {
      $19 = 0; //@line 946 "./src/cpp/unrar/rarvm.cpp"
      while(1) {
       $161 = $19; //@line 946 "./src/cpp/unrar/rarvm.cpp"
       $162 = ($161|0)<=(2); //@line 946 "./src/cpp/unrar/rarvm.cpp"
       if (!($162)) {
        break L26;
       }
       $163 = $18; //@line 947 "./src/cpp/unrar/rarvm.cpp"
       $164 = $163&255; //@line 947 "./src/cpp/unrar/rarvm.cpp"
       $165 = $19; //@line 947 "./src/cpp/unrar/rarvm.cpp"
       $166 = 1 << $165; //@line 947 "./src/cpp/unrar/rarvm.cpp"
       $167 = $164 & $166; //@line 947 "./src/cpp/unrar/rarvm.cpp"
       $168 = ($167|0)!=(0); //@line 947 "./src/cpp/unrar/rarvm.cpp"
       if ($168) {
        $169 = $19; //@line 949 "./src/cpp/unrar/rarvm.cpp"
        $170 = ($169*41)|0; //@line 949 "./src/cpp/unrar/rarvm.cpp"
        $171 = (($170) + 5)|0; //@line 949 "./src/cpp/unrar/rarvm.cpp"
        $20 = $171; //@line 949 "./src/cpp/unrar/rarvm.cpp"
        $172 = $13; //@line 950 "./src/cpp/unrar/rarvm.cpp"
        $173 = $20; //@line 950 "./src/cpp/unrar/rarvm.cpp"
        $174 = (($173) + 37)|0; //@line 950 "./src/cpp/unrar/rarvm.cpp"
        $175 = (__ZN5RarVM21FilterItanium_GetBitsEPhii($72,$172,$174,4)|0); //@line 950 "./src/cpp/unrar/rarvm.cpp"
        $21 = $175; //@line 950 "./src/cpp/unrar/rarvm.cpp"
        $176 = $21; //@line 951 "./src/cpp/unrar/rarvm.cpp"
        $177 = ($176|0)==(5); //@line 951 "./src/cpp/unrar/rarvm.cpp"
        if ($177) {
         $178 = $13; //@line 953 "./src/cpp/unrar/rarvm.cpp"
         $179 = $20; //@line 953 "./src/cpp/unrar/rarvm.cpp"
         $180 = (($179) + 13)|0; //@line 953 "./src/cpp/unrar/rarvm.cpp"
         $181 = (__ZN5RarVM21FilterItanium_GetBitsEPhii($72,$178,$180,20)|0); //@line 953 "./src/cpp/unrar/rarvm.cpp"
         $22 = $181; //@line 953 "./src/cpp/unrar/rarvm.cpp"
         $182 = $13; //@line 954 "./src/cpp/unrar/rarvm.cpp"
         $183 = $22; //@line 954 "./src/cpp/unrar/rarvm.cpp"
         $184 = $15; //@line 954 "./src/cpp/unrar/rarvm.cpp"
         $185 = (($183) - ($184))|0; //@line 954 "./src/cpp/unrar/rarvm.cpp"
         $186 = $185 & 1048575; //@line 954 "./src/cpp/unrar/rarvm.cpp"
         $187 = $20; //@line 954 "./src/cpp/unrar/rarvm.cpp"
         $188 = (($187) + 13)|0; //@line 954 "./src/cpp/unrar/rarvm.cpp"
         __ZN5RarVM21FilterItanium_SetBitsEPhjii($72,$182,$186,$188,20); //@line 954 "./src/cpp/unrar/rarvm.cpp"
        }
       }
       $189 = $19; //@line 946 "./src/cpp/unrar/rarvm.cpp"
       $190 = (($189) + 1)|0; //@line 946 "./src/cpp/unrar/rarvm.cpp"
       $19 = $190; //@line 946 "./src/cpp/unrar/rarvm.cpp"
      }
     }
    }
   } while(0);
   $191 = $13; //@line 958 "./src/cpp/unrar/rarvm.cpp"
   $192 = ((($191)) + 16|0); //@line 958 "./src/cpp/unrar/rarvm.cpp"
   $13 = $192; //@line 958 "./src/cpp/unrar/rarvm.cpp"
   $193 = $16; //@line 959 "./src/cpp/unrar/rarvm.cpp"
   $194 = (($193) + 16)|0; //@line 959 "./src/cpp/unrar/rarvm.cpp"
   $16 = $194; //@line 959 "./src/cpp/unrar/rarvm.cpp"
   $195 = $15; //@line 960 "./src/cpp/unrar/rarvm.cpp"
   $196 = (($195) + 1)|0; //@line 960 "./src/cpp/unrar/rarvm.cpp"
   $15 = $196; //@line 960 "./src/cpp/unrar/rarvm.cpp"
  }
  STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
  break;
 }
 case 6:  {
  $197 = ((($72)) + 20|0); //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $198 = ((($197)) + 16|0); //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $199 = HEAP32[$198>>2]|0; //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $23 = $199; //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $200 = ((($72)) + 20|0); //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $201 = HEAP32[$200>>2]|0; //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $24 = $201; //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $25 = 0; //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $202 = $23; //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $203 = $202<<1; //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $26 = $203; //@line 966 "./src/cpp/unrar/rarvm.cpp"
  $204 = ((($72)) + 16|0); //@line 967 "./src/cpp/unrar/rarvm.cpp"
  $205 = HEAP32[$204>>2]|0; //@line 967 "./src/cpp/unrar/rarvm.cpp"
  $206 = ((($205)) + 245792|0); //@line 967 "./src/cpp/unrar/rarvm.cpp"
  $207 = $23; //@line 967 "./src/cpp/unrar/rarvm.cpp"
  __ZN5RarVM8SetValueEbPjj($72,0,$206,$207); //@line 967 "./src/cpp/unrar/rarvm.cpp"
  $208 = $23; //@line 968 "./src/cpp/unrar/rarvm.cpp"
  $209 = ($208>>>0)>=(122880); //@line 968 "./src/cpp/unrar/rarvm.cpp"
  if ($209) {
   STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
  }
  $27 = 0; //@line 973 "./src/cpp/unrar/rarvm.cpp"
  while(1) {
   $210 = $27; //@line 973 "./src/cpp/unrar/rarvm.cpp"
   $211 = $24; //@line 973 "./src/cpp/unrar/rarvm.cpp"
   $212 = ($210|0)<($211|0); //@line 973 "./src/cpp/unrar/rarvm.cpp"
   if (!($212)) {
    break;
   }
   $28 = 0; //@line 975 "./src/cpp/unrar/rarvm.cpp"
   $213 = $23; //@line 976 "./src/cpp/unrar/rarvm.cpp"
   $214 = $27; //@line 976 "./src/cpp/unrar/rarvm.cpp"
   $215 = (($213) + ($214))|0; //@line 976 "./src/cpp/unrar/rarvm.cpp"
   $29 = $215; //@line 976 "./src/cpp/unrar/rarvm.cpp"
   while(1) {
    $216 = $29; //@line 976 "./src/cpp/unrar/rarvm.cpp"
    $217 = $26; //@line 976 "./src/cpp/unrar/rarvm.cpp"
    $218 = ($216|0)<($217|0); //@line 976 "./src/cpp/unrar/rarvm.cpp"
    if (!($218)) {
     break;
    }
    $219 = ((($72)) + 16|0); //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $220 = HEAP32[$219>>2]|0; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $221 = $25; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $222 = (($221) + 1)|0; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $25 = $222; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $223 = (($220) + ($221)|0); //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $224 = HEAP8[$223>>0]|0; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $225 = $224&255; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $226 = $28; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $227 = $226&255; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $228 = (($227) - ($225))|0; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $229 = $228&255; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $28 = $229; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $230 = ((($72)) + 16|0); //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $231 = HEAP32[$230>>2]|0; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $232 = $29; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $233 = (($231) + ($232)|0); //@line 977 "./src/cpp/unrar/rarvm.cpp"
    HEAP8[$233>>0] = $229; //@line 977 "./src/cpp/unrar/rarvm.cpp"
    $234 = $24; //@line 976 "./src/cpp/unrar/rarvm.cpp"
    $235 = $29; //@line 976 "./src/cpp/unrar/rarvm.cpp"
    $236 = (($235) + ($234))|0; //@line 976 "./src/cpp/unrar/rarvm.cpp"
    $29 = $236; //@line 976 "./src/cpp/unrar/rarvm.cpp"
   }
   $237 = $27; //@line 973 "./src/cpp/unrar/rarvm.cpp"
   $238 = (($237) + 1)|0; //@line 973 "./src/cpp/unrar/rarvm.cpp"
   $27 = $238; //@line 973 "./src/cpp/unrar/rarvm.cpp"
  }
  STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
  break;
 }
 case 4:  {
  $239 = ((($72)) + 20|0); //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $240 = ((($239)) + 16|0); //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $241 = HEAP32[$240>>2]|0; //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $30 = $241; //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $242 = ((($72)) + 20|0); //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $243 = HEAP32[$242>>2]|0; //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $244 = (($243) - 3)|0; //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $31 = $244; //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $245 = ((($72)) + 20|0); //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $246 = ((($245)) + 4|0); //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $247 = HEAP32[$246>>2]|0; //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $32 = $247; //@line 983 "./src/cpp/unrar/rarvm.cpp"
  $248 = ((($72)) + 16|0); //@line 984 "./src/cpp/unrar/rarvm.cpp"
  $249 = HEAP32[$248>>2]|0; //@line 984 "./src/cpp/unrar/rarvm.cpp"
  $33 = $249; //@line 984 "./src/cpp/unrar/rarvm.cpp"
  $250 = $33; //@line 984 "./src/cpp/unrar/rarvm.cpp"
  $251 = $30; //@line 984 "./src/cpp/unrar/rarvm.cpp"
  $252 = (($250) + ($251)|0); //@line 984 "./src/cpp/unrar/rarvm.cpp"
  $34 = $252; //@line 984 "./src/cpp/unrar/rarvm.cpp"
  $35 = 3; //@line 985 "./src/cpp/unrar/rarvm.cpp"
  $253 = ((($72)) + 16|0); //@line 986 "./src/cpp/unrar/rarvm.cpp"
  $254 = HEAP32[$253>>2]|0; //@line 986 "./src/cpp/unrar/rarvm.cpp"
  $255 = ((($254)) + 245792|0); //@line 986 "./src/cpp/unrar/rarvm.cpp"
  $256 = $30; //@line 986 "./src/cpp/unrar/rarvm.cpp"
  __ZN5RarVM8SetValueEbPjj($72,0,$255,$256); //@line 986 "./src/cpp/unrar/rarvm.cpp"
  $257 = $30; //@line 987 "./src/cpp/unrar/rarvm.cpp"
  $258 = ($257>>>0)>=(122880); //@line 987 "./src/cpp/unrar/rarvm.cpp"
  $259 = $31; //@line 987 "./src/cpp/unrar/rarvm.cpp"
  $260 = ($259|0)<(0); //@line 987 "./src/cpp/unrar/rarvm.cpp"
  $or$cond5 = $258 | $260; //@line 987 "./src/cpp/unrar/rarvm.cpp"
  $261 = $32; //@line 987 "./src/cpp/unrar/rarvm.cpp"
  $262 = ($261|0)<(0); //@line 987 "./src/cpp/unrar/rarvm.cpp"
  $or$cond7 = $or$cond5 | $262; //@line 987 "./src/cpp/unrar/rarvm.cpp"
  if ($or$cond7) {
   STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
  }
  $36 = 0; //@line 989 "./src/cpp/unrar/rarvm.cpp"
  while(1) {
   $263 = $36; //@line 989 "./src/cpp/unrar/rarvm.cpp"
   $264 = ($263|0)<(3); //@line 989 "./src/cpp/unrar/rarvm.cpp"
   if (!($264)) {
    break;
   }
   $37 = 0; //@line 991 "./src/cpp/unrar/rarvm.cpp"
   $265 = $36; //@line 993 "./src/cpp/unrar/rarvm.cpp"
   $38 = $265; //@line 993 "./src/cpp/unrar/rarvm.cpp"
   while(1) {
    $266 = $38; //@line 993 "./src/cpp/unrar/rarvm.cpp"
    $267 = $30; //@line 993 "./src/cpp/unrar/rarvm.cpp"
    $268 = ($266|0)<($267|0); //@line 993 "./src/cpp/unrar/rarvm.cpp"
    if (!($268)) {
     break;
    }
    $269 = $38; //@line 996 "./src/cpp/unrar/rarvm.cpp"
    $270 = $31; //@line 996 "./src/cpp/unrar/rarvm.cpp"
    $271 = (($269) - ($270))|0; //@line 996 "./src/cpp/unrar/rarvm.cpp"
    $40 = $271; //@line 996 "./src/cpp/unrar/rarvm.cpp"
    $272 = $40; //@line 997 "./src/cpp/unrar/rarvm.cpp"
    $273 = ($272|0)>=(3); //@line 997 "./src/cpp/unrar/rarvm.cpp"
    do {
     if ($273) {
      $274 = $34; //@line 999 "./src/cpp/unrar/rarvm.cpp"
      $275 = $40; //@line 999 "./src/cpp/unrar/rarvm.cpp"
      $276 = (($274) + ($275)|0); //@line 999 "./src/cpp/unrar/rarvm.cpp"
      $41 = $276; //@line 999 "./src/cpp/unrar/rarvm.cpp"
      $277 = $41; //@line 1000 "./src/cpp/unrar/rarvm.cpp"
      $278 = HEAP8[$277>>0]|0; //@line 1000 "./src/cpp/unrar/rarvm.cpp"
      $279 = $278&255; //@line 1000 "./src/cpp/unrar/rarvm.cpp"
      $42 = $279; //@line 1000 "./src/cpp/unrar/rarvm.cpp"
      $280 = $41; //@line 1001 "./src/cpp/unrar/rarvm.cpp"
      $281 = ((($280)) + -3|0); //@line 1001 "./src/cpp/unrar/rarvm.cpp"
      $282 = HEAP8[$281>>0]|0; //@line 1001 "./src/cpp/unrar/rarvm.cpp"
      $283 = $282&255; //@line 1001 "./src/cpp/unrar/rarvm.cpp"
      $43 = $283; //@line 1001 "./src/cpp/unrar/rarvm.cpp"
      $284 = $37; //@line 1002 "./src/cpp/unrar/rarvm.cpp"
      $285 = $42; //@line 1002 "./src/cpp/unrar/rarvm.cpp"
      $286 = (($284) + ($285))|0; //@line 1002 "./src/cpp/unrar/rarvm.cpp"
      $287 = $43; //@line 1002 "./src/cpp/unrar/rarvm.cpp"
      $288 = (($286) - ($287))|0; //@line 1002 "./src/cpp/unrar/rarvm.cpp"
      $39 = $288; //@line 1002 "./src/cpp/unrar/rarvm.cpp"
      $289 = $39; //@line 1003 "./src/cpp/unrar/rarvm.cpp"
      $290 = $37; //@line 1003 "./src/cpp/unrar/rarvm.cpp"
      $291 = (($289) - ($290))|0; //@line 1003 "./src/cpp/unrar/rarvm.cpp"
      $292 = (Math_abs(($291|0))|0); //@line 1003 "./src/cpp/unrar/rarvm.cpp"
      $44 = $292; //@line 1003 "./src/cpp/unrar/rarvm.cpp"
      $293 = $39; //@line 1004 "./src/cpp/unrar/rarvm.cpp"
      $294 = $42; //@line 1004 "./src/cpp/unrar/rarvm.cpp"
      $295 = (($293) - ($294))|0; //@line 1004 "./src/cpp/unrar/rarvm.cpp"
      $296 = (Math_abs(($295|0))|0); //@line 1004 "./src/cpp/unrar/rarvm.cpp"
      $45 = $296; //@line 1004 "./src/cpp/unrar/rarvm.cpp"
      $297 = $39; //@line 1005 "./src/cpp/unrar/rarvm.cpp"
      $298 = $43; //@line 1005 "./src/cpp/unrar/rarvm.cpp"
      $299 = (($297) - ($298))|0; //@line 1005 "./src/cpp/unrar/rarvm.cpp"
      $300 = (Math_abs(($299|0))|0); //@line 1005 "./src/cpp/unrar/rarvm.cpp"
      $46 = $300; //@line 1005 "./src/cpp/unrar/rarvm.cpp"
      $301 = $44; //@line 1006 "./src/cpp/unrar/rarvm.cpp"
      $302 = $45; //@line 1006 "./src/cpp/unrar/rarvm.cpp"
      $303 = ($301|0)<=($302|0); //@line 1006 "./src/cpp/unrar/rarvm.cpp"
      if ($303) {
       $304 = $44; //@line 1006 "./src/cpp/unrar/rarvm.cpp"
       $305 = $46; //@line 1006 "./src/cpp/unrar/rarvm.cpp"
       $306 = ($304|0)<=($305|0); //@line 1006 "./src/cpp/unrar/rarvm.cpp"
       if ($306) {
        $307 = $37; //@line 1007 "./src/cpp/unrar/rarvm.cpp"
        $39 = $307; //@line 1007 "./src/cpp/unrar/rarvm.cpp"
        break;
       }
      }
      $308 = $45; //@line 1009 "./src/cpp/unrar/rarvm.cpp"
      $309 = $46; //@line 1009 "./src/cpp/unrar/rarvm.cpp"
      $310 = ($308|0)<=($309|0); //@line 1009 "./src/cpp/unrar/rarvm.cpp"
      if ($310) {
       $311 = $42; //@line 1010 "./src/cpp/unrar/rarvm.cpp"
       $39 = $311; //@line 1010 "./src/cpp/unrar/rarvm.cpp"
       break;
      } else {
       $312 = $43; //@line 1012 "./src/cpp/unrar/rarvm.cpp"
       $39 = $312; //@line 1012 "./src/cpp/unrar/rarvm.cpp"
       break;
      }
     } else {
      $313 = $37; //@line 1015 "./src/cpp/unrar/rarvm.cpp"
      $39 = $313; //@line 1015 "./src/cpp/unrar/rarvm.cpp"
     }
    } while(0);
    $314 = $39; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $315 = $33; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $316 = ((($315)) + 1|0); //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $33 = $316; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $317 = HEAP8[$315>>0]|0; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $318 = $317&255; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $319 = (($314) - ($318))|0; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $320 = $319&255; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $321 = $320&255; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $37 = $321; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $322 = $321&255; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $323 = $34; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $324 = $38; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $325 = (($323) + ($324)|0); //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    HEAP8[$325>>0] = $322; //@line 1016 "./src/cpp/unrar/rarvm.cpp"
    $326 = $38; //@line 993 "./src/cpp/unrar/rarvm.cpp"
    $327 = (($326) + 3)|0; //@line 993 "./src/cpp/unrar/rarvm.cpp"
    $38 = $327; //@line 993 "./src/cpp/unrar/rarvm.cpp"
   }
   $328 = $36; //@line 989 "./src/cpp/unrar/rarvm.cpp"
   $329 = (($328) + 1)|0; //@line 989 "./src/cpp/unrar/rarvm.cpp"
   $36 = $329; //@line 989 "./src/cpp/unrar/rarvm.cpp"
  }
  $330 = $32; //@line 1019 "./src/cpp/unrar/rarvm.cpp"
  $47 = $330; //@line 1019 "./src/cpp/unrar/rarvm.cpp"
  $331 = $30; //@line 1019 "./src/cpp/unrar/rarvm.cpp"
  $332 = (($331) - 2)|0; //@line 1019 "./src/cpp/unrar/rarvm.cpp"
  $48 = $332; //@line 1019 "./src/cpp/unrar/rarvm.cpp"
  while(1) {
   $333 = $47; //@line 1019 "./src/cpp/unrar/rarvm.cpp"
   $334 = $48; //@line 1019 "./src/cpp/unrar/rarvm.cpp"
   $335 = ($333|0)<($334|0); //@line 1019 "./src/cpp/unrar/rarvm.cpp"
   if (!($335)) {
    break;
   }
   $336 = $34; //@line 1021 "./src/cpp/unrar/rarvm.cpp"
   $337 = $47; //@line 1021 "./src/cpp/unrar/rarvm.cpp"
   $338 = (($337) + 1)|0; //@line 1021 "./src/cpp/unrar/rarvm.cpp"
   $339 = (($336) + ($338)|0); //@line 1021 "./src/cpp/unrar/rarvm.cpp"
   $340 = HEAP8[$339>>0]|0; //@line 1021 "./src/cpp/unrar/rarvm.cpp"
   $49 = $340; //@line 1021 "./src/cpp/unrar/rarvm.cpp"
   $341 = $49; //@line 1022 "./src/cpp/unrar/rarvm.cpp"
   $342 = $341&255; //@line 1022 "./src/cpp/unrar/rarvm.cpp"
   $343 = $34; //@line 1022 "./src/cpp/unrar/rarvm.cpp"
   $344 = $47; //@line 1022 "./src/cpp/unrar/rarvm.cpp"
   $345 = (($343) + ($344)|0); //@line 1022 "./src/cpp/unrar/rarvm.cpp"
   $346 = HEAP8[$345>>0]|0; //@line 1022 "./src/cpp/unrar/rarvm.cpp"
   $347 = $346&255; //@line 1022 "./src/cpp/unrar/rarvm.cpp"
   $348 = (($347) + ($342))|0; //@line 1022 "./src/cpp/unrar/rarvm.cpp"
   $349 = $348&255; //@line 1022 "./src/cpp/unrar/rarvm.cpp"
   HEAP8[$345>>0] = $349; //@line 1022 "./src/cpp/unrar/rarvm.cpp"
   $350 = $49; //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   $351 = $350&255; //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   $352 = $34; //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   $353 = $47; //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   $354 = (($353) + 2)|0; //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   $355 = (($352) + ($354)|0); //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   $356 = HEAP8[$355>>0]|0; //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   $357 = $356&255; //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   $358 = (($357) + ($351))|0; //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   $359 = $358&255; //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   HEAP8[$355>>0] = $359; //@line 1023 "./src/cpp/unrar/rarvm.cpp"
   $360 = $47; //@line 1019 "./src/cpp/unrar/rarvm.cpp"
   $361 = (($360) + 3)|0; //@line 1019 "./src/cpp/unrar/rarvm.cpp"
   $47 = $361; //@line 1019 "./src/cpp/unrar/rarvm.cpp"
  }
  STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
  break;
 }
 case 5:  {
  $362 = ((($72)) + 20|0); //@line 1029 "./src/cpp/unrar/rarvm.cpp"
  $363 = ((($362)) + 16|0); //@line 1029 "./src/cpp/unrar/rarvm.cpp"
  $364 = HEAP32[$363>>2]|0; //@line 1029 "./src/cpp/unrar/rarvm.cpp"
  $50 = $364; //@line 1029 "./src/cpp/unrar/rarvm.cpp"
  $365 = ((($72)) + 20|0); //@line 1029 "./src/cpp/unrar/rarvm.cpp"
  $366 = HEAP32[$365>>2]|0; //@line 1029 "./src/cpp/unrar/rarvm.cpp"
  $51 = $366; //@line 1029 "./src/cpp/unrar/rarvm.cpp"
  $367 = ((($72)) + 16|0); //@line 1030 "./src/cpp/unrar/rarvm.cpp"
  $368 = HEAP32[$367>>2]|0; //@line 1030 "./src/cpp/unrar/rarvm.cpp"
  $52 = $368; //@line 1030 "./src/cpp/unrar/rarvm.cpp"
  $369 = $52; //@line 1030 "./src/cpp/unrar/rarvm.cpp"
  $370 = $50; //@line 1030 "./src/cpp/unrar/rarvm.cpp"
  $371 = (($369) + ($370)|0); //@line 1030 "./src/cpp/unrar/rarvm.cpp"
  $53 = $371; //@line 1030 "./src/cpp/unrar/rarvm.cpp"
  $372 = ((($72)) + 16|0); //@line 1031 "./src/cpp/unrar/rarvm.cpp"
  $373 = HEAP32[$372>>2]|0; //@line 1031 "./src/cpp/unrar/rarvm.cpp"
  $374 = ((($373)) + 245792|0); //@line 1031 "./src/cpp/unrar/rarvm.cpp"
  $375 = $50; //@line 1031 "./src/cpp/unrar/rarvm.cpp"
  __ZN5RarVM8SetValueEbPjj($72,0,$374,$375); //@line 1031 "./src/cpp/unrar/rarvm.cpp"
  $376 = $50; //@line 1032 "./src/cpp/unrar/rarvm.cpp"
  $377 = ($376>>>0)>=(122880); //@line 1032 "./src/cpp/unrar/rarvm.cpp"
  if ($377) {
   STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
  }
  $54 = 0; //@line 1034 "./src/cpp/unrar/rarvm.cpp"
  while(1) {
   $378 = $54; //@line 1034 "./src/cpp/unrar/rarvm.cpp"
   $379 = $51; //@line 1034 "./src/cpp/unrar/rarvm.cpp"
   $380 = ($378|0)<($379|0); //@line 1034 "./src/cpp/unrar/rarvm.cpp"
   if (!($380)) {
    break;
   }
   $55 = 0; //@line 1036 "./src/cpp/unrar/rarvm.cpp"
   $56 = 0; //@line 1036 "./src/cpp/unrar/rarvm.cpp"
   $58 = 0; //@line 1037 "./src/cpp/unrar/rarvm.cpp"
   $59 = 0; //@line 1037 "./src/cpp/unrar/rarvm.cpp"
   $61 = 0; //@line 1038 "./src/cpp/unrar/rarvm.cpp"
   $62 = 0; //@line 1038 "./src/cpp/unrar/rarvm.cpp"
   $63 = 0; //@line 1038 "./src/cpp/unrar/rarvm.cpp"
   ;HEAP32[$57>>2]=0|0;HEAP32[$57+4>>2]=0|0;HEAP32[$57+8>>2]=0|0;HEAP32[$57+12>>2]=0|0;HEAP32[$57+16>>2]=0|0;HEAP32[$57+20>>2]=0|0;HEAP32[$57+24>>2]=0|0; //@line 1039 "./src/cpp/unrar/rarvm.cpp"
   $381 = $54; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
   $64 = $381; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
   $65 = 0; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
   while(1) {
    $382 = $64; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
    $383 = $50; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
    $384 = ($382|0)<($383|0); //@line 1041 "./src/cpp/unrar/rarvm.cpp"
    if (!($384)) {
     break;
    }
    $385 = $59; //@line 1043 "./src/cpp/unrar/rarvm.cpp"
    $60 = $385; //@line 1043 "./src/cpp/unrar/rarvm.cpp"
    $386 = $56; //@line 1044 "./src/cpp/unrar/rarvm.cpp"
    $387 = $58; //@line 1044 "./src/cpp/unrar/rarvm.cpp"
    $388 = (($386) - ($387))|0; //@line 1044 "./src/cpp/unrar/rarvm.cpp"
    $59 = $388; //@line 1044 "./src/cpp/unrar/rarvm.cpp"
    $389 = $56; //@line 1045 "./src/cpp/unrar/rarvm.cpp"
    $58 = $389; //@line 1045 "./src/cpp/unrar/rarvm.cpp"
    $390 = $55; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $391 = $390<<3; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $392 = $61; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $393 = $58; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $394 = Math_imul($392, $393)|0; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $395 = (($391) + ($394))|0; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $396 = $62; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $397 = $59; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $398 = Math_imul($396, $397)|0; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $399 = (($395) + ($398))|0; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $400 = $63; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $401 = $60; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $402 = Math_imul($400, $401)|0; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $403 = (($399) + ($402))|0; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $66 = $403; //@line 1047 "./src/cpp/unrar/rarvm.cpp"
    $404 = $66; //@line 1048 "./src/cpp/unrar/rarvm.cpp"
    $405 = $404 >>> 3; //@line 1048 "./src/cpp/unrar/rarvm.cpp"
    $406 = $405 & 255; //@line 1048 "./src/cpp/unrar/rarvm.cpp"
    $66 = $406; //@line 1048 "./src/cpp/unrar/rarvm.cpp"
    $407 = $52; //@line 1050 "./src/cpp/unrar/rarvm.cpp"
    $408 = ((($407)) + 1|0); //@line 1050 "./src/cpp/unrar/rarvm.cpp"
    $52 = $408; //@line 1050 "./src/cpp/unrar/rarvm.cpp"
    $409 = HEAP8[$407>>0]|0; //@line 1050 "./src/cpp/unrar/rarvm.cpp"
    $410 = $409&255; //@line 1050 "./src/cpp/unrar/rarvm.cpp"
    $67 = $410; //@line 1050 "./src/cpp/unrar/rarvm.cpp"
    $411 = $67; //@line 1052 "./src/cpp/unrar/rarvm.cpp"
    $412 = $66; //@line 1052 "./src/cpp/unrar/rarvm.cpp"
    $413 = (($412) - ($411))|0; //@line 1052 "./src/cpp/unrar/rarvm.cpp"
    $66 = $413; //@line 1052 "./src/cpp/unrar/rarvm.cpp"
    $414 = $66; //@line 1053 "./src/cpp/unrar/rarvm.cpp"
    $415 = $414&255; //@line 1053 "./src/cpp/unrar/rarvm.cpp"
    $416 = $53; //@line 1053 "./src/cpp/unrar/rarvm.cpp"
    $417 = $64; //@line 1053 "./src/cpp/unrar/rarvm.cpp"
    $418 = (($416) + ($417)|0); //@line 1053 "./src/cpp/unrar/rarvm.cpp"
    HEAP8[$418>>0] = $415; //@line 1053 "./src/cpp/unrar/rarvm.cpp"
    $419 = $66; //@line 1054 "./src/cpp/unrar/rarvm.cpp"
    $420 = $55; //@line 1054 "./src/cpp/unrar/rarvm.cpp"
    $421 = (($419) - ($420))|0; //@line 1054 "./src/cpp/unrar/rarvm.cpp"
    $422 = $421&255; //@line 1054 "./src/cpp/unrar/rarvm.cpp"
    $423 = $422 << 24 >> 24; //@line 1054 "./src/cpp/unrar/rarvm.cpp"
    $56 = $423; //@line 1054 "./src/cpp/unrar/rarvm.cpp"
    $424 = $66; //@line 1055 "./src/cpp/unrar/rarvm.cpp"
    $55 = $424; //@line 1055 "./src/cpp/unrar/rarvm.cpp"
    $425 = $67; //@line 1057 "./src/cpp/unrar/rarvm.cpp"
    $426 = $425&255; //@line 1057 "./src/cpp/unrar/rarvm.cpp"
    $427 = $426 << 24 >> 24; //@line 1057 "./src/cpp/unrar/rarvm.cpp"
    $428 = $427 << 3; //@line 1057 "./src/cpp/unrar/rarvm.cpp"
    $68 = $428; //@line 1057 "./src/cpp/unrar/rarvm.cpp"
    $429 = $68; //@line 1059 "./src/cpp/unrar/rarvm.cpp"
    $430 = (Math_abs(($429|0))|0); //@line 1059 "./src/cpp/unrar/rarvm.cpp"
    $431 = HEAP32[$57>>2]|0; //@line 1059 "./src/cpp/unrar/rarvm.cpp"
    $432 = (($431) + ($430))|0; //@line 1059 "./src/cpp/unrar/rarvm.cpp"
    HEAP32[$57>>2] = $432; //@line 1059 "./src/cpp/unrar/rarvm.cpp"
    $433 = $68; //@line 1060 "./src/cpp/unrar/rarvm.cpp"
    $434 = $58; //@line 1060 "./src/cpp/unrar/rarvm.cpp"
    $435 = (($433) - ($434))|0; //@line 1060 "./src/cpp/unrar/rarvm.cpp"
    $436 = (Math_abs(($435|0))|0); //@line 1060 "./src/cpp/unrar/rarvm.cpp"
    $437 = ((($57)) + 4|0); //@line 1060 "./src/cpp/unrar/rarvm.cpp"
    $438 = HEAP32[$437>>2]|0; //@line 1060 "./src/cpp/unrar/rarvm.cpp"
    $439 = (($438) + ($436))|0; //@line 1060 "./src/cpp/unrar/rarvm.cpp"
    HEAP32[$437>>2] = $439; //@line 1060 "./src/cpp/unrar/rarvm.cpp"
    $440 = $68; //@line 1061 "./src/cpp/unrar/rarvm.cpp"
    $441 = $58; //@line 1061 "./src/cpp/unrar/rarvm.cpp"
    $442 = (($440) + ($441))|0; //@line 1061 "./src/cpp/unrar/rarvm.cpp"
    $443 = (Math_abs(($442|0))|0); //@line 1061 "./src/cpp/unrar/rarvm.cpp"
    $444 = ((($57)) + 8|0); //@line 1061 "./src/cpp/unrar/rarvm.cpp"
    $445 = HEAP32[$444>>2]|0; //@line 1061 "./src/cpp/unrar/rarvm.cpp"
    $446 = (($445) + ($443))|0; //@line 1061 "./src/cpp/unrar/rarvm.cpp"
    HEAP32[$444>>2] = $446; //@line 1061 "./src/cpp/unrar/rarvm.cpp"
    $447 = $68; //@line 1062 "./src/cpp/unrar/rarvm.cpp"
    $448 = $59; //@line 1062 "./src/cpp/unrar/rarvm.cpp"
    $449 = (($447) - ($448))|0; //@line 1062 "./src/cpp/unrar/rarvm.cpp"
    $450 = (Math_abs(($449|0))|0); //@line 1062 "./src/cpp/unrar/rarvm.cpp"
    $451 = ((($57)) + 12|0); //@line 1062 "./src/cpp/unrar/rarvm.cpp"
    $452 = HEAP32[$451>>2]|0; //@line 1062 "./src/cpp/unrar/rarvm.cpp"
    $453 = (($452) + ($450))|0; //@line 1062 "./src/cpp/unrar/rarvm.cpp"
    HEAP32[$451>>2] = $453; //@line 1062 "./src/cpp/unrar/rarvm.cpp"
    $454 = $68; //@line 1063 "./src/cpp/unrar/rarvm.cpp"
    $455 = $59; //@line 1063 "./src/cpp/unrar/rarvm.cpp"
    $456 = (($454) + ($455))|0; //@line 1063 "./src/cpp/unrar/rarvm.cpp"
    $457 = (Math_abs(($456|0))|0); //@line 1063 "./src/cpp/unrar/rarvm.cpp"
    $458 = ((($57)) + 16|0); //@line 1063 "./src/cpp/unrar/rarvm.cpp"
    $459 = HEAP32[$458>>2]|0; //@line 1063 "./src/cpp/unrar/rarvm.cpp"
    $460 = (($459) + ($457))|0; //@line 1063 "./src/cpp/unrar/rarvm.cpp"
    HEAP32[$458>>2] = $460; //@line 1063 "./src/cpp/unrar/rarvm.cpp"
    $461 = $68; //@line 1064 "./src/cpp/unrar/rarvm.cpp"
    $462 = $60; //@line 1064 "./src/cpp/unrar/rarvm.cpp"
    $463 = (($461) - ($462))|0; //@line 1064 "./src/cpp/unrar/rarvm.cpp"
    $464 = (Math_abs(($463|0))|0); //@line 1064 "./src/cpp/unrar/rarvm.cpp"
    $465 = ((($57)) + 20|0); //@line 1064 "./src/cpp/unrar/rarvm.cpp"
    $466 = HEAP32[$465>>2]|0; //@line 1064 "./src/cpp/unrar/rarvm.cpp"
    $467 = (($466) + ($464))|0; //@line 1064 "./src/cpp/unrar/rarvm.cpp"
    HEAP32[$465>>2] = $467; //@line 1064 "./src/cpp/unrar/rarvm.cpp"
    $468 = $68; //@line 1065 "./src/cpp/unrar/rarvm.cpp"
    $469 = $60; //@line 1065 "./src/cpp/unrar/rarvm.cpp"
    $470 = (($468) + ($469))|0; //@line 1065 "./src/cpp/unrar/rarvm.cpp"
    $471 = (Math_abs(($470|0))|0); //@line 1065 "./src/cpp/unrar/rarvm.cpp"
    $472 = ((($57)) + 24|0); //@line 1065 "./src/cpp/unrar/rarvm.cpp"
    $473 = HEAP32[$472>>2]|0; //@line 1065 "./src/cpp/unrar/rarvm.cpp"
    $474 = (($473) + ($471))|0; //@line 1065 "./src/cpp/unrar/rarvm.cpp"
    HEAP32[$472>>2] = $474; //@line 1065 "./src/cpp/unrar/rarvm.cpp"
    $475 = $65; //@line 1067 "./src/cpp/unrar/rarvm.cpp"
    $476 = $475 & 31; //@line 1067 "./src/cpp/unrar/rarvm.cpp"
    $477 = ($476|0)==(0); //@line 1067 "./src/cpp/unrar/rarvm.cpp"
    L87: do {
     if ($477) {
      $478 = HEAP32[$57>>2]|0; //@line 1069 "./src/cpp/unrar/rarvm.cpp"
      $69 = $478; //@line 1069 "./src/cpp/unrar/rarvm.cpp"
      $70 = 0; //@line 1069 "./src/cpp/unrar/rarvm.cpp"
      HEAP32[$57>>2] = 0; //@line 1070 "./src/cpp/unrar/rarvm.cpp"
      $71 = 1; //@line 1071 "./src/cpp/unrar/rarvm.cpp"
      while(1) {
       $479 = $71; //@line 1071 "./src/cpp/unrar/rarvm.cpp"
       $480 = ($479>>>0)<(7); //@line 1071 "./src/cpp/unrar/rarvm.cpp"
       if (!($480)) {
        break;
       }
       $481 = $71; //@line 1073 "./src/cpp/unrar/rarvm.cpp"
       $482 = (($57) + ($481<<2)|0); //@line 1073 "./src/cpp/unrar/rarvm.cpp"
       $483 = HEAP32[$482>>2]|0; //@line 1073 "./src/cpp/unrar/rarvm.cpp"
       $484 = $69; //@line 1073 "./src/cpp/unrar/rarvm.cpp"
       $485 = ($483>>>0)<($484>>>0); //@line 1073 "./src/cpp/unrar/rarvm.cpp"
       if ($485) {
        $486 = $71; //@line 1075 "./src/cpp/unrar/rarvm.cpp"
        $487 = (($57) + ($486<<2)|0); //@line 1075 "./src/cpp/unrar/rarvm.cpp"
        $488 = HEAP32[$487>>2]|0; //@line 1075 "./src/cpp/unrar/rarvm.cpp"
        $69 = $488; //@line 1075 "./src/cpp/unrar/rarvm.cpp"
        $489 = $71; //@line 1076 "./src/cpp/unrar/rarvm.cpp"
        $70 = $489; //@line 1076 "./src/cpp/unrar/rarvm.cpp"
       }
       $490 = $71; //@line 1078 "./src/cpp/unrar/rarvm.cpp"
       $491 = (($57) + ($490<<2)|0); //@line 1078 "./src/cpp/unrar/rarvm.cpp"
       HEAP32[$491>>2] = 0; //@line 1078 "./src/cpp/unrar/rarvm.cpp"
       $492 = $71; //@line 1071 "./src/cpp/unrar/rarvm.cpp"
       $493 = (($492) + 1)|0; //@line 1071 "./src/cpp/unrar/rarvm.cpp"
       $71 = $493; //@line 1071 "./src/cpp/unrar/rarvm.cpp"
      }
      $494 = $70; //@line 1080 "./src/cpp/unrar/rarvm.cpp"
      switch ($494|0) {
      case 1:  {
       $495 = $61; //@line 1082 "./src/cpp/unrar/rarvm.cpp"
       $496 = ($495|0)>=(-16); //@line 1082 "./src/cpp/unrar/rarvm.cpp"
       if (!($496)) {
        break L87;
       }
       $497 = $61; //@line 1082 "./src/cpp/unrar/rarvm.cpp"
       $498 = (($497) + -1)|0; //@line 1082 "./src/cpp/unrar/rarvm.cpp"
       $61 = $498; //@line 1082 "./src/cpp/unrar/rarvm.cpp"
       break L87;
       break;
      }
      case 2:  {
       $499 = $61; //@line 1083 "./src/cpp/unrar/rarvm.cpp"
       $500 = ($499|0)<(16); //@line 1083 "./src/cpp/unrar/rarvm.cpp"
       if (!($500)) {
        break L87;
       }
       $501 = $61; //@line 1083 "./src/cpp/unrar/rarvm.cpp"
       $502 = (($501) + 1)|0; //@line 1083 "./src/cpp/unrar/rarvm.cpp"
       $61 = $502; //@line 1083 "./src/cpp/unrar/rarvm.cpp"
       break L87;
       break;
      }
      case 3:  {
       $503 = $62; //@line 1084 "./src/cpp/unrar/rarvm.cpp"
       $504 = ($503|0)>=(-16); //@line 1084 "./src/cpp/unrar/rarvm.cpp"
       if (!($504)) {
        break L87;
       }
       $505 = $62; //@line 1084 "./src/cpp/unrar/rarvm.cpp"
       $506 = (($505) + -1)|0; //@line 1084 "./src/cpp/unrar/rarvm.cpp"
       $62 = $506; //@line 1084 "./src/cpp/unrar/rarvm.cpp"
       break L87;
       break;
      }
      case 4:  {
       $507 = $62; //@line 1085 "./src/cpp/unrar/rarvm.cpp"
       $508 = ($507|0)<(16); //@line 1085 "./src/cpp/unrar/rarvm.cpp"
       if (!($508)) {
        break L87;
       }
       $509 = $62; //@line 1085 "./src/cpp/unrar/rarvm.cpp"
       $510 = (($509) + 1)|0; //@line 1085 "./src/cpp/unrar/rarvm.cpp"
       $62 = $510; //@line 1085 "./src/cpp/unrar/rarvm.cpp"
       break L87;
       break;
      }
      case 5:  {
       $511 = $63; //@line 1086 "./src/cpp/unrar/rarvm.cpp"
       $512 = ($511|0)>=(-16); //@line 1086 "./src/cpp/unrar/rarvm.cpp"
       if (!($512)) {
        break L87;
       }
       $513 = $63; //@line 1086 "./src/cpp/unrar/rarvm.cpp"
       $514 = (($513) + -1)|0; //@line 1086 "./src/cpp/unrar/rarvm.cpp"
       $63 = $514; //@line 1086 "./src/cpp/unrar/rarvm.cpp"
       break L87;
       break;
      }
      case 6:  {
       $515 = $63; //@line 1087 "./src/cpp/unrar/rarvm.cpp"
       $516 = ($515|0)<(16); //@line 1087 "./src/cpp/unrar/rarvm.cpp"
       if (!($516)) {
        break L87;
       }
       $517 = $63; //@line 1087 "./src/cpp/unrar/rarvm.cpp"
       $518 = (($517) + 1)|0; //@line 1087 "./src/cpp/unrar/rarvm.cpp"
       $63 = $518; //@line 1087 "./src/cpp/unrar/rarvm.cpp"
       break L87;
       break;
      }
      default: {
       break L87;
      }
      }
     }
    } while(0);
    $519 = $51; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
    $520 = $64; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
    $521 = (($520) + ($519))|0; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
    $64 = $521; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
    $522 = $65; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
    $523 = (($522) + 1)|0; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
    $65 = $523; //@line 1041 "./src/cpp/unrar/rarvm.cpp"
   }
   $524 = $54; //@line 1034 "./src/cpp/unrar/rarvm.cpp"
   $525 = (($524) + 1)|0; //@line 1034 "./src/cpp/unrar/rarvm.cpp"
   $54 = $525; //@line 1034 "./src/cpp/unrar/rarvm.cpp"
  }
  STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
  break;
 }
 default: {
  STACKTOP = sp;return; //@line 1095 "./src/cpp/unrar/rarvm.cpp"
 }
 }
}
function __ZN5RarVM8SetValueEbPjj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $8 = $1&1;
 $5 = $8;
 $6 = $2;
 $7 = $3;
 $9 = $4;
 $10 = $5; //@line 70 "./src/cpp/unrar/rarvm.cpp"
 $11 = $10&1; //@line 70 "./src/cpp/unrar/rarvm.cpp"
 if ($11) {
  $12 = $7; //@line 78 "./src/cpp/unrar/rarvm.cpp"
  $13 = $12&255; //@line 78 "./src/cpp/unrar/rarvm.cpp"
  $14 = $6; //@line 78 "./src/cpp/unrar/rarvm.cpp"
  HEAP8[$14>>0] = $13; //@line 78 "./src/cpp/unrar/rarvm.cpp"
  STACKTOP = sp;return; //@line 97 "./src/cpp/unrar/rarvm.cpp"
 }
 $15 = $6; //@line 84 "./src/cpp/unrar/rarvm.cpp"
 $16 = ((($9)) + 16|0); //@line 84 "./src/cpp/unrar/rarvm.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 84 "./src/cpp/unrar/rarvm.cpp"
 $18 = ($15>>>0)>=($17>>>0); //@line 84 "./src/cpp/unrar/rarvm.cpp"
 if ($18) {
  $19 = $6; //@line 84 "./src/cpp/unrar/rarvm.cpp"
  $20 = ((($9)) + 16|0); //@line 84 "./src/cpp/unrar/rarvm.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 84 "./src/cpp/unrar/rarvm.cpp"
  $22 = ((($21)) + 262144|0); //@line 84 "./src/cpp/unrar/rarvm.cpp"
  $23 = ($19>>>0)<($22>>>0); //@line 84 "./src/cpp/unrar/rarvm.cpp"
  if ($23) {
   $24 = $7; //@line 86 "./src/cpp/unrar/rarvm.cpp"
   $25 = $24&255; //@line 86 "./src/cpp/unrar/rarvm.cpp"
   $26 = $6; //@line 86 "./src/cpp/unrar/rarvm.cpp"
   HEAP8[$26>>0] = $25; //@line 86 "./src/cpp/unrar/rarvm.cpp"
   $27 = $7; //@line 87 "./src/cpp/unrar/rarvm.cpp"
   $28 = $27 >>> 8; //@line 87 "./src/cpp/unrar/rarvm.cpp"
   $29 = $28&255; //@line 87 "./src/cpp/unrar/rarvm.cpp"
   $30 = $6; //@line 87 "./src/cpp/unrar/rarvm.cpp"
   $31 = ((($30)) + 1|0); //@line 87 "./src/cpp/unrar/rarvm.cpp"
   HEAP8[$31>>0] = $29; //@line 87 "./src/cpp/unrar/rarvm.cpp"
   $32 = $7; //@line 88 "./src/cpp/unrar/rarvm.cpp"
   $33 = $32 >>> 16; //@line 88 "./src/cpp/unrar/rarvm.cpp"
   $34 = $33&255; //@line 88 "./src/cpp/unrar/rarvm.cpp"
   $35 = $6; //@line 88 "./src/cpp/unrar/rarvm.cpp"
   $36 = ((($35)) + 2|0); //@line 88 "./src/cpp/unrar/rarvm.cpp"
   HEAP8[$36>>0] = $34; //@line 88 "./src/cpp/unrar/rarvm.cpp"
   $37 = $7; //@line 89 "./src/cpp/unrar/rarvm.cpp"
   $38 = $37 >>> 24; //@line 89 "./src/cpp/unrar/rarvm.cpp"
   $39 = $38&255; //@line 89 "./src/cpp/unrar/rarvm.cpp"
   $40 = $6; //@line 89 "./src/cpp/unrar/rarvm.cpp"
   $41 = ((($40)) + 3|0); //@line 89 "./src/cpp/unrar/rarvm.cpp"
   HEAP8[$41>>0] = $39; //@line 89 "./src/cpp/unrar/rarvm.cpp"
   STACKTOP = sp;return; //@line 97 "./src/cpp/unrar/rarvm.cpp"
  }
 }
 $42 = $7; //@line 92 "./src/cpp/unrar/rarvm.cpp"
 $43 = $6; //@line 92 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$43>>2] = $42; //@line 92 "./src/cpp/unrar/rarvm.cpp"
 STACKTOP = sp;return; //@line 97 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN5RarVM21FilterItanium_GetBitsEPhii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = $6; //@line 1100 "./src/cpp/unrar/rarvm.cpp"
 $12 = (($11|0) / 8)&-1; //@line 1100 "./src/cpp/unrar/rarvm.cpp"
 $8 = $12; //@line 1100 "./src/cpp/unrar/rarvm.cpp"
 $13 = $6; //@line 1101 "./src/cpp/unrar/rarvm.cpp"
 $14 = $13 & 7; //@line 1101 "./src/cpp/unrar/rarvm.cpp"
 $9 = $14; //@line 1101 "./src/cpp/unrar/rarvm.cpp"
 $15 = $5; //@line 1102 "./src/cpp/unrar/rarvm.cpp"
 $16 = $8; //@line 1102 "./src/cpp/unrar/rarvm.cpp"
 $17 = (($16) + 1)|0; //@line 1102 "./src/cpp/unrar/rarvm.cpp"
 $8 = $17; //@line 1102 "./src/cpp/unrar/rarvm.cpp"
 $18 = (($15) + ($16)|0); //@line 1102 "./src/cpp/unrar/rarvm.cpp"
 $19 = HEAP8[$18>>0]|0; //@line 1102 "./src/cpp/unrar/rarvm.cpp"
 $20 = $19&255; //@line 1102 "./src/cpp/unrar/rarvm.cpp"
 $10 = $20; //@line 1102 "./src/cpp/unrar/rarvm.cpp"
 $21 = $5; //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $22 = $8; //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $23 = (($22) + 1)|0; //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $8 = $23; //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $24 = (($21) + ($22)|0); //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $25 = HEAP8[$24>>0]|0; //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $26 = $25&255; //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $27 = $26 << 8; //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $28 = $10; //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $29 = $28 | $27; //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $10 = $29; //@line 1103 "./src/cpp/unrar/rarvm.cpp"
 $30 = $5; //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $31 = $8; //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $32 = (($31) + 1)|0; //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $8 = $32; //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $33 = (($30) + ($31)|0); //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $34 = HEAP8[$33>>0]|0; //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $35 = $34&255; //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $36 = $35 << 16; //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $37 = $10; //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $38 = $37 | $36; //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $10 = $38; //@line 1104 "./src/cpp/unrar/rarvm.cpp"
 $39 = $5; //@line 1105 "./src/cpp/unrar/rarvm.cpp"
 $40 = $8; //@line 1105 "./src/cpp/unrar/rarvm.cpp"
 $41 = (($39) + ($40)|0); //@line 1105 "./src/cpp/unrar/rarvm.cpp"
 $42 = HEAP8[$41>>0]|0; //@line 1105 "./src/cpp/unrar/rarvm.cpp"
 $43 = $42&255; //@line 1105 "./src/cpp/unrar/rarvm.cpp"
 $44 = $43 << 24; //@line 1105 "./src/cpp/unrar/rarvm.cpp"
 $45 = $10; //@line 1105 "./src/cpp/unrar/rarvm.cpp"
 $46 = $45 | $44; //@line 1105 "./src/cpp/unrar/rarvm.cpp"
 $10 = $46; //@line 1105 "./src/cpp/unrar/rarvm.cpp"
 $47 = $9; //@line 1106 "./src/cpp/unrar/rarvm.cpp"
 $48 = $10; //@line 1106 "./src/cpp/unrar/rarvm.cpp"
 $49 = $48 >>> $47; //@line 1106 "./src/cpp/unrar/rarvm.cpp"
 $10 = $49; //@line 1106 "./src/cpp/unrar/rarvm.cpp"
 $50 = $10; //@line 1107 "./src/cpp/unrar/rarvm.cpp"
 $51 = $7; //@line 1107 "./src/cpp/unrar/rarvm.cpp"
 $52 = (32 - ($51))|0; //@line 1107 "./src/cpp/unrar/rarvm.cpp"
 $53 = -1 >>> $52; //@line 1107 "./src/cpp/unrar/rarvm.cpp"
 $54 = $50 & $53; //@line 1107 "./src/cpp/unrar/rarvm.cpp"
 STACKTOP = sp;return ($54|0); //@line 1107 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN5RarVM21FilterItanium_SetBitsEPhjii($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $14 = $8; //@line 1113 "./src/cpp/unrar/rarvm.cpp"
 $15 = (($14|0) / 8)&-1; //@line 1113 "./src/cpp/unrar/rarvm.cpp"
 $10 = $15; //@line 1113 "./src/cpp/unrar/rarvm.cpp"
 $16 = $8; //@line 1114 "./src/cpp/unrar/rarvm.cpp"
 $17 = $16 & 7; //@line 1114 "./src/cpp/unrar/rarvm.cpp"
 $11 = $17; //@line 1114 "./src/cpp/unrar/rarvm.cpp"
 $18 = $9; //@line 1115 "./src/cpp/unrar/rarvm.cpp"
 $19 = (32 - ($18))|0; //@line 1115 "./src/cpp/unrar/rarvm.cpp"
 $20 = -1 >>> $19; //@line 1115 "./src/cpp/unrar/rarvm.cpp"
 $12 = $20; //@line 1115 "./src/cpp/unrar/rarvm.cpp"
 $21 = $12; //@line 1116 "./src/cpp/unrar/rarvm.cpp"
 $22 = $11; //@line 1116 "./src/cpp/unrar/rarvm.cpp"
 $23 = $21 << $22; //@line 1116 "./src/cpp/unrar/rarvm.cpp"
 $24 = $23 ^ -1; //@line 1116 "./src/cpp/unrar/rarvm.cpp"
 $12 = $24; //@line 1116 "./src/cpp/unrar/rarvm.cpp"
 $25 = $11; //@line 1118 "./src/cpp/unrar/rarvm.cpp"
 $26 = $7; //@line 1118 "./src/cpp/unrar/rarvm.cpp"
 $27 = $26 << $25; //@line 1118 "./src/cpp/unrar/rarvm.cpp"
 $7 = $27; //@line 1118 "./src/cpp/unrar/rarvm.cpp"
 $13 = 0; //@line 1120 "./src/cpp/unrar/rarvm.cpp"
 while(1) {
  $28 = $13; //@line 1120 "./src/cpp/unrar/rarvm.cpp"
  $29 = ($28>>>0)<(4); //@line 1120 "./src/cpp/unrar/rarvm.cpp"
  if (!($29)) {
   break;
  }
  $30 = $12; //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  $31 = $6; //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  $32 = $10; //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  $33 = $13; //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  $34 = (($32) + ($33))|0; //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  $35 = (($31) + ($34)|0); //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  $36 = HEAP8[$35>>0]|0; //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  $37 = $36&255; //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  $38 = $37 & $30; //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  $39 = $38&255; //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  HEAP8[$35>>0] = $39; //@line 1122 "./src/cpp/unrar/rarvm.cpp"
  $40 = $7; //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  $41 = $6; //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  $42 = $10; //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  $43 = $13; //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  $44 = (($42) + ($43))|0; //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  $45 = (($41) + ($44)|0); //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  $46 = HEAP8[$45>>0]|0; //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  $47 = $46&255; //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  $48 = $47 | $40; //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  $49 = $48&255; //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  HEAP8[$45>>0] = $49; //@line 1123 "./src/cpp/unrar/rarvm.cpp"
  $50 = $12; //@line 1124 "./src/cpp/unrar/rarvm.cpp"
  $51 = $50 >>> 8; //@line 1124 "./src/cpp/unrar/rarvm.cpp"
  $52 = $51 | -16777216; //@line 1124 "./src/cpp/unrar/rarvm.cpp"
  $12 = $52; //@line 1124 "./src/cpp/unrar/rarvm.cpp"
  $53 = $7; //@line 1125 "./src/cpp/unrar/rarvm.cpp"
  $54 = $53 >>> 8; //@line 1125 "./src/cpp/unrar/rarvm.cpp"
  $7 = $54; //@line 1125 "./src/cpp/unrar/rarvm.cpp"
  $55 = $13; //@line 1120 "./src/cpp/unrar/rarvm.cpp"
  $56 = (($55) + 1)|0; //@line 1120 "./src/cpp/unrar/rarvm.cpp"
  $13 = $56; //@line 1120 "./src/cpp/unrar/rarvm.cpp"
 }
 STACKTOP = sp;return; //@line 1127 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN5RarVM7PrepareEPhjP18VM_PreparedProgram($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $15 = $4;
 __ZN8BitInput12InitBitInputEv($15); //@line 543 "./src/cpp/unrar/rarvm.cpp"
 $16 = ((($15)) + 12|0); //@line 544 "./src/cpp/unrar/rarvm.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 544 "./src/cpp/unrar/rarvm.cpp"
 $18 = $5; //@line 544 "./src/cpp/unrar/rarvm.cpp"
 $19 = $6; //@line 544 "./src/cpp/unrar/rarvm.cpp"
 $20 = ($19>>>0)<(32768); //@line 544 "./src/cpp/unrar/rarvm.cpp"
 $21 = $6; //@line 544 "./src/cpp/unrar/rarvm.cpp"
 $22 = $20 ? $21 : 32768; //@line 544 "./src/cpp/unrar/rarvm.cpp"
 _memcpy(($17|0),($18|0),($22|0))|0; //@line 544 "./src/cpp/unrar/rarvm.cpp"
 $8 = 0; //@line 547 "./src/cpp/unrar/rarvm.cpp"
 $9 = 1; //@line 548 "./src/cpp/unrar/rarvm.cpp"
 while(1) {
  $23 = $9; //@line 548 "./src/cpp/unrar/rarvm.cpp"
  $24 = $6; //@line 548 "./src/cpp/unrar/rarvm.cpp"
  $25 = ($23>>>0)<($24>>>0); //@line 548 "./src/cpp/unrar/rarvm.cpp"
  if (!($25)) {
   break;
  }
  $26 = $5; //@line 549 "./src/cpp/unrar/rarvm.cpp"
  $27 = $9; //@line 549 "./src/cpp/unrar/rarvm.cpp"
  $28 = (($26) + ($27)|0); //@line 549 "./src/cpp/unrar/rarvm.cpp"
  $29 = HEAP8[$28>>0]|0; //@line 549 "./src/cpp/unrar/rarvm.cpp"
  $30 = $29&255; //@line 549 "./src/cpp/unrar/rarvm.cpp"
  $31 = $8; //@line 549 "./src/cpp/unrar/rarvm.cpp"
  $32 = $31&255; //@line 549 "./src/cpp/unrar/rarvm.cpp"
  $33 = $32 ^ $30; //@line 549 "./src/cpp/unrar/rarvm.cpp"
  $34 = $33&255; //@line 549 "./src/cpp/unrar/rarvm.cpp"
  $8 = $34; //@line 549 "./src/cpp/unrar/rarvm.cpp"
  $35 = $9; //@line 548 "./src/cpp/unrar/rarvm.cpp"
  $36 = (($35) + 1)|0; //@line 548 "./src/cpp/unrar/rarvm.cpp"
  $9 = $36; //@line 548 "./src/cpp/unrar/rarvm.cpp"
 }
 __ZN8BitInput8faddbitsEj($15,8); //@line 551 "./src/cpp/unrar/rarvm.cpp"
 $37 = $7; //@line 553 "./src/cpp/unrar/rarvm.cpp"
 $38 = ((($37)) + 20|0); //@line 553 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$38>>2] = 0; //@line 553 "./src/cpp/unrar/rarvm.cpp"
 $39 = $8; //@line 554 "./src/cpp/unrar/rarvm.cpp"
 $40 = $39&255; //@line 554 "./src/cpp/unrar/rarvm.cpp"
 $41 = $5; //@line 554 "./src/cpp/unrar/rarvm.cpp"
 $42 = HEAP8[$41>>0]|0; //@line 554 "./src/cpp/unrar/rarvm.cpp"
 $43 = $42&255; //@line 554 "./src/cpp/unrar/rarvm.cpp"
 $44 = ($40|0)==($43|0); //@line 554 "./src/cpp/unrar/rarvm.cpp"
 if ($44) {
  $45 = $5; //@line 557 "./src/cpp/unrar/rarvm.cpp"
  $46 = $6; //@line 557 "./src/cpp/unrar/rarvm.cpp"
  $47 = (__ZN5RarVM16IsStandardFilterEPhj($15,$45,$46)|0); //@line 557 "./src/cpp/unrar/rarvm.cpp"
  $10 = $47; //@line 557 "./src/cpp/unrar/rarvm.cpp"
  $48 = $10; //@line 558 "./src/cpp/unrar/rarvm.cpp"
  $49 = ($48|0)!=(0); //@line 558 "./src/cpp/unrar/rarvm.cpp"
  if ($49) {
   $50 = $7; //@line 561 "./src/cpp/unrar/rarvm.cpp"
   __ZN5ArrayI18VM_PreparedCommandE3AddEj($50,1); //@line 561 "./src/cpp/unrar/rarvm.cpp"
   $51 = $7; //@line 562 "./src/cpp/unrar/rarvm.cpp"
   $52 = $7; //@line 562 "./src/cpp/unrar/rarvm.cpp"
   $53 = ((($52)) + 20|0); //@line 562 "./src/cpp/unrar/rarvm.cpp"
   $54 = HEAP32[$53>>2]|0; //@line 562 "./src/cpp/unrar/rarvm.cpp"
   $55 = (($54) + 1)|0; //@line 562 "./src/cpp/unrar/rarvm.cpp"
   HEAP32[$53>>2] = $55; //@line 562 "./src/cpp/unrar/rarvm.cpp"
   $56 = (__ZNK5ArrayI18VM_PreparedCommandEixEj($51,$54)|0); //@line 562 "./src/cpp/unrar/rarvm.cpp"
   $11 = $56; //@line 562 "./src/cpp/unrar/rarvm.cpp"
   $57 = $11; //@line 563 "./src/cpp/unrar/rarvm.cpp"
   HEAP32[$57>>2] = 40; //@line 563 "./src/cpp/unrar/rarvm.cpp"
   $58 = $10; //@line 564 "./src/cpp/unrar/rarvm.cpp"
   $59 = $11; //@line 564 "./src/cpp/unrar/rarvm.cpp"
   $60 = ((($59)) + 8|0); //@line 564 "./src/cpp/unrar/rarvm.cpp"
   $61 = ((($60)) + 4|0); //@line 564 "./src/cpp/unrar/rarvm.cpp"
   HEAP32[$61>>2] = $58; //@line 564 "./src/cpp/unrar/rarvm.cpp"
   $62 = $11; //@line 565 "./src/cpp/unrar/rarvm.cpp"
   $63 = ((($62)) + 8|0); //@line 565 "./src/cpp/unrar/rarvm.cpp"
   $64 = ((($63)) + 4|0); //@line 565 "./src/cpp/unrar/rarvm.cpp"
   $65 = $11; //@line 565 "./src/cpp/unrar/rarvm.cpp"
   $66 = ((($65)) + 8|0); //@line 565 "./src/cpp/unrar/rarvm.cpp"
   $67 = ((($66)) + 12|0); //@line 565 "./src/cpp/unrar/rarvm.cpp"
   HEAP32[$67>>2] = $64; //@line 565 "./src/cpp/unrar/rarvm.cpp"
   $68 = $11; //@line 566 "./src/cpp/unrar/rarvm.cpp"
   $69 = ((($68)) + 24|0); //@line 566 "./src/cpp/unrar/rarvm.cpp"
   $70 = ((($69)) + 4|0); //@line 566 "./src/cpp/unrar/rarvm.cpp"
   $71 = $11; //@line 566 "./src/cpp/unrar/rarvm.cpp"
   $72 = ((($71)) + 24|0); //@line 566 "./src/cpp/unrar/rarvm.cpp"
   $73 = ((($72)) + 12|0); //@line 566 "./src/cpp/unrar/rarvm.cpp"
   HEAP32[$73>>2] = $70; //@line 566 "./src/cpp/unrar/rarvm.cpp"
   $74 = $11; //@line 567 "./src/cpp/unrar/rarvm.cpp"
   $75 = ((($74)) + 24|0); //@line 567 "./src/cpp/unrar/rarvm.cpp"
   HEAP32[$75>>2] = 3; //@line 567 "./src/cpp/unrar/rarvm.cpp"
   $76 = $11; //@line 567 "./src/cpp/unrar/rarvm.cpp"
   $77 = ((($76)) + 8|0); //@line 567 "./src/cpp/unrar/rarvm.cpp"
   HEAP32[$77>>2] = 3; //@line 567 "./src/cpp/unrar/rarvm.cpp"
   $6 = 0; //@line 568 "./src/cpp/unrar/rarvm.cpp"
   STACKTOP = sp;return; //@line 675 "./src/cpp/unrar/rarvm.cpp"
  }
 }
 $78 = $7; //@line 650 "./src/cpp/unrar/rarvm.cpp"
 __ZN5ArrayI18VM_PreparedCommandE3AddEj($78,1); //@line 650 "./src/cpp/unrar/rarvm.cpp"
 $79 = $7; //@line 651 "./src/cpp/unrar/rarvm.cpp"
 $80 = $7; //@line 651 "./src/cpp/unrar/rarvm.cpp"
 $81 = ((($80)) + 20|0); //@line 651 "./src/cpp/unrar/rarvm.cpp"
 $82 = HEAP32[$81>>2]|0; //@line 651 "./src/cpp/unrar/rarvm.cpp"
 $83 = (($82) + 1)|0; //@line 651 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$81>>2] = $83; //@line 651 "./src/cpp/unrar/rarvm.cpp"
 $84 = (__ZNK5ArrayI18VM_PreparedCommandEixEj($79,$82)|0); //@line 651 "./src/cpp/unrar/rarvm.cpp"
 $12 = $84; //@line 651 "./src/cpp/unrar/rarvm.cpp"
 $85 = $12; //@line 652 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$85>>2] = 22; //@line 652 "./src/cpp/unrar/rarvm.cpp"
 $86 = $12; //@line 653 "./src/cpp/unrar/rarvm.cpp"
 $87 = ((($86)) + 8|0); //@line 653 "./src/cpp/unrar/rarvm.cpp"
 $88 = ((($87)) + 4|0); //@line 653 "./src/cpp/unrar/rarvm.cpp"
 $89 = $12; //@line 653 "./src/cpp/unrar/rarvm.cpp"
 $90 = ((($89)) + 8|0); //@line 653 "./src/cpp/unrar/rarvm.cpp"
 $91 = ((($90)) + 12|0); //@line 653 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$91>>2] = $88; //@line 653 "./src/cpp/unrar/rarvm.cpp"
 $92 = $12; //@line 654 "./src/cpp/unrar/rarvm.cpp"
 $93 = ((($92)) + 24|0); //@line 654 "./src/cpp/unrar/rarvm.cpp"
 $94 = ((($93)) + 4|0); //@line 654 "./src/cpp/unrar/rarvm.cpp"
 $95 = $12; //@line 654 "./src/cpp/unrar/rarvm.cpp"
 $96 = ((($95)) + 24|0); //@line 654 "./src/cpp/unrar/rarvm.cpp"
 $97 = ((($96)) + 12|0); //@line 654 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$97>>2] = $94; //@line 654 "./src/cpp/unrar/rarvm.cpp"
 $98 = $12; //@line 655 "./src/cpp/unrar/rarvm.cpp"
 $99 = ((($98)) + 24|0); //@line 655 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$99>>2] = 3; //@line 655 "./src/cpp/unrar/rarvm.cpp"
 $100 = $12; //@line 655 "./src/cpp/unrar/rarvm.cpp"
 $101 = ((($100)) + 8|0); //@line 655 "./src/cpp/unrar/rarvm.cpp"
 HEAP32[$101>>2] = 3; //@line 655 "./src/cpp/unrar/rarvm.cpp"
 $13 = 0; //@line 662 "./src/cpp/unrar/rarvm.cpp"
 while(1) {
  $102 = $13; //@line 662 "./src/cpp/unrar/rarvm.cpp"
  $103 = $7; //@line 662 "./src/cpp/unrar/rarvm.cpp"
  $104 = ((($103)) + 20|0); //@line 662 "./src/cpp/unrar/rarvm.cpp"
  $105 = HEAP32[$104>>2]|0; //@line 662 "./src/cpp/unrar/rarvm.cpp"
  $106 = ($102|0)<($105|0); //@line 662 "./src/cpp/unrar/rarvm.cpp"
  if (!($106)) {
   break;
  }
  $107 = $7; //@line 664 "./src/cpp/unrar/rarvm.cpp"
  $108 = $13; //@line 664 "./src/cpp/unrar/rarvm.cpp"
  $109 = (__ZNK5ArrayI18VM_PreparedCommandEixEj($107,$108)|0); //@line 664 "./src/cpp/unrar/rarvm.cpp"
  $14 = $109; //@line 664 "./src/cpp/unrar/rarvm.cpp"
  $110 = $14; //@line 665 "./src/cpp/unrar/rarvm.cpp"
  $111 = ((($110)) + 8|0); //@line 665 "./src/cpp/unrar/rarvm.cpp"
  $112 = ((($111)) + 12|0); //@line 665 "./src/cpp/unrar/rarvm.cpp"
  $113 = HEAP32[$112>>2]|0; //@line 665 "./src/cpp/unrar/rarvm.cpp"
  $114 = ($113|0)==(0|0); //@line 665 "./src/cpp/unrar/rarvm.cpp"
  if ($114) {
   $115 = $14; //@line 666 "./src/cpp/unrar/rarvm.cpp"
   $116 = ((($115)) + 8|0); //@line 666 "./src/cpp/unrar/rarvm.cpp"
   $117 = ((($116)) + 4|0); //@line 666 "./src/cpp/unrar/rarvm.cpp"
   $118 = $14; //@line 666 "./src/cpp/unrar/rarvm.cpp"
   $119 = ((($118)) + 8|0); //@line 666 "./src/cpp/unrar/rarvm.cpp"
   $120 = ((($119)) + 12|0); //@line 666 "./src/cpp/unrar/rarvm.cpp"
   HEAP32[$120>>2] = $117; //@line 666 "./src/cpp/unrar/rarvm.cpp"
  }
  $121 = $14; //@line 667 "./src/cpp/unrar/rarvm.cpp"
  $122 = ((($121)) + 24|0); //@line 667 "./src/cpp/unrar/rarvm.cpp"
  $123 = ((($122)) + 12|0); //@line 667 "./src/cpp/unrar/rarvm.cpp"
  $124 = HEAP32[$123>>2]|0; //@line 667 "./src/cpp/unrar/rarvm.cpp"
  $125 = ($124|0)==(0|0); //@line 667 "./src/cpp/unrar/rarvm.cpp"
  if ($125) {
   $126 = $14; //@line 668 "./src/cpp/unrar/rarvm.cpp"
   $127 = ((($126)) + 24|0); //@line 668 "./src/cpp/unrar/rarvm.cpp"
   $128 = ((($127)) + 4|0); //@line 668 "./src/cpp/unrar/rarvm.cpp"
   $129 = $14; //@line 668 "./src/cpp/unrar/rarvm.cpp"
   $130 = ((($129)) + 24|0); //@line 668 "./src/cpp/unrar/rarvm.cpp"
   $131 = ((($130)) + 12|0); //@line 668 "./src/cpp/unrar/rarvm.cpp"
   HEAP32[$131>>2] = $128; //@line 668 "./src/cpp/unrar/rarvm.cpp"
  }
  $132 = $13; //@line 662 "./src/cpp/unrar/rarvm.cpp"
  $133 = (($132) + 1)|0; //@line 662 "./src/cpp/unrar/rarvm.cpp"
  $13 = $133; //@line 662 "./src/cpp/unrar/rarvm.cpp"
 }
 STACKTOP = sp;return; //@line 675 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN8BitInput12InitBitInputEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 21 "./src/cpp/unrar/getbits.hpp"
 HEAP32[$3>>2] = 0; //@line 21 "./src/cpp/unrar/getbits.hpp"
 HEAP32[$2>>2] = 0; //@line 21 "./src/cpp/unrar/getbits.hpp"
 STACKTOP = sp;return; //@line 22 "./src/cpp/unrar/getbits.hpp"
}
function __ZN5RarVM16IsStandardFilterEPhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $9 = $5; //@line 866 "./src/cpp/unrar/rarvm.cpp"
 $10 = $6; //@line 866 "./src/cpp/unrar/rarvm.cpp"
 $11 = (__Z5CRC32jPKvj(-1,$9,$10)|0); //@line 866 "./src/cpp/unrar/rarvm.cpp"
 $12 = $11 ^ -1; //@line 866 "./src/cpp/unrar/rarvm.cpp"
 $7 = $12; //@line 866 "./src/cpp/unrar/rarvm.cpp"
 $8 = 0; //@line 867 "./src/cpp/unrar/rarvm.cpp"
 while(1) {
  $13 = $8; //@line 867 "./src/cpp/unrar/rarvm.cpp"
  $14 = ($13>>>0)<(6); //@line 867 "./src/cpp/unrar/rarvm.cpp"
  if (!($14)) {
   label = 7;
   break;
  }
  $15 = $8; //@line 868 "./src/cpp/unrar/rarvm.cpp"
  $16 = (892 + (($15*12)|0)|0); //@line 868 "./src/cpp/unrar/rarvm.cpp"
  $17 = ((($16)) + 4|0); //@line 868 "./src/cpp/unrar/rarvm.cpp"
  $18 = HEAP32[$17>>2]|0; //@line 868 "./src/cpp/unrar/rarvm.cpp"
  $19 = $7; //@line 868 "./src/cpp/unrar/rarvm.cpp"
  $20 = ($18|0)==($19|0); //@line 868 "./src/cpp/unrar/rarvm.cpp"
  if ($20) {
   $21 = $8; //@line 868 "./src/cpp/unrar/rarvm.cpp"
   $22 = (892 + (($21*12)|0)|0); //@line 868 "./src/cpp/unrar/rarvm.cpp"
   $23 = HEAP32[$22>>2]|0; //@line 868 "./src/cpp/unrar/rarvm.cpp"
   $24 = $6; //@line 868 "./src/cpp/unrar/rarvm.cpp"
   $25 = ($23|0)==($24|0); //@line 868 "./src/cpp/unrar/rarvm.cpp"
   if ($25) {
    label = 5;
    break;
   }
  }
  $30 = $8; //@line 867 "./src/cpp/unrar/rarvm.cpp"
  $31 = (($30) + 1)|0; //@line 867 "./src/cpp/unrar/rarvm.cpp"
  $8 = $31; //@line 867 "./src/cpp/unrar/rarvm.cpp"
 }
 if ((label|0) == 5) {
  $26 = $8; //@line 869 "./src/cpp/unrar/rarvm.cpp"
  $27 = (892 + (($26*12)|0)|0); //@line 869 "./src/cpp/unrar/rarvm.cpp"
  $28 = ((($27)) + 8|0); //@line 869 "./src/cpp/unrar/rarvm.cpp"
  $29 = HEAP32[$28>>2]|0; //@line 869 "./src/cpp/unrar/rarvm.cpp"
  $3 = $29; //@line 869 "./src/cpp/unrar/rarvm.cpp"
  $32 = $3; //@line 871 "./src/cpp/unrar/rarvm.cpp"
  STACKTOP = sp;return ($32|0); //@line 871 "./src/cpp/unrar/rarvm.cpp"
 }
 else if ((label|0) == 7) {
  $3 = 0; //@line 870 "./src/cpp/unrar/rarvm.cpp"
  $32 = $3; //@line 871 "./src/cpp/unrar/rarvm.cpp"
  STACKTOP = sp;return ($32|0); //@line 871 "./src/cpp/unrar/rarvm.cpp"
 }
 return (0)|0;
}
function __ZN5ArrayI18VM_PreparedCommandE3AddEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = $3; //@line 92 "./src/cpp/unrar/array.hpp"
 $9 = ((($7)) + 4|0); //@line 92 "./src/cpp/unrar/array.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 92 "./src/cpp/unrar/array.hpp"
 $11 = (($10) + ($8))|0; //@line 92 "./src/cpp/unrar/array.hpp"
 HEAP32[$9>>2] = $11; //@line 92 "./src/cpp/unrar/array.hpp"
 $12 = ((($7)) + 4|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $13 = HEAP32[$12>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $14 = ((($7)) + 8|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $15 = HEAP32[$14>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $16 = ($13>>>0)>($15>>>0); //@line 93 "./src/cpp/unrar/array.hpp"
 if (!($16)) {
  STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
 }
 $17 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
 $18 = HEAP32[$17>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
 $19 = ($18|0)!=(0); //@line 95 "./src/cpp/unrar/array.hpp"
 if ($19) {
  $20 = ((($7)) + 4|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $21 = HEAP32[$20>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $22 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $23 = HEAP32[$22>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $24 = ($21>>>0)>($23>>>0); //@line 95 "./src/cpp/unrar/array.hpp"
  if ($24) {
   $25 = ((($7)) + 12|0); //@line 97 "./src/cpp/unrar/array.hpp"
   $26 = HEAP32[$25>>2]|0; //@line 97 "./src/cpp/unrar/array.hpp"
   HEAP32[$vararg_buffer>>2] = $26; //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler13GeneralErrMsgEPKwz(756,2544,$vararg_buffer); //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler11MemoryErrorEv(756); //@line 98 "./src/cpp/unrar/array.hpp"
  }
 }
 $27 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $28 = HEAP32[$27>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $29 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $30 = HEAP32[$29>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $31 = (($30>>>0) / 4)&-1; //@line 101 "./src/cpp/unrar/array.hpp"
 $32 = (($28) + ($31))|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $33 = (($32) + 32)|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $4 = $33; //@line 101 "./src/cpp/unrar/array.hpp"
 $34 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
 $35 = HEAP32[$34>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
 $36 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
 $37 = ($35>>>0)>($36>>>0); //@line 102 "./src/cpp/unrar/array.hpp"
 if ($37) {
  $38 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
  $39 = HEAP32[$38>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $39;
 } else {
  $40 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $40;
 }
 $5 = $41; //@line 102 "./src/cpp/unrar/array.hpp"
 $42 = HEAP32[$7>>2]|0; //@line 104 "./src/cpp/unrar/array.hpp"
 $43 = $5; //@line 104 "./src/cpp/unrar/array.hpp"
 $44 = ($43*40)|0; //@line 104 "./src/cpp/unrar/array.hpp"
 $45 = (_realloc($42,$44)|0); //@line 104 "./src/cpp/unrar/array.hpp"
 $6 = $45; //@line 104 "./src/cpp/unrar/array.hpp"
 $46 = $6; //@line 105 "./src/cpp/unrar/array.hpp"
 $47 = ($46|0)==(0|0); //@line 105 "./src/cpp/unrar/array.hpp"
 if ($47) {
  __ZN12ErrorHandler11MemoryErrorEv(756); //@line 106 "./src/cpp/unrar/array.hpp"
 }
 $48 = $6; //@line 107 "./src/cpp/unrar/array.hpp"
 HEAP32[$7>>2] = $48; //@line 107 "./src/cpp/unrar/array.hpp"
 $49 = $5; //@line 108 "./src/cpp/unrar/array.hpp"
 $50 = ((($7)) + 8|0); //@line 108 "./src/cpp/unrar/array.hpp"
 HEAP32[$50>>2] = $49; //@line 108 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
}
function __ZN5RarVM8ReadDataER8BitInput($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $switch$split2D = 0, $switch$split32D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 740 "./src/cpp/unrar/rarvm.cpp"
 $5 = (__ZN8BitInput8fgetbitsEv($4)|0); //@line 740 "./src/cpp/unrar/rarvm.cpp"
 $3 = $5; //@line 740 "./src/cpp/unrar/rarvm.cpp"
 $6 = $3; //@line 741 "./src/cpp/unrar/rarvm.cpp"
 $7 = $6 & 49152; //@line 741 "./src/cpp/unrar/rarvm.cpp"
 $switch$split2D = ($7|0)<(16384);
 L1: do {
  if ($switch$split2D) {
   switch ($7|0) {
   case 0:  {
    break;
   }
   default: {
    break L1;
   }
   }
   $8 = $2; //@line 744 "./src/cpp/unrar/rarvm.cpp"
   __ZN8BitInput8faddbitsEj($8,6); //@line 744 "./src/cpp/unrar/rarvm.cpp"
   $9 = $3; //@line 745 "./src/cpp/unrar/rarvm.cpp"
   $10 = $9 >>> 10; //@line 745 "./src/cpp/unrar/rarvm.cpp"
   $11 = $10 & 15; //@line 745 "./src/cpp/unrar/rarvm.cpp"
   $1 = $11; //@line 745 "./src/cpp/unrar/rarvm.cpp"
   $40 = $1; //@line 771 "./src/cpp/unrar/rarvm.cpp"
   STACKTOP = sp;return ($40|0); //@line 771 "./src/cpp/unrar/rarvm.cpp"
  } else {
   $switch$split32D = ($7|0)<(32768);
   if (!($switch$split32D)) {
    switch ($7|0) {
    case 32768:  {
     break;
    }
    default: {
     break L1;
    }
    }
    $24 = $2; //@line 759 "./src/cpp/unrar/rarvm.cpp"
    __ZN8BitInput8faddbitsEj($24,2); //@line 759 "./src/cpp/unrar/rarvm.cpp"
    $25 = $2; //@line 760 "./src/cpp/unrar/rarvm.cpp"
    $26 = (__ZN8BitInput8fgetbitsEv($25)|0); //@line 760 "./src/cpp/unrar/rarvm.cpp"
    $3 = $26; //@line 760 "./src/cpp/unrar/rarvm.cpp"
    $27 = $2; //@line 761 "./src/cpp/unrar/rarvm.cpp"
    __ZN8BitInput8faddbitsEj($27,16); //@line 761 "./src/cpp/unrar/rarvm.cpp"
    $28 = $3; //@line 762 "./src/cpp/unrar/rarvm.cpp"
    $1 = $28; //@line 762 "./src/cpp/unrar/rarvm.cpp"
    $40 = $1; //@line 771 "./src/cpp/unrar/rarvm.cpp"
    STACKTOP = sp;return ($40|0); //@line 771 "./src/cpp/unrar/rarvm.cpp"
   }
   switch ($7|0) {
   case 16384:  {
    break;
   }
   default: {
    break L1;
   }
   }
   $12 = $3; //@line 747 "./src/cpp/unrar/rarvm.cpp"
   $13 = $12 & 15360; //@line 747 "./src/cpp/unrar/rarvm.cpp"
   $14 = ($13|0)==(0); //@line 747 "./src/cpp/unrar/rarvm.cpp"
   $15 = $3;
   if ($14) {
    $16 = $15 >>> 2; //@line 749 "./src/cpp/unrar/rarvm.cpp"
    $17 = $16 & 255; //@line 749 "./src/cpp/unrar/rarvm.cpp"
    $18 = -256 | $17; //@line 749 "./src/cpp/unrar/rarvm.cpp"
    $3 = $18; //@line 749 "./src/cpp/unrar/rarvm.cpp"
    $19 = $2; //@line 750 "./src/cpp/unrar/rarvm.cpp"
    __ZN8BitInput8faddbitsEj($19,14); //@line 750 "./src/cpp/unrar/rarvm.cpp"
   } else {
    $20 = $15 >>> 6; //@line 754 "./src/cpp/unrar/rarvm.cpp"
    $21 = $20 & 255; //@line 754 "./src/cpp/unrar/rarvm.cpp"
    $3 = $21; //@line 754 "./src/cpp/unrar/rarvm.cpp"
    $22 = $2; //@line 755 "./src/cpp/unrar/rarvm.cpp"
    __ZN8BitInput8faddbitsEj($22,10); //@line 755 "./src/cpp/unrar/rarvm.cpp"
   }
   $23 = $3; //@line 757 "./src/cpp/unrar/rarvm.cpp"
   $1 = $23; //@line 757 "./src/cpp/unrar/rarvm.cpp"
   $40 = $1; //@line 771 "./src/cpp/unrar/rarvm.cpp"
   STACKTOP = sp;return ($40|0); //@line 771 "./src/cpp/unrar/rarvm.cpp"
  }
 } while(0);
 $29 = $2; //@line 764 "./src/cpp/unrar/rarvm.cpp"
 __ZN8BitInput8faddbitsEj($29,2); //@line 764 "./src/cpp/unrar/rarvm.cpp"
 $30 = $2; //@line 765 "./src/cpp/unrar/rarvm.cpp"
 $31 = (__ZN8BitInput8fgetbitsEv($30)|0); //@line 765 "./src/cpp/unrar/rarvm.cpp"
 $32 = $31 << 16; //@line 765 "./src/cpp/unrar/rarvm.cpp"
 $3 = $32; //@line 765 "./src/cpp/unrar/rarvm.cpp"
 $33 = $2; //@line 766 "./src/cpp/unrar/rarvm.cpp"
 __ZN8BitInput8faddbitsEj($33,16); //@line 766 "./src/cpp/unrar/rarvm.cpp"
 $34 = $2; //@line 767 "./src/cpp/unrar/rarvm.cpp"
 $35 = (__ZN8BitInput8fgetbitsEv($34)|0); //@line 767 "./src/cpp/unrar/rarvm.cpp"
 $36 = $3; //@line 767 "./src/cpp/unrar/rarvm.cpp"
 $37 = $36 | $35; //@line 767 "./src/cpp/unrar/rarvm.cpp"
 $3 = $37; //@line 767 "./src/cpp/unrar/rarvm.cpp"
 $38 = $2; //@line 768 "./src/cpp/unrar/rarvm.cpp"
 __ZN8BitInput8faddbitsEj($38,16); //@line 768 "./src/cpp/unrar/rarvm.cpp"
 $39 = $3; //@line 769 "./src/cpp/unrar/rarvm.cpp"
 $1 = $39; //@line 769 "./src/cpp/unrar/rarvm.cpp"
 $40 = $1; //@line 771 "./src/cpp/unrar/rarvm.cpp"
 STACKTOP = sp;return ($40|0); //@line 771 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN5RarVM9SetMemoryEjPhj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5; //@line 776 "./src/cpp/unrar/rarvm.cpp"
 $10 = ($9>>>0)<(262144); //@line 776 "./src/cpp/unrar/rarvm.cpp"
 if (!($10)) {
  STACKTOP = sp;return; //@line 778 "./src/cpp/unrar/rarvm.cpp"
 }
 $11 = $6; //@line 776 "./src/cpp/unrar/rarvm.cpp"
 $12 = ((($8)) + 16|0); //@line 776 "./src/cpp/unrar/rarvm.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 776 "./src/cpp/unrar/rarvm.cpp"
 $14 = $5; //@line 776 "./src/cpp/unrar/rarvm.cpp"
 $15 = (($13) + ($14)|0); //@line 776 "./src/cpp/unrar/rarvm.cpp"
 $16 = ($11|0)!=($15|0); //@line 776 "./src/cpp/unrar/rarvm.cpp"
 if (!($16)) {
  STACKTOP = sp;return; //@line 778 "./src/cpp/unrar/rarvm.cpp"
 }
 $17 = ((($8)) + 16|0); //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $19 = $5; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $20 = (($18) + ($19)|0); //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $21 = $6; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $22 = $7; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $23 = $5; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $24 = (262144 - ($23))|0; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $25 = ($22>>>0)<($24>>>0); //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $26 = $7; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $27 = $5; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $28 = (262144 - ($27))|0; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 $29 = $25 ? $26 : $28; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 _memmove(($20|0),($21|0),($29|0))|0; //@line 777 "./src/cpp/unrar/rarvm.cpp"
 STACKTOP = sp;return; //@line 778 "./src/cpp/unrar/rarvm.cpp"
}
function __ZN11SecPasswordC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 513|0); //@line 58 "./src/cpp/unrar/secpassword.cpp"
 HEAP8[$3>>0] = 0; //@line 58 "./src/cpp/unrar/secpassword.cpp"
 __ZN11SecPassword3SetEPKw($2,55124); //@line 59 "./src/cpp/unrar/secpassword.cpp"
 STACKTOP = sp;return; //@line 60 "./src/cpp/unrar/secpassword.cpp"
}
function __ZN11SecPassword3SetEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 122 "./src/cpp/unrar/secpassword.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 122 "./src/cpp/unrar/secpassword.cpp"
 $7 = ($6|0)==(0); //@line 122 "./src/cpp/unrar/secpassword.cpp"
 $8 = ((($4)) + 512|0);
 if ($7) {
  HEAP8[$8>>0] = 0; //@line 124 "./src/cpp/unrar/secpassword.cpp"
  _memset(($4|0),0,512)|0; //@line 125 "./src/cpp/unrar/secpassword.cpp"
  STACKTOP = sp;return; //@line 132 "./src/cpp/unrar/secpassword.cpp"
 } else {
  HEAP8[$8>>0] = 1; //@line 129 "./src/cpp/unrar/secpassword.cpp"
  $9 = $3; //@line 130 "./src/cpp/unrar/secpassword.cpp"
  $10 = $3; //@line 130 "./src/cpp/unrar/secpassword.cpp"
  $11 = (_wcslen($10)|0); //@line 130 "./src/cpp/unrar/secpassword.cpp"
  $12 = (($11) + 1)|0; //@line 130 "./src/cpp/unrar/secpassword.cpp"
  __ZN11SecPassword7ProcessEPKwjPwjb($4,$9,$12,$4,128,1); //@line 130 "./src/cpp/unrar/secpassword.cpp"
  STACKTOP = sp;return; //@line 132 "./src/cpp/unrar/secpassword.cpp"
 }
}
function __ZN11SecPassword7ProcessEPKwjPwjb($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $12 = $5&1;
 $11 = $12;
 $13 = $6;
 $14 = $9; //@line 103 "./src/cpp/unrar/secpassword.cpp"
 $15 = $7; //@line 103 "./src/cpp/unrar/secpassword.cpp"
 $16 = $8; //@line 103 "./src/cpp/unrar/secpassword.cpp"
 $17 = $10; //@line 103 "./src/cpp/unrar/secpassword.cpp"
 $18 = ($16>>>0)<($17>>>0); //@line 103 "./src/cpp/unrar/secpassword.cpp"
 $19 = $8; //@line 103 "./src/cpp/unrar/secpassword.cpp"
 $20 = $10; //@line 103 "./src/cpp/unrar/secpassword.cpp"
 $21 = $18 ? $19 : $20; //@line 103 "./src/cpp/unrar/secpassword.cpp"
 $22 = $21<<2; //@line 103 "./src/cpp/unrar/secpassword.cpp"
 _memcpy(($14|0),($15|0),($22|0))|0; //@line 103 "./src/cpp/unrar/secpassword.cpp"
 $23 = $9; //@line 104 "./src/cpp/unrar/secpassword.cpp"
 $24 = $10; //@line 104 "./src/cpp/unrar/secpassword.cpp"
 $25 = $24<<2; //@line 104 "./src/cpp/unrar/secpassword.cpp"
 $26 = $11; //@line 104 "./src/cpp/unrar/secpassword.cpp"
 $27 = $26&1; //@line 104 "./src/cpp/unrar/secpassword.cpp"
 $28 = ((($13)) + 513|0); //@line 104 "./src/cpp/unrar/secpassword.cpp"
 $29 = HEAP8[$28>>0]|0; //@line 104 "./src/cpp/unrar/secpassword.cpp"
 $30 = $29&1; //@line 104 "./src/cpp/unrar/secpassword.cpp"
 __Z11SecHideDataPvjbb($23,$25,$27,$30); //@line 104 "./src/cpp/unrar/secpassword.cpp"
 STACKTOP = sp;return; //@line 105 "./src/cpp/unrar/secpassword.cpp"
}
function __Z11SecHideDataPvjbb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $10 = $2&1;
 $6 = $10;
 $11 = $3&1;
 $7 = $11;
 $12 = (_getpid()|0); //@line 202 "./src/cpp/unrar/secpassword.cpp"
 $8 = $12; //@line 202 "./src/cpp/unrar/secpassword.cpp"
 $9 = 0; //@line 207 "./src/cpp/unrar/secpassword.cpp"
 while(1) {
  $13 = $9; //@line 207 "./src/cpp/unrar/secpassword.cpp"
  $14 = $5; //@line 207 "./src/cpp/unrar/secpassword.cpp"
  $15 = ($13>>>0)<($14>>>0); //@line 207 "./src/cpp/unrar/secpassword.cpp"
  if (!($15)) {
   break;
  }
  $16 = $8; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $17 = $9; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $18 = (($16) + ($17))|0; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $19 = (($18) + 75)|0; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $20 = $4; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $21 = $9; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $22 = (($20) + ($21)|0); //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $23 = HEAP8[$22>>0]|0; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $24 = $23&255; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $25 = $24 ^ $19; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $26 = $25&255; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  HEAP8[$22>>0] = $26; //@line 208 "./src/cpp/unrar/secpassword.cpp"
  $27 = $9; //@line 207 "./src/cpp/unrar/secpassword.cpp"
  $28 = (($27) + 1)|0; //@line 207 "./src/cpp/unrar/secpassword.cpp"
  $9 = $28; //@line 207 "./src/cpp/unrar/secpassword.cpp"
 }
 STACKTOP = sp;return; //@line 209 "./src/cpp/unrar/secpassword.cpp"
}
function __ZN11SecPasswordD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __THREW__ = 0;
 invoke_vi(186,($2|0)); //@line 65 "./src/cpp/unrar/secpassword.cpp"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $5 = ___cxa_find_matching_catch_3(0|0)|0;
  $6 = tempRet0;
  ___clang_call_terminate($5); //@line 65 "./src/cpp/unrar/secpassword.cpp"
  // unreachable; //@line 65 "./src/cpp/unrar/secpassword.cpp"
 } else {
  STACKTOP = sp;return; //@line 66 "./src/cpp/unrar/secpassword.cpp"
 }
}
function __ZN11SecPassword5CleanEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 512|0); //@line 71 "./src/cpp/unrar/secpassword.cpp"
 HEAP8[$3>>0] = 0; //@line 71 "./src/cpp/unrar/secpassword.cpp"
 __Z9cleandataPvj($2,512); //@line 72 "./src/cpp/unrar/secpassword.cpp"
 STACKTOP = sp;return; //@line 73 "./src/cpp/unrar/secpassword.cpp"
}
function __Z9cleandataPvj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 86 "./src/cpp/unrar/secpassword.cpp"
 $4 = $6; //@line 86 "./src/cpp/unrar/secpassword.cpp"
 $5 = 0; //@line 87 "./src/cpp/unrar/secpassword.cpp"
 while(1) {
  $7 = $5; //@line 87 "./src/cpp/unrar/secpassword.cpp"
  $8 = $3; //@line 87 "./src/cpp/unrar/secpassword.cpp"
  $9 = ($7>>>0)<($8>>>0); //@line 87 "./src/cpp/unrar/secpassword.cpp"
  if (!($9)) {
   break;
  }
  $10 = $4; //@line 88 "./src/cpp/unrar/secpassword.cpp"
  $11 = $5; //@line 88 "./src/cpp/unrar/secpassword.cpp"
  $12 = (($10) + ($11)|0); //@line 88 "./src/cpp/unrar/secpassword.cpp"
  HEAP8[$12>>0] = 0; //@line 88 "./src/cpp/unrar/secpassword.cpp"
  $13 = $5; //@line 87 "./src/cpp/unrar/secpassword.cpp"
  $14 = (($13) + 1)|0; //@line 87 "./src/cpp/unrar/secpassword.cpp"
  $5 = $14; //@line 87 "./src/cpp/unrar/secpassword.cpp"
 }
 STACKTOP = sp;return; //@line 90 "./src/cpp/unrar/secpassword.cpp"
}
function __ZN11SecPassword3GetEPwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 512|0); //@line 110 "./src/cpp/unrar/secpassword.cpp"
 $8 = HEAP8[$7>>0]|0; //@line 110 "./src/cpp/unrar/secpassword.cpp"
 $9 = $8&1; //@line 110 "./src/cpp/unrar/secpassword.cpp"
 if ($9) {
  $10 = $4; //@line 112 "./src/cpp/unrar/secpassword.cpp"
  $11 = $5; //@line 112 "./src/cpp/unrar/secpassword.cpp"
  __ZN11SecPassword7ProcessEPKwjPwjb($6,$6,128,$10,$11,0); //@line 112 "./src/cpp/unrar/secpassword.cpp"
  $12 = $4; //@line 113 "./src/cpp/unrar/secpassword.cpp"
  $13 = $5; //@line 113 "./src/cpp/unrar/secpassword.cpp"
  $14 = (($13) - 1)|0; //@line 113 "./src/cpp/unrar/secpassword.cpp"
  $15 = (($12) + ($14<<2)|0); //@line 113 "./src/cpp/unrar/secpassword.cpp"
  $$sink = $15;
  HEAP32[$$sink>>2] = 0;
  STACKTOP = sp;return; //@line 117 "./src/cpp/unrar/secpassword.cpp"
 } else {
  $16 = $4; //@line 116 "./src/cpp/unrar/secpassword.cpp"
  $$sink = $16;
  HEAP32[$$sink>>2] = 0;
  STACKTOP = sp;return; //@line 117 "./src/cpp/unrar/secpassword.cpp"
 }
}
function __ZN11SecPasswordeqERS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1040|0);
 $4 = sp + 512|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 __ZN11SecPassword3GetEPwj($7,$4,128); //@line 152 "./src/cpp/unrar/secpassword.cpp"
 $8 = $3; //@line 153 "./src/cpp/unrar/secpassword.cpp"
 __ZN11SecPassword3GetEPwj($8,$5,128); //@line 153 "./src/cpp/unrar/secpassword.cpp"
 $9 = (_wcscmp($4,$5)|0); //@line 154 "./src/cpp/unrar/secpassword.cpp"
 $10 = ($9|0)==(0); //@line 154 "./src/cpp/unrar/secpassword.cpp"
 $11 = $10&1; //@line 154 "./src/cpp/unrar/secpassword.cpp"
 $6 = $11; //@line 154 "./src/cpp/unrar/secpassword.cpp"
 __Z9cleandataPvj($4,128); //@line 155 "./src/cpp/unrar/secpassword.cpp"
 __Z9cleandataPvj($5,128); //@line 156 "./src/cpp/unrar/secpassword.cpp"
 $12 = $6; //@line 157 "./src/cpp/unrar/secpassword.cpp"
 $13 = $12&1; //@line 157 "./src/cpp/unrar/secpassword.cpp"
 STACKTOP = sp;return ($13|0); //@line 157 "./src/cpp/unrar/secpassword.cpp"
}
function __ZN8RijndaelC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP8[56034]|0; //@line 66 "./src/cpp/unrar/rijndael.cpp"
 $4 = $3&255; //@line 66 "./src/cpp/unrar/rijndael.cpp"
 $5 = ($4|0)==(0); //@line 66 "./src/cpp/unrar/rijndael.cpp"
 if ($5) {
  __ZN8Rijndael14GenerateTablesEv($2); //@line 67 "./src/cpp/unrar/rijndael.cpp"
 }
 HEAP8[$2>>0] = 1; //@line 68 "./src/cpp/unrar/rijndael.cpp"
 STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/rijndael.cpp"
}
function __ZN8Rijndael14GenerateTablesEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 800|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(800|0);
 $2 = sp + 288|0;
 $3 = sp + 32|0;
 $1 = $0;
 $4 = 0; //@line 333 "./src/cpp/unrar/rijndael.cpp"
 $5 = 1; //@line 333 "./src/cpp/unrar/rijndael.cpp"
 while(1) {
  $10 = $5; //@line 336 "./src/cpp/unrar/rijndael.cpp"
  $11 = $10&255; //@line 336 "./src/cpp/unrar/rijndael.cpp"
  $12 = $4; //@line 336 "./src/cpp/unrar/rijndael.cpp"
  $13 = (($2) + ($12)|0); //@line 336 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$13>>0] = $11; //@line 336 "./src/cpp/unrar/rijndael.cpp"
  $14 = $5; //@line 337 "./src/cpp/unrar/rijndael.cpp"
  $15 = $14&255; //@line 337 "./src/cpp/unrar/rijndael.cpp"
  $16 = $4; //@line 337 "./src/cpp/unrar/rijndael.cpp"
  $17 = (($16) + 255)|0; //@line 337 "./src/cpp/unrar/rijndael.cpp"
  $18 = (($2) + ($17)|0); //@line 337 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$18>>0] = $15; //@line 337 "./src/cpp/unrar/rijndael.cpp"
  $19 = $4; //@line 338 "./src/cpp/unrar/rijndael.cpp"
  $20 = (($19) + 1)|0; //@line 338 "./src/cpp/unrar/rijndael.cpp"
  $4 = $20; //@line 338 "./src/cpp/unrar/rijndael.cpp"
  $21 = $19&255; //@line 338 "./src/cpp/unrar/rijndael.cpp"
  $22 = $5; //@line 338 "./src/cpp/unrar/rijndael.cpp"
  $23 = (($3) + ($22)|0); //@line 338 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$23>>0] = $21; //@line 338 "./src/cpp/unrar/rijndael.cpp"
  $24 = $5; //@line 339 "./src/cpp/unrar/rijndael.cpp"
  $25 = $24 << 1; //@line 339 "./src/cpp/unrar/rijndael.cpp"
  $26 = $5; //@line 339 "./src/cpp/unrar/rijndael.cpp"
  $27 = $26 & 128; //@line 339 "./src/cpp/unrar/rijndael.cpp"
  $28 = ($27|0)!=(0); //@line 339 "./src/cpp/unrar/rijndael.cpp"
  $29 = $28 ? 283 : 0; //@line 339 "./src/cpp/unrar/rijndael.cpp"
  $30 = $25 ^ $29; //@line 339 "./src/cpp/unrar/rijndael.cpp"
  $31 = $5; //@line 339 "./src/cpp/unrar/rijndael.cpp"
  $32 = $31 ^ $30; //@line 339 "./src/cpp/unrar/rijndael.cpp"
  $5 = $32; //@line 339 "./src/cpp/unrar/rijndael.cpp"
  $33 = $5; //@line 340 "./src/cpp/unrar/rijndael.cpp"
  $34 = ($33|0)!=(1); //@line 340 "./src/cpp/unrar/rijndael.cpp"
  if (!($34)) {
   break;
  }
 }
 $6 = 0; //@line 342 "./src/cpp/unrar/rijndael.cpp"
 $7 = 1; //@line 342 "./src/cpp/unrar/rijndael.cpp"
 while(1) {
  $35 = $6; //@line 342 "./src/cpp/unrar/rijndael.cpp"
  $36 = ($35>>>0)<(30); //@line 342 "./src/cpp/unrar/rijndael.cpp"
  if (!($36)) {
   break;
  }
  $37 = $7; //@line 344 "./src/cpp/unrar/rijndael.cpp"
  $38 = $37&255; //@line 344 "./src/cpp/unrar/rijndael.cpp"
  $39 = $6; //@line 344 "./src/cpp/unrar/rijndael.cpp"
  $40 = (56290 + ($39)|0); //@line 344 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$40>>0] = $38; //@line 344 "./src/cpp/unrar/rijndael.cpp"
  $41 = $7; //@line 345 "./src/cpp/unrar/rijndael.cpp"
  $42 = $41 << 1; //@line 345 "./src/cpp/unrar/rijndael.cpp"
  $43 = $7; //@line 345 "./src/cpp/unrar/rijndael.cpp"
  $44 = $43 & 128; //@line 345 "./src/cpp/unrar/rijndael.cpp"
  $45 = ($44|0)!=(0); //@line 345 "./src/cpp/unrar/rijndael.cpp"
  $46 = $45 ? 283 : 0; //@line 345 "./src/cpp/unrar/rijndael.cpp"
  $47 = $42 ^ $46; //@line 345 "./src/cpp/unrar/rijndael.cpp"
  $7 = $47; //@line 345 "./src/cpp/unrar/rijndael.cpp"
  $48 = $6; //@line 342 "./src/cpp/unrar/rijndael.cpp"
  $49 = (($48) + 1)|0; //@line 342 "./src/cpp/unrar/rijndael.cpp"
  $6 = $49; //@line 342 "./src/cpp/unrar/rijndael.cpp"
 }
 $8 = 0; //@line 347 "./src/cpp/unrar/rijndael.cpp"
 while(1) {
  $50 = $8; //@line 347 "./src/cpp/unrar/rijndael.cpp"
  $51 = ($50|0)<(256); //@line 347 "./src/cpp/unrar/rijndael.cpp"
  if (!($51)) {
   break;
  }
  $52 = $8; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $53 = $52&255; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $54 = ($53<<24>>24)!=(0); //@line 349 "./src/cpp/unrar/rijndael.cpp"
  if ($54) {
   $55 = $8; //@line 349 "./src/cpp/unrar/rijndael.cpp"
   $56 = $55&255; //@line 349 "./src/cpp/unrar/rijndael.cpp"
   $57 = $56&255; //@line 349 "./src/cpp/unrar/rijndael.cpp"
   $58 = (($3) + ($57)|0); //@line 349 "./src/cpp/unrar/rijndael.cpp"
   $59 = HEAP8[$58>>0]|0; //@line 349 "./src/cpp/unrar/rijndael.cpp"
   $60 = $59&255; //@line 349 "./src/cpp/unrar/rijndael.cpp"
   $61 = (255 - ($60))|0; //@line 349 "./src/cpp/unrar/rijndael.cpp"
   $62 = (($2) + ($61)|0); //@line 349 "./src/cpp/unrar/rijndael.cpp"
   $63 = HEAP8[$62>>0]|0; //@line 349 "./src/cpp/unrar/rijndael.cpp"
   $64 = $63&255; //@line 349 "./src/cpp/unrar/rijndael.cpp"
   $65 = $64;
  } else {
   $65 = 0;
  }
  $5 = $65; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $66 = $5; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $67 = $66 << 1; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $68 = $5; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $69 = $68 << 2; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $70 = $67 ^ $69; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $71 = $5; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $72 = $71 << 3; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $73 = $70 ^ $72; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $74 = $5; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $75 = $74 << 4; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $76 = $73 ^ $75; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $77 = $5; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $78 = $77 ^ $76; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $5 = $78; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $79 = $5; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $80 = $5; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $81 = $80 >> 8; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $82 = $79 ^ $81; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $83 = 99 ^ $82; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $84 = $83&255; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $85 = $8; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $86 = (56034 + ($85)|0); //@line 349 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$86>>0] = $84; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $9 = $84; //@line 349 "./src/cpp/unrar/rijndael.cpp"
  $87 = $9; //@line 351 "./src/cpp/unrar/rijndael.cpp"
  $88 = ($87<<24>>24)!=(0); //@line 351 "./src/cpp/unrar/rijndael.cpp"
  if ($88) {
  }
  $89 = $9; //@line 352 "./src/cpp/unrar/rijndael.cpp"
  $90 = ($89<<24>>24)!=(0); //@line 352 "./src/cpp/unrar/rijndael.cpp"
  if ($90) {
  }
  $91 = $8; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $92 = $91&255; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $93 = $92&255; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $5 = $93; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $94 = $5; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $95 = $94 << 1; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $96 = $5; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $97 = $96 << 3; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $98 = $95 ^ $97; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $99 = $5; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $100 = $99 << 6; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $101 = $98 ^ $100; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $5 = $101; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $102 = $5; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $103 = $5; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $104 = $103 >> 8; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $105 = $102 ^ $104; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $106 = 5 ^ $105; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $107 = $106&255; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $108 = ($107<<24>>24)!=(0); //@line 353 "./src/cpp/unrar/rijndael.cpp"
  if ($108) {
   $109 = $8; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $110 = $109&255; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $111 = $110&255; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $5 = $111; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $112 = $5; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $113 = $112 << 1; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $114 = $5; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $115 = $114 << 3; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $116 = $113 ^ $115; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $117 = $5; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $118 = $117 << 6; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $119 = $116 ^ $118; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $5 = $119; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $120 = $5; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $121 = $5; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $122 = $121 >> 8; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $123 = $120 ^ $122; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $124 = 5 ^ $123; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $125 = $124&255; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $126 = $125&255; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $127 = (($3) + ($126)|0); //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $128 = HEAP8[$127>>0]|0; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $129 = $128&255; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $130 = (255 - ($129))|0; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $131 = (($2) + ($130)|0); //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $132 = HEAP8[$131>>0]|0; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $133 = $132&255; //@line 353 "./src/cpp/unrar/rijndael.cpp"
   $135 = $133;
  } else {
   $135 = 0;
  }
  $134 = $135&255; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $9 = $134; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $136 = $8; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $137 = (56320 + ($136)|0); //@line 353 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$137>>0] = $134; //@line 353 "./src/cpp/unrar/rijndael.cpp"
  $138 = $9; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $139 = ($138<<24>>24)!=(0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  if ($139) {
   $140 = $9; //@line 354 "./src/cpp/unrar/rijndael.cpp"
   $141 = $140&255; //@line 354 "./src/cpp/unrar/rijndael.cpp"
   $142 = (($3) + ($141)|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
   $143 = HEAP8[$142>>0]|0; //@line 354 "./src/cpp/unrar/rijndael.cpp"
   $144 = $143&255; //@line 354 "./src/cpp/unrar/rijndael.cpp"
   $145 = (($144) + 104)|0; //@line 354 "./src/cpp/unrar/rijndael.cpp"
   $146 = (($2) + ($145)|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
   $147 = HEAP8[$146>>0]|0; //@line 354 "./src/cpp/unrar/rijndael.cpp"
   $148 = $147&255; //@line 354 "./src/cpp/unrar/rijndael.cpp"
   $150 = $148;
  } else {
   $150 = 0;
  }
  $149 = $150&255; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $151 = $8; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $152 = (56576 + ($151<<2)|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $153 = ((($152)) + 2|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$153>>0] = $149; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $154 = $8; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $155 = (57600 + ($154<<2)|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $156 = ((($155)) + 1|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$156>>0] = $149; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $157 = $8; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $158 = (58624 + ($157<<2)|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$158>>0] = $149; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $159 = $8; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $160 = (59648 + ($159<<2)|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $161 = ((($160)) + 3|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$161>>0] = $149; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $162 = $9; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $163 = $162&255; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $164 = (60672 + ($163<<2)|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $165 = ((($164)) + 2|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$165>>0] = $149; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $166 = $9; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $167 = $166&255; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $168 = (61696 + ($167<<2)|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $169 = ((($168)) + 1|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$169>>0] = $149; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $170 = $9; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $171 = $170&255; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $172 = (62720 + ($171<<2)|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$172>>0] = $149; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $173 = $9; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $174 = $173&255; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $175 = (63744 + ($174<<2)|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $176 = ((($175)) + 3|0); //@line 354 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$176>>0] = $149; //@line 354 "./src/cpp/unrar/rijndael.cpp"
  $177 = $9; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $178 = ($177<<24>>24)!=(0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  if ($178) {
   $179 = $9; //@line 355 "./src/cpp/unrar/rijndael.cpp"
   $180 = $179&255; //@line 355 "./src/cpp/unrar/rijndael.cpp"
   $181 = (($3) + ($180)|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
   $182 = HEAP8[$181>>0]|0; //@line 355 "./src/cpp/unrar/rijndael.cpp"
   $183 = $182&255; //@line 355 "./src/cpp/unrar/rijndael.cpp"
   $184 = (($183) + 199)|0; //@line 355 "./src/cpp/unrar/rijndael.cpp"
   $185 = (($2) + ($184)|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
   $186 = HEAP8[$185>>0]|0; //@line 355 "./src/cpp/unrar/rijndael.cpp"
   $187 = $186&255; //@line 355 "./src/cpp/unrar/rijndael.cpp"
   $189 = $187;
  } else {
   $189 = 0;
  }
  $188 = $189&255; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $190 = $8; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $191 = (56576 + ($190<<2)|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$191>>0] = $188; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $192 = $8; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $193 = (57600 + ($192<<2)|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $194 = ((($193)) + 3|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$194>>0] = $188; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $195 = $8; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $196 = (58624 + ($195<<2)|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $197 = ((($196)) + 2|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$197>>0] = $188; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $198 = $8; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $199 = (59648 + ($198<<2)|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $200 = ((($199)) + 1|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$200>>0] = $188; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $201 = $9; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $202 = $201&255; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $203 = (60672 + ($202<<2)|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$203>>0] = $188; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $204 = $9; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $205 = $204&255; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $206 = (61696 + ($205<<2)|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $207 = ((($206)) + 3|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$207>>0] = $188; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $208 = $9; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $209 = $208&255; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $210 = (62720 + ($209<<2)|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $211 = ((($210)) + 2|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$211>>0] = $188; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $212 = $9; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $213 = $212&255; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $214 = (63744 + ($213<<2)|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $215 = ((($214)) + 1|0); //@line 355 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$215>>0] = $188; //@line 355 "./src/cpp/unrar/rijndael.cpp"
  $216 = $9; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $217 = ($216<<24>>24)!=(0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  if ($217) {
   $218 = $9; //@line 356 "./src/cpp/unrar/rijndael.cpp"
   $219 = $218&255; //@line 356 "./src/cpp/unrar/rijndael.cpp"
   $220 = (($3) + ($219)|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
   $221 = HEAP8[$220>>0]|0; //@line 356 "./src/cpp/unrar/rijndael.cpp"
   $222 = $221&255; //@line 356 "./src/cpp/unrar/rijndael.cpp"
   $223 = (($222) + 238)|0; //@line 356 "./src/cpp/unrar/rijndael.cpp"
   $224 = (($2) + ($223)|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
   $225 = HEAP8[$224>>0]|0; //@line 356 "./src/cpp/unrar/rijndael.cpp"
   $226 = $225&255; //@line 356 "./src/cpp/unrar/rijndael.cpp"
   $228 = $226;
  } else {
   $228 = 0;
  }
  $227 = $228&255; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $229 = $8; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $230 = (56576 + ($229<<2)|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $231 = ((($230)) + 1|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$231>>0] = $227; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $232 = $8; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $233 = (57600 + ($232<<2)|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$233>>0] = $227; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $234 = $8; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $235 = (58624 + ($234<<2)|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $236 = ((($235)) + 3|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$236>>0] = $227; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $237 = $8; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $238 = (59648 + ($237<<2)|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $239 = ((($238)) + 2|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$239>>0] = $227; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $240 = $9; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $241 = $240&255; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $242 = (60672 + ($241<<2)|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $243 = ((($242)) + 1|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$243>>0] = $227; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $244 = $9; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $245 = $244&255; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $246 = (61696 + ($245<<2)|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$246>>0] = $227; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $247 = $9; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $248 = $247&255; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $249 = (62720 + ($248<<2)|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $250 = ((($249)) + 3|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$250>>0] = $227; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $251 = $9; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $252 = $251&255; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $253 = (63744 + ($252<<2)|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $254 = ((($253)) + 2|0); //@line 356 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$254>>0] = $227; //@line 356 "./src/cpp/unrar/rijndael.cpp"
  $255 = $9; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $256 = ($255<<24>>24)!=(0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  if ($256) {
   $257 = $9; //@line 357 "./src/cpp/unrar/rijndael.cpp"
   $258 = $257&255; //@line 357 "./src/cpp/unrar/rijndael.cpp"
   $259 = (($3) + ($258)|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
   $260 = HEAP8[$259>>0]|0; //@line 357 "./src/cpp/unrar/rijndael.cpp"
   $261 = $260&255; //@line 357 "./src/cpp/unrar/rijndael.cpp"
   $262 = (($261) + 223)|0; //@line 357 "./src/cpp/unrar/rijndael.cpp"
   $263 = (($2) + ($262)|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
   $264 = HEAP8[$263>>0]|0; //@line 357 "./src/cpp/unrar/rijndael.cpp"
   $265 = $264&255; //@line 357 "./src/cpp/unrar/rijndael.cpp"
   $267 = $265;
  } else {
   $267 = 0;
  }
  $266 = $267&255; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $268 = $8; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $269 = (56576 + ($268<<2)|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $270 = ((($269)) + 3|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$270>>0] = $266; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $271 = $8; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $272 = (57600 + ($271<<2)|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $273 = ((($272)) + 2|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$273>>0] = $266; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $274 = $8; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $275 = (58624 + ($274<<2)|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $276 = ((($275)) + 1|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$276>>0] = $266; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $277 = $8; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $278 = (59648 + ($277<<2)|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$278>>0] = $266; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $279 = $9; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $280 = $279&255; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $281 = (60672 + ($280<<2)|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $282 = ((($281)) + 3|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$282>>0] = $266; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $283 = $9; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $284 = $283&255; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $285 = (61696 + ($284<<2)|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $286 = ((($285)) + 2|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$286>>0] = $266; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $287 = $9; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $288 = $287&255; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $289 = (62720 + ($288<<2)|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $290 = ((($289)) + 1|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$290>>0] = $266; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $291 = $9; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $292 = $291&255; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $293 = (63744 + ($292<<2)|0); //@line 357 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$293>>0] = $266; //@line 357 "./src/cpp/unrar/rijndael.cpp"
  $294 = $8; //@line 347 "./src/cpp/unrar/rijndael.cpp"
  $295 = (($294) + 1)|0; //@line 347 "./src/cpp/unrar/rijndael.cpp"
  $8 = $295; //@line 347 "./src/cpp/unrar/rijndael.cpp"
 }
 STACKTOP = sp;return; //@line 359 "./src/cpp/unrar/rijndael.cpp"
}
function __ZN8Rijndael4InitEbPKhjS1_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $11 = sp + 32|0;
 $5 = $0;
 $14 = $1&1;
 $6 = $14;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $15 = $5;
 $16 = $8; //@line 83 "./src/cpp/unrar/rijndael.cpp"
 switch ($16|0) {
 case 128:  {
  $10 = 16; //@line 86 "./src/cpp/unrar/rijndael.cpp"
  $$sink = 10;
  label = 5;
  break;
 }
 case 192:  {
  $10 = 24; //@line 90 "./src/cpp/unrar/rijndael.cpp"
  $$sink = 12;
  label = 5;
  break;
 }
 case 256:  {
  $10 = 32; //@line 94 "./src/cpp/unrar/rijndael.cpp"
  $$sink = 14;
  label = 5;
  break;
 }
 default: {
 }
 }
 if ((label|0) == 5) {
  $17 = ((($15)) + 4|0);
  HEAP32[$17>>2] = $$sink;
 }
 $12 = 0; //@line 101 "./src/cpp/unrar/rijndael.cpp"
 while(1) {
  $18 = $12; //@line 101 "./src/cpp/unrar/rijndael.cpp"
  $19 = $10; //@line 101 "./src/cpp/unrar/rijndael.cpp"
  $20 = ($18>>>0)<($19>>>0); //@line 101 "./src/cpp/unrar/rijndael.cpp"
  if (!($20)) {
   break;
  }
  $21 = $7; //@line 102 "./src/cpp/unrar/rijndael.cpp"
  $22 = $12; //@line 102 "./src/cpp/unrar/rijndael.cpp"
  $23 = (($21) + ($22)|0); //@line 102 "./src/cpp/unrar/rijndael.cpp"
  $24 = HEAP8[$23>>0]|0; //@line 102 "./src/cpp/unrar/rijndael.cpp"
  $25 = $12; //@line 102 "./src/cpp/unrar/rijndael.cpp"
  $26 = $25 >>> 2; //@line 102 "./src/cpp/unrar/rijndael.cpp"
  $27 = (($11) + ($26<<2)|0); //@line 102 "./src/cpp/unrar/rijndael.cpp"
  $28 = $12; //@line 102 "./src/cpp/unrar/rijndael.cpp"
  $29 = $28 & 3; //@line 102 "./src/cpp/unrar/rijndael.cpp"
  $30 = (($27) + ($29)|0); //@line 102 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$30>>0] = $24; //@line 102 "./src/cpp/unrar/rijndael.cpp"
  $31 = $12; //@line 101 "./src/cpp/unrar/rijndael.cpp"
  $32 = (($31) + 1)|0; //@line 101 "./src/cpp/unrar/rijndael.cpp"
  $12 = $32; //@line 101 "./src/cpp/unrar/rijndael.cpp"
 }
 $33 = $9; //@line 104 "./src/cpp/unrar/rijndael.cpp"
 $34 = ($33|0)==(0|0); //@line 104 "./src/cpp/unrar/rijndael.cpp"
 L12: do {
  if ($34) {
   $35 = ((($15)) + 8|0); //@line 105 "./src/cpp/unrar/rijndael.cpp"
   ;HEAP32[$35>>2]=0|0;HEAP32[$35+4>>2]=0|0;HEAP32[$35+8>>2]=0|0;HEAP32[$35+12>>2]=0|0; //@line 105 "./src/cpp/unrar/rijndael.cpp"
  } else {
   $13 = 0; //@line 107 "./src/cpp/unrar/rijndael.cpp"
   while(1) {
    $36 = $13; //@line 107 "./src/cpp/unrar/rijndael.cpp"
    $37 = ($36|0)<(16); //@line 107 "./src/cpp/unrar/rijndael.cpp"
    if (!($37)) {
     break L12;
    }
    $38 = $9; //@line 108 "./src/cpp/unrar/rijndael.cpp"
    $39 = $13; //@line 108 "./src/cpp/unrar/rijndael.cpp"
    $40 = (($38) + ($39)|0); //@line 108 "./src/cpp/unrar/rijndael.cpp"
    $41 = HEAP8[$40>>0]|0; //@line 108 "./src/cpp/unrar/rijndael.cpp"
    $42 = ((($15)) + 8|0); //@line 108 "./src/cpp/unrar/rijndael.cpp"
    $43 = $13; //@line 108 "./src/cpp/unrar/rijndael.cpp"
    $44 = (($42) + ($43)|0); //@line 108 "./src/cpp/unrar/rijndael.cpp"
    HEAP8[$44>>0] = $41; //@line 108 "./src/cpp/unrar/rijndael.cpp"
    $45 = $13; //@line 107 "./src/cpp/unrar/rijndael.cpp"
    $46 = (($45) + 1)|0; //@line 107 "./src/cpp/unrar/rijndael.cpp"
    $13 = $46; //@line 107 "./src/cpp/unrar/rijndael.cpp"
   }
  }
 } while(0);
 __ZN8Rijndael8keySchedEPA4_h($15,$11); //@line 110 "./src/cpp/unrar/rijndael.cpp"
 $47 = $6; //@line 112 "./src/cpp/unrar/rijndael.cpp"
 $48 = $47&1; //@line 112 "./src/cpp/unrar/rijndael.cpp"
 if ($48) {
  STACKTOP = sp;return; //@line 114 "./src/cpp/unrar/rijndael.cpp"
 }
 __ZN8Rijndael11keyEncToDecEv($15); //@line 113 "./src/cpp/unrar/rijndael.cpp"
 STACKTOP = sp;return; //@line 114 "./src/cpp/unrar/rijndael.cpp"
}
function __ZN8Rijndael8keySchedEPA4_h($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $7 = sp + 48|0;
 $2 = $0;
 $3 = $1;
 $15 = $2;
 $5 = 0; //@line 228 "./src/cpp/unrar/rijndael.cpp"
 $16 = ((($15)) + 4|0); //@line 232 "./src/cpp/unrar/rijndael.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 232 "./src/cpp/unrar/rijndael.cpp"
 $18 = (($17) - 6)|0; //@line 232 "./src/cpp/unrar/rijndael.cpp"
 $6 = $18; //@line 232 "./src/cpp/unrar/rijndael.cpp"
 $19 = $3; //@line 238 "./src/cpp/unrar/rijndael.cpp"
 dest=$7; src=$19; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 238 "./src/cpp/unrar/rijndael.cpp"
 $8 = 0; //@line 240 "./src/cpp/unrar/rijndael.cpp"
 $9 = 0; //@line 241 "./src/cpp/unrar/rijndael.cpp"
 $4 = 0; //@line 244 "./src/cpp/unrar/rijndael.cpp"
 while(1) {
  $20 = $4; //@line 244 "./src/cpp/unrar/rijndael.cpp"
  $21 = $6; //@line 244 "./src/cpp/unrar/rijndael.cpp"
  $22 = ($20|0)<($21|0); //@line 244 "./src/cpp/unrar/rijndael.cpp"
  if (!($22)) {
   break;
  }
  $23 = $8; //@line 244 "./src/cpp/unrar/rijndael.cpp"
  $24 = ((($15)) + 4|0); //@line 244 "./src/cpp/unrar/rijndael.cpp"
  $25 = HEAP32[$24>>2]|0; //@line 244 "./src/cpp/unrar/rijndael.cpp"
  $26 = ($23|0)<=($25|0); //@line 244 "./src/cpp/unrar/rijndael.cpp"
  if (!($26)) {
   break;
  }
  while(1) {
   $27 = $4; //@line 246 "./src/cpp/unrar/rijndael.cpp"
   $28 = $6; //@line 246 "./src/cpp/unrar/rijndael.cpp"
   $29 = ($27|0)<($28|0); //@line 246 "./src/cpp/unrar/rijndael.cpp"
   $30 = $9; //@line 246 "./src/cpp/unrar/rijndael.cpp"
   $31 = ($30|0)<(4); //@line 246 "./src/cpp/unrar/rijndael.cpp"
   $32 = $29 ? $31 : 0; //@line 246 "./src/cpp/unrar/rijndael.cpp"
   if (!($32)) {
    break;
   }
   $10 = 0; //@line 247 "./src/cpp/unrar/rijndael.cpp"
   while(1) {
    $33 = $10; //@line 247 "./src/cpp/unrar/rijndael.cpp"
    $34 = ($33|0)<(4); //@line 247 "./src/cpp/unrar/rijndael.cpp"
    $35 = $4;
    if (!($34)) {
     break;
    }
    $36 = (($7) + ($35<<2)|0); //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $37 = $10; //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $38 = (($36) + ($37)|0); //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $39 = HEAP8[$38>>0]|0; //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $40 = ((($15)) + 24|0); //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $41 = $8; //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $42 = (($40) + ($41<<4)|0); //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $43 = $9; //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $44 = (($42) + ($43<<2)|0); //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $45 = $10; //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $46 = (($44) + ($45)|0); //@line 248 "./src/cpp/unrar/rijndael.cpp"
    HEAP8[$46>>0] = $39; //@line 248 "./src/cpp/unrar/rijndael.cpp"
    $47 = $10; //@line 247 "./src/cpp/unrar/rijndael.cpp"
    $48 = (($47) + 1)|0; //@line 247 "./src/cpp/unrar/rijndael.cpp"
    $10 = $48; //@line 247 "./src/cpp/unrar/rijndael.cpp"
   }
   $49 = (($35) + 1)|0; //@line 246 "./src/cpp/unrar/rijndael.cpp"
   $4 = $49; //@line 246 "./src/cpp/unrar/rijndael.cpp"
   $50 = $9; //@line 246 "./src/cpp/unrar/rijndael.cpp"
   $51 = (($50) + 1)|0; //@line 246 "./src/cpp/unrar/rijndael.cpp"
   $9 = $51; //@line 246 "./src/cpp/unrar/rijndael.cpp"
  }
  $52 = $9; //@line 250 "./src/cpp/unrar/rijndael.cpp"
  $53 = ($52|0)==(4); //@line 250 "./src/cpp/unrar/rijndael.cpp"
  if (!($53)) {
   continue;
  }
  $54 = $8; //@line 252 "./src/cpp/unrar/rijndael.cpp"
  $55 = (($54) + 1)|0; //@line 252 "./src/cpp/unrar/rijndael.cpp"
  $8 = $55; //@line 252 "./src/cpp/unrar/rijndael.cpp"
  $9 = 0; //@line 253 "./src/cpp/unrar/rijndael.cpp"
 }
 L13: while(1) {
  $56 = $8; //@line 257 "./src/cpp/unrar/rijndael.cpp"
  $57 = ((($15)) + 4|0); //@line 257 "./src/cpp/unrar/rijndael.cpp"
  $58 = HEAP32[$57>>2]|0; //@line 257 "./src/cpp/unrar/rijndael.cpp"
  $59 = ($56|0)<=($58|0); //@line 257 "./src/cpp/unrar/rijndael.cpp"
  if (!($59)) {
   break;
  }
  $60 = $6; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $61 = (($60) - 1)|0; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $62 = (($7) + ($61<<2)|0); //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $63 = ((($62)) + 1|0); //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $64 = HEAP8[$63>>0]|0; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $65 = $64&255; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $66 = (56034 + ($65)|0); //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $67 = HEAP8[$66>>0]|0; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $68 = $67&255; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $69 = HEAP8[$7>>0]|0; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $70 = $69&255; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $71 = $70 ^ $68; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $72 = $71&255; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$7>>0] = $72; //@line 259 "./src/cpp/unrar/rijndael.cpp"
  $73 = $6; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $74 = (($73) - 1)|0; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $75 = (($7) + ($74<<2)|0); //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $76 = ((($75)) + 2|0); //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $77 = HEAP8[$76>>0]|0; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $78 = $77&255; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $79 = (56034 + ($78)|0); //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $80 = HEAP8[$79>>0]|0; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $81 = $80&255; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $82 = ((($7)) + 1|0); //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $83 = HEAP8[$82>>0]|0; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $84 = $83&255; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $85 = $84 ^ $81; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $86 = $85&255; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$82>>0] = $86; //@line 260 "./src/cpp/unrar/rijndael.cpp"
  $87 = $6; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $88 = (($87) - 1)|0; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $89 = (($7) + ($88<<2)|0); //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $90 = ((($89)) + 3|0); //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $91 = HEAP8[$90>>0]|0; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $92 = $91&255; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $93 = (56034 + ($92)|0); //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $94 = HEAP8[$93>>0]|0; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $95 = $94&255; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $96 = ((($7)) + 2|0); //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $97 = HEAP8[$96>>0]|0; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $98 = $97&255; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $99 = $98 ^ $95; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $100 = $99&255; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$96>>0] = $100; //@line 261 "./src/cpp/unrar/rijndael.cpp"
  $101 = $6; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $102 = (($101) - 1)|0; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $103 = (($7) + ($102<<2)|0); //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $104 = HEAP8[$103>>0]|0; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $105 = $104&255; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $106 = (56034 + ($105)|0); //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $107 = HEAP8[$106>>0]|0; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $108 = $107&255; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $109 = ((($7)) + 3|0); //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $110 = HEAP8[$109>>0]|0; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $111 = $110&255; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $112 = $111 ^ $108; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $113 = $112&255; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$109>>0] = $113; //@line 262 "./src/cpp/unrar/rijndael.cpp"
  $114 = $5; //@line 263 "./src/cpp/unrar/rijndael.cpp"
  $115 = (($114) + 1)|0; //@line 263 "./src/cpp/unrar/rijndael.cpp"
  $5 = $115; //@line 263 "./src/cpp/unrar/rijndael.cpp"
  $116 = (56290 + ($114)|0); //@line 263 "./src/cpp/unrar/rijndael.cpp"
  $117 = HEAP8[$116>>0]|0; //@line 263 "./src/cpp/unrar/rijndael.cpp"
  $118 = $117&255; //@line 263 "./src/cpp/unrar/rijndael.cpp"
  $119 = HEAP8[$7>>0]|0; //@line 263 "./src/cpp/unrar/rijndael.cpp"
  $120 = $119&255; //@line 263 "./src/cpp/unrar/rijndael.cpp"
  $121 = $120 ^ $118; //@line 263 "./src/cpp/unrar/rijndael.cpp"
  $122 = $121&255; //@line 263 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$7>>0] = $122; //@line 263 "./src/cpp/unrar/rijndael.cpp"
  $123 = $6; //@line 265 "./src/cpp/unrar/rijndael.cpp"
  $124 = ($123|0)!=(8); //@line 265 "./src/cpp/unrar/rijndael.cpp"
  $4 = 1;
  L16: do {
   if ($124) {
    while(1) {
     $125 = $4; //@line 266 "./src/cpp/unrar/rijndael.cpp"
     $126 = $6; //@line 266 "./src/cpp/unrar/rijndael.cpp"
     $127 = ($125|0)<($126|0); //@line 266 "./src/cpp/unrar/rijndael.cpp"
     if (!($127)) {
      break L16;
     }
     $11 = 0; //@line 267 "./src/cpp/unrar/rijndael.cpp"
     while(1) {
      $128 = $11; //@line 267 "./src/cpp/unrar/rijndael.cpp"
      $129 = ($128|0)<(4); //@line 267 "./src/cpp/unrar/rijndael.cpp"
      $130 = $4;
      if (!($129)) {
       break;
      }
      $131 = (($130) - 1)|0; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $132 = (($7) + ($131<<2)|0); //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $133 = $11; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $134 = (($132) + ($133)|0); //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $135 = HEAP8[$134>>0]|0; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $136 = $135&255; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $137 = $4; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $138 = (($7) + ($137<<2)|0); //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $139 = $11; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $140 = (($138) + ($139)|0); //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $141 = HEAP8[$140>>0]|0; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $142 = $141&255; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $143 = $142 ^ $136; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $144 = $143&255; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      HEAP8[$140>>0] = $144; //@line 268 "./src/cpp/unrar/rijndael.cpp"
      $145 = $11; //@line 267 "./src/cpp/unrar/rijndael.cpp"
      $146 = (($145) + 1)|0; //@line 267 "./src/cpp/unrar/rijndael.cpp"
      $11 = $146; //@line 267 "./src/cpp/unrar/rijndael.cpp"
     }
     $147 = (($130) + 1)|0; //@line 266 "./src/cpp/unrar/rijndael.cpp"
     $4 = $147; //@line 266 "./src/cpp/unrar/rijndael.cpp"
    }
   } else {
    while(1) {
     $148 = $4; //@line 271 "./src/cpp/unrar/rijndael.cpp"
     $149 = $6; //@line 271 "./src/cpp/unrar/rijndael.cpp"
     $150 = (($149|0) / 2)&-1; //@line 271 "./src/cpp/unrar/rijndael.cpp"
     $151 = ($148|0)<($150|0); //@line 271 "./src/cpp/unrar/rijndael.cpp"
     if (!($151)) {
      break;
     }
     $12 = 0; //@line 272 "./src/cpp/unrar/rijndael.cpp"
     while(1) {
      $152 = $12; //@line 272 "./src/cpp/unrar/rijndael.cpp"
      $153 = ($152|0)<(4); //@line 272 "./src/cpp/unrar/rijndael.cpp"
      $154 = $4;
      if (!($153)) {
       break;
      }
      $155 = (($154) - 1)|0; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $156 = (($7) + ($155<<2)|0); //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $157 = $12; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $158 = (($156) + ($157)|0); //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $159 = HEAP8[$158>>0]|0; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $160 = $159&255; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $161 = $4; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $162 = (($7) + ($161<<2)|0); //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $163 = $12; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $164 = (($162) + ($163)|0); //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $165 = HEAP8[$164>>0]|0; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $166 = $165&255; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $167 = $166 ^ $160; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $168 = $167&255; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      HEAP8[$164>>0] = $168; //@line 273 "./src/cpp/unrar/rijndael.cpp"
      $169 = $12; //@line 272 "./src/cpp/unrar/rijndael.cpp"
      $170 = (($169) + 1)|0; //@line 272 "./src/cpp/unrar/rijndael.cpp"
      $12 = $170; //@line 272 "./src/cpp/unrar/rijndael.cpp"
     }
     $171 = (($154) + 1)|0; //@line 271 "./src/cpp/unrar/rijndael.cpp"
     $4 = $171; //@line 271 "./src/cpp/unrar/rijndael.cpp"
    }
    $172 = $6; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $173 = (($172|0) / 2)&-1; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $174 = (($173) - 1)|0; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $175 = (($7) + ($174<<2)|0); //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $176 = HEAP8[$175>>0]|0; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $177 = $176&255; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $178 = (56034 + ($177)|0); //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $179 = HEAP8[$178>>0]|0; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $180 = $179&255; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $181 = $6; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $182 = (($181|0) / 2)&-1; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $183 = (($7) + ($182<<2)|0); //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $184 = HEAP8[$183>>0]|0; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $185 = $184&255; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $186 = $185 ^ $180; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $187 = $186&255; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    HEAP8[$183>>0] = $187; //@line 275 "./src/cpp/unrar/rijndael.cpp"
    $188 = $6; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $189 = (($188|0) / 2)&-1; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $190 = (($189) - 1)|0; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $191 = (($7) + ($190<<2)|0); //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $192 = ((($191)) + 1|0); //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $193 = HEAP8[$192>>0]|0; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $194 = $193&255; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $195 = (56034 + ($194)|0); //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $196 = HEAP8[$195>>0]|0; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $197 = $196&255; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $198 = $6; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $199 = (($198|0) / 2)&-1; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $200 = (($7) + ($199<<2)|0); //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $201 = ((($200)) + 1|0); //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $202 = HEAP8[$201>>0]|0; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $203 = $202&255; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $204 = $203 ^ $197; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $205 = $204&255; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    HEAP8[$201>>0] = $205; //@line 276 "./src/cpp/unrar/rijndael.cpp"
    $206 = $6; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $207 = (($206|0) / 2)&-1; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $208 = (($207) - 1)|0; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $209 = (($7) + ($208<<2)|0); //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $210 = ((($209)) + 2|0); //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $211 = HEAP8[$210>>0]|0; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $212 = $211&255; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $213 = (56034 + ($212)|0); //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $214 = HEAP8[$213>>0]|0; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $215 = $214&255; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $216 = $6; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $217 = (($216|0) / 2)&-1; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $218 = (($7) + ($217<<2)|0); //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $219 = ((($218)) + 2|0); //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $220 = HEAP8[$219>>0]|0; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $221 = $220&255; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $222 = $221 ^ $215; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $223 = $222&255; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    HEAP8[$219>>0] = $223; //@line 277 "./src/cpp/unrar/rijndael.cpp"
    $224 = $6; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $225 = (($224|0) / 2)&-1; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $226 = (($225) - 1)|0; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $227 = (($7) + ($226<<2)|0); //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $228 = ((($227)) + 3|0); //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $229 = HEAP8[$228>>0]|0; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $230 = $229&255; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $231 = (56034 + ($230)|0); //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $232 = HEAP8[$231>>0]|0; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $233 = $232&255; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $234 = $6; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $235 = (($234|0) / 2)&-1; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $236 = (($7) + ($235<<2)|0); //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $237 = ((($236)) + 3|0); //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $238 = HEAP8[$237>>0]|0; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $239 = $238&255; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $240 = $239 ^ $233; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $241 = $240&255; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    HEAP8[$237>>0] = $241; //@line 278 "./src/cpp/unrar/rijndael.cpp"
    $242 = $6; //@line 279 "./src/cpp/unrar/rijndael.cpp"
    $243 = (($242|0) / 2)&-1; //@line 279 "./src/cpp/unrar/rijndael.cpp"
    $244 = (($243) + 1)|0; //@line 279 "./src/cpp/unrar/rijndael.cpp"
    $4 = $244; //@line 279 "./src/cpp/unrar/rijndael.cpp"
    while(1) {
     $245 = $4; //@line 279 "./src/cpp/unrar/rijndael.cpp"
     $246 = $6; //@line 279 "./src/cpp/unrar/rijndael.cpp"
     $247 = ($245|0)<($246|0); //@line 279 "./src/cpp/unrar/rijndael.cpp"
     if (!($247)) {
      break L16;
     }
     $13 = 0; //@line 280 "./src/cpp/unrar/rijndael.cpp"
     while(1) {
      $248 = $13; //@line 280 "./src/cpp/unrar/rijndael.cpp"
      $249 = ($248|0)<(4); //@line 280 "./src/cpp/unrar/rijndael.cpp"
      $250 = $4;
      if (!($249)) {
       break;
      }
      $251 = (($250) - 1)|0; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $252 = (($7) + ($251<<2)|0); //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $253 = $13; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $254 = (($252) + ($253)|0); //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $255 = HEAP8[$254>>0]|0; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $256 = $255&255; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $257 = $4; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $258 = (($7) + ($257<<2)|0); //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $259 = $13; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $260 = (($258) + ($259)|0); //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $261 = HEAP8[$260>>0]|0; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $262 = $261&255; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $263 = $262 ^ $256; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $264 = $263&255; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      HEAP8[$260>>0] = $264; //@line 281 "./src/cpp/unrar/rijndael.cpp"
      $265 = $13; //@line 280 "./src/cpp/unrar/rijndael.cpp"
      $266 = (($265) + 1)|0; //@line 280 "./src/cpp/unrar/rijndael.cpp"
      $13 = $266; //@line 280 "./src/cpp/unrar/rijndael.cpp"
     }
     $267 = (($250) + 1)|0; //@line 279 "./src/cpp/unrar/rijndael.cpp"
     $4 = $267; //@line 279 "./src/cpp/unrar/rijndael.cpp"
    }
   }
  } while(0);
  $4 = 0; //@line 283 "./src/cpp/unrar/rijndael.cpp"
  while(1) {
   $268 = $4; //@line 283 "./src/cpp/unrar/rijndael.cpp"
   $269 = $6; //@line 283 "./src/cpp/unrar/rijndael.cpp"
   $270 = ($268|0)<($269|0); //@line 283 "./src/cpp/unrar/rijndael.cpp"
   if (!($270)) {
    continue L13;
   }
   $271 = $8; //@line 283 "./src/cpp/unrar/rijndael.cpp"
   $272 = ((($15)) + 4|0); //@line 283 "./src/cpp/unrar/rijndael.cpp"
   $273 = HEAP32[$272>>2]|0; //@line 283 "./src/cpp/unrar/rijndael.cpp"
   $274 = ($271|0)<=($273|0); //@line 283 "./src/cpp/unrar/rijndael.cpp"
   if (!($274)) {
    continue L13;
   }
   while(1) {
    $275 = $4; //@line 285 "./src/cpp/unrar/rijndael.cpp"
    $276 = $6; //@line 285 "./src/cpp/unrar/rijndael.cpp"
    $277 = ($275|0)<($276|0); //@line 285 "./src/cpp/unrar/rijndael.cpp"
    $278 = $9; //@line 285 "./src/cpp/unrar/rijndael.cpp"
    $279 = ($278|0)<(4); //@line 285 "./src/cpp/unrar/rijndael.cpp"
    $280 = $277 ? $279 : 0; //@line 285 "./src/cpp/unrar/rijndael.cpp"
    if (!($280)) {
     break;
    }
    $14 = 0; //@line 286 "./src/cpp/unrar/rijndael.cpp"
    while(1) {
     $281 = $14; //@line 286 "./src/cpp/unrar/rijndael.cpp"
     $282 = ($281|0)<(4); //@line 286 "./src/cpp/unrar/rijndael.cpp"
     $283 = $4;
     if (!($282)) {
      break;
     }
     $284 = (($7) + ($283<<2)|0); //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $285 = $14; //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $286 = (($284) + ($285)|0); //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $287 = HEAP8[$286>>0]|0; //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $288 = ((($15)) + 24|0); //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $289 = $8; //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $290 = (($288) + ($289<<4)|0); //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $291 = $9; //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $292 = (($290) + ($291<<2)|0); //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $293 = $14; //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $294 = (($292) + ($293)|0); //@line 287 "./src/cpp/unrar/rijndael.cpp"
     HEAP8[$294>>0] = $287; //@line 287 "./src/cpp/unrar/rijndael.cpp"
     $295 = $14; //@line 286 "./src/cpp/unrar/rijndael.cpp"
     $296 = (($295) + 1)|0; //@line 286 "./src/cpp/unrar/rijndael.cpp"
     $14 = $296; //@line 286 "./src/cpp/unrar/rijndael.cpp"
    }
    $297 = (($283) + 1)|0; //@line 285 "./src/cpp/unrar/rijndael.cpp"
    $4 = $297; //@line 285 "./src/cpp/unrar/rijndael.cpp"
    $298 = $9; //@line 285 "./src/cpp/unrar/rijndael.cpp"
    $299 = (($298) + 1)|0; //@line 285 "./src/cpp/unrar/rijndael.cpp"
    $9 = $299; //@line 285 "./src/cpp/unrar/rijndael.cpp"
   }
   $300 = $9; //@line 288 "./src/cpp/unrar/rijndael.cpp"
   $301 = ($300|0)==(4); //@line 288 "./src/cpp/unrar/rijndael.cpp"
   if (!($301)) {
    continue;
   }
   $302 = $8; //@line 290 "./src/cpp/unrar/rijndael.cpp"
   $303 = (($302) + 1)|0; //@line 290 "./src/cpp/unrar/rijndael.cpp"
   $8 = $303; //@line 290 "./src/cpp/unrar/rijndael.cpp"
   $9 = 0; //@line 291 "./src/cpp/unrar/rijndael.cpp"
  }
 }
 STACKTOP = sp;return; //@line 295 "./src/cpp/unrar/rijndael.cpp"
}
function __ZN8Rijndael11keyEncToDecEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $3 = sp + 24|0;
 $1 = $0;
 $7 = $1;
 $2 = 1; //@line 299 "./src/cpp/unrar/rijndael.cpp"
 while(1) {
  $8 = $2; //@line 299 "./src/cpp/unrar/rijndael.cpp"
  $9 = ((($7)) + 4|0); //@line 299 "./src/cpp/unrar/rijndael.cpp"
  $10 = HEAP32[$9>>2]|0; //@line 299 "./src/cpp/unrar/rijndael.cpp"
  $11 = ($8|0)<($10|0); //@line 299 "./src/cpp/unrar/rijndael.cpp"
  if (!($11)) {
   break;
  }
  $4 = 0; //@line 302 "./src/cpp/unrar/rijndael.cpp"
  while(1) {
   $12 = $4; //@line 302 "./src/cpp/unrar/rijndael.cpp"
   $13 = ($12|0)<(4); //@line 302 "./src/cpp/unrar/rijndael.cpp"
   if (!($13)) {
    break;
   }
   $5 = 0; //@line 303 "./src/cpp/unrar/rijndael.cpp"
   while(1) {
    $14 = $5; //@line 303 "./src/cpp/unrar/rijndael.cpp"
    $15 = ($14|0)<(4); //@line 303 "./src/cpp/unrar/rijndael.cpp"
    if (!($15)) {
     break;
    }
    $16 = ((($7)) + 24|0); //@line 305 "./src/cpp/unrar/rijndael.cpp"
    $17 = $2; //@line 305 "./src/cpp/unrar/rijndael.cpp"
    $18 = (($16) + ($17<<4)|0); //@line 305 "./src/cpp/unrar/rijndael.cpp"
    $19 = $5; //@line 305 "./src/cpp/unrar/rijndael.cpp"
    $20 = (($18) + ($19<<2)|0); //@line 305 "./src/cpp/unrar/rijndael.cpp"
    $6 = $20; //@line 305 "./src/cpp/unrar/rijndael.cpp"
    $21 = $6; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $22 = HEAP8[$21>>0]|0; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $23 = $22&255; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $24 = (63744 + ($23<<2)|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $25 = $4; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $26 = (($24) + ($25)|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $27 = HEAP8[$26>>0]|0; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $28 = $27&255; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $29 = $6; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $30 = ((($29)) + 1|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $31 = HEAP8[$30>>0]|0; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $32 = $31&255; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $33 = (62720 + ($32<<2)|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $34 = $4; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $35 = (($33) + ($34)|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $36 = HEAP8[$35>>0]|0; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $37 = $36&255; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $38 = $28 ^ $37; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $39 = $6; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $40 = ((($39)) + 2|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $41 = HEAP8[$40>>0]|0; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $42 = $41&255; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $43 = (61696 + ($42<<2)|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $44 = $4; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $45 = (($43) + ($44)|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $46 = HEAP8[$45>>0]|0; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $47 = $46&255; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $48 = $38 ^ $47; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $49 = $6; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $50 = ((($49)) + 3|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $51 = HEAP8[$50>>0]|0; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $52 = $51&255; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $53 = (60672 + ($52<<2)|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $54 = $4; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $55 = (($53) + ($54)|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $56 = HEAP8[$55>>0]|0; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $57 = $56&255; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $58 = $48 ^ $57; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $59 = $58&255; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $60 = $5; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $61 = (($3) + ($60<<2)|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $62 = $4; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $63 = (($61) + ($62)|0); //@line 306 "./src/cpp/unrar/rijndael.cpp"
    HEAP8[$63>>0] = $59; //@line 306 "./src/cpp/unrar/rijndael.cpp"
    $64 = $5; //@line 303 "./src/cpp/unrar/rijndael.cpp"
    $65 = (($64) + 1)|0; //@line 303 "./src/cpp/unrar/rijndael.cpp"
    $5 = $65; //@line 303 "./src/cpp/unrar/rijndael.cpp"
   }
   $66 = $4; //@line 302 "./src/cpp/unrar/rijndael.cpp"
   $67 = (($66) + 1)|0; //@line 302 "./src/cpp/unrar/rijndael.cpp"
   $4 = $67; //@line 302 "./src/cpp/unrar/rijndael.cpp"
  }
  $68 = ((($7)) + 24|0); //@line 308 "./src/cpp/unrar/rijndael.cpp"
  $69 = $2; //@line 308 "./src/cpp/unrar/rijndael.cpp"
  $70 = (($68) + ($69<<4)|0); //@line 308 "./src/cpp/unrar/rijndael.cpp"
  dest=$70; src=$3; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 308 "./src/cpp/unrar/rijndael.cpp"
  $71 = $2; //@line 299 "./src/cpp/unrar/rijndael.cpp"
  $72 = (($71) + 1)|0; //@line 299 "./src/cpp/unrar/rijndael.cpp"
  $2 = $72; //@line 299 "./src/cpp/unrar/rijndael.cpp"
 }
 STACKTOP = sp;return; //@line 310 "./src/cpp/unrar/rijndael.cpp"
}
function __ZN8Rijndael12blockDecryptEPKhjPh($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $9 = sp + 64|0;
 $10 = sp + 48|0;
 $12 = sp + 32|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $14 = $4;
 $15 = $6; //@line 120 "./src/cpp/unrar/rijndael.cpp"
 $16 = ($15>>>0)<=(0); //@line 120 "./src/cpp/unrar/rijndael.cpp"
 if ($16) {
  STACKTOP = sp;return; //@line 185 "./src/cpp/unrar/rijndael.cpp"
 }
 $17 = $6; //@line 123 "./src/cpp/unrar/rijndael.cpp"
 $18 = (($17>>>0) / 16)&-1; //@line 123 "./src/cpp/unrar/rijndael.cpp"
 $8 = $18; //@line 123 "./src/cpp/unrar/rijndael.cpp"
 $19 = ((($14)) + 8|0); //@line 133 "./src/cpp/unrar/rijndael.cpp"
 dest=$10; src=$19; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 133 "./src/cpp/unrar/rijndael.cpp"
 $20 = $8; //@line 135 "./src/cpp/unrar/rijndael.cpp"
 $11 = $20; //@line 135 "./src/cpp/unrar/rijndael.cpp"
 while(1) {
  $21 = $11; //@line 135 "./src/cpp/unrar/rijndael.cpp"
  $22 = ($21>>>0)>(0); //@line 135 "./src/cpp/unrar/rijndael.cpp"
  if (!($22)) {
   break;
  }
  $23 = $5; //@line 139 "./src/cpp/unrar/rijndael.cpp"
  $24 = ((($14)) + 24|0); //@line 139 "./src/cpp/unrar/rijndael.cpp"
  $25 = ((($14)) + 4|0); //@line 139 "./src/cpp/unrar/rijndael.cpp"
  $26 = HEAP32[$25>>2]|0; //@line 139 "./src/cpp/unrar/rijndael.cpp"
  $27 = (($24) + ($26<<4)|0); //@line 139 "./src/cpp/unrar/rijndael.cpp"
  __Z6Xor128PvPKvS1_($12,$23,$27); //@line 139 "./src/cpp/unrar/rijndael.cpp"
  $28 = HEAP8[$12>>0]|0; //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $29 = $28&255; //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $30 = (59648 + ($29<<2)|0); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $31 = ((($12)) + 12|0); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $32 = ((($31)) + 1|0); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $33 = HEAP8[$32>>0]|0; //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $34 = $33&255; //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $35 = (58624 + ($34<<2)|0); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $36 = ((($12)) + 8|0); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $37 = ((($36)) + 2|0); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $38 = HEAP8[$37>>0]|0; //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $39 = $38&255; //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $40 = (57600 + ($39<<2)|0); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $41 = ((($12)) + 4|0); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $42 = ((($41)) + 3|0); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $43 = HEAP8[$42>>0]|0; //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $44 = $43&255; //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $45 = (56576 + ($44<<2)|0); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  __Z6Xor128PhPKhS1_S1_S1_($9,$30,$35,$40,$45); //@line 141 "./src/cpp/unrar/rijndael.cpp"
  $46 = ((($9)) + 4|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $47 = ((($12)) + 4|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $48 = HEAP8[$47>>0]|0; //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $49 = $48&255; //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $50 = (59648 + ($49<<2)|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $51 = ((($12)) + 1|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $52 = HEAP8[$51>>0]|0; //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $53 = $52&255; //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $54 = (58624 + ($53<<2)|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $55 = ((($12)) + 12|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $56 = ((($55)) + 2|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $57 = HEAP8[$56>>0]|0; //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $58 = $57&255; //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $59 = (57600 + ($58<<2)|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $60 = ((($12)) + 8|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $61 = ((($60)) + 3|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $62 = HEAP8[$61>>0]|0; //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $63 = $62&255; //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $64 = (56576 + ($63<<2)|0); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  __Z6Xor128PhPKhS1_S1_S1_($46,$50,$54,$59,$64); //@line 142 "./src/cpp/unrar/rijndael.cpp"
  $65 = ((($9)) + 8|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $66 = ((($12)) + 8|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $67 = HEAP8[$66>>0]|0; //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $68 = $67&255; //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $69 = (59648 + ($68<<2)|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $70 = ((($12)) + 4|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $71 = ((($70)) + 1|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $72 = HEAP8[$71>>0]|0; //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $73 = $72&255; //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $74 = (58624 + ($73<<2)|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $75 = ((($12)) + 2|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $76 = HEAP8[$75>>0]|0; //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $77 = $76&255; //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $78 = (57600 + ($77<<2)|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $79 = ((($12)) + 12|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $80 = ((($79)) + 3|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $81 = HEAP8[$80>>0]|0; //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $82 = $81&255; //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $83 = (56576 + ($82<<2)|0); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  __Z6Xor128PhPKhS1_S1_S1_($65,$69,$74,$78,$83); //@line 143 "./src/cpp/unrar/rijndael.cpp"
  $84 = ((($9)) + 12|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $85 = ((($12)) + 12|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $86 = HEAP8[$85>>0]|0; //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $87 = $86&255; //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $88 = (59648 + ($87<<2)|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $89 = ((($12)) + 8|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $90 = ((($89)) + 1|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $91 = HEAP8[$90>>0]|0; //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $92 = $91&255; //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $93 = (58624 + ($92<<2)|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $94 = ((($12)) + 4|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $95 = ((($94)) + 2|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $96 = HEAP8[$95>>0]|0; //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $97 = $96&255; //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $98 = (57600 + ($97<<2)|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $99 = ((($12)) + 3|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $100 = HEAP8[$99>>0]|0; //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $101 = $100&255; //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $102 = (56576 + ($101<<2)|0); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  __Z6Xor128PhPKhS1_S1_S1_($84,$88,$93,$98,$102); //@line 144 "./src/cpp/unrar/rijndael.cpp"
  $103 = ((($14)) + 4|0); //@line 146 "./src/cpp/unrar/rijndael.cpp"
  $104 = HEAP32[$103>>2]|0; //@line 146 "./src/cpp/unrar/rijndael.cpp"
  $105 = (($104) - 1)|0; //@line 146 "./src/cpp/unrar/rijndael.cpp"
  $13 = $105; //@line 146 "./src/cpp/unrar/rijndael.cpp"
  while(1) {
   $106 = $13; //@line 146 "./src/cpp/unrar/rijndael.cpp"
   $107 = ($106|0)>(1); //@line 146 "./src/cpp/unrar/rijndael.cpp"
   $108 = ((($14)) + 24|0);
   if (!($107)) {
    break;
   }
   $109 = $13; //@line 148 "./src/cpp/unrar/rijndael.cpp"
   $110 = (($108) + ($109<<4)|0); //@line 148 "./src/cpp/unrar/rijndael.cpp"
   __Z6Xor128PvPKvS1_($12,$9,$110); //@line 148 "./src/cpp/unrar/rijndael.cpp"
   $111 = HEAP8[$12>>0]|0; //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $112 = $111&255; //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $113 = (59648 + ($112<<2)|0); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $114 = ((($12)) + 12|0); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $115 = ((($114)) + 1|0); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $116 = HEAP8[$115>>0]|0; //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $117 = $116&255; //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $118 = (58624 + ($117<<2)|0); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $119 = ((($12)) + 8|0); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $120 = ((($119)) + 2|0); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $121 = HEAP8[$120>>0]|0; //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $122 = $121&255; //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $123 = (57600 + ($122<<2)|0); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $124 = ((($12)) + 4|0); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $125 = ((($124)) + 3|0); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $126 = HEAP8[$125>>0]|0; //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $127 = $126&255; //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $128 = (56576 + ($127<<2)|0); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   __Z6Xor128PhPKhS1_S1_S1_($9,$113,$118,$123,$128); //@line 149 "./src/cpp/unrar/rijndael.cpp"
   $129 = ((($9)) + 4|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $130 = ((($12)) + 4|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $131 = HEAP8[$130>>0]|0; //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $132 = $131&255; //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $133 = (59648 + ($132<<2)|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $134 = ((($12)) + 1|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $135 = HEAP8[$134>>0]|0; //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $136 = $135&255; //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $137 = (58624 + ($136<<2)|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $138 = ((($12)) + 12|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $139 = ((($138)) + 2|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $140 = HEAP8[$139>>0]|0; //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $141 = $140&255; //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $142 = (57600 + ($141<<2)|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $143 = ((($12)) + 8|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $144 = ((($143)) + 3|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $145 = HEAP8[$144>>0]|0; //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $146 = $145&255; //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $147 = (56576 + ($146<<2)|0); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   __Z6Xor128PhPKhS1_S1_S1_($129,$133,$137,$142,$147); //@line 150 "./src/cpp/unrar/rijndael.cpp"
   $148 = ((($9)) + 8|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $149 = ((($12)) + 8|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $150 = HEAP8[$149>>0]|0; //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $151 = $150&255; //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $152 = (59648 + ($151<<2)|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $153 = ((($12)) + 4|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $154 = ((($153)) + 1|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $155 = HEAP8[$154>>0]|0; //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $156 = $155&255; //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $157 = (58624 + ($156<<2)|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $158 = ((($12)) + 2|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $159 = HEAP8[$158>>0]|0; //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $160 = $159&255; //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $161 = (57600 + ($160<<2)|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $162 = ((($12)) + 12|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $163 = ((($162)) + 3|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $164 = HEAP8[$163>>0]|0; //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $165 = $164&255; //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $166 = (56576 + ($165<<2)|0); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   __Z6Xor128PhPKhS1_S1_S1_($148,$152,$157,$161,$166); //@line 151 "./src/cpp/unrar/rijndael.cpp"
   $167 = ((($9)) + 12|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $168 = ((($12)) + 12|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $169 = HEAP8[$168>>0]|0; //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $170 = $169&255; //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $171 = (59648 + ($170<<2)|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $172 = ((($12)) + 8|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $173 = ((($172)) + 1|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $174 = HEAP8[$173>>0]|0; //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $175 = $174&255; //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $176 = (58624 + ($175<<2)|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $177 = ((($12)) + 4|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $178 = ((($177)) + 2|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $179 = HEAP8[$178>>0]|0; //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $180 = $179&255; //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $181 = (57600 + ($180<<2)|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $182 = ((($12)) + 3|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $183 = HEAP8[$182>>0]|0; //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $184 = $183&255; //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $185 = (56576 + ($184<<2)|0); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   __Z6Xor128PhPKhS1_S1_S1_($167,$171,$176,$181,$185); //@line 152 "./src/cpp/unrar/rijndael.cpp"
   $186 = $13; //@line 146 "./src/cpp/unrar/rijndael.cpp"
   $187 = (($186) + -1)|0; //@line 146 "./src/cpp/unrar/rijndael.cpp"
   $13 = $187; //@line 146 "./src/cpp/unrar/rijndael.cpp"
  }
  $188 = ((($108)) + 16|0); //@line 155 "./src/cpp/unrar/rijndael.cpp"
  __Z6Xor128PvPKvS1_($12,$9,$188); //@line 155 "./src/cpp/unrar/rijndael.cpp"
  $189 = HEAP8[$12>>0]|0; //@line 156 "./src/cpp/unrar/rijndael.cpp"
  $190 = $189&255; //@line 156 "./src/cpp/unrar/rijndael.cpp"
  $191 = (56320 + ($190)|0); //@line 156 "./src/cpp/unrar/rijndael.cpp"
  $192 = HEAP8[$191>>0]|0; //@line 156 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$9>>0] = $192; //@line 156 "./src/cpp/unrar/rijndael.cpp"
  $193 = ((($12)) + 12|0); //@line 157 "./src/cpp/unrar/rijndael.cpp"
  $194 = ((($193)) + 1|0); //@line 157 "./src/cpp/unrar/rijndael.cpp"
  $195 = HEAP8[$194>>0]|0; //@line 157 "./src/cpp/unrar/rijndael.cpp"
  $196 = $195&255; //@line 157 "./src/cpp/unrar/rijndael.cpp"
  $197 = (56320 + ($196)|0); //@line 157 "./src/cpp/unrar/rijndael.cpp"
  $198 = HEAP8[$197>>0]|0; //@line 157 "./src/cpp/unrar/rijndael.cpp"
  $199 = ((($9)) + 1|0); //@line 157 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$199>>0] = $198; //@line 157 "./src/cpp/unrar/rijndael.cpp"
  $200 = ((($12)) + 8|0); //@line 158 "./src/cpp/unrar/rijndael.cpp"
  $201 = ((($200)) + 2|0); //@line 158 "./src/cpp/unrar/rijndael.cpp"
  $202 = HEAP8[$201>>0]|0; //@line 158 "./src/cpp/unrar/rijndael.cpp"
  $203 = $202&255; //@line 158 "./src/cpp/unrar/rijndael.cpp"
  $204 = (56320 + ($203)|0); //@line 158 "./src/cpp/unrar/rijndael.cpp"
  $205 = HEAP8[$204>>0]|0; //@line 158 "./src/cpp/unrar/rijndael.cpp"
  $206 = ((($9)) + 2|0); //@line 158 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$206>>0] = $205; //@line 158 "./src/cpp/unrar/rijndael.cpp"
  $207 = ((($12)) + 4|0); //@line 159 "./src/cpp/unrar/rijndael.cpp"
  $208 = ((($207)) + 3|0); //@line 159 "./src/cpp/unrar/rijndael.cpp"
  $209 = HEAP8[$208>>0]|0; //@line 159 "./src/cpp/unrar/rijndael.cpp"
  $210 = $209&255; //@line 159 "./src/cpp/unrar/rijndael.cpp"
  $211 = (56320 + ($210)|0); //@line 159 "./src/cpp/unrar/rijndael.cpp"
  $212 = HEAP8[$211>>0]|0; //@line 159 "./src/cpp/unrar/rijndael.cpp"
  $213 = ((($9)) + 3|0); //@line 159 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$213>>0] = $212; //@line 159 "./src/cpp/unrar/rijndael.cpp"
  $214 = ((($12)) + 4|0); //@line 160 "./src/cpp/unrar/rijndael.cpp"
  $215 = HEAP8[$214>>0]|0; //@line 160 "./src/cpp/unrar/rijndael.cpp"
  $216 = $215&255; //@line 160 "./src/cpp/unrar/rijndael.cpp"
  $217 = (56320 + ($216)|0); //@line 160 "./src/cpp/unrar/rijndael.cpp"
  $218 = HEAP8[$217>>0]|0; //@line 160 "./src/cpp/unrar/rijndael.cpp"
  $219 = ((($9)) + 4|0); //@line 160 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$219>>0] = $218; //@line 160 "./src/cpp/unrar/rijndael.cpp"
  $220 = ((($12)) + 1|0); //@line 161 "./src/cpp/unrar/rijndael.cpp"
  $221 = HEAP8[$220>>0]|0; //@line 161 "./src/cpp/unrar/rijndael.cpp"
  $222 = $221&255; //@line 161 "./src/cpp/unrar/rijndael.cpp"
  $223 = (56320 + ($222)|0); //@line 161 "./src/cpp/unrar/rijndael.cpp"
  $224 = HEAP8[$223>>0]|0; //@line 161 "./src/cpp/unrar/rijndael.cpp"
  $225 = ((($9)) + 5|0); //@line 161 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$225>>0] = $224; //@line 161 "./src/cpp/unrar/rijndael.cpp"
  $226 = ((($12)) + 12|0); //@line 162 "./src/cpp/unrar/rijndael.cpp"
  $227 = ((($226)) + 2|0); //@line 162 "./src/cpp/unrar/rijndael.cpp"
  $228 = HEAP8[$227>>0]|0; //@line 162 "./src/cpp/unrar/rijndael.cpp"
  $229 = $228&255; //@line 162 "./src/cpp/unrar/rijndael.cpp"
  $230 = (56320 + ($229)|0); //@line 162 "./src/cpp/unrar/rijndael.cpp"
  $231 = HEAP8[$230>>0]|0; //@line 162 "./src/cpp/unrar/rijndael.cpp"
  $232 = ((($9)) + 6|0); //@line 162 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$232>>0] = $231; //@line 162 "./src/cpp/unrar/rijndael.cpp"
  $233 = ((($12)) + 8|0); //@line 163 "./src/cpp/unrar/rijndael.cpp"
  $234 = ((($233)) + 3|0); //@line 163 "./src/cpp/unrar/rijndael.cpp"
  $235 = HEAP8[$234>>0]|0; //@line 163 "./src/cpp/unrar/rijndael.cpp"
  $236 = $235&255; //@line 163 "./src/cpp/unrar/rijndael.cpp"
  $237 = (56320 + ($236)|0); //@line 163 "./src/cpp/unrar/rijndael.cpp"
  $238 = HEAP8[$237>>0]|0; //@line 163 "./src/cpp/unrar/rijndael.cpp"
  $239 = ((($9)) + 7|0); //@line 163 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$239>>0] = $238; //@line 163 "./src/cpp/unrar/rijndael.cpp"
  $240 = ((($12)) + 8|0); //@line 164 "./src/cpp/unrar/rijndael.cpp"
  $241 = HEAP8[$240>>0]|0; //@line 164 "./src/cpp/unrar/rijndael.cpp"
  $242 = $241&255; //@line 164 "./src/cpp/unrar/rijndael.cpp"
  $243 = (56320 + ($242)|0); //@line 164 "./src/cpp/unrar/rijndael.cpp"
  $244 = HEAP8[$243>>0]|0; //@line 164 "./src/cpp/unrar/rijndael.cpp"
  $245 = ((($9)) + 8|0); //@line 164 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$245>>0] = $244; //@line 164 "./src/cpp/unrar/rijndael.cpp"
  $246 = ((($12)) + 4|0); //@line 165 "./src/cpp/unrar/rijndael.cpp"
  $247 = ((($246)) + 1|0); //@line 165 "./src/cpp/unrar/rijndael.cpp"
  $248 = HEAP8[$247>>0]|0; //@line 165 "./src/cpp/unrar/rijndael.cpp"
  $249 = $248&255; //@line 165 "./src/cpp/unrar/rijndael.cpp"
  $250 = (56320 + ($249)|0); //@line 165 "./src/cpp/unrar/rijndael.cpp"
  $251 = HEAP8[$250>>0]|0; //@line 165 "./src/cpp/unrar/rijndael.cpp"
  $252 = ((($9)) + 9|0); //@line 165 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$252>>0] = $251; //@line 165 "./src/cpp/unrar/rijndael.cpp"
  $253 = ((($12)) + 2|0); //@line 166 "./src/cpp/unrar/rijndael.cpp"
  $254 = HEAP8[$253>>0]|0; //@line 166 "./src/cpp/unrar/rijndael.cpp"
  $255 = $254&255; //@line 166 "./src/cpp/unrar/rijndael.cpp"
  $256 = (56320 + ($255)|0); //@line 166 "./src/cpp/unrar/rijndael.cpp"
  $257 = HEAP8[$256>>0]|0; //@line 166 "./src/cpp/unrar/rijndael.cpp"
  $258 = ((($9)) + 10|0); //@line 166 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$258>>0] = $257; //@line 166 "./src/cpp/unrar/rijndael.cpp"
  $259 = ((($12)) + 12|0); //@line 167 "./src/cpp/unrar/rijndael.cpp"
  $260 = ((($259)) + 3|0); //@line 167 "./src/cpp/unrar/rijndael.cpp"
  $261 = HEAP8[$260>>0]|0; //@line 167 "./src/cpp/unrar/rijndael.cpp"
  $262 = $261&255; //@line 167 "./src/cpp/unrar/rijndael.cpp"
  $263 = (56320 + ($262)|0); //@line 167 "./src/cpp/unrar/rijndael.cpp"
  $264 = HEAP8[$263>>0]|0; //@line 167 "./src/cpp/unrar/rijndael.cpp"
  $265 = ((($9)) + 11|0); //@line 167 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$265>>0] = $264; //@line 167 "./src/cpp/unrar/rijndael.cpp"
  $266 = ((($12)) + 12|0); //@line 168 "./src/cpp/unrar/rijndael.cpp"
  $267 = HEAP8[$266>>0]|0; //@line 168 "./src/cpp/unrar/rijndael.cpp"
  $268 = $267&255; //@line 168 "./src/cpp/unrar/rijndael.cpp"
  $269 = (56320 + ($268)|0); //@line 168 "./src/cpp/unrar/rijndael.cpp"
  $270 = HEAP8[$269>>0]|0; //@line 168 "./src/cpp/unrar/rijndael.cpp"
  $271 = ((($9)) + 12|0); //@line 168 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$271>>0] = $270; //@line 168 "./src/cpp/unrar/rijndael.cpp"
  $272 = ((($12)) + 8|0); //@line 169 "./src/cpp/unrar/rijndael.cpp"
  $273 = ((($272)) + 1|0); //@line 169 "./src/cpp/unrar/rijndael.cpp"
  $274 = HEAP8[$273>>0]|0; //@line 169 "./src/cpp/unrar/rijndael.cpp"
  $275 = $274&255; //@line 169 "./src/cpp/unrar/rijndael.cpp"
  $276 = (56320 + ($275)|0); //@line 169 "./src/cpp/unrar/rijndael.cpp"
  $277 = HEAP8[$276>>0]|0; //@line 169 "./src/cpp/unrar/rijndael.cpp"
  $278 = ((($9)) + 13|0); //@line 169 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$278>>0] = $277; //@line 169 "./src/cpp/unrar/rijndael.cpp"
  $279 = ((($12)) + 4|0); //@line 170 "./src/cpp/unrar/rijndael.cpp"
  $280 = ((($279)) + 2|0); //@line 170 "./src/cpp/unrar/rijndael.cpp"
  $281 = HEAP8[$280>>0]|0; //@line 170 "./src/cpp/unrar/rijndael.cpp"
  $282 = $281&255; //@line 170 "./src/cpp/unrar/rijndael.cpp"
  $283 = (56320 + ($282)|0); //@line 170 "./src/cpp/unrar/rijndael.cpp"
  $284 = HEAP8[$283>>0]|0; //@line 170 "./src/cpp/unrar/rijndael.cpp"
  $285 = ((($9)) + 14|0); //@line 170 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$285>>0] = $284; //@line 170 "./src/cpp/unrar/rijndael.cpp"
  $286 = ((($12)) + 3|0); //@line 171 "./src/cpp/unrar/rijndael.cpp"
  $287 = HEAP8[$286>>0]|0; //@line 171 "./src/cpp/unrar/rijndael.cpp"
  $288 = $287&255; //@line 171 "./src/cpp/unrar/rijndael.cpp"
  $289 = (56320 + ($288)|0); //@line 171 "./src/cpp/unrar/rijndael.cpp"
  $290 = HEAP8[$289>>0]|0; //@line 171 "./src/cpp/unrar/rijndael.cpp"
  $291 = ((($9)) + 15|0); //@line 171 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$291>>0] = $290; //@line 171 "./src/cpp/unrar/rijndael.cpp"
  $292 = ((($14)) + 24|0); //@line 172 "./src/cpp/unrar/rijndael.cpp"
  __Z6Xor128PvPKvS1_($9,$9,$292); //@line 172 "./src/cpp/unrar/rijndael.cpp"
  $293 = HEAP8[$14>>0]|0; //@line 174 "./src/cpp/unrar/rijndael.cpp"
  $294 = $293&1; //@line 174 "./src/cpp/unrar/rijndael.cpp"
  if ($294) {
   __Z6Xor128PvPKvS1_($9,$9,$10); //@line 175 "./src/cpp/unrar/rijndael.cpp"
  }
  $295 = $5; //@line 177 "./src/cpp/unrar/rijndael.cpp"
  __Z7Copy128PhPKh($10,$295); //@line 177 "./src/cpp/unrar/rijndael.cpp"
  $296 = $7; //@line 178 "./src/cpp/unrar/rijndael.cpp"
  __Z7Copy128PhPKh($296,$9); //@line 178 "./src/cpp/unrar/rijndael.cpp"
  $297 = $5; //@line 180 "./src/cpp/unrar/rijndael.cpp"
  $298 = ((($297)) + 16|0); //@line 180 "./src/cpp/unrar/rijndael.cpp"
  $5 = $298; //@line 180 "./src/cpp/unrar/rijndael.cpp"
  $299 = $7; //@line 181 "./src/cpp/unrar/rijndael.cpp"
  $300 = ((($299)) + 16|0); //@line 181 "./src/cpp/unrar/rijndael.cpp"
  $7 = $300; //@line 181 "./src/cpp/unrar/rijndael.cpp"
  $301 = $11; //@line 135 "./src/cpp/unrar/rijndael.cpp"
  $302 = (($301) + -1)|0; //@line 135 "./src/cpp/unrar/rijndael.cpp"
  $11 = $302; //@line 135 "./src/cpp/unrar/rijndael.cpp"
 }
 $303 = ((($14)) + 8|0); //@line 184 "./src/cpp/unrar/rijndael.cpp"
 dest=$303; src=$10; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 184 "./src/cpp/unrar/rijndael.cpp"
 STACKTOP = sp;return; //@line 185 "./src/cpp/unrar/rijndael.cpp"
}
function __Z6Xor128PvPKvS1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 0; //@line 28 "./src/cpp/unrar/rijndael.cpp"
 while(1) {
  $7 = $6; //@line 28 "./src/cpp/unrar/rijndael.cpp"
  $8 = ($7|0)<(16); //@line 28 "./src/cpp/unrar/rijndael.cpp"
  if (!($8)) {
   break;
  }
  $9 = $4; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $10 = $6; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $11 = (($9) + ($10)|0); //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $12 = HEAP8[$11>>0]|0; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $13 = $12&255; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $14 = $5; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $15 = $6; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $16 = (($14) + ($15)|0); //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $17 = HEAP8[$16>>0]|0; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $18 = $17&255; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $19 = $13 ^ $18; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $20 = $19&255; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $21 = $3; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $22 = $6; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $23 = (($21) + ($22)|0); //@line 29 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$23>>0] = $20; //@line 29 "./src/cpp/unrar/rijndael.cpp"
  $24 = $6; //@line 28 "./src/cpp/unrar/rijndael.cpp"
  $25 = (($24) + 1)|0; //@line 28 "./src/cpp/unrar/rijndael.cpp"
  $6 = $25; //@line 28 "./src/cpp/unrar/rijndael.cpp"
 }
 STACKTOP = sp;return; //@line 31 "./src/cpp/unrar/rijndael.cpp"
}
function __Z6Xor128PhPKhS1_S1_S1_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = 0; //@line 40 "./src/cpp/unrar/rijndael.cpp"
 while(1) {
  $11 = $10; //@line 40 "./src/cpp/unrar/rijndael.cpp"
  $12 = ($11|0)<(4); //@line 40 "./src/cpp/unrar/rijndael.cpp"
  if (!($12)) {
   break;
  }
  $13 = $6; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $14 = $10; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $15 = (($13) + ($14)|0); //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $16 = HEAP8[$15>>0]|0; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $17 = $16&255; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $18 = $7; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $19 = $10; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $20 = (($18) + ($19)|0); //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $21 = HEAP8[$20>>0]|0; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $22 = $21&255; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $23 = $17 ^ $22; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $24 = $8; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $25 = $10; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $26 = (($24) + ($25)|0); //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $27 = HEAP8[$26>>0]|0; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $28 = $27&255; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $29 = $23 ^ $28; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $30 = $9; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $31 = $10; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $32 = (($30) + ($31)|0); //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $33 = HEAP8[$32>>0]|0; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $34 = $33&255; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $35 = $29 ^ $34; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $36 = $35&255; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $37 = $5; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $38 = $10; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $39 = (($37) + ($38)|0); //@line 41 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$39>>0] = $36; //@line 41 "./src/cpp/unrar/rijndael.cpp"
  $40 = $10; //@line 40 "./src/cpp/unrar/rijndael.cpp"
  $41 = (($40) + 1)|0; //@line 40 "./src/cpp/unrar/rijndael.cpp"
  $10 = $41; //@line 40 "./src/cpp/unrar/rijndael.cpp"
 }
 STACKTOP = sp;return; //@line 43 "./src/cpp/unrar/rijndael.cpp"
}
function __Z7Copy128PhPKh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 54 "./src/cpp/unrar/rijndael.cpp"
 while(1) {
  $5 = $4; //@line 54 "./src/cpp/unrar/rijndael.cpp"
  $6 = ($5|0)<(16); //@line 54 "./src/cpp/unrar/rijndael.cpp"
  if (!($6)) {
   break;
  }
  $7 = $3; //@line 55 "./src/cpp/unrar/rijndael.cpp"
  $8 = $4; //@line 55 "./src/cpp/unrar/rijndael.cpp"
  $9 = (($7) + ($8)|0); //@line 55 "./src/cpp/unrar/rijndael.cpp"
  $10 = HEAP8[$9>>0]|0; //@line 55 "./src/cpp/unrar/rijndael.cpp"
  $11 = $2; //@line 55 "./src/cpp/unrar/rijndael.cpp"
  $12 = $4; //@line 55 "./src/cpp/unrar/rijndael.cpp"
  $13 = (($11) + ($12)|0); //@line 55 "./src/cpp/unrar/rijndael.cpp"
  HEAP8[$13>>0] = $10; //@line 55 "./src/cpp/unrar/rijndael.cpp"
  $14 = $4; //@line 54 "./src/cpp/unrar/rijndael.cpp"
  $15 = (($14) + 1)|0; //@line 54 "./src/cpp/unrar/rijndael.cpp"
  $4 = $15; //@line 54 "./src/cpp/unrar/rijndael.cpp"
 }
 STACKTOP = sp;return; //@line 57 "./src/cpp/unrar/rijndael.cpp"
}
function __ZN8BitInputC2Eb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $1&1;
 $3 = $5;
 $6 = $2;
 $7 = ((($6)) + 8|0); //@line 5 "./src/cpp/unrar/getbits.cpp"
 HEAP8[$7>>0] = 0; //@line 5 "./src/cpp/unrar/getbits.cpp"
 $8 = $3; //@line 6 "./src/cpp/unrar/getbits.cpp"
 $9 = $8&1; //@line 6 "./src/cpp/unrar/getbits.cpp"
 if ($9) {
  $4 = 32771; //@line 12 "./src/cpp/unrar/getbits.cpp"
  $10 = $4; //@line 13 "./src/cpp/unrar/getbits.cpp"
  $11 = (__Znaj($10)|0); //@line 13 "./src/cpp/unrar/getbits.cpp"
  $12 = ((($6)) + 12|0); //@line 13 "./src/cpp/unrar/getbits.cpp"
  HEAP32[$12>>2] = $11; //@line 13 "./src/cpp/unrar/getbits.cpp"
  $13 = ((($6)) + 12|0); //@line 17 "./src/cpp/unrar/getbits.cpp"
  $14 = HEAP32[$13>>2]|0; //@line 17 "./src/cpp/unrar/getbits.cpp"
  $15 = $4; //@line 17 "./src/cpp/unrar/getbits.cpp"
  _memset(($14|0),0,($15|0))|0; //@line 17 "./src/cpp/unrar/getbits.cpp"
  STACKTOP = sp;return; //@line 21 "./src/cpp/unrar/getbits.cpp"
 } else {
  $16 = ((($6)) + 12|0); //@line 20 "./src/cpp/unrar/getbits.cpp"
  HEAP32[$16>>2] = 0; //@line 20 "./src/cpp/unrar/getbits.cpp"
  STACKTOP = sp;return; //@line 21 "./src/cpp/unrar/getbits.cpp"
 }
}
function __ZN8BitInputD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0); //@line 26 "./src/cpp/unrar/getbits.cpp"
 $4 = HEAP8[$3>>0]|0; //@line 26 "./src/cpp/unrar/getbits.cpp"
 $5 = $4&1; //@line 26 "./src/cpp/unrar/getbits.cpp"
 if (!($5)) {
  $6 = ((($2)) + 12|0); //@line 27 "./src/cpp/unrar/getbits.cpp"
  $7 = HEAP32[$6>>2]|0; //@line 27 "./src/cpp/unrar/getbits.cpp"
  $8 = ($7|0)==(0|0); //@line 27 "./src/cpp/unrar/getbits.cpp"
  if (!($8)) {
   __ZdaPv($7); //@line 27 "./src/cpp/unrar/getbits.cpp"
  }
 }
 STACKTOP = sp;return; //@line 28 "./src/cpp/unrar/getbits.cpp"
}
function __ZN8BitInput8faddbitsEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 34 "./src/cpp/unrar/getbits.cpp"
 __ZN8BitInput7addbitsEj($4,$5); //@line 34 "./src/cpp/unrar/getbits.cpp"
 STACKTOP = sp;return; //@line 35 "./src/cpp/unrar/getbits.cpp"
}
function __ZN8BitInput7addbitsEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 4|0); //@line 27 "./src/cpp/unrar/getbits.hpp"
 $6 = HEAP32[$5>>2]|0; //@line 27 "./src/cpp/unrar/getbits.hpp"
 $7 = $3; //@line 27 "./src/cpp/unrar/getbits.hpp"
 $8 = (($7) + ($6))|0; //@line 27 "./src/cpp/unrar/getbits.hpp"
 $3 = $8; //@line 27 "./src/cpp/unrar/getbits.hpp"
 $9 = $3; //@line 28 "./src/cpp/unrar/getbits.hpp"
 $10 = $9 >>> 3; //@line 28 "./src/cpp/unrar/getbits.hpp"
 $11 = HEAP32[$4>>2]|0; //@line 28 "./src/cpp/unrar/getbits.hpp"
 $12 = (($11) + ($10))|0; //@line 28 "./src/cpp/unrar/getbits.hpp"
 HEAP32[$4>>2] = $12; //@line 28 "./src/cpp/unrar/getbits.hpp"
 $13 = $3; //@line 29 "./src/cpp/unrar/getbits.hpp"
 $14 = $13 & 7; //@line 29 "./src/cpp/unrar/getbits.hpp"
 $15 = ((($4)) + 4|0); //@line 29 "./src/cpp/unrar/getbits.hpp"
 HEAP32[$15>>2] = $14; //@line 29 "./src/cpp/unrar/getbits.hpp"
 STACKTOP = sp;return; //@line 30 "./src/cpp/unrar/getbits.hpp"
}
function __ZN8BitInput8fgetbitsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN8BitInput7getbitsEv($2)|0); //@line 41 "./src/cpp/unrar/getbits.cpp"
 STACKTOP = sp;return ($3|0); //@line 41 "./src/cpp/unrar/getbits.cpp"
}
function __ZN8BitInput7getbitsEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = ((($3)) + 12|0); //@line 36 "./src/cpp/unrar/getbits.hpp"
 $5 = HEAP32[$4>>2]|0; //@line 36 "./src/cpp/unrar/getbits.hpp"
 $6 = HEAP32[$3>>2]|0; //@line 36 "./src/cpp/unrar/getbits.hpp"
 $7 = (($5) + ($6)|0); //@line 36 "./src/cpp/unrar/getbits.hpp"
 $8 = HEAP8[$7>>0]|0; //@line 36 "./src/cpp/unrar/getbits.hpp"
 $9 = $8&255; //@line 36 "./src/cpp/unrar/getbits.hpp"
 $10 = $9 << 16; //@line 36 "./src/cpp/unrar/getbits.hpp"
 $2 = $10; //@line 36 "./src/cpp/unrar/getbits.hpp"
 $11 = ((($3)) + 12|0); //@line 37 "./src/cpp/unrar/getbits.hpp"
 $12 = HEAP32[$11>>2]|0; //@line 37 "./src/cpp/unrar/getbits.hpp"
 $13 = HEAP32[$3>>2]|0; //@line 37 "./src/cpp/unrar/getbits.hpp"
 $14 = (($13) + 1)|0; //@line 37 "./src/cpp/unrar/getbits.hpp"
 $15 = (($12) + ($14)|0); //@line 37 "./src/cpp/unrar/getbits.hpp"
 $16 = HEAP8[$15>>0]|0; //@line 37 "./src/cpp/unrar/getbits.hpp"
 $17 = $16&255; //@line 37 "./src/cpp/unrar/getbits.hpp"
 $18 = $17 << 8; //@line 37 "./src/cpp/unrar/getbits.hpp"
 $19 = $2; //@line 37 "./src/cpp/unrar/getbits.hpp"
 $20 = $19 | $18; //@line 37 "./src/cpp/unrar/getbits.hpp"
 $2 = $20; //@line 37 "./src/cpp/unrar/getbits.hpp"
 $21 = ((($3)) + 12|0); //@line 38 "./src/cpp/unrar/getbits.hpp"
 $22 = HEAP32[$21>>2]|0; //@line 38 "./src/cpp/unrar/getbits.hpp"
 $23 = HEAP32[$3>>2]|0; //@line 38 "./src/cpp/unrar/getbits.hpp"
 $24 = (($23) + 2)|0; //@line 38 "./src/cpp/unrar/getbits.hpp"
 $25 = (($22) + ($24)|0); //@line 38 "./src/cpp/unrar/getbits.hpp"
 $26 = HEAP8[$25>>0]|0; //@line 38 "./src/cpp/unrar/getbits.hpp"
 $27 = $26&255; //@line 38 "./src/cpp/unrar/getbits.hpp"
 $28 = $2; //@line 38 "./src/cpp/unrar/getbits.hpp"
 $29 = $28 | $27; //@line 38 "./src/cpp/unrar/getbits.hpp"
 $2 = $29; //@line 38 "./src/cpp/unrar/getbits.hpp"
 $30 = ((($3)) + 4|0); //@line 39 "./src/cpp/unrar/getbits.hpp"
 $31 = HEAP32[$30>>2]|0; //@line 39 "./src/cpp/unrar/getbits.hpp"
 $32 = (8 - ($31))|0; //@line 39 "./src/cpp/unrar/getbits.hpp"
 $33 = $2; //@line 39 "./src/cpp/unrar/getbits.hpp"
 $34 = $33 >>> $32; //@line 39 "./src/cpp/unrar/getbits.hpp"
 $2 = $34; //@line 39 "./src/cpp/unrar/getbits.hpp"
 $35 = $2; //@line 40 "./src/cpp/unrar/getbits.hpp"
 $36 = $35 & 65535; //@line 40 "./src/cpp/unrar/getbits.hpp"
 STACKTOP = sp;return ($36|0); //@line 40 "./src/cpp/unrar/getbits.hpp"
}
function __Z13SHA1TransformPjPhPKhb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;
 var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;
 var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;
 var $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0;
 var $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0;
 var $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0;
 var $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0;
 var $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0;
 var $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0;
 var $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0;
 var $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0;
 var $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0;
 var $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0;
 var $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0;
 var $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0;
 var $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0;
 var $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0;
 var $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0;
 var $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0;
 var $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0;
 var $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0;
 var $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0;
 var $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0;
 var $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0;
 var $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0;
 var $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0;
 var $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0;
 var $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0;
 var $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0;
 var $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0;
 var $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0;
 var $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0;
 var $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0;
 var $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0;
 var $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0;
 var $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0;
 var $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0;
 var $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0;
 var $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0;
 var $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0;
 var $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0;
 var $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0;
 var $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0;
 var $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0;
 var $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0;
 var $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0;
 var $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0;
 var $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0;
 var $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0;
 var $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0;
 var $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0;
 var $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0;
 var $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0;
 var $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0;
 var $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0;
 var $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0;
 var $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0;
 var $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0;
 var $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0;
 var $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0;
 var $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0;
 var $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0;
 var $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0;
 var $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0;
 var $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0;
 var $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0;
 var $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0;
 var $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0;
 var $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0;
 var $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0;
 var $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0;
 var $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0;
 var $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0, $2313 = 0;
 var $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0, $233 = 0, $2330 = 0, $2331 = 0;
 var $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0, $2348 = 0, $2349 = 0, $235 = 0;
 var $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0, $2366 = 0, $2367 = 0, $2368 = 0;
 var $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0, $2380 = 0, $2381 = 0, $2382 = 0, $2383 = 0, $2384 = 0, $2385 = 0, $2386 = 0;
 var $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0, $2390 = 0, $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0, $2401 = 0, $2402 = 0, $2403 = 0;
 var $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2420 = 0, $2421 = 0;
 var $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0, $2438 = 0, $2439 = 0, $244 = 0;
 var $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0, $2456 = 0, $2457 = 0, $2458 = 0;
 var $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0, $2474 = 0, $2475 = 0, $2476 = 0;
 var $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0, $2492 = 0, $2493 = 0, $2494 = 0;
 var $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0, $251 = 0, $2510 = 0, $2511 = 0;
 var $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0, $2528 = 0, $2529 = 0, $253 = 0;
 var $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2546 = 0, $2547 = 0, $2548 = 0;
 var $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0, $2564 = 0, $2565 = 0, $2566 = 0;
 var $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0, $2582 = 0, $2583 = 0, $2584 = 0;
 var $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0, $2601 = 0;
 var $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0, $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0, $2618 = 0, $2619 = 0, $262 = 0;
 var $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0;
 var $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0, $2654 = 0, $2655 = 0, $2656 = 0;
 var $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0, $2671 = 0, $2672 = 0, $2673 = 0, $2674 = 0;
 var $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0, $2689 = 0, $269 = 0, $2690 = 0, $2691 = 0, $2692 = 0;
 var $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0, $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0, $2708 = 0, $2709 = 0, $271 = 0;
 var $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0, $2723 = 0, $2724 = 0, $2725 = 0, $2726 = 0, $2727 = 0, $2728 = 0;
 var $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0, $2744 = 0, $2745 = 0, $2746 = 0;
 var $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0, $2762 = 0, $2763 = 0, $2764 = 0;
 var $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0, $278 = 0, $2780 = 0, $2781 = 0, $2782 = 0;
 var $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0, $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0, $2797 = 0, $2798 = 0, $2799 = 0, $28 = 0, $280 = 0;
 var $2800 = 0, $2801 = 0, $2802 = 0, $2803 = 0, $2804 = 0, $2805 = 0, $2806 = 0, $2807 = 0, $2808 = 0, $2809 = 0, $281 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2813 = 0, $2814 = 0, $2815 = 0, $2816 = 0, $2817 = 0, $2818 = 0;
 var $2819 = 0, $282 = 0, $2820 = 0, $2821 = 0, $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0, $2826 = 0, $2827 = 0, $2828 = 0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0, $2832 = 0, $2833 = 0, $2834 = 0, $2835 = 0, $2836 = 0;
 var $2837 = 0, $2838 = 0, $2839 = 0, $284 = 0, $2840 = 0, $2841 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0, $2850 = 0, $2851 = 0, $2852 = 0, $2853 = 0, $2854 = 0;
 var $2855 = 0, $2856 = 0, $2857 = 0, $2858 = 0, $2859 = 0, $286 = 0, $2860 = 0, $2861 = 0, $2862 = 0, $2863 = 0, $2864 = 0, $2865 = 0, $2866 = 0, $2867 = 0, $2868 = 0, $2869 = 0, $287 = 0, $2870 = 0, $2871 = 0, $2872 = 0;
 var $2873 = 0, $2874 = 0, $2875 = 0, $2876 = 0, $2877 = 0, $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $2885 = 0, $2886 = 0, $2887 = 0, $2888 = 0, $2889 = 0, $289 = 0, $2890 = 0;
 var $2891 = 0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0, $2896 = 0, $2897 = 0, $2898 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $2902 = 0, $2903 = 0, $2904 = 0, $2905 = 0, $2906 = 0, $2907 = 0, $2908 = 0;
 var $2909 = 0, $291 = 0, $2910 = 0, $2911 = 0, $2912 = 0, $2913 = 0, $2914 = 0, $2915 = 0, $2916 = 0, $2917 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2921 = 0, $2922 = 0, $2923 = 0, $2924 = 0, $2925 = 0, $2926 = 0;
 var $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2934 = 0, $2935 = 0, $2936 = 0, $2937 = 0, $2938 = 0, $2939 = 0, $294 = 0, $2940 = 0, $2941 = 0, $2942 = 0, $2943 = 0, $2944 = 0;
 var $2945 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $2949 = 0, $295 = 0, $2950 = 0, $2951 = 0, $2952 = 0, $2953 = 0, $2954 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $2959 = 0, $296 = 0, $2960 = 0, $2961 = 0, $2962 = 0;
 var $2963 = 0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0, $2968 = 0, $2969 = 0, $297 = 0, $2970 = 0, $2971 = 0, $2972 = 0, $2973 = 0, $2974 = 0, $2975 = 0, $2976 = 0, $2977 = 0, $2978 = 0, $2979 = 0, $298 = 0, $2980 = 0;
 var $2981 = 0, $2982 = 0, $2983 = 0, $2984 = 0, $2985 = 0, $2986 = 0, $2987 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2991 = 0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0, $2996 = 0, $2997 = 0, $2998 = 0, $2999 = 0;
 var $30 = 0, $300 = 0, $3000 = 0, $3001 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0, $3013 = 0, $3014 = 0, $3015 = 0, $3016 = 0;
 var $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0, $3023 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0, $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0, $3031 = 0, $3032 = 0, $3033 = 0, $3034 = 0;
 var $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0, $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0, $3049 = 0, $305 = 0, $3050 = 0, $3051 = 0, $3052 = 0;
 var $3053 = 0, $3054 = 0, $3055 = 0, $3056 = 0, $3057 = 0, $3058 = 0, $3059 = 0, $306 = 0, $3060 = 0, $3061 = 0, $3062 = 0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0, $3067 = 0, $3068 = 0, $3069 = 0, $307 = 0, $3070 = 0;
 var $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3080 = 0, $3081 = 0, $3082 = 0, $3083 = 0, $3084 = 0, $3085 = 0, $3086 = 0, $3087 = 0, $3088 = 0, $3089 = 0;
 var $309 = 0, $3090 = 0, $3091 = 0, $3092 = 0, $3093 = 0, $3094 = 0, $3095 = 0, $3096 = 0, $3097 = 0, $3098 = 0, $3099 = 0, $31 = 0, $310 = 0, $3100 = 0, $3101 = 0, $3102 = 0, $3103 = 0, $3104 = 0, $3105 = 0, $3106 = 0;
 var $3107 = 0, $3108 = 0, $3109 = 0, $311 = 0, $3110 = 0, $3111 = 0, $3112 = 0, $3113 = 0, $3114 = 0, $3115 = 0, $3116 = 0, $3117 = 0, $3118 = 0, $3119 = 0, $312 = 0, $3120 = 0, $3121 = 0, $3122 = 0, $3123 = 0, $3124 = 0;
 var $3125 = 0, $3126 = 0, $3127 = 0, $3128 = 0, $3129 = 0, $313 = 0, $3130 = 0, $3131 = 0, $3132 = 0, $3133 = 0, $3134 = 0, $3135 = 0, $3136 = 0, $3137 = 0, $3138 = 0, $3139 = 0, $314 = 0, $3140 = 0, $3141 = 0, $3142 = 0;
 var $3143 = 0, $3144 = 0, $3145 = 0, $3146 = 0, $3147 = 0, $3148 = 0, $3149 = 0, $315 = 0, $3150 = 0, $3151 = 0, $3152 = 0, $3153 = 0, $3154 = 0, $3155 = 0, $3156 = 0, $3157 = 0, $3158 = 0, $3159 = 0, $316 = 0, $3160 = 0;
 var $3161 = 0, $3162 = 0, $3163 = 0, $3164 = 0, $3165 = 0, $3166 = 0, $3167 = 0, $3168 = 0, $3169 = 0, $317 = 0, $3170 = 0, $3171 = 0, $3172 = 0, $3173 = 0, $3174 = 0, $3175 = 0, $3176 = 0, $3177 = 0, $3178 = 0, $3179 = 0;
 var $318 = 0, $3180 = 0, $3181 = 0, $3182 = 0, $3183 = 0, $3184 = 0, $3185 = 0, $3186 = 0, $3187 = 0, $3188 = 0, $3189 = 0, $319 = 0, $3190 = 0, $3191 = 0, $3192 = 0, $3193 = 0, $3194 = 0, $3195 = 0, $3196 = 0, $3197 = 0;
 var $3198 = 0, $3199 = 0, $32 = 0, $320 = 0, $3200 = 0, $3201 = 0, $3202 = 0, $3203 = 0, $3204 = 0, $3205 = 0, $3206 = 0, $3207 = 0, $3208 = 0, $3209 = 0, $321 = 0, $3210 = 0, $3211 = 0, $3212 = 0, $3213 = 0, $3214 = 0;
 var $3215 = 0, $3216 = 0, $3217 = 0, $3218 = 0, $3219 = 0, $322 = 0, $3220 = 0, $3221 = 0, $3222 = 0, $3223 = 0, $3224 = 0, $3225 = 0, $3226 = 0, $3227 = 0, $3228 = 0, $3229 = 0, $323 = 0, $3230 = 0, $3231 = 0, $3232 = 0;
 var $3233 = 0, $3234 = 0, $3235 = 0, $3236 = 0, $3237 = 0, $3238 = 0, $3239 = 0, $324 = 0, $3240 = 0, $3241 = 0, $3242 = 0, $3243 = 0, $3244 = 0, $3245 = 0, $3246 = 0, $3247 = 0, $3248 = 0, $3249 = 0, $325 = 0, $3250 = 0;
 var $3251 = 0, $3252 = 0, $3253 = 0, $3254 = 0, $3255 = 0, $3256 = 0, $3257 = 0, $3258 = 0, $3259 = 0, $326 = 0, $3260 = 0, $3261 = 0, $3262 = 0, $3263 = 0, $3264 = 0, $3265 = 0, $3266 = 0, $3267 = 0, $3268 = 0, $3269 = 0;
 var $327 = 0, $3270 = 0, $3271 = 0, $3272 = 0, $3273 = 0, $3274 = 0, $3275 = 0, $3276 = 0, $3277 = 0, $3278 = 0, $3279 = 0, $328 = 0, $3280 = 0, $3281 = 0, $3282 = 0, $3283 = 0, $3284 = 0, $3285 = 0, $3286 = 0, $3287 = 0;
 var $3288 = 0, $3289 = 0, $329 = 0, $3290 = 0, $3291 = 0, $3292 = 0, $3293 = 0, $3294 = 0, $3295 = 0, $3296 = 0, $3297 = 0, $3298 = 0, $3299 = 0, $33 = 0, $330 = 0, $3300 = 0, $3301 = 0, $3302 = 0, $3303 = 0, $3304 = 0;
 var $3305 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $3309 = 0, $331 = 0, $3310 = 0, $3311 = 0, $3312 = 0, $3313 = 0, $3314 = 0, $3315 = 0, $3316 = 0, $3317 = 0, $3318 = 0, $3319 = 0, $332 = 0, $3320 = 0, $3321 = 0, $3322 = 0;
 var $3323 = 0, $3324 = 0, $3325 = 0, $3326 = 0, $3327 = 0, $3328 = 0, $3329 = 0, $333 = 0, $3330 = 0, $3331 = 0, $3332 = 0, $3333 = 0, $3334 = 0, $3335 = 0, $3336 = 0, $3337 = 0, $3338 = 0, $3339 = 0, $334 = 0, $3340 = 0;
 var $3341 = 0, $3342 = 0, $3343 = 0, $3344 = 0, $3345 = 0, $3346 = 0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0, $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $3354 = 0, $3355 = 0, $3356 = 0, $3357 = 0, $3358 = 0, $3359 = 0;
 var $336 = 0, $3360 = 0, $3361 = 0, $3362 = 0, $3363 = 0, $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0, $3368 = 0, $3369 = 0, $337 = 0, $3370 = 0, $3371 = 0, $3372 = 0, $3373 = 0, $3374 = 0, $3375 = 0, $3376 = 0, $3377 = 0;
 var $3378 = 0, $3379 = 0, $338 = 0, $3380 = 0, $3381 = 0, $3382 = 0, $3383 = 0, $3384 = 0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0, $3389 = 0, $339 = 0, $3390 = 0, $3391 = 0, $3392 = 0, $3393 = 0, $3394 = 0, $3395 = 0;
 var $3396 = 0, $3397 = 0, $3398 = 0, $3399 = 0, $34 = 0, $340 = 0, $3400 = 0, $3401 = 0, $3402 = 0, $3403 = 0, $3404 = 0, $3405 = 0, $3406 = 0, $3407 = 0, $3408 = 0, $3409 = 0, $341 = 0, $3410 = 0, $3411 = 0, $3412 = 0;
 var $3413 = 0, $3414 = 0, $3415 = 0, $3416 = 0, $3417 = 0, $3418 = 0, $3419 = 0, $342 = 0, $3420 = 0, $3421 = 0, $3422 = 0, $3423 = 0, $3424 = 0, $3425 = 0, $3426 = 0, $3427 = 0, $3428 = 0, $3429 = 0, $343 = 0, $3430 = 0;
 var $3431 = 0, $3432 = 0, $3433 = 0, $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0, $3441 = 0, $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0, $3446 = 0, $3447 = 0, $3448 = 0, $3449 = 0;
 var $345 = 0, $3450 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0, $3460 = 0, $3461 = 0, $3462 = 0, $3463 = 0, $3464 = 0, $3465 = 0, $3466 = 0, $3467 = 0;
 var $3468 = 0, $3469 = 0, $347 = 0, $3470 = 0, $3471 = 0, $3472 = 0, $3473 = 0, $3474 = 0, $3475 = 0, $3476 = 0, $3477 = 0, $3478 = 0, $3479 = 0, $348 = 0, $3480 = 0, $3481 = 0, $3482 = 0, $3483 = 0, $3484 = 0, $3485 = 0;
 var $3486 = 0, $3487 = 0, $3488 = 0, $3489 = 0, $349 = 0, $3490 = 0, $3491 = 0, $3492 = 0, $3493 = 0, $3494 = 0, $3495 = 0, $3496 = 0, $3497 = 0, $3498 = 0, $3499 = 0, $35 = 0, $350 = 0, $3500 = 0, $3501 = 0, $3502 = 0;
 var $3503 = 0, $3504 = 0, $3505 = 0, $3506 = 0, $3507 = 0, $3508 = 0, $3509 = 0, $351 = 0, $3510 = 0, $3511 = 0, $3512 = 0, $3513 = 0, $3514 = 0, $3515 = 0, $3516 = 0, $3517 = 0, $3518 = 0, $3519 = 0, $352 = 0, $3520 = 0;
 var $3521 = 0, $3522 = 0, $3523 = 0, $3524 = 0, $3525 = 0, $3526 = 0, $3527 = 0, $3528 = 0, $3529 = 0, $353 = 0, $3530 = 0, $3531 = 0, $3532 = 0, $3533 = 0, $3534 = 0, $3535 = 0, $3536 = 0, $3537 = 0, $3538 = 0, $3539 = 0;
 var $354 = 0, $3540 = 0, $3541 = 0, $3542 = 0, $3543 = 0, $3544 = 0, $3545 = 0, $3546 = 0, $3547 = 0, $3548 = 0, $3549 = 0, $355 = 0, $3550 = 0, $3551 = 0, $3552 = 0, $3553 = 0, $3554 = 0, $3555 = 0, $3556 = 0, $3557 = 0;
 var $3558 = 0, $3559 = 0, $356 = 0, $3560 = 0, $3561 = 0, $3562 = 0, $3563 = 0, $3564 = 0, $3565 = 0, $3566 = 0, $3567 = 0, $3568 = 0, $3569 = 0, $357 = 0, $3570 = 0, $3571 = 0, $3572 = 0, $3573 = 0, $3574 = 0, $3575 = 0;
 var $3576 = 0, $3577 = 0, $3578 = 0, $3579 = 0, $358 = 0, $3580 = 0, $3581 = 0, $3582 = 0, $3583 = 0, $3584 = 0, $3585 = 0, $3586 = 0, $3587 = 0, $3588 = 0, $3589 = 0, $359 = 0, $3590 = 0, $3591 = 0, $3592 = 0, $3593 = 0;
 var $3594 = 0, $3595 = 0, $3596 = 0, $3597 = 0, $3598 = 0, $3599 = 0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0, $3602 = 0, $3603 = 0, $3604 = 0, $3605 = 0, $3606 = 0, $3607 = 0, $3608 = 0, $3609 = 0, $361 = 0, $3610 = 0;
 var $3611 = 0, $3612 = 0, $3613 = 0, $3614 = 0, $3615 = 0, $3616 = 0, $3617 = 0, $3618 = 0, $3619 = 0, $362 = 0, $3620 = 0, $3621 = 0, $3622 = 0, $3623 = 0, $3624 = 0, $3625 = 0, $3626 = 0, $3627 = 0, $3628 = 0, $3629 = 0;
 var $363 = 0, $3630 = 0, $3631 = 0, $3632 = 0, $3633 = 0, $3634 = 0, $3635 = 0, $3636 = 0, $3637 = 0, $3638 = 0, $3639 = 0, $364 = 0, $3640 = 0, $3641 = 0, $3642 = 0, $3643 = 0, $3644 = 0, $3645 = 0, $3646 = 0, $3647 = 0;
 var $3648 = 0, $3649 = 0, $365 = 0, $3650 = 0, $3651 = 0, $3652 = 0, $3653 = 0, $3654 = 0, $3655 = 0, $3656 = 0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0, $3662 = 0, $3663 = 0, $3664 = 0, $3665 = 0;
 var $3666 = 0, $3667 = 0, $3668 = 0, $3669 = 0, $367 = 0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0, $3676 = 0, $3677 = 0, $3678 = 0, $3679 = 0, $368 = 0, $3680 = 0, $3681 = 0, $3682 = 0, $3683 = 0;
 var $3684 = 0, $3685 = 0, $3686 = 0, $3687 = 0, $3688 = 0, $3689 = 0, $369 = 0, $3690 = 0, $3691 = 0, $3692 = 0, $3693 = 0, $3694 = 0, $3695 = 0, $3696 = 0, $3697 = 0, $3698 = 0, $3699 = 0, $37 = 0, $370 = 0, $3700 = 0;
 var $3701 = 0, $3702 = 0, $3703 = 0, $3704 = 0, $3705 = 0, $3706 = 0, $3707 = 0, $3708 = 0, $3709 = 0, $371 = 0, $3710 = 0, $3711 = 0, $3712 = 0, $3713 = 0, $3714 = 0, $3715 = 0, $3716 = 0, $3717 = 0, $3718 = 0, $3719 = 0;
 var $372 = 0, $3720 = 0, $3721 = 0, $3722 = 0, $3723 = 0, $3724 = 0, $3725 = 0, $3726 = 0, $3727 = 0, $3728 = 0, $3729 = 0, $373 = 0, $3730 = 0, $3731 = 0, $3732 = 0, $3733 = 0, $3734 = 0, $3735 = 0, $3736 = 0, $3737 = 0;
 var $3738 = 0, $3739 = 0, $374 = 0, $3740 = 0, $3741 = 0, $3742 = 0, $3743 = 0, $3744 = 0, $3745 = 0, $3746 = 0, $3747 = 0, $3748 = 0, $3749 = 0, $375 = 0, $3750 = 0, $3751 = 0, $3752 = 0, $3753 = 0, $3754 = 0, $3755 = 0;
 var $3756 = 0, $3757 = 0, $3758 = 0, $3759 = 0, $376 = 0, $3760 = 0, $3761 = 0, $3762 = 0, $3763 = 0, $3764 = 0, $3765 = 0, $3766 = 0, $3767 = 0, $3768 = 0, $3769 = 0, $377 = 0, $3770 = 0, $3771 = 0, $3772 = 0, $3773 = 0;
 var $3774 = 0, $3775 = 0, $3776 = 0, $3777 = 0, $3778 = 0, $3779 = 0, $378 = 0, $3780 = 0, $3781 = 0, $3782 = 0, $3783 = 0, $3784 = 0, $3785 = 0, $3786 = 0, $3787 = 0, $3788 = 0, $3789 = 0, $379 = 0, $3790 = 0, $3791 = 0;
 var $3792 = 0, $3793 = 0, $3794 = 0, $3795 = 0, $3796 = 0, $3797 = 0, $3798 = 0, $3799 = 0, $38 = 0, $380 = 0, $3800 = 0, $3801 = 0, $3802 = 0, $3803 = 0, $3804 = 0, $3805 = 0, $3806 = 0, $3807 = 0, $3808 = 0, $3809 = 0;
 var $381 = 0, $3810 = 0, $3811 = 0, $3812 = 0, $3813 = 0, $3814 = 0, $3815 = 0, $3816 = 0, $3817 = 0, $3818 = 0, $3819 = 0, $382 = 0, $3820 = 0, $3821 = 0, $3822 = 0, $3823 = 0, $3824 = 0, $3825 = 0, $3826 = 0, $3827 = 0;
 var $3828 = 0, $3829 = 0, $383 = 0, $3830 = 0, $3831 = 0, $3832 = 0, $3833 = 0, $3834 = 0, $3835 = 0, $3836 = 0, $3837 = 0, $3838 = 0, $3839 = 0, $384 = 0, $3840 = 0, $3841 = 0, $3842 = 0, $3843 = 0, $3844 = 0, $3845 = 0;
 var $3846 = 0, $3847 = 0, $3848 = 0, $3849 = 0, $385 = 0, $3850 = 0, $3851 = 0, $3852 = 0, $3853 = 0, $3854 = 0, $3855 = 0, $3856 = 0, $3857 = 0, $3858 = 0, $3859 = 0, $386 = 0, $3860 = 0, $3861 = 0, $3862 = 0, $3863 = 0;
 var $3864 = 0, $3865 = 0, $3866 = 0, $3867 = 0, $3868 = 0, $3869 = 0, $387 = 0, $3870 = 0, $3871 = 0, $3872 = 0, $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0, $3878 = 0, $3879 = 0, $388 = 0, $3880 = 0, $3881 = 0;
 var $3882 = 0, $3883 = 0, $3884 = 0, $3885 = 0, $3886 = 0, $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0, $3890 = 0, $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0, $3895 = 0, $3896 = 0, $3897 = 0, $3898 = 0, $3899 = 0, $39 = 0;
 var $390 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0, $3909 = 0, $391 = 0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0, $3914 = 0, $3915 = 0, $3916 = 0, $3917 = 0;
 var $3918 = 0, $3919 = 0, $392 = 0, $3920 = 0, $3921 = 0, $3922 = 0, $3923 = 0, $3924 = 0, $3925 = 0, $3926 = 0, $3927 = 0, $3928 = 0, $3929 = 0, $393 = 0, $3930 = 0, $3931 = 0, $3932 = 0, $3933 = 0, $3934 = 0, $3935 = 0;
 var $3936 = 0, $3937 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3940 = 0, $3941 = 0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3946 = 0, $3947 = 0, $3948 = 0, $3949 = 0, $395 = 0, $3950 = 0, $3951 = 0, $3952 = 0, $3953 = 0;
 var $3954 = 0, $3955 = 0, $3956 = 0, $3957 = 0, $3958 = 0, $3959 = 0, $396 = 0, $3960 = 0, $3961 = 0, $3962 = 0, $3963 = 0, $3964 = 0, $3965 = 0, $3966 = 0, $3967 = 0, $3968 = 0, $3969 = 0, $397 = 0, $3970 = 0, $3971 = 0;
 var $3972 = 0, $3973 = 0, $3974 = 0, $3975 = 0, $3976 = 0, $3977 = 0, $3978 = 0, $3979 = 0, $398 = 0, $3980 = 0, $3981 = 0, $3982 = 0, $3983 = 0, $3984 = 0, $3985 = 0, $3986 = 0, $3987 = 0, $3988 = 0, $3989 = 0, $399 = 0;
 var $3990 = 0, $3991 = 0, $3992 = 0, $3993 = 0, $3994 = 0, $3995 = 0, $3996 = 0, $3997 = 0, $3998 = 0, $3999 = 0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0, $4001 = 0, $4002 = 0, $4003 = 0, $4004 = 0, $4005 = 0, $4006 = 0;
 var $4007 = 0, $4008 = 0, $4009 = 0, $401 = 0, $4010 = 0, $4011 = 0, $4012 = 0, $4013 = 0, $4014 = 0, $4015 = 0, $4016 = 0, $4017 = 0, $4018 = 0, $4019 = 0, $402 = 0, $4020 = 0, $4021 = 0, $4022 = 0, $4023 = 0, $4024 = 0;
 var $4025 = 0, $4026 = 0, $4027 = 0, $4028 = 0, $4029 = 0, $403 = 0, $4030 = 0, $4031 = 0, $4032 = 0, $4033 = 0, $4034 = 0, $4035 = 0, $4036 = 0, $4037 = 0, $4038 = 0, $4039 = 0, $404 = 0, $4040 = 0, $4041 = 0, $4042 = 0;
 var $4043 = 0, $4044 = 0, $4045 = 0, $4046 = 0, $4047 = 0, $4048 = 0, $4049 = 0, $405 = 0, $4050 = 0, $4051 = 0, $4052 = 0, $4053 = 0, $4054 = 0, $4055 = 0, $4056 = 0, $4057 = 0, $4058 = 0, $4059 = 0, $406 = 0, $4060 = 0;
 var $4061 = 0, $4062 = 0, $4063 = 0, $4064 = 0, $4065 = 0, $4066 = 0, $4067 = 0, $4068 = 0, $4069 = 0, $407 = 0, $4070 = 0, $4071 = 0, $4072 = 0, $4073 = 0, $4074 = 0, $4075 = 0, $4076 = 0, $4077 = 0, $4078 = 0, $4079 = 0;
 var $408 = 0, $4080 = 0, $4081 = 0, $4082 = 0, $4083 = 0, $4084 = 0, $4085 = 0, $4086 = 0, $4087 = 0, $4088 = 0, $4089 = 0, $409 = 0, $4090 = 0, $4091 = 0, $4092 = 0, $4093 = 0, $4094 = 0, $4095 = 0, $4096 = 0, $4097 = 0;
 var $4098 = 0, $4099 = 0, $41 = 0, $410 = 0, $4100 = 0, $4101 = 0, $4102 = 0, $4103 = 0, $4104 = 0, $4105 = 0, $4106 = 0, $4107 = 0, $4108 = 0, $4109 = 0, $411 = 0, $4110 = 0, $4111 = 0, $4112 = 0, $4113 = 0, $4114 = 0;
 var $4115 = 0, $4116 = 0, $4117 = 0, $4118 = 0, $4119 = 0, $412 = 0, $4120 = 0, $4121 = 0, $4122 = 0, $4123 = 0, $4124 = 0, $4125 = 0, $4126 = 0, $4127 = 0, $4128 = 0, $4129 = 0, $413 = 0, $4130 = 0, $4131 = 0, $4132 = 0;
 var $4133 = 0, $4134 = 0, $4135 = 0, $4136 = 0, $4137 = 0, $4138 = 0, $4139 = 0, $414 = 0, $4140 = 0, $4141 = 0, $4142 = 0, $4143 = 0, $4144 = 0, $4145 = 0, $4146 = 0, $4147 = 0, $4148 = 0, $4149 = 0, $415 = 0, $4150 = 0;
 var $4151 = 0, $4152 = 0, $4153 = 0, $4154 = 0, $4155 = 0, $4156 = 0, $4157 = 0, $4158 = 0, $4159 = 0, $416 = 0, $4160 = 0, $4161 = 0, $4162 = 0, $4163 = 0, $4164 = 0, $4165 = 0, $4166 = 0, $4167 = 0, $4168 = 0, $4169 = 0;
 var $417 = 0, $4170 = 0, $4171 = 0, $4172 = 0, $4173 = 0, $4174 = 0, $4175 = 0, $4176 = 0, $4177 = 0, $4178 = 0, $4179 = 0, $418 = 0, $4180 = 0, $4181 = 0, $4182 = 0, $4183 = 0, $4184 = 0, $4185 = 0, $4186 = 0, $4187 = 0;
 var $4188 = 0, $4189 = 0, $419 = 0, $4190 = 0, $4191 = 0, $4192 = 0, $4193 = 0, $4194 = 0, $4195 = 0, $4196 = 0, $4197 = 0, $4198 = 0, $4199 = 0, $42 = 0, $420 = 0, $4200 = 0, $4201 = 0, $4202 = 0, $4203 = 0, $4204 = 0;
 var $4205 = 0, $4206 = 0, $4207 = 0, $4208 = 0, $4209 = 0, $421 = 0, $4210 = 0, $4211 = 0, $4212 = 0, $4213 = 0, $4214 = 0, $4215 = 0, $4216 = 0, $4217 = 0, $4218 = 0, $4219 = 0, $422 = 0, $4220 = 0, $4221 = 0, $4222 = 0;
 var $4223 = 0, $4224 = 0, $4225 = 0, $4226 = 0, $4227 = 0, $4228 = 0, $4229 = 0, $423 = 0, $4230 = 0, $4231 = 0, $4232 = 0, $4233 = 0, $4234 = 0, $4235 = 0, $4236 = 0, $4237 = 0, $4238 = 0, $4239 = 0, $424 = 0, $4240 = 0;
 var $4241 = 0, $4242 = 0, $4243 = 0, $4244 = 0, $4245 = 0, $4246 = 0, $4247 = 0, $4248 = 0, $4249 = 0, $425 = 0, $4250 = 0, $4251 = 0, $4252 = 0, $4253 = 0, $4254 = 0, $4255 = 0, $4256 = 0, $4257 = 0, $4258 = 0, $4259 = 0;
 var $426 = 0, $4260 = 0, $4261 = 0, $4262 = 0, $4263 = 0, $4264 = 0, $4265 = 0, $4266 = 0, $4267 = 0, $4268 = 0, $4269 = 0, $427 = 0, $4270 = 0, $4271 = 0, $4272 = 0, $4273 = 0, $4274 = 0, $4275 = 0, $4276 = 0, $4277 = 0;
 var $4278 = 0, $4279 = 0, $428 = 0, $4280 = 0, $4281 = 0, $4282 = 0, $4283 = 0, $4284 = 0, $4285 = 0, $4286 = 0, $4287 = 0, $4288 = 0, $4289 = 0, $429 = 0, $4290 = 0, $4291 = 0, $4292 = 0, $4293 = 0, $4294 = 0, $4295 = 0;
 var $4296 = 0, $4297 = 0, $4298 = 0, $4299 = 0, $43 = 0, $430 = 0, $4300 = 0, $4301 = 0, $4302 = 0, $4303 = 0, $4304 = 0, $4305 = 0, $4306 = 0, $4307 = 0, $4308 = 0, $4309 = 0, $431 = 0, $4310 = 0, $4311 = 0, $4312 = 0;
 var $4313 = 0, $4314 = 0, $4315 = 0, $4316 = 0, $4317 = 0, $4318 = 0, $4319 = 0, $432 = 0, $4320 = 0, $4321 = 0, $4322 = 0, $4323 = 0, $4324 = 0, $4325 = 0, $4326 = 0, $4327 = 0, $4328 = 0, $4329 = 0, $433 = 0, $4330 = 0;
 var $4331 = 0, $4332 = 0, $4333 = 0, $4334 = 0, $4335 = 0, $4336 = 0, $4337 = 0, $4338 = 0, $4339 = 0, $434 = 0, $4340 = 0, $4341 = 0, $4342 = 0, $4343 = 0, $4344 = 0, $4345 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0;
 var $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0;
 var $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0;
 var $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0;
 var $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0;
 var $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0;
 var $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0;
 var $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0;
 var $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0;
 var $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0;
 var $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0;
 var $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0;
 var $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0;
 var $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0;
 var $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0;
 var $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0;
 var $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0;
 var $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0;
 var $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0;
 var $998 = 0, $999 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $8 = sp + 20|0;
 $9 = sp + 16|0;
 $10 = sp + 12|0;
 $11 = sp + 8|0;
 $12 = sp + 4|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $14 = $3&1;
 $7 = $14;
 $15 = $7; //@line 72 "./src/cpp/unrar/sha1.cpp"
 $16 = $15&1; //@line 72 "./src/cpp/unrar/sha1.cpp"
 if ($16) {
  $17 = $5; //@line 74 "./src/cpp/unrar/sha1.cpp"
  $13 = $17; //@line 74 "./src/cpp/unrar/sha1.cpp"
  $18 = $13; //@line 75 "./src/cpp/unrar/sha1.cpp"
  $19 = $6; //@line 75 "./src/cpp/unrar/sha1.cpp"
  dest=$18; src=$19; stop=dest+64|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 75 "./src/cpp/unrar/sha1.cpp"
 } else {
  $20 = $6; //@line 78 "./src/cpp/unrar/sha1.cpp"
  $13 = $20; //@line 78 "./src/cpp/unrar/sha1.cpp"
 }
 $21 = $4; //@line 113 "./src/cpp/unrar/sha1.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 113 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $22; //@line 113 "./src/cpp/unrar/sha1.cpp"
 $23 = $4; //@line 114 "./src/cpp/unrar/sha1.cpp"
 $24 = ((($23)) + 4|0); //@line 114 "./src/cpp/unrar/sha1.cpp"
 $25 = HEAP32[$24>>2]|0; //@line 114 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $25; //@line 114 "./src/cpp/unrar/sha1.cpp"
 $26 = $4; //@line 115 "./src/cpp/unrar/sha1.cpp"
 $27 = ((($26)) + 8|0); //@line 115 "./src/cpp/unrar/sha1.cpp"
 $28 = HEAP32[$27>>2]|0; //@line 115 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $28; //@line 115 "./src/cpp/unrar/sha1.cpp"
 $29 = $4; //@line 116 "./src/cpp/unrar/sha1.cpp"
 $30 = ((($29)) + 12|0); //@line 116 "./src/cpp/unrar/sha1.cpp"
 $31 = HEAP32[$30>>2]|0; //@line 116 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $31; //@line 116 "./src/cpp/unrar/sha1.cpp"
 $32 = $4; //@line 117 "./src/cpp/unrar/sha1.cpp"
 $33 = ((($32)) + 16|0); //@line 117 "./src/cpp/unrar/sha1.cpp"
 $34 = HEAP32[$33>>2]|0; //@line 117 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $34; //@line 117 "./src/cpp/unrar/sha1.cpp"
 $35 = HEAP32[$9>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $36 = HEAP32[$10>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $37 = HEAP32[$11>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $38 = $36 ^ $37; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $39 = $35 & $38; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $40 = HEAP32[$11>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $41 = $39 ^ $40; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $42 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $43 = HEAP32[$42>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $44 = $43 << 24; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $45 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $46 = HEAP32[$45>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $47 = $46 >>> 8; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $48 = $44 | $47; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $49 = $48 & -16711936; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $50 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $51 = HEAP32[$50>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $52 = $51 << 8; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $53 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $54 = HEAP32[$53>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $55 = $54 >>> 24; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $56 = $52 | $55; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $57 = $56 & 16711935; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $58 = $49 | $57; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $59 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$59>>2] = $58; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $60 = (($41) + ($58))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $61 = (($60) + 1518500249)|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $62 = HEAP32[$8>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $63 = $62 << 5; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $64 = HEAP32[$8>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $65 = $64 >>> 27; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $66 = $63 | $65; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $67 = (($61) + ($66))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $68 = HEAP32[$12>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $69 = (($68) + ($67))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $69; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $70 = HEAP32[$9>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $71 = $70 << 30; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $72 = HEAP32[$9>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $73 = $72 >>> 2; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $74 = $71 | $73; //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $74; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $75 = HEAP32[$8>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $76 = HEAP32[$9>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $77 = HEAP32[$10>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $78 = $76 ^ $77; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $79 = $75 & $78; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $80 = HEAP32[$10>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $81 = $79 ^ $80; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $82 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $83 = ((($82)) + 4|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $84 = HEAP32[$83>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $85 = $84 << 24; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $86 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $87 = ((($86)) + 4|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $88 = HEAP32[$87>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $89 = $88 >>> 8; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $90 = $85 | $89; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $91 = $90 & -16711936; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $92 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $93 = ((($92)) + 4|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $94 = HEAP32[$93>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $95 = $94 << 8; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $96 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $97 = ((($96)) + 4|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $98 = HEAP32[$97>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $99 = $98 >>> 24; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $100 = $95 | $99; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $101 = $100 & 16711935; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $102 = $91 | $101; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $103 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $104 = ((($103)) + 4|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$104>>2] = $102; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $105 = (($81) + ($102))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $106 = (($105) + 1518500249)|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $107 = HEAP32[$12>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $108 = $107 << 5; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $109 = HEAP32[$12>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $110 = $109 >>> 27; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $111 = $108 | $110; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $112 = (($106) + ($111))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $113 = HEAP32[$11>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $114 = (($113) + ($112))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $114; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $115 = HEAP32[$8>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $116 = $115 << 30; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $117 = HEAP32[$8>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $118 = $117 >>> 2; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $119 = $116 | $118; //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $119; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $120 = HEAP32[$12>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $121 = HEAP32[$8>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $122 = HEAP32[$9>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $123 = $121 ^ $122; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $124 = $120 & $123; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $125 = HEAP32[$9>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $126 = $124 ^ $125; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $127 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $128 = ((($127)) + 8|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $129 = HEAP32[$128>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $130 = $129 << 24; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $131 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $132 = ((($131)) + 8|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $133 = HEAP32[$132>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $134 = $133 >>> 8; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $135 = $130 | $134; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $136 = $135 & -16711936; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $137 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $138 = ((($137)) + 8|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $139 = HEAP32[$138>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $140 = $139 << 8; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $141 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $142 = ((($141)) + 8|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $143 = HEAP32[$142>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $144 = $143 >>> 24; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $145 = $140 | $144; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $146 = $145 & 16711935; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $147 = $136 | $146; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $148 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $149 = ((($148)) + 8|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$149>>2] = $147; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $150 = (($126) + ($147))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $151 = (($150) + 1518500249)|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $152 = HEAP32[$11>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $153 = $152 << 5; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $154 = HEAP32[$11>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $155 = $154 >>> 27; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $156 = $153 | $155; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $157 = (($151) + ($156))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $158 = HEAP32[$10>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $159 = (($158) + ($157))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $159; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $160 = HEAP32[$12>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $161 = $160 << 30; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $162 = HEAP32[$12>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $163 = $162 >>> 2; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $164 = $161 | $163; //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $164; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $165 = HEAP32[$11>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $166 = HEAP32[$12>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $167 = HEAP32[$8>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $168 = $166 ^ $167; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $169 = $165 & $168; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $170 = HEAP32[$8>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $171 = $169 ^ $170; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $172 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $173 = ((($172)) + 12|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $174 = HEAP32[$173>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $175 = $174 << 24; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $176 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $177 = ((($176)) + 12|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $178 = HEAP32[$177>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $179 = $178 >>> 8; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $180 = $175 | $179; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $181 = $180 & -16711936; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $182 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $183 = ((($182)) + 12|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $184 = HEAP32[$183>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $185 = $184 << 8; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $186 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $187 = ((($186)) + 12|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 $188 = HEAP32[$187>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $189 = $188 >>> 24; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $190 = $185 | $189; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $191 = $190 & 16711935; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $192 = $181 | $191; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $193 = $13; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $194 = ((($193)) + 12|0); //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$194>>2] = $192; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $195 = (($171) + ($192))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $196 = (($195) + 1518500249)|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $197 = HEAP32[$10>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $198 = $197 << 5; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $199 = HEAP32[$10>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $200 = $199 >>> 27; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $201 = $198 | $200; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $202 = (($196) + ($201))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $203 = HEAP32[$9>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $204 = (($203) + ($202))|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $204; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $205 = HEAP32[$11>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $206 = $205 << 30; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $207 = HEAP32[$11>>2]|0; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $208 = $207 >>> 2; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $209 = $206 | $208; //@line 119 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $209; //@line 119 "./src/cpp/unrar/sha1.cpp"
 $210 = HEAP32[$10>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $211 = HEAP32[$11>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $212 = HEAP32[$12>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $213 = $211 ^ $212; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $214 = $210 & $213; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $215 = HEAP32[$12>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $216 = $214 ^ $215; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $217 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $218 = ((($217)) + 16|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $219 = HEAP32[$218>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $220 = $219 << 24; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $221 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $222 = ((($221)) + 16|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $223 = HEAP32[$222>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $224 = $223 >>> 8; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $225 = $220 | $224; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $226 = $225 & -16711936; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $227 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $228 = ((($227)) + 16|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $229 = HEAP32[$228>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $230 = $229 << 8; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $231 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $232 = ((($231)) + 16|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $233 = HEAP32[$232>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $234 = $233 >>> 24; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $235 = $230 | $234; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $236 = $235 & 16711935; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $237 = $226 | $236; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $238 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $239 = ((($238)) + 16|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$239>>2] = $237; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $240 = (($216) + ($237))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $241 = (($240) + 1518500249)|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $242 = HEAP32[$9>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $243 = $242 << 5; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $244 = HEAP32[$9>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $245 = $244 >>> 27; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $246 = $243 | $245; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $247 = (($241) + ($246))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $248 = HEAP32[$8>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $249 = (($248) + ($247))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $249; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $250 = HEAP32[$10>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $251 = $250 << 30; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $252 = HEAP32[$10>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $253 = $252 >>> 2; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $254 = $251 | $253; //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $254; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $255 = HEAP32[$9>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $256 = HEAP32[$10>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $257 = HEAP32[$11>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $258 = $256 ^ $257; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $259 = $255 & $258; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $260 = HEAP32[$11>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $261 = $259 ^ $260; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $262 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $263 = ((($262)) + 20|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $264 = HEAP32[$263>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $265 = $264 << 24; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $266 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $267 = ((($266)) + 20|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $268 = HEAP32[$267>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $269 = $268 >>> 8; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $270 = $265 | $269; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $271 = $270 & -16711936; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $272 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $273 = ((($272)) + 20|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $274 = HEAP32[$273>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $275 = $274 << 8; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $276 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $277 = ((($276)) + 20|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $278 = HEAP32[$277>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $279 = $278 >>> 24; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $280 = $275 | $279; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $281 = $280 & 16711935; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $282 = $271 | $281; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $283 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $284 = ((($283)) + 20|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$284>>2] = $282; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $285 = (($261) + ($282))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $286 = (($285) + 1518500249)|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $287 = HEAP32[$8>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $288 = $287 << 5; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $289 = HEAP32[$8>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $290 = $289 >>> 27; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $291 = $288 | $290; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $292 = (($286) + ($291))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $293 = HEAP32[$12>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $294 = (($293) + ($292))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $294; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $295 = HEAP32[$9>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $296 = $295 << 30; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $297 = HEAP32[$9>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $298 = $297 >>> 2; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $299 = $296 | $298; //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $299; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $300 = HEAP32[$8>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $301 = HEAP32[$9>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $302 = HEAP32[$10>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $303 = $301 ^ $302; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $304 = $300 & $303; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $305 = HEAP32[$10>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $306 = $304 ^ $305; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $307 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $308 = ((($307)) + 24|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $309 = HEAP32[$308>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $310 = $309 << 24; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $311 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $312 = ((($311)) + 24|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $313 = HEAP32[$312>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $314 = $313 >>> 8; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $315 = $310 | $314; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $316 = $315 & -16711936; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $317 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $318 = ((($317)) + 24|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $319 = HEAP32[$318>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $320 = $319 << 8; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $321 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $322 = ((($321)) + 24|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $323 = HEAP32[$322>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $324 = $323 >>> 24; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $325 = $320 | $324; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $326 = $325 & 16711935; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $327 = $316 | $326; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $328 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $329 = ((($328)) + 24|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$329>>2] = $327; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $330 = (($306) + ($327))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $331 = (($330) + 1518500249)|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $332 = HEAP32[$12>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $333 = $332 << 5; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $334 = HEAP32[$12>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $335 = $334 >>> 27; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $336 = $333 | $335; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $337 = (($331) + ($336))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $338 = HEAP32[$11>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $339 = (($338) + ($337))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $339; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $340 = HEAP32[$8>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $341 = $340 << 30; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $342 = HEAP32[$8>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $343 = $342 >>> 2; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $344 = $341 | $343; //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $344; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $345 = HEAP32[$12>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $346 = HEAP32[$8>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $347 = HEAP32[$9>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $348 = $346 ^ $347; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $349 = $345 & $348; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $350 = HEAP32[$9>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $351 = $349 ^ $350; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $352 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $353 = ((($352)) + 28|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $354 = HEAP32[$353>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $355 = $354 << 24; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $356 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $357 = ((($356)) + 28|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $358 = HEAP32[$357>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $359 = $358 >>> 8; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $360 = $355 | $359; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $361 = $360 & -16711936; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $362 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $363 = ((($362)) + 28|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $364 = HEAP32[$363>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $365 = $364 << 8; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $366 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $367 = ((($366)) + 28|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 $368 = HEAP32[$367>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $369 = $368 >>> 24; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $370 = $365 | $369; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $371 = $370 & 16711935; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $372 = $361 | $371; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $373 = $13; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $374 = ((($373)) + 28|0); //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$374>>2] = $372; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $375 = (($351) + ($372))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $376 = (($375) + 1518500249)|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $377 = HEAP32[$11>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $378 = $377 << 5; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $379 = HEAP32[$11>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $380 = $379 >>> 27; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $381 = $378 | $380; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $382 = (($376) + ($381))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $383 = HEAP32[$10>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $384 = (($383) + ($382))|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $384; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $385 = HEAP32[$12>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $386 = $385 << 30; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $387 = HEAP32[$12>>2]|0; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $388 = $387 >>> 2; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $389 = $386 | $388; //@line 120 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $389; //@line 120 "./src/cpp/unrar/sha1.cpp"
 $390 = HEAP32[$11>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $391 = HEAP32[$12>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $392 = HEAP32[$8>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $393 = $391 ^ $392; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $394 = $390 & $393; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $395 = HEAP32[$8>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $396 = $394 ^ $395; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $397 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $398 = ((($397)) + 32|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $399 = HEAP32[$398>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $400 = $399 << 24; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $401 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $402 = ((($401)) + 32|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $403 = HEAP32[$402>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $404 = $403 >>> 8; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $405 = $400 | $404; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $406 = $405 & -16711936; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $407 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $408 = ((($407)) + 32|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $409 = HEAP32[$408>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $410 = $409 << 8; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $411 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $412 = ((($411)) + 32|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $413 = HEAP32[$412>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $414 = $413 >>> 24; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $415 = $410 | $414; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $416 = $415 & 16711935; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $417 = $406 | $416; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $418 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $419 = ((($418)) + 32|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$419>>2] = $417; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $420 = (($396) + ($417))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $421 = (($420) + 1518500249)|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $422 = HEAP32[$10>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $423 = $422 << 5; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $424 = HEAP32[$10>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $425 = $424 >>> 27; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $426 = $423 | $425; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $427 = (($421) + ($426))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $428 = HEAP32[$9>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $429 = (($428) + ($427))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $429; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $430 = HEAP32[$11>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $431 = $430 << 30; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $432 = HEAP32[$11>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $433 = $432 >>> 2; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $434 = $431 | $433; //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $434; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $435 = HEAP32[$10>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $436 = HEAP32[$11>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $437 = HEAP32[$12>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $438 = $436 ^ $437; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $439 = $435 & $438; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $440 = HEAP32[$12>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $441 = $439 ^ $440; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $442 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $443 = ((($442)) + 36|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $444 = HEAP32[$443>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $445 = $444 << 24; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $446 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $447 = ((($446)) + 36|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $448 = HEAP32[$447>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $449 = $448 >>> 8; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $450 = $445 | $449; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $451 = $450 & -16711936; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $452 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $453 = ((($452)) + 36|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $454 = HEAP32[$453>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $455 = $454 << 8; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $456 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $457 = ((($456)) + 36|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $458 = HEAP32[$457>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $459 = $458 >>> 24; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $460 = $455 | $459; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $461 = $460 & 16711935; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $462 = $451 | $461; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $463 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $464 = ((($463)) + 36|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$464>>2] = $462; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $465 = (($441) + ($462))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $466 = (($465) + 1518500249)|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $467 = HEAP32[$9>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $468 = $467 << 5; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $469 = HEAP32[$9>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $470 = $469 >>> 27; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $471 = $468 | $470; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $472 = (($466) + ($471))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $473 = HEAP32[$8>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $474 = (($473) + ($472))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $474; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $475 = HEAP32[$10>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $476 = $475 << 30; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $477 = HEAP32[$10>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $478 = $477 >>> 2; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $479 = $476 | $478; //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $479; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $480 = HEAP32[$9>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $481 = HEAP32[$10>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $482 = HEAP32[$11>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $483 = $481 ^ $482; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $484 = $480 & $483; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $485 = HEAP32[$11>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $486 = $484 ^ $485; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $487 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $488 = ((($487)) + 40|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $489 = HEAP32[$488>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $490 = $489 << 24; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $491 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $492 = ((($491)) + 40|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $493 = HEAP32[$492>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $494 = $493 >>> 8; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $495 = $490 | $494; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $496 = $495 & -16711936; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $497 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $498 = ((($497)) + 40|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $499 = HEAP32[$498>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $500 = $499 << 8; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $501 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $502 = ((($501)) + 40|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $503 = HEAP32[$502>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $504 = $503 >>> 24; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $505 = $500 | $504; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $506 = $505 & 16711935; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $507 = $496 | $506; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $508 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $509 = ((($508)) + 40|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$509>>2] = $507; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $510 = (($486) + ($507))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $511 = (($510) + 1518500249)|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $512 = HEAP32[$8>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $513 = $512 << 5; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $514 = HEAP32[$8>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $515 = $514 >>> 27; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $516 = $513 | $515; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $517 = (($511) + ($516))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $518 = HEAP32[$12>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $519 = (($518) + ($517))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $519; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $520 = HEAP32[$9>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $521 = $520 << 30; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $522 = HEAP32[$9>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $523 = $522 >>> 2; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $524 = $521 | $523; //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $524; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $525 = HEAP32[$8>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $526 = HEAP32[$9>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $527 = HEAP32[$10>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $528 = $526 ^ $527; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $529 = $525 & $528; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $530 = HEAP32[$10>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $531 = $529 ^ $530; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $532 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $533 = ((($532)) + 44|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $534 = HEAP32[$533>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $535 = $534 << 24; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $536 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $537 = ((($536)) + 44|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $538 = HEAP32[$537>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $539 = $538 >>> 8; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $540 = $535 | $539; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $541 = $540 & -16711936; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $542 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $543 = ((($542)) + 44|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $544 = HEAP32[$543>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $545 = $544 << 8; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $546 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $547 = ((($546)) + 44|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 $548 = HEAP32[$547>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $549 = $548 >>> 24; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $550 = $545 | $549; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $551 = $550 & 16711935; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $552 = $541 | $551; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $553 = $13; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $554 = ((($553)) + 44|0); //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$554>>2] = $552; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $555 = (($531) + ($552))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $556 = (($555) + 1518500249)|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $557 = HEAP32[$12>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $558 = $557 << 5; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $559 = HEAP32[$12>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $560 = $559 >>> 27; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $561 = $558 | $560; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $562 = (($556) + ($561))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $563 = HEAP32[$11>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $564 = (($563) + ($562))|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $564; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $565 = HEAP32[$8>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $566 = $565 << 30; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $567 = HEAP32[$8>>2]|0; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $568 = $567 >>> 2; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $569 = $566 | $568; //@line 121 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $569; //@line 121 "./src/cpp/unrar/sha1.cpp"
 $570 = HEAP32[$12>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $571 = HEAP32[$8>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $572 = HEAP32[$9>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $573 = $571 ^ $572; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $574 = $570 & $573; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $575 = HEAP32[$9>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $576 = $574 ^ $575; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $577 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $578 = ((($577)) + 48|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $579 = HEAP32[$578>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $580 = $579 << 24; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $581 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $582 = ((($581)) + 48|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $583 = HEAP32[$582>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $584 = $583 >>> 8; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $585 = $580 | $584; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $586 = $585 & -16711936; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $587 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $588 = ((($587)) + 48|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $589 = HEAP32[$588>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $590 = $589 << 8; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $591 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $592 = ((($591)) + 48|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $593 = HEAP32[$592>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $594 = $593 >>> 24; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $595 = $590 | $594; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $596 = $595 & 16711935; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $597 = $586 | $596; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $598 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $599 = ((($598)) + 48|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$599>>2] = $597; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $600 = (($576) + ($597))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $601 = (($600) + 1518500249)|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $602 = HEAP32[$11>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $603 = $602 << 5; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $604 = HEAP32[$11>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $605 = $604 >>> 27; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $606 = $603 | $605; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $607 = (($601) + ($606))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $608 = HEAP32[$10>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $609 = (($608) + ($607))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $609; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $610 = HEAP32[$12>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $611 = $610 << 30; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $612 = HEAP32[$12>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $613 = $612 >>> 2; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $614 = $611 | $613; //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $614; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $615 = HEAP32[$11>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $616 = HEAP32[$12>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $617 = HEAP32[$8>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $618 = $616 ^ $617; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $619 = $615 & $618; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $620 = HEAP32[$8>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $621 = $619 ^ $620; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $622 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $623 = ((($622)) + 52|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $624 = HEAP32[$623>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $625 = $624 << 24; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $626 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $627 = ((($626)) + 52|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $628 = HEAP32[$627>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $629 = $628 >>> 8; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $630 = $625 | $629; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $631 = $630 & -16711936; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $632 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $633 = ((($632)) + 52|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $634 = HEAP32[$633>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $635 = $634 << 8; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $636 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $637 = ((($636)) + 52|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $638 = HEAP32[$637>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $639 = $638 >>> 24; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $640 = $635 | $639; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $641 = $640 & 16711935; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $642 = $631 | $641; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $643 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $644 = ((($643)) + 52|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$644>>2] = $642; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $645 = (($621) + ($642))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $646 = (($645) + 1518500249)|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $647 = HEAP32[$10>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $648 = $647 << 5; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $649 = HEAP32[$10>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $650 = $649 >>> 27; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $651 = $648 | $650; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $652 = (($646) + ($651))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $653 = HEAP32[$9>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $654 = (($653) + ($652))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $654; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $655 = HEAP32[$11>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $656 = $655 << 30; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $657 = HEAP32[$11>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $658 = $657 >>> 2; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $659 = $656 | $658; //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $659; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $660 = HEAP32[$10>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $661 = HEAP32[$11>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $662 = HEAP32[$12>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $663 = $661 ^ $662; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $664 = $660 & $663; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $665 = HEAP32[$12>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $666 = $664 ^ $665; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $667 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $668 = ((($667)) + 56|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $669 = HEAP32[$668>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $670 = $669 << 24; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $671 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $672 = ((($671)) + 56|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $673 = HEAP32[$672>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $674 = $673 >>> 8; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $675 = $670 | $674; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $676 = $675 & -16711936; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $677 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $678 = ((($677)) + 56|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $679 = HEAP32[$678>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $680 = $679 << 8; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $681 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $682 = ((($681)) + 56|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $683 = HEAP32[$682>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $684 = $683 >>> 24; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $685 = $680 | $684; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $686 = $685 & 16711935; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $687 = $676 | $686; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $688 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $689 = ((($688)) + 56|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$689>>2] = $687; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $690 = (($666) + ($687))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $691 = (($690) + 1518500249)|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $692 = HEAP32[$9>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $693 = $692 << 5; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $694 = HEAP32[$9>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $695 = $694 >>> 27; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $696 = $693 | $695; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $697 = (($691) + ($696))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $698 = HEAP32[$8>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $699 = (($698) + ($697))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $699; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $700 = HEAP32[$10>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $701 = $700 << 30; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $702 = HEAP32[$10>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $703 = $702 >>> 2; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $704 = $701 | $703; //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $704; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $705 = HEAP32[$9>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $706 = HEAP32[$10>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $707 = HEAP32[$11>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $708 = $706 ^ $707; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $709 = $705 & $708; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $710 = HEAP32[$11>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $711 = $709 ^ $710; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $712 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $713 = ((($712)) + 60|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $714 = HEAP32[$713>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $715 = $714 << 24; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $716 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $717 = ((($716)) + 60|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $718 = HEAP32[$717>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $719 = $718 >>> 8; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $720 = $715 | $719; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $721 = $720 & -16711936; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $722 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $723 = ((($722)) + 60|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $724 = HEAP32[$723>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $725 = $724 << 8; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $726 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $727 = ((($726)) + 60|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 $728 = HEAP32[$727>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $729 = $728 >>> 24; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $730 = $725 | $729; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $731 = $730 & 16711935; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $732 = $721 | $731; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $733 = $13; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $734 = ((($733)) + 60|0); //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$734>>2] = $732; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $735 = (($711) + ($732))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $736 = (($735) + 1518500249)|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $737 = HEAP32[$8>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $738 = $737 << 5; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $739 = HEAP32[$8>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $740 = $739 >>> 27; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $741 = $738 | $740; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $742 = (($736) + ($741))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $743 = HEAP32[$12>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $744 = (($743) + ($742))|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $744; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $745 = HEAP32[$9>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $746 = $745 << 30; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $747 = HEAP32[$9>>2]|0; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $748 = $747 >>> 2; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $749 = $746 | $748; //@line 122 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $749; //@line 122 "./src/cpp/unrar/sha1.cpp"
 $750 = HEAP32[$8>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $751 = HEAP32[$9>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $752 = HEAP32[$10>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $753 = $751 ^ $752; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $754 = $750 & $753; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $755 = HEAP32[$10>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $756 = $754 ^ $755; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $757 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $758 = ((($757)) + 52|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $759 = HEAP32[$758>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $760 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $761 = ((($760)) + 32|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $762 = HEAP32[$761>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $763 = $759 ^ $762; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $764 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $765 = ((($764)) + 8|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $766 = HEAP32[$765>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $767 = $763 ^ $766; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $768 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $769 = HEAP32[$768>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $770 = $767 ^ $769; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $771 = $770 << 1; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $772 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $773 = ((($772)) + 52|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $774 = HEAP32[$773>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $775 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $776 = ((($775)) + 32|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $777 = HEAP32[$776>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $778 = $774 ^ $777; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $779 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $780 = ((($779)) + 8|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $781 = HEAP32[$780>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $782 = $778 ^ $781; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $783 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $784 = HEAP32[$783>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $785 = $782 ^ $784; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $786 = $785 >>> 31; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $787 = $771 | $786; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $788 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$788>>2] = $787; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $789 = (($756) + ($787))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $790 = (($789) + 1518500249)|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $791 = HEAP32[$12>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $792 = $791 << 5; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $793 = HEAP32[$12>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $794 = $793 >>> 27; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $795 = $792 | $794; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $796 = (($790) + ($795))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $797 = HEAP32[$11>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $798 = (($797) + ($796))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $798; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $799 = HEAP32[$8>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $800 = $799 << 30; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $801 = HEAP32[$8>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $802 = $801 >>> 2; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $803 = $800 | $802; //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $803; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $804 = HEAP32[$12>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $805 = HEAP32[$8>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $806 = HEAP32[$9>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $807 = $805 ^ $806; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $808 = $804 & $807; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $809 = HEAP32[$9>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $810 = $808 ^ $809; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $811 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $812 = ((($811)) + 56|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $813 = HEAP32[$812>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $814 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $815 = ((($814)) + 36|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $816 = HEAP32[$815>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $817 = $813 ^ $816; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $818 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $819 = ((($818)) + 12|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $820 = HEAP32[$819>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $821 = $817 ^ $820; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $822 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $823 = ((($822)) + 4|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $824 = HEAP32[$823>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $825 = $821 ^ $824; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $826 = $825 << 1; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $827 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $828 = ((($827)) + 56|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $829 = HEAP32[$828>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $830 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $831 = ((($830)) + 36|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $832 = HEAP32[$831>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $833 = $829 ^ $832; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $834 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $835 = ((($834)) + 12|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $836 = HEAP32[$835>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $837 = $833 ^ $836; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $838 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $839 = ((($838)) + 4|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $840 = HEAP32[$839>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $841 = $837 ^ $840; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $842 = $841 >>> 31; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $843 = $826 | $842; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $844 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $845 = ((($844)) + 4|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$845>>2] = $843; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $846 = (($810) + ($843))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $847 = (($846) + 1518500249)|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $848 = HEAP32[$11>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $849 = $848 << 5; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $850 = HEAP32[$11>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $851 = $850 >>> 27; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $852 = $849 | $851; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $853 = (($847) + ($852))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $854 = HEAP32[$10>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $855 = (($854) + ($853))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $855; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $856 = HEAP32[$12>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $857 = $856 << 30; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $858 = HEAP32[$12>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $859 = $858 >>> 2; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $860 = $857 | $859; //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $860; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $861 = HEAP32[$11>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $862 = HEAP32[$12>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $863 = HEAP32[$8>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $864 = $862 ^ $863; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $865 = $861 & $864; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $866 = HEAP32[$8>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $867 = $865 ^ $866; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $868 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $869 = ((($868)) + 60|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $870 = HEAP32[$869>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $871 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $872 = ((($871)) + 40|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $873 = HEAP32[$872>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $874 = $870 ^ $873; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $875 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $876 = ((($875)) + 16|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $877 = HEAP32[$876>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $878 = $874 ^ $877; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $879 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $880 = ((($879)) + 8|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $881 = HEAP32[$880>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $882 = $878 ^ $881; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $883 = $882 << 1; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $884 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $885 = ((($884)) + 60|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $886 = HEAP32[$885>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $887 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $888 = ((($887)) + 40|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $889 = HEAP32[$888>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $890 = $886 ^ $889; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $891 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $892 = ((($891)) + 16|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $893 = HEAP32[$892>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $894 = $890 ^ $893; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $895 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $896 = ((($895)) + 8|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $897 = HEAP32[$896>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $898 = $894 ^ $897; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $899 = $898 >>> 31; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $900 = $883 | $899; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $901 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $902 = ((($901)) + 8|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$902>>2] = $900; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $903 = (($867) + ($900))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $904 = (($903) + 1518500249)|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $905 = HEAP32[$10>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $906 = $905 << 5; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $907 = HEAP32[$10>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $908 = $907 >>> 27; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $909 = $906 | $908; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $910 = (($904) + ($909))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $911 = HEAP32[$9>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $912 = (($911) + ($910))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $912; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $913 = HEAP32[$11>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $914 = $913 << 30; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $915 = HEAP32[$11>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $916 = $915 >>> 2; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $917 = $914 | $916; //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $917; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $918 = HEAP32[$10>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $919 = HEAP32[$11>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $920 = HEAP32[$12>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $921 = $919 ^ $920; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $922 = $918 & $921; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $923 = HEAP32[$12>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $924 = $922 ^ $923; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $925 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $926 = HEAP32[$925>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $927 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $928 = ((($927)) + 44|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $929 = HEAP32[$928>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $930 = $926 ^ $929; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $931 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $932 = ((($931)) + 20|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $933 = HEAP32[$932>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $934 = $930 ^ $933; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $935 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $936 = ((($935)) + 12|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $937 = HEAP32[$936>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $938 = $934 ^ $937; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $939 = $938 << 1; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $940 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $941 = HEAP32[$940>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $942 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $943 = ((($942)) + 44|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $944 = HEAP32[$943>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $945 = $941 ^ $944; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $946 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $947 = ((($946)) + 20|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $948 = HEAP32[$947>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $949 = $945 ^ $948; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $950 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $951 = ((($950)) + 12|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 $952 = HEAP32[$951>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $953 = $949 ^ $952; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $954 = $953 >>> 31; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $955 = $939 | $954; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $956 = $13; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $957 = ((($956)) + 12|0); //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$957>>2] = $955; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $958 = (($924) + ($955))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $959 = (($958) + 1518500249)|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $960 = HEAP32[$9>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $961 = $960 << 5; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $962 = HEAP32[$9>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $963 = $962 >>> 27; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $964 = $961 | $963; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $965 = (($959) + ($964))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $966 = HEAP32[$8>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $967 = (($966) + ($965))|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $967; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $968 = HEAP32[$10>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $969 = $968 << 30; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $970 = HEAP32[$10>>2]|0; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $971 = $970 >>> 2; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $972 = $969 | $971; //@line 123 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $972; //@line 123 "./src/cpp/unrar/sha1.cpp"
 $973 = HEAP32[$9>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $974 = HEAP32[$10>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $975 = $973 ^ $974; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $976 = HEAP32[$11>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $977 = $975 ^ $976; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $978 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $979 = ((($978)) + 4|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $980 = HEAP32[$979>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $981 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $982 = ((($981)) + 48|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $983 = HEAP32[$982>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $984 = $980 ^ $983; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $985 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $986 = ((($985)) + 24|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $987 = HEAP32[$986>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $988 = $984 ^ $987; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $989 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $990 = ((($989)) + 16|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $991 = HEAP32[$990>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $992 = $988 ^ $991; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $993 = $992 << 1; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $994 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $995 = ((($994)) + 4|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $996 = HEAP32[$995>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $997 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $998 = ((($997)) + 48|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $999 = HEAP32[$998>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1000 = $996 ^ $999; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1001 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1002 = ((($1001)) + 24|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1003 = HEAP32[$1002>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1004 = $1000 ^ $1003; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1005 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1006 = ((($1005)) + 16|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1007 = HEAP32[$1006>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1008 = $1004 ^ $1007; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1009 = $1008 >>> 31; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1010 = $993 | $1009; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1011 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1012 = ((($1011)) + 16|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1012>>2] = $1010; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1013 = (($977) + ($1010))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1014 = (($1013) + 1859775393)|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1015 = HEAP32[$8>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1016 = $1015 << 5; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1017 = HEAP32[$8>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1018 = $1017 >>> 27; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1019 = $1016 | $1018; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1020 = (($1014) + ($1019))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1021 = HEAP32[$12>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1022 = (($1021) + ($1020))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $1022; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1023 = HEAP32[$9>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1024 = $1023 << 30; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1025 = HEAP32[$9>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1026 = $1025 >>> 2; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1027 = $1024 | $1026; //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $1027; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1028 = HEAP32[$8>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1029 = HEAP32[$9>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1030 = $1028 ^ $1029; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1031 = HEAP32[$10>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1032 = $1030 ^ $1031; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1033 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1034 = ((($1033)) + 8|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1035 = HEAP32[$1034>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1036 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1037 = ((($1036)) + 52|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1038 = HEAP32[$1037>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1039 = $1035 ^ $1038; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1040 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1041 = ((($1040)) + 28|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1042 = HEAP32[$1041>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1043 = $1039 ^ $1042; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1044 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1045 = ((($1044)) + 20|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1046 = HEAP32[$1045>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1047 = $1043 ^ $1046; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1048 = $1047 << 1; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1049 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1050 = ((($1049)) + 8|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1051 = HEAP32[$1050>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1052 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1053 = ((($1052)) + 52|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1054 = HEAP32[$1053>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1055 = $1051 ^ $1054; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1056 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1057 = ((($1056)) + 28|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1058 = HEAP32[$1057>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1059 = $1055 ^ $1058; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1060 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1061 = ((($1060)) + 20|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1062 = HEAP32[$1061>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1063 = $1059 ^ $1062; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1064 = $1063 >>> 31; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1065 = $1048 | $1064; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1066 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1067 = ((($1066)) + 20|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1067>>2] = $1065; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1068 = (($1032) + ($1065))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1069 = (($1068) + 1859775393)|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1070 = HEAP32[$12>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1071 = $1070 << 5; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1072 = HEAP32[$12>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1073 = $1072 >>> 27; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1074 = $1071 | $1073; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1075 = (($1069) + ($1074))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1076 = HEAP32[$11>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1077 = (($1076) + ($1075))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $1077; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1078 = HEAP32[$8>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1079 = $1078 << 30; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1080 = HEAP32[$8>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1081 = $1080 >>> 2; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1082 = $1079 | $1081; //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $1082; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1083 = HEAP32[$12>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1084 = HEAP32[$8>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1085 = $1083 ^ $1084; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1086 = HEAP32[$9>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1087 = $1085 ^ $1086; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1088 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1089 = ((($1088)) + 12|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1090 = HEAP32[$1089>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1091 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1092 = ((($1091)) + 56|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1093 = HEAP32[$1092>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1094 = $1090 ^ $1093; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1095 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1096 = ((($1095)) + 32|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1097 = HEAP32[$1096>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1098 = $1094 ^ $1097; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1099 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1100 = ((($1099)) + 24|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1101 = HEAP32[$1100>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1102 = $1098 ^ $1101; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1103 = $1102 << 1; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1104 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1105 = ((($1104)) + 12|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1106 = HEAP32[$1105>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1107 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1108 = ((($1107)) + 56|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1109 = HEAP32[$1108>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1110 = $1106 ^ $1109; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1111 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1112 = ((($1111)) + 32|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1113 = HEAP32[$1112>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1114 = $1110 ^ $1113; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1115 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1116 = ((($1115)) + 24|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1117 = HEAP32[$1116>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1118 = $1114 ^ $1117; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1119 = $1118 >>> 31; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1120 = $1103 | $1119; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1121 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1122 = ((($1121)) + 24|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1122>>2] = $1120; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1123 = (($1087) + ($1120))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1124 = (($1123) + 1859775393)|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1125 = HEAP32[$11>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1126 = $1125 << 5; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1127 = HEAP32[$11>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1128 = $1127 >>> 27; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1129 = $1126 | $1128; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1130 = (($1124) + ($1129))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1131 = HEAP32[$10>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1132 = (($1131) + ($1130))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $1132; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1133 = HEAP32[$12>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1134 = $1133 << 30; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1135 = HEAP32[$12>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1136 = $1135 >>> 2; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1137 = $1134 | $1136; //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $1137; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1138 = HEAP32[$11>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1139 = HEAP32[$12>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1140 = $1138 ^ $1139; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1141 = HEAP32[$8>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1142 = $1140 ^ $1141; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1143 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1144 = ((($1143)) + 16|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1145 = HEAP32[$1144>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1146 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1147 = ((($1146)) + 60|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1148 = HEAP32[$1147>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1149 = $1145 ^ $1148; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1150 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1151 = ((($1150)) + 36|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1152 = HEAP32[$1151>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1153 = $1149 ^ $1152; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1154 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1155 = ((($1154)) + 28|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1156 = HEAP32[$1155>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1157 = $1153 ^ $1156; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1158 = $1157 << 1; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1159 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1160 = ((($1159)) + 16|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1161 = HEAP32[$1160>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1162 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1163 = ((($1162)) + 60|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1164 = HEAP32[$1163>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1165 = $1161 ^ $1164; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1166 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1167 = ((($1166)) + 36|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1168 = HEAP32[$1167>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1169 = $1165 ^ $1168; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1170 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1171 = ((($1170)) + 28|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1172 = HEAP32[$1171>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1173 = $1169 ^ $1172; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1174 = $1173 >>> 31; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1175 = $1158 | $1174; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1176 = $13; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1177 = ((($1176)) + 28|0); //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1177>>2] = $1175; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1178 = (($1142) + ($1175))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1179 = (($1178) + 1859775393)|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1180 = HEAP32[$10>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1181 = $1180 << 5; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1182 = HEAP32[$10>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1183 = $1182 >>> 27; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1184 = $1181 | $1183; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1185 = (($1179) + ($1184))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1186 = HEAP32[$9>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1187 = (($1186) + ($1185))|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $1187; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1188 = HEAP32[$11>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1189 = $1188 << 30; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1190 = HEAP32[$11>>2]|0; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1191 = $1190 >>> 2; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1192 = $1189 | $1191; //@line 124 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $1192; //@line 124 "./src/cpp/unrar/sha1.cpp"
 $1193 = HEAP32[$10>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1194 = HEAP32[$11>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1195 = $1193 ^ $1194; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1196 = HEAP32[$12>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1197 = $1195 ^ $1196; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1198 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1199 = ((($1198)) + 20|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1200 = HEAP32[$1199>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1201 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1202 = HEAP32[$1201>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1203 = $1200 ^ $1202; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1204 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1205 = ((($1204)) + 40|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1206 = HEAP32[$1205>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1207 = $1203 ^ $1206; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1208 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1209 = ((($1208)) + 32|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1210 = HEAP32[$1209>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1211 = $1207 ^ $1210; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1212 = $1211 << 1; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1213 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1214 = ((($1213)) + 20|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1215 = HEAP32[$1214>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1216 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1217 = HEAP32[$1216>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1218 = $1215 ^ $1217; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1219 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1220 = ((($1219)) + 40|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1221 = HEAP32[$1220>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1222 = $1218 ^ $1221; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1223 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1224 = ((($1223)) + 32|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1225 = HEAP32[$1224>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1226 = $1222 ^ $1225; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1227 = $1226 >>> 31; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1228 = $1212 | $1227; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1229 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1230 = ((($1229)) + 32|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1230>>2] = $1228; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1231 = (($1197) + ($1228))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1232 = (($1231) + 1859775393)|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1233 = HEAP32[$9>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1234 = $1233 << 5; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1235 = HEAP32[$9>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1236 = $1235 >>> 27; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1237 = $1234 | $1236; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1238 = (($1232) + ($1237))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1239 = HEAP32[$8>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1240 = (($1239) + ($1238))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $1240; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1241 = HEAP32[$10>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1242 = $1241 << 30; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1243 = HEAP32[$10>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1244 = $1243 >>> 2; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1245 = $1242 | $1244; //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $1245; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1246 = HEAP32[$9>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1247 = HEAP32[$10>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1248 = $1246 ^ $1247; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1249 = HEAP32[$11>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1250 = $1248 ^ $1249; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1251 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1252 = ((($1251)) + 24|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1253 = HEAP32[$1252>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1254 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1255 = ((($1254)) + 4|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1256 = HEAP32[$1255>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1257 = $1253 ^ $1256; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1258 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1259 = ((($1258)) + 44|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1260 = HEAP32[$1259>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1261 = $1257 ^ $1260; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1262 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1263 = ((($1262)) + 36|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1264 = HEAP32[$1263>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1265 = $1261 ^ $1264; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1266 = $1265 << 1; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1267 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1268 = ((($1267)) + 24|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1269 = HEAP32[$1268>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1270 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1271 = ((($1270)) + 4|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1272 = HEAP32[$1271>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1273 = $1269 ^ $1272; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1274 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1275 = ((($1274)) + 44|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1276 = HEAP32[$1275>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1277 = $1273 ^ $1276; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1278 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1279 = ((($1278)) + 36|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1280 = HEAP32[$1279>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1281 = $1277 ^ $1280; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1282 = $1281 >>> 31; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1283 = $1266 | $1282; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1284 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1285 = ((($1284)) + 36|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1285>>2] = $1283; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1286 = (($1250) + ($1283))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1287 = (($1286) + 1859775393)|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1288 = HEAP32[$8>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1289 = $1288 << 5; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1290 = HEAP32[$8>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1291 = $1290 >>> 27; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1292 = $1289 | $1291; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1293 = (($1287) + ($1292))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1294 = HEAP32[$12>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1295 = (($1294) + ($1293))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $1295; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1296 = HEAP32[$9>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1297 = $1296 << 30; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1298 = HEAP32[$9>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1299 = $1298 >>> 2; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1300 = $1297 | $1299; //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $1300; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1301 = HEAP32[$8>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1302 = HEAP32[$9>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1303 = $1301 ^ $1302; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1304 = HEAP32[$10>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1305 = $1303 ^ $1304; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1306 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1307 = ((($1306)) + 28|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1308 = HEAP32[$1307>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1309 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1310 = ((($1309)) + 8|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1311 = HEAP32[$1310>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1312 = $1308 ^ $1311; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1313 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1314 = ((($1313)) + 48|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1315 = HEAP32[$1314>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1316 = $1312 ^ $1315; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1317 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1318 = ((($1317)) + 40|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1319 = HEAP32[$1318>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1320 = $1316 ^ $1319; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1321 = $1320 << 1; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1322 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1323 = ((($1322)) + 28|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1324 = HEAP32[$1323>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1325 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1326 = ((($1325)) + 8|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1327 = HEAP32[$1326>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1328 = $1324 ^ $1327; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1329 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1330 = ((($1329)) + 48|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1331 = HEAP32[$1330>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1332 = $1328 ^ $1331; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1333 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1334 = ((($1333)) + 40|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1335 = HEAP32[$1334>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1336 = $1332 ^ $1335; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1337 = $1336 >>> 31; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1338 = $1321 | $1337; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1339 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1340 = ((($1339)) + 40|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1340>>2] = $1338; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1341 = (($1305) + ($1338))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1342 = (($1341) + 1859775393)|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1343 = HEAP32[$12>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1344 = $1343 << 5; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1345 = HEAP32[$12>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1346 = $1345 >>> 27; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1347 = $1344 | $1346; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1348 = (($1342) + ($1347))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1349 = HEAP32[$11>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1350 = (($1349) + ($1348))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $1350; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1351 = HEAP32[$8>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1352 = $1351 << 30; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1353 = HEAP32[$8>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1354 = $1353 >>> 2; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1355 = $1352 | $1354; //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $1355; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1356 = HEAP32[$12>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1357 = HEAP32[$8>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1358 = $1356 ^ $1357; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1359 = HEAP32[$9>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1360 = $1358 ^ $1359; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1361 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1362 = ((($1361)) + 32|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1363 = HEAP32[$1362>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1364 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1365 = ((($1364)) + 12|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1366 = HEAP32[$1365>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1367 = $1363 ^ $1366; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1368 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1369 = ((($1368)) + 52|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1370 = HEAP32[$1369>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1371 = $1367 ^ $1370; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1372 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1373 = ((($1372)) + 44|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1374 = HEAP32[$1373>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1375 = $1371 ^ $1374; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1376 = $1375 << 1; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1377 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1378 = ((($1377)) + 32|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1379 = HEAP32[$1378>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1380 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1381 = ((($1380)) + 12|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1382 = HEAP32[$1381>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1383 = $1379 ^ $1382; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1384 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1385 = ((($1384)) + 52|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1386 = HEAP32[$1385>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1387 = $1383 ^ $1386; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1388 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1389 = ((($1388)) + 44|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1390 = HEAP32[$1389>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1391 = $1387 ^ $1390; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1392 = $1391 >>> 31; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1393 = $1376 | $1392; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1394 = $13; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1395 = ((($1394)) + 44|0); //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1395>>2] = $1393; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1396 = (($1360) + ($1393))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1397 = (($1396) + 1859775393)|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1398 = HEAP32[$11>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1399 = $1398 << 5; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1400 = HEAP32[$11>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1401 = $1400 >>> 27; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1402 = $1399 | $1401; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1403 = (($1397) + ($1402))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1404 = HEAP32[$10>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1405 = (($1404) + ($1403))|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $1405; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1406 = HEAP32[$12>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1407 = $1406 << 30; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1408 = HEAP32[$12>>2]|0; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1409 = $1408 >>> 2; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1410 = $1407 | $1409; //@line 125 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $1410; //@line 125 "./src/cpp/unrar/sha1.cpp"
 $1411 = HEAP32[$11>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1412 = HEAP32[$12>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1413 = $1411 ^ $1412; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1414 = HEAP32[$8>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1415 = $1413 ^ $1414; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1416 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1417 = ((($1416)) + 36|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1418 = HEAP32[$1417>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1419 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1420 = ((($1419)) + 16|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1421 = HEAP32[$1420>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1422 = $1418 ^ $1421; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1423 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1424 = ((($1423)) + 56|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1425 = HEAP32[$1424>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1426 = $1422 ^ $1425; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1427 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1428 = ((($1427)) + 48|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1429 = HEAP32[$1428>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1430 = $1426 ^ $1429; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1431 = $1430 << 1; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1432 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1433 = ((($1432)) + 36|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1434 = HEAP32[$1433>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1435 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1436 = ((($1435)) + 16|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1437 = HEAP32[$1436>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1438 = $1434 ^ $1437; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1439 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1440 = ((($1439)) + 56|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1441 = HEAP32[$1440>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1442 = $1438 ^ $1441; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1443 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1444 = ((($1443)) + 48|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1445 = HEAP32[$1444>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1446 = $1442 ^ $1445; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1447 = $1446 >>> 31; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1448 = $1431 | $1447; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1449 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1450 = ((($1449)) + 48|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1450>>2] = $1448; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1451 = (($1415) + ($1448))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1452 = (($1451) + 1859775393)|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1453 = HEAP32[$10>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1454 = $1453 << 5; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1455 = HEAP32[$10>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1456 = $1455 >>> 27; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1457 = $1454 | $1456; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1458 = (($1452) + ($1457))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1459 = HEAP32[$9>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1460 = (($1459) + ($1458))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $1460; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1461 = HEAP32[$11>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1462 = $1461 << 30; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1463 = HEAP32[$11>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1464 = $1463 >>> 2; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1465 = $1462 | $1464; //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $1465; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1466 = HEAP32[$10>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1467 = HEAP32[$11>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1468 = $1466 ^ $1467; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1469 = HEAP32[$12>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1470 = $1468 ^ $1469; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1471 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1472 = ((($1471)) + 40|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1473 = HEAP32[$1472>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1474 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1475 = ((($1474)) + 20|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1476 = HEAP32[$1475>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1477 = $1473 ^ $1476; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1478 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1479 = ((($1478)) + 60|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1480 = HEAP32[$1479>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1481 = $1477 ^ $1480; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1482 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1483 = ((($1482)) + 52|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1484 = HEAP32[$1483>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1485 = $1481 ^ $1484; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1486 = $1485 << 1; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1487 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1488 = ((($1487)) + 40|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1489 = HEAP32[$1488>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1490 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1491 = ((($1490)) + 20|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1492 = HEAP32[$1491>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1493 = $1489 ^ $1492; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1494 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1495 = ((($1494)) + 60|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1496 = HEAP32[$1495>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1497 = $1493 ^ $1496; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1498 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1499 = ((($1498)) + 52|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1500 = HEAP32[$1499>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1501 = $1497 ^ $1500; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1502 = $1501 >>> 31; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1503 = $1486 | $1502; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1504 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1505 = ((($1504)) + 52|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1505>>2] = $1503; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1506 = (($1470) + ($1503))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1507 = (($1506) + 1859775393)|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1508 = HEAP32[$9>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1509 = $1508 << 5; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1510 = HEAP32[$9>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1511 = $1510 >>> 27; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1512 = $1509 | $1511; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1513 = (($1507) + ($1512))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1514 = HEAP32[$8>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1515 = (($1514) + ($1513))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $1515; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1516 = HEAP32[$10>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1517 = $1516 << 30; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1518 = HEAP32[$10>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1519 = $1518 >>> 2; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1520 = $1517 | $1519; //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $1520; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1521 = HEAP32[$9>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1522 = HEAP32[$10>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1523 = $1521 ^ $1522; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1524 = HEAP32[$11>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1525 = $1523 ^ $1524; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1526 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1527 = ((($1526)) + 44|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1528 = HEAP32[$1527>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1529 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1530 = ((($1529)) + 24|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1531 = HEAP32[$1530>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1532 = $1528 ^ $1531; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1533 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1534 = HEAP32[$1533>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1535 = $1532 ^ $1534; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1536 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1537 = ((($1536)) + 56|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1538 = HEAP32[$1537>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1539 = $1535 ^ $1538; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1540 = $1539 << 1; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1541 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1542 = ((($1541)) + 44|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1543 = HEAP32[$1542>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1544 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1545 = ((($1544)) + 24|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1546 = HEAP32[$1545>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1547 = $1543 ^ $1546; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1548 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1549 = HEAP32[$1548>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1550 = $1547 ^ $1549; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1551 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1552 = ((($1551)) + 56|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1553 = HEAP32[$1552>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1554 = $1550 ^ $1553; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1555 = $1554 >>> 31; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1556 = $1540 | $1555; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1557 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1558 = ((($1557)) + 56|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1558>>2] = $1556; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1559 = (($1525) + ($1556))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1560 = (($1559) + 1859775393)|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1561 = HEAP32[$8>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1562 = $1561 << 5; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1563 = HEAP32[$8>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1564 = $1563 >>> 27; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1565 = $1562 | $1564; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1566 = (($1560) + ($1565))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1567 = HEAP32[$12>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1568 = (($1567) + ($1566))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $1568; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1569 = HEAP32[$9>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1570 = $1569 << 30; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1571 = HEAP32[$9>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1572 = $1571 >>> 2; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1573 = $1570 | $1572; //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $1573; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1574 = HEAP32[$8>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1575 = HEAP32[$9>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1576 = $1574 ^ $1575; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1577 = HEAP32[$10>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1578 = $1576 ^ $1577; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1579 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1580 = ((($1579)) + 48|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1581 = HEAP32[$1580>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1582 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1583 = ((($1582)) + 28|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1584 = HEAP32[$1583>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1585 = $1581 ^ $1584; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1586 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1587 = ((($1586)) + 4|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1588 = HEAP32[$1587>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1589 = $1585 ^ $1588; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1590 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1591 = ((($1590)) + 60|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1592 = HEAP32[$1591>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1593 = $1589 ^ $1592; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1594 = $1593 << 1; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1595 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1596 = ((($1595)) + 48|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1597 = HEAP32[$1596>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1598 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1599 = ((($1598)) + 28|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1600 = HEAP32[$1599>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1601 = $1597 ^ $1600; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1602 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1603 = ((($1602)) + 4|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1604 = HEAP32[$1603>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1605 = $1601 ^ $1604; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1606 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1607 = ((($1606)) + 60|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1608 = HEAP32[$1607>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1609 = $1605 ^ $1608; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1610 = $1609 >>> 31; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1611 = $1594 | $1610; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1612 = $13; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1613 = ((($1612)) + 60|0); //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1613>>2] = $1611; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1614 = (($1578) + ($1611))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1615 = (($1614) + 1859775393)|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1616 = HEAP32[$12>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1617 = $1616 << 5; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1618 = HEAP32[$12>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1619 = $1618 >>> 27; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1620 = $1617 | $1619; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1621 = (($1615) + ($1620))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1622 = HEAP32[$11>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1623 = (($1622) + ($1621))|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $1623; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1624 = HEAP32[$8>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1625 = $1624 << 30; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1626 = HEAP32[$8>>2]|0; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1627 = $1626 >>> 2; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1628 = $1625 | $1627; //@line 126 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $1628; //@line 126 "./src/cpp/unrar/sha1.cpp"
 $1629 = HEAP32[$12>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1630 = HEAP32[$8>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1631 = $1629 ^ $1630; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1632 = HEAP32[$9>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1633 = $1631 ^ $1632; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1634 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1635 = ((($1634)) + 52|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1636 = HEAP32[$1635>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1637 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1638 = ((($1637)) + 32|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1639 = HEAP32[$1638>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1640 = $1636 ^ $1639; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1641 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1642 = ((($1641)) + 8|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1643 = HEAP32[$1642>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1644 = $1640 ^ $1643; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1645 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1646 = HEAP32[$1645>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1647 = $1644 ^ $1646; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1648 = $1647 << 1; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1649 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1650 = ((($1649)) + 52|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1651 = HEAP32[$1650>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1652 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1653 = ((($1652)) + 32|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1654 = HEAP32[$1653>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1655 = $1651 ^ $1654; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1656 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1657 = ((($1656)) + 8|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1658 = HEAP32[$1657>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1659 = $1655 ^ $1658; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1660 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1661 = HEAP32[$1660>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1662 = $1659 ^ $1661; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1663 = $1662 >>> 31; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1664 = $1648 | $1663; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1665 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1665>>2] = $1664; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1666 = (($1633) + ($1664))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1667 = (($1666) + 1859775393)|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1668 = HEAP32[$11>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1669 = $1668 << 5; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1670 = HEAP32[$11>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1671 = $1670 >>> 27; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1672 = $1669 | $1671; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1673 = (($1667) + ($1672))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1674 = HEAP32[$10>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1675 = (($1674) + ($1673))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $1675; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1676 = HEAP32[$12>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1677 = $1676 << 30; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1678 = HEAP32[$12>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1679 = $1678 >>> 2; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1680 = $1677 | $1679; //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $1680; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1681 = HEAP32[$11>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1682 = HEAP32[$12>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1683 = $1681 ^ $1682; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1684 = HEAP32[$8>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1685 = $1683 ^ $1684; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1686 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1687 = ((($1686)) + 56|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1688 = HEAP32[$1687>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1689 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1690 = ((($1689)) + 36|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1691 = HEAP32[$1690>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1692 = $1688 ^ $1691; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1693 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1694 = ((($1693)) + 12|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1695 = HEAP32[$1694>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1696 = $1692 ^ $1695; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1697 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1698 = ((($1697)) + 4|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1699 = HEAP32[$1698>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1700 = $1696 ^ $1699; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1701 = $1700 << 1; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1702 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1703 = ((($1702)) + 56|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1704 = HEAP32[$1703>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1705 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1706 = ((($1705)) + 36|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1707 = HEAP32[$1706>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1708 = $1704 ^ $1707; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1709 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1710 = ((($1709)) + 12|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1711 = HEAP32[$1710>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1712 = $1708 ^ $1711; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1713 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1714 = ((($1713)) + 4|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1715 = HEAP32[$1714>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1716 = $1712 ^ $1715; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1717 = $1716 >>> 31; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1718 = $1701 | $1717; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1719 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1720 = ((($1719)) + 4|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1720>>2] = $1718; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1721 = (($1685) + ($1718))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1722 = (($1721) + 1859775393)|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1723 = HEAP32[$10>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1724 = $1723 << 5; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1725 = HEAP32[$10>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1726 = $1725 >>> 27; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1727 = $1724 | $1726; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1728 = (($1722) + ($1727))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1729 = HEAP32[$9>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1730 = (($1729) + ($1728))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $1730; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1731 = HEAP32[$11>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1732 = $1731 << 30; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1733 = HEAP32[$11>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1734 = $1733 >>> 2; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1735 = $1732 | $1734; //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $1735; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1736 = HEAP32[$10>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1737 = HEAP32[$11>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1738 = $1736 ^ $1737; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1739 = HEAP32[$12>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1740 = $1738 ^ $1739; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1741 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1742 = ((($1741)) + 60|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1743 = HEAP32[$1742>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1744 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1745 = ((($1744)) + 40|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1746 = HEAP32[$1745>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1747 = $1743 ^ $1746; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1748 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1749 = ((($1748)) + 16|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1750 = HEAP32[$1749>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1751 = $1747 ^ $1750; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1752 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1753 = ((($1752)) + 8|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1754 = HEAP32[$1753>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1755 = $1751 ^ $1754; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1756 = $1755 << 1; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1757 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1758 = ((($1757)) + 60|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1759 = HEAP32[$1758>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1760 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1761 = ((($1760)) + 40|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1762 = HEAP32[$1761>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1763 = $1759 ^ $1762; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1764 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1765 = ((($1764)) + 16|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1766 = HEAP32[$1765>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1767 = $1763 ^ $1766; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1768 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1769 = ((($1768)) + 8|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1770 = HEAP32[$1769>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1771 = $1767 ^ $1770; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1772 = $1771 >>> 31; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1773 = $1756 | $1772; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1774 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1775 = ((($1774)) + 8|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1775>>2] = $1773; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1776 = (($1740) + ($1773))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1777 = (($1776) + 1859775393)|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1778 = HEAP32[$9>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1779 = $1778 << 5; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1780 = HEAP32[$9>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1781 = $1780 >>> 27; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1782 = $1779 | $1781; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1783 = (($1777) + ($1782))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1784 = HEAP32[$8>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1785 = (($1784) + ($1783))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $1785; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1786 = HEAP32[$10>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1787 = $1786 << 30; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1788 = HEAP32[$10>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1789 = $1788 >>> 2; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1790 = $1787 | $1789; //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $1790; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1791 = HEAP32[$9>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1792 = HEAP32[$10>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1793 = $1791 ^ $1792; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1794 = HEAP32[$11>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1795 = $1793 ^ $1794; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1796 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1797 = HEAP32[$1796>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1798 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1799 = ((($1798)) + 44|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1800 = HEAP32[$1799>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1801 = $1797 ^ $1800; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1802 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1803 = ((($1802)) + 20|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1804 = HEAP32[$1803>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1805 = $1801 ^ $1804; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1806 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1807 = ((($1806)) + 12|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1808 = HEAP32[$1807>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1809 = $1805 ^ $1808; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1810 = $1809 << 1; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1811 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1812 = HEAP32[$1811>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1813 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1814 = ((($1813)) + 44|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1815 = HEAP32[$1814>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1816 = $1812 ^ $1815; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1817 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1818 = ((($1817)) + 20|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1819 = HEAP32[$1818>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1820 = $1816 ^ $1819; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1821 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1822 = ((($1821)) + 12|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1823 = HEAP32[$1822>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1824 = $1820 ^ $1823; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1825 = $1824 >>> 31; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1826 = $1810 | $1825; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1827 = $13; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1828 = ((($1827)) + 12|0); //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1828>>2] = $1826; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1829 = (($1795) + ($1826))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1830 = (($1829) + 1859775393)|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1831 = HEAP32[$8>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1832 = $1831 << 5; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1833 = HEAP32[$8>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1834 = $1833 >>> 27; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1835 = $1832 | $1834; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1836 = (($1830) + ($1835))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1837 = HEAP32[$12>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1838 = (($1837) + ($1836))|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $1838; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1839 = HEAP32[$9>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1840 = $1839 << 30; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1841 = HEAP32[$9>>2]|0; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1842 = $1841 >>> 2; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1843 = $1840 | $1842; //@line 127 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $1843; //@line 127 "./src/cpp/unrar/sha1.cpp"
 $1844 = HEAP32[$8>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1845 = HEAP32[$9>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1846 = $1844 ^ $1845; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1847 = HEAP32[$10>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1848 = $1846 ^ $1847; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1849 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1850 = ((($1849)) + 4|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1851 = HEAP32[$1850>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1852 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1853 = ((($1852)) + 48|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1854 = HEAP32[$1853>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1855 = $1851 ^ $1854; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1856 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1857 = ((($1856)) + 24|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1858 = HEAP32[$1857>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1859 = $1855 ^ $1858; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1860 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1861 = ((($1860)) + 16|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1862 = HEAP32[$1861>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1863 = $1859 ^ $1862; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1864 = $1863 << 1; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1865 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1866 = ((($1865)) + 4|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1867 = HEAP32[$1866>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1868 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1869 = ((($1868)) + 48|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1870 = HEAP32[$1869>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1871 = $1867 ^ $1870; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1872 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1873 = ((($1872)) + 24|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1874 = HEAP32[$1873>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1875 = $1871 ^ $1874; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1876 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1877 = ((($1876)) + 16|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1878 = HEAP32[$1877>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1879 = $1875 ^ $1878; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1880 = $1879 >>> 31; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1881 = $1864 | $1880; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1882 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1883 = ((($1882)) + 16|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1883>>2] = $1881; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1884 = (($1848) + ($1881))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1885 = (($1884) + 1859775393)|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1886 = HEAP32[$12>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1887 = $1886 << 5; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1888 = HEAP32[$12>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1889 = $1888 >>> 27; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1890 = $1887 | $1889; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1891 = (($1885) + ($1890))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1892 = HEAP32[$11>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1893 = (($1892) + ($1891))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $1893; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1894 = HEAP32[$8>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1895 = $1894 << 30; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1896 = HEAP32[$8>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1897 = $1896 >>> 2; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1898 = $1895 | $1897; //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $1898; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1899 = HEAP32[$12>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1900 = HEAP32[$8>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1901 = $1899 ^ $1900; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1902 = HEAP32[$9>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1903 = $1901 ^ $1902; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1904 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1905 = ((($1904)) + 8|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1906 = HEAP32[$1905>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1907 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1908 = ((($1907)) + 52|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1909 = HEAP32[$1908>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1910 = $1906 ^ $1909; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1911 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1912 = ((($1911)) + 28|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1913 = HEAP32[$1912>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1914 = $1910 ^ $1913; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1915 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1916 = ((($1915)) + 20|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1917 = HEAP32[$1916>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1918 = $1914 ^ $1917; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1919 = $1918 << 1; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1920 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1921 = ((($1920)) + 8|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1922 = HEAP32[$1921>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1923 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1924 = ((($1923)) + 52|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1925 = HEAP32[$1924>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1926 = $1922 ^ $1925; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1927 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1928 = ((($1927)) + 28|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1929 = HEAP32[$1928>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1930 = $1926 ^ $1929; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1931 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1932 = ((($1931)) + 20|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1933 = HEAP32[$1932>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1934 = $1930 ^ $1933; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1935 = $1934 >>> 31; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1936 = $1919 | $1935; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1937 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1938 = ((($1937)) + 20|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1938>>2] = $1936; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1939 = (($1903) + ($1936))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1940 = (($1939) + 1859775393)|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1941 = HEAP32[$11>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1942 = $1941 << 5; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1943 = HEAP32[$11>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1944 = $1943 >>> 27; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1945 = $1942 | $1944; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1946 = (($1940) + ($1945))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1947 = HEAP32[$10>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1948 = (($1947) + ($1946))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $1948; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1949 = HEAP32[$12>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1950 = $1949 << 30; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1951 = HEAP32[$12>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1952 = $1951 >>> 2; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1953 = $1950 | $1952; //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $1953; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1954 = HEAP32[$11>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1955 = HEAP32[$12>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1956 = $1954 ^ $1955; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1957 = HEAP32[$8>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1958 = $1956 ^ $1957; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1959 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1960 = ((($1959)) + 12|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1961 = HEAP32[$1960>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1962 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1963 = ((($1962)) + 56|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1964 = HEAP32[$1963>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1965 = $1961 ^ $1964; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1966 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1967 = ((($1966)) + 32|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1968 = HEAP32[$1967>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1969 = $1965 ^ $1968; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1970 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1971 = ((($1970)) + 24|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1972 = HEAP32[$1971>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1973 = $1969 ^ $1972; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1974 = $1973 << 1; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1975 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1976 = ((($1975)) + 12|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1977 = HEAP32[$1976>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1978 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1979 = ((($1978)) + 56|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1980 = HEAP32[$1979>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1981 = $1977 ^ $1980; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1982 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1983 = ((($1982)) + 32|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1984 = HEAP32[$1983>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1985 = $1981 ^ $1984; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1986 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1987 = ((($1986)) + 24|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1988 = HEAP32[$1987>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1989 = $1985 ^ $1988; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1990 = $1989 >>> 31; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1991 = $1974 | $1990; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1992 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1993 = ((($1992)) + 24|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$1993>>2] = $1991; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1994 = (($1958) + ($1991))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1995 = (($1994) + 1859775393)|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1996 = HEAP32[$10>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1997 = $1996 << 5; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1998 = HEAP32[$10>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $1999 = $1998 >>> 27; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2000 = $1997 | $1999; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2001 = (($1995) + ($2000))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2002 = HEAP32[$9>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2003 = (($2002) + ($2001))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $2003; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2004 = HEAP32[$11>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2005 = $2004 << 30; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2006 = HEAP32[$11>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2007 = $2006 >>> 2; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2008 = $2005 | $2007; //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $2008; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2009 = HEAP32[$10>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2010 = HEAP32[$11>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2011 = $2009 ^ $2010; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2012 = HEAP32[$12>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2013 = $2011 ^ $2012; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2014 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2015 = ((($2014)) + 16|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2016 = HEAP32[$2015>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2017 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2018 = ((($2017)) + 60|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2019 = HEAP32[$2018>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2020 = $2016 ^ $2019; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2021 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2022 = ((($2021)) + 36|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2023 = HEAP32[$2022>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2024 = $2020 ^ $2023; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2025 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2026 = ((($2025)) + 28|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2027 = HEAP32[$2026>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2028 = $2024 ^ $2027; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2029 = $2028 << 1; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2030 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2031 = ((($2030)) + 16|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2032 = HEAP32[$2031>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2033 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2034 = ((($2033)) + 60|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2035 = HEAP32[$2034>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2036 = $2032 ^ $2035; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2037 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2038 = ((($2037)) + 36|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2039 = HEAP32[$2038>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2040 = $2036 ^ $2039; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2041 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2042 = ((($2041)) + 28|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2043 = HEAP32[$2042>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2044 = $2040 ^ $2043; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2045 = $2044 >>> 31; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2046 = $2029 | $2045; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2047 = $13; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2048 = ((($2047)) + 28|0); //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2048>>2] = $2046; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2049 = (($2013) + ($2046))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2050 = (($2049) + 1859775393)|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2051 = HEAP32[$9>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2052 = $2051 << 5; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2053 = HEAP32[$9>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2054 = $2053 >>> 27; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2055 = $2052 | $2054; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2056 = (($2050) + ($2055))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2057 = HEAP32[$8>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2058 = (($2057) + ($2056))|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $2058; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2059 = HEAP32[$10>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2060 = $2059 << 30; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2061 = HEAP32[$10>>2]|0; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2062 = $2061 >>> 2; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2063 = $2060 | $2062; //@line 128 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $2063; //@line 128 "./src/cpp/unrar/sha1.cpp"
 $2064 = HEAP32[$9>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2065 = HEAP32[$10>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2066 = $2064 | $2065; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2067 = HEAP32[$11>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2068 = $2066 & $2067; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2069 = HEAP32[$9>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2070 = HEAP32[$10>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2071 = $2069 & $2070; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2072 = $2068 | $2071; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2073 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2074 = ((($2073)) + 20|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2075 = HEAP32[$2074>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2076 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2077 = HEAP32[$2076>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2078 = $2075 ^ $2077; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2079 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2080 = ((($2079)) + 40|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2081 = HEAP32[$2080>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2082 = $2078 ^ $2081; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2083 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2084 = ((($2083)) + 32|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2085 = HEAP32[$2084>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2086 = $2082 ^ $2085; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2087 = $2086 << 1; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2088 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2089 = ((($2088)) + 20|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2090 = HEAP32[$2089>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2091 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2092 = HEAP32[$2091>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2093 = $2090 ^ $2092; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2094 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2095 = ((($2094)) + 40|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2096 = HEAP32[$2095>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2097 = $2093 ^ $2096; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2098 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2099 = ((($2098)) + 32|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2100 = HEAP32[$2099>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2101 = $2097 ^ $2100; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2102 = $2101 >>> 31; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2103 = $2087 | $2102; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2104 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2105 = ((($2104)) + 32|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2105>>2] = $2103; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2106 = (($2072) + ($2103))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2107 = (($2106) + -1894007588)|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2108 = HEAP32[$8>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2109 = $2108 << 5; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2110 = HEAP32[$8>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2111 = $2110 >>> 27; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2112 = $2109 | $2111; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2113 = (($2107) + ($2112))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2114 = HEAP32[$12>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2115 = (($2114) + ($2113))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $2115; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2116 = HEAP32[$9>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2117 = $2116 << 30; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2118 = HEAP32[$9>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2119 = $2118 >>> 2; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2120 = $2117 | $2119; //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $2120; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2121 = HEAP32[$8>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2122 = HEAP32[$9>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2123 = $2121 | $2122; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2124 = HEAP32[$10>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2125 = $2123 & $2124; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2126 = HEAP32[$8>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2127 = HEAP32[$9>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2128 = $2126 & $2127; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2129 = $2125 | $2128; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2130 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2131 = ((($2130)) + 24|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2132 = HEAP32[$2131>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2133 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2134 = ((($2133)) + 4|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2135 = HEAP32[$2134>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2136 = $2132 ^ $2135; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2137 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2138 = ((($2137)) + 44|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2139 = HEAP32[$2138>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2140 = $2136 ^ $2139; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2141 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2142 = ((($2141)) + 36|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2143 = HEAP32[$2142>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2144 = $2140 ^ $2143; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2145 = $2144 << 1; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2146 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2147 = ((($2146)) + 24|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2148 = HEAP32[$2147>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2149 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2150 = ((($2149)) + 4|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2151 = HEAP32[$2150>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2152 = $2148 ^ $2151; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2153 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2154 = ((($2153)) + 44|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2155 = HEAP32[$2154>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2156 = $2152 ^ $2155; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2157 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2158 = ((($2157)) + 36|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2159 = HEAP32[$2158>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2160 = $2156 ^ $2159; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2161 = $2160 >>> 31; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2162 = $2145 | $2161; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2163 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2164 = ((($2163)) + 36|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2164>>2] = $2162; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2165 = (($2129) + ($2162))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2166 = (($2165) + -1894007588)|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2167 = HEAP32[$12>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2168 = $2167 << 5; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2169 = HEAP32[$12>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2170 = $2169 >>> 27; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2171 = $2168 | $2170; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2172 = (($2166) + ($2171))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2173 = HEAP32[$11>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2174 = (($2173) + ($2172))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $2174; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2175 = HEAP32[$8>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2176 = $2175 << 30; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2177 = HEAP32[$8>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2178 = $2177 >>> 2; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2179 = $2176 | $2178; //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $2179; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2180 = HEAP32[$12>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2181 = HEAP32[$8>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2182 = $2180 | $2181; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2183 = HEAP32[$9>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2184 = $2182 & $2183; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2185 = HEAP32[$12>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2186 = HEAP32[$8>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2187 = $2185 & $2186; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2188 = $2184 | $2187; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2189 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2190 = ((($2189)) + 28|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2191 = HEAP32[$2190>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2192 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2193 = ((($2192)) + 8|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2194 = HEAP32[$2193>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2195 = $2191 ^ $2194; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2196 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2197 = ((($2196)) + 48|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2198 = HEAP32[$2197>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2199 = $2195 ^ $2198; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2200 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2201 = ((($2200)) + 40|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2202 = HEAP32[$2201>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2203 = $2199 ^ $2202; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2204 = $2203 << 1; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2205 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2206 = ((($2205)) + 28|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2207 = HEAP32[$2206>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2208 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2209 = ((($2208)) + 8|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2210 = HEAP32[$2209>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2211 = $2207 ^ $2210; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2212 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2213 = ((($2212)) + 48|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2214 = HEAP32[$2213>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2215 = $2211 ^ $2214; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2216 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2217 = ((($2216)) + 40|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2218 = HEAP32[$2217>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2219 = $2215 ^ $2218; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2220 = $2219 >>> 31; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2221 = $2204 | $2220; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2222 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2223 = ((($2222)) + 40|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2223>>2] = $2221; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2224 = (($2188) + ($2221))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2225 = (($2224) + -1894007588)|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2226 = HEAP32[$11>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2227 = $2226 << 5; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2228 = HEAP32[$11>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2229 = $2228 >>> 27; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2230 = $2227 | $2229; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2231 = (($2225) + ($2230))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2232 = HEAP32[$10>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2233 = (($2232) + ($2231))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $2233; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2234 = HEAP32[$12>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2235 = $2234 << 30; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2236 = HEAP32[$12>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2237 = $2236 >>> 2; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2238 = $2235 | $2237; //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $2238; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2239 = HEAP32[$11>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2240 = HEAP32[$12>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2241 = $2239 | $2240; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2242 = HEAP32[$8>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2243 = $2241 & $2242; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2244 = HEAP32[$11>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2245 = HEAP32[$12>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2246 = $2244 & $2245; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2247 = $2243 | $2246; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2248 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2249 = ((($2248)) + 32|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2250 = HEAP32[$2249>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2251 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2252 = ((($2251)) + 12|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2253 = HEAP32[$2252>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2254 = $2250 ^ $2253; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2255 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2256 = ((($2255)) + 52|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2257 = HEAP32[$2256>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2258 = $2254 ^ $2257; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2259 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2260 = ((($2259)) + 44|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2261 = HEAP32[$2260>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2262 = $2258 ^ $2261; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2263 = $2262 << 1; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2264 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2265 = ((($2264)) + 32|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2266 = HEAP32[$2265>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2267 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2268 = ((($2267)) + 12|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2269 = HEAP32[$2268>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2270 = $2266 ^ $2269; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2271 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2272 = ((($2271)) + 52|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2273 = HEAP32[$2272>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2274 = $2270 ^ $2273; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2275 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2276 = ((($2275)) + 44|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2277 = HEAP32[$2276>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2278 = $2274 ^ $2277; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2279 = $2278 >>> 31; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2280 = $2263 | $2279; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2281 = $13; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2282 = ((($2281)) + 44|0); //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2282>>2] = $2280; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2283 = (($2247) + ($2280))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2284 = (($2283) + -1894007588)|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2285 = HEAP32[$10>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2286 = $2285 << 5; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2287 = HEAP32[$10>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2288 = $2287 >>> 27; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2289 = $2286 | $2288; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2290 = (($2284) + ($2289))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2291 = HEAP32[$9>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2292 = (($2291) + ($2290))|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $2292; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2293 = HEAP32[$11>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2294 = $2293 << 30; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2295 = HEAP32[$11>>2]|0; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2296 = $2295 >>> 2; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2297 = $2294 | $2296; //@line 129 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $2297; //@line 129 "./src/cpp/unrar/sha1.cpp"
 $2298 = HEAP32[$10>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2299 = HEAP32[$11>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2300 = $2298 | $2299; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2301 = HEAP32[$12>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2302 = $2300 & $2301; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2303 = HEAP32[$10>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2304 = HEAP32[$11>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2305 = $2303 & $2304; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2306 = $2302 | $2305; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2307 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2308 = ((($2307)) + 36|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2309 = HEAP32[$2308>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2310 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2311 = ((($2310)) + 16|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2312 = HEAP32[$2311>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2313 = $2309 ^ $2312; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2314 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2315 = ((($2314)) + 56|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2316 = HEAP32[$2315>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2317 = $2313 ^ $2316; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2318 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2319 = ((($2318)) + 48|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2320 = HEAP32[$2319>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2321 = $2317 ^ $2320; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2322 = $2321 << 1; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2323 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2324 = ((($2323)) + 36|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2325 = HEAP32[$2324>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2326 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2327 = ((($2326)) + 16|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2328 = HEAP32[$2327>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2329 = $2325 ^ $2328; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2330 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2331 = ((($2330)) + 56|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2332 = HEAP32[$2331>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2333 = $2329 ^ $2332; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2334 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2335 = ((($2334)) + 48|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2336 = HEAP32[$2335>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2337 = $2333 ^ $2336; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2338 = $2337 >>> 31; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2339 = $2322 | $2338; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2340 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2341 = ((($2340)) + 48|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2341>>2] = $2339; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2342 = (($2306) + ($2339))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2343 = (($2342) + -1894007588)|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2344 = HEAP32[$9>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2345 = $2344 << 5; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2346 = HEAP32[$9>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2347 = $2346 >>> 27; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2348 = $2345 | $2347; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2349 = (($2343) + ($2348))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2350 = HEAP32[$8>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2351 = (($2350) + ($2349))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $2351; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2352 = HEAP32[$10>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2353 = $2352 << 30; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2354 = HEAP32[$10>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2355 = $2354 >>> 2; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2356 = $2353 | $2355; //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $2356; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2357 = HEAP32[$9>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2358 = HEAP32[$10>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2359 = $2357 | $2358; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2360 = HEAP32[$11>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2361 = $2359 & $2360; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2362 = HEAP32[$9>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2363 = HEAP32[$10>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2364 = $2362 & $2363; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2365 = $2361 | $2364; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2366 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2367 = ((($2366)) + 40|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2368 = HEAP32[$2367>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2369 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2370 = ((($2369)) + 20|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2371 = HEAP32[$2370>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2372 = $2368 ^ $2371; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2373 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2374 = ((($2373)) + 60|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2375 = HEAP32[$2374>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2376 = $2372 ^ $2375; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2377 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2378 = ((($2377)) + 52|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2379 = HEAP32[$2378>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2380 = $2376 ^ $2379; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2381 = $2380 << 1; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2382 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2383 = ((($2382)) + 40|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2384 = HEAP32[$2383>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2385 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2386 = ((($2385)) + 20|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2387 = HEAP32[$2386>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2388 = $2384 ^ $2387; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2389 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2390 = ((($2389)) + 60|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2391 = HEAP32[$2390>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2392 = $2388 ^ $2391; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2393 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2394 = ((($2393)) + 52|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2395 = HEAP32[$2394>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2396 = $2392 ^ $2395; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2397 = $2396 >>> 31; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2398 = $2381 | $2397; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2399 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2400 = ((($2399)) + 52|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2400>>2] = $2398; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2401 = (($2365) + ($2398))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2402 = (($2401) + -1894007588)|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2403 = HEAP32[$8>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2404 = $2403 << 5; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2405 = HEAP32[$8>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2406 = $2405 >>> 27; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2407 = $2404 | $2406; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2408 = (($2402) + ($2407))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2409 = HEAP32[$12>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2410 = (($2409) + ($2408))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $2410; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2411 = HEAP32[$9>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2412 = $2411 << 30; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2413 = HEAP32[$9>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2414 = $2413 >>> 2; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2415 = $2412 | $2414; //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $2415; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2416 = HEAP32[$8>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2417 = HEAP32[$9>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2418 = $2416 | $2417; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2419 = HEAP32[$10>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2420 = $2418 & $2419; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2421 = HEAP32[$8>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2422 = HEAP32[$9>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2423 = $2421 & $2422; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2424 = $2420 | $2423; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2425 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2426 = ((($2425)) + 44|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2427 = HEAP32[$2426>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2428 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2429 = ((($2428)) + 24|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2430 = HEAP32[$2429>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2431 = $2427 ^ $2430; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2432 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2433 = HEAP32[$2432>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2434 = $2431 ^ $2433; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2435 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2436 = ((($2435)) + 56|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2437 = HEAP32[$2436>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2438 = $2434 ^ $2437; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2439 = $2438 << 1; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2440 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2441 = ((($2440)) + 44|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2442 = HEAP32[$2441>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2443 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2444 = ((($2443)) + 24|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2445 = HEAP32[$2444>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2446 = $2442 ^ $2445; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2447 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2448 = HEAP32[$2447>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2449 = $2446 ^ $2448; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2450 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2451 = ((($2450)) + 56|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2452 = HEAP32[$2451>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2453 = $2449 ^ $2452; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2454 = $2453 >>> 31; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2455 = $2439 | $2454; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2456 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2457 = ((($2456)) + 56|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2457>>2] = $2455; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2458 = (($2424) + ($2455))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2459 = (($2458) + -1894007588)|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2460 = HEAP32[$12>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2461 = $2460 << 5; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2462 = HEAP32[$12>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2463 = $2462 >>> 27; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2464 = $2461 | $2463; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2465 = (($2459) + ($2464))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2466 = HEAP32[$11>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2467 = (($2466) + ($2465))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $2467; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2468 = HEAP32[$8>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2469 = $2468 << 30; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2470 = HEAP32[$8>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2471 = $2470 >>> 2; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2472 = $2469 | $2471; //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $2472; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2473 = HEAP32[$12>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2474 = HEAP32[$8>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2475 = $2473 | $2474; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2476 = HEAP32[$9>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2477 = $2475 & $2476; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2478 = HEAP32[$12>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2479 = HEAP32[$8>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2480 = $2478 & $2479; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2481 = $2477 | $2480; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2482 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2483 = ((($2482)) + 48|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2484 = HEAP32[$2483>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2485 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2486 = ((($2485)) + 28|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2487 = HEAP32[$2486>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2488 = $2484 ^ $2487; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2489 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2490 = ((($2489)) + 4|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2491 = HEAP32[$2490>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2492 = $2488 ^ $2491; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2493 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2494 = ((($2493)) + 60|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2495 = HEAP32[$2494>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2496 = $2492 ^ $2495; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2497 = $2496 << 1; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2498 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2499 = ((($2498)) + 48|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2500 = HEAP32[$2499>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2501 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2502 = ((($2501)) + 28|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2503 = HEAP32[$2502>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2504 = $2500 ^ $2503; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2505 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2506 = ((($2505)) + 4|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2507 = HEAP32[$2506>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2508 = $2504 ^ $2507; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2509 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2510 = ((($2509)) + 60|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2511 = HEAP32[$2510>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2512 = $2508 ^ $2511; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2513 = $2512 >>> 31; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2514 = $2497 | $2513; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2515 = $13; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2516 = ((($2515)) + 60|0); //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2516>>2] = $2514; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2517 = (($2481) + ($2514))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2518 = (($2517) + -1894007588)|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2519 = HEAP32[$11>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2520 = $2519 << 5; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2521 = HEAP32[$11>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2522 = $2521 >>> 27; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2523 = $2520 | $2522; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2524 = (($2518) + ($2523))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2525 = HEAP32[$10>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2526 = (($2525) + ($2524))|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $2526; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2527 = HEAP32[$12>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2528 = $2527 << 30; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2529 = HEAP32[$12>>2]|0; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2530 = $2529 >>> 2; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2531 = $2528 | $2530; //@line 130 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $2531; //@line 130 "./src/cpp/unrar/sha1.cpp"
 $2532 = HEAP32[$11>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2533 = HEAP32[$12>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2534 = $2532 | $2533; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2535 = HEAP32[$8>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2536 = $2534 & $2535; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2537 = HEAP32[$11>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2538 = HEAP32[$12>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2539 = $2537 & $2538; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2540 = $2536 | $2539; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2541 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2542 = ((($2541)) + 52|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2543 = HEAP32[$2542>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2544 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2545 = ((($2544)) + 32|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2546 = HEAP32[$2545>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2547 = $2543 ^ $2546; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2548 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2549 = ((($2548)) + 8|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2550 = HEAP32[$2549>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2551 = $2547 ^ $2550; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2552 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2553 = HEAP32[$2552>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2554 = $2551 ^ $2553; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2555 = $2554 << 1; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2556 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2557 = ((($2556)) + 52|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2558 = HEAP32[$2557>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2559 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2560 = ((($2559)) + 32|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2561 = HEAP32[$2560>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2562 = $2558 ^ $2561; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2563 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2564 = ((($2563)) + 8|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2565 = HEAP32[$2564>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2566 = $2562 ^ $2565; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2567 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2568 = HEAP32[$2567>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2569 = $2566 ^ $2568; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2570 = $2569 >>> 31; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2571 = $2555 | $2570; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2572 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2572>>2] = $2571; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2573 = (($2540) + ($2571))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2574 = (($2573) + -1894007588)|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2575 = HEAP32[$10>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2576 = $2575 << 5; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2577 = HEAP32[$10>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2578 = $2577 >>> 27; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2579 = $2576 | $2578; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2580 = (($2574) + ($2579))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2581 = HEAP32[$9>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2582 = (($2581) + ($2580))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $2582; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2583 = HEAP32[$11>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2584 = $2583 << 30; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2585 = HEAP32[$11>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2586 = $2585 >>> 2; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2587 = $2584 | $2586; //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $2587; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2588 = HEAP32[$10>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2589 = HEAP32[$11>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2590 = $2588 | $2589; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2591 = HEAP32[$12>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2592 = $2590 & $2591; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2593 = HEAP32[$10>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2594 = HEAP32[$11>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2595 = $2593 & $2594; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2596 = $2592 | $2595; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2597 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2598 = ((($2597)) + 56|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2599 = HEAP32[$2598>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2600 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2601 = ((($2600)) + 36|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2602 = HEAP32[$2601>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2603 = $2599 ^ $2602; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2604 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2605 = ((($2604)) + 12|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2606 = HEAP32[$2605>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2607 = $2603 ^ $2606; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2608 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2609 = ((($2608)) + 4|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2610 = HEAP32[$2609>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2611 = $2607 ^ $2610; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2612 = $2611 << 1; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2613 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2614 = ((($2613)) + 56|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2615 = HEAP32[$2614>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2616 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2617 = ((($2616)) + 36|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2618 = HEAP32[$2617>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2619 = $2615 ^ $2618; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2620 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2621 = ((($2620)) + 12|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2622 = HEAP32[$2621>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2623 = $2619 ^ $2622; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2624 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2625 = ((($2624)) + 4|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2626 = HEAP32[$2625>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2627 = $2623 ^ $2626; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2628 = $2627 >>> 31; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2629 = $2612 | $2628; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2630 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2631 = ((($2630)) + 4|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2631>>2] = $2629; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2632 = (($2596) + ($2629))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2633 = (($2632) + -1894007588)|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2634 = HEAP32[$9>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2635 = $2634 << 5; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2636 = HEAP32[$9>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2637 = $2636 >>> 27; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2638 = $2635 | $2637; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2639 = (($2633) + ($2638))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2640 = HEAP32[$8>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2641 = (($2640) + ($2639))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $2641; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2642 = HEAP32[$10>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2643 = $2642 << 30; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2644 = HEAP32[$10>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2645 = $2644 >>> 2; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2646 = $2643 | $2645; //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $2646; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2647 = HEAP32[$9>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2648 = HEAP32[$10>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2649 = $2647 | $2648; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2650 = HEAP32[$11>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2651 = $2649 & $2650; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2652 = HEAP32[$9>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2653 = HEAP32[$10>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2654 = $2652 & $2653; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2655 = $2651 | $2654; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2656 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2657 = ((($2656)) + 60|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2658 = HEAP32[$2657>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2659 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2660 = ((($2659)) + 40|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2661 = HEAP32[$2660>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2662 = $2658 ^ $2661; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2663 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2664 = ((($2663)) + 16|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2665 = HEAP32[$2664>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2666 = $2662 ^ $2665; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2667 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2668 = ((($2667)) + 8|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2669 = HEAP32[$2668>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2670 = $2666 ^ $2669; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2671 = $2670 << 1; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2672 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2673 = ((($2672)) + 60|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2674 = HEAP32[$2673>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2675 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2676 = ((($2675)) + 40|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2677 = HEAP32[$2676>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2678 = $2674 ^ $2677; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2679 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2680 = ((($2679)) + 16|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2681 = HEAP32[$2680>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2682 = $2678 ^ $2681; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2683 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2684 = ((($2683)) + 8|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2685 = HEAP32[$2684>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2686 = $2682 ^ $2685; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2687 = $2686 >>> 31; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2688 = $2671 | $2687; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2689 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2690 = ((($2689)) + 8|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2690>>2] = $2688; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2691 = (($2655) + ($2688))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2692 = (($2691) + -1894007588)|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2693 = HEAP32[$8>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2694 = $2693 << 5; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2695 = HEAP32[$8>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2696 = $2695 >>> 27; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2697 = $2694 | $2696; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2698 = (($2692) + ($2697))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2699 = HEAP32[$12>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2700 = (($2699) + ($2698))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $2700; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2701 = HEAP32[$9>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2702 = $2701 << 30; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2703 = HEAP32[$9>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2704 = $2703 >>> 2; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2705 = $2702 | $2704; //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $2705; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2706 = HEAP32[$8>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2707 = HEAP32[$9>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2708 = $2706 | $2707; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2709 = HEAP32[$10>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2710 = $2708 & $2709; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2711 = HEAP32[$8>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2712 = HEAP32[$9>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2713 = $2711 & $2712; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2714 = $2710 | $2713; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2715 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2716 = HEAP32[$2715>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2717 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2718 = ((($2717)) + 44|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2719 = HEAP32[$2718>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2720 = $2716 ^ $2719; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2721 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2722 = ((($2721)) + 20|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2723 = HEAP32[$2722>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2724 = $2720 ^ $2723; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2725 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2726 = ((($2725)) + 12|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2727 = HEAP32[$2726>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2728 = $2724 ^ $2727; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2729 = $2728 << 1; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2730 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2731 = HEAP32[$2730>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2732 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2733 = ((($2732)) + 44|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2734 = HEAP32[$2733>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2735 = $2731 ^ $2734; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2736 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2737 = ((($2736)) + 20|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2738 = HEAP32[$2737>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2739 = $2735 ^ $2738; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2740 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2741 = ((($2740)) + 12|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2742 = HEAP32[$2741>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2743 = $2739 ^ $2742; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2744 = $2743 >>> 31; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2745 = $2729 | $2744; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2746 = $13; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2747 = ((($2746)) + 12|0); //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2747>>2] = $2745; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2748 = (($2714) + ($2745))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2749 = (($2748) + -1894007588)|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2750 = HEAP32[$12>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2751 = $2750 << 5; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2752 = HEAP32[$12>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2753 = $2752 >>> 27; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2754 = $2751 | $2753; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2755 = (($2749) + ($2754))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2756 = HEAP32[$11>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2757 = (($2756) + ($2755))|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $2757; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2758 = HEAP32[$8>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2759 = $2758 << 30; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2760 = HEAP32[$8>>2]|0; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2761 = $2760 >>> 2; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2762 = $2759 | $2761; //@line 131 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $2762; //@line 131 "./src/cpp/unrar/sha1.cpp"
 $2763 = HEAP32[$12>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2764 = HEAP32[$8>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2765 = $2763 | $2764; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2766 = HEAP32[$9>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2767 = $2765 & $2766; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2768 = HEAP32[$12>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2769 = HEAP32[$8>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2770 = $2768 & $2769; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2771 = $2767 | $2770; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2772 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2773 = ((($2772)) + 4|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2774 = HEAP32[$2773>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2775 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2776 = ((($2775)) + 48|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2777 = HEAP32[$2776>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2778 = $2774 ^ $2777; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2779 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2780 = ((($2779)) + 24|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2781 = HEAP32[$2780>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2782 = $2778 ^ $2781; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2783 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2784 = ((($2783)) + 16|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2785 = HEAP32[$2784>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2786 = $2782 ^ $2785; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2787 = $2786 << 1; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2788 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2789 = ((($2788)) + 4|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2790 = HEAP32[$2789>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2791 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2792 = ((($2791)) + 48|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2793 = HEAP32[$2792>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2794 = $2790 ^ $2793; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2795 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2796 = ((($2795)) + 24|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2797 = HEAP32[$2796>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2798 = $2794 ^ $2797; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2799 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2800 = ((($2799)) + 16|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2801 = HEAP32[$2800>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2802 = $2798 ^ $2801; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2803 = $2802 >>> 31; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2804 = $2787 | $2803; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2805 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2806 = ((($2805)) + 16|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2806>>2] = $2804; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2807 = (($2771) + ($2804))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2808 = (($2807) + -1894007588)|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2809 = HEAP32[$11>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2810 = $2809 << 5; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2811 = HEAP32[$11>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2812 = $2811 >>> 27; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2813 = $2810 | $2812; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2814 = (($2808) + ($2813))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2815 = HEAP32[$10>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2816 = (($2815) + ($2814))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $2816; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2817 = HEAP32[$12>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2818 = $2817 << 30; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2819 = HEAP32[$12>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2820 = $2819 >>> 2; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2821 = $2818 | $2820; //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $2821; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2822 = HEAP32[$11>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2823 = HEAP32[$12>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2824 = $2822 | $2823; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2825 = HEAP32[$8>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2826 = $2824 & $2825; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2827 = HEAP32[$11>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2828 = HEAP32[$12>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2829 = $2827 & $2828; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2830 = $2826 | $2829; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2831 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2832 = ((($2831)) + 8|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2833 = HEAP32[$2832>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2834 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2835 = ((($2834)) + 52|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2836 = HEAP32[$2835>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2837 = $2833 ^ $2836; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2838 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2839 = ((($2838)) + 28|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2840 = HEAP32[$2839>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2841 = $2837 ^ $2840; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2842 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2843 = ((($2842)) + 20|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2844 = HEAP32[$2843>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2845 = $2841 ^ $2844; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2846 = $2845 << 1; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2847 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2848 = ((($2847)) + 8|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2849 = HEAP32[$2848>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2850 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2851 = ((($2850)) + 52|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2852 = HEAP32[$2851>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2853 = $2849 ^ $2852; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2854 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2855 = ((($2854)) + 28|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2856 = HEAP32[$2855>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2857 = $2853 ^ $2856; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2858 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2859 = ((($2858)) + 20|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2860 = HEAP32[$2859>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2861 = $2857 ^ $2860; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2862 = $2861 >>> 31; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2863 = $2846 | $2862; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2864 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2865 = ((($2864)) + 20|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2865>>2] = $2863; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2866 = (($2830) + ($2863))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2867 = (($2866) + -1894007588)|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2868 = HEAP32[$10>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2869 = $2868 << 5; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2870 = HEAP32[$10>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2871 = $2870 >>> 27; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2872 = $2869 | $2871; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2873 = (($2867) + ($2872))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2874 = HEAP32[$9>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2875 = (($2874) + ($2873))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $2875; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2876 = HEAP32[$11>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2877 = $2876 << 30; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2878 = HEAP32[$11>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2879 = $2878 >>> 2; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2880 = $2877 | $2879; //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $2880; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2881 = HEAP32[$10>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2882 = HEAP32[$11>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2883 = $2881 | $2882; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2884 = HEAP32[$12>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2885 = $2883 & $2884; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2886 = HEAP32[$10>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2887 = HEAP32[$11>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2888 = $2886 & $2887; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2889 = $2885 | $2888; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2890 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2891 = ((($2890)) + 12|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2892 = HEAP32[$2891>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2893 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2894 = ((($2893)) + 56|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2895 = HEAP32[$2894>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2896 = $2892 ^ $2895; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2897 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2898 = ((($2897)) + 32|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2899 = HEAP32[$2898>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2900 = $2896 ^ $2899; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2901 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2902 = ((($2901)) + 24|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2903 = HEAP32[$2902>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2904 = $2900 ^ $2903; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2905 = $2904 << 1; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2906 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2907 = ((($2906)) + 12|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2908 = HEAP32[$2907>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2909 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2910 = ((($2909)) + 56|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2911 = HEAP32[$2910>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2912 = $2908 ^ $2911; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2913 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2914 = ((($2913)) + 32|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2915 = HEAP32[$2914>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2916 = $2912 ^ $2915; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2917 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2918 = ((($2917)) + 24|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2919 = HEAP32[$2918>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2920 = $2916 ^ $2919; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2921 = $2920 >>> 31; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2922 = $2905 | $2921; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2923 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2924 = ((($2923)) + 24|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2924>>2] = $2922; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2925 = (($2889) + ($2922))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2926 = (($2925) + -1894007588)|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2927 = HEAP32[$9>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2928 = $2927 << 5; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2929 = HEAP32[$9>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2930 = $2929 >>> 27; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2931 = $2928 | $2930; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2932 = (($2926) + ($2931))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2933 = HEAP32[$8>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2934 = (($2933) + ($2932))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $2934; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2935 = HEAP32[$10>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2936 = $2935 << 30; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2937 = HEAP32[$10>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2938 = $2937 >>> 2; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2939 = $2936 | $2938; //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $2939; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2940 = HEAP32[$9>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2941 = HEAP32[$10>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2942 = $2940 | $2941; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2943 = HEAP32[$11>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2944 = $2942 & $2943; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2945 = HEAP32[$9>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2946 = HEAP32[$10>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2947 = $2945 & $2946; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2948 = $2944 | $2947; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2949 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2950 = ((($2949)) + 16|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2951 = HEAP32[$2950>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2952 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2953 = ((($2952)) + 60|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2954 = HEAP32[$2953>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2955 = $2951 ^ $2954; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2956 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2957 = ((($2956)) + 36|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2958 = HEAP32[$2957>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2959 = $2955 ^ $2958; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2960 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2961 = ((($2960)) + 28|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2962 = HEAP32[$2961>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2963 = $2959 ^ $2962; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2964 = $2963 << 1; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2965 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2966 = ((($2965)) + 16|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2967 = HEAP32[$2966>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2968 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2969 = ((($2968)) + 60|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2970 = HEAP32[$2969>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2971 = $2967 ^ $2970; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2972 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2973 = ((($2972)) + 36|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2974 = HEAP32[$2973>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2975 = $2971 ^ $2974; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2976 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2977 = ((($2976)) + 28|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2978 = HEAP32[$2977>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2979 = $2975 ^ $2978; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2980 = $2979 >>> 31; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2981 = $2964 | $2980; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2982 = $13; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2983 = ((($2982)) + 28|0); //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2983>>2] = $2981; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2984 = (($2948) + ($2981))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2985 = (($2984) + -1894007588)|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2986 = HEAP32[$8>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2987 = $2986 << 5; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2988 = HEAP32[$8>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2989 = $2988 >>> 27; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2990 = $2987 | $2989; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2991 = (($2985) + ($2990))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2992 = HEAP32[$12>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2993 = (($2992) + ($2991))|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $2993; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2994 = HEAP32[$9>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2995 = $2994 << 30; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2996 = HEAP32[$9>>2]|0; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2997 = $2996 >>> 2; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2998 = $2995 | $2997; //@line 132 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $2998; //@line 132 "./src/cpp/unrar/sha1.cpp"
 $2999 = HEAP32[$8>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3000 = HEAP32[$9>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3001 = $2999 | $3000; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3002 = HEAP32[$10>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3003 = $3001 & $3002; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3004 = HEAP32[$8>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3005 = HEAP32[$9>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3006 = $3004 & $3005; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3007 = $3003 | $3006; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3008 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3009 = ((($3008)) + 20|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3010 = HEAP32[$3009>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3011 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3012 = HEAP32[$3011>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3013 = $3010 ^ $3012; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3014 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3015 = ((($3014)) + 40|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3016 = HEAP32[$3015>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3017 = $3013 ^ $3016; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3018 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3019 = ((($3018)) + 32|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3020 = HEAP32[$3019>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3021 = $3017 ^ $3020; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3022 = $3021 << 1; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3023 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3024 = ((($3023)) + 20|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3025 = HEAP32[$3024>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3026 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3027 = HEAP32[$3026>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3028 = $3025 ^ $3027; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3029 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3030 = ((($3029)) + 40|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3031 = HEAP32[$3030>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3032 = $3028 ^ $3031; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3033 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3034 = ((($3033)) + 32|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3035 = HEAP32[$3034>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3036 = $3032 ^ $3035; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3037 = $3036 >>> 31; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3038 = $3022 | $3037; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3039 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3040 = ((($3039)) + 32|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3040>>2] = $3038; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3041 = (($3007) + ($3038))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3042 = (($3041) + -1894007588)|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3043 = HEAP32[$12>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3044 = $3043 << 5; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3045 = HEAP32[$12>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3046 = $3045 >>> 27; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3047 = $3044 | $3046; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3048 = (($3042) + ($3047))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3049 = HEAP32[$11>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3050 = (($3049) + ($3048))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $3050; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3051 = HEAP32[$8>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3052 = $3051 << 30; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3053 = HEAP32[$8>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3054 = $3053 >>> 2; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3055 = $3052 | $3054; //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $3055; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3056 = HEAP32[$12>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3057 = HEAP32[$8>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3058 = $3056 | $3057; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3059 = HEAP32[$9>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3060 = $3058 & $3059; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3061 = HEAP32[$12>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3062 = HEAP32[$8>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3063 = $3061 & $3062; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3064 = $3060 | $3063; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3065 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3066 = ((($3065)) + 24|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3067 = HEAP32[$3066>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3068 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3069 = ((($3068)) + 4|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3070 = HEAP32[$3069>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3071 = $3067 ^ $3070; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3072 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3073 = ((($3072)) + 44|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3074 = HEAP32[$3073>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3075 = $3071 ^ $3074; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3076 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3077 = ((($3076)) + 36|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3078 = HEAP32[$3077>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3079 = $3075 ^ $3078; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3080 = $3079 << 1; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3081 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3082 = ((($3081)) + 24|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3083 = HEAP32[$3082>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3084 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3085 = ((($3084)) + 4|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3086 = HEAP32[$3085>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3087 = $3083 ^ $3086; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3088 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3089 = ((($3088)) + 44|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3090 = HEAP32[$3089>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3091 = $3087 ^ $3090; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3092 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3093 = ((($3092)) + 36|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3094 = HEAP32[$3093>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3095 = $3091 ^ $3094; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3096 = $3095 >>> 31; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3097 = $3080 | $3096; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3098 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3099 = ((($3098)) + 36|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3099>>2] = $3097; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3100 = (($3064) + ($3097))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3101 = (($3100) + -1894007588)|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3102 = HEAP32[$11>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3103 = $3102 << 5; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3104 = HEAP32[$11>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3105 = $3104 >>> 27; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3106 = $3103 | $3105; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3107 = (($3101) + ($3106))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3108 = HEAP32[$10>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3109 = (($3108) + ($3107))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $3109; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3110 = HEAP32[$12>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3111 = $3110 << 30; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3112 = HEAP32[$12>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3113 = $3112 >>> 2; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3114 = $3111 | $3113; //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $3114; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3115 = HEAP32[$11>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3116 = HEAP32[$12>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3117 = $3115 | $3116; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3118 = HEAP32[$8>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3119 = $3117 & $3118; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3120 = HEAP32[$11>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3121 = HEAP32[$12>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3122 = $3120 & $3121; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3123 = $3119 | $3122; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3124 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3125 = ((($3124)) + 28|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3126 = HEAP32[$3125>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3127 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3128 = ((($3127)) + 8|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3129 = HEAP32[$3128>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3130 = $3126 ^ $3129; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3131 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3132 = ((($3131)) + 48|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3133 = HEAP32[$3132>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3134 = $3130 ^ $3133; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3135 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3136 = ((($3135)) + 40|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3137 = HEAP32[$3136>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3138 = $3134 ^ $3137; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3139 = $3138 << 1; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3140 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3141 = ((($3140)) + 28|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3142 = HEAP32[$3141>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3143 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3144 = ((($3143)) + 8|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3145 = HEAP32[$3144>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3146 = $3142 ^ $3145; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3147 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3148 = ((($3147)) + 48|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3149 = HEAP32[$3148>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3150 = $3146 ^ $3149; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3151 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3152 = ((($3151)) + 40|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3153 = HEAP32[$3152>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3154 = $3150 ^ $3153; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3155 = $3154 >>> 31; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3156 = $3139 | $3155; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3157 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3158 = ((($3157)) + 40|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3158>>2] = $3156; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3159 = (($3123) + ($3156))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3160 = (($3159) + -1894007588)|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3161 = HEAP32[$10>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3162 = $3161 << 5; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3163 = HEAP32[$10>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3164 = $3163 >>> 27; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3165 = $3162 | $3164; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3166 = (($3160) + ($3165))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3167 = HEAP32[$9>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3168 = (($3167) + ($3166))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $3168; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3169 = HEAP32[$11>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3170 = $3169 << 30; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3171 = HEAP32[$11>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3172 = $3171 >>> 2; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3173 = $3170 | $3172; //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $3173; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3174 = HEAP32[$10>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3175 = HEAP32[$11>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3176 = $3174 | $3175; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3177 = HEAP32[$12>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3178 = $3176 & $3177; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3179 = HEAP32[$10>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3180 = HEAP32[$11>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3181 = $3179 & $3180; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3182 = $3178 | $3181; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3183 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3184 = ((($3183)) + 32|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3185 = HEAP32[$3184>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3186 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3187 = ((($3186)) + 12|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3188 = HEAP32[$3187>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3189 = $3185 ^ $3188; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3190 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3191 = ((($3190)) + 52|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3192 = HEAP32[$3191>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3193 = $3189 ^ $3192; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3194 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3195 = ((($3194)) + 44|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3196 = HEAP32[$3195>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3197 = $3193 ^ $3196; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3198 = $3197 << 1; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3199 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3200 = ((($3199)) + 32|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3201 = HEAP32[$3200>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3202 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3203 = ((($3202)) + 12|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3204 = HEAP32[$3203>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3205 = $3201 ^ $3204; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3206 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3207 = ((($3206)) + 52|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3208 = HEAP32[$3207>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3209 = $3205 ^ $3208; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3210 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3211 = ((($3210)) + 44|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3212 = HEAP32[$3211>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3213 = $3209 ^ $3212; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3214 = $3213 >>> 31; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3215 = $3198 | $3214; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3216 = $13; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3217 = ((($3216)) + 44|0); //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3217>>2] = $3215; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3218 = (($3182) + ($3215))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3219 = (($3218) + -1894007588)|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3220 = HEAP32[$9>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3221 = $3220 << 5; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3222 = HEAP32[$9>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3223 = $3222 >>> 27; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3224 = $3221 | $3223; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3225 = (($3219) + ($3224))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3226 = HEAP32[$8>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3227 = (($3226) + ($3225))|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $3227; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3228 = HEAP32[$10>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3229 = $3228 << 30; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3230 = HEAP32[$10>>2]|0; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3231 = $3230 >>> 2; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3232 = $3229 | $3231; //@line 133 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $3232; //@line 133 "./src/cpp/unrar/sha1.cpp"
 $3233 = HEAP32[$9>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3234 = HEAP32[$10>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3235 = $3233 ^ $3234; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3236 = HEAP32[$11>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3237 = $3235 ^ $3236; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3238 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3239 = ((($3238)) + 36|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3240 = HEAP32[$3239>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3241 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3242 = ((($3241)) + 16|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3243 = HEAP32[$3242>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3244 = $3240 ^ $3243; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3245 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3246 = ((($3245)) + 56|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3247 = HEAP32[$3246>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3248 = $3244 ^ $3247; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3249 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3250 = ((($3249)) + 48|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3251 = HEAP32[$3250>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3252 = $3248 ^ $3251; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3253 = $3252 << 1; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3254 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3255 = ((($3254)) + 36|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3256 = HEAP32[$3255>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3257 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3258 = ((($3257)) + 16|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3259 = HEAP32[$3258>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3260 = $3256 ^ $3259; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3261 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3262 = ((($3261)) + 56|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3263 = HEAP32[$3262>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3264 = $3260 ^ $3263; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3265 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3266 = ((($3265)) + 48|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3267 = HEAP32[$3266>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3268 = $3264 ^ $3267; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3269 = $3268 >>> 31; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3270 = $3253 | $3269; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3271 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3272 = ((($3271)) + 48|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3272>>2] = $3270; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3273 = (($3237) + ($3270))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3274 = (($3273) + -899497514)|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3275 = HEAP32[$8>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3276 = $3275 << 5; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3277 = HEAP32[$8>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3278 = $3277 >>> 27; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3279 = $3276 | $3278; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3280 = (($3274) + ($3279))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3281 = HEAP32[$12>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3282 = (($3281) + ($3280))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $3282; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3283 = HEAP32[$9>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3284 = $3283 << 30; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3285 = HEAP32[$9>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3286 = $3285 >>> 2; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3287 = $3284 | $3286; //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $3287; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3288 = HEAP32[$8>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3289 = HEAP32[$9>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3290 = $3288 ^ $3289; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3291 = HEAP32[$10>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3292 = $3290 ^ $3291; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3293 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3294 = ((($3293)) + 40|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3295 = HEAP32[$3294>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3296 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3297 = ((($3296)) + 20|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3298 = HEAP32[$3297>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3299 = $3295 ^ $3298; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3300 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3301 = ((($3300)) + 60|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3302 = HEAP32[$3301>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3303 = $3299 ^ $3302; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3304 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3305 = ((($3304)) + 52|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3306 = HEAP32[$3305>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3307 = $3303 ^ $3306; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3308 = $3307 << 1; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3309 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3310 = ((($3309)) + 40|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3311 = HEAP32[$3310>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3312 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3313 = ((($3312)) + 20|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3314 = HEAP32[$3313>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3315 = $3311 ^ $3314; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3316 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3317 = ((($3316)) + 60|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3318 = HEAP32[$3317>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3319 = $3315 ^ $3318; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3320 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3321 = ((($3320)) + 52|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3322 = HEAP32[$3321>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3323 = $3319 ^ $3322; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3324 = $3323 >>> 31; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3325 = $3308 | $3324; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3326 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3327 = ((($3326)) + 52|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3327>>2] = $3325; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3328 = (($3292) + ($3325))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3329 = (($3328) + -899497514)|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3330 = HEAP32[$12>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3331 = $3330 << 5; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3332 = HEAP32[$12>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3333 = $3332 >>> 27; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3334 = $3331 | $3333; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3335 = (($3329) + ($3334))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3336 = HEAP32[$11>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3337 = (($3336) + ($3335))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $3337; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3338 = HEAP32[$8>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3339 = $3338 << 30; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3340 = HEAP32[$8>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3341 = $3340 >>> 2; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3342 = $3339 | $3341; //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $3342; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3343 = HEAP32[$12>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3344 = HEAP32[$8>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3345 = $3343 ^ $3344; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3346 = HEAP32[$9>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3347 = $3345 ^ $3346; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3348 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3349 = ((($3348)) + 44|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3350 = HEAP32[$3349>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3351 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3352 = ((($3351)) + 24|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3353 = HEAP32[$3352>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3354 = $3350 ^ $3353; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3355 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3356 = HEAP32[$3355>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3357 = $3354 ^ $3356; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3358 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3359 = ((($3358)) + 56|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3360 = HEAP32[$3359>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3361 = $3357 ^ $3360; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3362 = $3361 << 1; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3363 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3364 = ((($3363)) + 44|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3365 = HEAP32[$3364>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3366 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3367 = ((($3366)) + 24|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3368 = HEAP32[$3367>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3369 = $3365 ^ $3368; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3370 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3371 = HEAP32[$3370>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3372 = $3369 ^ $3371; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3373 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3374 = ((($3373)) + 56|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3375 = HEAP32[$3374>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3376 = $3372 ^ $3375; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3377 = $3376 >>> 31; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3378 = $3362 | $3377; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3379 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3380 = ((($3379)) + 56|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3380>>2] = $3378; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3381 = (($3347) + ($3378))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3382 = (($3381) + -899497514)|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3383 = HEAP32[$11>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3384 = $3383 << 5; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3385 = HEAP32[$11>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3386 = $3385 >>> 27; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3387 = $3384 | $3386; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3388 = (($3382) + ($3387))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3389 = HEAP32[$10>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3390 = (($3389) + ($3388))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $3390; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3391 = HEAP32[$12>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3392 = $3391 << 30; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3393 = HEAP32[$12>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3394 = $3393 >>> 2; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3395 = $3392 | $3394; //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $3395; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3396 = HEAP32[$11>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3397 = HEAP32[$12>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3398 = $3396 ^ $3397; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3399 = HEAP32[$8>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3400 = $3398 ^ $3399; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3401 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3402 = ((($3401)) + 48|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3403 = HEAP32[$3402>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3404 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3405 = ((($3404)) + 28|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3406 = HEAP32[$3405>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3407 = $3403 ^ $3406; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3408 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3409 = ((($3408)) + 4|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3410 = HEAP32[$3409>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3411 = $3407 ^ $3410; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3412 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3413 = ((($3412)) + 60|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3414 = HEAP32[$3413>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3415 = $3411 ^ $3414; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3416 = $3415 << 1; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3417 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3418 = ((($3417)) + 48|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3419 = HEAP32[$3418>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3420 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3421 = ((($3420)) + 28|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3422 = HEAP32[$3421>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3423 = $3419 ^ $3422; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3424 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3425 = ((($3424)) + 4|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3426 = HEAP32[$3425>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3427 = $3423 ^ $3426; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3428 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3429 = ((($3428)) + 60|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3430 = HEAP32[$3429>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3431 = $3427 ^ $3430; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3432 = $3431 >>> 31; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3433 = $3416 | $3432; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3434 = $13; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3435 = ((($3434)) + 60|0); //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3435>>2] = $3433; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3436 = (($3400) + ($3433))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3437 = (($3436) + -899497514)|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3438 = HEAP32[$10>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3439 = $3438 << 5; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3440 = HEAP32[$10>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3441 = $3440 >>> 27; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3442 = $3439 | $3441; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3443 = (($3437) + ($3442))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3444 = HEAP32[$9>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3445 = (($3444) + ($3443))|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $3445; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3446 = HEAP32[$11>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3447 = $3446 << 30; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3448 = HEAP32[$11>>2]|0; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3449 = $3448 >>> 2; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3450 = $3447 | $3449; //@line 134 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $3450; //@line 134 "./src/cpp/unrar/sha1.cpp"
 $3451 = HEAP32[$10>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3452 = HEAP32[$11>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3453 = $3451 ^ $3452; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3454 = HEAP32[$12>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3455 = $3453 ^ $3454; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3456 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3457 = ((($3456)) + 52|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3458 = HEAP32[$3457>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3459 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3460 = ((($3459)) + 32|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3461 = HEAP32[$3460>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3462 = $3458 ^ $3461; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3463 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3464 = ((($3463)) + 8|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3465 = HEAP32[$3464>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3466 = $3462 ^ $3465; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3467 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3468 = HEAP32[$3467>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3469 = $3466 ^ $3468; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3470 = $3469 << 1; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3471 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3472 = ((($3471)) + 52|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3473 = HEAP32[$3472>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3474 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3475 = ((($3474)) + 32|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3476 = HEAP32[$3475>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3477 = $3473 ^ $3476; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3478 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3479 = ((($3478)) + 8|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3480 = HEAP32[$3479>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3481 = $3477 ^ $3480; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3482 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3483 = HEAP32[$3482>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3484 = $3481 ^ $3483; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3485 = $3484 >>> 31; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3486 = $3470 | $3485; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3487 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3487>>2] = $3486; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3488 = (($3455) + ($3486))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3489 = (($3488) + -899497514)|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3490 = HEAP32[$9>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3491 = $3490 << 5; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3492 = HEAP32[$9>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3493 = $3492 >>> 27; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3494 = $3491 | $3493; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3495 = (($3489) + ($3494))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3496 = HEAP32[$8>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3497 = (($3496) + ($3495))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $3497; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3498 = HEAP32[$10>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3499 = $3498 << 30; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3500 = HEAP32[$10>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3501 = $3500 >>> 2; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3502 = $3499 | $3501; //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $3502; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3503 = HEAP32[$9>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3504 = HEAP32[$10>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3505 = $3503 ^ $3504; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3506 = HEAP32[$11>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3507 = $3505 ^ $3506; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3508 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3509 = ((($3508)) + 56|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3510 = HEAP32[$3509>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3511 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3512 = ((($3511)) + 36|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3513 = HEAP32[$3512>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3514 = $3510 ^ $3513; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3515 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3516 = ((($3515)) + 12|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3517 = HEAP32[$3516>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3518 = $3514 ^ $3517; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3519 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3520 = ((($3519)) + 4|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3521 = HEAP32[$3520>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3522 = $3518 ^ $3521; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3523 = $3522 << 1; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3524 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3525 = ((($3524)) + 56|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3526 = HEAP32[$3525>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3527 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3528 = ((($3527)) + 36|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3529 = HEAP32[$3528>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3530 = $3526 ^ $3529; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3531 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3532 = ((($3531)) + 12|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3533 = HEAP32[$3532>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3534 = $3530 ^ $3533; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3535 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3536 = ((($3535)) + 4|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3537 = HEAP32[$3536>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3538 = $3534 ^ $3537; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3539 = $3538 >>> 31; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3540 = $3523 | $3539; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3541 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3542 = ((($3541)) + 4|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3542>>2] = $3540; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3543 = (($3507) + ($3540))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3544 = (($3543) + -899497514)|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3545 = HEAP32[$8>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3546 = $3545 << 5; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3547 = HEAP32[$8>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3548 = $3547 >>> 27; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3549 = $3546 | $3548; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3550 = (($3544) + ($3549))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3551 = HEAP32[$12>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3552 = (($3551) + ($3550))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $3552; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3553 = HEAP32[$9>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3554 = $3553 << 30; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3555 = HEAP32[$9>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3556 = $3555 >>> 2; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3557 = $3554 | $3556; //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $3557; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3558 = HEAP32[$8>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3559 = HEAP32[$9>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3560 = $3558 ^ $3559; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3561 = HEAP32[$10>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3562 = $3560 ^ $3561; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3563 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3564 = ((($3563)) + 60|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3565 = HEAP32[$3564>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3566 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3567 = ((($3566)) + 40|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3568 = HEAP32[$3567>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3569 = $3565 ^ $3568; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3570 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3571 = ((($3570)) + 16|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3572 = HEAP32[$3571>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3573 = $3569 ^ $3572; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3574 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3575 = ((($3574)) + 8|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3576 = HEAP32[$3575>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3577 = $3573 ^ $3576; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3578 = $3577 << 1; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3579 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3580 = ((($3579)) + 60|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3581 = HEAP32[$3580>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3582 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3583 = ((($3582)) + 40|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3584 = HEAP32[$3583>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3585 = $3581 ^ $3584; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3586 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3587 = ((($3586)) + 16|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3588 = HEAP32[$3587>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3589 = $3585 ^ $3588; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3590 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3591 = ((($3590)) + 8|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3592 = HEAP32[$3591>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3593 = $3589 ^ $3592; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3594 = $3593 >>> 31; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3595 = $3578 | $3594; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3596 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3597 = ((($3596)) + 8|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3597>>2] = $3595; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3598 = (($3562) + ($3595))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3599 = (($3598) + -899497514)|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3600 = HEAP32[$12>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3601 = $3600 << 5; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3602 = HEAP32[$12>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3603 = $3602 >>> 27; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3604 = $3601 | $3603; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3605 = (($3599) + ($3604))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3606 = HEAP32[$11>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3607 = (($3606) + ($3605))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $3607; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3608 = HEAP32[$8>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3609 = $3608 << 30; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3610 = HEAP32[$8>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3611 = $3610 >>> 2; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3612 = $3609 | $3611; //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $3612; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3613 = HEAP32[$12>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3614 = HEAP32[$8>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3615 = $3613 ^ $3614; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3616 = HEAP32[$9>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3617 = $3615 ^ $3616; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3618 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3619 = HEAP32[$3618>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3620 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3621 = ((($3620)) + 44|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3622 = HEAP32[$3621>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3623 = $3619 ^ $3622; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3624 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3625 = ((($3624)) + 20|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3626 = HEAP32[$3625>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3627 = $3623 ^ $3626; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3628 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3629 = ((($3628)) + 12|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3630 = HEAP32[$3629>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3631 = $3627 ^ $3630; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3632 = $3631 << 1; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3633 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3634 = HEAP32[$3633>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3635 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3636 = ((($3635)) + 44|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3637 = HEAP32[$3636>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3638 = $3634 ^ $3637; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3639 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3640 = ((($3639)) + 20|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3641 = HEAP32[$3640>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3642 = $3638 ^ $3641; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3643 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3644 = ((($3643)) + 12|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3645 = HEAP32[$3644>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3646 = $3642 ^ $3645; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3647 = $3646 >>> 31; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3648 = $3632 | $3647; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3649 = $13; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3650 = ((($3649)) + 12|0); //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3650>>2] = $3648; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3651 = (($3617) + ($3648))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3652 = (($3651) + -899497514)|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3653 = HEAP32[$11>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3654 = $3653 << 5; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3655 = HEAP32[$11>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3656 = $3655 >>> 27; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3657 = $3654 | $3656; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3658 = (($3652) + ($3657))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3659 = HEAP32[$10>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3660 = (($3659) + ($3658))|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $3660; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3661 = HEAP32[$12>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3662 = $3661 << 30; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3663 = HEAP32[$12>>2]|0; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3664 = $3663 >>> 2; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3665 = $3662 | $3664; //@line 135 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $3665; //@line 135 "./src/cpp/unrar/sha1.cpp"
 $3666 = HEAP32[$11>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3667 = HEAP32[$12>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3668 = $3666 ^ $3667; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3669 = HEAP32[$8>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3670 = $3668 ^ $3669; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3671 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3672 = ((($3671)) + 4|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3673 = HEAP32[$3672>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3674 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3675 = ((($3674)) + 48|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3676 = HEAP32[$3675>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3677 = $3673 ^ $3676; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3678 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3679 = ((($3678)) + 24|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3680 = HEAP32[$3679>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3681 = $3677 ^ $3680; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3682 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3683 = ((($3682)) + 16|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3684 = HEAP32[$3683>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3685 = $3681 ^ $3684; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3686 = $3685 << 1; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3687 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3688 = ((($3687)) + 4|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3689 = HEAP32[$3688>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3690 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3691 = ((($3690)) + 48|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3692 = HEAP32[$3691>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3693 = $3689 ^ $3692; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3694 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3695 = ((($3694)) + 24|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3696 = HEAP32[$3695>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3697 = $3693 ^ $3696; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3698 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3699 = ((($3698)) + 16|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3700 = HEAP32[$3699>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3701 = $3697 ^ $3700; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3702 = $3701 >>> 31; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3703 = $3686 | $3702; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3704 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3705 = ((($3704)) + 16|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3705>>2] = $3703; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3706 = (($3670) + ($3703))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3707 = (($3706) + -899497514)|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3708 = HEAP32[$10>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3709 = $3708 << 5; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3710 = HEAP32[$10>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3711 = $3710 >>> 27; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3712 = $3709 | $3711; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3713 = (($3707) + ($3712))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3714 = HEAP32[$9>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3715 = (($3714) + ($3713))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $3715; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3716 = HEAP32[$11>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3717 = $3716 << 30; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3718 = HEAP32[$11>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3719 = $3718 >>> 2; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3720 = $3717 | $3719; //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $3720; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3721 = HEAP32[$10>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3722 = HEAP32[$11>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3723 = $3721 ^ $3722; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3724 = HEAP32[$12>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3725 = $3723 ^ $3724; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3726 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3727 = ((($3726)) + 8|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3728 = HEAP32[$3727>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3729 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3730 = ((($3729)) + 52|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3731 = HEAP32[$3730>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3732 = $3728 ^ $3731; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3733 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3734 = ((($3733)) + 28|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3735 = HEAP32[$3734>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3736 = $3732 ^ $3735; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3737 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3738 = ((($3737)) + 20|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3739 = HEAP32[$3738>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3740 = $3736 ^ $3739; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3741 = $3740 << 1; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3742 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3743 = ((($3742)) + 8|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3744 = HEAP32[$3743>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3745 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3746 = ((($3745)) + 52|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3747 = HEAP32[$3746>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3748 = $3744 ^ $3747; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3749 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3750 = ((($3749)) + 28|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3751 = HEAP32[$3750>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3752 = $3748 ^ $3751; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3753 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3754 = ((($3753)) + 20|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3755 = HEAP32[$3754>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3756 = $3752 ^ $3755; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3757 = $3756 >>> 31; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3758 = $3741 | $3757; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3759 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3760 = ((($3759)) + 20|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3760>>2] = $3758; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3761 = (($3725) + ($3758))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3762 = (($3761) + -899497514)|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3763 = HEAP32[$9>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3764 = $3763 << 5; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3765 = HEAP32[$9>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3766 = $3765 >>> 27; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3767 = $3764 | $3766; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3768 = (($3762) + ($3767))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3769 = HEAP32[$8>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3770 = (($3769) + ($3768))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $3770; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3771 = HEAP32[$10>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3772 = $3771 << 30; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3773 = HEAP32[$10>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3774 = $3773 >>> 2; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3775 = $3772 | $3774; //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $3775; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3776 = HEAP32[$9>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3777 = HEAP32[$10>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3778 = $3776 ^ $3777; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3779 = HEAP32[$11>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3780 = $3778 ^ $3779; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3781 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3782 = ((($3781)) + 12|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3783 = HEAP32[$3782>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3784 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3785 = ((($3784)) + 56|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3786 = HEAP32[$3785>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3787 = $3783 ^ $3786; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3788 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3789 = ((($3788)) + 32|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3790 = HEAP32[$3789>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3791 = $3787 ^ $3790; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3792 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3793 = ((($3792)) + 24|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3794 = HEAP32[$3793>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3795 = $3791 ^ $3794; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3796 = $3795 << 1; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3797 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3798 = ((($3797)) + 12|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3799 = HEAP32[$3798>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3800 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3801 = ((($3800)) + 56|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3802 = HEAP32[$3801>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3803 = $3799 ^ $3802; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3804 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3805 = ((($3804)) + 32|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3806 = HEAP32[$3805>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3807 = $3803 ^ $3806; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3808 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3809 = ((($3808)) + 24|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3810 = HEAP32[$3809>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3811 = $3807 ^ $3810; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3812 = $3811 >>> 31; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3813 = $3796 | $3812; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3814 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3815 = ((($3814)) + 24|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3815>>2] = $3813; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3816 = (($3780) + ($3813))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3817 = (($3816) + -899497514)|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3818 = HEAP32[$8>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3819 = $3818 << 5; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3820 = HEAP32[$8>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3821 = $3820 >>> 27; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3822 = $3819 | $3821; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3823 = (($3817) + ($3822))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3824 = HEAP32[$12>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3825 = (($3824) + ($3823))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $3825; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3826 = HEAP32[$9>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3827 = $3826 << 30; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3828 = HEAP32[$9>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3829 = $3828 >>> 2; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3830 = $3827 | $3829; //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $3830; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3831 = HEAP32[$8>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3832 = HEAP32[$9>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3833 = $3831 ^ $3832; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3834 = HEAP32[$10>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3835 = $3833 ^ $3834; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3836 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3837 = ((($3836)) + 16|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3838 = HEAP32[$3837>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3839 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3840 = ((($3839)) + 60|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3841 = HEAP32[$3840>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3842 = $3838 ^ $3841; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3843 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3844 = ((($3843)) + 36|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3845 = HEAP32[$3844>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3846 = $3842 ^ $3845; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3847 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3848 = ((($3847)) + 28|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3849 = HEAP32[$3848>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3850 = $3846 ^ $3849; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3851 = $3850 << 1; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3852 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3853 = ((($3852)) + 16|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3854 = HEAP32[$3853>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3855 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3856 = ((($3855)) + 60|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3857 = HEAP32[$3856>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3858 = $3854 ^ $3857; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3859 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3860 = ((($3859)) + 36|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3861 = HEAP32[$3860>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3862 = $3858 ^ $3861; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3863 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3864 = ((($3863)) + 28|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3865 = HEAP32[$3864>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3866 = $3862 ^ $3865; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3867 = $3866 >>> 31; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3868 = $3851 | $3867; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3869 = $13; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3870 = ((($3869)) + 28|0); //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3870>>2] = $3868; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3871 = (($3835) + ($3868))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3872 = (($3871) + -899497514)|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3873 = HEAP32[$12>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3874 = $3873 << 5; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3875 = HEAP32[$12>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3876 = $3875 >>> 27; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3877 = $3874 | $3876; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3878 = (($3872) + ($3877))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3879 = HEAP32[$11>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3880 = (($3879) + ($3878))|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $3880; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3881 = HEAP32[$8>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3882 = $3881 << 30; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3883 = HEAP32[$8>>2]|0; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3884 = $3883 >>> 2; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3885 = $3882 | $3884; //@line 136 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $3885; //@line 136 "./src/cpp/unrar/sha1.cpp"
 $3886 = HEAP32[$12>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3887 = HEAP32[$8>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3888 = $3886 ^ $3887; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3889 = HEAP32[$9>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3890 = $3888 ^ $3889; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3891 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3892 = ((($3891)) + 20|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3893 = HEAP32[$3892>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3894 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3895 = HEAP32[$3894>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3896 = $3893 ^ $3895; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3897 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3898 = ((($3897)) + 40|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3899 = HEAP32[$3898>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3900 = $3896 ^ $3899; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3901 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3902 = ((($3901)) + 32|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3903 = HEAP32[$3902>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3904 = $3900 ^ $3903; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3905 = $3904 << 1; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3906 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3907 = ((($3906)) + 20|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3908 = HEAP32[$3907>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3909 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3910 = HEAP32[$3909>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3911 = $3908 ^ $3910; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3912 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3913 = ((($3912)) + 40|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3914 = HEAP32[$3913>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3915 = $3911 ^ $3914; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3916 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3917 = ((($3916)) + 32|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3918 = HEAP32[$3917>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3919 = $3915 ^ $3918; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3920 = $3919 >>> 31; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3921 = $3905 | $3920; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3922 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3923 = ((($3922)) + 32|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3923>>2] = $3921; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3924 = (($3890) + ($3921))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3925 = (($3924) + -899497514)|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3926 = HEAP32[$11>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3927 = $3926 << 5; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3928 = HEAP32[$11>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3929 = $3928 >>> 27; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3930 = $3927 | $3929; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3931 = (($3925) + ($3930))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3932 = HEAP32[$10>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3933 = (($3932) + ($3931))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $3933; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3934 = HEAP32[$12>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3935 = $3934 << 30; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3936 = HEAP32[$12>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3937 = $3936 >>> 2; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3938 = $3935 | $3937; //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $3938; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3939 = HEAP32[$11>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3940 = HEAP32[$12>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3941 = $3939 ^ $3940; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3942 = HEAP32[$8>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3943 = $3941 ^ $3942; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3944 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3945 = ((($3944)) + 24|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3946 = HEAP32[$3945>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3947 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3948 = ((($3947)) + 4|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3949 = HEAP32[$3948>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3950 = $3946 ^ $3949; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3951 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3952 = ((($3951)) + 44|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3953 = HEAP32[$3952>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3954 = $3950 ^ $3953; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3955 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3956 = ((($3955)) + 36|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3957 = HEAP32[$3956>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3958 = $3954 ^ $3957; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3959 = $3958 << 1; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3960 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3961 = ((($3960)) + 24|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3962 = HEAP32[$3961>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3963 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3964 = ((($3963)) + 4|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3965 = HEAP32[$3964>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3966 = $3962 ^ $3965; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3967 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3968 = ((($3967)) + 44|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3969 = HEAP32[$3968>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3970 = $3966 ^ $3969; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3971 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3972 = ((($3971)) + 36|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3973 = HEAP32[$3972>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3974 = $3970 ^ $3973; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3975 = $3974 >>> 31; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3976 = $3959 | $3975; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3977 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3978 = ((($3977)) + 36|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$3978>>2] = $3976; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3979 = (($3943) + ($3976))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3980 = (($3979) + -899497514)|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3981 = HEAP32[$10>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3982 = $3981 << 5; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3983 = HEAP32[$10>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3984 = $3983 >>> 27; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3985 = $3982 | $3984; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3986 = (($3980) + ($3985))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3987 = HEAP32[$9>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3988 = (($3987) + ($3986))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $3988; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3989 = HEAP32[$11>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3990 = $3989 << 30; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3991 = HEAP32[$11>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3992 = $3991 >>> 2; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3993 = $3990 | $3992; //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $3993; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3994 = HEAP32[$10>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3995 = HEAP32[$11>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3996 = $3994 ^ $3995; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3997 = HEAP32[$12>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3998 = $3996 ^ $3997; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $3999 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4000 = ((($3999)) + 28|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4001 = HEAP32[$4000>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4002 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4003 = ((($4002)) + 8|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4004 = HEAP32[$4003>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4005 = $4001 ^ $4004; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4006 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4007 = ((($4006)) + 48|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4008 = HEAP32[$4007>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4009 = $4005 ^ $4008; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4010 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4011 = ((($4010)) + 40|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4012 = HEAP32[$4011>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4013 = $4009 ^ $4012; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4014 = $4013 << 1; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4015 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4016 = ((($4015)) + 28|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4017 = HEAP32[$4016>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4018 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4019 = ((($4018)) + 8|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4020 = HEAP32[$4019>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4021 = $4017 ^ $4020; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4022 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4023 = ((($4022)) + 48|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4024 = HEAP32[$4023>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4025 = $4021 ^ $4024; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4026 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4027 = ((($4026)) + 40|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4028 = HEAP32[$4027>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4029 = $4025 ^ $4028; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4030 = $4029 >>> 31; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4031 = $4014 | $4030; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4032 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4033 = ((($4032)) + 40|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4033>>2] = $4031; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4034 = (($3998) + ($4031))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4035 = (($4034) + -899497514)|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4036 = HEAP32[$9>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4037 = $4036 << 5; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4038 = HEAP32[$9>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4039 = $4038 >>> 27; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4040 = $4037 | $4039; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4041 = (($4035) + ($4040))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4042 = HEAP32[$8>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4043 = (($4042) + ($4041))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $4043; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4044 = HEAP32[$10>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4045 = $4044 << 30; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4046 = HEAP32[$10>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4047 = $4046 >>> 2; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4048 = $4045 | $4047; //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $4048; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4049 = HEAP32[$9>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4050 = HEAP32[$10>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4051 = $4049 ^ $4050; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4052 = HEAP32[$11>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4053 = $4051 ^ $4052; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4054 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4055 = ((($4054)) + 32|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4056 = HEAP32[$4055>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4057 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4058 = ((($4057)) + 12|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4059 = HEAP32[$4058>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4060 = $4056 ^ $4059; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4061 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4062 = ((($4061)) + 52|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4063 = HEAP32[$4062>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4064 = $4060 ^ $4063; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4065 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4066 = ((($4065)) + 44|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4067 = HEAP32[$4066>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4068 = $4064 ^ $4067; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4069 = $4068 << 1; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4070 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4071 = ((($4070)) + 32|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4072 = HEAP32[$4071>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4073 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4074 = ((($4073)) + 12|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4075 = HEAP32[$4074>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4076 = $4072 ^ $4075; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4077 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4078 = ((($4077)) + 52|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4079 = HEAP32[$4078>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4080 = $4076 ^ $4079; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4081 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4082 = ((($4081)) + 44|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4083 = HEAP32[$4082>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4084 = $4080 ^ $4083; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4085 = $4084 >>> 31; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4086 = $4069 | $4085; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4087 = $13; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4088 = ((($4087)) + 44|0); //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4088>>2] = $4086; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4089 = (($4053) + ($4086))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4090 = (($4089) + -899497514)|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4091 = HEAP32[$8>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4092 = $4091 << 5; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4093 = HEAP32[$8>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4094 = $4093 >>> 27; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4095 = $4092 | $4094; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4096 = (($4090) + ($4095))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4097 = HEAP32[$12>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4098 = (($4097) + ($4096))|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $4098; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4099 = HEAP32[$9>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4100 = $4099 << 30; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4101 = HEAP32[$9>>2]|0; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4102 = $4101 >>> 2; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4103 = $4100 | $4102; //@line 137 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $4103; //@line 137 "./src/cpp/unrar/sha1.cpp"
 $4104 = HEAP32[$8>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4105 = HEAP32[$9>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4106 = $4104 ^ $4105; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4107 = HEAP32[$10>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4108 = $4106 ^ $4107; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4109 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4110 = ((($4109)) + 36|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4111 = HEAP32[$4110>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4112 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4113 = ((($4112)) + 16|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4114 = HEAP32[$4113>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4115 = $4111 ^ $4114; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4116 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4117 = ((($4116)) + 56|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4118 = HEAP32[$4117>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4119 = $4115 ^ $4118; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4120 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4121 = ((($4120)) + 48|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4122 = HEAP32[$4121>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4123 = $4119 ^ $4122; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4124 = $4123 << 1; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4125 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4126 = ((($4125)) + 36|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4127 = HEAP32[$4126>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4128 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4129 = ((($4128)) + 16|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4130 = HEAP32[$4129>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4131 = $4127 ^ $4130; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4132 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4133 = ((($4132)) + 56|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4134 = HEAP32[$4133>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4135 = $4131 ^ $4134; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4136 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4137 = ((($4136)) + 48|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4138 = HEAP32[$4137>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4139 = $4135 ^ $4138; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4140 = $4139 >>> 31; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4141 = $4124 | $4140; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4142 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4143 = ((($4142)) + 48|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4143>>2] = $4141; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4144 = (($4108) + ($4141))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4145 = (($4144) + -899497514)|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4146 = HEAP32[$12>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4147 = $4146 << 5; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4148 = HEAP32[$12>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4149 = $4148 >>> 27; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4150 = $4147 | $4149; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4151 = (($4145) + ($4150))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4152 = HEAP32[$11>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4153 = (($4152) + ($4151))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $4153; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4154 = HEAP32[$8>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4155 = $4154 << 30; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4156 = HEAP32[$8>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4157 = $4156 >>> 2; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4158 = $4155 | $4157; //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $4158; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4159 = HEAP32[$12>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4160 = HEAP32[$8>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4161 = $4159 ^ $4160; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4162 = HEAP32[$9>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4163 = $4161 ^ $4162; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4164 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4165 = ((($4164)) + 40|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4166 = HEAP32[$4165>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4167 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4168 = ((($4167)) + 20|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4169 = HEAP32[$4168>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4170 = $4166 ^ $4169; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4171 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4172 = ((($4171)) + 60|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4173 = HEAP32[$4172>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4174 = $4170 ^ $4173; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4175 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4176 = ((($4175)) + 52|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4177 = HEAP32[$4176>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4178 = $4174 ^ $4177; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4179 = $4178 << 1; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4180 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4181 = ((($4180)) + 40|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4182 = HEAP32[$4181>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4183 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4184 = ((($4183)) + 20|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4185 = HEAP32[$4184>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4186 = $4182 ^ $4185; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4187 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4188 = ((($4187)) + 60|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4189 = HEAP32[$4188>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4190 = $4186 ^ $4189; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4191 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4192 = ((($4191)) + 52|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4193 = HEAP32[$4192>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4194 = $4190 ^ $4193; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4195 = $4194 >>> 31; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4196 = $4179 | $4195; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4197 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4198 = ((($4197)) + 52|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4198>>2] = $4196; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4199 = (($4163) + ($4196))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4200 = (($4199) + -899497514)|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4201 = HEAP32[$11>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4202 = $4201 << 5; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4203 = HEAP32[$11>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4204 = $4203 >>> 27; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4205 = $4202 | $4204; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4206 = (($4200) + ($4205))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4207 = HEAP32[$10>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4208 = (($4207) + ($4206))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $4208; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4209 = HEAP32[$12>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4210 = $4209 << 30; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4211 = HEAP32[$12>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4212 = $4211 >>> 2; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4213 = $4210 | $4212; //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = $4213; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4214 = HEAP32[$11>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4215 = HEAP32[$12>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4216 = $4214 ^ $4215; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4217 = HEAP32[$8>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4218 = $4216 ^ $4217; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4219 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4220 = ((($4219)) + 44|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4221 = HEAP32[$4220>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4222 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4223 = ((($4222)) + 24|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4224 = HEAP32[$4223>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4225 = $4221 ^ $4224; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4226 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4227 = HEAP32[$4226>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4228 = $4225 ^ $4227; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4229 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4230 = ((($4229)) + 56|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4231 = HEAP32[$4230>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4232 = $4228 ^ $4231; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4233 = $4232 << 1; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4234 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4235 = ((($4234)) + 44|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4236 = HEAP32[$4235>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4237 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4238 = ((($4237)) + 24|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4239 = HEAP32[$4238>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4240 = $4236 ^ $4239; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4241 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4242 = HEAP32[$4241>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4243 = $4240 ^ $4242; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4244 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4245 = ((($4244)) + 56|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4246 = HEAP32[$4245>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4247 = $4243 ^ $4246; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4248 = $4247 >>> 31; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4249 = $4233 | $4248; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4250 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4251 = ((($4250)) + 56|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4251>>2] = $4249; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4252 = (($4218) + ($4249))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4253 = (($4252) + -899497514)|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4254 = HEAP32[$10>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4255 = $4254 << 5; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4256 = HEAP32[$10>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4257 = $4256 >>> 27; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4258 = $4255 | $4257; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4259 = (($4253) + ($4258))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4260 = HEAP32[$9>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4261 = (($4260) + ($4259))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$9>>2] = $4261; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4262 = HEAP32[$11>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4263 = $4262 << 30; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4264 = HEAP32[$11>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4265 = $4264 >>> 2; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4266 = $4263 | $4265; //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = $4266; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4267 = HEAP32[$10>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4268 = HEAP32[$11>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4269 = $4267 ^ $4268; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4270 = HEAP32[$12>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4271 = $4269 ^ $4270; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4272 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4273 = ((($4272)) + 48|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4274 = HEAP32[$4273>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4275 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4276 = ((($4275)) + 28|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4277 = HEAP32[$4276>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4278 = $4274 ^ $4277; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4279 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4280 = ((($4279)) + 4|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4281 = HEAP32[$4280>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4282 = $4278 ^ $4281; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4283 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4284 = ((($4283)) + 60|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4285 = HEAP32[$4284>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4286 = $4282 ^ $4285; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4287 = $4286 << 1; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4288 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4289 = ((($4288)) + 48|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4290 = HEAP32[$4289>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4291 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4292 = ((($4291)) + 28|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4293 = HEAP32[$4292>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4294 = $4290 ^ $4293; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4295 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4296 = ((($4295)) + 4|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4297 = HEAP32[$4296>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4298 = $4294 ^ $4297; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4299 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4300 = ((($4299)) + 60|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4301 = HEAP32[$4300>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4302 = $4298 ^ $4301; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4303 = $4302 >>> 31; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4304 = $4287 | $4303; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4305 = $13; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4306 = ((($4305)) + 60|0); //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4306>>2] = $4304; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4307 = (($4271) + ($4304))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4308 = (($4307) + -899497514)|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4309 = HEAP32[$9>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4310 = $4309 << 5; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4311 = HEAP32[$9>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4312 = $4311 >>> 27; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4313 = $4310 | $4312; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4314 = (($4308) + ($4313))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4315 = HEAP32[$8>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4316 = (($4315) + ($4314))|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = $4316; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4317 = HEAP32[$10>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4318 = $4317 << 30; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4319 = HEAP32[$10>>2]|0; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4320 = $4319 >>> 2; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4321 = $4318 | $4320; //@line 138 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = $4321; //@line 138 "./src/cpp/unrar/sha1.cpp"
 $4322 = HEAP32[$8>>2]|0; //@line 140 "./src/cpp/unrar/sha1.cpp"
 $4323 = $4; //@line 140 "./src/cpp/unrar/sha1.cpp"
 $4324 = HEAP32[$4323>>2]|0; //@line 140 "./src/cpp/unrar/sha1.cpp"
 $4325 = (($4324) + ($4322))|0; //@line 140 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4323>>2] = $4325; //@line 140 "./src/cpp/unrar/sha1.cpp"
 $4326 = HEAP32[$9>>2]|0; //@line 141 "./src/cpp/unrar/sha1.cpp"
 $4327 = $4; //@line 141 "./src/cpp/unrar/sha1.cpp"
 $4328 = ((($4327)) + 4|0); //@line 141 "./src/cpp/unrar/sha1.cpp"
 $4329 = HEAP32[$4328>>2]|0; //@line 141 "./src/cpp/unrar/sha1.cpp"
 $4330 = (($4329) + ($4326))|0; //@line 141 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4328>>2] = $4330; //@line 141 "./src/cpp/unrar/sha1.cpp"
 $4331 = HEAP32[$10>>2]|0; //@line 142 "./src/cpp/unrar/sha1.cpp"
 $4332 = $4; //@line 142 "./src/cpp/unrar/sha1.cpp"
 $4333 = ((($4332)) + 8|0); //@line 142 "./src/cpp/unrar/sha1.cpp"
 $4334 = HEAP32[$4333>>2]|0; //@line 142 "./src/cpp/unrar/sha1.cpp"
 $4335 = (($4334) + ($4331))|0; //@line 142 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4333>>2] = $4335; //@line 142 "./src/cpp/unrar/sha1.cpp"
 $4336 = HEAP32[$11>>2]|0; //@line 143 "./src/cpp/unrar/sha1.cpp"
 $4337 = $4; //@line 143 "./src/cpp/unrar/sha1.cpp"
 $4338 = ((($4337)) + 12|0); //@line 143 "./src/cpp/unrar/sha1.cpp"
 $4339 = HEAP32[$4338>>2]|0; //@line 143 "./src/cpp/unrar/sha1.cpp"
 $4340 = (($4339) + ($4336))|0; //@line 143 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4338>>2] = $4340; //@line 143 "./src/cpp/unrar/sha1.cpp"
 $4341 = HEAP32[$12>>2]|0; //@line 144 "./src/cpp/unrar/sha1.cpp"
 $4342 = $4; //@line 144 "./src/cpp/unrar/sha1.cpp"
 $4343 = ((($4342)) + 16|0); //@line 144 "./src/cpp/unrar/sha1.cpp"
 $4344 = HEAP32[$4343>>2]|0; //@line 144 "./src/cpp/unrar/sha1.cpp"
 $4345 = (($4344) + ($4341))|0; //@line 144 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4343>>2] = $4345; //@line 144 "./src/cpp/unrar/sha1.cpp"
 __ZL8wipevarsRjS_S_S_S_($8,$9,$10,$11,$12); //@line 151 "./src/cpp/unrar/sha1.cpp"
 STACKTOP = sp;return; //@line 153 "./src/cpp/unrar/sha1.cpp"
}
function __ZL8wipevarsRjS_S_S_S_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $9; //@line 54 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = 0; //@line 54 "./src/cpp/unrar/sha1.cpp"
 $11 = $8; //@line 54 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$11>>2] = 0; //@line 54 "./src/cpp/unrar/sha1.cpp"
 $12 = $7; //@line 54 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$12>>2] = 0; //@line 54 "./src/cpp/unrar/sha1.cpp"
 $13 = $6; //@line 54 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$13>>2] = 0; //@line 54 "./src/cpp/unrar/sha1.cpp"
 $14 = $5; //@line 54 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$14>>2] = 0; //@line 54 "./src/cpp/unrar/sha1.cpp"
 STACKTOP = sp;return; //@line 55 "./src/cpp/unrar/sha1.cpp"
}
function __Z9sha1_initP12sha1_context($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 161 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$2>>2] = 1732584193; //@line 161 "./src/cpp/unrar/sha1.cpp"
 $3 = $1; //@line 162 "./src/cpp/unrar/sha1.cpp"
 $4 = ((($3)) + 4|0); //@line 162 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$4>>2] = -271733879; //@line 162 "./src/cpp/unrar/sha1.cpp"
 $5 = $1; //@line 163 "./src/cpp/unrar/sha1.cpp"
 $6 = ((($5)) + 8|0); //@line 163 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$6>>2] = -1732584194; //@line 163 "./src/cpp/unrar/sha1.cpp"
 $7 = $1; //@line 164 "./src/cpp/unrar/sha1.cpp"
 $8 = ((($7)) + 12|0); //@line 164 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$8>>2] = 271733878; //@line 164 "./src/cpp/unrar/sha1.cpp"
 $9 = $1; //@line 165 "./src/cpp/unrar/sha1.cpp"
 $10 = ((($9)) + 16|0); //@line 165 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$10>>2] = -1009589776; //@line 165 "./src/cpp/unrar/sha1.cpp"
 $11 = $1; //@line 166 "./src/cpp/unrar/sha1.cpp"
 $12 = ((($11)) + 20|0); //@line 166 "./src/cpp/unrar/sha1.cpp"
 $13 = ((($12)) + 4|0); //@line 166 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$13>>2] = 0; //@line 166 "./src/cpp/unrar/sha1.cpp"
 $14 = $1; //@line 166 "./src/cpp/unrar/sha1.cpp"
 $15 = ((($14)) + 20|0); //@line 166 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$15>>2] = 0; //@line 166 "./src/cpp/unrar/sha1.cpp"
 STACKTOP = sp;return; //@line 167 "./src/cpp/unrar/sha1.cpp"
}
function __Z12sha1_processP12sha1_contextPKhjb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $11 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $12 = $3&1;
 $7 = $12;
 $13 = $6; //@line 175 "./src/cpp/unrar/sha1.cpp"
 $14 = $13 << 3; //@line 175 "./src/cpp/unrar/sha1.cpp"
 $10 = $14; //@line 175 "./src/cpp/unrar/sha1.cpp"
 $15 = $4; //@line 177 "./src/cpp/unrar/sha1.cpp"
 $16 = ((($15)) + 20|0); //@line 177 "./src/cpp/unrar/sha1.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 177 "./src/cpp/unrar/sha1.cpp"
 $18 = $17 >>> 3; //@line 177 "./src/cpp/unrar/sha1.cpp"
 $19 = $18 & 63; //@line 177 "./src/cpp/unrar/sha1.cpp"
 $9 = $19; //@line 177 "./src/cpp/unrar/sha1.cpp"
 $20 = $10; //@line 178 "./src/cpp/unrar/sha1.cpp"
 $21 = $4; //@line 178 "./src/cpp/unrar/sha1.cpp"
 $22 = ((($21)) + 20|0); //@line 178 "./src/cpp/unrar/sha1.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 178 "./src/cpp/unrar/sha1.cpp"
 $24 = (($23) + ($20))|0; //@line 178 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$22>>2] = $24; //@line 178 "./src/cpp/unrar/sha1.cpp"
 $25 = $10; //@line 178 "./src/cpp/unrar/sha1.cpp"
 $26 = ($24>>>0)<($25>>>0); //@line 178 "./src/cpp/unrar/sha1.cpp"
 if ($26) {
  $27 = $4; //@line 178 "./src/cpp/unrar/sha1.cpp"
  $28 = ((($27)) + 20|0); //@line 178 "./src/cpp/unrar/sha1.cpp"
  $29 = ((($28)) + 4|0); //@line 178 "./src/cpp/unrar/sha1.cpp"
  $30 = HEAP32[$29>>2]|0; //@line 178 "./src/cpp/unrar/sha1.cpp"
  $31 = (($30) + 1)|0; //@line 178 "./src/cpp/unrar/sha1.cpp"
  HEAP32[$29>>2] = $31; //@line 178 "./src/cpp/unrar/sha1.cpp"
 }
 $32 = $6; //@line 179 "./src/cpp/unrar/sha1.cpp"
 $33 = $32 >>> 29; //@line 179 "./src/cpp/unrar/sha1.cpp"
 $34 = $4; //@line 179 "./src/cpp/unrar/sha1.cpp"
 $35 = ((($34)) + 20|0); //@line 179 "./src/cpp/unrar/sha1.cpp"
 $36 = ((($35)) + 4|0); //@line 179 "./src/cpp/unrar/sha1.cpp"
 $37 = HEAP32[$36>>2]|0; //@line 179 "./src/cpp/unrar/sha1.cpp"
 $38 = (($37) + ($33))|0; //@line 179 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$36>>2] = $38; //@line 179 "./src/cpp/unrar/sha1.cpp"
 $39 = $9; //@line 180 "./src/cpp/unrar/sha1.cpp"
 $40 = $6; //@line 180 "./src/cpp/unrar/sha1.cpp"
 $41 = (($39) + ($40))|0; //@line 180 "./src/cpp/unrar/sha1.cpp"
 $42 = ($41>>>0)>(63); //@line 180 "./src/cpp/unrar/sha1.cpp"
 if ($42) {
  $43 = $4; //@line 181 "./src/cpp/unrar/sha1.cpp"
  $44 = ((($43)) + 28|0); //@line 181 "./src/cpp/unrar/sha1.cpp"
  $45 = $9; //@line 181 "./src/cpp/unrar/sha1.cpp"
  $46 = (($44) + ($45)|0); //@line 181 "./src/cpp/unrar/sha1.cpp"
  $47 = $5; //@line 181 "./src/cpp/unrar/sha1.cpp"
  $48 = $9; //@line 181 "./src/cpp/unrar/sha1.cpp"
  $49 = (64 - ($48))|0; //@line 181 "./src/cpp/unrar/sha1.cpp"
  $8 = $49; //@line 181 "./src/cpp/unrar/sha1.cpp"
  _memcpy(($46|0),($47|0),($49|0))|0; //@line 181 "./src/cpp/unrar/sha1.cpp"
  $50 = $4; //@line 182 "./src/cpp/unrar/sha1.cpp"
  $51 = $4; //@line 182 "./src/cpp/unrar/sha1.cpp"
  $52 = ((($51)) + 92|0); //@line 182 "./src/cpp/unrar/sha1.cpp"
  $53 = $4; //@line 182 "./src/cpp/unrar/sha1.cpp"
  $54 = ((($53)) + 28|0); //@line 182 "./src/cpp/unrar/sha1.cpp"
  $55 = $7; //@line 182 "./src/cpp/unrar/sha1.cpp"
  $56 = $55&1; //@line 182 "./src/cpp/unrar/sha1.cpp"
  __Z13SHA1TransformPjPhPKhb($50,$52,$54,$56); //@line 182 "./src/cpp/unrar/sha1.cpp"
  while(1) {
   $57 = $8; //@line 183 "./src/cpp/unrar/sha1.cpp"
   $58 = (($57) + 63)|0; //@line 183 "./src/cpp/unrar/sha1.cpp"
   $59 = $6; //@line 183 "./src/cpp/unrar/sha1.cpp"
   $60 = ($58>>>0)<($59>>>0); //@line 183 "./src/cpp/unrar/sha1.cpp"
   if (!($60)) {
    break;
   }
   $61 = $5; //@line 188 "./src/cpp/unrar/sha1.cpp"
   $62 = $8; //@line 188 "./src/cpp/unrar/sha1.cpp"
   $63 = (($61) + ($62)|0); //@line 188 "./src/cpp/unrar/sha1.cpp"
   dest=$11; src=$63; stop=dest+64|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 188 "./src/cpp/unrar/sha1.cpp"
   $64 = $4; //@line 189 "./src/cpp/unrar/sha1.cpp"
   $65 = $4; //@line 189 "./src/cpp/unrar/sha1.cpp"
   $66 = ((($65)) + 92|0); //@line 189 "./src/cpp/unrar/sha1.cpp"
   $67 = $7; //@line 189 "./src/cpp/unrar/sha1.cpp"
   $68 = $67&1; //@line 189 "./src/cpp/unrar/sha1.cpp"
   __Z13SHA1TransformPjPhPKhb($64,$66,$11,$68); //@line 189 "./src/cpp/unrar/sha1.cpp"
   $69 = $7; //@line 190 "./src/cpp/unrar/sha1.cpp"
   $70 = $69&1; //@line 190 "./src/cpp/unrar/sha1.cpp"
   if (!($70)) {
    $71 = $5; //@line 191 "./src/cpp/unrar/sha1.cpp"
    $72 = $8; //@line 191 "./src/cpp/unrar/sha1.cpp"
    $73 = (($71) + ($72)|0); //@line 191 "./src/cpp/unrar/sha1.cpp"
    dest=$73; src=$11; stop=dest+64|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 191 "./src/cpp/unrar/sha1.cpp"
   }
   $74 = $8; //@line 183 "./src/cpp/unrar/sha1.cpp"
   $75 = (($74) + 64)|0; //@line 183 "./src/cpp/unrar/sha1.cpp"
   $8 = $75; //@line 183 "./src/cpp/unrar/sha1.cpp"
  }
  $9 = 0; //@line 208 "./src/cpp/unrar/sha1.cpp"
 } else {
  $8 = 0; //@line 210 "./src/cpp/unrar/sha1.cpp"
 }
 $76 = $6; //@line 211 "./src/cpp/unrar/sha1.cpp"
 $77 = $8; //@line 211 "./src/cpp/unrar/sha1.cpp"
 $78 = ($76>>>0)>($77>>>0); //@line 211 "./src/cpp/unrar/sha1.cpp"
 if (!($78)) {
  STACKTOP = sp;return; //@line 213 "./src/cpp/unrar/sha1.cpp"
 }
 $79 = $4; //@line 212 "./src/cpp/unrar/sha1.cpp"
 $80 = ((($79)) + 28|0); //@line 212 "./src/cpp/unrar/sha1.cpp"
 $81 = $9; //@line 212 "./src/cpp/unrar/sha1.cpp"
 $82 = (($80) + ($81)|0); //@line 212 "./src/cpp/unrar/sha1.cpp"
 $83 = $5; //@line 212 "./src/cpp/unrar/sha1.cpp"
 $84 = $8; //@line 212 "./src/cpp/unrar/sha1.cpp"
 $85 = (($83) + ($84)|0); //@line 212 "./src/cpp/unrar/sha1.cpp"
 $86 = $6; //@line 212 "./src/cpp/unrar/sha1.cpp"
 $87 = $8; //@line 212 "./src/cpp/unrar/sha1.cpp"
 $88 = (($86) - ($87))|0; //@line 212 "./src/cpp/unrar/sha1.cpp"
 _memcpy(($82|0),($85|0),($88|0))|0; //@line 212 "./src/cpp/unrar/sha1.cpp"
 STACKTOP = sp;return; //@line 213 "./src/cpp/unrar/sha1.cpp"
}
function __Z9sha1_doneP12sha1_contextPjb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0;
 var $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = sp + 4|0;
 $7 = sp;
 $8 = sp + 24|0;
 $9 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $10 = $2&1;
 $5 = $10;
 HEAP32[$6>>2] = 0; //@line 223 "./src/cpp/unrar/sha1.cpp"
 while(1) {
  $11 = HEAP32[$6>>2]|0; //@line 223 "./src/cpp/unrar/sha1.cpp"
  $12 = ($11>>>0)<(8); //@line 223 "./src/cpp/unrar/sha1.cpp"
  if (!($12)) {
   break;
  }
  $13 = $3; //@line 224 "./src/cpp/unrar/sha1.cpp"
  $14 = ((($13)) + 20|0); //@line 224 "./src/cpp/unrar/sha1.cpp"
  $15 = HEAP32[$6>>2]|0; //@line 224 "./src/cpp/unrar/sha1.cpp"
  $16 = ($15>>>0)>=(4); //@line 224 "./src/cpp/unrar/sha1.cpp"
  $17 = $16 ? 0 : 1; //@line 224 "./src/cpp/unrar/sha1.cpp"
  $18 = (($14) + ($17<<2)|0); //@line 224 "./src/cpp/unrar/sha1.cpp"
  $19 = HEAP32[$18>>2]|0; //@line 224 "./src/cpp/unrar/sha1.cpp"
  $20 = HEAP32[$6>>2]|0; //@line 225 "./src/cpp/unrar/sha1.cpp"
  $21 = $20 & 3; //@line 225 "./src/cpp/unrar/sha1.cpp"
  $22 = (3 - ($21))|0; //@line 225 "./src/cpp/unrar/sha1.cpp"
  $23 = $22<<3; //@line 225 "./src/cpp/unrar/sha1.cpp"
  $24 = $19 >>> $23; //@line 225 "./src/cpp/unrar/sha1.cpp"
  $25 = $24 & 255; //@line 225 "./src/cpp/unrar/sha1.cpp"
  $26 = $25&255; //@line 224 "./src/cpp/unrar/sha1.cpp"
  $27 = HEAP32[$6>>2]|0; //@line 224 "./src/cpp/unrar/sha1.cpp"
  $28 = (($8) + ($27)|0); //@line 224 "./src/cpp/unrar/sha1.cpp"
  HEAP8[$28>>0] = $26; //@line 224 "./src/cpp/unrar/sha1.cpp"
  $29 = HEAP32[$6>>2]|0; //@line 223 "./src/cpp/unrar/sha1.cpp"
  $30 = (($29) + 1)|0; //@line 223 "./src/cpp/unrar/sha1.cpp"
  HEAP32[$6>>2] = $30; //@line 223 "./src/cpp/unrar/sha1.cpp"
 }
 HEAP8[$9>>0] = -128; //@line 227 "./src/cpp/unrar/sha1.cpp"
 $31 = $3; //@line 228 "./src/cpp/unrar/sha1.cpp"
 $32 = $5; //@line 228 "./src/cpp/unrar/sha1.cpp"
 $33 = $32&1; //@line 228 "./src/cpp/unrar/sha1.cpp"
 __Z12sha1_processP12sha1_contextPKhjb($31,$9,1,$33); //@line 228 "./src/cpp/unrar/sha1.cpp"
 while(1) {
  $34 = $3; //@line 229 "./src/cpp/unrar/sha1.cpp"
  $35 = ((($34)) + 20|0); //@line 229 "./src/cpp/unrar/sha1.cpp"
  $36 = HEAP32[$35>>2]|0; //@line 229 "./src/cpp/unrar/sha1.cpp"
  $37 = $36 & 504; //@line 229 "./src/cpp/unrar/sha1.cpp"
  $38 = ($37|0)!=(448); //@line 229 "./src/cpp/unrar/sha1.cpp"
  if (!($38)) {
   break;
  }
  HEAP8[$9>>0] = 0; //@line 230 "./src/cpp/unrar/sha1.cpp"
  $39 = $3; //@line 231 "./src/cpp/unrar/sha1.cpp"
  $40 = $5; //@line 231 "./src/cpp/unrar/sha1.cpp"
  $41 = $40&1; //@line 231 "./src/cpp/unrar/sha1.cpp"
  __Z12sha1_processP12sha1_contextPKhjb($39,$9,1,$41); //@line 231 "./src/cpp/unrar/sha1.cpp"
 }
 $42 = $3; //@line 233 "./src/cpp/unrar/sha1.cpp"
 $43 = $5; //@line 233 "./src/cpp/unrar/sha1.cpp"
 $44 = $43&1; //@line 233 "./src/cpp/unrar/sha1.cpp"
 __Z12sha1_processP12sha1_contextPKhjb($42,$8,8,$44); //@line 233 "./src/cpp/unrar/sha1.cpp"
 HEAP32[$6>>2] = 0; //@line 234 "./src/cpp/unrar/sha1.cpp"
 while(1) {
  $45 = HEAP32[$6>>2]|0; //@line 234 "./src/cpp/unrar/sha1.cpp"
  $46 = ($45>>>0)<(5); //@line 234 "./src/cpp/unrar/sha1.cpp"
  if (!($46)) {
   break;
  }
  $47 = $3; //@line 235 "./src/cpp/unrar/sha1.cpp"
  $48 = HEAP32[$6>>2]|0; //@line 235 "./src/cpp/unrar/sha1.cpp"
  $49 = (($47) + ($48<<2)|0); //@line 235 "./src/cpp/unrar/sha1.cpp"
  $50 = HEAP32[$49>>2]|0; //@line 235 "./src/cpp/unrar/sha1.cpp"
  $51 = $4; //@line 235 "./src/cpp/unrar/sha1.cpp"
  $52 = HEAP32[$6>>2]|0; //@line 235 "./src/cpp/unrar/sha1.cpp"
  $53 = (($51) + ($52<<2)|0); //@line 235 "./src/cpp/unrar/sha1.cpp"
  HEAP32[$53>>2] = $50; //@line 235 "./src/cpp/unrar/sha1.cpp"
  $54 = HEAP32[$6>>2]|0; //@line 234 "./src/cpp/unrar/sha1.cpp"
  $55 = (($54) + 1)|0; //@line 234 "./src/cpp/unrar/sha1.cpp"
  HEAP32[$6>>2] = $55; //@line 234 "./src/cpp/unrar/sha1.cpp"
 }
 __Z9cleandataPvj($6,4); //@line 238 "./src/cpp/unrar/sha1.cpp"
 __Z9cleandataPvj($7,4); //@line 239 "./src/cpp/unrar/sha1.cpp"
 $56 = $3; //@line 240 "./src/cpp/unrar/sha1.cpp"
 $57 = ((($56)) + 28|0); //@line 240 "./src/cpp/unrar/sha1.cpp"
 __Z9cleandataPvj($57,64); //@line 240 "./src/cpp/unrar/sha1.cpp"
 $58 = $3; //@line 241 "./src/cpp/unrar/sha1.cpp"
 __Z9cleandataPvj($58,20); //@line 241 "./src/cpp/unrar/sha1.cpp"
 $59 = $3; //@line 242 "./src/cpp/unrar/sha1.cpp"
 $60 = ((($59)) + 20|0); //@line 242 "./src/cpp/unrar/sha1.cpp"
 __Z9cleandataPvj($60,8); //@line 242 "./src/cpp/unrar/sha1.cpp"
 __Z9cleandataPvj($8,8); //@line 243 "./src/cpp/unrar/sha1.cpp"
 $61 = $5; //@line 244 "./src/cpp/unrar/sha1.cpp"
 $62 = $61&1; //@line 244 "./src/cpp/unrar/sha1.cpp"
 if (!($62)) {
  STACKTOP = sp;return; //@line 247 "./src/cpp/unrar/sha1.cpp"
 }
 $63 = $3; //@line 245 "./src/cpp/unrar/sha1.cpp"
 $64 = ((($63)) + 92|0); //@line 245 "./src/cpp/unrar/sha1.cpp"
 dest=$64; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 245 "./src/cpp/unrar/sha1.cpp"
 STACKTOP = sp;return; //@line 247 "./src/cpp/unrar/sha1.cpp"
}
function __Z11sha256_initP14sha256_context($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 40 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$2>>2] = 1779033703; //@line 40 "./src/cpp/unrar/sha256.cpp"
 $3 = $1; //@line 41 "./src/cpp/unrar/sha256.cpp"
 $4 = ((($3)) + 4|0); //@line 41 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$4>>2] = -1150833019; //@line 41 "./src/cpp/unrar/sha256.cpp"
 $5 = $1; //@line 42 "./src/cpp/unrar/sha256.cpp"
 $6 = ((($5)) + 8|0); //@line 42 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$6>>2] = 1013904242; //@line 42 "./src/cpp/unrar/sha256.cpp"
 $7 = $1; //@line 43 "./src/cpp/unrar/sha256.cpp"
 $8 = ((($7)) + 12|0); //@line 43 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$8>>2] = -1521486534; //@line 43 "./src/cpp/unrar/sha256.cpp"
 $9 = $1; //@line 44 "./src/cpp/unrar/sha256.cpp"
 $10 = ((($9)) + 16|0); //@line 44 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$10>>2] = 1359893119; //@line 44 "./src/cpp/unrar/sha256.cpp"
 $11 = $1; //@line 45 "./src/cpp/unrar/sha256.cpp"
 $12 = ((($11)) + 20|0); //@line 45 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$12>>2] = -1694144372; //@line 45 "./src/cpp/unrar/sha256.cpp"
 $13 = $1; //@line 46 "./src/cpp/unrar/sha256.cpp"
 $14 = ((($13)) + 24|0); //@line 46 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$14>>2] = 528734635; //@line 46 "./src/cpp/unrar/sha256.cpp"
 $15 = $1; //@line 47 "./src/cpp/unrar/sha256.cpp"
 $16 = ((($15)) + 28|0); //@line 47 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$16>>2] = 1541459225; //@line 47 "./src/cpp/unrar/sha256.cpp"
 $17 = $1; //@line 48 "./src/cpp/unrar/sha256.cpp"
 $18 = ((($17)) + 32|0); //@line 48 "./src/cpp/unrar/sha256.cpp"
 $19 = $18; //@line 48 "./src/cpp/unrar/sha256.cpp"
 $20 = $19; //@line 48 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$20>>2] = 0; //@line 48 "./src/cpp/unrar/sha256.cpp"
 $21 = (($19) + 4)|0; //@line 48 "./src/cpp/unrar/sha256.cpp"
 $22 = $21; //@line 48 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$22>>2] = 0; //@line 48 "./src/cpp/unrar/sha256.cpp"
 STACKTOP = sp;return; //@line 49 "./src/cpp/unrar/sha256.cpp"
}
function __Z14sha256_processP14sha256_contextPKvj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $10 = $4; //@line 122 "./src/cpp/unrar/sha256.cpp"
 $6 = $10; //@line 122 "./src/cpp/unrar/sha256.cpp"
 $11 = $3; //@line 123 "./src/cpp/unrar/sha256.cpp"
 $12 = ((($11)) + 32|0); //@line 123 "./src/cpp/unrar/sha256.cpp"
 $13 = $12; //@line 123 "./src/cpp/unrar/sha256.cpp"
 $14 = $13; //@line 123 "./src/cpp/unrar/sha256.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 123 "./src/cpp/unrar/sha256.cpp"
 $16 = (($13) + 4)|0; //@line 123 "./src/cpp/unrar/sha256.cpp"
 $17 = $16; //@line 123 "./src/cpp/unrar/sha256.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 123 "./src/cpp/unrar/sha256.cpp"
 $19 = $15 & 63; //@line 123 "./src/cpp/unrar/sha256.cpp"
 $7 = $19; //@line 123 "./src/cpp/unrar/sha256.cpp"
 $20 = $5; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $21 = $3; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $22 = ((($21)) + 32|0); //@line 124 "./src/cpp/unrar/sha256.cpp"
 $23 = $22; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $24 = $23; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $25 = HEAP32[$24>>2]|0; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $26 = (($23) + 4)|0; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $27 = $26; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $28 = HEAP32[$27>>2]|0; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $29 = (_i64Add(($25|0),($28|0),($20|0),0)|0); //@line 124 "./src/cpp/unrar/sha256.cpp"
 $30 = tempRet0; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $31 = $22; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $32 = $31; //@line 124 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$32>>2] = $29; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $33 = (($31) + 4)|0; //@line 124 "./src/cpp/unrar/sha256.cpp"
 $34 = $33; //@line 124 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$34>>2] = $30; //@line 124 "./src/cpp/unrar/sha256.cpp"
 while(1) {
  $35 = $5; //@line 125 "./src/cpp/unrar/sha256.cpp"
  $36 = ($35>>>0)>(0); //@line 125 "./src/cpp/unrar/sha256.cpp"
  if (!($36)) {
   break;
  }
  $37 = $7; //@line 127 "./src/cpp/unrar/sha256.cpp"
  $38 = (64 - ($37))|0; //@line 127 "./src/cpp/unrar/sha256.cpp"
  $8 = $38; //@line 127 "./src/cpp/unrar/sha256.cpp"
  $39 = $5; //@line 128 "./src/cpp/unrar/sha256.cpp"
  $40 = $8; //@line 128 "./src/cpp/unrar/sha256.cpp"
  $41 = ($39>>>0)>($40>>>0); //@line 128 "./src/cpp/unrar/sha256.cpp"
  $42 = $8; //@line 128 "./src/cpp/unrar/sha256.cpp"
  $43 = $5; //@line 128 "./src/cpp/unrar/sha256.cpp"
  $44 = $41 ? $42 : $43; //@line 128 "./src/cpp/unrar/sha256.cpp"
  $9 = $44; //@line 128 "./src/cpp/unrar/sha256.cpp"
  $45 = $9; //@line 130 "./src/cpp/unrar/sha256.cpp"
  $46 = ($45|0)==(64); //@line 130 "./src/cpp/unrar/sha256.cpp"
  if ($46) {
   $47 = $6; //@line 131 "./src/cpp/unrar/sha256.cpp"
   $48 = $3; //@line 131 "./src/cpp/unrar/sha256.cpp"
   $49 = ((($48)) + 40|0); //@line 131 "./src/cpp/unrar/sha256.cpp"
   HEAP32[$49>>2] = $47; //@line 131 "./src/cpp/unrar/sha256.cpp"
  } else {
   $50 = $3; //@line 134 "./src/cpp/unrar/sha256.cpp"
   $51 = ((($50)) + 44|0); //@line 134 "./src/cpp/unrar/sha256.cpp"
   $52 = $3; //@line 134 "./src/cpp/unrar/sha256.cpp"
   $53 = ((($52)) + 40|0); //@line 134 "./src/cpp/unrar/sha256.cpp"
   HEAP32[$53>>2] = $51; //@line 134 "./src/cpp/unrar/sha256.cpp"
   $54 = $3; //@line 135 "./src/cpp/unrar/sha256.cpp"
   $55 = ((($54)) + 44|0); //@line 135 "./src/cpp/unrar/sha256.cpp"
   $56 = $7; //@line 135 "./src/cpp/unrar/sha256.cpp"
   $57 = (($55) + ($56)|0); //@line 135 "./src/cpp/unrar/sha256.cpp"
   $58 = $6; //@line 135 "./src/cpp/unrar/sha256.cpp"
   $59 = $9; //@line 135 "./src/cpp/unrar/sha256.cpp"
   _memcpy(($57|0),($58|0),($59|0))|0; //@line 135 "./src/cpp/unrar/sha256.cpp"
  }
  $60 = $9; //@line 137 "./src/cpp/unrar/sha256.cpp"
  $61 = $6; //@line 137 "./src/cpp/unrar/sha256.cpp"
  $62 = (($61) + ($60)|0); //@line 137 "./src/cpp/unrar/sha256.cpp"
  $6 = $62; //@line 137 "./src/cpp/unrar/sha256.cpp"
  $63 = $9; //@line 138 "./src/cpp/unrar/sha256.cpp"
  $64 = $7; //@line 138 "./src/cpp/unrar/sha256.cpp"
  $65 = (($64) + ($63))|0; //@line 138 "./src/cpp/unrar/sha256.cpp"
  $7 = $65; //@line 138 "./src/cpp/unrar/sha256.cpp"
  $66 = $9; //@line 139 "./src/cpp/unrar/sha256.cpp"
  $67 = $5; //@line 139 "./src/cpp/unrar/sha256.cpp"
  $68 = (($67) - ($66))|0; //@line 139 "./src/cpp/unrar/sha256.cpp"
  $5 = $68; //@line 139 "./src/cpp/unrar/sha256.cpp"
  $69 = $7; //@line 140 "./src/cpp/unrar/sha256.cpp"
  $70 = ($69|0)==(64); //@line 140 "./src/cpp/unrar/sha256.cpp"
  if (!($70)) {
   continue;
  }
  $7 = 0; //@line 142 "./src/cpp/unrar/sha256.cpp"
  $71 = $3; //@line 143 "./src/cpp/unrar/sha256.cpp"
  __ZL16sha256_transformP14sha256_context($71); //@line 143 "./src/cpp/unrar/sha256.cpp"
 }
 __ZL16sha256_transformP14sha256_context(0); //@line 146 "./src/cpp/unrar/sha256.cpp"
 STACKTOP = sp;return; //@line 147 "./src/cpp/unrar/sha256.cpp"
}
function __ZL16sha256_transformP14sha256_context($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $2 = sp + 56|0;
 $3 = sp + 24|0;
 $1 = $0;
 $9 = $1; //@line 69 "./src/cpp/unrar/sha256.cpp"
 $10 = ($9|0)==(0|0); //@line 69 "./src/cpp/unrar/sha256.cpp"
 if ($10) {
  __Z9cleandataPvj($3,32); //@line 71 "./src/cpp/unrar/sha256.cpp"
  __Z9cleandataPvj($2,256); //@line 72 "./src/cpp/unrar/sha256.cpp"
  STACKTOP = sp;return; //@line 117 "./src/cpp/unrar/sha256.cpp"
 }
 $11 = $1; //@line 77 "./src/cpp/unrar/sha256.cpp"
 $12 = ((($11)) + 40|0); //@line 77 "./src/cpp/unrar/sha256.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 77 "./src/cpp/unrar/sha256.cpp"
 $14 = (__Z3b2iPKh($13)|0); //@line 77 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$2>>2] = $14; //@line 77 "./src/cpp/unrar/sha256.cpp"
 $15 = $1; //@line 77 "./src/cpp/unrar/sha256.cpp"
 $16 = ((($15)) + 40|0); //@line 77 "./src/cpp/unrar/sha256.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 77 "./src/cpp/unrar/sha256.cpp"
 $18 = ((($17)) + 4|0); //@line 77 "./src/cpp/unrar/sha256.cpp"
 $19 = (__Z3b2iPKh($18)|0); //@line 77 "./src/cpp/unrar/sha256.cpp"
 $20 = ((($2)) + 4|0); //@line 77 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$20>>2] = $19; //@line 77 "./src/cpp/unrar/sha256.cpp"
 $21 = $1; //@line 78 "./src/cpp/unrar/sha256.cpp"
 $22 = ((($21)) + 40|0); //@line 78 "./src/cpp/unrar/sha256.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 78 "./src/cpp/unrar/sha256.cpp"
 $24 = ((($23)) + 8|0); //@line 78 "./src/cpp/unrar/sha256.cpp"
 $25 = (__Z3b2iPKh($24)|0); //@line 78 "./src/cpp/unrar/sha256.cpp"
 $26 = ((($2)) + 8|0); //@line 78 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$26>>2] = $25; //@line 78 "./src/cpp/unrar/sha256.cpp"
 $27 = $1; //@line 78 "./src/cpp/unrar/sha256.cpp"
 $28 = ((($27)) + 40|0); //@line 78 "./src/cpp/unrar/sha256.cpp"
 $29 = HEAP32[$28>>2]|0; //@line 78 "./src/cpp/unrar/sha256.cpp"
 $30 = ((($29)) + 12|0); //@line 78 "./src/cpp/unrar/sha256.cpp"
 $31 = (__Z3b2iPKh($30)|0); //@line 78 "./src/cpp/unrar/sha256.cpp"
 $32 = ((($2)) + 12|0); //@line 78 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$32>>2] = $31; //@line 78 "./src/cpp/unrar/sha256.cpp"
 $33 = $1; //@line 79 "./src/cpp/unrar/sha256.cpp"
 $34 = ((($33)) + 40|0); //@line 79 "./src/cpp/unrar/sha256.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 79 "./src/cpp/unrar/sha256.cpp"
 $36 = ((($35)) + 16|0); //@line 79 "./src/cpp/unrar/sha256.cpp"
 $37 = (__Z3b2iPKh($36)|0); //@line 79 "./src/cpp/unrar/sha256.cpp"
 $38 = ((($2)) + 16|0); //@line 79 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$38>>2] = $37; //@line 79 "./src/cpp/unrar/sha256.cpp"
 $39 = $1; //@line 79 "./src/cpp/unrar/sha256.cpp"
 $40 = ((($39)) + 40|0); //@line 79 "./src/cpp/unrar/sha256.cpp"
 $41 = HEAP32[$40>>2]|0; //@line 79 "./src/cpp/unrar/sha256.cpp"
 $42 = ((($41)) + 20|0); //@line 79 "./src/cpp/unrar/sha256.cpp"
 $43 = (__Z3b2iPKh($42)|0); //@line 79 "./src/cpp/unrar/sha256.cpp"
 $44 = ((($2)) + 20|0); //@line 79 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$44>>2] = $43; //@line 79 "./src/cpp/unrar/sha256.cpp"
 $45 = $1; //@line 80 "./src/cpp/unrar/sha256.cpp"
 $46 = ((($45)) + 40|0); //@line 80 "./src/cpp/unrar/sha256.cpp"
 $47 = HEAP32[$46>>2]|0; //@line 80 "./src/cpp/unrar/sha256.cpp"
 $48 = ((($47)) + 24|0); //@line 80 "./src/cpp/unrar/sha256.cpp"
 $49 = (__Z3b2iPKh($48)|0); //@line 80 "./src/cpp/unrar/sha256.cpp"
 $50 = ((($2)) + 24|0); //@line 80 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$50>>2] = $49; //@line 80 "./src/cpp/unrar/sha256.cpp"
 $51 = $1; //@line 80 "./src/cpp/unrar/sha256.cpp"
 $52 = ((($51)) + 40|0); //@line 80 "./src/cpp/unrar/sha256.cpp"
 $53 = HEAP32[$52>>2]|0; //@line 80 "./src/cpp/unrar/sha256.cpp"
 $54 = ((($53)) + 28|0); //@line 80 "./src/cpp/unrar/sha256.cpp"
 $55 = (__Z3b2iPKh($54)|0); //@line 80 "./src/cpp/unrar/sha256.cpp"
 $56 = ((($2)) + 28|0); //@line 80 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$56>>2] = $55; //@line 80 "./src/cpp/unrar/sha256.cpp"
 $57 = $1; //@line 81 "./src/cpp/unrar/sha256.cpp"
 $58 = ((($57)) + 40|0); //@line 81 "./src/cpp/unrar/sha256.cpp"
 $59 = HEAP32[$58>>2]|0; //@line 81 "./src/cpp/unrar/sha256.cpp"
 $60 = ((($59)) + 32|0); //@line 81 "./src/cpp/unrar/sha256.cpp"
 $61 = (__Z3b2iPKh($60)|0); //@line 81 "./src/cpp/unrar/sha256.cpp"
 $62 = ((($2)) + 32|0); //@line 81 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$62>>2] = $61; //@line 81 "./src/cpp/unrar/sha256.cpp"
 $63 = $1; //@line 81 "./src/cpp/unrar/sha256.cpp"
 $64 = ((($63)) + 40|0); //@line 81 "./src/cpp/unrar/sha256.cpp"
 $65 = HEAP32[$64>>2]|0; //@line 81 "./src/cpp/unrar/sha256.cpp"
 $66 = ((($65)) + 36|0); //@line 81 "./src/cpp/unrar/sha256.cpp"
 $67 = (__Z3b2iPKh($66)|0); //@line 81 "./src/cpp/unrar/sha256.cpp"
 $68 = ((($2)) + 36|0); //@line 81 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$68>>2] = $67; //@line 81 "./src/cpp/unrar/sha256.cpp"
 $69 = $1; //@line 82 "./src/cpp/unrar/sha256.cpp"
 $70 = ((($69)) + 40|0); //@line 82 "./src/cpp/unrar/sha256.cpp"
 $71 = HEAP32[$70>>2]|0; //@line 82 "./src/cpp/unrar/sha256.cpp"
 $72 = ((($71)) + 40|0); //@line 82 "./src/cpp/unrar/sha256.cpp"
 $73 = (__Z3b2iPKh($72)|0); //@line 82 "./src/cpp/unrar/sha256.cpp"
 $74 = ((($2)) + 40|0); //@line 82 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$74>>2] = $73; //@line 82 "./src/cpp/unrar/sha256.cpp"
 $75 = $1; //@line 82 "./src/cpp/unrar/sha256.cpp"
 $76 = ((($75)) + 40|0); //@line 82 "./src/cpp/unrar/sha256.cpp"
 $77 = HEAP32[$76>>2]|0; //@line 82 "./src/cpp/unrar/sha256.cpp"
 $78 = ((($77)) + 44|0); //@line 82 "./src/cpp/unrar/sha256.cpp"
 $79 = (__Z3b2iPKh($78)|0); //@line 82 "./src/cpp/unrar/sha256.cpp"
 $80 = ((($2)) + 44|0); //@line 82 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$80>>2] = $79; //@line 82 "./src/cpp/unrar/sha256.cpp"
 $81 = $1; //@line 83 "./src/cpp/unrar/sha256.cpp"
 $82 = ((($81)) + 40|0); //@line 83 "./src/cpp/unrar/sha256.cpp"
 $83 = HEAP32[$82>>2]|0; //@line 83 "./src/cpp/unrar/sha256.cpp"
 $84 = ((($83)) + 48|0); //@line 83 "./src/cpp/unrar/sha256.cpp"
 $85 = (__Z3b2iPKh($84)|0); //@line 83 "./src/cpp/unrar/sha256.cpp"
 $86 = ((($2)) + 48|0); //@line 83 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$86>>2] = $85; //@line 83 "./src/cpp/unrar/sha256.cpp"
 $87 = $1; //@line 83 "./src/cpp/unrar/sha256.cpp"
 $88 = ((($87)) + 40|0); //@line 83 "./src/cpp/unrar/sha256.cpp"
 $89 = HEAP32[$88>>2]|0; //@line 83 "./src/cpp/unrar/sha256.cpp"
 $90 = ((($89)) + 52|0); //@line 83 "./src/cpp/unrar/sha256.cpp"
 $91 = (__Z3b2iPKh($90)|0); //@line 83 "./src/cpp/unrar/sha256.cpp"
 $92 = ((($2)) + 52|0); //@line 83 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$92>>2] = $91; //@line 83 "./src/cpp/unrar/sha256.cpp"
 $93 = $1; //@line 84 "./src/cpp/unrar/sha256.cpp"
 $94 = ((($93)) + 40|0); //@line 84 "./src/cpp/unrar/sha256.cpp"
 $95 = HEAP32[$94>>2]|0; //@line 84 "./src/cpp/unrar/sha256.cpp"
 $96 = ((($95)) + 56|0); //@line 84 "./src/cpp/unrar/sha256.cpp"
 $97 = (__Z3b2iPKh($96)|0); //@line 84 "./src/cpp/unrar/sha256.cpp"
 $98 = ((($2)) + 56|0); //@line 84 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$98>>2] = $97; //@line 84 "./src/cpp/unrar/sha256.cpp"
 $99 = $1; //@line 84 "./src/cpp/unrar/sha256.cpp"
 $100 = ((($99)) + 40|0); //@line 84 "./src/cpp/unrar/sha256.cpp"
 $101 = HEAP32[$100>>2]|0; //@line 84 "./src/cpp/unrar/sha256.cpp"
 $102 = ((($101)) + 60|0); //@line 84 "./src/cpp/unrar/sha256.cpp"
 $103 = (__Z3b2iPKh($102)|0); //@line 84 "./src/cpp/unrar/sha256.cpp"
 $104 = ((($2)) + 60|0); //@line 84 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$104>>2] = $103; //@line 84 "./src/cpp/unrar/sha256.cpp"
 $4 = 16; //@line 86 "./src/cpp/unrar/sha256.cpp"
 while(1) {
  $105 = $4; //@line 86 "./src/cpp/unrar/sha256.cpp"
  $106 = ($105>>>0)<(64); //@line 86 "./src/cpp/unrar/sha256.cpp"
  if (!($106)) {
   break;
  }
  $107 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $108 = (($107) - 2)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $109 = (($2) + ($108<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $110 = HEAP32[$109>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $111 = $110 >>> 17; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $112 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $113 = (($112) - 2)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $114 = (($2) + ($113<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $115 = HEAP32[$114>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $116 = $115 << 15; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $117 = $111 | $116; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $118 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $119 = (($118) - 2)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $120 = (($2) + ($119<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $121 = HEAP32[$120>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $122 = $121 >>> 19; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $123 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $124 = (($123) - 2)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $125 = (($2) + ($124<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $126 = HEAP32[$125>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $127 = $126 << 13; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $128 = $122 | $127; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $129 = $117 ^ $128; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $130 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $131 = (($130) - 2)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $132 = (($2) + ($131<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $133 = HEAP32[$132>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $134 = $133 >>> 10; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $135 = $129 ^ $134; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $136 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $137 = (($136) - 7)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $138 = (($2) + ($137<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $139 = HEAP32[$138>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $140 = (($135) + ($139))|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $141 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $142 = (($141) - 15)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $143 = (($2) + ($142<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $144 = HEAP32[$143>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $145 = $144 >>> 7; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $146 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $147 = (($146) - 15)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $148 = (($2) + ($147<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $149 = HEAP32[$148>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $150 = $149 << 25; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $151 = $145 | $150; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $152 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $153 = (($152) - 15)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $154 = (($2) + ($153<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $155 = HEAP32[$154>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $156 = $155 >>> 18; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $157 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $158 = (($157) - 15)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $159 = (($2) + ($158<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $160 = HEAP32[$159>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $161 = $160 << 14; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $162 = $156 | $161; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $163 = $151 ^ $162; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $164 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $165 = (($164) - 15)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $166 = (($2) + ($165<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $167 = HEAP32[$166>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $168 = $167 >>> 3; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $169 = $163 ^ $168; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $170 = (($140) + ($169))|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $171 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $172 = (($171) - 16)|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $173 = (($2) + ($172<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  $174 = HEAP32[$173>>2]|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $175 = (($170) + ($174))|0; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $176 = $4; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $177 = (($2) + ($176<<2)|0); //@line 87 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$177>>2] = $175; //@line 87 "./src/cpp/unrar/sha256.cpp"
  $178 = $4; //@line 86 "./src/cpp/unrar/sha256.cpp"
  $179 = (($178) + 1)|0; //@line 86 "./src/cpp/unrar/sha256.cpp"
  $4 = $179; //@line 86 "./src/cpp/unrar/sha256.cpp"
 }
 $180 = $1; //@line 89 "./src/cpp/unrar/sha256.cpp"
 $5 = $180; //@line 89 "./src/cpp/unrar/sha256.cpp"
 $181 = $5; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $182 = HEAP32[$181>>2]|0; //@line 90 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$3>>2] = $182; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $183 = $5; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $184 = ((($183)) + 4|0); //@line 90 "./src/cpp/unrar/sha256.cpp"
 $185 = HEAP32[$184>>2]|0; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $186 = ((($3)) + 4|0); //@line 90 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$186>>2] = $185; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $187 = $5; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $188 = ((($187)) + 8|0); //@line 90 "./src/cpp/unrar/sha256.cpp"
 $189 = HEAP32[$188>>2]|0; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $190 = ((($3)) + 8|0); //@line 90 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$190>>2] = $189; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $191 = $5; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $192 = ((($191)) + 12|0); //@line 90 "./src/cpp/unrar/sha256.cpp"
 $193 = HEAP32[$192>>2]|0; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $194 = ((($3)) + 12|0); //@line 90 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$194>>2] = $193; //@line 90 "./src/cpp/unrar/sha256.cpp"
 $195 = $5; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $196 = ((($195)) + 16|0); //@line 91 "./src/cpp/unrar/sha256.cpp"
 $197 = HEAP32[$196>>2]|0; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $198 = ((($3)) + 16|0); //@line 91 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$198>>2] = $197; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $199 = $5; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $200 = ((($199)) + 20|0); //@line 91 "./src/cpp/unrar/sha256.cpp"
 $201 = HEAP32[$200>>2]|0; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $202 = ((($3)) + 20|0); //@line 91 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$202>>2] = $201; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $203 = $5; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $204 = ((($203)) + 24|0); //@line 91 "./src/cpp/unrar/sha256.cpp"
 $205 = HEAP32[$204>>2]|0; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $206 = ((($3)) + 24|0); //@line 91 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$206>>2] = $205; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $207 = $5; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $208 = ((($207)) + 28|0); //@line 91 "./src/cpp/unrar/sha256.cpp"
 $209 = HEAP32[$208>>2]|0; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $210 = ((($3)) + 28|0); //@line 91 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$210>>2] = $209; //@line 91 "./src/cpp/unrar/sha256.cpp"
 $6 = 0; //@line 94 "./src/cpp/unrar/sha256.cpp"
 while(1) {
  $211 = $6; //@line 94 "./src/cpp/unrar/sha256.cpp"
  $212 = ($211>>>0)<(64); //@line 94 "./src/cpp/unrar/sha256.cpp"
  if (!($212)) {
   break;
  }
  $213 = ((($3)) + 28|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $214 = HEAP32[$213>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $215 = ((($3)) + 16|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $216 = HEAP32[$215>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $217 = $216 >>> 6; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $218 = ((($3)) + 16|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $219 = HEAP32[$218>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $220 = $219 << 26; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $221 = $217 | $220; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $222 = ((($3)) + 16|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $223 = HEAP32[$222>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $224 = $223 >>> 11; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $225 = ((($3)) + 16|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $226 = HEAP32[$225>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $227 = $226 << 21; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $228 = $224 | $227; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $229 = $221 ^ $228; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $230 = ((($3)) + 16|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $231 = HEAP32[$230>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $232 = $231 >>> 25; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $233 = ((($3)) + 16|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $234 = HEAP32[$233>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $235 = $234 << 7; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $236 = $232 | $235; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $237 = $229 ^ $236; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $238 = (($214) + ($237))|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $239 = ((($3)) + 16|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $240 = HEAP32[$239>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $241 = ((($3)) + 20|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $242 = HEAP32[$241>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $243 = $240 & $242; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $244 = ((($3)) + 16|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $245 = HEAP32[$244>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $246 = $245 ^ -1; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $247 = ((($3)) + 24|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $248 = HEAP32[$247>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $249 = $246 & $248; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $250 = $243 ^ $249; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $251 = (($238) + ($250))|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $252 = $6; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $253 = (964 + ($252<<2)|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $254 = HEAP32[$253>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $255 = (($251) + ($254))|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $256 = $6; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $257 = (($2) + ($256<<2)|0); //@line 96 "./src/cpp/unrar/sha256.cpp"
  $258 = HEAP32[$257>>2]|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $259 = (($255) + ($258))|0; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $7 = $259; //@line 96 "./src/cpp/unrar/sha256.cpp"
  $260 = ((($3)) + 24|0); //@line 101 "./src/cpp/unrar/sha256.cpp"
  $261 = HEAP32[$260>>2]|0; //@line 101 "./src/cpp/unrar/sha256.cpp"
  $262 = ((($3)) + 28|0); //@line 101 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$262>>2] = $261; //@line 101 "./src/cpp/unrar/sha256.cpp"
  $263 = ((($3)) + 20|0); //@line 102 "./src/cpp/unrar/sha256.cpp"
  $264 = HEAP32[$263>>2]|0; //@line 102 "./src/cpp/unrar/sha256.cpp"
  $265 = ((($3)) + 24|0); //@line 102 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$265>>2] = $264; //@line 102 "./src/cpp/unrar/sha256.cpp"
  $266 = ((($3)) + 16|0); //@line 103 "./src/cpp/unrar/sha256.cpp"
  $267 = HEAP32[$266>>2]|0; //@line 103 "./src/cpp/unrar/sha256.cpp"
  $268 = ((($3)) + 20|0); //@line 103 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$268>>2] = $267; //@line 103 "./src/cpp/unrar/sha256.cpp"
  $269 = ((($3)) + 12|0); //@line 104 "./src/cpp/unrar/sha256.cpp"
  $270 = HEAP32[$269>>2]|0; //@line 104 "./src/cpp/unrar/sha256.cpp"
  $271 = $7; //@line 104 "./src/cpp/unrar/sha256.cpp"
  $272 = (($270) + ($271))|0; //@line 104 "./src/cpp/unrar/sha256.cpp"
  $273 = ((($3)) + 16|0); //@line 104 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$273>>2] = $272; //@line 104 "./src/cpp/unrar/sha256.cpp"
  $274 = HEAP32[$3>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $275 = $274 >>> 2; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $276 = HEAP32[$3>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $277 = $276 << 30; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $278 = $275 | $277; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $279 = HEAP32[$3>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $280 = $279 >>> 13; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $281 = HEAP32[$3>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $282 = $281 << 19; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $283 = $280 | $282; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $284 = $278 ^ $283; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $285 = HEAP32[$3>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $286 = $285 >>> 22; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $287 = HEAP32[$3>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $288 = $287 << 10; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $289 = $286 | $288; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $290 = $284 ^ $289; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $291 = HEAP32[$3>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $292 = ((($3)) + 4|0); //@line 107 "./src/cpp/unrar/sha256.cpp"
  $293 = HEAP32[$292>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $294 = $291 & $293; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $295 = HEAP32[$3>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $296 = ((($3)) + 8|0); //@line 107 "./src/cpp/unrar/sha256.cpp"
  $297 = HEAP32[$296>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $298 = $295 & $297; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $299 = $294 ^ $298; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $300 = ((($3)) + 4|0); //@line 107 "./src/cpp/unrar/sha256.cpp"
  $301 = HEAP32[$300>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $302 = ((($3)) + 8|0); //@line 107 "./src/cpp/unrar/sha256.cpp"
  $303 = HEAP32[$302>>2]|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $304 = $301 & $303; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $305 = $299 ^ $304; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $306 = (($290) + ($305))|0; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $8 = $306; //@line 107 "./src/cpp/unrar/sha256.cpp"
  $307 = ((($3)) + 8|0); //@line 109 "./src/cpp/unrar/sha256.cpp"
  $308 = HEAP32[$307>>2]|0; //@line 109 "./src/cpp/unrar/sha256.cpp"
  $309 = ((($3)) + 12|0); //@line 109 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$309>>2] = $308; //@line 109 "./src/cpp/unrar/sha256.cpp"
  $310 = ((($3)) + 4|0); //@line 110 "./src/cpp/unrar/sha256.cpp"
  $311 = HEAP32[$310>>2]|0; //@line 110 "./src/cpp/unrar/sha256.cpp"
  $312 = ((($3)) + 8|0); //@line 110 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$312>>2] = $311; //@line 110 "./src/cpp/unrar/sha256.cpp"
  $313 = HEAP32[$3>>2]|0; //@line 111 "./src/cpp/unrar/sha256.cpp"
  $314 = ((($3)) + 4|0); //@line 111 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$314>>2] = $313; //@line 111 "./src/cpp/unrar/sha256.cpp"
  $315 = $7; //@line 112 "./src/cpp/unrar/sha256.cpp"
  $316 = $8; //@line 112 "./src/cpp/unrar/sha256.cpp"
  $317 = (($315) + ($316))|0; //@line 112 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$3>>2] = $317; //@line 112 "./src/cpp/unrar/sha256.cpp"
  $318 = $6; //@line 94 "./src/cpp/unrar/sha256.cpp"
  $319 = (($318) + 1)|0; //@line 94 "./src/cpp/unrar/sha256.cpp"
  $6 = $319; //@line 94 "./src/cpp/unrar/sha256.cpp"
 }
 $320 = HEAP32[$3>>2]|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $321 = $5; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $322 = HEAP32[$321>>2]|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $323 = (($322) + ($320))|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$321>>2] = $323; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $324 = ((($3)) + 4|0); //@line 115 "./src/cpp/unrar/sha256.cpp"
 $325 = HEAP32[$324>>2]|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $326 = $5; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $327 = ((($326)) + 4|0); //@line 115 "./src/cpp/unrar/sha256.cpp"
 $328 = HEAP32[$327>>2]|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $329 = (($328) + ($325))|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$327>>2] = $329; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $330 = ((($3)) + 8|0); //@line 115 "./src/cpp/unrar/sha256.cpp"
 $331 = HEAP32[$330>>2]|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $332 = $5; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $333 = ((($332)) + 8|0); //@line 115 "./src/cpp/unrar/sha256.cpp"
 $334 = HEAP32[$333>>2]|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $335 = (($334) + ($331))|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$333>>2] = $335; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $336 = ((($3)) + 12|0); //@line 115 "./src/cpp/unrar/sha256.cpp"
 $337 = HEAP32[$336>>2]|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $338 = $5; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $339 = ((($338)) + 12|0); //@line 115 "./src/cpp/unrar/sha256.cpp"
 $340 = HEAP32[$339>>2]|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $341 = (($340) + ($337))|0; //@line 115 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$339>>2] = $341; //@line 115 "./src/cpp/unrar/sha256.cpp"
 $342 = ((($3)) + 16|0); //@line 116 "./src/cpp/unrar/sha256.cpp"
 $343 = HEAP32[$342>>2]|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $344 = $5; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $345 = ((($344)) + 16|0); //@line 116 "./src/cpp/unrar/sha256.cpp"
 $346 = HEAP32[$345>>2]|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $347 = (($346) + ($343))|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$345>>2] = $347; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $348 = ((($3)) + 20|0); //@line 116 "./src/cpp/unrar/sha256.cpp"
 $349 = HEAP32[$348>>2]|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $350 = $5; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $351 = ((($350)) + 20|0); //@line 116 "./src/cpp/unrar/sha256.cpp"
 $352 = HEAP32[$351>>2]|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $353 = (($352) + ($349))|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$351>>2] = $353; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $354 = ((($3)) + 24|0); //@line 116 "./src/cpp/unrar/sha256.cpp"
 $355 = HEAP32[$354>>2]|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $356 = $5; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $357 = ((($356)) + 24|0); //@line 116 "./src/cpp/unrar/sha256.cpp"
 $358 = HEAP32[$357>>2]|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $359 = (($358) + ($355))|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$357>>2] = $359; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $360 = ((($3)) + 28|0); //@line 116 "./src/cpp/unrar/sha256.cpp"
 $361 = HEAP32[$360>>2]|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $362 = $5; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $363 = ((($362)) + 28|0); //@line 116 "./src/cpp/unrar/sha256.cpp"
 $364 = HEAP32[$363>>2]|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 $365 = (($364) + ($361))|0; //@line 116 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$363>>2] = $365; //@line 116 "./src/cpp/unrar/sha256.cpp"
 STACKTOP = sp;return; //@line 117 "./src/cpp/unrar/sha256.cpp"
}
function __Z3b2iPKh($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $3 = HEAP8[$2>>0]|0; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $4 = $3&255; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $5 = $4 << 24; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $6 = $1; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $7 = ((($6)) + 1|0); //@line 59 "./src/cpp/unrar/sha256.cpp"
 $8 = HEAP8[$7>>0]|0; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $9 = $8&255; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $10 = $9 << 16; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $11 = $5 | $10; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $12 = $1; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $13 = ((($12)) + 2|0); //@line 59 "./src/cpp/unrar/sha256.cpp"
 $14 = HEAP8[$13>>0]|0; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $15 = $14&255; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $16 = $15 << 8; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $17 = $11 | $16; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $18 = $1; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $19 = ((($18)) + 3|0); //@line 59 "./src/cpp/unrar/sha256.cpp"
 $20 = HEAP8[$19>>0]|0; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $21 = $20&255; //@line 59 "./src/cpp/unrar/sha256.cpp"
 $22 = $17 | $21; //@line 59 "./src/cpp/unrar/sha256.cpp"
 STACKTOP = sp;return ($22|0); //@line 59 "./src/cpp/unrar/sha256.cpp"
}
function __Z11sha256_doneP14sha256_contextPh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $$sink1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $8 = $2; //@line 152 "./src/cpp/unrar/sha256.cpp"
 $9 = ((($8)) + 44|0); //@line 152 "./src/cpp/unrar/sha256.cpp"
 $10 = $2; //@line 152 "./src/cpp/unrar/sha256.cpp"
 $11 = ((($10)) + 40|0); //@line 152 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$11>>2] = $9; //@line 152 "./src/cpp/unrar/sha256.cpp"
 $12 = $2; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $13 = ((($12)) + 32|0); //@line 153 "./src/cpp/unrar/sha256.cpp"
 $14 = $13; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $15 = $14; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $16 = HEAP32[$15>>2]|0; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $17 = (($14) + 4)|0; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $18 = $17; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $19 = HEAP32[$18>>2]|0; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $20 = (___muldi3(($16|0),($19|0),8,0)|0); //@line 153 "./src/cpp/unrar/sha256.cpp"
 $21 = tempRet0; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $22 = $4; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $23 = $22; //@line 153 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$23>>2] = $20; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $24 = (($22) + 4)|0; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $25 = $24; //@line 153 "./src/cpp/unrar/sha256.cpp"
 HEAP32[$25>>2] = $21; //@line 153 "./src/cpp/unrar/sha256.cpp"
 $26 = $2; //@line 154 "./src/cpp/unrar/sha256.cpp"
 $27 = ((($26)) + 32|0); //@line 154 "./src/cpp/unrar/sha256.cpp"
 $28 = $27; //@line 154 "./src/cpp/unrar/sha256.cpp"
 $29 = $28; //@line 154 "./src/cpp/unrar/sha256.cpp"
 $30 = HEAP32[$29>>2]|0; //@line 154 "./src/cpp/unrar/sha256.cpp"
 $31 = (($28) + 4)|0; //@line 154 "./src/cpp/unrar/sha256.cpp"
 $32 = $31; //@line 154 "./src/cpp/unrar/sha256.cpp"
 $33 = HEAP32[$32>>2]|0; //@line 154 "./src/cpp/unrar/sha256.cpp"
 $34 = $30 & 63; //@line 154 "./src/cpp/unrar/sha256.cpp"
 $5 = $34; //@line 154 "./src/cpp/unrar/sha256.cpp"
 $35 = $2; //@line 155 "./src/cpp/unrar/sha256.cpp"
 $36 = ((($35)) + 44|0); //@line 155 "./src/cpp/unrar/sha256.cpp"
 $37 = $5; //@line 155 "./src/cpp/unrar/sha256.cpp"
 $38 = (($37) + 1)|0; //@line 155 "./src/cpp/unrar/sha256.cpp"
 $5 = $38; //@line 155 "./src/cpp/unrar/sha256.cpp"
 $39 = (($36) + ($37)|0); //@line 155 "./src/cpp/unrar/sha256.cpp"
 $$sink = -128;$$sink1 = $39;
 while(1) {
  HEAP8[$$sink1>>0] = $$sink;
  $40 = $5; //@line 156 "./src/cpp/unrar/sha256.cpp"
  $41 = ($40|0)!=(56); //@line 156 "./src/cpp/unrar/sha256.cpp"
  if (!($41)) {
   break;
  }
  $42 = $5; //@line 158 "./src/cpp/unrar/sha256.cpp"
  $43 = $42 & 63; //@line 158 "./src/cpp/unrar/sha256.cpp"
  $5 = $43; //@line 158 "./src/cpp/unrar/sha256.cpp"
  $44 = $5; //@line 159 "./src/cpp/unrar/sha256.cpp"
  $45 = ($44|0)==(0); //@line 159 "./src/cpp/unrar/sha256.cpp"
  if ($45) {
   $46 = $2; //@line 160 "./src/cpp/unrar/sha256.cpp"
   __ZL16sha256_transformP14sha256_context($46); //@line 160 "./src/cpp/unrar/sha256.cpp"
  }
  $47 = $2; //@line 161 "./src/cpp/unrar/sha256.cpp"
  $48 = ((($47)) + 44|0); //@line 161 "./src/cpp/unrar/sha256.cpp"
  $49 = $5; //@line 161 "./src/cpp/unrar/sha256.cpp"
  $50 = (($49) + 1)|0; //@line 161 "./src/cpp/unrar/sha256.cpp"
  $5 = $50; //@line 161 "./src/cpp/unrar/sha256.cpp"
  $51 = (($48) + ($49)|0); //@line 161 "./src/cpp/unrar/sha256.cpp"
  $$sink = 0;$$sink1 = $51;
 }
 $6 = 0; //@line 164 "./src/cpp/unrar/sha256.cpp"
 while(1) {
  $52 = $6; //@line 164 "./src/cpp/unrar/sha256.cpp"
  $53 = ($52>>>0)<(8); //@line 164 "./src/cpp/unrar/sha256.cpp"
  if (!($53)) {
   break;
  }
  $54 = $4; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $55 = $54; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $56 = HEAP32[$55>>2]|0; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $57 = (($54) + 4)|0; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $58 = $57; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $59 = HEAP32[$58>>2]|0; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $60 = (_bitshift64Lshr(($56|0),($59|0),56)|0); //@line 166 "./src/cpp/unrar/sha256.cpp"
  $61 = tempRet0; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $62 = $60&255; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $63 = $2; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $64 = ((($63)) + 44|0); //@line 166 "./src/cpp/unrar/sha256.cpp"
  $65 = $5; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $66 = (($65) + 1)|0; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $5 = $66; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $67 = (($64) + ($65)|0); //@line 166 "./src/cpp/unrar/sha256.cpp"
  HEAP8[$67>>0] = $62; //@line 166 "./src/cpp/unrar/sha256.cpp"
  $68 = $4; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $69 = $68; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $70 = HEAP32[$69>>2]|0; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $71 = (($68) + 4)|0; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $72 = $71; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $73 = HEAP32[$72>>2]|0; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $74 = (_bitshift64Shl(($70|0),($73|0),8)|0); //@line 167 "./src/cpp/unrar/sha256.cpp"
  $75 = tempRet0; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $76 = $4; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $77 = $76; //@line 167 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$77>>2] = $74; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $78 = (($76) + 4)|0; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $79 = $78; //@line 167 "./src/cpp/unrar/sha256.cpp"
  HEAP32[$79>>2] = $75; //@line 167 "./src/cpp/unrar/sha256.cpp"
  $80 = $6; //@line 164 "./src/cpp/unrar/sha256.cpp"
  $81 = (($80) + 1)|0; //@line 164 "./src/cpp/unrar/sha256.cpp"
  $6 = $81; //@line 164 "./src/cpp/unrar/sha256.cpp"
 }
 $82 = $2; //@line 169 "./src/cpp/unrar/sha256.cpp"
 __ZL16sha256_transformP14sha256_context($82); //@line 169 "./src/cpp/unrar/sha256.cpp"
 $7 = 0; //@line 171 "./src/cpp/unrar/sha256.cpp"
 while(1) {
  $83 = $7; //@line 171 "./src/cpp/unrar/sha256.cpp"
  $84 = ($83>>>0)<(32); //@line 171 "./src/cpp/unrar/sha256.cpp"
  $85 = $2;
  if (!($84)) {
   break;
  }
  $86 = $7; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $87 = (($86>>>0) / 4)&-1; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $88 = (($85) + ($87<<2)|0); //@line 172 "./src/cpp/unrar/sha256.cpp"
  $89 = HEAP32[$88>>2]|0; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $90 = $7; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $91 = (($90>>>0) % 4)&-1; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $92 = (3 - ($91))|0; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $93 = $92<<3; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $94 = $89 >>> $93; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $95 = $94&255; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $96 = $3; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $97 = $7; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $98 = (($96) + ($97)|0); //@line 172 "./src/cpp/unrar/sha256.cpp"
  HEAP8[$98>>0] = $95; //@line 172 "./src/cpp/unrar/sha256.cpp"
  $99 = $7; //@line 171 "./src/cpp/unrar/sha256.cpp"
  $100 = (($99) + 1)|0; //@line 171 "./src/cpp/unrar/sha256.cpp"
  $7 = $100; //@line 171 "./src/cpp/unrar/sha256.cpp"
 }
 __Z11sha256_initP14sha256_context($85); //@line 174 "./src/cpp/unrar/sha256.cpp"
 __ZL16sha256_transformP14sha256_context(0); //@line 175 "./src/cpp/unrar/sha256.cpp"
 $101 = $2; //@line 176 "./src/cpp/unrar/sha256.cpp"
 $102 = ((($101)) + 44|0); //@line 176 "./src/cpp/unrar/sha256.cpp"
 __Z9cleandataPvj($102,64); //@line 176 "./src/cpp/unrar/sha256.cpp"
 STACKTOP = sp;return; //@line 177 "./src/cpp/unrar/sha256.cpp"
}
function __Z13blake2sp_initP14blake2sp_state($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 18 "./src/cpp/unrar/blake2sp.cpp"
 $4 = ((($3)) + 2376|0); //@line 18 "./src/cpp/unrar/blake2sp.cpp"
 _memset(($4|0),0,512)|0; //@line 18 "./src/cpp/unrar/blake2sp.cpp"
 $5 = $1; //@line 19 "./src/cpp/unrar/blake2sp.cpp"
 $6 = ((($5)) + 2888|0); //@line 19 "./src/cpp/unrar/blake2sp.cpp"
 HEAP32[$6>>2] = 0; //@line 19 "./src/cpp/unrar/blake2sp.cpp"
 $7 = $1; //@line 21 "./src/cpp/unrar/blake2sp.cpp"
 $8 = ((($7)) + 2112|0); //@line 21 "./src/cpp/unrar/blake2sp.cpp"
 __ZL18blake2s_init_paramP13blake2s_statejj($8,0,1); //@line 21 "./src/cpp/unrar/blake2sp.cpp"
 $2 = 0; //@line 23 "./src/cpp/unrar/blake2sp.cpp"
 while(1) {
  $9 = $2; //@line 23 "./src/cpp/unrar/blake2sp.cpp"
  $10 = ($9>>>0)<(8); //@line 23 "./src/cpp/unrar/blake2sp.cpp"
  $11 = $1;
  if (!($10)) {
   break;
  }
  $12 = $2; //@line 24 "./src/cpp/unrar/blake2sp.cpp"
  $13 = (($11) + (($12*264)|0)|0); //@line 24 "./src/cpp/unrar/blake2sp.cpp"
  $14 = $2; //@line 24 "./src/cpp/unrar/blake2sp.cpp"
  __ZL18blake2s_init_paramP13blake2s_statejj($13,$14,0); //@line 24 "./src/cpp/unrar/blake2sp.cpp"
  $15 = $2; //@line 23 "./src/cpp/unrar/blake2sp.cpp"
  $16 = (($15) + 1)|0; //@line 23 "./src/cpp/unrar/blake2sp.cpp"
  $2 = $16; //@line 23 "./src/cpp/unrar/blake2sp.cpp"
 }
 $17 = ((($11)) + 2112|0); //@line 26 "./src/cpp/unrar/blake2sp.cpp"
 $18 = ((($17)) + 260|0); //@line 26 "./src/cpp/unrar/blake2sp.cpp"
 HEAP8[$18>>0] = 1; //@line 26 "./src/cpp/unrar/blake2sp.cpp"
 $19 = $1; //@line 27 "./src/cpp/unrar/blake2sp.cpp"
 $20 = ((($19)) + 1848|0); //@line 27 "./src/cpp/unrar/blake2sp.cpp"
 $21 = ((($20)) + 260|0); //@line 27 "./src/cpp/unrar/blake2sp.cpp"
 HEAP8[$21>>0] = 1; //@line 27 "./src/cpp/unrar/blake2sp.cpp"
 STACKTOP = sp;return; //@line 28 "./src/cpp/unrar/blake2sp.cpp"
}
function __ZL18blake2s_init_paramP13blake2s_statejj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 65 "./src/cpp/unrar/blake2s.cpp"
 __ZN13blake2s_state4initEv($7); //@line 65 "./src/cpp/unrar/blake2s.cpp"
 $6 = 0; //@line 66 "./src/cpp/unrar/blake2s.cpp"
 while(1) {
  $8 = $6; //@line 66 "./src/cpp/unrar/blake2s.cpp"
  $9 = ($8|0)<(8); //@line 66 "./src/cpp/unrar/blake2s.cpp"
  if (!($9)) {
   break;
  }
  $10 = $6; //@line 67 "./src/cpp/unrar/blake2s.cpp"
  $11 = (1220 + ($10<<2)|0); //@line 67 "./src/cpp/unrar/blake2s.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 67 "./src/cpp/unrar/blake2s.cpp"
  $13 = $3; //@line 67 "./src/cpp/unrar/blake2s.cpp"
  $14 = ((($13)) + 244|0); //@line 67 "./src/cpp/unrar/blake2s.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 67 "./src/cpp/unrar/blake2s.cpp"
  $16 = $6; //@line 67 "./src/cpp/unrar/blake2s.cpp"
  $17 = (($15) + ($16<<2)|0); //@line 67 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$17>>2] = $12; //@line 67 "./src/cpp/unrar/blake2s.cpp"
  $18 = $6; //@line 66 "./src/cpp/unrar/blake2s.cpp"
  $19 = (($18) + 1)|0; //@line 66 "./src/cpp/unrar/blake2s.cpp"
  $6 = $19; //@line 66 "./src/cpp/unrar/blake2s.cpp"
 }
 $20 = $3; //@line 69 "./src/cpp/unrar/blake2s.cpp"
 $21 = ((($20)) + 244|0); //@line 69 "./src/cpp/unrar/blake2s.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 69 "./src/cpp/unrar/blake2s.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 69 "./src/cpp/unrar/blake2s.cpp"
 $24 = $23 ^ 34078752; //@line 69 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$22>>2] = $24; //@line 69 "./src/cpp/unrar/blake2s.cpp"
 $25 = $4; //@line 70 "./src/cpp/unrar/blake2s.cpp"
 $26 = $3; //@line 70 "./src/cpp/unrar/blake2s.cpp"
 $27 = ((($26)) + 244|0); //@line 70 "./src/cpp/unrar/blake2s.cpp"
 $28 = HEAP32[$27>>2]|0; //@line 70 "./src/cpp/unrar/blake2s.cpp"
 $29 = ((($28)) + 8|0); //@line 70 "./src/cpp/unrar/blake2s.cpp"
 $30 = HEAP32[$29>>2]|0; //@line 70 "./src/cpp/unrar/blake2s.cpp"
 $31 = $30 ^ $25; //@line 70 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$29>>2] = $31; //@line 70 "./src/cpp/unrar/blake2s.cpp"
 $32 = $5; //@line 71 "./src/cpp/unrar/blake2s.cpp"
 $33 = $32 << 16; //@line 71 "./src/cpp/unrar/blake2s.cpp"
 $34 = $33 | 536870912; //@line 71 "./src/cpp/unrar/blake2s.cpp"
 $35 = $3; //@line 71 "./src/cpp/unrar/blake2s.cpp"
 $36 = ((($35)) + 244|0); //@line 71 "./src/cpp/unrar/blake2s.cpp"
 $37 = HEAP32[$36>>2]|0; //@line 71 "./src/cpp/unrar/blake2s.cpp"
 $38 = ((($37)) + 12|0); //@line 71 "./src/cpp/unrar/blake2s.cpp"
 $39 = HEAP32[$38>>2]|0; //@line 71 "./src/cpp/unrar/blake2s.cpp"
 $40 = $39 ^ $34; //@line 71 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$38>>2] = $40; //@line 71 "./src/cpp/unrar/blake2s.cpp"
 STACKTOP = sp;return; //@line 72 "./src/cpp/unrar/blake2s.cpp"
}
function __ZN13blake2s_state4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 _memset(($2|0),0,240)|0; //@line 60 "./src/cpp/unrar/blake2s.hpp"
 $3 = ((($2)) + 256|0); //@line 61 "./src/cpp/unrar/blake2s.hpp"
 HEAP32[$3>>2] = 0; //@line 61 "./src/cpp/unrar/blake2s.hpp"
 $4 = ((($2)) + 260|0); //@line 62 "./src/cpp/unrar/blake2s.hpp"
 HEAP8[$4>>0] = 0; //@line 62 "./src/cpp/unrar/blake2s.hpp"
 STACKTOP = sp;return; //@line 63 "./src/cpp/unrar/blake2s.hpp"
}
function __ZN16Blake2ThreadData6UpdateEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 8|0); //@line 42 "./src/cpp/unrar/blake2sp.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 42 "./src/cpp/unrar/blake2sp.cpp"
 $2 = $6; //@line 42 "./src/cpp/unrar/blake2sp.cpp"
 $7 = ((($4)) + 4|0); //@line 43 "./src/cpp/unrar/blake2sp.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 43 "./src/cpp/unrar/blake2sp.cpp"
 $3 = $8; //@line 43 "./src/cpp/unrar/blake2sp.cpp"
 while(1) {
  $9 = $2; //@line 45 "./src/cpp/unrar/blake2sp.cpp"
  $10 = ($9>>>0)>=(512); //@line 45 "./src/cpp/unrar/blake2sp.cpp"
  if (!($10)) {
   break;
  }
  $11 = HEAP32[$4>>2]|0; //@line 52 "./src/cpp/unrar/blake2sp.cpp"
  $12 = $3; //@line 52 "./src/cpp/unrar/blake2sp.cpp"
  __ZL14blake2s_updateP13blake2s_statePKhj($11,$12,64); //@line 52 "./src/cpp/unrar/blake2sp.cpp"
  $13 = $3; //@line 53 "./src/cpp/unrar/blake2sp.cpp"
  $14 = ((($13)) + 512|0); //@line 53 "./src/cpp/unrar/blake2sp.cpp"
  $3 = $14; //@line 53 "./src/cpp/unrar/blake2sp.cpp"
  $15 = $2; //@line 54 "./src/cpp/unrar/blake2sp.cpp"
  $16 = (($15) - 512)|0; //@line 54 "./src/cpp/unrar/blake2sp.cpp"
  $2 = $16; //@line 54 "./src/cpp/unrar/blake2sp.cpp"
 }
 STACKTOP = sp;return; //@line 56 "./src/cpp/unrar/blake2sp.cpp"
}
function __ZL14blake2s_updateP13blake2s_statePKhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0;
 var sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 while(1) {
  $8 = $5; //@line 131 "./src/cpp/unrar/blake2s.cpp"
  $9 = ($8>>>0)>(0); //@line 131 "./src/cpp/unrar/blake2s.cpp"
  if (!($9)) {
   break;
  }
  $10 = $3; //@line 133 "./src/cpp/unrar/blake2s.cpp"
  $11 = ((($10)) + 256|0); //@line 133 "./src/cpp/unrar/blake2s.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 133 "./src/cpp/unrar/blake2s.cpp"
  $6 = $12; //@line 133 "./src/cpp/unrar/blake2s.cpp"
  $13 = $6; //@line 134 "./src/cpp/unrar/blake2s.cpp"
  $14 = (128 - ($13))|0; //@line 134 "./src/cpp/unrar/blake2s.cpp"
  $7 = $14; //@line 134 "./src/cpp/unrar/blake2s.cpp"
  $15 = $5; //@line 136 "./src/cpp/unrar/blake2s.cpp"
  $16 = $7; //@line 136 "./src/cpp/unrar/blake2s.cpp"
  $17 = ($15>>>0)>($16>>>0); //@line 136 "./src/cpp/unrar/blake2s.cpp"
  $18 = $3;
  $19 = ((($18)) + 240|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = $6;
  $22 = (($20) + ($21)|0);
  $23 = $4;
  if ($17) {
   $24 = $7; //@line 138 "./src/cpp/unrar/blake2s.cpp"
   _memcpy(($22|0),($23|0),($24|0))|0; //@line 138 "./src/cpp/unrar/blake2s.cpp"
   $25 = $7; //@line 139 "./src/cpp/unrar/blake2s.cpp"
   $26 = $3; //@line 139 "./src/cpp/unrar/blake2s.cpp"
   $27 = ((($26)) + 256|0); //@line 139 "./src/cpp/unrar/blake2s.cpp"
   $28 = HEAP32[$27>>2]|0; //@line 139 "./src/cpp/unrar/blake2s.cpp"
   $29 = (($28) + ($25))|0; //@line 139 "./src/cpp/unrar/blake2s.cpp"
   HEAP32[$27>>2] = $29; //@line 139 "./src/cpp/unrar/blake2s.cpp"
   $30 = $3; //@line 140 "./src/cpp/unrar/blake2s.cpp"
   __ZL25blake2s_increment_counterP13blake2s_statej($30,64); //@line 140 "./src/cpp/unrar/blake2s.cpp"
   $31 = $3; //@line 152 "./src/cpp/unrar/blake2s.cpp"
   $32 = $3; //@line 152 "./src/cpp/unrar/blake2s.cpp"
   $33 = ((($32)) + 240|0); //@line 152 "./src/cpp/unrar/blake2s.cpp"
   $34 = HEAP32[$33>>2]|0; //@line 152 "./src/cpp/unrar/blake2s.cpp"
   __ZL16blake2s_compressP13blake2s_statePKh($31,$34); //@line 152 "./src/cpp/unrar/blake2s.cpp"
   $35 = $3; //@line 155 "./src/cpp/unrar/blake2s.cpp"
   $36 = ((($35)) + 240|0); //@line 155 "./src/cpp/unrar/blake2s.cpp"
   $37 = HEAP32[$36>>2]|0; //@line 155 "./src/cpp/unrar/blake2s.cpp"
   $38 = $3; //@line 155 "./src/cpp/unrar/blake2s.cpp"
   $39 = ((($38)) + 240|0); //@line 155 "./src/cpp/unrar/blake2s.cpp"
   $40 = HEAP32[$39>>2]|0; //@line 155 "./src/cpp/unrar/blake2s.cpp"
   $41 = ((($40)) + 64|0); //@line 155 "./src/cpp/unrar/blake2s.cpp"
   dest=$37; src=$41; stop=dest+64|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 155 "./src/cpp/unrar/blake2s.cpp"
   $42 = $3; //@line 156 "./src/cpp/unrar/blake2s.cpp"
   $43 = ((($42)) + 256|0); //@line 156 "./src/cpp/unrar/blake2s.cpp"
   $44 = HEAP32[$43>>2]|0; //@line 156 "./src/cpp/unrar/blake2s.cpp"
   $45 = (($44) - 64)|0; //@line 156 "./src/cpp/unrar/blake2s.cpp"
   HEAP32[$43>>2] = $45; //@line 156 "./src/cpp/unrar/blake2s.cpp"
   $46 = $7; //@line 157 "./src/cpp/unrar/blake2s.cpp"
   $47 = $4; //@line 157 "./src/cpp/unrar/blake2s.cpp"
   $48 = (($47) + ($46)|0); //@line 157 "./src/cpp/unrar/blake2s.cpp"
   $4 = $48; //@line 157 "./src/cpp/unrar/blake2s.cpp"
   $49 = $7; //@line 158 "./src/cpp/unrar/blake2s.cpp"
   $50 = $5; //@line 158 "./src/cpp/unrar/blake2s.cpp"
   $51 = (($50) - ($49))|0; //@line 158 "./src/cpp/unrar/blake2s.cpp"
   $5 = $51; //@line 158 "./src/cpp/unrar/blake2s.cpp"
   continue;
  } else {
   $52 = $5; //@line 162 "./src/cpp/unrar/blake2s.cpp"
   _memcpy(($22|0),($23|0),($52|0))|0; //@line 162 "./src/cpp/unrar/blake2s.cpp"
   $53 = $5; //@line 163 "./src/cpp/unrar/blake2s.cpp"
   $54 = $3; //@line 163 "./src/cpp/unrar/blake2s.cpp"
   $55 = ((($54)) + 256|0); //@line 163 "./src/cpp/unrar/blake2s.cpp"
   $56 = HEAP32[$55>>2]|0; //@line 163 "./src/cpp/unrar/blake2s.cpp"
   $57 = (($56) + ($53))|0; //@line 163 "./src/cpp/unrar/blake2s.cpp"
   HEAP32[$55>>2] = $57; //@line 163 "./src/cpp/unrar/blake2s.cpp"
   $58 = $5; //@line 164 "./src/cpp/unrar/blake2s.cpp"
   $59 = $4; //@line 164 "./src/cpp/unrar/blake2s.cpp"
   $60 = (($59) + ($58)|0); //@line 164 "./src/cpp/unrar/blake2s.cpp"
   $4 = $60; //@line 164 "./src/cpp/unrar/blake2s.cpp"
   $5 = 0; //@line 165 "./src/cpp/unrar/blake2s.cpp"
   continue;
  }
 }
 STACKTOP = sp;return; //@line 168 "./src/cpp/unrar/blake2s.cpp"
}
function __ZL25blake2s_increment_counterP13blake2s_statej($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 52 "./src/cpp/unrar/blake2s.cpp"
 $5 = $2; //@line 52 "./src/cpp/unrar/blake2s.cpp"
 $6 = ((($5)) + 248|0); //@line 52 "./src/cpp/unrar/blake2s.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 52 "./src/cpp/unrar/blake2s.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 52 "./src/cpp/unrar/blake2s.cpp"
 $9 = (($8) + ($4))|0; //@line 52 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$7>>2] = $9; //@line 52 "./src/cpp/unrar/blake2s.cpp"
 $10 = $2; //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $11 = ((($10)) + 248|0); //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $14 = $3; //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $15 = ($13>>>0)<($14>>>0); //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $16 = $15&1; //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $17 = $2; //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $18 = ((($17)) + 248|0); //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $19 = HEAP32[$18>>2]|0; //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $20 = ((($19)) + 4|0); //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $21 = HEAP32[$20>>2]|0; //@line 53 "./src/cpp/unrar/blake2s.cpp"
 $22 = (($21) + ($16))|0; //@line 53 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$20>>2] = $22; //@line 53 "./src/cpp/unrar/blake2s.cpp"
 STACKTOP = sp;return; //@line 54 "./src/cpp/unrar/blake2s.cpp"
}
function __ZL16blake2s_compressP13blake2s_statePKh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0;
 var $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0;
 var $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0;
 var $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0;
 var $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0;
 var $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0;
 var $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $4 = sp + 80|0;
 $5 = sp + 16|0;
 $2 = $0;
 $3 = $1;
 $6 = 0; //@line 97 "./src/cpp/unrar/blake2s.cpp"
 while(1) {
  $10 = $6; //@line 97 "./src/cpp/unrar/blake2s.cpp"
  $11 = ($10>>>0)<(16); //@line 97 "./src/cpp/unrar/blake2s.cpp"
  if (!($11)) {
   break;
  }
  $12 = $3; //@line 98 "./src/cpp/unrar/blake2s.cpp"
  $13 = $6; //@line 98 "./src/cpp/unrar/blake2s.cpp"
  $14 = $13<<2; //@line 98 "./src/cpp/unrar/blake2s.cpp"
  $15 = (($12) + ($14)|0); //@line 98 "./src/cpp/unrar/blake2s.cpp"
  $16 = (__Z7RawGet4PKv($15)|0); //@line 98 "./src/cpp/unrar/blake2s.cpp"
  $17 = $6; //@line 98 "./src/cpp/unrar/blake2s.cpp"
  $18 = (($4) + ($17<<2)|0); //@line 98 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$18>>2] = $16; //@line 98 "./src/cpp/unrar/blake2s.cpp"
  $19 = $6; //@line 97 "./src/cpp/unrar/blake2s.cpp"
  $20 = (($19) + 1)|0; //@line 97 "./src/cpp/unrar/blake2s.cpp"
  $6 = $20; //@line 97 "./src/cpp/unrar/blake2s.cpp"
 }
 $7 = 0; //@line 100 "./src/cpp/unrar/blake2s.cpp"
 while(1) {
  $21 = $7; //@line 100 "./src/cpp/unrar/blake2s.cpp"
  $22 = ($21>>>0)<(8); //@line 100 "./src/cpp/unrar/blake2s.cpp"
  if (!($22)) {
   break;
  }
  $23 = $2; //@line 101 "./src/cpp/unrar/blake2s.cpp"
  $24 = ((($23)) + 244|0); //@line 101 "./src/cpp/unrar/blake2s.cpp"
  $25 = HEAP32[$24>>2]|0; //@line 101 "./src/cpp/unrar/blake2s.cpp"
  $26 = $7; //@line 101 "./src/cpp/unrar/blake2s.cpp"
  $27 = (($25) + ($26<<2)|0); //@line 101 "./src/cpp/unrar/blake2s.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 101 "./src/cpp/unrar/blake2s.cpp"
  $29 = $7; //@line 101 "./src/cpp/unrar/blake2s.cpp"
  $30 = (($5) + ($29<<2)|0); //@line 101 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$30>>2] = $28; //@line 101 "./src/cpp/unrar/blake2s.cpp"
  $31 = $7; //@line 100 "./src/cpp/unrar/blake2s.cpp"
  $32 = (($31) + 1)|0; //@line 100 "./src/cpp/unrar/blake2s.cpp"
  $7 = $32; //@line 100 "./src/cpp/unrar/blake2s.cpp"
 }
 $33 = HEAP32[305]|0; //@line 103 "./src/cpp/unrar/blake2s.cpp"
 $34 = ((($5)) + 32|0); //@line 103 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$34>>2] = $33; //@line 103 "./src/cpp/unrar/blake2s.cpp"
 $35 = HEAP32[(1224)>>2]|0; //@line 104 "./src/cpp/unrar/blake2s.cpp"
 $36 = ((($5)) + 36|0); //@line 104 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$36>>2] = $35; //@line 104 "./src/cpp/unrar/blake2s.cpp"
 $37 = HEAP32[(1228)>>2]|0; //@line 105 "./src/cpp/unrar/blake2s.cpp"
 $38 = ((($5)) + 40|0); //@line 105 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$38>>2] = $37; //@line 105 "./src/cpp/unrar/blake2s.cpp"
 $39 = HEAP32[(1232)>>2]|0; //@line 106 "./src/cpp/unrar/blake2s.cpp"
 $40 = ((($5)) + 44|0); //@line 106 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$40>>2] = $39; //@line 106 "./src/cpp/unrar/blake2s.cpp"
 $41 = $2; //@line 107 "./src/cpp/unrar/blake2s.cpp"
 $42 = ((($41)) + 248|0); //@line 107 "./src/cpp/unrar/blake2s.cpp"
 $43 = HEAP32[$42>>2]|0; //@line 107 "./src/cpp/unrar/blake2s.cpp"
 $44 = HEAP32[$43>>2]|0; //@line 107 "./src/cpp/unrar/blake2s.cpp"
 $45 = HEAP32[(1236)>>2]|0; //@line 107 "./src/cpp/unrar/blake2s.cpp"
 $46 = $44 ^ $45; //@line 107 "./src/cpp/unrar/blake2s.cpp"
 $47 = ((($5)) + 48|0); //@line 107 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$47>>2] = $46; //@line 107 "./src/cpp/unrar/blake2s.cpp"
 $48 = $2; //@line 108 "./src/cpp/unrar/blake2s.cpp"
 $49 = ((($48)) + 248|0); //@line 108 "./src/cpp/unrar/blake2s.cpp"
 $50 = HEAP32[$49>>2]|0; //@line 108 "./src/cpp/unrar/blake2s.cpp"
 $51 = ((($50)) + 4|0); //@line 108 "./src/cpp/unrar/blake2s.cpp"
 $52 = HEAP32[$51>>2]|0; //@line 108 "./src/cpp/unrar/blake2s.cpp"
 $53 = HEAP32[(1240)>>2]|0; //@line 108 "./src/cpp/unrar/blake2s.cpp"
 $54 = $52 ^ $53; //@line 108 "./src/cpp/unrar/blake2s.cpp"
 $55 = ((($5)) + 52|0); //@line 108 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$55>>2] = $54; //@line 108 "./src/cpp/unrar/blake2s.cpp"
 $56 = $2; //@line 109 "./src/cpp/unrar/blake2s.cpp"
 $57 = ((($56)) + 252|0); //@line 109 "./src/cpp/unrar/blake2s.cpp"
 $58 = HEAP32[$57>>2]|0; //@line 109 "./src/cpp/unrar/blake2s.cpp"
 $59 = HEAP32[$58>>2]|0; //@line 109 "./src/cpp/unrar/blake2s.cpp"
 $60 = HEAP32[(1244)>>2]|0; //@line 109 "./src/cpp/unrar/blake2s.cpp"
 $61 = $59 ^ $60; //@line 109 "./src/cpp/unrar/blake2s.cpp"
 $62 = ((($5)) + 56|0); //@line 109 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$62>>2] = $61; //@line 109 "./src/cpp/unrar/blake2s.cpp"
 $63 = $2; //@line 110 "./src/cpp/unrar/blake2s.cpp"
 $64 = ((($63)) + 252|0); //@line 110 "./src/cpp/unrar/blake2s.cpp"
 $65 = HEAP32[$64>>2]|0; //@line 110 "./src/cpp/unrar/blake2s.cpp"
 $66 = ((($65)) + 4|0); //@line 110 "./src/cpp/unrar/blake2s.cpp"
 $67 = HEAP32[$66>>2]|0; //@line 110 "./src/cpp/unrar/blake2s.cpp"
 $68 = HEAP32[(1248)>>2]|0; //@line 110 "./src/cpp/unrar/blake2s.cpp"
 $69 = $67 ^ $68; //@line 110 "./src/cpp/unrar/blake2s.cpp"
 $70 = ((($5)) + 60|0); //@line 110 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$70>>2] = $69; //@line 110 "./src/cpp/unrar/blake2s.cpp"
 $8 = 0; //@line 112 "./src/cpp/unrar/blake2s.cpp"
 while(1) {
  $71 = $8; //@line 112 "./src/cpp/unrar/blake2s.cpp"
  $72 = ($71>>>0)<=(9); //@line 112 "./src/cpp/unrar/blake2s.cpp"
  if (!($72)) {
   break;
  }
  $73 = HEAP32[$5>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $74 = ((($5)) + 16|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $75 = HEAP32[$74>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $76 = (($73) + ($75))|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $77 = $8; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $78 = (5151 + ($77<<4)|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $79 = HEAP8[$78>>0]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $80 = $79&255; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $81 = (($4) + ($80<<2)|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $82 = HEAP32[$81>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $83 = (($76) + ($82))|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$5>>2] = $83; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $84 = ((($5)) + 48|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $85 = HEAP32[$84>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $86 = HEAP32[$5>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $87 = $85 ^ $86; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $88 = (__ZL6rotr32jj($87,16)|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $89 = ((($5)) + 48|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$89>>2] = $88; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $90 = ((($5)) + 32|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $91 = HEAP32[$90>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $92 = ((($5)) + 48|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $93 = HEAP32[$92>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $94 = (($91) + ($93))|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $95 = ((($5)) + 32|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$95>>2] = $94; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $96 = ((($5)) + 16|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $97 = HEAP32[$96>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $98 = ((($5)) + 32|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $99 = HEAP32[$98>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $100 = $97 ^ $99; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $101 = (__ZL6rotr32jj($100,12)|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $102 = ((($5)) + 16|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$102>>2] = $101; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $103 = HEAP32[$5>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $104 = ((($5)) + 16|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $105 = HEAP32[$104>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $106 = (($103) + ($105))|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $107 = $8; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $108 = (5151 + ($107<<4)|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $109 = ((($108)) + 1|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $110 = HEAP8[$109>>0]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $111 = $110&255; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $112 = (($4) + ($111<<2)|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $113 = HEAP32[$112>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $114 = (($106) + ($113))|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$5>>2] = $114; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $115 = ((($5)) + 48|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $116 = HEAP32[$115>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $117 = HEAP32[$5>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $118 = $116 ^ $117; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $119 = (__ZL6rotr32jj($118,8)|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $120 = ((($5)) + 48|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$120>>2] = $119; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $121 = ((($5)) + 32|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $122 = HEAP32[$121>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $123 = ((($5)) + 48|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $124 = HEAP32[$123>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $125 = (($122) + ($124))|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $126 = ((($5)) + 32|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$126>>2] = $125; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $127 = ((($5)) + 16|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $128 = HEAP32[$127>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $129 = ((($5)) + 32|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $130 = HEAP32[$129>>2]|0; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $131 = $128 ^ $130; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $132 = (__ZL6rotr32jj($131,7)|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $133 = ((($5)) + 16|0); //@line 114 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$133>>2] = $132; //@line 114 "./src/cpp/unrar/blake2s.cpp"
  $134 = ((($5)) + 4|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $135 = HEAP32[$134>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $136 = ((($5)) + 20|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $137 = HEAP32[$136>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $138 = (($135) + ($137))|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $139 = $8; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $140 = (5151 + ($139<<4)|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $141 = ((($140)) + 2|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $142 = HEAP8[$141>>0]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $143 = $142&255; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $144 = (($4) + ($143<<2)|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $145 = HEAP32[$144>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $146 = (($138) + ($145))|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $147 = ((($5)) + 4|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$147>>2] = $146; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $148 = ((($5)) + 52|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $149 = HEAP32[$148>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $150 = ((($5)) + 4|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $151 = HEAP32[$150>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $152 = $149 ^ $151; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $153 = (__ZL6rotr32jj($152,16)|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $154 = ((($5)) + 52|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$154>>2] = $153; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $155 = ((($5)) + 36|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $156 = HEAP32[$155>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $157 = ((($5)) + 52|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $158 = HEAP32[$157>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $159 = (($156) + ($158))|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $160 = ((($5)) + 36|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$160>>2] = $159; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $161 = ((($5)) + 20|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $162 = HEAP32[$161>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $163 = ((($5)) + 36|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $164 = HEAP32[$163>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $165 = $162 ^ $164; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $166 = (__ZL6rotr32jj($165,12)|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $167 = ((($5)) + 20|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$167>>2] = $166; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $168 = ((($5)) + 4|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $169 = HEAP32[$168>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $170 = ((($5)) + 20|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $171 = HEAP32[$170>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $172 = (($169) + ($171))|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $173 = $8; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $174 = (5151 + ($173<<4)|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $175 = ((($174)) + 3|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $176 = HEAP8[$175>>0]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $177 = $176&255; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $178 = (($4) + ($177<<2)|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $179 = HEAP32[$178>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $180 = (($172) + ($179))|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $181 = ((($5)) + 4|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$181>>2] = $180; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $182 = ((($5)) + 52|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $183 = HEAP32[$182>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $184 = ((($5)) + 4|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $185 = HEAP32[$184>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $186 = $183 ^ $185; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $187 = (__ZL6rotr32jj($186,8)|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $188 = ((($5)) + 52|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$188>>2] = $187; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $189 = ((($5)) + 36|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $190 = HEAP32[$189>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $191 = ((($5)) + 52|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $192 = HEAP32[$191>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $193 = (($190) + ($192))|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $194 = ((($5)) + 36|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$194>>2] = $193; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $195 = ((($5)) + 20|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $196 = HEAP32[$195>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $197 = ((($5)) + 36|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $198 = HEAP32[$197>>2]|0; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $199 = $196 ^ $198; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $200 = (__ZL6rotr32jj($199,7)|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $201 = ((($5)) + 20|0); //@line 115 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$201>>2] = $200; //@line 115 "./src/cpp/unrar/blake2s.cpp"
  $202 = ((($5)) + 8|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $203 = HEAP32[$202>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $204 = ((($5)) + 24|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $205 = HEAP32[$204>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $206 = (($203) + ($205))|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $207 = $8; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $208 = (5151 + ($207<<4)|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $209 = ((($208)) + 4|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $210 = HEAP8[$209>>0]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $211 = $210&255; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $212 = (($4) + ($211<<2)|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $213 = HEAP32[$212>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $214 = (($206) + ($213))|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $215 = ((($5)) + 8|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$215>>2] = $214; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $216 = ((($5)) + 56|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $217 = HEAP32[$216>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $218 = ((($5)) + 8|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $219 = HEAP32[$218>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $220 = $217 ^ $219; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $221 = (__ZL6rotr32jj($220,16)|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $222 = ((($5)) + 56|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$222>>2] = $221; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $223 = ((($5)) + 40|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $224 = HEAP32[$223>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $225 = ((($5)) + 56|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $226 = HEAP32[$225>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $227 = (($224) + ($226))|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $228 = ((($5)) + 40|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$228>>2] = $227; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $229 = ((($5)) + 24|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $230 = HEAP32[$229>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $231 = ((($5)) + 40|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $232 = HEAP32[$231>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $233 = $230 ^ $232; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $234 = (__ZL6rotr32jj($233,12)|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $235 = ((($5)) + 24|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$235>>2] = $234; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $236 = ((($5)) + 8|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $237 = HEAP32[$236>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $238 = ((($5)) + 24|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $239 = HEAP32[$238>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $240 = (($237) + ($239))|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $241 = $8; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $242 = (5151 + ($241<<4)|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $243 = ((($242)) + 5|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $244 = HEAP8[$243>>0]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $245 = $244&255; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $246 = (($4) + ($245<<2)|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $247 = HEAP32[$246>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $248 = (($240) + ($247))|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $249 = ((($5)) + 8|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$249>>2] = $248; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $250 = ((($5)) + 56|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $251 = HEAP32[$250>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $252 = ((($5)) + 8|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $253 = HEAP32[$252>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $254 = $251 ^ $253; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $255 = (__ZL6rotr32jj($254,8)|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $256 = ((($5)) + 56|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$256>>2] = $255; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $257 = ((($5)) + 40|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $258 = HEAP32[$257>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $259 = ((($5)) + 56|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $260 = HEAP32[$259>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $261 = (($258) + ($260))|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $262 = ((($5)) + 40|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$262>>2] = $261; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $263 = ((($5)) + 24|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $264 = HEAP32[$263>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $265 = ((($5)) + 40|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $266 = HEAP32[$265>>2]|0; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $267 = $264 ^ $266; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $268 = (__ZL6rotr32jj($267,7)|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $269 = ((($5)) + 24|0); //@line 116 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$269>>2] = $268; //@line 116 "./src/cpp/unrar/blake2s.cpp"
  $270 = ((($5)) + 12|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $271 = HEAP32[$270>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $272 = ((($5)) + 28|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $273 = HEAP32[$272>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $274 = (($271) + ($273))|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $275 = $8; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $276 = (5151 + ($275<<4)|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $277 = ((($276)) + 6|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $278 = HEAP8[$277>>0]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $279 = $278&255; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $280 = (($4) + ($279<<2)|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $281 = HEAP32[$280>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $282 = (($274) + ($281))|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $283 = ((($5)) + 12|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$283>>2] = $282; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $284 = ((($5)) + 60|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $285 = HEAP32[$284>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $286 = ((($5)) + 12|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $287 = HEAP32[$286>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $288 = $285 ^ $287; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $289 = (__ZL6rotr32jj($288,16)|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $290 = ((($5)) + 60|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$290>>2] = $289; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $291 = ((($5)) + 44|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $292 = HEAP32[$291>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $293 = ((($5)) + 60|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $294 = HEAP32[$293>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $295 = (($292) + ($294))|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $296 = ((($5)) + 44|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$296>>2] = $295; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $297 = ((($5)) + 28|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $298 = HEAP32[$297>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $299 = ((($5)) + 44|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $300 = HEAP32[$299>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $301 = $298 ^ $300; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $302 = (__ZL6rotr32jj($301,12)|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $303 = ((($5)) + 28|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$303>>2] = $302; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $304 = ((($5)) + 12|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $305 = HEAP32[$304>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $306 = ((($5)) + 28|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $307 = HEAP32[$306>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $308 = (($305) + ($307))|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $309 = $8; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $310 = (5151 + ($309<<4)|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $311 = ((($310)) + 7|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $312 = HEAP8[$311>>0]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $313 = $312&255; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $314 = (($4) + ($313<<2)|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $315 = HEAP32[$314>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $316 = (($308) + ($315))|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $317 = ((($5)) + 12|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$317>>2] = $316; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $318 = ((($5)) + 60|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $319 = HEAP32[$318>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $320 = ((($5)) + 12|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $321 = HEAP32[$320>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $322 = $319 ^ $321; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $323 = (__ZL6rotr32jj($322,8)|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $324 = ((($5)) + 60|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$324>>2] = $323; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $325 = ((($5)) + 44|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $326 = HEAP32[$325>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $327 = ((($5)) + 60|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $328 = HEAP32[$327>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $329 = (($326) + ($328))|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $330 = ((($5)) + 44|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$330>>2] = $329; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $331 = ((($5)) + 28|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $332 = HEAP32[$331>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $333 = ((($5)) + 44|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $334 = HEAP32[$333>>2]|0; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $335 = $332 ^ $334; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $336 = (__ZL6rotr32jj($335,7)|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $337 = ((($5)) + 28|0); //@line 117 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$337>>2] = $336; //@line 117 "./src/cpp/unrar/blake2s.cpp"
  $338 = HEAP32[$5>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $339 = ((($5)) + 20|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $340 = HEAP32[$339>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $341 = (($338) + ($340))|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $342 = $8; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $343 = (5151 + ($342<<4)|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $344 = ((($343)) + 8|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $345 = HEAP8[$344>>0]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $346 = $345&255; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $347 = (($4) + ($346<<2)|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $348 = HEAP32[$347>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $349 = (($341) + ($348))|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$5>>2] = $349; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $350 = ((($5)) + 60|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $351 = HEAP32[$350>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $352 = HEAP32[$5>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $353 = $351 ^ $352; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $354 = (__ZL6rotr32jj($353,16)|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $355 = ((($5)) + 60|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$355>>2] = $354; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $356 = ((($5)) + 40|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $357 = HEAP32[$356>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $358 = ((($5)) + 60|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $359 = HEAP32[$358>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $360 = (($357) + ($359))|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $361 = ((($5)) + 40|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$361>>2] = $360; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $362 = ((($5)) + 20|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $363 = HEAP32[$362>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $364 = ((($5)) + 40|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $365 = HEAP32[$364>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $366 = $363 ^ $365; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $367 = (__ZL6rotr32jj($366,12)|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $368 = ((($5)) + 20|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$368>>2] = $367; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $369 = HEAP32[$5>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $370 = ((($5)) + 20|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $371 = HEAP32[$370>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $372 = (($369) + ($371))|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $373 = $8; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $374 = (5151 + ($373<<4)|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $375 = ((($374)) + 9|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $376 = HEAP8[$375>>0]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $377 = $376&255; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $378 = (($4) + ($377<<2)|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $379 = HEAP32[$378>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $380 = (($372) + ($379))|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$5>>2] = $380; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $381 = ((($5)) + 60|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $382 = HEAP32[$381>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $383 = HEAP32[$5>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $384 = $382 ^ $383; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $385 = (__ZL6rotr32jj($384,8)|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $386 = ((($5)) + 60|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$386>>2] = $385; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $387 = ((($5)) + 40|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $388 = HEAP32[$387>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $389 = ((($5)) + 60|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $390 = HEAP32[$389>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $391 = (($388) + ($390))|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $392 = ((($5)) + 40|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$392>>2] = $391; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $393 = ((($5)) + 20|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $394 = HEAP32[$393>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $395 = ((($5)) + 40|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $396 = HEAP32[$395>>2]|0; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $397 = $394 ^ $396; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $398 = (__ZL6rotr32jj($397,7)|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $399 = ((($5)) + 20|0); //@line 118 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$399>>2] = $398; //@line 118 "./src/cpp/unrar/blake2s.cpp"
  $400 = ((($5)) + 4|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $401 = HEAP32[$400>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $402 = ((($5)) + 24|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $403 = HEAP32[$402>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $404 = (($401) + ($403))|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $405 = $8; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $406 = (5151 + ($405<<4)|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $407 = ((($406)) + 10|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $408 = HEAP8[$407>>0]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $409 = $408&255; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $410 = (($4) + ($409<<2)|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $411 = HEAP32[$410>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $412 = (($404) + ($411))|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $413 = ((($5)) + 4|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$413>>2] = $412; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $414 = ((($5)) + 48|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $415 = HEAP32[$414>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $416 = ((($5)) + 4|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $417 = HEAP32[$416>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $418 = $415 ^ $417; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $419 = (__ZL6rotr32jj($418,16)|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $420 = ((($5)) + 48|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$420>>2] = $419; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $421 = ((($5)) + 44|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $422 = HEAP32[$421>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $423 = ((($5)) + 48|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $424 = HEAP32[$423>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $425 = (($422) + ($424))|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $426 = ((($5)) + 44|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$426>>2] = $425; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $427 = ((($5)) + 24|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $428 = HEAP32[$427>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $429 = ((($5)) + 44|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $430 = HEAP32[$429>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $431 = $428 ^ $430; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $432 = (__ZL6rotr32jj($431,12)|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $433 = ((($5)) + 24|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$433>>2] = $432; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $434 = ((($5)) + 4|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $435 = HEAP32[$434>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $436 = ((($5)) + 24|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $437 = HEAP32[$436>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $438 = (($435) + ($437))|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $439 = $8; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $440 = (5151 + ($439<<4)|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $441 = ((($440)) + 11|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $442 = HEAP8[$441>>0]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $443 = $442&255; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $444 = (($4) + ($443<<2)|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $445 = HEAP32[$444>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $446 = (($438) + ($445))|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $447 = ((($5)) + 4|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$447>>2] = $446; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $448 = ((($5)) + 48|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $449 = HEAP32[$448>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $450 = ((($5)) + 4|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $451 = HEAP32[$450>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $452 = $449 ^ $451; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $453 = (__ZL6rotr32jj($452,8)|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $454 = ((($5)) + 48|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$454>>2] = $453; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $455 = ((($5)) + 44|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $456 = HEAP32[$455>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $457 = ((($5)) + 48|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $458 = HEAP32[$457>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $459 = (($456) + ($458))|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $460 = ((($5)) + 44|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$460>>2] = $459; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $461 = ((($5)) + 24|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $462 = HEAP32[$461>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $463 = ((($5)) + 44|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $464 = HEAP32[$463>>2]|0; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $465 = $462 ^ $464; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $466 = (__ZL6rotr32jj($465,7)|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $467 = ((($5)) + 24|0); //@line 119 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$467>>2] = $466; //@line 119 "./src/cpp/unrar/blake2s.cpp"
  $468 = ((($5)) + 8|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $469 = HEAP32[$468>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $470 = ((($5)) + 28|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $471 = HEAP32[$470>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $472 = (($469) + ($471))|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $473 = $8; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $474 = (5151 + ($473<<4)|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $475 = ((($474)) + 12|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $476 = HEAP8[$475>>0]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $477 = $476&255; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $478 = (($4) + ($477<<2)|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $479 = HEAP32[$478>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $480 = (($472) + ($479))|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $481 = ((($5)) + 8|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$481>>2] = $480; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $482 = ((($5)) + 52|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $483 = HEAP32[$482>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $484 = ((($5)) + 8|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $485 = HEAP32[$484>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $486 = $483 ^ $485; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $487 = (__ZL6rotr32jj($486,16)|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $488 = ((($5)) + 52|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$488>>2] = $487; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $489 = ((($5)) + 32|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $490 = HEAP32[$489>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $491 = ((($5)) + 52|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $492 = HEAP32[$491>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $493 = (($490) + ($492))|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $494 = ((($5)) + 32|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$494>>2] = $493; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $495 = ((($5)) + 28|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $496 = HEAP32[$495>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $497 = ((($5)) + 32|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $498 = HEAP32[$497>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $499 = $496 ^ $498; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $500 = (__ZL6rotr32jj($499,12)|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $501 = ((($5)) + 28|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$501>>2] = $500; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $502 = ((($5)) + 8|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $503 = HEAP32[$502>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $504 = ((($5)) + 28|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $505 = HEAP32[$504>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $506 = (($503) + ($505))|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $507 = $8; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $508 = (5151 + ($507<<4)|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $509 = ((($508)) + 13|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $510 = HEAP8[$509>>0]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $511 = $510&255; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $512 = (($4) + ($511<<2)|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $513 = HEAP32[$512>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $514 = (($506) + ($513))|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $515 = ((($5)) + 8|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$515>>2] = $514; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $516 = ((($5)) + 52|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $517 = HEAP32[$516>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $518 = ((($5)) + 8|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $519 = HEAP32[$518>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $520 = $517 ^ $519; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $521 = (__ZL6rotr32jj($520,8)|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $522 = ((($5)) + 52|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$522>>2] = $521; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $523 = ((($5)) + 32|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $524 = HEAP32[$523>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $525 = ((($5)) + 52|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $526 = HEAP32[$525>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $527 = (($524) + ($526))|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $528 = ((($5)) + 32|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$528>>2] = $527; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $529 = ((($5)) + 28|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $530 = HEAP32[$529>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $531 = ((($5)) + 32|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $532 = HEAP32[$531>>2]|0; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $533 = $530 ^ $532; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $534 = (__ZL6rotr32jj($533,7)|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $535 = ((($5)) + 28|0); //@line 120 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$535>>2] = $534; //@line 120 "./src/cpp/unrar/blake2s.cpp"
  $536 = ((($5)) + 12|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $537 = HEAP32[$536>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $538 = ((($5)) + 16|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $539 = HEAP32[$538>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $540 = (($537) + ($539))|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $541 = $8; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $542 = (5151 + ($541<<4)|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $543 = ((($542)) + 14|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $544 = HEAP8[$543>>0]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $545 = $544&255; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $546 = (($4) + ($545<<2)|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $547 = HEAP32[$546>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $548 = (($540) + ($547))|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $549 = ((($5)) + 12|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$549>>2] = $548; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $550 = ((($5)) + 56|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $551 = HEAP32[$550>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $552 = ((($5)) + 12|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $553 = HEAP32[$552>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $554 = $551 ^ $553; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $555 = (__ZL6rotr32jj($554,16)|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $556 = ((($5)) + 56|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$556>>2] = $555; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $557 = ((($5)) + 36|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $558 = HEAP32[$557>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $559 = ((($5)) + 56|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $560 = HEAP32[$559>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $561 = (($558) + ($560))|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $562 = ((($5)) + 36|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$562>>2] = $561; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $563 = ((($5)) + 16|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $564 = HEAP32[$563>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $565 = ((($5)) + 36|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $566 = HEAP32[$565>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $567 = $564 ^ $566; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $568 = (__ZL6rotr32jj($567,12)|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $569 = ((($5)) + 16|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$569>>2] = $568; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $570 = ((($5)) + 12|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $571 = HEAP32[$570>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $572 = ((($5)) + 16|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $573 = HEAP32[$572>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $574 = (($571) + ($573))|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $575 = $8; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $576 = (5151 + ($575<<4)|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $577 = ((($576)) + 15|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $578 = HEAP8[$577>>0]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $579 = $578&255; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $580 = (($4) + ($579<<2)|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $581 = HEAP32[$580>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $582 = (($574) + ($581))|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $583 = ((($5)) + 12|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$583>>2] = $582; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $584 = ((($5)) + 56|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $585 = HEAP32[$584>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $586 = ((($5)) + 12|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $587 = HEAP32[$586>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $588 = $585 ^ $587; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $589 = (__ZL6rotr32jj($588,8)|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $590 = ((($5)) + 56|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$590>>2] = $589; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $591 = ((($5)) + 36|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $592 = HEAP32[$591>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $593 = ((($5)) + 56|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $594 = HEAP32[$593>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $595 = (($592) + ($594))|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $596 = ((($5)) + 36|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$596>>2] = $595; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $597 = ((($5)) + 16|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $598 = HEAP32[$597>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $599 = ((($5)) + 36|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $600 = HEAP32[$599>>2]|0; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $601 = $598 ^ $600; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $602 = (__ZL6rotr32jj($601,7)|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $603 = ((($5)) + 16|0); //@line 121 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$603>>2] = $602; //@line 121 "./src/cpp/unrar/blake2s.cpp"
  $604 = $8; //@line 112 "./src/cpp/unrar/blake2s.cpp"
  $605 = (($604) + 1)|0; //@line 112 "./src/cpp/unrar/blake2s.cpp"
  $8 = $605; //@line 112 "./src/cpp/unrar/blake2s.cpp"
 }
 $9 = 0; //@line 124 "./src/cpp/unrar/blake2s.cpp"
 while(1) {
  $606 = $9; //@line 124 "./src/cpp/unrar/blake2s.cpp"
  $607 = ($606>>>0)<(8); //@line 124 "./src/cpp/unrar/blake2s.cpp"
  if (!($607)) {
   break;
  }
  $608 = $2; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $609 = ((($608)) + 244|0); //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $610 = HEAP32[$609>>2]|0; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $611 = $9; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $612 = (($610) + ($611<<2)|0); //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $613 = HEAP32[$612>>2]|0; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $614 = $9; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $615 = (($5) + ($614<<2)|0); //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $616 = HEAP32[$615>>2]|0; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $617 = $613 ^ $616; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $618 = $9; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $619 = (($618) + 8)|0; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $620 = (($5) + ($619<<2)|0); //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $621 = HEAP32[$620>>2]|0; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $622 = $617 ^ $621; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $623 = $2; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $624 = ((($623)) + 244|0); //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $625 = HEAP32[$624>>2]|0; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $626 = $9; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $627 = (($625) + ($626<<2)|0); //@line 125 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$627>>2] = $622; //@line 125 "./src/cpp/unrar/blake2s.cpp"
  $628 = $9; //@line 124 "./src/cpp/unrar/blake2s.cpp"
  $629 = (($628) + 1)|0; //@line 124 "./src/cpp/unrar/blake2s.cpp"
  $9 = $629; //@line 124 "./src/cpp/unrar/blake2s.cpp"
 }
 STACKTOP = sp;return; //@line 126 "./src/cpp/unrar/blake2s.cpp"
}
function __Z7RawGet4PKv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 53 "./src/cpp/unrar/rawread.hpp"
 $2 = $3; //@line 53 "./src/cpp/unrar/rawread.hpp"
 $4 = $2; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $5 = HEAP8[$4>>0]|0; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $6 = $5&255; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $7 = $2; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $8 = ((($7)) + 1|0); //@line 55 "./src/cpp/unrar/rawread.hpp"
 $9 = HEAP8[$8>>0]|0; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $10 = $9&255; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $11 = $10 << 8; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $12 = (($6) + ($11))|0; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $13 = $2; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $14 = ((($13)) + 2|0); //@line 55 "./src/cpp/unrar/rawread.hpp"
 $15 = HEAP8[$14>>0]|0; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $16 = $15&255; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $17 = $16 << 16; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $18 = (($12) + ($17))|0; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $19 = $2; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $20 = ((($19)) + 3|0); //@line 55 "./src/cpp/unrar/rawread.hpp"
 $21 = HEAP8[$20>>0]|0; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $22 = $21&255; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $23 = $22 << 24; //@line 55 "./src/cpp/unrar/rawread.hpp"
 $24 = (($18) + ($23))|0; //@line 55 "./src/cpp/unrar/rawread.hpp"
 STACKTOP = sp;return ($24|0); //@line 55 "./src/cpp/unrar/rawread.hpp"
}
function __ZL6rotr32jj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 77 "./src/cpp/unrar/blake2s.cpp"
 $5 = $3; //@line 77 "./src/cpp/unrar/blake2s.cpp"
 $6 = $4 >>> $5; //@line 77 "./src/cpp/unrar/blake2s.cpp"
 $7 = $2; //@line 77 "./src/cpp/unrar/blake2s.cpp"
 $8 = $3; //@line 77 "./src/cpp/unrar/blake2s.cpp"
 $9 = (32 - ($8))|0; //@line 77 "./src/cpp/unrar/blake2s.cpp"
 $10 = $7 << $9; //@line 77 "./src/cpp/unrar/blake2s.cpp"
 $11 = $6 | $10; //@line 77 "./src/cpp/unrar/blake2s.cpp"
 STACKTOP = sp;return ($11|0); //@line 77 "./src/cpp/unrar/blake2s.cpp"
}
function __Z15blake2sp_updateP14blake2sp_statePKhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $9 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $14 = $3; //@line 69 "./src/cpp/unrar/blake2sp.cpp"
 $15 = ((($14)) + 2888|0); //@line 69 "./src/cpp/unrar/blake2sp.cpp"
 $16 = HEAP32[$15>>2]|0; //@line 69 "./src/cpp/unrar/blake2sp.cpp"
 $6 = $16; //@line 69 "./src/cpp/unrar/blake2sp.cpp"
 $17 = $6; //@line 70 "./src/cpp/unrar/blake2sp.cpp"
 $18 = (512 - ($17))|0; //@line 70 "./src/cpp/unrar/blake2sp.cpp"
 $7 = $18; //@line 70 "./src/cpp/unrar/blake2sp.cpp"
 $19 = $6; //@line 72 "./src/cpp/unrar/blake2sp.cpp"
 $20 = ($19|0)!=(0); //@line 72 "./src/cpp/unrar/blake2sp.cpp"
 if ($20) {
  $21 = $5; //@line 72 "./src/cpp/unrar/blake2sp.cpp"
  $22 = $7; //@line 72 "./src/cpp/unrar/blake2sp.cpp"
  $23 = ($21>>>0)>=($22>>>0); //@line 72 "./src/cpp/unrar/blake2sp.cpp"
  if ($23) {
   $24 = $3; //@line 74 "./src/cpp/unrar/blake2sp.cpp"
   $25 = ((($24)) + 2376|0); //@line 74 "./src/cpp/unrar/blake2sp.cpp"
   $26 = $6; //@line 74 "./src/cpp/unrar/blake2sp.cpp"
   $27 = (($25) + ($26)|0); //@line 74 "./src/cpp/unrar/blake2sp.cpp"
   $28 = $4; //@line 74 "./src/cpp/unrar/blake2sp.cpp"
   $29 = $7; //@line 74 "./src/cpp/unrar/blake2sp.cpp"
   _memcpy(($27|0),($28|0),($29|0))|0; //@line 74 "./src/cpp/unrar/blake2sp.cpp"
   $8 = 0; //@line 76 "./src/cpp/unrar/blake2sp.cpp"
   while(1) {
    $30 = $8; //@line 76 "./src/cpp/unrar/blake2sp.cpp"
    $31 = ($30>>>0)<(8); //@line 76 "./src/cpp/unrar/blake2sp.cpp"
    if (!($31)) {
     break;
    }
    $32 = $3; //@line 77 "./src/cpp/unrar/blake2sp.cpp"
    $33 = $8; //@line 77 "./src/cpp/unrar/blake2sp.cpp"
    $34 = (($32) + (($33*264)|0)|0); //@line 77 "./src/cpp/unrar/blake2sp.cpp"
    $35 = $3; //@line 77 "./src/cpp/unrar/blake2sp.cpp"
    $36 = ((($35)) + 2376|0); //@line 77 "./src/cpp/unrar/blake2sp.cpp"
    $37 = $8; //@line 77 "./src/cpp/unrar/blake2sp.cpp"
    $38 = $37<<6; //@line 77 "./src/cpp/unrar/blake2sp.cpp"
    $39 = (($36) + ($38)|0); //@line 77 "./src/cpp/unrar/blake2sp.cpp"
    __ZL14blake2s_updateP13blake2s_statePKhj($34,$39,64); //@line 77 "./src/cpp/unrar/blake2sp.cpp"
    $40 = $8; //@line 76 "./src/cpp/unrar/blake2sp.cpp"
    $41 = (($40) + 1)|0; //@line 76 "./src/cpp/unrar/blake2sp.cpp"
    $8 = $41; //@line 76 "./src/cpp/unrar/blake2sp.cpp"
   }
   $42 = $7; //@line 79 "./src/cpp/unrar/blake2sp.cpp"
   $43 = $4; //@line 79 "./src/cpp/unrar/blake2sp.cpp"
   $44 = (($43) + ($42)|0); //@line 79 "./src/cpp/unrar/blake2sp.cpp"
   $4 = $44; //@line 79 "./src/cpp/unrar/blake2sp.cpp"
   $45 = $7; //@line 80 "./src/cpp/unrar/blake2sp.cpp"
   $46 = $5; //@line 80 "./src/cpp/unrar/blake2sp.cpp"
   $47 = (($46) - ($45))|0; //@line 80 "./src/cpp/unrar/blake2sp.cpp"
   $5 = $47; //@line 80 "./src/cpp/unrar/blake2sp.cpp"
   $6 = 0; //@line 81 "./src/cpp/unrar/blake2sp.cpp"
  }
 }
 $10 = 1; //@line 92 "./src/cpp/unrar/blake2sp.cpp"
 $11 = 0; //@line 95 "./src/cpp/unrar/blake2sp.cpp"
 L9: while(1) {
  $48 = $11; //@line 95 "./src/cpp/unrar/blake2sp.cpp"
  $49 = ($48>>>0)<(8); //@line 95 "./src/cpp/unrar/blake2sp.cpp"
  if (!($49)) {
   break;
  }
  $12 = 0; //@line 97 "./src/cpp/unrar/blake2sp.cpp"
  while(1) {
   $50 = $12; //@line 97 "./src/cpp/unrar/blake2sp.cpp"
   $51 = $10; //@line 97 "./src/cpp/unrar/blake2sp.cpp"
   $52 = ($50>>>0)<($51>>>0); //@line 97 "./src/cpp/unrar/blake2sp.cpp"
   $53 = $11; //@line 97 "./src/cpp/unrar/blake2sp.cpp"
   $54 = ($53>>>0)<(8); //@line 97 "./src/cpp/unrar/blake2sp.cpp"
   $55 = $52 ? $54 : 0; //@line 97 "./src/cpp/unrar/blake2sp.cpp"
   if (!($55)) {
    continue L9;
   }
   $56 = $12; //@line 99 "./src/cpp/unrar/blake2sp.cpp"
   $57 = (($9) + (($56*12)|0)|0); //@line 99 "./src/cpp/unrar/blake2sp.cpp"
   $13 = $57; //@line 99 "./src/cpp/unrar/blake2sp.cpp"
   $58 = $5; //@line 101 "./src/cpp/unrar/blake2sp.cpp"
   $59 = $13; //@line 101 "./src/cpp/unrar/blake2sp.cpp"
   $60 = ((($59)) + 8|0); //@line 101 "./src/cpp/unrar/blake2sp.cpp"
   HEAP32[$60>>2] = $58; //@line 101 "./src/cpp/unrar/blake2sp.cpp"
   $61 = $4; //@line 102 "./src/cpp/unrar/blake2sp.cpp"
   $62 = $11; //@line 102 "./src/cpp/unrar/blake2sp.cpp"
   $63 = $62<<6; //@line 102 "./src/cpp/unrar/blake2sp.cpp"
   $64 = (($61) + ($63)|0); //@line 102 "./src/cpp/unrar/blake2sp.cpp"
   $65 = $13; //@line 102 "./src/cpp/unrar/blake2sp.cpp"
   $66 = ((($65)) + 4|0); //@line 102 "./src/cpp/unrar/blake2sp.cpp"
   HEAP32[$66>>2] = $64; //@line 102 "./src/cpp/unrar/blake2sp.cpp"
   $67 = $3; //@line 103 "./src/cpp/unrar/blake2sp.cpp"
   $68 = $11; //@line 103 "./src/cpp/unrar/blake2sp.cpp"
   $69 = (($67) + (($68*264)|0)|0); //@line 103 "./src/cpp/unrar/blake2sp.cpp"
   $70 = $13; //@line 103 "./src/cpp/unrar/blake2sp.cpp"
   HEAP32[$70>>2] = $69; //@line 103 "./src/cpp/unrar/blake2sp.cpp"
   $71 = $13; //@line 111 "./src/cpp/unrar/blake2sp.cpp"
   __ZN16Blake2ThreadData6UpdateEv($71); //@line 111 "./src/cpp/unrar/blake2sp.cpp"
   $72 = $11; //@line 113 "./src/cpp/unrar/blake2sp.cpp"
   $73 = (($72) + 1)|0; //@line 113 "./src/cpp/unrar/blake2sp.cpp"
   $11 = $73; //@line 113 "./src/cpp/unrar/blake2sp.cpp"
   $74 = $12; //@line 97 "./src/cpp/unrar/blake2sp.cpp"
   $75 = (($74) + 1)|0; //@line 97 "./src/cpp/unrar/blake2sp.cpp"
   $12 = $75; //@line 97 "./src/cpp/unrar/blake2sp.cpp"
  }
 }
 $76 = $5; //@line 121 "./src/cpp/unrar/blake2sp.cpp"
 $77 = $5; //@line 121 "./src/cpp/unrar/blake2sp.cpp"
 $78 = (($77>>>0) % 512)&-1; //@line 121 "./src/cpp/unrar/blake2sp.cpp"
 $79 = (($76) - ($78))|0; //@line 121 "./src/cpp/unrar/blake2sp.cpp"
 $80 = $4; //@line 121 "./src/cpp/unrar/blake2sp.cpp"
 $81 = (($80) + ($79)|0); //@line 121 "./src/cpp/unrar/blake2sp.cpp"
 $4 = $81; //@line 121 "./src/cpp/unrar/blake2sp.cpp"
 $82 = $5; //@line 122 "./src/cpp/unrar/blake2sp.cpp"
 $83 = (($82>>>0) % 512)&-1; //@line 122 "./src/cpp/unrar/blake2sp.cpp"
 $5 = $83; //@line 122 "./src/cpp/unrar/blake2sp.cpp"
 $84 = $5; //@line 124 "./src/cpp/unrar/blake2sp.cpp"
 $85 = ($84>>>0)>(0); //@line 124 "./src/cpp/unrar/blake2sp.cpp"
 if (!($85)) {
  $92 = $6; //@line 127 "./src/cpp/unrar/blake2sp.cpp"
  $93 = $5; //@line 127 "./src/cpp/unrar/blake2sp.cpp"
  $94 = (($92) + ($93))|0; //@line 127 "./src/cpp/unrar/blake2sp.cpp"
  $95 = $3; //@line 127 "./src/cpp/unrar/blake2sp.cpp"
  $96 = ((($95)) + 2888|0); //@line 127 "./src/cpp/unrar/blake2sp.cpp"
  HEAP32[$96>>2] = $94; //@line 127 "./src/cpp/unrar/blake2sp.cpp"
  STACKTOP = sp;return; //@line 128 "./src/cpp/unrar/blake2sp.cpp"
 }
 $86 = $3; //@line 125 "./src/cpp/unrar/blake2sp.cpp"
 $87 = ((($86)) + 2376|0); //@line 125 "./src/cpp/unrar/blake2sp.cpp"
 $88 = $6; //@line 125 "./src/cpp/unrar/blake2sp.cpp"
 $89 = (($87) + ($88)|0); //@line 125 "./src/cpp/unrar/blake2sp.cpp"
 $90 = $4; //@line 125 "./src/cpp/unrar/blake2sp.cpp"
 $91 = $5; //@line 125 "./src/cpp/unrar/blake2sp.cpp"
 _memcpy(($89|0),($90|0),($91|0))|0; //@line 125 "./src/cpp/unrar/blake2sp.cpp"
 $92 = $6; //@line 127 "./src/cpp/unrar/blake2sp.cpp"
 $93 = $5; //@line 127 "./src/cpp/unrar/blake2sp.cpp"
 $94 = (($92) + ($93))|0; //@line 127 "./src/cpp/unrar/blake2sp.cpp"
 $95 = $3; //@line 127 "./src/cpp/unrar/blake2sp.cpp"
 $96 = ((($95)) + 2888|0); //@line 127 "./src/cpp/unrar/blake2sp.cpp"
 HEAP32[$96>>2] = $94; //@line 127 "./src/cpp/unrar/blake2sp.cpp"
 STACKTOP = sp;return; //@line 128 "./src/cpp/unrar/blake2sp.cpp"
}
function __Z14blake2sp_finalP14blake2sp_statePh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(288|0);
 $4 = sp + 24|0;
 $2 = $0;
 $3 = $1;
 $5 = 0; //@line 135 "./src/cpp/unrar/blake2sp.cpp"
 while(1) {
  $8 = $5; //@line 135 "./src/cpp/unrar/blake2sp.cpp"
  $9 = ($8>>>0)<(8); //@line 135 "./src/cpp/unrar/blake2sp.cpp"
  if (!($9)) {
   break;
  }
  $10 = $2; //@line 137 "./src/cpp/unrar/blake2sp.cpp"
  $11 = ((($10)) + 2888|0); //@line 137 "./src/cpp/unrar/blake2sp.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 137 "./src/cpp/unrar/blake2sp.cpp"
  $13 = $5; //@line 137 "./src/cpp/unrar/blake2sp.cpp"
  $14 = $13<<6; //@line 137 "./src/cpp/unrar/blake2sp.cpp"
  $15 = ($12>>>0)>($14>>>0); //@line 137 "./src/cpp/unrar/blake2sp.cpp"
  if ($15) {
   $16 = $2; //@line 139 "./src/cpp/unrar/blake2sp.cpp"
   $17 = ((($16)) + 2888|0); //@line 139 "./src/cpp/unrar/blake2sp.cpp"
   $18 = HEAP32[$17>>2]|0; //@line 139 "./src/cpp/unrar/blake2sp.cpp"
   $19 = $5; //@line 139 "./src/cpp/unrar/blake2sp.cpp"
   $20 = $19<<6; //@line 139 "./src/cpp/unrar/blake2sp.cpp"
   $21 = (($18) - ($20))|0; //@line 139 "./src/cpp/unrar/blake2sp.cpp"
   $6 = $21; //@line 139 "./src/cpp/unrar/blake2sp.cpp"
   $22 = $6; //@line 141 "./src/cpp/unrar/blake2sp.cpp"
   $23 = ($22>>>0)>(64); //@line 141 "./src/cpp/unrar/blake2sp.cpp"
   $$ = $23 ? 64 : $21; //@line 141 "./src/cpp/unrar/blake2sp.cpp"
   $6 = $$;
   $24 = $2; //@line 143 "./src/cpp/unrar/blake2sp.cpp"
   $25 = $5; //@line 143 "./src/cpp/unrar/blake2sp.cpp"
   $26 = (($24) + (($25*264)|0)|0); //@line 143 "./src/cpp/unrar/blake2sp.cpp"
   $27 = $2; //@line 143 "./src/cpp/unrar/blake2sp.cpp"
   $28 = ((($27)) + 2376|0); //@line 143 "./src/cpp/unrar/blake2sp.cpp"
   $29 = $5; //@line 143 "./src/cpp/unrar/blake2sp.cpp"
   $30 = $29<<6; //@line 143 "./src/cpp/unrar/blake2sp.cpp"
   $31 = (($28) + ($30)|0); //@line 143 "./src/cpp/unrar/blake2sp.cpp"
   $32 = $6; //@line 143 "./src/cpp/unrar/blake2sp.cpp"
   __ZL14blake2s_updateP13blake2s_statePKhj($26,$31,$32); //@line 143 "./src/cpp/unrar/blake2sp.cpp"
  }
  $33 = $2; //@line 146 "./src/cpp/unrar/blake2sp.cpp"
  $34 = $5; //@line 146 "./src/cpp/unrar/blake2sp.cpp"
  $35 = (($33) + (($34*264)|0)|0); //@line 146 "./src/cpp/unrar/blake2sp.cpp"
  $36 = $5; //@line 146 "./src/cpp/unrar/blake2sp.cpp"
  $37 = (($4) + ($36<<5)|0); //@line 146 "./src/cpp/unrar/blake2sp.cpp"
  __ZL13blake2s_finalP13blake2s_statePh($35,$37); //@line 146 "./src/cpp/unrar/blake2sp.cpp"
  $38 = $5; //@line 135 "./src/cpp/unrar/blake2sp.cpp"
  $39 = (($38) + 1)|0; //@line 135 "./src/cpp/unrar/blake2sp.cpp"
  $5 = $39; //@line 135 "./src/cpp/unrar/blake2sp.cpp"
 }
 $7 = 0; //@line 149 "./src/cpp/unrar/blake2sp.cpp"
 while(1) {
  $40 = $7; //@line 149 "./src/cpp/unrar/blake2sp.cpp"
  $41 = ($40>>>0)<(8); //@line 149 "./src/cpp/unrar/blake2sp.cpp"
  $42 = $2;
  $43 = ((($42)) + 2112|0);
  if (!($41)) {
   break;
  }
  $44 = $7; //@line 150 "./src/cpp/unrar/blake2sp.cpp"
  $45 = (($4) + ($44<<5)|0); //@line 150 "./src/cpp/unrar/blake2sp.cpp"
  __ZL14blake2s_updateP13blake2s_statePKhj($43,$45,32); //@line 150 "./src/cpp/unrar/blake2sp.cpp"
  $46 = $7; //@line 149 "./src/cpp/unrar/blake2sp.cpp"
  $47 = (($46) + 1)|0; //@line 149 "./src/cpp/unrar/blake2sp.cpp"
  $7 = $47; //@line 149 "./src/cpp/unrar/blake2sp.cpp"
 }
 $48 = $3; //@line 152 "./src/cpp/unrar/blake2sp.cpp"
 __ZL13blake2s_finalP13blake2s_statePh($43,$48); //@line 152 "./src/cpp/unrar/blake2sp.cpp"
 STACKTOP = sp;return; //@line 153 "./src/cpp/unrar/blake2sp.cpp"
}
function __ZL13blake2s_finalP13blake2s_statePh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 173 "./src/cpp/unrar/blake2s.cpp"
 $6 = ((($5)) + 256|0); //@line 173 "./src/cpp/unrar/blake2s.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 173 "./src/cpp/unrar/blake2s.cpp"
 $8 = ($7>>>0)>(64); //@line 173 "./src/cpp/unrar/blake2s.cpp"
 if ($8) {
  $9 = $2; //@line 175 "./src/cpp/unrar/blake2s.cpp"
  __ZL25blake2s_increment_counterP13blake2s_statej($9,64); //@line 175 "./src/cpp/unrar/blake2s.cpp"
  $10 = $2; //@line 176 "./src/cpp/unrar/blake2s.cpp"
  $11 = $2; //@line 176 "./src/cpp/unrar/blake2s.cpp"
  $12 = ((($11)) + 240|0); //@line 176 "./src/cpp/unrar/blake2s.cpp"
  $13 = HEAP32[$12>>2]|0; //@line 176 "./src/cpp/unrar/blake2s.cpp"
  __ZL16blake2s_compressP13blake2s_statePKh($10,$13); //@line 176 "./src/cpp/unrar/blake2s.cpp"
  $14 = $2; //@line 177 "./src/cpp/unrar/blake2s.cpp"
  $15 = ((($14)) + 256|0); //@line 177 "./src/cpp/unrar/blake2s.cpp"
  $16 = HEAP32[$15>>2]|0; //@line 177 "./src/cpp/unrar/blake2s.cpp"
  $17 = (($16) - 64)|0; //@line 177 "./src/cpp/unrar/blake2s.cpp"
  HEAP32[$15>>2] = $17; //@line 177 "./src/cpp/unrar/blake2s.cpp"
  $18 = $2; //@line 178 "./src/cpp/unrar/blake2s.cpp"
  $19 = ((($18)) + 240|0); //@line 178 "./src/cpp/unrar/blake2s.cpp"
  $20 = HEAP32[$19>>2]|0; //@line 178 "./src/cpp/unrar/blake2s.cpp"
  $21 = $2; //@line 178 "./src/cpp/unrar/blake2s.cpp"
  $22 = ((($21)) + 240|0); //@line 178 "./src/cpp/unrar/blake2s.cpp"
  $23 = HEAP32[$22>>2]|0; //@line 178 "./src/cpp/unrar/blake2s.cpp"
  $24 = ((($23)) + 64|0); //@line 178 "./src/cpp/unrar/blake2s.cpp"
  $25 = $2; //@line 178 "./src/cpp/unrar/blake2s.cpp"
  $26 = ((($25)) + 256|0); //@line 178 "./src/cpp/unrar/blake2s.cpp"
  $27 = HEAP32[$26>>2]|0; //@line 178 "./src/cpp/unrar/blake2s.cpp"
  _memcpy(($20|0),($24|0),($27|0))|0; //@line 178 "./src/cpp/unrar/blake2s.cpp"
 }
 $28 = $2; //@line 181 "./src/cpp/unrar/blake2s.cpp"
 $29 = $2; //@line 181 "./src/cpp/unrar/blake2s.cpp"
 $30 = ((($29)) + 256|0); //@line 181 "./src/cpp/unrar/blake2s.cpp"
 $31 = HEAP32[$30>>2]|0; //@line 181 "./src/cpp/unrar/blake2s.cpp"
 __ZL25blake2s_increment_counterP13blake2s_statej($28,$31); //@line 181 "./src/cpp/unrar/blake2s.cpp"
 $32 = $2; //@line 182 "./src/cpp/unrar/blake2s.cpp"
 __ZL21blake2s_set_lastblockP13blake2s_state($32); //@line 182 "./src/cpp/unrar/blake2s.cpp"
 $33 = $2; //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $34 = ((($33)) + 240|0); //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $36 = $2; //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $37 = ((($36)) + 256|0); //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $38 = HEAP32[$37>>2]|0; //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $39 = (($35) + ($38)|0); //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $40 = $2; //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $41 = ((($40)) + 256|0); //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $42 = HEAP32[$41>>2]|0; //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $43 = (128 - ($42))|0; //@line 183 "./src/cpp/unrar/blake2s.cpp"
 _memset(($39|0),0,($43|0))|0; //@line 183 "./src/cpp/unrar/blake2s.cpp"
 $44 = $2; //@line 184 "./src/cpp/unrar/blake2s.cpp"
 $45 = $2; //@line 184 "./src/cpp/unrar/blake2s.cpp"
 $46 = ((($45)) + 240|0); //@line 184 "./src/cpp/unrar/blake2s.cpp"
 $47 = HEAP32[$46>>2]|0; //@line 184 "./src/cpp/unrar/blake2s.cpp"
 __ZL16blake2s_compressP13blake2s_statePKh($44,$47); //@line 184 "./src/cpp/unrar/blake2s.cpp"
 $4 = 0; //@line 186 "./src/cpp/unrar/blake2s.cpp"
 while(1) {
  $48 = $4; //@line 186 "./src/cpp/unrar/blake2s.cpp"
  $49 = ($48|0)<(8); //@line 186 "./src/cpp/unrar/blake2s.cpp"
  if (!($49)) {
   break;
  }
  $50 = $2; //@line 187 "./src/cpp/unrar/blake2s.cpp"
  $51 = ((($50)) + 244|0); //@line 187 "./src/cpp/unrar/blake2s.cpp"
  $52 = HEAP32[$51>>2]|0; //@line 187 "./src/cpp/unrar/blake2s.cpp"
  $53 = $4; //@line 187 "./src/cpp/unrar/blake2s.cpp"
  $54 = (($52) + ($53<<2)|0); //@line 187 "./src/cpp/unrar/blake2s.cpp"
  $55 = HEAP32[$54>>2]|0; //@line 187 "./src/cpp/unrar/blake2s.cpp"
  $56 = $3; //@line 187 "./src/cpp/unrar/blake2s.cpp"
  $57 = $4; //@line 187 "./src/cpp/unrar/blake2s.cpp"
  $58 = $57<<2; //@line 187 "./src/cpp/unrar/blake2s.cpp"
  $59 = (($56) + ($58)|0); //@line 187 "./src/cpp/unrar/blake2s.cpp"
  __Z7RawPut4jPv($55,$59); //@line 187 "./src/cpp/unrar/blake2s.cpp"
  $60 = $4; //@line 186 "./src/cpp/unrar/blake2s.cpp"
  $61 = (($60) + 1)|0; //@line 186 "./src/cpp/unrar/blake2s.cpp"
  $4 = $61; //@line 186 "./src/cpp/unrar/blake2s.cpp"
 }
 STACKTOP = sp;return; //@line 188 "./src/cpp/unrar/blake2s.cpp"
}
function __ZL21blake2s_set_lastblockP13blake2s_state($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 44 "./src/cpp/unrar/blake2s.cpp"
 $3 = ((($2)) + 260|0); //@line 44 "./src/cpp/unrar/blake2s.cpp"
 $4 = HEAP8[$3>>0]|0; //@line 44 "./src/cpp/unrar/blake2s.cpp"
 $5 = ($4<<24>>24)!=(0); //@line 44 "./src/cpp/unrar/blake2s.cpp"
 if ($5) {
  $6 = $1; //@line 44 "./src/cpp/unrar/blake2s.cpp"
  __ZL20blake2s_set_lastnodeP13blake2s_state($6); //@line 44 "./src/cpp/unrar/blake2s.cpp"
 }
 $7 = $1; //@line 46 "./src/cpp/unrar/blake2s.cpp"
 $8 = ((($7)) + 252|0); //@line 46 "./src/cpp/unrar/blake2s.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 46 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$9>>2] = -1; //@line 46 "./src/cpp/unrar/blake2s.cpp"
 STACKTOP = sp;return; //@line 47 "./src/cpp/unrar/blake2s.cpp"
}
function __ZL20blake2s_set_lastnodeP13blake2s_state($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 37 "./src/cpp/unrar/blake2s.cpp"
 $3 = ((($2)) + 252|0); //@line 37 "./src/cpp/unrar/blake2s.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 37 "./src/cpp/unrar/blake2s.cpp"
 $5 = ((($4)) + 4|0); //@line 37 "./src/cpp/unrar/blake2s.cpp"
 HEAP32[$5>>2] = -1; //@line 37 "./src/cpp/unrar/blake2s.cpp"
 STACKTOP = sp;return; //@line 38 "./src/cpp/unrar/blake2s.cpp"
}
function __ZN9HashValue4InitE9HASH_TYPE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 5 "./src/cpp/unrar/hash.cpp"
 HEAP32[$4>>2] = $5; //@line 5 "./src/cpp/unrar/hash.cpp"
 $6 = $3; //@line 9 "./src/cpp/unrar/hash.cpp"
 $7 = ($6|0)==(1); //@line 9 "./src/cpp/unrar/hash.cpp"
 $8 = $3; //@line 9 "./src/cpp/unrar/hash.cpp"
 $9 = ($8|0)==(2); //@line 9 "./src/cpp/unrar/hash.cpp"
 $or$cond = $7 | $9; //@line 9 "./src/cpp/unrar/hash.cpp"
 if ($or$cond) {
  $10 = ((($4)) + 4|0); //@line 10 "./src/cpp/unrar/hash.cpp"
  HEAP32[$10>>2] = 0; //@line 10 "./src/cpp/unrar/hash.cpp"
 }
 $11 = $3; //@line 11 "./src/cpp/unrar/hash.cpp"
 $12 = ($11|0)==(3); //@line 11 "./src/cpp/unrar/hash.cpp"
 if (!($12)) {
  STACKTOP = sp;return; //@line 26 "./src/cpp/unrar/hash.cpp"
 }
 $13 = ((($4)) + 4|0); //@line 24 "./src/cpp/unrar/hash.cpp"
 dest=$13; src=5311; stop=dest+32|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 24 "./src/cpp/unrar/hash.cpp"
 STACKTOP = sp;return; //@line 26 "./src/cpp/unrar/hash.cpp"
}
function __ZN9HashValueeqERKS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0; //@line 31 "./src/cpp/unrar/hash.cpp"
 $7 = ($6|0)==(0); //@line 31 "./src/cpp/unrar/hash.cpp"
 L1: do {
  if ($7) {
   label = 3;
  } else {
   $8 = $4; //@line 31 "./src/cpp/unrar/hash.cpp"
   $9 = HEAP32[$8>>2]|0; //@line 31 "./src/cpp/unrar/hash.cpp"
   $10 = ($9|0)==(0); //@line 31 "./src/cpp/unrar/hash.cpp"
   if ($10) {
    label = 3;
   } else {
    $11 = HEAP32[$5>>2]|0; //@line 33 "./src/cpp/unrar/hash.cpp"
    $12 = ($11|0)==(1); //@line 33 "./src/cpp/unrar/hash.cpp"
    if ($12) {
     $13 = $4; //@line 33 "./src/cpp/unrar/hash.cpp"
     $14 = HEAP32[$13>>2]|0; //@line 33 "./src/cpp/unrar/hash.cpp"
     $15 = ($14|0)==(1); //@line 33 "./src/cpp/unrar/hash.cpp"
     if (!($15)) {
      label = 6;
     }
    } else {
     label = 6;
    }
    do {
     if ((label|0) == 6) {
      $16 = HEAP32[$5>>2]|0; //@line 34 "./src/cpp/unrar/hash.cpp"
      $17 = ($16|0)==(2); //@line 34 "./src/cpp/unrar/hash.cpp"
      if ($17) {
       $18 = $4; //@line 34 "./src/cpp/unrar/hash.cpp"
       $19 = HEAP32[$18>>2]|0; //@line 34 "./src/cpp/unrar/hash.cpp"
       $20 = ($19|0)==(2); //@line 34 "./src/cpp/unrar/hash.cpp"
       if ($20) {
        break;
       }
      }
      $27 = HEAP32[$5>>2]|0; //@line 36 "./src/cpp/unrar/hash.cpp"
      $28 = ($27|0)==(3); //@line 36 "./src/cpp/unrar/hash.cpp"
      if ($28) {
       $29 = $4; //@line 36 "./src/cpp/unrar/hash.cpp"
       $30 = HEAP32[$29>>2]|0; //@line 36 "./src/cpp/unrar/hash.cpp"
       $31 = ($30|0)==(3); //@line 36 "./src/cpp/unrar/hash.cpp"
       if ($31) {
        $32 = ((($5)) + 4|0); //@line 37 "./src/cpp/unrar/hash.cpp"
        $33 = $4; //@line 37 "./src/cpp/unrar/hash.cpp"
        $34 = ((($33)) + 4|0); //@line 37 "./src/cpp/unrar/hash.cpp"
        $35 = (_memcmp($32,$34,32)|0); //@line 37 "./src/cpp/unrar/hash.cpp"
        $36 = ($35|0)==(0); //@line 37 "./src/cpp/unrar/hash.cpp"
        $$expand_i1_val4 = $36&1; //@line 37 "./src/cpp/unrar/hash.cpp"
        HEAP8[$2>>0] = $$expand_i1_val4; //@line 37 "./src/cpp/unrar/hash.cpp"
        break L1;
       }
      }
      $$expand_i1_val6 = 0; //@line 38 "./src/cpp/unrar/hash.cpp"
      HEAP8[$2>>0] = $$expand_i1_val6; //@line 38 "./src/cpp/unrar/hash.cpp"
      break L1;
     }
    } while(0);
    $21 = ((($5)) + 4|0); //@line 35 "./src/cpp/unrar/hash.cpp"
    $22 = HEAP32[$21>>2]|0; //@line 35 "./src/cpp/unrar/hash.cpp"
    $23 = $4; //@line 35 "./src/cpp/unrar/hash.cpp"
    $24 = ((($23)) + 4|0); //@line 35 "./src/cpp/unrar/hash.cpp"
    $25 = HEAP32[$24>>2]|0; //@line 35 "./src/cpp/unrar/hash.cpp"
    $26 = ($22|0)==($25|0); //@line 35 "./src/cpp/unrar/hash.cpp"
    $$expand_i1_val2 = $26&1; //@line 35 "./src/cpp/unrar/hash.cpp"
    HEAP8[$2>>0] = $$expand_i1_val2; //@line 35 "./src/cpp/unrar/hash.cpp"
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $$expand_i1_val = 1; //@line 32 "./src/cpp/unrar/hash.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 32 "./src/cpp/unrar/hash.cpp"
 }
 $$pre_trunc = HEAP8[$2>>0]|0; //@line 39 "./src/cpp/unrar/hash.cpp"
 $37 = $$pre_trunc&1; //@line 39 "./src/cpp/unrar/hash.cpp"
 STACKTOP = sp;return ($37|0); //@line 39 "./src/cpp/unrar/hash.cpp"
}
function __ZN8DataHashC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0); //@line 44 "./src/cpp/unrar/hash.cpp"
 HEAP32[$3>>2] = 0; //@line 44 "./src/cpp/unrar/hash.cpp"
 HEAP32[$2>>2] = 0; //@line 45 "./src/cpp/unrar/hash.cpp"
 STACKTOP = sp;return; //@line 50 "./src/cpp/unrar/hash.cpp"
}
function __ZN8DataHashD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 58 "./src/cpp/unrar/hash.cpp"
 __THREW__ = 0;
 invoke_vii(180,($3|0),4); //@line 58 "./src/cpp/unrar/hash.cpp"
 $4 = __THREW__; __THREW__ = 0;
 $5 = $4&1;
 if ($5) {
  $16 = ___cxa_find_matching_catch_3(0|0)|0;
  $17 = tempRet0;
  ___clang_call_terminate($16); //@line 58 "./src/cpp/unrar/hash.cpp"
  // unreachable; //@line 58 "./src/cpp/unrar/hash.cpp"
 }
 $6 = ((($2)) + 8|0); //@line 59 "./src/cpp/unrar/hash.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 59 "./src/cpp/unrar/hash.cpp"
 $8 = ($7|0)!=(0|0); //@line 59 "./src/cpp/unrar/hash.cpp"
 if (!($8)) {
  STACKTOP = sp;return; //@line 64 "./src/cpp/unrar/hash.cpp"
 }
 $9 = ((($2)) + 8|0); //@line 61 "./src/cpp/unrar/hash.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 61 "./src/cpp/unrar/hash.cpp"
 __THREW__ = 0;
 invoke_vii(180,($10|0),2892); //@line 61 "./src/cpp/unrar/hash.cpp"
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $16 = ___cxa_find_matching_catch_3(0|0)|0;
  $17 = tempRet0;
  ___clang_call_terminate($16); //@line 58 "./src/cpp/unrar/hash.cpp"
  // unreachable; //@line 58 "./src/cpp/unrar/hash.cpp"
 }
 $13 = ((($2)) + 8|0); //@line 62 "./src/cpp/unrar/hash.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 62 "./src/cpp/unrar/hash.cpp"
 $15 = ($14|0)==(0|0); //@line 62 "./src/cpp/unrar/hash.cpp"
 if ($15) {
  STACKTOP = sp;return; //@line 64 "./src/cpp/unrar/hash.cpp"
 }
 __ZdlPv($14); //@line 62 "./src/cpp/unrar/hash.cpp"
 STACKTOP = sp;return; //@line 64 "./src/cpp/unrar/hash.cpp"
}
function __ZN8DataHash4InitE9HASH_TYPEj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = ((($8)) + 8|0); //@line 69 "./src/cpp/unrar/hash.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 69 "./src/cpp/unrar/hash.cpp"
 $11 = ($10|0)==(0|0); //@line 69 "./src/cpp/unrar/hash.cpp"
 do {
  if ($11) {
   $12 = (__Znwj(2892)|0); //@line 70 "./src/cpp/unrar/hash.cpp"
   __THREW__ = 0;
   invoke_vi(187,($12|0)); //@line 70 "./src/cpp/unrar/hash.cpp"
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   if ($14) {
    $16 = ___cxa_find_matching_catch_2()|0;
    $17 = tempRet0;
    $6 = $16; //@line 81 "./src/cpp/unrar/hash.cpp"
    $7 = $17; //@line 81 "./src/cpp/unrar/hash.cpp"
    __ZdlPv($12); //@line 70 "./src/cpp/unrar/hash.cpp"
    $18 = $6; //@line 70 "./src/cpp/unrar/hash.cpp"
    $19 = $7; //@line 70 "./src/cpp/unrar/hash.cpp"
    ___resumeException($18|0);
    // unreachable;
   } else {
    $15 = ((($8)) + 8|0); //@line 70 "./src/cpp/unrar/hash.cpp"
    HEAP32[$15>>2] = $12; //@line 70 "./src/cpp/unrar/hash.cpp"
    break;
   }
  }
 } while(0);
 $20 = $4; //@line 71 "./src/cpp/unrar/hash.cpp"
 HEAP32[$8>>2] = $20; //@line 71 "./src/cpp/unrar/hash.cpp"
 $21 = $4; //@line 72 "./src/cpp/unrar/hash.cpp"
 $22 = ($21|0)==(1); //@line 72 "./src/cpp/unrar/hash.cpp"
 if ($22) {
  $23 = ((($8)) + 4|0); //@line 73 "./src/cpp/unrar/hash.cpp"
  HEAP32[$23>>2] = 0; //@line 73 "./src/cpp/unrar/hash.cpp"
 }
 $24 = $4; //@line 74 "./src/cpp/unrar/hash.cpp"
 $25 = ($24|0)==(2); //@line 74 "./src/cpp/unrar/hash.cpp"
 if ($25) {
  $26 = ((($8)) + 4|0); //@line 75 "./src/cpp/unrar/hash.cpp"
  HEAP32[$26>>2] = -1; //@line 75 "./src/cpp/unrar/hash.cpp"
 }
 $27 = $4; //@line 76 "./src/cpp/unrar/hash.cpp"
 $28 = ($27|0)==(3); //@line 76 "./src/cpp/unrar/hash.cpp"
 if (!($28)) {
  STACKTOP = sp;return; //@line 81 "./src/cpp/unrar/hash.cpp"
 }
 $29 = ((($8)) + 8|0); //@line 77 "./src/cpp/unrar/hash.cpp"
 $30 = HEAP32[$29>>2]|0; //@line 77 "./src/cpp/unrar/hash.cpp"
 __Z13blake2sp_initP14blake2sp_state($30); //@line 77 "./src/cpp/unrar/hash.cpp"
 STACKTOP = sp;return; //@line 81 "./src/cpp/unrar/hash.cpp"
}
function __ZN14blake2sp_stateC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 2112|0); //@line 83 "./src/cpp/unrar/blake2s.hpp"
 $4 = $2;
 while(1) {
  __ZN13blake2s_stateC2Ev($4); //@line 83 "./src/cpp/unrar/blake2s.hpp"
  $5 = ((($4)) + 264|0); //@line 83 "./src/cpp/unrar/blake2s.hpp"
  $6 = ($5|0)==($3|0); //@line 83 "./src/cpp/unrar/blake2s.hpp"
  if ($6) {
   break;
  } else {
   $4 = $5;
  }
 }
 $7 = ((($2)) + 2112|0); //@line 83 "./src/cpp/unrar/blake2s.hpp"
 __ZN13blake2s_stateC2Ev($7); //@line 83 "./src/cpp/unrar/blake2s.hpp"
 STACKTOP = sp;return; //@line 83 "./src/cpp/unrar/blake2s.hpp"
}
function __ZN13blake2s_stateC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN13blake2s_state12set_pointersEv($2); //@line 37 "./src/cpp/unrar/blake2s.hpp"
 STACKTOP = sp;return; //@line 38 "./src/cpp/unrar/blake2s.hpp"
}
function __ZN13blake2s_state12set_pointersEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = $2; //@line 52 "./src/cpp/unrar/blake2s.hpp"
 $4 = $2; //@line 52 "./src/cpp/unrar/blake2s.hpp"
 $5 = $4 ^ -1; //@line 52 "./src/cpp/unrar/blake2s.hpp"
 $6 = (($5) + 1)|0; //@line 52 "./src/cpp/unrar/blake2s.hpp"
 $7 = $6 & 63; //@line 52 "./src/cpp/unrar/blake2s.hpp"
 $8 = (($3) + ($7))|0; //@line 52 "./src/cpp/unrar/blake2s.hpp"
 $9 = $8; //@line 52 "./src/cpp/unrar/blake2s.hpp"
 $10 = ((($2)) + 240|0); //@line 52 "./src/cpp/unrar/blake2s.hpp"
 HEAP32[$10>>2] = $9; //@line 52 "./src/cpp/unrar/blake2s.hpp"
 $11 = ((($2)) + 240|0); //@line 53 "./src/cpp/unrar/blake2s.hpp"
 $12 = HEAP32[$11>>2]|0; //@line 53 "./src/cpp/unrar/blake2s.hpp"
 $13 = ((($12)) + 128|0); //@line 53 "./src/cpp/unrar/blake2s.hpp"
 $14 = ((($2)) + 244|0); //@line 53 "./src/cpp/unrar/blake2s.hpp"
 HEAP32[$14>>2] = $13; //@line 53 "./src/cpp/unrar/blake2s.hpp"
 $15 = ((($2)) + 244|0); //@line 54 "./src/cpp/unrar/blake2s.hpp"
 $16 = HEAP32[$15>>2]|0; //@line 54 "./src/cpp/unrar/blake2s.hpp"
 $17 = ((($16)) + 32|0); //@line 54 "./src/cpp/unrar/blake2s.hpp"
 $18 = ((($2)) + 248|0); //@line 54 "./src/cpp/unrar/blake2s.hpp"
 HEAP32[$18>>2] = $17; //@line 54 "./src/cpp/unrar/blake2s.hpp"
 $19 = ((($2)) + 248|0); //@line 55 "./src/cpp/unrar/blake2s.hpp"
 $20 = HEAP32[$19>>2]|0; //@line 55 "./src/cpp/unrar/blake2s.hpp"
 $21 = ((($20)) + 8|0); //@line 55 "./src/cpp/unrar/blake2s.hpp"
 $22 = ((($2)) + 252|0); //@line 55 "./src/cpp/unrar/blake2s.hpp"
 HEAP32[$22>>2] = $21; //@line 55 "./src/cpp/unrar/blake2s.hpp"
 STACKTOP = sp;return; //@line 56 "./src/cpp/unrar/blake2s.hpp"
}
function __ZN8DataHash6UpdateEPKvj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0; //@line 87 "./src/cpp/unrar/hash.cpp"
 $8 = ($7|0)==(1); //@line 87 "./src/cpp/unrar/hash.cpp"
 if ($8) {
  $9 = ((($6)) + 4|0); //@line 88 "./src/cpp/unrar/hash.cpp"
  $10 = HEAP32[$9>>2]|0; //@line 88 "./src/cpp/unrar/hash.cpp"
  $11 = $10&65535; //@line 88 "./src/cpp/unrar/hash.cpp"
  $12 = $4; //@line 88 "./src/cpp/unrar/hash.cpp"
  $13 = $5; //@line 88 "./src/cpp/unrar/hash.cpp"
  $14 = (__Z10Checksum14tPKvj($11,$12,$13)|0); //@line 88 "./src/cpp/unrar/hash.cpp"
  $15 = $14&65535; //@line 88 "./src/cpp/unrar/hash.cpp"
  $16 = ((($6)) + 4|0); //@line 88 "./src/cpp/unrar/hash.cpp"
  HEAP32[$16>>2] = $15; //@line 88 "./src/cpp/unrar/hash.cpp"
 }
 $17 = HEAP32[$6>>2]|0; //@line 90 "./src/cpp/unrar/hash.cpp"
 $18 = ($17|0)==(2); //@line 90 "./src/cpp/unrar/hash.cpp"
 if ($18) {
  $19 = ((($6)) + 4|0); //@line 91 "./src/cpp/unrar/hash.cpp"
  $20 = HEAP32[$19>>2]|0; //@line 91 "./src/cpp/unrar/hash.cpp"
  $21 = $4; //@line 91 "./src/cpp/unrar/hash.cpp"
  $22 = $5; //@line 91 "./src/cpp/unrar/hash.cpp"
  $23 = (__Z5CRC32jPKvj($20,$21,$22)|0); //@line 91 "./src/cpp/unrar/hash.cpp"
  $24 = ((($6)) + 4|0); //@line 91 "./src/cpp/unrar/hash.cpp"
  HEAP32[$24>>2] = $23; //@line 91 "./src/cpp/unrar/hash.cpp"
 }
 $25 = HEAP32[$6>>2]|0; //@line 93 "./src/cpp/unrar/hash.cpp"
 $26 = ($25|0)==(3); //@line 93 "./src/cpp/unrar/hash.cpp"
 if (!($26)) {
  STACKTOP = sp;return; //@line 103 "./src/cpp/unrar/hash.cpp"
 }
 $27 = ((($6)) + 8|0); //@line 101 "./src/cpp/unrar/hash.cpp"
 $28 = HEAP32[$27>>2]|0; //@line 101 "./src/cpp/unrar/hash.cpp"
 $29 = $4; //@line 101 "./src/cpp/unrar/hash.cpp"
 $30 = $5; //@line 101 "./src/cpp/unrar/hash.cpp"
 __Z15blake2sp_updateP14blake2sp_statePKhj($28,$29,$30); //@line 101 "./src/cpp/unrar/hash.cpp"
 STACKTOP = sp;return; //@line 103 "./src/cpp/unrar/hash.cpp"
}
function __ZN8DataHash6ResultEP9HashValue($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2912|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0; //@line 108 "./src/cpp/unrar/hash.cpp"
 $7 = $3; //@line 108 "./src/cpp/unrar/hash.cpp"
 HEAP32[$7>>2] = $6; //@line 108 "./src/cpp/unrar/hash.cpp"
 $8 = HEAP32[$5>>2]|0; //@line 109 "./src/cpp/unrar/hash.cpp"
 $9 = ($8|0)==(1); //@line 109 "./src/cpp/unrar/hash.cpp"
 if ($9) {
  $10 = ((($5)) + 4|0); //@line 110 "./src/cpp/unrar/hash.cpp"
  $11 = HEAP32[$10>>2]|0; //@line 110 "./src/cpp/unrar/hash.cpp"
  $12 = $3; //@line 110 "./src/cpp/unrar/hash.cpp"
  $13 = ((($12)) + 4|0); //@line 110 "./src/cpp/unrar/hash.cpp"
  HEAP32[$13>>2] = $11; //@line 110 "./src/cpp/unrar/hash.cpp"
 }
 $14 = HEAP32[$5>>2]|0; //@line 111 "./src/cpp/unrar/hash.cpp"
 $15 = ($14|0)==(2); //@line 111 "./src/cpp/unrar/hash.cpp"
 if ($15) {
  $16 = ((($5)) + 4|0); //@line 112 "./src/cpp/unrar/hash.cpp"
  $17 = HEAP32[$16>>2]|0; //@line 112 "./src/cpp/unrar/hash.cpp"
  $18 = $17 ^ -1; //@line 112 "./src/cpp/unrar/hash.cpp"
  $19 = $3; //@line 112 "./src/cpp/unrar/hash.cpp"
  $20 = ((($19)) + 4|0); //@line 112 "./src/cpp/unrar/hash.cpp"
  HEAP32[$20>>2] = $18; //@line 112 "./src/cpp/unrar/hash.cpp"
 }
 $21 = HEAP32[$5>>2]|0; //@line 113 "./src/cpp/unrar/hash.cpp"
 $22 = ($21|0)==(3); //@line 113 "./src/cpp/unrar/hash.cpp"
 if (!($22)) {
  STACKTOP = sp;return; //@line 119 "./src/cpp/unrar/hash.cpp"
 }
 $23 = ((($5)) + 8|0); //@line 116 "./src/cpp/unrar/hash.cpp"
 $24 = HEAP32[$23>>2]|0; //@line 116 "./src/cpp/unrar/hash.cpp"
 __ZN14blake2sp_stateC2ERS_($4,$24); //@line 116 "./src/cpp/unrar/hash.cpp"
 $25 = $3; //@line 117 "./src/cpp/unrar/hash.cpp"
 $26 = ((($25)) + 4|0); //@line 117 "./src/cpp/unrar/hash.cpp"
 __Z14blake2sp_finalP14blake2sp_statePh($4,$26); //@line 117 "./src/cpp/unrar/hash.cpp"
 STACKTOP = sp;return; //@line 119 "./src/cpp/unrar/hash.cpp"
}
function __ZN14blake2sp_stateC2ERS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 83 "./src/cpp/unrar/blake2s.hpp"
 $7 = 0;
 while(1) {
  $6 = (($4) + (($7*264)|0)|0); //@line 83 "./src/cpp/unrar/blake2s.hpp"
  $8 = (($5) + (($7*264)|0)|0); //@line 83 "./src/cpp/unrar/blake2s.hpp"
  __ZN13blake2s_stateC2ERS_($6,$8); //@line 83 "./src/cpp/unrar/blake2s.hpp"
  $9 = (($7) + 1)|0; //@line 83 "./src/cpp/unrar/blake2s.hpp"
  $10 = ($9|0)==(8); //@line 83 "./src/cpp/unrar/blake2s.hpp"
  if ($10) {
   break;
  } else {
   $7 = $9;
  }
 }
 $11 = ((($4)) + 2112|0); //@line 83 "./src/cpp/unrar/blake2s.hpp"
 $12 = $3; //@line 83 "./src/cpp/unrar/blake2s.hpp"
 $13 = ((($12)) + 2112|0); //@line 83 "./src/cpp/unrar/blake2s.hpp"
 __ZN13blake2s_stateC2ERS_($11,$13); //@line 83 "./src/cpp/unrar/blake2s.hpp"
 $14 = ((($4)) + 2376|0); //@line 83 "./src/cpp/unrar/blake2s.hpp"
 $15 = $3; //@line 83 "./src/cpp/unrar/blake2s.hpp"
 $16 = ((($15)) + 2376|0); //@line 83 "./src/cpp/unrar/blake2s.hpp"
 _memcpy(($14|0),($16|0),516)|0; //@line 83 "./src/cpp/unrar/blake2s.hpp"
 STACKTOP = sp;return; //@line 83 "./src/cpp/unrar/blake2s.hpp"
}
function __ZN13blake2s_stateC2ERS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN13blake2s_state12set_pointersEv($4); //@line 43 "./src/cpp/unrar/blake2s.hpp"
 $5 = $3; //@line 44 "./src/cpp/unrar/blake2s.hpp"
 (__ZN13blake2s_stateaSERS_($4,$5)|0); //@line 44 "./src/cpp/unrar/blake2s.hpp"
 STACKTOP = sp;return; //@line 45 "./src/cpp/unrar/blake2s.hpp"
}
function __ZN13blake2s_stateaSERS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 68 "./src/cpp/unrar/blake2s.hpp"
 $6 = ($4|0)!=($5|0); //@line 68 "./src/cpp/unrar/blake2s.hpp"
 if (!($6)) {
  STACKTOP = sp;return ($4|0); //@line 74 "./src/cpp/unrar/blake2s.hpp"
 }
 $7 = ((($4)) + 240|0); //@line 70 "./src/cpp/unrar/blake2s.hpp"
 $8 = HEAP32[$7>>2]|0; //@line 70 "./src/cpp/unrar/blake2s.hpp"
 $9 = $3; //@line 70 "./src/cpp/unrar/blake2s.hpp"
 $10 = ((($9)) + 240|0); //@line 70 "./src/cpp/unrar/blake2s.hpp"
 $11 = HEAP32[$10>>2]|0; //@line 70 "./src/cpp/unrar/blake2s.hpp"
 _memcpy(($8|0),($11|0),176)|0; //@line 70 "./src/cpp/unrar/blake2s.hpp"
 $12 = $3; //@line 71 "./src/cpp/unrar/blake2s.hpp"
 $13 = ((($12)) + 256|0); //@line 71 "./src/cpp/unrar/blake2s.hpp"
 $14 = HEAP32[$13>>2]|0; //@line 71 "./src/cpp/unrar/blake2s.hpp"
 $15 = ((($4)) + 256|0); //@line 71 "./src/cpp/unrar/blake2s.hpp"
 HEAP32[$15>>2] = $14; //@line 71 "./src/cpp/unrar/blake2s.hpp"
 $16 = $3; //@line 72 "./src/cpp/unrar/blake2s.hpp"
 $17 = ((($16)) + 260|0); //@line 72 "./src/cpp/unrar/blake2s.hpp"
 $18 = HEAP8[$17>>0]|0; //@line 72 "./src/cpp/unrar/blake2s.hpp"
 $19 = ((($4)) + 260|0); //@line 72 "./src/cpp/unrar/blake2s.hpp"
 HEAP8[$19>>0] = $18; //@line 72 "./src/cpp/unrar/blake2s.hpp"
 STACKTOP = sp;return ($4|0); //@line 74 "./src/cpp/unrar/blake2s.hpp"
}
function __ZN8DataHash8GetCRC32Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 124 "./src/cpp/unrar/hash.cpp"
 $4 = ($3|0)==(2); //@line 124 "./src/cpp/unrar/hash.cpp"
 if (!($4)) {
  $8 = 0;
  STACKTOP = sp;return ($8|0); //@line 124 "./src/cpp/unrar/hash.cpp"
 }
 $5 = ((($2)) + 4|0); //@line 124 "./src/cpp/unrar/hash.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 124 "./src/cpp/unrar/hash.cpp"
 $7 = $6 ^ -1; //@line 124 "./src/cpp/unrar/hash.cpp"
 $8 = $7;
 STACKTOP = sp;return ($8|0); //@line 124 "./src/cpp/unrar/hash.cpp"
}
function __ZN8DataHash3CmpEP9HashValuePh($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 __ZN8DataHash6ResultEP9HashValue($7,$6); //@line 131 "./src/cpp/unrar/hash.cpp"
 $8 = $5; //@line 132 "./src/cpp/unrar/hash.cpp"
 $9 = ($8|0)!=(0|0); //@line 132 "./src/cpp/unrar/hash.cpp"
 if ($9) {
  $10 = $5; //@line 133 "./src/cpp/unrar/hash.cpp"
  __Z16ConvertHashToMACP9HashValuePh($6,$10); //@line 133 "./src/cpp/unrar/hash.cpp"
 }
 $11 = $4; //@line 134 "./src/cpp/unrar/hash.cpp"
 $12 = (__ZN9HashValueeqERKS_($6,$11)|0); //@line 134 "./src/cpp/unrar/hash.cpp"
 STACKTOP = sp;return ($12|0); //@line 134 "./src/cpp/unrar/hash.cpp"
}
function __Z15ExtractHardlinkPwS_j($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4128|0);
 $3 = sp + 4112|0;
 $7 = sp + 2064|0;
 $8 = sp + 16|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $10 = $5; //@line 3 "./src/cpp/unrar/hardlinks.cpp"
 $11 = $5; //@line 3 "./src/cpp/unrar/hardlinks.cpp"
 $12 = $6; //@line 3 "./src/cpp/unrar/hardlinks.cpp"
 __Z13SlashToNativePKwPwj($10,$11,$12); //@line 3 "./src/cpp/unrar/hardlinks.cpp"
 $13 = $5; //@line 5 "./src/cpp/unrar/hardlinks.cpp"
 $14 = (__Z9FileExistPKw($13)|0); //@line 5 "./src/cpp/unrar/hardlinks.cpp"
 if (!($14)) {
  $$expand_i1_val = 0; //@line 6 "./src/cpp/unrar/hardlinks.cpp"
  HEAP8[$3>>0] = $$expand_i1_val; //@line 6 "./src/cpp/unrar/hardlinks.cpp"
  $$pre_trunc = HEAP8[$3>>0]|0; //@line 33 "./src/cpp/unrar/hardlinks.cpp"
  $26 = $$pre_trunc&1; //@line 33 "./src/cpp/unrar/hardlinks.cpp"
  STACKTOP = sp;return ($26|0); //@line 33 "./src/cpp/unrar/hardlinks.cpp"
 }
 $15 = $4; //@line 7 "./src/cpp/unrar/hardlinks.cpp"
 (__Z10CreatePathPKwb($15,1)|0); //@line 7 "./src/cpp/unrar/hardlinks.cpp"
 $16 = $5; //@line 20 "./src/cpp/unrar/hardlinks.cpp"
 (__Z10WideToCharPKwPcj($16,$7,2048)|0); //@line 20 "./src/cpp/unrar/hardlinks.cpp"
 $17 = $4; //@line 21 "./src/cpp/unrar/hardlinks.cpp"
 (__Z10WideToCharPKwPcj($17,$8,2048)|0); //@line 21 "./src/cpp/unrar/hardlinks.cpp"
 $18 = (_link($7,$8)|0); //@line 22 "./src/cpp/unrar/hardlinks.cpp"
 $19 = ($18|0)==(0); //@line 22 "./src/cpp/unrar/hardlinks.cpp"
 $20 = $19&1; //@line 22 "./src/cpp/unrar/hardlinks.cpp"
 $9 = $20; //@line 22 "./src/cpp/unrar/hardlinks.cpp"
 $21 = $9; //@line 23 "./src/cpp/unrar/hardlinks.cpp"
 $22 = $21&1; //@line 23 "./src/cpp/unrar/hardlinks.cpp"
 if (!($22)) {
  $23 = $4; //@line 25 "./src/cpp/unrar/hardlinks.cpp"
  __Z5uiMsgIPwEv14UIMESSAGE_CODET_(21,$23); //@line 25 "./src/cpp/unrar/hardlinks.cpp"
  __ZN12ErrorHandler9SysErrMsgEv(756); //@line 26 "./src/cpp/unrar/hardlinks.cpp"
  __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,9); //@line 27 "./src/cpp/unrar/hardlinks.cpp"
 }
 $24 = $9; //@line 29 "./src/cpp/unrar/hardlinks.cpp"
 $25 = $24&1; //@line 29 "./src/cpp/unrar/hardlinks.cpp"
 $$expand_i1_val2 = $25&1; //@line 29 "./src/cpp/unrar/hardlinks.cpp"
 HEAP8[$3>>0] = $$expand_i1_val2; //@line 29 "./src/cpp/unrar/hardlinks.cpp"
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 33 "./src/cpp/unrar/hardlinks.cpp"
 $26 = $$pre_trunc&1; //@line 33 "./src/cpp/unrar/hardlinks.cpp"
 STACKTOP = sp;return ($26|0); //@line 33 "./src/cpp/unrar/hardlinks.cpp"
}
function __Z13SlashToNativePKwPwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 54 "./src/cpp/unrar/pathfn.hpp"
 $7 = $4; //@line 54 "./src/cpp/unrar/pathfn.hpp"
 $8 = $5; //@line 54 "./src/cpp/unrar/pathfn.hpp"
 __Z14DosSlashToUnixPKwPwj($6,$7,$8); //@line 54 "./src/cpp/unrar/pathfn.hpp"
 STACKTOP = sp;return; //@line 56 "./src/cpp/unrar/pathfn.hpp"
}
function __Z18ExtractUnixOwner20R7ArchivePKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2080|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2080|0);
 $4 = sp + 32|0;
 $2 = $0;
 $3 = $1;
 $10 = $3; //@line 6 "./src/cpp/unrar/uowners.cpp"
 (__Z10WideToCharPKwPcj($10,$4,2048)|0); //@line 6 "./src/cpp/unrar/uowners.cpp"
 $11 = $2; //@line 8 "./src/cpp/unrar/uowners.cpp"
 $12 = ((($11)) + 56876|0); //@line 8 "./src/cpp/unrar/uowners.cpp"
 $13 = HEAP8[$12>>0]|0; //@line 8 "./src/cpp/unrar/uowners.cpp"
 $14 = $13&1; //@line 8 "./src/cpp/unrar/uowners.cpp"
 if ($14) {
  $15 = $2; //@line 10 "./src/cpp/unrar/uowners.cpp"
  $16 = ((($15)) + 24|0); //@line 10 "./src/cpp/unrar/uowners.cpp"
  $17 = $3; //@line 10 "./src/cpp/unrar/uowners.cpp"
  __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(86,$16,$17); //@line 10 "./src/cpp/unrar/uowners.cpp"
  __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,3); //@line 11 "./src/cpp/unrar/uowners.cpp"
  STACKTOP = sp;return; //@line 47 "./src/cpp/unrar/uowners.cpp"
 }
 $18 = (___errno_location()|0); //@line 16 "./src/cpp/unrar/uowners.cpp"
 HEAP32[$18>>2] = 0; //@line 16 "./src/cpp/unrar/uowners.cpp"
 $19 = $2; //@line 17 "./src/cpp/unrar/uowners.cpp"
 $20 = ((($19)) + 55916|0); //@line 17 "./src/cpp/unrar/uowners.cpp"
 $21 = ((($20)) + 32|0); //@line 17 "./src/cpp/unrar/uowners.cpp"
 $22 = (_getpwnam(($21|0))|0); //@line 17 "./src/cpp/unrar/uowners.cpp"
 $5 = $22; //@line 17 "./src/cpp/unrar/uowners.cpp"
 $23 = ($22|0)==(0|0); //@line 17 "./src/cpp/unrar/uowners.cpp"
 if ($23) {
  $24 = $2; //@line 19 "./src/cpp/unrar/uowners.cpp"
  $25 = ((($24)) + 24|0); //@line 19 "./src/cpp/unrar/uowners.cpp"
  $26 = $2; //@line 19 "./src/cpp/unrar/uowners.cpp"
  $27 = ((($26)) + 55916|0); //@line 19 "./src/cpp/unrar/uowners.cpp"
  $28 = ((($27)) + 32|0); //@line 19 "./src/cpp/unrar/uowners.cpp"
  $29 = (__Z7GetWidePKc($28)|0); //@line 19 "./src/cpp/unrar/uowners.cpp"
  __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(87,$25,$29); //@line 19 "./src/cpp/unrar/uowners.cpp"
  __ZN12ErrorHandler9SysErrMsgEv(756); //@line 20 "./src/cpp/unrar/uowners.cpp"
  __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 21 "./src/cpp/unrar/uowners.cpp"
  STACKTOP = sp;return; //@line 47 "./src/cpp/unrar/uowners.cpp"
 }
 $30 = $5; //@line 24 "./src/cpp/unrar/uowners.cpp"
 $31 = ((($30)) + 8|0); //@line 24 "./src/cpp/unrar/uowners.cpp"
 $32 = HEAP32[$31>>2]|0; //@line 24 "./src/cpp/unrar/uowners.cpp"
 $6 = $32; //@line 24 "./src/cpp/unrar/uowners.cpp"
 $33 = (___errno_location()|0); //@line 27 "./src/cpp/unrar/uowners.cpp"
 HEAP32[$33>>2] = 0; //@line 27 "./src/cpp/unrar/uowners.cpp"
 $34 = $2; //@line 28 "./src/cpp/unrar/uowners.cpp"
 $35 = ((($34)) + 55916|0); //@line 28 "./src/cpp/unrar/uowners.cpp"
 $36 = ((($35)) + 288|0); //@line 28 "./src/cpp/unrar/uowners.cpp"
 $37 = (_getgrnam(($36|0))|0); //@line 28 "./src/cpp/unrar/uowners.cpp"
 $7 = $37; //@line 28 "./src/cpp/unrar/uowners.cpp"
 $38 = ($37|0)==(0|0); //@line 28 "./src/cpp/unrar/uowners.cpp"
 if ($38) {
  $39 = $2; //@line 30 "./src/cpp/unrar/uowners.cpp"
  $40 = ((($39)) + 24|0); //@line 30 "./src/cpp/unrar/uowners.cpp"
  $41 = $2; //@line 30 "./src/cpp/unrar/uowners.cpp"
  $42 = ((($41)) + 55916|0); //@line 30 "./src/cpp/unrar/uowners.cpp"
  $43 = ((($42)) + 288|0); //@line 30 "./src/cpp/unrar/uowners.cpp"
  $44 = (__Z7GetWidePKc($43)|0); //@line 30 "./src/cpp/unrar/uowners.cpp"
  __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(88,$40,$44); //@line 30 "./src/cpp/unrar/uowners.cpp"
  __ZN12ErrorHandler9SysErrMsgEv(756); //@line 31 "./src/cpp/unrar/uowners.cpp"
  __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,3); //@line 32 "./src/cpp/unrar/uowners.cpp"
  STACKTOP = sp;return; //@line 47 "./src/cpp/unrar/uowners.cpp"
 }
 $45 = $3; //@line 35 "./src/cpp/unrar/uowners.cpp"
 $46 = (__Z11GetFileAttrPKw($45)|0); //@line 35 "./src/cpp/unrar/uowners.cpp"
 $8 = $46; //@line 35 "./src/cpp/unrar/uowners.cpp"
 $47 = $7; //@line 36 "./src/cpp/unrar/uowners.cpp"
 $48 = ((($47)) + 8|0); //@line 36 "./src/cpp/unrar/uowners.cpp"
 $49 = HEAP32[$48>>2]|0; //@line 36 "./src/cpp/unrar/uowners.cpp"
 $9 = $49; //@line 36 "./src/cpp/unrar/uowners.cpp"
 $50 = $6; //@line 38 "./src/cpp/unrar/uowners.cpp"
 $51 = $9; //@line 38 "./src/cpp/unrar/uowners.cpp"
 $52 = (_lchown($4,$50,$51)|0); //@line 38 "./src/cpp/unrar/uowners.cpp"
 $53 = ($52|0)!=(0); //@line 38 "./src/cpp/unrar/uowners.cpp"
 if ($53) {
  $54 = $2; //@line 43 "./src/cpp/unrar/uowners.cpp"
  $55 = ((($54)) + 24|0); //@line 43 "./src/cpp/unrar/uowners.cpp"
  $56 = $3; //@line 43 "./src/cpp/unrar/uowners.cpp"
  __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(89,$55,$56); //@line 43 "./src/cpp/unrar/uowners.cpp"
  __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,9); //@line 44 "./src/cpp/unrar/uowners.cpp"
 }
 $57 = $3; //@line 46 "./src/cpp/unrar/uowners.cpp"
 $58 = $8; //@line 46 "./src/cpp/unrar/uowners.cpp"
 (__Z11SetFileAttrPKwj($57,$58)|0); //@line 46 "./src/cpp/unrar/uowners.cpp"
 STACKTOP = sp;return; //@line 47 "./src/cpp/unrar/uowners.cpp"
}
function __Z18ExtractUnixOwner30R7ArchivePKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4144|0);
 $4 = sp + 2088|0;
 $8 = sp + 40|0;
 $2 = $0;
 $3 = $1;
 $14 = $3; //@line 53 "./src/cpp/unrar/uowners.cpp"
 (__Z10WideToCharPKwPcj($14,$4,2048)|0); //@line 53 "./src/cpp/unrar/uowners.cpp"
 $15 = $2; //@line 55 "./src/cpp/unrar/uowners.cpp"
 $16 = ((($15)) + 38640|0); //@line 55 "./src/cpp/unrar/uowners.cpp"
 $17 = ((($16)) + 8224|0); //@line 55 "./src/cpp/unrar/uowners.cpp"
 $18 = (__ZNK5ArrayIhEixEj($17,0)|0); //@line 55 "./src/cpp/unrar/uowners.cpp"
 $5 = $18; //@line 55 "./src/cpp/unrar/uowners.cpp"
 $19 = $5; //@line 56 "./src/cpp/unrar/uowners.cpp"
 $20 = (_strlen($19)|0); //@line 56 "./src/cpp/unrar/uowners.cpp"
 $21 = (($20) + 1)|0; //@line 56 "./src/cpp/unrar/uowners.cpp"
 $6 = $21; //@line 56 "./src/cpp/unrar/uowners.cpp"
 $22 = $2; //@line 57 "./src/cpp/unrar/uowners.cpp"
 $23 = ((($22)) + 38640|0); //@line 57 "./src/cpp/unrar/uowners.cpp"
 $24 = ((($23)) + 8224|0); //@line 57 "./src/cpp/unrar/uowners.cpp"
 $25 = (__ZN5ArrayIhE4SizeEv($24)|0); //@line 57 "./src/cpp/unrar/uowners.cpp"
 $26 = $6; //@line 57 "./src/cpp/unrar/uowners.cpp"
 $27 = (($25) - ($26))|0; //@line 57 "./src/cpp/unrar/uowners.cpp"
 $7 = $27; //@line 57 "./src/cpp/unrar/uowners.cpp"
 $28 = $2; //@line 59 "./src/cpp/unrar/uowners.cpp"
 $29 = ((($28)) + 38640|0); //@line 59 "./src/cpp/unrar/uowners.cpp"
 $30 = ((($29)) + 8224|0); //@line 59 "./src/cpp/unrar/uowners.cpp"
 $31 = $6; //@line 59 "./src/cpp/unrar/uowners.cpp"
 $32 = (__ZNK5ArrayIhEixEj($30,$31)|0); //@line 59 "./src/cpp/unrar/uowners.cpp"
 $33 = $7; //@line 59 "./src/cpp/unrar/uowners.cpp"
 (_strncpy($8,$32,$33)|0); //@line 59 "./src/cpp/unrar/uowners.cpp"
 $34 = $7; //@line 60 "./src/cpp/unrar/uowners.cpp"
 $35 = (($8) + ($34)|0); //@line 60 "./src/cpp/unrar/uowners.cpp"
 HEAP8[$35>>0] = 0; //@line 60 "./src/cpp/unrar/uowners.cpp"
 $36 = $5; //@line 63 "./src/cpp/unrar/uowners.cpp"
 $37 = (_getpwnam(($36|0))|0); //@line 63 "./src/cpp/unrar/uowners.cpp"
 $9 = $37; //@line 63 "./src/cpp/unrar/uowners.cpp"
 $38 = ($37|0)==(0|0); //@line 63 "./src/cpp/unrar/uowners.cpp"
 if ($38) {
  $39 = $2; //@line 65 "./src/cpp/unrar/uowners.cpp"
  $40 = ((($39)) + 24|0); //@line 65 "./src/cpp/unrar/uowners.cpp"
  $41 = $5; //@line 65 "./src/cpp/unrar/uowners.cpp"
  $42 = (__Z7GetWidePKc($41)|0); //@line 65 "./src/cpp/unrar/uowners.cpp"
  __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(87,$40,$42); //@line 65 "./src/cpp/unrar/uowners.cpp"
  __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 66 "./src/cpp/unrar/uowners.cpp"
  STACKTOP = sp;return; //@line 90 "./src/cpp/unrar/uowners.cpp"
 }
 $43 = $9; //@line 69 "./src/cpp/unrar/uowners.cpp"
 $44 = ((($43)) + 8|0); //@line 69 "./src/cpp/unrar/uowners.cpp"
 $45 = HEAP32[$44>>2]|0; //@line 69 "./src/cpp/unrar/uowners.cpp"
 $10 = $45; //@line 69 "./src/cpp/unrar/uowners.cpp"
 $46 = (_getgrnam(($8|0))|0); //@line 72 "./src/cpp/unrar/uowners.cpp"
 $11 = $46; //@line 72 "./src/cpp/unrar/uowners.cpp"
 $47 = ($46|0)==(0|0); //@line 72 "./src/cpp/unrar/uowners.cpp"
 if ($47) {
  $48 = $2; //@line 74 "./src/cpp/unrar/uowners.cpp"
  $49 = ((($48)) + 24|0); //@line 74 "./src/cpp/unrar/uowners.cpp"
  $50 = (__Z7GetWidePKc($8)|0); //@line 74 "./src/cpp/unrar/uowners.cpp"
  __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(88,$49,$50); //@line 74 "./src/cpp/unrar/uowners.cpp"
  __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 75 "./src/cpp/unrar/uowners.cpp"
  STACKTOP = sp;return; //@line 90 "./src/cpp/unrar/uowners.cpp"
 }
 $51 = $3; //@line 78 "./src/cpp/unrar/uowners.cpp"
 $52 = (__Z11GetFileAttrPKw($51)|0); //@line 78 "./src/cpp/unrar/uowners.cpp"
 $12 = $52; //@line 78 "./src/cpp/unrar/uowners.cpp"
 $53 = $11; //@line 79 "./src/cpp/unrar/uowners.cpp"
 $54 = ((($53)) + 8|0); //@line 79 "./src/cpp/unrar/uowners.cpp"
 $55 = HEAP32[$54>>2]|0; //@line 79 "./src/cpp/unrar/uowners.cpp"
 $13 = $55; //@line 79 "./src/cpp/unrar/uowners.cpp"
 $56 = $10; //@line 81 "./src/cpp/unrar/uowners.cpp"
 $57 = $13; //@line 81 "./src/cpp/unrar/uowners.cpp"
 $58 = (_lchown($4,$56,$57)|0); //@line 81 "./src/cpp/unrar/uowners.cpp"
 $59 = ($58|0)!=(0); //@line 81 "./src/cpp/unrar/uowners.cpp"
 if ($59) {
  $60 = $2; //@line 86 "./src/cpp/unrar/uowners.cpp"
  $61 = ((($60)) + 24|0); //@line 86 "./src/cpp/unrar/uowners.cpp"
  $62 = $3; //@line 86 "./src/cpp/unrar/uowners.cpp"
  __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(89,$61,$62); //@line 86 "./src/cpp/unrar/uowners.cpp"
  __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,9); //@line 87 "./src/cpp/unrar/uowners.cpp"
 }
 $63 = $3; //@line 89 "./src/cpp/unrar/uowners.cpp"
 $64 = $12; //@line 89 "./src/cpp/unrar/uowners.cpp"
 (__Z11SetFileAttrPKwj($63,$64)|0); //@line 89 "./src/cpp/unrar/uowners.cpp"
 STACKTOP = sp;return; //@line 90 "./src/cpp/unrar/uowners.cpp"
}
function __Z12SetUnixOwnerR7ArchivePKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2080|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2080|0);
 $4 = sp + 24|0;
 $2 = $0;
 $3 = $1;
 $8 = $3; //@line 96 "./src/cpp/unrar/uowners.cpp"
 (__Z10WideToCharPKwPcj($8,$4,2048)|0); //@line 96 "./src/cpp/unrar/uowners.cpp"
 $9 = $2; //@line 101 "./src/cpp/unrar/uowners.cpp"
 $10 = ((($9)) + 21424|0); //@line 101 "./src/cpp/unrar/uowners.cpp"
 $5 = $10; //@line 101 "./src/cpp/unrar/uowners.cpp"
 $11 = $5; //@line 102 "./src/cpp/unrar/uowners.cpp"
 $12 = ((($11)) + 16632|0); //@line 102 "./src/cpp/unrar/uowners.cpp"
 $13 = HEAP8[$12>>0]|0; //@line 102 "./src/cpp/unrar/uowners.cpp"
 $14 = $13 << 24 >> 24; //@line 102 "./src/cpp/unrar/uowners.cpp"
 $15 = ($14|0)!=(0); //@line 102 "./src/cpp/unrar/uowners.cpp"
 do {
  if ($15) {
   $16 = $5; //@line 105 "./src/cpp/unrar/uowners.cpp"
   $17 = ((($16)) + 16632|0); //@line 105 "./src/cpp/unrar/uowners.cpp"
   $18 = (_getpwnam(($17|0))|0); //@line 105 "./src/cpp/unrar/uowners.cpp"
   $6 = $18; //@line 105 "./src/cpp/unrar/uowners.cpp"
   $19 = ($18|0)==(0|0); //@line 105 "./src/cpp/unrar/uowners.cpp"
   if (!($19)) {
    $29 = $6; //@line 115 "./src/cpp/unrar/uowners.cpp"
    $30 = ((($29)) + 8|0); //@line 115 "./src/cpp/unrar/uowners.cpp"
    $31 = HEAP32[$30>>2]|0; //@line 115 "./src/cpp/unrar/uowners.cpp"
    $32 = $5; //@line 115 "./src/cpp/unrar/uowners.cpp"
    $33 = ((($32)) + 17144|0); //@line 115 "./src/cpp/unrar/uowners.cpp"
    HEAP32[$33>>2] = $31; //@line 115 "./src/cpp/unrar/uowners.cpp"
    break;
   }
   $20 = $5; //@line 107 "./src/cpp/unrar/uowners.cpp"
   $21 = ((($20)) + 16630|0); //@line 107 "./src/cpp/unrar/uowners.cpp"
   $22 = HEAP8[$21>>0]|0; //@line 107 "./src/cpp/unrar/uowners.cpp"
   $23 = $22&1; //@line 107 "./src/cpp/unrar/uowners.cpp"
   if (!($23)) {
    $24 = $2; //@line 109 "./src/cpp/unrar/uowners.cpp"
    $25 = ((($24)) + 24|0); //@line 109 "./src/cpp/unrar/uowners.cpp"
    $26 = $5; //@line 109 "./src/cpp/unrar/uowners.cpp"
    $27 = ((($26)) + 16632|0); //@line 109 "./src/cpp/unrar/uowners.cpp"
    $28 = (__Z7GetWidePKc($27)|0); //@line 109 "./src/cpp/unrar/uowners.cpp"
    __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(87,$25,$28); //@line 109 "./src/cpp/unrar/uowners.cpp"
    __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 110 "./src/cpp/unrar/uowners.cpp"
    STACKTOP = sp;return; //@line 141 "./src/cpp/unrar/uowners.cpp"
   }
  }
 } while(0);
 $34 = $5; //@line 117 "./src/cpp/unrar/uowners.cpp"
 $35 = ((($34)) + 16888|0); //@line 117 "./src/cpp/unrar/uowners.cpp"
 $36 = HEAP8[$35>>0]|0; //@line 117 "./src/cpp/unrar/uowners.cpp"
 $37 = $36 << 24 >> 24; //@line 117 "./src/cpp/unrar/uowners.cpp"
 $38 = ($37|0)!=(0); //@line 117 "./src/cpp/unrar/uowners.cpp"
 do {
  if ($38) {
   $39 = $5; //@line 120 "./src/cpp/unrar/uowners.cpp"
   $40 = ((($39)) + 16888|0); //@line 120 "./src/cpp/unrar/uowners.cpp"
   $41 = (_getgrnam(($40|0))|0); //@line 120 "./src/cpp/unrar/uowners.cpp"
   $7 = $41; //@line 120 "./src/cpp/unrar/uowners.cpp"
   $42 = ($41|0)==(0|0); //@line 120 "./src/cpp/unrar/uowners.cpp"
   if (!($42)) {
    $52 = $7; //@line 130 "./src/cpp/unrar/uowners.cpp"
    $53 = ((($52)) + 8|0); //@line 130 "./src/cpp/unrar/uowners.cpp"
    $54 = HEAP32[$53>>2]|0; //@line 130 "./src/cpp/unrar/uowners.cpp"
    $55 = $5; //@line 130 "./src/cpp/unrar/uowners.cpp"
    $56 = ((($55)) + 17148|0); //@line 130 "./src/cpp/unrar/uowners.cpp"
    HEAP32[$56>>2] = $54; //@line 130 "./src/cpp/unrar/uowners.cpp"
    break;
   }
   $43 = $5; //@line 122 "./src/cpp/unrar/uowners.cpp"
   $44 = ((($43)) + 16631|0); //@line 122 "./src/cpp/unrar/uowners.cpp"
   $45 = HEAP8[$44>>0]|0; //@line 122 "./src/cpp/unrar/uowners.cpp"
   $46 = $45&1; //@line 122 "./src/cpp/unrar/uowners.cpp"
   if (!($46)) {
    $47 = $2; //@line 124 "./src/cpp/unrar/uowners.cpp"
    $48 = ((($47)) + 24|0); //@line 124 "./src/cpp/unrar/uowners.cpp"
    $49 = $5; //@line 124 "./src/cpp/unrar/uowners.cpp"
    $50 = ((($49)) + 16888|0); //@line 124 "./src/cpp/unrar/uowners.cpp"
    $51 = (__Z7GetWidePKc($50)|0); //@line 124 "./src/cpp/unrar/uowners.cpp"
    __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(88,$48,$51); //@line 124 "./src/cpp/unrar/uowners.cpp"
    __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 125 "./src/cpp/unrar/uowners.cpp"
    STACKTOP = sp;return; //@line 141 "./src/cpp/unrar/uowners.cpp"
   }
  }
 } while(0);
 $57 = $5; //@line 133 "./src/cpp/unrar/uowners.cpp"
 $58 = ((($57)) + 17144|0); //@line 133 "./src/cpp/unrar/uowners.cpp"
 $59 = HEAP32[$58>>2]|0; //@line 133 "./src/cpp/unrar/uowners.cpp"
 $60 = $5; //@line 133 "./src/cpp/unrar/uowners.cpp"
 $61 = ((($60)) + 17148|0); //@line 133 "./src/cpp/unrar/uowners.cpp"
 $62 = HEAP32[$61>>2]|0; //@line 133 "./src/cpp/unrar/uowners.cpp"
 $63 = (_lchown($4,$59,$62)|0); //@line 133 "./src/cpp/unrar/uowners.cpp"
 $64 = ($63|0)!=(0); //@line 133 "./src/cpp/unrar/uowners.cpp"
 if (!($64)) {
  STACKTOP = sp;return; //@line 141 "./src/cpp/unrar/uowners.cpp"
 }
 $65 = $2; //@line 138 "./src/cpp/unrar/uowners.cpp"
 $66 = ((($65)) + 24|0); //@line 138 "./src/cpp/unrar/uowners.cpp"
 $67 = $3; //@line 138 "./src/cpp/unrar/uowners.cpp"
 __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(89,$66,$67); //@line 138 "./src/cpp/unrar/uowners.cpp"
 __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,9); //@line 139 "./src/cpp/unrar/uowners.cpp"
 STACKTOP = sp;return; //@line 141 "./src/cpp/unrar/uowners.cpp"
}
function __Z17ExtractUnixLink30P11CommandDataR11ComprDataIOR7ArchivePKw($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2080|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2080|0);
 $4 = sp + 2072|0;
 $9 = sp + 24|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $11 = $7; //@line 42 "./src/cpp/unrar/ulinks.cpp"
 $12 = ((($11)) + 21424|0); //@line 42 "./src/cpp/unrar/ulinks.cpp"
 $13 = ((($12)) + 28|0); //@line 42 "./src/cpp/unrar/ulinks.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 42 "./src/cpp/unrar/ulinks.cpp"
 $15 = (__Z6IsLinkj($14)|0); //@line 42 "./src/cpp/unrar/ulinks.cpp"
 if (!($15)) {
  $$expand_i1_val6 = 0; //@line 62 "./src/cpp/unrar/ulinks.cpp"
  HEAP8[$4>>0] = $$expand_i1_val6; //@line 62 "./src/cpp/unrar/ulinks.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 63 "./src/cpp/unrar/ulinks.cpp"
  $93 = $$pre_trunc&1; //@line 63 "./src/cpp/unrar/ulinks.cpp"
  STACKTOP = sp;return ($93|0); //@line 63 "./src/cpp/unrar/ulinks.cpp"
 }
 $16 = $7; //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $17 = ((($16)) + 21424|0); //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $18 = ((($17)) + 8264|0); //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $19 = $18; //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $20 = $19; //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $21 = HEAP32[$20>>2]|0; //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $22 = (($19) + 4)|0; //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $23 = $22; //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $24 = HEAP32[$23>>2]|0; //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $25 = ($24|0)<(0); //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $26 = ($21>>>0)<(2047); //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $27 = ($24|0)==(0); //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $28 = $27 & $26; //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $29 = $25 | $28; //@line 44 "./src/cpp/unrar/ulinks.cpp"
 if ($29) {
  $30 = $7; //@line 44 "./src/cpp/unrar/ulinks.cpp"
  $31 = ((($30)) + 21424|0); //@line 44 "./src/cpp/unrar/ulinks.cpp"
  $32 = ((($31)) + 8264|0); //@line 44 "./src/cpp/unrar/ulinks.cpp"
  $33 = $32; //@line 44 "./src/cpp/unrar/ulinks.cpp"
  $34 = $33; //@line 44 "./src/cpp/unrar/ulinks.cpp"
  $35 = HEAP32[$34>>2]|0; //@line 44 "./src/cpp/unrar/ulinks.cpp"
  $36 = (($33) + 4)|0; //@line 44 "./src/cpp/unrar/ulinks.cpp"
  $37 = $36; //@line 44 "./src/cpp/unrar/ulinks.cpp"
  $38 = HEAP32[$37>>2]|0; //@line 44 "./src/cpp/unrar/ulinks.cpp"
  $39 = $35;$94 = $38;
 } else {
  $39 = 2047;$94 = 0;
 }
 $10 = $39; //@line 44 "./src/cpp/unrar/ulinks.cpp"
 $40 = $6; //@line 45 "./src/cpp/unrar/ulinks.cpp"
 $41 = $10; //@line 45 "./src/cpp/unrar/ulinks.cpp"
 (__ZN11ComprDataIO7UnpReadEPhj($40,$9,$41)|0); //@line 45 "./src/cpp/unrar/ulinks.cpp"
 $42 = $10; //@line 46 "./src/cpp/unrar/ulinks.cpp"
 $43 = (($9) + ($42)|0); //@line 46 "./src/cpp/unrar/ulinks.cpp"
 HEAP8[$43>>0] = 0; //@line 46 "./src/cpp/unrar/ulinks.cpp"
 $44 = $6; //@line 48 "./src/cpp/unrar/ulinks.cpp"
 $45 = ((($44)) + 168|0); //@line 48 "./src/cpp/unrar/ulinks.cpp"
 $46 = $7; //@line 48 "./src/cpp/unrar/ulinks.cpp"
 $47 = ((($46)) + 21424|0); //@line 48 "./src/cpp/unrar/ulinks.cpp"
 $48 = ((($47)) + 8288|0); //@line 48 "./src/cpp/unrar/ulinks.cpp"
 $49 = HEAP32[$48>>2]|0; //@line 48 "./src/cpp/unrar/ulinks.cpp"
 __ZN8DataHash4InitE9HASH_TYPEj($45,$49,1); //@line 48 "./src/cpp/unrar/ulinks.cpp"
 $50 = $6; //@line 49 "./src/cpp/unrar/ulinks.cpp"
 $51 = ((($50)) + 168|0); //@line 49 "./src/cpp/unrar/ulinks.cpp"
 $52 = (_strlen($9)|0); //@line 49 "./src/cpp/unrar/ulinks.cpp"
 __ZN8DataHash6UpdateEPKvj($51,$9,$52); //@line 49 "./src/cpp/unrar/ulinks.cpp"
 $53 = $6; //@line 50 "./src/cpp/unrar/ulinks.cpp"
 $54 = ((($53)) + 168|0); //@line 50 "./src/cpp/unrar/ulinks.cpp"
 $55 = $7; //@line 50 "./src/cpp/unrar/ulinks.cpp"
 $56 = ((($55)) + 21424|0); //@line 50 "./src/cpp/unrar/ulinks.cpp"
 $57 = ((($56)) + 8288|0); //@line 50 "./src/cpp/unrar/ulinks.cpp"
 __ZN8DataHash6ResultEP9HashValue($54,$57); //@line 50 "./src/cpp/unrar/ulinks.cpp"
 $58 = $6; //@line 54 "./src/cpp/unrar/ulinks.cpp"
 $59 = ((($58)) + 168|0); //@line 54 "./src/cpp/unrar/ulinks.cpp"
 $60 = $7; //@line 54 "./src/cpp/unrar/ulinks.cpp"
 $61 = ((($60)) + 21424|0); //@line 54 "./src/cpp/unrar/ulinks.cpp"
 $62 = ((($61)) + 8288|0); //@line 54 "./src/cpp/unrar/ulinks.cpp"
 $63 = $7; //@line 54 "./src/cpp/unrar/ulinks.cpp"
 $64 = ((($63)) + 21424|0); //@line 54 "./src/cpp/unrar/ulinks.cpp"
 $65 = ((($64)) + 8378|0); //@line 54 "./src/cpp/unrar/ulinks.cpp"
 $66 = HEAP8[$65>>0]|0; //@line 54 "./src/cpp/unrar/ulinks.cpp"
 $67 = $66&1; //@line 54 "./src/cpp/unrar/ulinks.cpp"
 if ($67) {
  $68 = $7; //@line 54 "./src/cpp/unrar/ulinks.cpp"
  $69 = ((($68)) + 21424|0); //@line 54 "./src/cpp/unrar/ulinks.cpp"
  $70 = ((($69)) + 8379|0); //@line 54 "./src/cpp/unrar/ulinks.cpp"
  $71 = $70;
 } else {
  $71 = 0;
 }
 $72 = (__ZN8DataHash3CmpEP9HashValuePh($59,$62,$71)|0); //@line 54 "./src/cpp/unrar/ulinks.cpp"
 if (!($72)) {
  $$expand_i1_val = 1; //@line 55 "./src/cpp/unrar/ulinks.cpp"
  HEAP8[$4>>0] = $$expand_i1_val; //@line 55 "./src/cpp/unrar/ulinks.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 63 "./src/cpp/unrar/ulinks.cpp"
  $93 = $$pre_trunc&1; //@line 63 "./src/cpp/unrar/ulinks.cpp"
  STACKTOP = sp;return ($93|0); //@line 63 "./src/cpp/unrar/ulinks.cpp"
 }
 $73 = $5; //@line 57 "./src/cpp/unrar/ulinks.cpp"
 $74 = ((($73)) + 49811|0); //@line 57 "./src/cpp/unrar/ulinks.cpp"
 $75 = HEAP8[$74>>0]|0; //@line 57 "./src/cpp/unrar/ulinks.cpp"
 $76 = $75&1; //@line 57 "./src/cpp/unrar/ulinks.cpp"
 do {
  if (!($76)) {
   $77 = (__ZL10IsFullPathPKc($9)|0); //@line 57 "./src/cpp/unrar/ulinks.cpp"
   if (!($77)) {
    $78 = $7; //@line 58 "./src/cpp/unrar/ulinks.cpp"
    $79 = ((($78)) + 21424|0); //@line 58 "./src/cpp/unrar/ulinks.cpp"
    $80 = ((($79)) + 32|0); //@line 58 "./src/cpp/unrar/ulinks.cpp"
    $81 = $7; //@line 58 "./src/cpp/unrar/ulinks.cpp"
    $82 = ((($81)) + 21424|0); //@line 58 "./src/cpp/unrar/ulinks.cpp"
    $83 = ((($82)) + 8436|0); //@line 58 "./src/cpp/unrar/ulinks.cpp"
    $84 = (__Z21IsRelativeSymlinkSafePKwS0_($80,$83)|0); //@line 58 "./src/cpp/unrar/ulinks.cpp"
    if ($84) {
     break;
    }
   }
   $$expand_i1_val2 = 0; //@line 59 "./src/cpp/unrar/ulinks.cpp"
   HEAP8[$4>>0] = $$expand_i1_val2; //@line 59 "./src/cpp/unrar/ulinks.cpp"
   $$pre_trunc = HEAP8[$4>>0]|0; //@line 63 "./src/cpp/unrar/ulinks.cpp"
   $93 = $$pre_trunc&1; //@line 63 "./src/cpp/unrar/ulinks.cpp"
   STACKTOP = sp;return ($93|0); //@line 63 "./src/cpp/unrar/ulinks.cpp"
  }
 } while(0);
 $85 = $8; //@line 60 "./src/cpp/unrar/ulinks.cpp"
 $86 = $7; //@line 60 "./src/cpp/unrar/ulinks.cpp"
 $87 = ((($86)) + 21424|0); //@line 60 "./src/cpp/unrar/ulinks.cpp"
 $88 = ((($87)) + 8240|0); //@line 60 "./src/cpp/unrar/ulinks.cpp"
 $89 = $7; //@line 60 "./src/cpp/unrar/ulinks.cpp"
 $90 = ((($89)) + 21424|0); //@line 60 "./src/cpp/unrar/ulinks.cpp"
 $91 = ((($90)) + 8256|0); //@line 60 "./src/cpp/unrar/ulinks.cpp"
 $92 = (__ZL11UnixSymlinkPKcPKwP7RarTimeS4_($9,$85,$88,$91)|0); //@line 60 "./src/cpp/unrar/ulinks.cpp"
 $$expand_i1_val4 = $92&1; //@line 60 "./src/cpp/unrar/ulinks.cpp"
 HEAP8[$4>>0] = $$expand_i1_val4; //@line 60 "./src/cpp/unrar/ulinks.cpp"
 $$pre_trunc = HEAP8[$4>>0]|0; //@line 63 "./src/cpp/unrar/ulinks.cpp"
 $93 = $$pre_trunc&1; //@line 63 "./src/cpp/unrar/ulinks.cpp"
 STACKTOP = sp;return ($93|0); //@line 63 "./src/cpp/unrar/ulinks.cpp"
}
function __ZL10IsFullPathPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 35 "./src/cpp/unrar/ulinks.cpp"
 $3 = HEAP8[$2>>0]|0; //@line 35 "./src/cpp/unrar/ulinks.cpp"
 $4 = $3 << 24 >> 24; //@line 35 "./src/cpp/unrar/ulinks.cpp"
 $5 = ($4|0)==(47); //@line 35 "./src/cpp/unrar/ulinks.cpp"
 STACKTOP = sp;return ($5|0); //@line 35 "./src/cpp/unrar/ulinks.cpp"
}
function __Z21IsRelativeSymlinkSafePKwS0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 19|0;
 $3 = $0;
 $4 = $1;
 $10 = $3; //@line 67 "./src/cpp/unrar/extinfo.cpp"
 $11 = (__Z14IsFullRootPathPKw($10)|0); //@line 67 "./src/cpp/unrar/extinfo.cpp"
 if ($11) {
  $$expand_i1_val = 0; //@line 68 "./src/cpp/unrar/extinfo.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 68 "./src/cpp/unrar/extinfo.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 93 "./src/cpp/unrar/extinfo.cpp"
  $104 = $$pre_trunc&1; //@line 93 "./src/cpp/unrar/extinfo.cpp"
  STACKTOP = sp;return ($104|0); //@line 93 "./src/cpp/unrar/extinfo.cpp"
 }
 $5 = 0; //@line 69 "./src/cpp/unrar/extinfo.cpp"
 while(1) {
  $12 = $3; //@line 70 "./src/cpp/unrar/extinfo.cpp"
  $13 = HEAP32[$12>>2]|0; //@line 70 "./src/cpp/unrar/extinfo.cpp"
  $14 = ($13|0)!=(0); //@line 70 "./src/cpp/unrar/extinfo.cpp"
  if (!($14)) {
   break;
  }
  $15 = $3; //@line 72 "./src/cpp/unrar/extinfo.cpp"
  $16 = HEAP32[$15>>2]|0; //@line 72 "./src/cpp/unrar/extinfo.cpp"
  $17 = (__Z9IsPathDivi($16)|0); //@line 72 "./src/cpp/unrar/extinfo.cpp"
  if ($17) {
   $18 = $3; //@line 72 "./src/cpp/unrar/extinfo.cpp"
   $19 = ((($18)) + 4|0); //@line 72 "./src/cpp/unrar/extinfo.cpp"
   $20 = HEAP32[$19>>2]|0; //@line 72 "./src/cpp/unrar/extinfo.cpp"
   $21 = ($20|0)!=(0); //@line 72 "./src/cpp/unrar/extinfo.cpp"
   if ($21) {
    $22 = $3; //@line 72 "./src/cpp/unrar/extinfo.cpp"
    $23 = ((($22)) + 4|0); //@line 72 "./src/cpp/unrar/extinfo.cpp"
    $24 = HEAP32[$23>>2]|0; //@line 72 "./src/cpp/unrar/extinfo.cpp"
    $25 = (__Z9IsPathDivi($24)|0); //@line 72 "./src/cpp/unrar/extinfo.cpp"
    if (!($25)) {
     $26 = $3; //@line 74 "./src/cpp/unrar/extinfo.cpp"
     $27 = ((($26)) + 4|0); //@line 74 "./src/cpp/unrar/extinfo.cpp"
     $28 = HEAP32[$27>>2]|0; //@line 74 "./src/cpp/unrar/extinfo.cpp"
     $29 = ($28|0)==(46); //@line 74 "./src/cpp/unrar/extinfo.cpp"
     if ($29) {
      $30 = $3; //@line 74 "./src/cpp/unrar/extinfo.cpp"
      $31 = ((($30)) + 8|0); //@line 74 "./src/cpp/unrar/extinfo.cpp"
      $32 = HEAP32[$31>>2]|0; //@line 74 "./src/cpp/unrar/extinfo.cpp"
      $33 = (__Z9IsPathDivi($32)|0); //@line 74 "./src/cpp/unrar/extinfo.cpp"
      if ($33) {
       $39 = 1;
      } else {
       $34 = $3; //@line 74 "./src/cpp/unrar/extinfo.cpp"
       $35 = ((($34)) + 8|0); //@line 74 "./src/cpp/unrar/extinfo.cpp"
       $36 = HEAP32[$35>>2]|0; //@line 74 "./src/cpp/unrar/extinfo.cpp"
       $37 = ($36|0)==(0); //@line 74 "./src/cpp/unrar/extinfo.cpp"
       $39 = $37;
      }
     } else {
      $39 = 0;
     }
     $38 = $39&1; //@line 74 "./src/cpp/unrar/extinfo.cpp"
     $6 = $38; //@line 74 "./src/cpp/unrar/extinfo.cpp"
     $40 = $3; //@line 75 "./src/cpp/unrar/extinfo.cpp"
     $41 = ((($40)) + 4|0); //@line 75 "./src/cpp/unrar/extinfo.cpp"
     $42 = HEAP32[$41>>2]|0; //@line 75 "./src/cpp/unrar/extinfo.cpp"
     $43 = ($42|0)==(46); //@line 75 "./src/cpp/unrar/extinfo.cpp"
     if ($43) {
      $44 = $3; //@line 75 "./src/cpp/unrar/extinfo.cpp"
      $45 = ((($44)) + 8|0); //@line 75 "./src/cpp/unrar/extinfo.cpp"
      $46 = HEAP32[$45>>2]|0; //@line 75 "./src/cpp/unrar/extinfo.cpp"
      $47 = ($46|0)==(46); //@line 75 "./src/cpp/unrar/extinfo.cpp"
      if ($47) {
       $48 = $3; //@line 75 "./src/cpp/unrar/extinfo.cpp"
       $49 = ((($48)) + 12|0); //@line 75 "./src/cpp/unrar/extinfo.cpp"
       $50 = HEAP32[$49>>2]|0; //@line 75 "./src/cpp/unrar/extinfo.cpp"
       $51 = (__Z9IsPathDivi($50)|0); //@line 75 "./src/cpp/unrar/extinfo.cpp"
       if ($51) {
        $57 = 1;
       } else {
        $52 = $3; //@line 75 "./src/cpp/unrar/extinfo.cpp"
        $53 = ((($52)) + 12|0); //@line 75 "./src/cpp/unrar/extinfo.cpp"
        $54 = HEAP32[$53>>2]|0; //@line 75 "./src/cpp/unrar/extinfo.cpp"
        $55 = ($54|0)==(0); //@line 75 "./src/cpp/unrar/extinfo.cpp"
        $57 = $55;
       }
      } else {
       $57 = 0;
      }
     } else {
      $57 = 0;
     }
     $56 = $57&1; //@line 75 "./src/cpp/unrar/extinfo.cpp"
     $7 = $56; //@line 75 "./src/cpp/unrar/extinfo.cpp"
     $58 = $6; //@line 76 "./src/cpp/unrar/extinfo.cpp"
     $59 = $58&1; //@line 76 "./src/cpp/unrar/extinfo.cpp"
     if (!($59)) {
      $60 = $7; //@line 76 "./src/cpp/unrar/extinfo.cpp"
      $61 = $60&1; //@line 76 "./src/cpp/unrar/extinfo.cpp"
      if (!($61)) {
       $62 = $5; //@line 77 "./src/cpp/unrar/extinfo.cpp"
       $63 = (($62) + 1)|0; //@line 77 "./src/cpp/unrar/extinfo.cpp"
       $5 = $63; //@line 77 "./src/cpp/unrar/extinfo.cpp"
      }
     }
    }
   }
  }
  $64 = $3; //@line 79 "./src/cpp/unrar/extinfo.cpp"
  $65 = ((($64)) + 4|0); //@line 79 "./src/cpp/unrar/extinfo.cpp"
  $3 = $65; //@line 79 "./src/cpp/unrar/extinfo.cpp"
 }
 $66 = $4; //@line 81 "./src/cpp/unrar/extinfo.cpp"
 $67 = (__Z14IsFullRootPathPKw($66)|0); //@line 81 "./src/cpp/unrar/extinfo.cpp"
 if ($67) {
  $$expand_i1_val2 = 0; //@line 82 "./src/cpp/unrar/extinfo.cpp"
  HEAP8[$2>>0] = $$expand_i1_val2; //@line 82 "./src/cpp/unrar/extinfo.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 93 "./src/cpp/unrar/extinfo.cpp"
  $104 = $$pre_trunc&1; //@line 93 "./src/cpp/unrar/extinfo.cpp"
  STACKTOP = sp;return ($104|0); //@line 93 "./src/cpp/unrar/extinfo.cpp"
 }
 $8 = 0; //@line 83 "./src/cpp/unrar/extinfo.cpp"
 while(1) {
  $68 = $4; //@line 83 "./src/cpp/unrar/extinfo.cpp"
  $69 = HEAP32[$68>>2]|0; //@line 83 "./src/cpp/unrar/extinfo.cpp"
  $70 = ($69|0)!=(0); //@line 83 "./src/cpp/unrar/extinfo.cpp"
  if (!($70)) {
   break;
  }
  $71 = $4; //@line 85 "./src/cpp/unrar/extinfo.cpp"
  $72 = HEAP32[$71>>2]|0; //@line 85 "./src/cpp/unrar/extinfo.cpp"
  $73 = ($72|0)==(46); //@line 85 "./src/cpp/unrar/extinfo.cpp"
  do {
   if ($73) {
    $74 = $4; //@line 85 "./src/cpp/unrar/extinfo.cpp"
    $75 = ((($74)) + 4|0); //@line 85 "./src/cpp/unrar/extinfo.cpp"
    $76 = HEAP32[$75>>2]|0; //@line 85 "./src/cpp/unrar/extinfo.cpp"
    $77 = ($76|0)==(46); //@line 85 "./src/cpp/unrar/extinfo.cpp"
    if ($77) {
     $78 = $4; //@line 86 "./src/cpp/unrar/extinfo.cpp"
     $79 = ((($78)) + 8|0); //@line 86 "./src/cpp/unrar/extinfo.cpp"
     $80 = HEAP32[$79>>2]|0; //@line 86 "./src/cpp/unrar/extinfo.cpp"
     $81 = (__Z9IsPathDivi($80)|0); //@line 86 "./src/cpp/unrar/extinfo.cpp"
     if (!($81)) {
      $82 = $4; //@line 86 "./src/cpp/unrar/extinfo.cpp"
      $83 = ((($82)) + 8|0); //@line 86 "./src/cpp/unrar/extinfo.cpp"
      $84 = HEAP32[$83>>2]|0; //@line 86 "./src/cpp/unrar/extinfo.cpp"
      $85 = ($84|0)==(0); //@line 86 "./src/cpp/unrar/extinfo.cpp"
      if (!($85)) {
       $93 = 0;
       break;
      }
     }
     $86 = $8; //@line 87 "./src/cpp/unrar/extinfo.cpp"
     $87 = ($86|0)==(0); //@line 87 "./src/cpp/unrar/extinfo.cpp"
     if ($87) {
      $93 = 1;
     } else {
      $88 = $4; //@line 87 "./src/cpp/unrar/extinfo.cpp"
      $89 = ((($88)) + -4|0); //@line 87 "./src/cpp/unrar/extinfo.cpp"
      $90 = HEAP32[$89>>2]|0; //@line 87 "./src/cpp/unrar/extinfo.cpp"
      $91 = (__Z9IsPathDivi($90)|0); //@line 87 "./src/cpp/unrar/extinfo.cpp"
      $93 = $91;
     }
    } else {
     $93 = 0;
    }
   } else {
    $93 = 0;
   }
  } while(0);
  $92 = $93&1; //@line 85 "./src/cpp/unrar/extinfo.cpp"
  $9 = $92; //@line 85 "./src/cpp/unrar/extinfo.cpp"
  $94 = $9; //@line 88 "./src/cpp/unrar/extinfo.cpp"
  $95 = $94&1; //@line 88 "./src/cpp/unrar/extinfo.cpp"
  if ($95) {
   $96 = $5; //@line 89 "./src/cpp/unrar/extinfo.cpp"
   $97 = (($96) + -1)|0; //@line 89 "./src/cpp/unrar/extinfo.cpp"
   $5 = $97; //@line 89 "./src/cpp/unrar/extinfo.cpp"
  }
  $98 = $4; //@line 90 "./src/cpp/unrar/extinfo.cpp"
  $99 = ((($98)) + 4|0); //@line 90 "./src/cpp/unrar/extinfo.cpp"
  $4 = $99; //@line 90 "./src/cpp/unrar/extinfo.cpp"
  $100 = $8; //@line 83 "./src/cpp/unrar/extinfo.cpp"
  $101 = (($100) + 1)|0; //@line 83 "./src/cpp/unrar/extinfo.cpp"
  $8 = $101; //@line 83 "./src/cpp/unrar/extinfo.cpp"
 }
 $102 = $5; //@line 92 "./src/cpp/unrar/extinfo.cpp"
 $103 = ($102|0)>=(0); //@line 92 "./src/cpp/unrar/extinfo.cpp"
 $$expand_i1_val4 = $103&1; //@line 92 "./src/cpp/unrar/extinfo.cpp"
 HEAP8[$2>>0] = $$expand_i1_val4; //@line 92 "./src/cpp/unrar/extinfo.cpp"
 $$pre_trunc = HEAP8[$2>>0]|0; //@line 93 "./src/cpp/unrar/extinfo.cpp"
 $104 = $$pre_trunc&1; //@line 93 "./src/cpp/unrar/extinfo.cpp"
 STACKTOP = sp;return ($104|0); //@line 93 "./src/cpp/unrar/extinfo.cpp"
}
function __ZL11UnixSymlinkPKcPKwP7RarTimeS4_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2080|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2080|0);
 $4 = sp + 2064|0;
 $9 = sp + 16|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $10 = $6; //@line 5 "./src/cpp/unrar/ulinks.cpp"
 (__Z10CreatePathPKwb($10,1)|0); //@line 5 "./src/cpp/unrar/ulinks.cpp"
 $11 = $6; //@line 6 "./src/cpp/unrar/ulinks.cpp"
 (__Z7DelFilePKw($11)|0); //@line 6 "./src/cpp/unrar/ulinks.cpp"
 $12 = $6; //@line 8 "./src/cpp/unrar/ulinks.cpp"
 (__Z10WideToCharPKwPcj($12,$9,2048)|0); //@line 8 "./src/cpp/unrar/ulinks.cpp"
 $13 = $5; //@line 9 "./src/cpp/unrar/ulinks.cpp"
 $14 = (_symlink($13,$9)|0); //@line 9 "./src/cpp/unrar/ulinks.cpp"
 $15 = ($14|0)==(-1); //@line 9 "./src/cpp/unrar/ulinks.cpp"
 if (!($15)) {
  $$expand_i1_val2 = 1; //@line 29 "./src/cpp/unrar/ulinks.cpp"
  HEAP8[$4>>0] = $$expand_i1_val2; //@line 29 "./src/cpp/unrar/ulinks.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 30 "./src/cpp/unrar/ulinks.cpp"
  $20 = $$pre_trunc&1; //@line 30 "./src/cpp/unrar/ulinks.cpp"
  STACKTOP = sp;return ($20|0); //@line 30 "./src/cpp/unrar/ulinks.cpp"
 }
 $16 = (___errno_location()|0); //@line 11 "./src/cpp/unrar/ulinks.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 11 "./src/cpp/unrar/ulinks.cpp"
 $18 = ($17|0)==(17); //@line 11 "./src/cpp/unrar/ulinks.cpp"
 $19 = $6;
 if ($18) {
  __Z5uiMsgIPKwEv14UIMESSAGE_CODET_(91,$19); //@line 12 "./src/cpp/unrar/ulinks.cpp"
 } else {
  __Z5uiMsgIPwPKwEv14UIMESSAGE_CODET_T0_(20,0,$19); //@line 15 "./src/cpp/unrar/ulinks.cpp"
  __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 16 "./src/cpp/unrar/ulinks.cpp"
 }
 $$expand_i1_val = 0; //@line 18 "./src/cpp/unrar/ulinks.cpp"
 HEAP8[$4>>0] = $$expand_i1_val; //@line 18 "./src/cpp/unrar/ulinks.cpp"
 $$pre_trunc = HEAP8[$4>>0]|0; //@line 30 "./src/cpp/unrar/ulinks.cpp"
 $20 = $$pre_trunc&1; //@line 30 "./src/cpp/unrar/ulinks.cpp"
 STACKTOP = sp;return ($20|0); //@line 30 "./src/cpp/unrar/ulinks.cpp"
}
function __Z17ExtractUnixLink50P11CommandDataPKwP10FileHeader($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2080|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2080|0);
 $3 = sp + 2064|0;
 $7 = sp + 16|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $6; //@line 69 "./src/cpp/unrar/ulinks.cpp"
 $9 = ((($8)) + 8436|0); //@line 69 "./src/cpp/unrar/ulinks.cpp"
 (__Z10WideToCharPKwPcj($9,$7,2048)|0); //@line 69 "./src/cpp/unrar/ulinks.cpp"
 $10 = $6; //@line 70 "./src/cpp/unrar/ulinks.cpp"
 $11 = ((($10)) + 8432|0); //@line 70 "./src/cpp/unrar/ulinks.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 70 "./src/cpp/unrar/ulinks.cpp"
 $13 = ($12|0)==(2); //@line 70 "./src/cpp/unrar/ulinks.cpp"
 if ($13) {
  label = 3;
 } else {
  $14 = $6; //@line 70 "./src/cpp/unrar/ulinks.cpp"
  $15 = ((($14)) + 8432|0); //@line 70 "./src/cpp/unrar/ulinks.cpp"
  $16 = HEAP32[$15>>2]|0; //@line 70 "./src/cpp/unrar/ulinks.cpp"
  $17 = ($16|0)==(3); //@line 70 "./src/cpp/unrar/ulinks.cpp"
  if ($17) {
   label = 3;
  }
 }
 do {
  if ((label|0) == 3) {
   $18 = (_strncmp($7,5343,4)|0); //@line 76 "./src/cpp/unrar/ulinks.cpp"
   $19 = ($18|0)==(0); //@line 76 "./src/cpp/unrar/ulinks.cpp"
   if (!($19)) {
    $20 = (_strncmp($7,5348,4)|0); //@line 76 "./src/cpp/unrar/ulinks.cpp"
    $21 = ($20|0)==(0); //@line 76 "./src/cpp/unrar/ulinks.cpp"
    if (!($21)) {
     __Z14DosSlashToUnixPKcPcj($7,$7,2048); //@line 78 "./src/cpp/unrar/ulinks.cpp"
     break;
    }
   }
   $$expand_i1_val = 0; //@line 77 "./src/cpp/unrar/ulinks.cpp"
   HEAP8[$3>>0] = $$expand_i1_val; //@line 77 "./src/cpp/unrar/ulinks.cpp"
   $$pre_trunc = HEAP8[$3>>0]|0; //@line 84 "./src/cpp/unrar/ulinks.cpp"
   $38 = $$pre_trunc&1; //@line 84 "./src/cpp/unrar/ulinks.cpp"
   STACKTOP = sp;return ($38|0); //@line 84 "./src/cpp/unrar/ulinks.cpp"
  }
 } while(0);
 $22 = $4; //@line 80 "./src/cpp/unrar/ulinks.cpp"
 $23 = ((($22)) + 49811|0); //@line 80 "./src/cpp/unrar/ulinks.cpp"
 $24 = HEAP8[$23>>0]|0; //@line 80 "./src/cpp/unrar/ulinks.cpp"
 $25 = $24&1; //@line 80 "./src/cpp/unrar/ulinks.cpp"
 do {
  if (!($25)) {
   $26 = (__ZL10IsFullPathPKc($7)|0); //@line 80 "./src/cpp/unrar/ulinks.cpp"
   if (!($26)) {
    $27 = $6; //@line 81 "./src/cpp/unrar/ulinks.cpp"
    $28 = ((($27)) + 32|0); //@line 81 "./src/cpp/unrar/ulinks.cpp"
    $29 = $6; //@line 81 "./src/cpp/unrar/ulinks.cpp"
    $30 = ((($29)) + 8436|0); //@line 81 "./src/cpp/unrar/ulinks.cpp"
    $31 = (__Z21IsRelativeSymlinkSafePKwS0_($28,$30)|0); //@line 81 "./src/cpp/unrar/ulinks.cpp"
    if ($31) {
     break;
    }
   }
   $$expand_i1_val2 = 0; //@line 82 "./src/cpp/unrar/ulinks.cpp"
   HEAP8[$3>>0] = $$expand_i1_val2; //@line 82 "./src/cpp/unrar/ulinks.cpp"
   $$pre_trunc = HEAP8[$3>>0]|0; //@line 84 "./src/cpp/unrar/ulinks.cpp"
   $38 = $$pre_trunc&1; //@line 84 "./src/cpp/unrar/ulinks.cpp"
   STACKTOP = sp;return ($38|0); //@line 84 "./src/cpp/unrar/ulinks.cpp"
  }
 } while(0);
 $32 = $5; //@line 83 "./src/cpp/unrar/ulinks.cpp"
 $33 = $6; //@line 83 "./src/cpp/unrar/ulinks.cpp"
 $34 = ((($33)) + 8240|0); //@line 83 "./src/cpp/unrar/ulinks.cpp"
 $35 = $6; //@line 83 "./src/cpp/unrar/ulinks.cpp"
 $36 = ((($35)) + 8256|0); //@line 83 "./src/cpp/unrar/ulinks.cpp"
 $37 = (__ZL11UnixSymlinkPKcPKwP7RarTimeS4_($7,$32,$34,$36)|0); //@line 83 "./src/cpp/unrar/ulinks.cpp"
 $$expand_i1_val4 = $37&1; //@line 83 "./src/cpp/unrar/ulinks.cpp"
 HEAP8[$3>>0] = $$expand_i1_val4; //@line 83 "./src/cpp/unrar/ulinks.cpp"
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 84 "./src/cpp/unrar/ulinks.cpp"
 $38 = $$pre_trunc&1; //@line 84 "./src/cpp/unrar/ulinks.cpp"
 STACKTOP = sp;return ($38|0); //@line 84 "./src/cpp/unrar/ulinks.cpp"
}
function __Z14SetExtraInfo20P11CommandDataR7ArchivePw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 23 "./src/cpp/unrar/extinfo.cpp"
 $7 = ((($6)) + 50377|0); //@line 23 "./src/cpp/unrar/extinfo.cpp"
 $8 = HEAP8[$7>>0]|0; //@line 23 "./src/cpp/unrar/extinfo.cpp"
 $9 = $8&1; //@line 23 "./src/cpp/unrar/extinfo.cpp"
 if ($9) {
  STACKTOP = sp;return; //@line 43 "./src/cpp/unrar/extinfo.cpp"
 }
 $10 = $4; //@line 25 "./src/cpp/unrar/extinfo.cpp"
 $11 = ((($10)) + 38608|0); //@line 25 "./src/cpp/unrar/extinfo.cpp"
 $12 = ((($11)) + 24|0); //@line 25 "./src/cpp/unrar/extinfo.cpp"
 $13 = HEAP16[$12>>1]|0; //@line 25 "./src/cpp/unrar/extinfo.cpp"
 $14 = $13&65535; //@line 25 "./src/cpp/unrar/extinfo.cpp"
 $cond = ($14|0)==(257); //@line 25 "./src/cpp/unrar/extinfo.cpp"
 if (!($cond)) {
  STACKTOP = sp;return; //@line 43 "./src/cpp/unrar/extinfo.cpp"
 }
 $15 = $3; //@line 29 "./src/cpp/unrar/extinfo.cpp"
 $16 = ((($15)) + 49808|0); //@line 29 "./src/cpp/unrar/extinfo.cpp"
 $17 = HEAP8[$16>>0]|0; //@line 29 "./src/cpp/unrar/extinfo.cpp"
 $18 = $17&1; //@line 29 "./src/cpp/unrar/extinfo.cpp"
 if (!($18)) {
  STACKTOP = sp;return; //@line 43 "./src/cpp/unrar/extinfo.cpp"
 }
 $19 = $4; //@line 30 "./src/cpp/unrar/extinfo.cpp"
 $20 = $5; //@line 30 "./src/cpp/unrar/extinfo.cpp"
 __Z18ExtractUnixOwner20R7ArchivePKw($19,$20); //@line 30 "./src/cpp/unrar/extinfo.cpp"
 STACKTOP = sp;return; //@line 43 "./src/cpp/unrar/extinfo.cpp"
}
function __Z12SetExtraInfoP11CommandDataR7ArchivePw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 50 "./src/cpp/unrar/extinfo.cpp"
 $7 = ((($6)) + 50377|0); //@line 50 "./src/cpp/unrar/extinfo.cpp"
 $8 = HEAP8[$7>>0]|0; //@line 50 "./src/cpp/unrar/extinfo.cpp"
 $9 = $8&1; //@line 50 "./src/cpp/unrar/extinfo.cpp"
 if (!($9)) {
  $10 = $3; //@line 50 "./src/cpp/unrar/extinfo.cpp"
  $11 = ((($10)) + 49808|0); //@line 50 "./src/cpp/unrar/extinfo.cpp"
  $12 = HEAP8[$11>>0]|0; //@line 50 "./src/cpp/unrar/extinfo.cpp"
  $13 = $12&1; //@line 50 "./src/cpp/unrar/extinfo.cpp"
  if ($13) {
   $14 = $4; //@line 50 "./src/cpp/unrar/extinfo.cpp"
   $15 = ((($14)) + 56856|0); //@line 50 "./src/cpp/unrar/extinfo.cpp"
   $16 = HEAP32[$15>>2]|0; //@line 50 "./src/cpp/unrar/extinfo.cpp"
   $17 = ($16|0)==(2); //@line 50 "./src/cpp/unrar/extinfo.cpp"
   if ($17) {
    $18 = $4; //@line 51 "./src/cpp/unrar/extinfo.cpp"
    $19 = ((($18)) + 38640|0); //@line 51 "./src/cpp/unrar/extinfo.cpp"
    $20 = (__ZN10FileHeader7CmpNameEPKw($19,1252)|0); //@line 51 "./src/cpp/unrar/extinfo.cpp"
    if ($20) {
     $21 = $4; //@line 52 "./src/cpp/unrar/extinfo.cpp"
     $22 = $5; //@line 52 "./src/cpp/unrar/extinfo.cpp"
     __Z18ExtractUnixOwner30R7ArchivePKw($21,$22); //@line 52 "./src/cpp/unrar/extinfo.cpp"
    }
   }
  }
 }
 STACKTOP = sp;return; //@line 60 "./src/cpp/unrar/extinfo.cpp"
}
function __Z14ExtractSymlinkP11CommandDataR11ComprDataIOR7ArchivePKw($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 16|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $7; //@line 100 "./src/cpp/unrar/extinfo.cpp"
 $10 = ((($9)) + 56856|0); //@line 100 "./src/cpp/unrar/extinfo.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 100 "./src/cpp/unrar/extinfo.cpp"
 $12 = ($11|0)==(2); //@line 100 "./src/cpp/unrar/extinfo.cpp"
 do {
  if ($12) {
   $13 = $5; //@line 101 "./src/cpp/unrar/extinfo.cpp"
   $14 = $6; //@line 101 "./src/cpp/unrar/extinfo.cpp"
   $15 = $7; //@line 101 "./src/cpp/unrar/extinfo.cpp"
   $16 = $8; //@line 101 "./src/cpp/unrar/extinfo.cpp"
   $17 = (__Z17ExtractUnixLink30P11CommandDataR11ComprDataIOR7ArchivePKw($13,$14,$15,$16)|0); //@line 101 "./src/cpp/unrar/extinfo.cpp"
   $$expand_i1_val = $17&1; //@line 101 "./src/cpp/unrar/extinfo.cpp"
   HEAP8[$4>>0] = $$expand_i1_val; //@line 101 "./src/cpp/unrar/extinfo.cpp"
  } else {
   $18 = $7; //@line 102 "./src/cpp/unrar/extinfo.cpp"
   $19 = ((($18)) + 56856|0); //@line 102 "./src/cpp/unrar/extinfo.cpp"
   $20 = HEAP32[$19>>2]|0; //@line 102 "./src/cpp/unrar/extinfo.cpp"
   $21 = ($20|0)==(3); //@line 102 "./src/cpp/unrar/extinfo.cpp"
   if ($21) {
    $22 = $5; //@line 103 "./src/cpp/unrar/extinfo.cpp"
    $23 = $8; //@line 103 "./src/cpp/unrar/extinfo.cpp"
    $24 = $7; //@line 103 "./src/cpp/unrar/extinfo.cpp"
    $25 = ((($24)) + 21424|0); //@line 103 "./src/cpp/unrar/extinfo.cpp"
    $26 = (__Z17ExtractUnixLink50P11CommandDataPKwP10FileHeader($22,$23,$25)|0); //@line 103 "./src/cpp/unrar/extinfo.cpp"
    $$expand_i1_val2 = $26&1; //@line 103 "./src/cpp/unrar/extinfo.cpp"
    HEAP8[$4>>0] = $$expand_i1_val2; //@line 103 "./src/cpp/unrar/extinfo.cpp"
    break;
   } else {
    $$expand_i1_val4 = 0; //@line 110 "./src/cpp/unrar/extinfo.cpp"
    HEAP8[$4>>0] = $$expand_i1_val4; //@line 110 "./src/cpp/unrar/extinfo.cpp"
    break;
   }
  }
 } while(0);
 $$pre_trunc = HEAP8[$4>>0]|0; //@line 111 "./src/cpp/unrar/extinfo.cpp"
 $27 = $$pre_trunc&1; //@line 111 "./src/cpp/unrar/extinfo.cpp"
 STACKTOP = sp;return ($27|0); //@line 111 "./src/cpp/unrar/extinfo.cpp"
}
function __ZN10CmdExtractC2EP11CommandData($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN7RarTimeC2Ev($6); //@line 3 "./src/cpp/unrar/extract.cpp"
 $7 = ((($6)) + 16|0); //@line 3 "./src/cpp/unrar/extract.cpp"
 __ZN11ComprDataIOC2Ev($7); //@line 3 "./src/cpp/unrar/extract.cpp"
 $8 = $3; //@line 5 "./src/cpp/unrar/extract.cpp"
 $9 = ((($6)) + 8|0); //@line 5 "./src/cpp/unrar/extract.cpp"
 HEAP32[$9>>2] = $8; //@line 5 "./src/cpp/unrar/extract.cpp"
 $10 = ((($6)) + 220|0); //@line 7 "./src/cpp/unrar/extract.cpp"
 HEAP32[$10>>2] = 0; //@line 7 "./src/cpp/unrar/extract.cpp"
 $11 = ((($6)) + 8416|0); //@line 9 "./src/cpp/unrar/extract.cpp"
 HEAP32[$11>>2] = 0; //@line 9 "./src/cpp/unrar/extract.cpp"
 $12 = ((($6)) + 204|0); //@line 11 "./src/cpp/unrar/extract.cpp"
 HEAP32[$12>>2] = 0; //@line 11 "./src/cpp/unrar/extract.cpp"
 __THREW__ = 0;
 $13 = (invoke_ii(49,59096)|0); //@line 12 "./src/cpp/unrar/extract.cpp"
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if ($15) {
  $20 = ___cxa_find_matching_catch_2()|0;
  $21 = tempRet0;
  $4 = $20; //@line 16 "./src/cpp/unrar/extract.cpp"
  $5 = $21; //@line 16 "./src/cpp/unrar/extract.cpp"
  __ZN11ComprDataIOD2Ev($7); //@line 16 "./src/cpp/unrar/extract.cpp"
  $24 = $4; //@line 16 "./src/cpp/unrar/extract.cpp"
  $25 = $5; //@line 16 "./src/cpp/unrar/extract.cpp"
  ___resumeException($24|0);
  // unreachable;
 }
 $16 = ((($6)) + 16|0); //@line 12 "./src/cpp/unrar/extract.cpp"
 __THREW__ = 0;
 invoke_vii(109,($13|0),($16|0)); //@line 12 "./src/cpp/unrar/extract.cpp"
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if (!($18)) {
  $19 = ((($6)) + 200|0); //@line 12 "./src/cpp/unrar/extract.cpp"
  HEAP32[$19>>2] = $13; //@line 12 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return; //@line 16 "./src/cpp/unrar/extract.cpp"
 }
 $22 = ___cxa_find_matching_catch_2()|0;
 $23 = tempRet0;
 $4 = $22; //@line 16 "./src/cpp/unrar/extract.cpp"
 $5 = $23; //@line 16 "./src/cpp/unrar/extract.cpp"
 __ZdlPv($13); //@line 12 "./src/cpp/unrar/extract.cpp"
 __ZN11ComprDataIOD2Ev($7); //@line 16 "./src/cpp/unrar/extract.cpp"
 $24 = $4; //@line 16 "./src/cpp/unrar/extract.cpp"
 $25 = $5; //@line 16 "./src/cpp/unrar/extract.cpp"
 ___resumeException($24|0);
 // unreachable;
}
function __ZN10CmdExtractD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 200|0); //@line 21 "./src/cpp/unrar/extract.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 21 "./src/cpp/unrar/extract.cpp"
 $5 = ($4|0)==(0|0); //@line 21 "./src/cpp/unrar/extract.cpp"
 if (!($5)) {
  __ZN6UnpackD2Ev($4); //@line 21 "./src/cpp/unrar/extract.cpp"
  __ZdlPv($4); //@line 21 "./src/cpp/unrar/extract.cpp"
 }
 $6 = ((($2)) + 16|0); //@line 22 "./src/cpp/unrar/extract.cpp"
 __ZN11ComprDataIOD2Ev($6); //@line 22 "./src/cpp/unrar/extract.cpp"
 STACKTOP = sp;return; //@line 22 "./src/cpp/unrar/extract.cpp"
}
function __ZN10CmdExtract18ExtractArchiveInitER7Archive($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 80 "./src/cpp/unrar/extract.cpp"
 $6 = (__ZN4File10FileLengthEv($5)|0); //@line 80 "./src/cpp/unrar/extract.cpp"
 $7 = tempRet0; //@line 80 "./src/cpp/unrar/extract.cpp"
 $8 = ((($4)) + 16|0); //@line 80 "./src/cpp/unrar/extract.cpp"
 $9 = ((($8)) + 88|0); //@line 80 "./src/cpp/unrar/extract.cpp"
 $10 = $9; //@line 80 "./src/cpp/unrar/extract.cpp"
 $11 = $10; //@line 80 "./src/cpp/unrar/extract.cpp"
 HEAP32[$11>>2] = $6; //@line 80 "./src/cpp/unrar/extract.cpp"
 $12 = (($10) + 4)|0; //@line 80 "./src/cpp/unrar/extract.cpp"
 $13 = $12; //@line 80 "./src/cpp/unrar/extract.cpp"
 HEAP32[$13>>2] = $7; //@line 80 "./src/cpp/unrar/extract.cpp"
 $14 = ((($4)) + 208|0); //@line 82 "./src/cpp/unrar/extract.cpp"
 HEAP32[$14>>2] = 0; //@line 82 "./src/cpp/unrar/extract.cpp"
 $15 = ((($4)) + 212|0); //@line 83 "./src/cpp/unrar/extract.cpp"
 HEAP32[$15>>2] = 0; //@line 83 "./src/cpp/unrar/extract.cpp"
 $16 = ((($4)) + 216|0); //@line 85 "./src/cpp/unrar/extract.cpp"
 HEAP8[$16>>0] = 1; //@line 85 "./src/cpp/unrar/extract.cpp"
 $17 = ((($4)) + 8|0); //@line 88 "./src/cpp/unrar/extract.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 88 "./src/cpp/unrar/extract.cpp"
 $19 = ((($18)) + 41000|0); //@line 88 "./src/cpp/unrar/extract.cpp"
 $20 = (__ZN11SecPassword5IsSetEv($19)|0); //@line 88 "./src/cpp/unrar/extract.cpp"
 $21 = ((($4)) + 8412|0); //@line 88 "./src/cpp/unrar/extract.cpp"
 $22 = $20&1; //@line 88 "./src/cpp/unrar/extract.cpp"
 HEAP8[$21>>0] = $22; //@line 88 "./src/cpp/unrar/extract.cpp"
 $23 = ((($4)) + 16|0); //@line 90 "./src/cpp/unrar/extract.cpp"
 $24 = ((($23)) + 81|0); //@line 90 "./src/cpp/unrar/extract.cpp"
 HEAP8[$24>>0] = 0; //@line 90 "./src/cpp/unrar/extract.cpp"
 $25 = ((($4)) + 8413|0); //@line 92 "./src/cpp/unrar/extract.cpp"
 HEAP8[$25>>0] = 0; //@line 92 "./src/cpp/unrar/extract.cpp"
 $26 = ((($4)) + 217|0); //@line 93 "./src/cpp/unrar/extract.cpp"
 HEAP8[$26>>0] = 1; //@line 93 "./src/cpp/unrar/extract.cpp"
 $27 = ((($4)) + 218|0); //@line 94 "./src/cpp/unrar/extract.cpp"
 HEAP8[$27>>0] = 0; //@line 94 "./src/cpp/unrar/extract.cpp"
 $28 = ((($4)) + 219|0); //@line 95 "./src/cpp/unrar/extract.cpp"
 HEAP8[$28>>0] = 0; //@line 95 "./src/cpp/unrar/extract.cpp"
 __ZN7RarTime14SetCurrentTimeEv($4); //@line 97 "./src/cpp/unrar/extract.cpp"
 STACKTOP = sp;return; //@line 98 "./src/cpp/unrar/extract.cpp"
}
function __ZN10CmdExtract18ExtractCurrentFileER7ArchivejRb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val41 = 0, $$expand_i1_val43 = 0, $$expand_i1_val45 = 0, $$expand_i1_val47 = 0, $$expand_i1_val49 = 0, $$expand_i1_val51 = 0, $$expand_i1_val53 = 0, $$expand_i1_val55 = 0, $$expand_i1_val57 = 0, $$expand_i1_val59 = 0, $$expand_i1_val61 = 0, $$expand_i1_val63 = 0, $$expand_i1_val65 = 0, $$expand_i1_val67 = 0, $$expand_i1_val69 = 0, $$not = 0, $$not10 = 0, $$pre_trunc = 0, $10 = 0;
 var $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0;
 var $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0;
 var $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0;
 var $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0;
 var $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0;
 var $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0;
 var $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0;
 var $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0;
 var $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0;
 var $1162 = 0, $1163 = 0, $1164 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0;
 var $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0;
 var $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0;
 var $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0;
 var $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0;
 var $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0;
 var $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0;
 var $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0;
 var $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0;
 var $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0;
 var $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0;
 var $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0;
 var $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0;
 var $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0;
 var $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0;
 var $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0;
 var $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0;
 var $or$cond = 0, $or$cond12 = 0, $or$cond14 = 0, $or$cond16 = 0, $or$cond18 = 0, $or$cond20 = 0, $or$cond22 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, $switch = 0, $vararg_buffer = 0, $vararg_buffer23 = 0, $vararg_buffer26 = 0, $vararg_buffer29 = 0, $vararg_buffer32 = 0, $vararg_buffer34 = 0, $vararg_buffer38 = 0, $vararg_ptr37 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 41696|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(41696|0);
 $vararg_buffer38 = sp + 8288|0;
 $vararg_buffer34 = sp + 8280|0;
 $vararg_buffer32 = sp + 8272|0;
 $vararg_buffer29 = sp + 8264|0;
 $vararg_buffer26 = sp + 8256|0;
 $vararg_buffer23 = sp + 8248|0;
 $vararg_buffer = sp + 8240|0;
 $4 = sp + 41692|0;
 $12 = sp + 41691|0;
 $13 = sp + 33448|0;
 $16 = sp + 25248|0;
 $20 = sp;
 $21 = sp + 24724|0;
 $22 = sp + 41680|0;
 $25 = sp + 16496|0;
 $27 = sp + 41674|0;
 $34 = sp + 8296|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $37 = $5;
 $38 = $6; //@line 242 "./src/cpp/unrar/extract.cpp"
 $39 = ((($38)) + 21424|0); //@line 242 "./src/cpp/unrar/extract.cpp"
 $40 = ((($39)) + 8264|0); //@line 242 "./src/cpp/unrar/extract.cpp"
 $41 = $40; //@line 242 "./src/cpp/unrar/extract.cpp"
 $42 = $41; //@line 242 "./src/cpp/unrar/extract.cpp"
 $43 = HEAP32[$42>>2]|0; //@line 242 "./src/cpp/unrar/extract.cpp"
 $44 = (($41) + 4)|0; //@line 242 "./src/cpp/unrar/extract.cpp"
 $45 = $44; //@line 242 "./src/cpp/unrar/extract.cpp"
 $46 = HEAP32[$45>>2]|0; //@line 242 "./src/cpp/unrar/extract.cpp"
 $47 = ($46|0)<(0); //@line 242 "./src/cpp/unrar/extract.cpp"
 if ($47) {
  $48 = $6; //@line 243 "./src/cpp/unrar/extract.cpp"
  $49 = ((($48)) + 21424|0); //@line 243 "./src/cpp/unrar/extract.cpp"
  $50 = ((($49)) + 8264|0); //@line 243 "./src/cpp/unrar/extract.cpp"
  $51 = $50; //@line 243 "./src/cpp/unrar/extract.cpp"
  $52 = $51; //@line 243 "./src/cpp/unrar/extract.cpp"
  HEAP32[$52>>2] = 0; //@line 243 "./src/cpp/unrar/extract.cpp"
  $53 = (($51) + 4)|0; //@line 243 "./src/cpp/unrar/extract.cpp"
  $54 = $53; //@line 243 "./src/cpp/unrar/extract.cpp"
  HEAP32[$54>>2] = 0; //@line 243 "./src/cpp/unrar/extract.cpp"
 }
 $55 = $6; //@line 244 "./src/cpp/unrar/extract.cpp"
 $56 = ((($55)) + 21424|0); //@line 244 "./src/cpp/unrar/extract.cpp"
 $57 = ((($56)) + 8272|0); //@line 244 "./src/cpp/unrar/extract.cpp"
 $58 = $57; //@line 244 "./src/cpp/unrar/extract.cpp"
 $59 = $58; //@line 244 "./src/cpp/unrar/extract.cpp"
 $60 = HEAP32[$59>>2]|0; //@line 244 "./src/cpp/unrar/extract.cpp"
 $61 = (($58) + 4)|0; //@line 244 "./src/cpp/unrar/extract.cpp"
 $62 = $61; //@line 244 "./src/cpp/unrar/extract.cpp"
 $63 = HEAP32[$62>>2]|0; //@line 244 "./src/cpp/unrar/extract.cpp"
 $64 = ($63|0)<(0); //@line 244 "./src/cpp/unrar/extract.cpp"
 if ($64) {
  $65 = $6; //@line 245 "./src/cpp/unrar/extract.cpp"
  $66 = ((($65)) + 21424|0); //@line 245 "./src/cpp/unrar/extract.cpp"
  $67 = ((($66)) + 8272|0); //@line 245 "./src/cpp/unrar/extract.cpp"
  $68 = $67; //@line 245 "./src/cpp/unrar/extract.cpp"
  $69 = $68; //@line 245 "./src/cpp/unrar/extract.cpp"
  HEAP32[$69>>2] = 0; //@line 245 "./src/cpp/unrar/extract.cpp"
  $70 = (($68) + 4)|0; //@line 245 "./src/cpp/unrar/extract.cpp"
  $71 = $70; //@line 245 "./src/cpp/unrar/extract.cpp"
  HEAP32[$71>>2] = 0; //@line 245 "./src/cpp/unrar/extract.cpp"
 }
 $72 = ((($37)) + 8|0); //@line 247 "./src/cpp/unrar/extract.cpp"
 $73 = HEAP32[$72>>2]|0; //@line 247 "./src/cpp/unrar/extract.cpp"
 $74 = ((($73)) + 75208|0); //@line 247 "./src/cpp/unrar/extract.cpp"
 $75 = HEAP32[$74>>2]|0; //@line 247 "./src/cpp/unrar/extract.cpp"
 $9 = $75; //@line 247 "./src/cpp/unrar/extract.cpp"
 $76 = $7; //@line 248 "./src/cpp/unrar/extract.cpp"
 $77 = ($76|0)==(0); //@line 248 "./src/cpp/unrar/extract.cpp"
 if ($77) {
  $78 = ((($37)) + 16|0); //@line 249 "./src/cpp/unrar/extract.cpp"
  $79 = ((($78)) + 81|0); //@line 249 "./src/cpp/unrar/extract.cpp"
  $80 = HEAP8[$79>>0]|0; //@line 249 "./src/cpp/unrar/extract.cpp"
  $81 = $80&1; //@line 249 "./src/cpp/unrar/extract.cpp"
  if (!($81)) {
   $$expand_i1_val41 = 0; //@line 264 "./src/cpp/unrar/extract.cpp"
   HEAP8[$4>>0] = $$expand_i1_val41; //@line 264 "./src/cpp/unrar/extract.cpp"
   $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
   $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
   STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
  }
  $82 = $6; //@line 256 "./src/cpp/unrar/extract.cpp"
  $83 = ((($37)) + 16|0); //@line 256 "./src/cpp/unrar/extract.cpp"
  $84 = $9; //@line 256 "./src/cpp/unrar/extract.cpp"
  $85 = (__Z12MergeArchiveR7ArchiveP11ComprDataIObw($82,$83,0,$84)|0); //@line 256 "./src/cpp/unrar/extract.cpp"
  if (!($85)) {
   __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 258 "./src/cpp/unrar/extract.cpp"
   $$expand_i1_val = 0; //@line 259 "./src/cpp/unrar/extract.cpp"
   HEAP8[$4>>0] = $$expand_i1_val; //@line 259 "./src/cpp/unrar/extract.cpp"
   $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
   $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
   STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
  }
 }
 $86 = $6; //@line 265 "./src/cpp/unrar/extract.cpp"
 $87 = (__ZN7Archive13GetHeaderTypeEv($86)|0); //@line 265 "./src/cpp/unrar/extract.cpp"
 $10 = $87; //@line 265 "./src/cpp/unrar/extract.cpp"
 $88 = $10; //@line 266 "./src/cpp/unrar/extract.cpp"
 $89 = ($88|0)!=(2); //@line 266 "./src/cpp/unrar/extract.cpp"
 if ($89) {
  $90 = $10; //@line 269 "./src/cpp/unrar/extract.cpp"
  $91 = ($90|0)==(119); //@line 269 "./src/cpp/unrar/extract.cpp"
  if ($91) {
   $92 = ((($37)) + 8413|0); //@line 269 "./src/cpp/unrar/extract.cpp"
   $93 = HEAP8[$92>>0]|0; //@line 269 "./src/cpp/unrar/extract.cpp"
   $94 = $93&1; //@line 269 "./src/cpp/unrar/extract.cpp"
   if ($94) {
    $95 = ((($37)) + 8|0); //@line 270 "./src/cpp/unrar/extract.cpp"
    $96 = HEAP32[$95>>2]|0; //@line 270 "./src/cpp/unrar/extract.cpp"
    $97 = $6; //@line 270 "./src/cpp/unrar/extract.cpp"
    $98 = ((($37)) + 8416|0); //@line 270 "./src/cpp/unrar/extract.cpp"
    __Z14SetExtraInfo20P11CommandDataR7ArchivePw($96,$97,$98); //@line 270 "./src/cpp/unrar/extract.cpp"
   }
  }
  $99 = $10; //@line 272 "./src/cpp/unrar/extract.cpp"
  $100 = ($99|0)==(3); //@line 272 "./src/cpp/unrar/extract.cpp"
  if ($100) {
   $101 = ((($37)) + 8413|0); //@line 272 "./src/cpp/unrar/extract.cpp"
   $102 = HEAP8[$101>>0]|0; //@line 272 "./src/cpp/unrar/extract.cpp"
   $103 = $102&1; //@line 272 "./src/cpp/unrar/extract.cpp"
   if ($103) {
    $104 = ((($37)) + 8|0); //@line 273 "./src/cpp/unrar/extract.cpp"
    $105 = HEAP32[$104>>2]|0; //@line 273 "./src/cpp/unrar/extract.cpp"
    $106 = $6; //@line 273 "./src/cpp/unrar/extract.cpp"
    $107 = ((($37)) + 8416|0); //@line 273 "./src/cpp/unrar/extract.cpp"
    __Z12SetExtraInfoP11CommandDataR7ArchivePw($105,$106,$107); //@line 273 "./src/cpp/unrar/extract.cpp"
   }
  }
  $108 = $10; //@line 274 "./src/cpp/unrar/extract.cpp"
  $109 = ($108|0)==(5); //@line 274 "./src/cpp/unrar/extract.cpp"
  $110 = $6;
  if (!($109)) {
   __ZN7Archive10SeekToNextEv($110); //@line 289 "./src/cpp/unrar/extract.cpp"
   $$expand_i1_val49 = 1; //@line 290 "./src/cpp/unrar/extract.cpp"
   HEAP8[$4>>0] = $$expand_i1_val49; //@line 290 "./src/cpp/unrar/extract.cpp"
   $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
   $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
   STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
  }
  $111 = ((($110)) + 38576|0); //@line 275 "./src/cpp/unrar/extract.cpp"
  $112 = ((($111)) + 28|0); //@line 275 "./src/cpp/unrar/extract.cpp"
  $113 = HEAP8[$112>>0]|0; //@line 275 "./src/cpp/unrar/extract.cpp"
  $114 = $113&1; //@line 275 "./src/cpp/unrar/extract.cpp"
  if (!($114)) {
   $$expand_i1_val47 = 0; //@line 288 "./src/cpp/unrar/extract.cpp"
   HEAP8[$4>>0] = $$expand_i1_val47; //@line 288 "./src/cpp/unrar/extract.cpp"
   $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
   $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
   STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
  }
  $115 = $6; //@line 278 "./src/cpp/unrar/extract.cpp"
  $116 = ((($37)) + 16|0); //@line 278 "./src/cpp/unrar/extract.cpp"
  $117 = $9; //@line 278 "./src/cpp/unrar/extract.cpp"
  $118 = (__Z12MergeArchiveR7ArchiveP11ComprDataIObw($115,$116,0,$117)|0); //@line 278 "./src/cpp/unrar/extract.cpp"
  if ($118) {
   $119 = $6; //@line 284 "./src/cpp/unrar/extract.cpp"
   $120 = HEAP32[$119>>2]|0; //@line 284 "./src/cpp/unrar/extract.cpp"
   $121 = ((($120)) + 16|0); //@line 284 "./src/cpp/unrar/extract.cpp"
   $122 = HEAP32[$121>>2]|0; //@line 284 "./src/cpp/unrar/extract.cpp"
   $123 = $6; //@line 284 "./src/cpp/unrar/extract.cpp"
   $124 = ((($123)) + 56840|0); //@line 284 "./src/cpp/unrar/extract.cpp"
   $125 = $124; //@line 284 "./src/cpp/unrar/extract.cpp"
   $126 = $125; //@line 284 "./src/cpp/unrar/extract.cpp"
   $127 = HEAP32[$126>>2]|0; //@line 284 "./src/cpp/unrar/extract.cpp"
   $128 = (($125) + 4)|0; //@line 284 "./src/cpp/unrar/extract.cpp"
   $129 = $128; //@line 284 "./src/cpp/unrar/extract.cpp"
   $130 = HEAP32[$129>>2]|0; //@line 284 "./src/cpp/unrar/extract.cpp"
   FUNCTION_TABLE_viiii[$122 & 255]($119,$127,$130,0); //@line 284 "./src/cpp/unrar/extract.cpp"
   $$expand_i1_val45 = 1; //@line 285 "./src/cpp/unrar/extract.cpp"
   HEAP8[$4>>0] = $$expand_i1_val45; //@line 285 "./src/cpp/unrar/extract.cpp"
   $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
   $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
   STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
  } else {
   __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 280 "./src/cpp/unrar/extract.cpp"
   $$expand_i1_val43 = 0; //@line 281 "./src/cpp/unrar/extract.cpp"
   HEAP8[$4>>0] = $$expand_i1_val43; //@line 281 "./src/cpp/unrar/extract.cpp"
   $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
   $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
   STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
  }
 }
 $131 = ((($37)) + 8413|0); //@line 292 "./src/cpp/unrar/extract.cpp"
 HEAP8[$131>>0] = 0; //@line 292 "./src/cpp/unrar/extract.cpp"
 $132 = ((($37)) + 8|0); //@line 294 "./src/cpp/unrar/extract.cpp"
 $133 = HEAP32[$132>>2]|0; //@line 294 "./src/cpp/unrar/extract.cpp"
 $134 = ((($133)) + 49764|0); //@line 294 "./src/cpp/unrar/extract.cpp"
 $135 = HEAP32[$134>>2]|0; //@line 294 "./src/cpp/unrar/extract.cpp"
 $136 = ($135|0)!=(0); //@line 294 "./src/cpp/unrar/extract.cpp"
 if (!($136)) {
  $137 = ((($37)) + 212|0); //@line 294 "./src/cpp/unrar/extract.cpp"
  $138 = HEAP32[$137>>2]|0; //@line 294 "./src/cpp/unrar/extract.cpp"
  $139 = ((($37)) + 8|0); //@line 294 "./src/cpp/unrar/extract.cpp"
  $140 = HEAP32[$139>>2]|0; //@line 294 "./src/cpp/unrar/extract.cpp"
  $141 = ((($140)) + 91656|0); //@line 294 "./src/cpp/unrar/extract.cpp"
  $142 = (__ZN10StringList10ItemsCountEv($141)|0); //@line 294 "./src/cpp/unrar/extract.cpp"
  $143 = ($138>>>0)>=($142>>>0); //@line 294 "./src/cpp/unrar/extract.cpp"
  if ($143) {
   $144 = ((($37)) + 217|0); //@line 294 "./src/cpp/unrar/extract.cpp"
   $145 = HEAP8[$144>>0]|0; //@line 294 "./src/cpp/unrar/extract.cpp"
   $146 = $145&1; //@line 294 "./src/cpp/unrar/extract.cpp"
   if ($146) {
    $$expand_i1_val51 = 0; //@line 295 "./src/cpp/unrar/extract.cpp"
    HEAP8[$4>>0] = $$expand_i1_val51; //@line 295 "./src/cpp/unrar/extract.cpp"
    $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
    $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
    STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
   }
  }
 }
 $11 = 5; //@line 297 "./src/cpp/unrar/extract.cpp"
 HEAP8[$12>>0] = 0; //@line 299 "./src/cpp/unrar/extract.cpp"
 $147 = ((($37)) + 8|0); //@line 301 "./src/cpp/unrar/extract.cpp"
 $148 = HEAP32[$147>>2]|0; //@line 301 "./src/cpp/unrar/extract.cpp"
 $149 = $6; //@line 301 "./src/cpp/unrar/extract.cpp"
 $150 = ((($149)) + 21424|0); //@line 301 "./src/cpp/unrar/extract.cpp"
 $151 = $11; //@line 301 "./src/cpp/unrar/extract.cpp"
 $152 = (__ZN11CommandData13IsProcessFileER10FileHeaderPbiPwj($148,$150,$12,$151,$13,2048)|0); //@line 301 "./src/cpp/unrar/extract.cpp"
 $14 = $152; //@line 301 "./src/cpp/unrar/extract.cpp"
 $153 = $14; //@line 302 "./src/cpp/unrar/extract.cpp"
 $154 = ($153|0)!=(0); //@line 302 "./src/cpp/unrar/extract.cpp"
 $155 = $154&1; //@line 302 "./src/cpp/unrar/extract.cpp"
 $15 = $155; //@line 302 "./src/cpp/unrar/extract.cpp"
 $156 = ((($37)) + 8|0); //@line 304 "./src/cpp/unrar/extract.cpp"
 $157 = HEAP32[$156>>2]|0; //@line 304 "./src/cpp/unrar/extract.cpp"
 $158 = ((($157)) + 49760|0); //@line 304 "./src/cpp/unrar/extract.cpp"
 $159 = HEAP32[$158>>2]|0; //@line 304 "./src/cpp/unrar/extract.cpp"
 $160 = ($159|0)==(2); //@line 304 "./src/cpp/unrar/extract.cpp"
 if ($160) {
  $161 = ((($37)) + 8|0); //@line 306 "./src/cpp/unrar/extract.cpp"
  $162 = HEAP32[$161>>2]|0; //@line 306 "./src/cpp/unrar/extract.cpp"
  $163 = ((($162)) + 32808|0); //@line 306 "./src/cpp/unrar/extract.cpp"
  (__Z8wcsncpyzPwPKwj($163,$13,2048)|0); //@line 306 "./src/cpp/unrar/extract.cpp"
  $164 = ((($37)) + 8|0); //@line 307 "./src/cpp/unrar/extract.cpp"
  $165 = HEAP32[$164>>2]|0; //@line 307 "./src/cpp/unrar/extract.cpp"
  $166 = ((($165)) + 32808|0); //@line 307 "./src/cpp/unrar/extract.cpp"
  $167 = (__Z11PointToNamePKw($166)|0); //@line 307 "./src/cpp/unrar/extract.cpp"
  HEAP32[$167>>2] = 0; //@line 307 "./src/cpp/unrar/extract.cpp"
  $168 = ((($37)) + 8|0); //@line 308 "./src/cpp/unrar/extract.cpp"
  $169 = HEAP32[$168>>2]|0; //@line 308 "./src/cpp/unrar/extract.cpp"
  $170 = ((($169)) + 32808|0); //@line 308 "./src/cpp/unrar/extract.cpp"
  $171 = (__Z10IsWildcardPKw($170)|0); //@line 308 "./src/cpp/unrar/extract.cpp"
  if ($171) {
   $172 = ((($37)) + 8|0); //@line 309 "./src/cpp/unrar/extract.cpp"
   $173 = HEAP32[$172>>2]|0; //@line 309 "./src/cpp/unrar/extract.cpp"
   $174 = ((($173)) + 32808|0); //@line 309 "./src/cpp/unrar/extract.cpp"
   HEAP32[$174>>2] = 0; //@line 309 "./src/cpp/unrar/extract.cpp"
  }
 }
 $175 = $15; //@line 312 "./src/cpp/unrar/extract.cpp"
 $176 = $175&1; //@line 312 "./src/cpp/unrar/extract.cpp"
 if ($176) {
  $177 = HEAP8[$12>>0]|0; //@line 312 "./src/cpp/unrar/extract.cpp"
  $178 = $177&1; //@line 312 "./src/cpp/unrar/extract.cpp"
  if (!($178)) {
   $179 = ((($37)) + 217|0); //@line 313 "./src/cpp/unrar/extract.cpp"
   HEAP8[$179>>0] = 0; //@line 313 "./src/cpp/unrar/extract.cpp"
  }
 }
 $180 = $6; //@line 315 "./src/cpp/unrar/extract.cpp"
 __ZN7Archive17ConvertAttributesEv($180); //@line 315 "./src/cpp/unrar/extract.cpp"
 $181 = $6; //@line 347 "./src/cpp/unrar/extract.cpp"
 $182 = ((($181)) + 21424|0); //@line 347 "./src/cpp/unrar/extract.cpp"
 $183 = ((($182)) + 32|0); //@line 347 "./src/cpp/unrar/extract.cpp"
 (__Z11ConvertPathPKwPw($183,$16)|0); //@line 347 "./src/cpp/unrar/extract.cpp"
 $184 = $6; //@line 353 "./src/cpp/unrar/extract.cpp"
 $185 = ((($184)) + 21424|0); //@line 353 "./src/cpp/unrar/extract.cpp"
 $186 = ((($185)) + 8419|0); //@line 353 "./src/cpp/unrar/extract.cpp"
 $187 = HEAP8[$186>>0]|0; //@line 353 "./src/cpp/unrar/extract.cpp"
 $188 = $187&1; //@line 353 "./src/cpp/unrar/extract.cpp"
 do {
  if ($188) {
   $189 = ((($37)) + 8|0); //@line 355 "./src/cpp/unrar/extract.cpp"
   $190 = HEAP32[$189>>2]|0; //@line 355 "./src/cpp/unrar/extract.cpp"
   $191 = ((($190)) + 58764|0); //@line 355 "./src/cpp/unrar/extract.cpp"
   $192 = HEAP32[$191>>2]|0; //@line 355 "./src/cpp/unrar/extract.cpp"
   $193 = ($192|0)!=(1); //@line 355 "./src/cpp/unrar/extract.cpp"
   if ($193) {
    $194 = HEAP8[$12>>0]|0; //@line 355 "./src/cpp/unrar/extract.cpp"
    $195 = $194&1; //@line 355 "./src/cpp/unrar/extract.cpp"
    if (!($195)) {
     $196 = ((($37)) + 8|0); //@line 357 "./src/cpp/unrar/extract.cpp"
     $197 = HEAP32[$196>>2]|0; //@line 357 "./src/cpp/unrar/extract.cpp"
     $198 = ((($197)) + 58764|0); //@line 357 "./src/cpp/unrar/extract.cpp"
     $199 = HEAP32[$198>>2]|0; //@line 357 "./src/cpp/unrar/extract.cpp"
     $200 = ($199|0)==(0); //@line 357 "./src/cpp/unrar/extract.cpp"
     if ($200) {
      $15 = 0; //@line 358 "./src/cpp/unrar/extract.cpp"
     }
     $201 = (__Z20ParseVersionFileNamePwb($16,0)|0); //@line 359 "./src/cpp/unrar/extract.cpp"
     $17 = $201; //@line 359 "./src/cpp/unrar/extract.cpp"
     $202 = ((($37)) + 8|0); //@line 360 "./src/cpp/unrar/extract.cpp"
     $203 = HEAP32[$202>>2]|0; //@line 360 "./src/cpp/unrar/extract.cpp"
     $204 = ((($203)) + 58764|0); //@line 360 "./src/cpp/unrar/extract.cpp"
     $205 = HEAP32[$204>>2]|0; //@line 360 "./src/cpp/unrar/extract.cpp"
     $206 = (($205) - 1)|0; //@line 360 "./src/cpp/unrar/extract.cpp"
     $207 = $17; //@line 360 "./src/cpp/unrar/extract.cpp"
     $208 = ($206|0)==($207|0); //@line 360 "./src/cpp/unrar/extract.cpp"
     if ($208) {
      (__Z20ParseVersionFileNamePwb($16,1)|0); //@line 361 "./src/cpp/unrar/extract.cpp"
      break;
     } else {
      $15 = 0; //@line 363 "./src/cpp/unrar/extract.cpp"
      break;
     }
    }
   }
  } else {
   $209 = $6; //@line 367 "./src/cpp/unrar/extract.cpp"
   $210 = (__ZN7Archive8IsArcDirEv($209)|0); //@line 367 "./src/cpp/unrar/extract.cpp"
   if (!($210)) {
    $211 = ((($37)) + 8|0); //@line 367 "./src/cpp/unrar/extract.cpp"
    $212 = HEAP32[$211>>2]|0; //@line 367 "./src/cpp/unrar/extract.cpp"
    $213 = ((($212)) + 58764|0); //@line 367 "./src/cpp/unrar/extract.cpp"
    $214 = HEAP32[$213>>2]|0; //@line 367 "./src/cpp/unrar/extract.cpp"
    $215 = ($214>>>0)>(1); //@line 367 "./src/cpp/unrar/extract.cpp"
    if ($215) {
     $15 = 0; //@line 368 "./src/cpp/unrar/extract.cpp"
    }
   }
  }
 } while(0);
 $216 = $6; //@line 370 "./src/cpp/unrar/extract.cpp"
 $217 = ((($216)) + 21424|0); //@line 370 "./src/cpp/unrar/extract.cpp"
 $218 = ((($217)) + 8329|0); //@line 370 "./src/cpp/unrar/extract.cpp"
 $219 = HEAP8[$218>>0]|0; //@line 370 "./src/cpp/unrar/extract.cpp"
 $220 = $219&1; //@line 370 "./src/cpp/unrar/extract.cpp"
 $221 = ((($37)) + 16|0); //@line 370 "./src/cpp/unrar/extract.cpp"
 $222 = ((($221)) + 81|0); //@line 370 "./src/cpp/unrar/extract.cpp"
 $223 = $220&1; //@line 370 "./src/cpp/unrar/extract.cpp"
 HEAP8[$222>>0] = $223; //@line 370 "./src/cpp/unrar/extract.cpp"
 $224 = ((($37)) + 16|0); //@line 371 "./src/cpp/unrar/extract.cpp"
 $225 = ((($224)) + 82|0); //@line 371 "./src/cpp/unrar/extract.cpp"
 HEAP8[$225>>0] = 0; //@line 371 "./src/cpp/unrar/extract.cpp"
 $226 = $6; //@line 373 "./src/cpp/unrar/extract.cpp"
 $227 = HEAP32[$226>>2]|0; //@line 373 "./src/cpp/unrar/extract.cpp"
 $228 = ((($227)) + 16|0); //@line 373 "./src/cpp/unrar/extract.cpp"
 $229 = HEAP32[$228>>2]|0; //@line 373 "./src/cpp/unrar/extract.cpp"
 $230 = $6; //@line 373 "./src/cpp/unrar/extract.cpp"
 $231 = ((($230)) + 56848|0); //@line 373 "./src/cpp/unrar/extract.cpp"
 $232 = $231; //@line 373 "./src/cpp/unrar/extract.cpp"
 $233 = $232; //@line 373 "./src/cpp/unrar/extract.cpp"
 $234 = HEAP32[$233>>2]|0; //@line 373 "./src/cpp/unrar/extract.cpp"
 $235 = (($232) + 4)|0; //@line 373 "./src/cpp/unrar/extract.cpp"
 $236 = $235; //@line 373 "./src/cpp/unrar/extract.cpp"
 $237 = HEAP32[$236>>2]|0; //@line 373 "./src/cpp/unrar/extract.cpp"
 $238 = $6; //@line 373 "./src/cpp/unrar/extract.cpp"
 $239 = ((($238)) + 21424|0); //@line 373 "./src/cpp/unrar/extract.cpp"
 $240 = ((($239)) + 8264|0); //@line 373 "./src/cpp/unrar/extract.cpp"
 $241 = $240; //@line 373 "./src/cpp/unrar/extract.cpp"
 $242 = $241; //@line 373 "./src/cpp/unrar/extract.cpp"
 $243 = HEAP32[$242>>2]|0; //@line 373 "./src/cpp/unrar/extract.cpp"
 $244 = (($241) + 4)|0; //@line 373 "./src/cpp/unrar/extract.cpp"
 $245 = $244; //@line 373 "./src/cpp/unrar/extract.cpp"
 $246 = HEAP32[$245>>2]|0; //@line 373 "./src/cpp/unrar/extract.cpp"
 $247 = (_i64Subtract(($234|0),($237|0),($243|0),($246|0))|0); //@line 373 "./src/cpp/unrar/extract.cpp"
 $248 = tempRet0; //@line 373 "./src/cpp/unrar/extract.cpp"
 FUNCTION_TABLE_viiii[$229 & 255]($226,$247,$248,0); //@line 373 "./src/cpp/unrar/extract.cpp"
 $18 = 0; //@line 375 "./src/cpp/unrar/extract.cpp"
 $19 = 0; //@line 376 "./src/cpp/unrar/extract.cpp"
 $249 = ((($37)) + 216|0); //@line 379 "./src/cpp/unrar/extract.cpp"
 $250 = HEAP8[$249>>0]|0; //@line 379 "./src/cpp/unrar/extract.cpp"
 $251 = $250&1; //@line 379 "./src/cpp/unrar/extract.cpp"
 do {
  if ($251) {
   $252 = $15; //@line 379 "./src/cpp/unrar/extract.cpp"
   $253 = $252&1; //@line 379 "./src/cpp/unrar/extract.cpp"
   if (!($253)) {
    $254 = $6; //@line 379 "./src/cpp/unrar/extract.cpp"
    $255 = ((($254)) + 56860|0); //@line 379 "./src/cpp/unrar/extract.cpp"
    $256 = HEAP8[$255>>0]|0; //@line 379 "./src/cpp/unrar/extract.cpp"
    $257 = $256&1; //@line 379 "./src/cpp/unrar/extract.cpp"
    if (!($257)) {
     break;
    }
   }
   $258 = $6; //@line 379 "./src/cpp/unrar/extract.cpp"
   $259 = ((($258)) + 21424|0); //@line 379 "./src/cpp/unrar/extract.cpp"
   $260 = ((($259)) + 8328|0); //@line 379 "./src/cpp/unrar/extract.cpp"
   $261 = HEAP8[$260>>0]|0; //@line 379 "./src/cpp/unrar/extract.cpp"
   $262 = $261&1; //@line 379 "./src/cpp/unrar/extract.cpp"
   if ($262) {
    $263 = $15; //@line 381 "./src/cpp/unrar/extract.cpp"
    $264 = $263&1; //@line 381 "./src/cpp/unrar/extract.cpp"
    if ($264) {
     $265 = $6; //@line 383 "./src/cpp/unrar/extract.cpp"
     $266 = ((($265)) + 24|0); //@line 383 "./src/cpp/unrar/extract.cpp"
     __Z5uiMsgIPwS0_Ev14UIMESSAGE_CODET_T0_(69,$266,$16); //@line 383 "./src/cpp/unrar/extract.cpp"
     $267 = ((($37)) + 8|0); //@line 385 "./src/cpp/unrar/extract.cpp"
     $268 = HEAP32[$267>>2]|0; //@line 385 "./src/cpp/unrar/extract.cpp"
     $269 = ((($268)) + 75176|0); //@line 385 "./src/cpp/unrar/extract.cpp"
     HEAP32[$269>>2] = 12; //@line 385 "./src/cpp/unrar/extract.cpp"
     __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,6); //@line 387 "./src/cpp/unrar/extract.cpp"
    }
    $15 = 0; //@line 389 "./src/cpp/unrar/extract.cpp"
   }
  }
 } while(0);
 $270 = ((($37)) + 216|0); //@line 392 "./src/cpp/unrar/extract.cpp"
 HEAP8[$270>>0] = 0; //@line 392 "./src/cpp/unrar/extract.cpp"
 $271 = $15; //@line 395 "./src/cpp/unrar/extract.cpp"
 $272 = $271&1; //@line 395 "./src/cpp/unrar/extract.cpp"
 if ($272) {
  label = 54;
 } else {
  $273 = $6; //@line 395 "./src/cpp/unrar/extract.cpp"
  $274 = ((($273)) + 56860|0); //@line 395 "./src/cpp/unrar/extract.cpp"
  $275 = HEAP8[$274>>0]|0; //@line 395 "./src/cpp/unrar/extract.cpp"
  $276 = $275&1; //@line 395 "./src/cpp/unrar/extract.cpp"
  $277 = $276&1; //@line 395 "./src/cpp/unrar/extract.cpp"
  $19 = $277; //@line 395 "./src/cpp/unrar/extract.cpp"
  $278 = $276&1; //@line 395 "./src/cpp/unrar/extract.cpp"
  $279 = ($278|0)!=(0); //@line 395 "./src/cpp/unrar/extract.cpp"
  if ($279) {
   label = 54;
  }
 }
 L80: do {
  if ((label|0) == 54) {
   $280 = ((($37)) + 8|0); //@line 400 "./src/cpp/unrar/extract.cpp"
   $281 = HEAP32[$280>>2]|0; //@line 400 "./src/cpp/unrar/extract.cpp"
   $282 = ((($281)) + 50377|0); //@line 400 "./src/cpp/unrar/extract.cpp"
   $283 = HEAP8[$282>>0]|0; //@line 400 "./src/cpp/unrar/extract.cpp"
   $284 = $283&1; //@line 400 "./src/cpp/unrar/extract.cpp"
   $285 = $284 ^ 1; //@line 400 "./src/cpp/unrar/extract.cpp"
   $286 = ((($37)) + 8|0); //@line 400 "./src/cpp/unrar/extract.cpp"
   $287 = HEAP32[$286>>2]|0; //@line 400 "./src/cpp/unrar/extract.cpp"
   $288 = ((($287)) + 50377|0); //@line 400 "./src/cpp/unrar/extract.cpp"
   $289 = HEAP8[$288>>0]|0; //@line 400 "./src/cpp/unrar/extract.cpp"
   $290 = $289&1; //@line 400 "./src/cpp/unrar/extract.cpp"
   $291 = $9; //@line 400 "./src/cpp/unrar/extract.cpp"
   $292 = ($291|0)!=(73); //@line 400 "./src/cpp/unrar/extract.cpp"
   $293 = $290 ? $292 : 0; //@line 400 "./src/cpp/unrar/extract.cpp"
   $294 = $19; //@line 400 "./src/cpp/unrar/extract.cpp"
   $295 = $294&1; //@line 400 "./src/cpp/unrar/extract.cpp"
   $296 = (__Z18uiStartFileExtractPKwbbb($16,$285,$293,$295)|0); //@line 400 "./src/cpp/unrar/extract.cpp"
   if (!($296)) {
    $$expand_i1_val53 = 0; //@line 401 "./src/cpp/unrar/extract.cpp"
    HEAP8[$4>>0] = $$expand_i1_val53; //@line 401 "./src/cpp/unrar/extract.cpp"
    $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
    $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
    STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
   }
   $297 = $6; //@line 403 "./src/cpp/unrar/extract.cpp"
   $298 = ((($37)) + 8416|0); //@line 403 "./src/cpp/unrar/extract.cpp"
   __ZN10CmdExtract15ExtrPrepareNameER7ArchivePKwPwj($37,$297,$16,$298,2048); //@line 403 "./src/cpp/unrar/extract.cpp"
   $299 = $19; //@line 406 "./src/cpp/unrar/extract.cpp"
   $300 = $299&1; //@line 406 "./src/cpp/unrar/extract.cpp"
   if ($300) {
    $311 = 0;
   } else {
    $301 = ((($37)) + 8416|0); //@line 406 "./src/cpp/unrar/extract.cpp"
    $302 = HEAP32[$301>>2]|0; //@line 406 "./src/cpp/unrar/extract.cpp"
    $303 = ($302|0)!=(0); //@line 406 "./src/cpp/unrar/extract.cpp"
    if ($303) {
     $304 = $6; //@line 406 "./src/cpp/unrar/extract.cpp"
     $305 = ((($304)) + 21424|0); //@line 406 "./src/cpp/unrar/extract.cpp"
     $306 = ((($305)) + 8328|0); //@line 406 "./src/cpp/unrar/extract.cpp"
     $307 = HEAP8[$306>>0]|0; //@line 406 "./src/cpp/unrar/extract.cpp"
     $308 = $307&1; //@line 406 "./src/cpp/unrar/extract.cpp"
     $309 = $308 ^ 1; //@line 406 "./src/cpp/unrar/extract.cpp"
     $311 = $309;
    } else {
     $311 = 0;
    }
   }
   $310 = $311&1; //@line 406 "./src/cpp/unrar/extract.cpp"
   $18 = $310; //@line 406 "./src/cpp/unrar/extract.cpp"
   $312 = ((($37)) + 8|0); //@line 408 "./src/cpp/unrar/extract.cpp"
   $313 = HEAP32[$312>>2]|0; //@line 408 "./src/cpp/unrar/extract.cpp"
   $314 = ((($313)) + 49755|0); //@line 408 "./src/cpp/unrar/extract.cpp"
   $315 = HEAP8[$314>>0]|0; //@line 408 "./src/cpp/unrar/extract.cpp"
   $316 = $315&1; //@line 408 "./src/cpp/unrar/extract.cpp"
   if ($316) {
    label = 61;
   } else {
    $317 = ((($37)) + 8|0); //@line 408 "./src/cpp/unrar/extract.cpp"
    $318 = HEAP32[$317>>2]|0; //@line 408 "./src/cpp/unrar/extract.cpp"
    $319 = ((($318)) + 49756|0); //@line 408 "./src/cpp/unrar/extract.cpp"
    $320 = HEAP8[$319>>0]|0; //@line 408 "./src/cpp/unrar/extract.cpp"
    $321 = $320&1; //@line 408 "./src/cpp/unrar/extract.cpp"
    if ($321) {
     label = 61;
    }
   }
   do {
    if ((label|0) == 61) {
     $322 = $9; //@line 408 "./src/cpp/unrar/extract.cpp"
     $323 = ($322|0)==(69); //@line 408 "./src/cpp/unrar/extract.cpp"
     $324 = $9; //@line 408 "./src/cpp/unrar/extract.cpp"
     $325 = ($324|0)==(88); //@line 408 "./src/cpp/unrar/extract.cpp"
     $or$cond = $323 | $325; //@line 408 "./src/cpp/unrar/extract.cpp"
     if ($or$cond) {
      __ZN8FindDataC2Ev($20); //@line 410 "./src/cpp/unrar/extract.cpp"
      $326 = ((($37)) + 8416|0); //@line 411 "./src/cpp/unrar/extract.cpp"
      $327 = (__ZN8FindFile8FastFindEPKwP8FindDatab($326,$20,0)|0); //@line 411 "./src/cpp/unrar/extract.cpp"
      if (!($327)) {
       $338 = ((($37)) + 8|0); //@line 426 "./src/cpp/unrar/extract.cpp"
       $339 = HEAP32[$338>>2]|0; //@line 426 "./src/cpp/unrar/extract.cpp"
       $340 = ((($339)) + 49755|0); //@line 426 "./src/cpp/unrar/extract.cpp"
       $341 = HEAP8[$340>>0]|0; //@line 426 "./src/cpp/unrar/extract.cpp"
       $342 = $341&1; //@line 426 "./src/cpp/unrar/extract.cpp"
       if (!($342)) {
        break;
       }
       $18 = 0; //@line 427 "./src/cpp/unrar/extract.cpp"
       break;
      }
      $328 = ((($20)) + 8208|0); //@line 413 "./src/cpp/unrar/extract.cpp"
      $329 = $6; //@line 413 "./src/cpp/unrar/extract.cpp"
      $330 = ((($329)) + 21424|0); //@line 413 "./src/cpp/unrar/extract.cpp"
      $331 = ((($330)) + 8240|0); //@line 413 "./src/cpp/unrar/extract.cpp"
      $332 = (__ZN7RarTimegeERS_($328,$331)|0); //@line 413 "./src/cpp/unrar/extract.cpp"
      if ($332) {
       $333 = ((($20)) + 8204|0); //@line 421 "./src/cpp/unrar/extract.cpp"
       $334 = HEAP8[$333>>0]|0; //@line 421 "./src/cpp/unrar/extract.cpp"
       $335 = $334&1; //@line 421 "./src/cpp/unrar/extract.cpp"
       if ($335) {
        $336 = ((($20)) + 8208|0); //@line 421 "./src/cpp/unrar/extract.cpp"
        $337 = (__ZN7RarTimeltERS_($336,$37)|0); //@line 421 "./src/cpp/unrar/extract.cpp"
        if (!($337)) {
         break;
        }
       }
       $18 = 0; //@line 422 "./src/cpp/unrar/extract.cpp"
      }
     }
    }
   } while(0);
   $343 = $6; //@line 430 "./src/cpp/unrar/extract.cpp"
   $344 = ((($343)) + 21424|0); //@line 430 "./src/cpp/unrar/extract.cpp"
   $345 = ((($344)) + 8331|0); //@line 430 "./src/cpp/unrar/extract.cpp"
   $346 = HEAP8[$345>>0]|0; //@line 430 "./src/cpp/unrar/extract.cpp"
   $347 = $346&1; //@line 430 "./src/cpp/unrar/extract.cpp"
   do {
    if ($347) {
     $348 = (__ZN10CmdExtract18ExtrDllGetPasswordEv($37)|0); //@line 434 "./src/cpp/unrar/extract.cpp"
     $349 = ((($37)) + 8|0);
     $350 = HEAP32[$349>>2]|0;
     if ($348) {
      $352 = ((($350)) + 41000|0); //@line 450 "./src/cpp/unrar/extract.cpp"
      $353 = (__ZN11SecPassword5IsSetEv($352)|0); //@line 450 "./src/cpp/unrar/extract.cpp"
      if ($353) {
       break;
      }
      __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,1); //@line 452 "./src/cpp/unrar/extract.cpp"
      $354 = ((($37)) + 8|0); //@line 454 "./src/cpp/unrar/extract.cpp"
      $355 = HEAP32[$354>>2]|0; //@line 454 "./src/cpp/unrar/extract.cpp"
      $356 = ((($355)) + 75176|0); //@line 454 "./src/cpp/unrar/extract.cpp"
      HEAP32[$356>>2] = 22; //@line 454 "./src/cpp/unrar/extract.cpp"
      $18 = 0; //@line 456 "./src/cpp/unrar/extract.cpp"
      break;
     } else {
      $351 = ((($350)) + 75176|0); //@line 436 "./src/cpp/unrar/extract.cpp"
      HEAP32[$351>>2] = 22; //@line 436 "./src/cpp/unrar/extract.cpp"
      $$expand_i1_val55 = 0; //@line 437 "./src/cpp/unrar/extract.cpp"
      HEAP8[$4>>0] = $$expand_i1_val55; //@line 437 "./src/cpp/unrar/extract.cpp"
      $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
      $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
      STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
     }
    }
   } while(0);
   $357 = ((($37)) + 8|0); //@line 461 "./src/cpp/unrar/extract.cpp"
   $358 = HEAP32[$357>>2]|0; //@line 461 "./src/cpp/unrar/extract.cpp"
   $359 = ((($358)) + 66980|0); //@line 461 "./src/cpp/unrar/extract.cpp"
   $360 = HEAP32[$359>>2]|0; //@line 461 "./src/cpp/unrar/extract.cpp"
   $361 = ($360|0)!=(0); //@line 461 "./src/cpp/unrar/extract.cpp"
   if ($361) {
    $362 = ((($37)) + 8416|0); //@line 462 "./src/cpp/unrar/extract.cpp"
    $363 = ((($37)) + 8|0); //@line 462 "./src/cpp/unrar/extract.cpp"
    $364 = HEAP32[$363>>2]|0; //@line 462 "./src/cpp/unrar/extract.cpp"
    $365 = ((($364)) + 66980|0); //@line 462 "./src/cpp/unrar/extract.cpp"
    (__Z8wcsncpyzPwPKwj($362,$365,2048)|0); //@line 462 "./src/cpp/unrar/extract.cpp"
   }
   $366 = $6; //@line 465 "./src/cpp/unrar/extract.cpp"
   $367 = (__ZN10CmdExtract11CheckUnpVerER7ArchivePKw($37,$366,$16)|0); //@line 465 "./src/cpp/unrar/extract.cpp"
   if (!($367)) {
    __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,2); //@line 467 "./src/cpp/unrar/extract.cpp"
    $368 = ((($37)) + 8|0); //@line 469 "./src/cpp/unrar/extract.cpp"
    $369 = HEAP32[$368>>2]|0; //@line 469 "./src/cpp/unrar/extract.cpp"
    $370 = ((($369)) + 75176|0); //@line 469 "./src/cpp/unrar/extract.cpp"
    HEAP32[$370>>2] = 14; //@line 469 "./src/cpp/unrar/extract.cpp"
    $371 = $6; //@line 471 "./src/cpp/unrar/extract.cpp"
    __ZN7Archive10SeekToNextEv($371); //@line 471 "./src/cpp/unrar/extract.cpp"
    $372 = $6; //@line 472 "./src/cpp/unrar/extract.cpp"
    $373 = ((($372)) + 56860|0); //@line 472 "./src/cpp/unrar/extract.cpp"
    $374 = HEAP8[$373>>0]|0; //@line 472 "./src/cpp/unrar/extract.cpp"
    $375 = $374&1; //@line 472 "./src/cpp/unrar/extract.cpp"
    $376 = $375 ^ 1; //@line 472 "./src/cpp/unrar/extract.cpp"
    $$expand_i1_val57 = $376&1; //@line 472 "./src/cpp/unrar/extract.cpp"
    HEAP8[$4>>0] = $$expand_i1_val57; //@line 472 "./src/cpp/unrar/extract.cpp"
    $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
    $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
    STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
   }
   $377 = ((($37)) + 8|0); //@line 478 "./src/cpp/unrar/extract.cpp"
   $378 = HEAP32[$377>>2]|0; //@line 478 "./src/cpp/unrar/extract.cpp"
   $379 = ((($378)) + 41000|0); //@line 478 "./src/cpp/unrar/extract.cpp"
   _memcpy(($21|0),($379|0),516)|0; //@line 478 "./src/cpp/unrar/extract.cpp"
   $380 = ((($37)) + 16|0); //@line 484 "./src/cpp/unrar/extract.cpp"
   $381 = $6; //@line 484 "./src/cpp/unrar/extract.cpp"
   $382 = ((($381)) + 21424|0); //@line 484 "./src/cpp/unrar/extract.cpp"
   $383 = ((($382)) + 8332|0); //@line 484 "./src/cpp/unrar/extract.cpp"
   $384 = HEAP32[$383>>2]|0; //@line 484 "./src/cpp/unrar/extract.cpp"
   $385 = $6; //@line 485 "./src/cpp/unrar/extract.cpp"
   $386 = ((($385)) + 21424|0); //@line 485 "./src/cpp/unrar/extract.cpp"
   $387 = ((($386)) + 8336|0); //@line 485 "./src/cpp/unrar/extract.cpp"
   $388 = HEAP8[$387>>0]|0; //@line 485 "./src/cpp/unrar/extract.cpp"
   $389 = $388&1; //@line 485 "./src/cpp/unrar/extract.cpp"
   if ($389) {
    $390 = $6; //@line 485 "./src/cpp/unrar/extract.cpp"
    $391 = ((($390)) + 21424|0); //@line 485 "./src/cpp/unrar/extract.cpp"
    $392 = ((($391)) + 8337|0); //@line 485 "./src/cpp/unrar/extract.cpp"
    $403 = $392;
   } else {
    $403 = 0;
   }
   $393 = $6; //@line 486 "./src/cpp/unrar/extract.cpp"
   $394 = ((($393)) + 21424|0); //@line 486 "./src/cpp/unrar/extract.cpp"
   $395 = ((($394)) + 8353|0); //@line 486 "./src/cpp/unrar/extract.cpp"
   $396 = $6; //@line 486 "./src/cpp/unrar/extract.cpp"
   $397 = ((($396)) + 21424|0); //@line 486 "./src/cpp/unrar/extract.cpp"
   $398 = ((($397)) + 8412|0); //@line 486 "./src/cpp/unrar/extract.cpp"
   $399 = HEAP32[$398>>2]|0; //@line 486 "./src/cpp/unrar/extract.cpp"
   $400 = $6; //@line 487 "./src/cpp/unrar/extract.cpp"
   $401 = ((($400)) + 21424|0); //@line 487 "./src/cpp/unrar/extract.cpp"
   $402 = ((($401)) + 8379|0); //@line 487 "./src/cpp/unrar/extract.cpp"
   __THREW__ = 0;
   invoke_viiiiiiiii(172,($380|0),0,($384|0),($21|0),($403|0),($395|0),($399|0),($402|0),($22|0)); //@line 484 "./src/cpp/unrar/extract.cpp"
   $404 = __THREW__; __THREW__ = 0;
   $405 = $404&1;
   L122: do {
    if (!($405)) {
     $406 = $6; //@line 491 "./src/cpp/unrar/extract.cpp"
     $407 = ((($406)) + 21424|0); //@line 491 "./src/cpp/unrar/extract.cpp"
     $408 = ((($407)) + 8331|0); //@line 491 "./src/cpp/unrar/extract.cpp"
     $409 = HEAP8[$408>>0]|0; //@line 491 "./src/cpp/unrar/extract.cpp"
     $410 = $409&1; //@line 491 "./src/cpp/unrar/extract.cpp"
     do {
      if ($410) {
       $411 = $6; //@line 491 "./src/cpp/unrar/extract.cpp"
       $412 = ((($411)) + 21424|0); //@line 491 "./src/cpp/unrar/extract.cpp"
       $413 = ((($412)) + 8369|0); //@line 491 "./src/cpp/unrar/extract.cpp"
       $414 = HEAP8[$413>>0]|0; //@line 491 "./src/cpp/unrar/extract.cpp"
       $415 = $414&1; //@line 491 "./src/cpp/unrar/extract.cpp"
       if (!($415)) {
        break;
       }
       $416 = $6; //@line 492 "./src/cpp/unrar/extract.cpp"
       $417 = ((($416)) + 21424|0); //@line 492 "./src/cpp/unrar/extract.cpp"
       $418 = ((($417)) + 8370|0); //@line 492 "./src/cpp/unrar/extract.cpp"
       __THREW__ = 0;
       $419 = (invoke_iiii(160,($418|0),($22|0),8)|0); //@line 492 "./src/cpp/unrar/extract.cpp"
       $420 = __THREW__; __THREW__ = 0;
       $421 = $420&1;
       if ($421) {
        break L122;
       }
       $422 = ($419|0)!=(0); //@line 492 "./src/cpp/unrar/extract.cpp"
       if (!($422)) {
        break;
       }
       $423 = $6; //@line 493 "./src/cpp/unrar/extract.cpp"
       $424 = ((($423)) + 56876|0); //@line 493 "./src/cpp/unrar/extract.cpp"
       $425 = HEAP8[$424>>0]|0; //@line 493 "./src/cpp/unrar/extract.cpp"
       $426 = $425&1; //@line 493 "./src/cpp/unrar/extract.cpp"
       if ($426) {
        break;
       }
       $427 = $6; //@line 495 "./src/cpp/unrar/extract.cpp"
       $428 = ((($427)) + 24|0); //@line 495 "./src/cpp/unrar/extract.cpp"
       __THREW__ = 0;
       invoke_vii(101,6,($428|0)); //@line 495 "./src/cpp/unrar/extract.cpp"
       $429 = __THREW__; __THREW__ = 0;
       $430 = $429&1;
       if ($430) {
        break L122;
       }
       __THREW__ = 0;
       invoke_vii(157,(756|0),11); //@line 496 "./src/cpp/unrar/extract.cpp"
       $431 = __THREW__; __THREW__ = 0;
       $432 = $431&1;
       if ($432) {
        break L122;
       }
       $18 = 0; //@line 497 "./src/cpp/unrar/extract.cpp"
       $433 = ((($37)) + 8|0); //@line 501 "./src/cpp/unrar/extract.cpp"
       $434 = HEAP32[$433>>2]|0; //@line 501 "./src/cpp/unrar/extract.cpp"
       $435 = ((($434)) + 75176|0); //@line 501 "./src/cpp/unrar/extract.cpp"
       $436 = HEAP32[$435>>2]|0; //@line 501 "./src/cpp/unrar/extract.cpp"
       $437 = ($436|0)!=(15); //@line 501 "./src/cpp/unrar/extract.cpp"
       if (!($437)) {
        break;
       }
       $438 = ((($37)) + 8|0); //@line 502 "./src/cpp/unrar/extract.cpp"
       $439 = HEAP32[$438>>2]|0; //@line 502 "./src/cpp/unrar/extract.cpp"
       $440 = ((($439)) + 75176|0); //@line 502 "./src/cpp/unrar/extract.cpp"
       HEAP32[$440>>2] = 24; //@line 502 "./src/cpp/unrar/extract.cpp"
      }
     } while(0);
     __THREW__ = 0;
     invoke_vi(188,($25|0)); //@line 506 "./src/cpp/unrar/extract.cpp"
     $443 = __THREW__; __THREW__ = 0;
     $444 = $443&1;
     if ($444) {
      break;
     }
     $445 = $6; //@line 508 "./src/cpp/unrar/extract.cpp"
     $446 = ((($445)) + 21424|0); //@line 508 "./src/cpp/unrar/extract.cpp"
     $447 = ((($446)) + 8432|0); //@line 508 "./src/cpp/unrar/extract.cpp"
     $448 = HEAP32[$447>>2]|0; //@line 508 "./src/cpp/unrar/extract.cpp"
     $449 = ($448|0)!=(0); //@line 508 "./src/cpp/unrar/extract.cpp"
     $450 = $449&1; //@line 508 "./src/cpp/unrar/extract.cpp"
     $26 = $450; //@line 508 "./src/cpp/unrar/extract.cpp"
     $451 = $26; //@line 509 "./src/cpp/unrar/extract.cpp"
     $452 = $451&1; //@line 509 "./src/cpp/unrar/extract.cpp"
     L135: do {
      if ($452) {
       $453 = $6; //@line 509 "./src/cpp/unrar/extract.cpp"
       $454 = ((($453)) + 21424|0); //@line 509 "./src/cpp/unrar/extract.cpp"
       $455 = ((($454)) + 8432|0); //@line 509 "./src/cpp/unrar/extract.cpp"
       $456 = HEAP32[$455>>2]|0; //@line 509 "./src/cpp/unrar/extract.cpp"
       $457 = ($456|0)!=(5); //@line 509 "./src/cpp/unrar/extract.cpp"
       if (!($457)) {
        label = 103;
        break;
       }
       $458 = $18; //@line 511 "./src/cpp/unrar/extract.cpp"
       $459 = $458&1; //@line 511 "./src/cpp/unrar/extract.cpp"
       $460 = $9; //@line 511 "./src/cpp/unrar/extract.cpp"
       $461 = ($460|0)!=(80); //@line 511 "./src/cpp/unrar/extract.cpp"
       $or$cond3 = $459 & $461; //@line 511 "./src/cpp/unrar/extract.cpp"
       if (!($or$cond3)) {
        label = 113;
        break;
       }
       $462 = ((($37)) + 8|0); //@line 511 "./src/cpp/unrar/extract.cpp"
       $463 = HEAP32[$462>>2]|0; //@line 511 "./src/cpp/unrar/extract.cpp"
       $464 = ((($463)) + 50377|0); //@line 511 "./src/cpp/unrar/extract.cpp"
       $465 = HEAP8[$464>>0]|0; //@line 511 "./src/cpp/unrar/extract.cpp"
       $466 = $465&1; //@line 511 "./src/cpp/unrar/extract.cpp"
       if ($466) {
        label = 113;
        break;
       }
       HEAP8[$27>>0] = 0; //@line 514 "./src/cpp/unrar/extract.cpp"
       $467 = ((($37)) + 8416|0); //@line 515 "./src/cpp/unrar/extract.cpp"
       __THREW__ = 0;
       $468 = (invoke_ii(189,($467|0))|0); //@line 515 "./src/cpp/unrar/extract.cpp"
       $469 = __THREW__; __THREW__ = 0;
       $470 = $469&1;
       if ($470) {
        label = 100;
        break;
       }
       do {
        if ($468) {
         $471 = HEAP8[$27>>0]|0; //@line 515 "./src/cpp/unrar/extract.cpp"
         $472 = $471&1; //@line 515 "./src/cpp/unrar/extract.cpp"
         if ($472) {
          break;
         }
         $473 = ((($37)) + 8|0); //@line 516 "./src/cpp/unrar/extract.cpp"
         $474 = HEAP32[$473>>2]|0; //@line 516 "./src/cpp/unrar/extract.cpp"
         $475 = ((($37)) + 8416|0); //@line 516 "./src/cpp/unrar/extract.cpp"
         $476 = $6; //@line 516 "./src/cpp/unrar/extract.cpp"
         $477 = ((($476)) + 21424|0); //@line 516 "./src/cpp/unrar/extract.cpp"
         $478 = ((($477)) + 8272|0); //@line 516 "./src/cpp/unrar/extract.cpp"
         $479 = $478; //@line 516 "./src/cpp/unrar/extract.cpp"
         $480 = $479; //@line 516 "./src/cpp/unrar/extract.cpp"
         $481 = HEAP32[$480>>2]|0; //@line 516 "./src/cpp/unrar/extract.cpp"
         $482 = (($479) + 4)|0; //@line 516 "./src/cpp/unrar/extract.cpp"
         $483 = $482; //@line 516 "./src/cpp/unrar/extract.cpp"
         $484 = HEAP32[$483>>2]|0; //@line 516 "./src/cpp/unrar/extract.cpp"
         $485 = $6; //@line 516 "./src/cpp/unrar/extract.cpp"
         $486 = ((($485)) + 21424|0); //@line 516 "./src/cpp/unrar/extract.cpp"
         $487 = ((($486)) + 8240|0); //@line 516 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         (invoke_iiiiiiiiii(190,($474|0),(0|0),($475|0),2048,($27|0),($481|0),($484|0),($487|0),0)|0); //@line 516 "./src/cpp/unrar/extract.cpp"
         $488 = __THREW__; __THREW__ = 0;
         $489 = $488&1;
         if ($489) {
          label = 100;
          break L135;
         }
        }
       } while(0);
       $492 = HEAP8[$27>>0]|0; //@line 517 "./src/cpp/unrar/extract.cpp"
       $493 = $492&1; //@line 517 "./src/cpp/unrar/extract.cpp"
       if (!($493)) {
        label = 113;
        break;
       }
       $18 = 0; //@line 518 "./src/cpp/unrar/extract.cpp"
       label = 113;
      } else {
       label = 103;
      }
     } while(0);
     L146: do {
      if ((label|0) == 103) {
       $494 = $6; //@line 522 "./src/cpp/unrar/extract.cpp"
       __THREW__ = 0;
       $495 = (invoke_ii(191,($494|0))|0); //@line 522 "./src/cpp/unrar/extract.cpp"
       $496 = __THREW__; __THREW__ = 0;
       $497 = $496&1;
       if ($497) {
        label = 100;
        break;
       }
       $498 = $18;
       $499 = $498&1;
       if (!($495)) {
        if (!($499)) {
         label = 113;
         break;
        }
        $517 = $6; //@line 532 "./src/cpp/unrar/extract.cpp"
        __THREW__ = 0;
        $518 = (invoke_iiii(193,($37|0),($517|0),($25|0))|0); //@line 532 "./src/cpp/unrar/extract.cpp"
        $519 = __THREW__; __THREW__ = 0;
        $520 = $519&1;
        if ($520) {
         label = 100;
         break;
        }
        $521 = $518&1; //@line 532 "./src/cpp/unrar/extract.cpp"
        $18 = $521; //@line 532 "./src/cpp/unrar/extract.cpp"
        label = 113;
        break;
       }
       $$not = $499 ^ 1; //@line 524 "./src/cpp/unrar/extract.cpp"
       $500 = $9; //@line 524 "./src/cpp/unrar/extract.cpp"
       $501 = ($500|0)==(80); //@line 524 "./src/cpp/unrar/extract.cpp"
       $or$cond5 = $$not | $501; //@line 524 "./src/cpp/unrar/extract.cpp"
       $502 = $9; //@line 524 "./src/cpp/unrar/extract.cpp"
       $503 = ($502|0)==(73); //@line 524 "./src/cpp/unrar/extract.cpp"
       $or$cond7 = $or$cond5 | $503; //@line 524 "./src/cpp/unrar/extract.cpp"
       $504 = $9; //@line 524 "./src/cpp/unrar/extract.cpp"
       $505 = ($504|0)==(69); //@line 524 "./src/cpp/unrar/extract.cpp"
       $or$cond9 = $or$cond7 | $505; //@line 524 "./src/cpp/unrar/extract.cpp"
       do {
        if (!($or$cond9)) {
         $506 = ((($37)) + 8|0); //@line 524 "./src/cpp/unrar/extract.cpp"
         $507 = HEAP32[$506>>2]|0; //@line 524 "./src/cpp/unrar/extract.cpp"
         $508 = ((($507)) + 49760|0); //@line 524 "./src/cpp/unrar/extract.cpp"
         $509 = HEAP32[$508>>2]|0; //@line 524 "./src/cpp/unrar/extract.cpp"
         $510 = ($509|0)==(1); //@line 524 "./src/cpp/unrar/extract.cpp"
         if ($510) {
          break;
         }
         $511 = ((($37)) + 204|0); //@line 526 "./src/cpp/unrar/extract.cpp"
         $512 = HEAP32[$511>>2]|0; //@line 526 "./src/cpp/unrar/extract.cpp"
         $513 = (($512) + 1)|0; //@line 526 "./src/cpp/unrar/extract.cpp"
         HEAP32[$511>>2] = $513; //@line 526 "./src/cpp/unrar/extract.cpp"
         $514 = $6; //@line 527 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         invoke_viii(192,($37|0),($514|0),($16|0)); //@line 527 "./src/cpp/unrar/extract.cpp"
         $515 = __THREW__; __THREW__ = 0;
         $516 = $515&1;
         if ($516) {
          label = 100;
          break L146;
         }
         $$expand_i1_val61 = 1; //@line 528 "./src/cpp/unrar/extract.cpp"
         HEAP8[$4>>0] = $$expand_i1_val61; //@line 528 "./src/cpp/unrar/extract.cpp"
         $28 = 1;
         label = 245;
         break L146;
        }
       } while(0);
       $$expand_i1_val59 = 1; //@line 525 "./src/cpp/unrar/extract.cpp"
       HEAP8[$4>>0] = $$expand_i1_val59; //@line 525 "./src/cpp/unrar/extract.cpp"
       $28 = 1;
       label = 245;
      }
     } while(0);
     L159: do {
      if ((label|0) == 113) {
       $522 = $18; //@line 534 "./src/cpp/unrar/extract.cpp"
       $523 = $522&1; //@line 534 "./src/cpp/unrar/extract.cpp"
       do {
        if (!($523)) {
         $524 = $6; //@line 534 "./src/cpp/unrar/extract.cpp"
         $525 = ((($524)) + 56860|0); //@line 534 "./src/cpp/unrar/extract.cpp"
         $526 = HEAP8[$525>>0]|0; //@line 534 "./src/cpp/unrar/extract.cpp"
         $527 = $526&1; //@line 534 "./src/cpp/unrar/extract.cpp"
         if (!($527)) {
          break;
         }
         $19 = 1; //@line 536 "./src/cpp/unrar/extract.cpp"
         $18 = 1; //@line 537 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         $528 = (invoke_iiiii(194,($16|0),0,0,1)|0); //@line 544 "./src/cpp/unrar/extract.cpp"
         $529 = __THREW__; __THREW__ = 0;
         $530 = $529&1;
         if ($530) {
          label = 100;
          break L159;
         }
         if ($528) {
          break;
         }
         $$expand_i1_val63 = 0; //@line 545 "./src/cpp/unrar/extract.cpp"
         HEAP8[$4>>0] = $$expand_i1_val63; //@line 545 "./src/cpp/unrar/extract.cpp"
         $28 = 1;
         label = 245;
         break L159;
        }
       } while(0);
       $531 = $18; //@line 547 "./src/cpp/unrar/extract.cpp"
       $532 = $531&1; //@line 547 "./src/cpp/unrar/extract.cpp"
       do {
        if ($532) {
         $533 = ((($37)) + 8|0); //@line 551 "./src/cpp/unrar/extract.cpp"
         $534 = HEAP32[$533>>2]|0; //@line 551 "./src/cpp/unrar/extract.cpp"
         $535 = ((($534)) + 50377|0); //@line 551 "./src/cpp/unrar/extract.cpp"
         $536 = HEAP8[$535>>0]|0; //@line 551 "./src/cpp/unrar/extract.cpp"
         $537 = $536&1; //@line 551 "./src/cpp/unrar/extract.cpp"
         if ($537) {
          $538 = ((($37)) + 8413|0); //@line 552 "./src/cpp/unrar/extract.cpp"
          HEAP8[$538>>0] = 1; //@line 552 "./src/cpp/unrar/extract.cpp"
         }
         $539 = ((($37)) + 8|0); //@line 554 "./src/cpp/unrar/extract.cpp"
         $540 = HEAP32[$539>>2]|0; //@line 554 "./src/cpp/unrar/extract.cpp"
         $541 = ((($540)) + 50377|0); //@line 554 "./src/cpp/unrar/extract.cpp"
         $542 = HEAP8[$541>>0]|0; //@line 554 "./src/cpp/unrar/extract.cpp"
         $543 = $542&1; //@line 554 "./src/cpp/unrar/extract.cpp"
         $544 = $19; //@line 554 "./src/cpp/unrar/extract.cpp"
         $545 = $544&1; //@line 554 "./src/cpp/unrar/extract.cpp"
         $546 = $543 ? 1 : $545; //@line 554 "./src/cpp/unrar/extract.cpp"
         $547 = $546&1; //@line 554 "./src/cpp/unrar/extract.cpp"
         $29 = $547; //@line 554 "./src/cpp/unrar/extract.cpp"
         $548 = $19; //@line 556 "./src/cpp/unrar/extract.cpp"
         $549 = $548&1; //@line 556 "./src/cpp/unrar/extract.cpp"
         if (!($549)) {
          $550 = $29; //@line 558 "./src/cpp/unrar/extract.cpp"
          $551 = $550&1; //@line 558 "./src/cpp/unrar/extract.cpp"
          $$not10 = $551 ^ 1; //@line 558 "./src/cpp/unrar/extract.cpp"
          $552 = $9; //@line 558 "./src/cpp/unrar/extract.cpp"
          $553 = ($552|0)!=(80); //@line 558 "./src/cpp/unrar/extract.cpp"
          $or$cond12 = $$not10 & $553; //@line 558 "./src/cpp/unrar/extract.cpp"
          do {
           if ($or$cond12) {
            __THREW__ = 0;
            $554 = (invoke_ii(195,($25|0))|0); //@line 558 "./src/cpp/unrar/extract.cpp"
            $555 = __THREW__; __THREW__ = 0;
            $556 = $555&1;
            if ($556) {
             label = 100;
             break L159;
            }
            if (!($554)) {
             break;
            }
            $557 = $6; //@line 560 "./src/cpp/unrar/extract.cpp"
            $558 = ((($557)) + 24|0); //@line 560 "./src/cpp/unrar/extract.cpp"
            $559 = ((($37)) + 8416|0); //@line 560 "./src/cpp/unrar/extract.cpp"
            __THREW__ = 0;
            invoke_viii(158,58,($558|0),($559|0)); //@line 560 "./src/cpp/unrar/extract.cpp"
            $560 = __THREW__; __THREW__ = 0;
            $561 = $560&1;
            if ($561) {
             label = 100;
             break L159;
            }
            $562 = $6; //@line 561 "./src/cpp/unrar/extract.cpp"
            $563 = ((($562)) + 24|0); //@line 561 "./src/cpp/unrar/extract.cpp"
            $564 = ((($37)) + 8416|0); //@line 561 "./src/cpp/unrar/extract.cpp"
            __THREW__ = 0;
            invoke_viii(196,(756|0),($563|0),($564|0)); //@line 561 "./src/cpp/unrar/extract.cpp"
            $565 = __THREW__; __THREW__ = 0;
            $566 = $565&1;
            if ($566) {
             label = 100;
             break L159;
            }
           }
          } while(0);
          $567 = ((($37)) + 204|0); //@line 563 "./src/cpp/unrar/extract.cpp"
          $568 = HEAP32[$567>>2]|0; //@line 563 "./src/cpp/unrar/extract.cpp"
          $569 = (($568) + 1)|0; //@line 563 "./src/cpp/unrar/extract.cpp"
          HEAP32[$567>>2] = $569; //@line 563 "./src/cpp/unrar/extract.cpp"
         }
         $570 = ((($37)) + 208|0); //@line 565 "./src/cpp/unrar/extract.cpp"
         $571 = HEAP32[$570>>2]|0; //@line 565 "./src/cpp/unrar/extract.cpp"
         $572 = (($571) + 1)|0; //@line 565 "./src/cpp/unrar/extract.cpp"
         HEAP32[$570>>2] = $572; //@line 565 "./src/cpp/unrar/extract.cpp"
         $573 = $9; //@line 567 "./src/cpp/unrar/extract.cpp"
         $574 = ($573|0)!=(73); //@line 567 "./src/cpp/unrar/extract.cpp"
         L181: do {
          if ($574) {
           $575 = $19; //@line 568 "./src/cpp/unrar/extract.cpp"
           $576 = $575&1; //@line 568 "./src/cpp/unrar/extract.cpp"
           if ($576) {
            __THREW__ = 0;
            HEAP32[$vararg_buffer>>2] = $16; //@line 569 "./src/cpp/unrar/extract.cpp"
            invoke_vii(197,(55124|0),($vararg_buffer|0)); //@line 569 "./src/cpp/unrar/extract.cpp"
            $577 = __THREW__; __THREW__ = 0;
            $578 = $577&1;
            if ($578) {
             label = 100;
             break L159;
            } else {
             break;
            }
           }
           $579 = ((($37)) + 8|0); //@line 571 "./src/cpp/unrar/extract.cpp"
           $580 = HEAP32[$579>>2]|0; //@line 571 "./src/cpp/unrar/extract.cpp"
           $581 = ((($580)) + 50377|0); //@line 571 "./src/cpp/unrar/extract.cpp"
           $582 = HEAP8[$581>>0]|0; //@line 571 "./src/cpp/unrar/extract.cpp"
           $583 = $582&1; //@line 571 "./src/cpp/unrar/extract.cpp"
           $584 = $9; //@line 571 "./src/cpp/unrar/extract.cpp"
           $585 = $583 ? 84 : $584; //@line 571 "./src/cpp/unrar/extract.cpp"
           switch ($585|0) {
           case 84:  {
            __THREW__ = 0;
            HEAP32[$vararg_buffer23>>2] = $16; //@line 574 "./src/cpp/unrar/extract.cpp"
            invoke_vii(197,(55124|0),($vararg_buffer23|0)); //@line 574 "./src/cpp/unrar/extract.cpp"
            $586 = __THREW__; __THREW__ = 0;
            $587 = $586&1;
            if ($587) {
             label = 100;
             break L159;
            } else {
             break L181;
            }
            break;
           }
           case 80:  {
            __THREW__ = 0;
            HEAP32[$vararg_buffer26>>2] = $16; //@line 578 "./src/cpp/unrar/extract.cpp"
            invoke_vii(197,(55124|0),($vararg_buffer26|0)); //@line 578 "./src/cpp/unrar/extract.cpp"
            $588 = __THREW__; __THREW__ = 0;
            $589 = $588&1;
            if ($589) {
             label = 100;
             break L159;
            } else {
             break L181;
            }
            break;
           }
           case 69: case 88:  {
            $590 = ((($37)) + 8416|0); //@line 583 "./src/cpp/unrar/extract.cpp"
            __THREW__ = 0;
            HEAP32[$vararg_buffer29>>2] = $590; //@line 583 "./src/cpp/unrar/extract.cpp"
            invoke_vii(197,(55124|0),($vararg_buffer29|0)); //@line 583 "./src/cpp/unrar/extract.cpp"
            $591 = __THREW__; __THREW__ = 0;
            $592 = $591&1;
            if ($592) {
             label = 100;
             break L159;
            } else {
             break L181;
            }
            break;
           }
           default: {
            break L181;
           }
           }
          }
         } while(0);
         $593 = ((($37)) + 8|0); //@line 586 "./src/cpp/unrar/extract.cpp"
         $594 = HEAP32[$593>>2]|0; //@line 586 "./src/cpp/unrar/extract.cpp"
         $595 = ((($594)) + 49740|0); //@line 586 "./src/cpp/unrar/extract.cpp"
         $596 = HEAP8[$595>>0]|0; //@line 586 "./src/cpp/unrar/extract.cpp"
         $597 = $596&1; //@line 586 "./src/cpp/unrar/extract.cpp"
         if (!($597)) {
          __THREW__ = 0;
          invoke_vii(197,(1404|0),($vararg_buffer32|0)); //@line 587 "./src/cpp/unrar/extract.cpp"
          $598 = __THREW__; __THREW__ = 0;
          $599 = $598&1;
          if ($599) {
           label = 100;
           break L159;
          }
         }
         $600 = ((($37)) + 16|0); //@line 590 "./src/cpp/unrar/extract.cpp"
         $601 = ((($600)) + 112|0); //@line 590 "./src/cpp/unrar/extract.cpp"
         $602 = $601; //@line 590 "./src/cpp/unrar/extract.cpp"
         $603 = $602; //@line 590 "./src/cpp/unrar/extract.cpp"
         HEAP32[$603>>2] = 0; //@line 590 "./src/cpp/unrar/extract.cpp"
         $604 = (($602) + 4)|0; //@line 590 "./src/cpp/unrar/extract.cpp"
         $605 = $604; //@line 590 "./src/cpp/unrar/extract.cpp"
         HEAP32[$605>>2] = 0; //@line 590 "./src/cpp/unrar/extract.cpp"
         $606 = ((($37)) + 16|0); //@line 591 "./src/cpp/unrar/extract.cpp"
         $607 = ((($606)) + 120|0); //@line 591 "./src/cpp/unrar/extract.cpp"
         $608 = $607; //@line 591 "./src/cpp/unrar/extract.cpp"
         $609 = $608; //@line 591 "./src/cpp/unrar/extract.cpp"
         HEAP32[$609>>2] = 0; //@line 591 "./src/cpp/unrar/extract.cpp"
         $610 = (($608) + 4)|0; //@line 591 "./src/cpp/unrar/extract.cpp"
         $611 = $610; //@line 591 "./src/cpp/unrar/extract.cpp"
         HEAP32[$611>>2] = 0; //@line 591 "./src/cpp/unrar/extract.cpp"
         $612 = ((($37)) + 16|0); //@line 592 "./src/cpp/unrar/extract.cpp"
         $613 = ((($612)) + 168|0); //@line 592 "./src/cpp/unrar/extract.cpp"
         $614 = $6; //@line 592 "./src/cpp/unrar/extract.cpp"
         $615 = ((($614)) + 21424|0); //@line 592 "./src/cpp/unrar/extract.cpp"
         $616 = ((($615)) + 8288|0); //@line 592 "./src/cpp/unrar/extract.cpp"
         $617 = HEAP32[$616>>2]|0; //@line 592 "./src/cpp/unrar/extract.cpp"
         $618 = ((($37)) + 8|0); //@line 592 "./src/cpp/unrar/extract.cpp"
         $619 = HEAP32[$618>>2]|0; //@line 592 "./src/cpp/unrar/extract.cpp"
         $620 = ((($619)) + 66976|0); //@line 592 "./src/cpp/unrar/extract.cpp"
         $621 = HEAP32[$620>>2]|0; //@line 592 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         invoke_viii(108,($613|0),($617|0),($621|0)); //@line 592 "./src/cpp/unrar/extract.cpp"
         $622 = __THREW__; __THREW__ = 0;
         $623 = $622&1;
         if ($623) {
          label = 100;
          break L159;
         }
         $624 = ((($37)) + 16|0); //@line 593 "./src/cpp/unrar/extract.cpp"
         $625 = ((($624)) + 144|0); //@line 593 "./src/cpp/unrar/extract.cpp"
         $626 = $6; //@line 593 "./src/cpp/unrar/extract.cpp"
         $627 = ((($626)) + 21424|0); //@line 593 "./src/cpp/unrar/extract.cpp"
         $628 = ((($627)) + 8288|0); //@line 593 "./src/cpp/unrar/extract.cpp"
         $629 = HEAP32[$628>>2]|0; //@line 593 "./src/cpp/unrar/extract.cpp"
         $630 = ((($37)) + 8|0); //@line 593 "./src/cpp/unrar/extract.cpp"
         $631 = HEAP32[$630>>2]|0; //@line 593 "./src/cpp/unrar/extract.cpp"
         $632 = ((($631)) + 66976|0); //@line 593 "./src/cpp/unrar/extract.cpp"
         $633 = HEAP32[$632>>2]|0; //@line 593 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         invoke_viii(108,($625|0),($629|0),($633|0)); //@line 593 "./src/cpp/unrar/extract.cpp"
         $634 = __THREW__; __THREW__ = 0;
         $635 = $634&1;
         if ($635) {
          label = 100;
          break L159;
         }
         $636 = ((($37)) + 16|0); //@line 594 "./src/cpp/unrar/extract.cpp"
         $637 = $6; //@line 594 "./src/cpp/unrar/extract.cpp"
         $638 = ((($637)) + 21424|0); //@line 594 "./src/cpp/unrar/extract.cpp"
         $639 = ((($638)) + 8264|0); //@line 594 "./src/cpp/unrar/extract.cpp"
         $640 = $639; //@line 594 "./src/cpp/unrar/extract.cpp"
         $641 = $640; //@line 594 "./src/cpp/unrar/extract.cpp"
         $642 = HEAP32[$641>>2]|0; //@line 594 "./src/cpp/unrar/extract.cpp"
         $643 = (($640) + 4)|0; //@line 594 "./src/cpp/unrar/extract.cpp"
         $644 = $643; //@line 594 "./src/cpp/unrar/extract.cpp"
         $645 = HEAP32[$644>>2]|0; //@line 594 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         invoke_viii(107,($636|0),($642|0),($645|0)); //@line 594 "./src/cpp/unrar/extract.cpp"
         $646 = __THREW__; __THREW__ = 0;
         $647 = $646&1;
         if ($647) {
          label = 100;
          break L159;
         }
         $648 = ((($37)) + 16|0); //@line 595 "./src/cpp/unrar/extract.cpp"
         $649 = $6; //@line 595 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         invoke_viii(105,($648|0),($649|0),($25|0)); //@line 595 "./src/cpp/unrar/extract.cpp"
         $650 = __THREW__; __THREW__ = 0;
         $651 = $650&1;
         if ($651) {
          label = 100;
          break L159;
         }
         $652 = ((($37)) + 16|0); //@line 596 "./src/cpp/unrar/extract.cpp"
         $653 = $29; //@line 596 "./src/cpp/unrar/extract.cpp"
         $654 = $653&1; //@line 596 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         invoke_vii(103,($652|0),($654|0)); //@line 596 "./src/cpp/unrar/extract.cpp"
         $655 = __THREW__; __THREW__ = 0;
         $656 = $655&1;
         if ($656) {
          label = 100;
          break L159;
         }
         $657 = ((($37)) + 16|0); //@line 597 "./src/cpp/unrar/extract.cpp"
         $658 = $19; //@line 597 "./src/cpp/unrar/extract.cpp"
         $659 = $658&1; //@line 597 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         invoke_vii(198,($657|0),($659|0)); //@line 597 "./src/cpp/unrar/extract.cpp"
         $660 = __THREW__; __THREW__ = 0;
         $661 = $660&1;
         if ($661) {
          label = 100;
          break L159;
         }
         $662 = $29; //@line 610 "./src/cpp/unrar/extract.cpp"
         $663 = $662&1; //@line 610 "./src/cpp/unrar/extract.cpp"
         do {
          if (!($663)) {
           $664 = $6; //@line 610 "./src/cpp/unrar/extract.cpp"
           $665 = ((($664)) + 56876|0); //@line 610 "./src/cpp/unrar/extract.cpp"
           $666 = HEAP8[$665>>0]|0; //@line 610 "./src/cpp/unrar/extract.cpp"
           $667 = $666&1; //@line 610 "./src/cpp/unrar/extract.cpp"
           if ($667) {
            break;
           }
           $668 = $6; //@line 611 "./src/cpp/unrar/extract.cpp"
           $669 = ((($668)) + 21424|0); //@line 611 "./src/cpp/unrar/extract.cpp"
           $670 = ((($669)) + 8264|0); //@line 611 "./src/cpp/unrar/extract.cpp"
           $671 = $670; //@line 611 "./src/cpp/unrar/extract.cpp"
           $672 = $671; //@line 611 "./src/cpp/unrar/extract.cpp"
           $673 = HEAP32[$672>>2]|0; //@line 611 "./src/cpp/unrar/extract.cpp"
           $674 = (($671) + 4)|0; //@line 611 "./src/cpp/unrar/extract.cpp"
           $675 = $674; //@line 611 "./src/cpp/unrar/extract.cpp"
           $676 = HEAP32[$675>>2]|0; //@line 611 "./src/cpp/unrar/extract.cpp"
           $677 = (_bitshift64Shl(($673|0),($676|0),11)|0); //@line 611 "./src/cpp/unrar/extract.cpp"
           $678 = tempRet0; //@line 611 "./src/cpp/unrar/extract.cpp"
           $679 = $6; //@line 611 "./src/cpp/unrar/extract.cpp"
           $680 = ((($679)) + 21424|0); //@line 611 "./src/cpp/unrar/extract.cpp"
           $681 = ((($680)) + 8272|0); //@line 611 "./src/cpp/unrar/extract.cpp"
           $682 = $681; //@line 611 "./src/cpp/unrar/extract.cpp"
           $683 = $682; //@line 611 "./src/cpp/unrar/extract.cpp"
           $684 = HEAP32[$683>>2]|0; //@line 611 "./src/cpp/unrar/extract.cpp"
           $685 = (($682) + 4)|0; //@line 611 "./src/cpp/unrar/extract.cpp"
           $686 = $685; //@line 611 "./src/cpp/unrar/extract.cpp"
           $687 = HEAP32[$686>>2]|0; //@line 611 "./src/cpp/unrar/extract.cpp"
           $688 = ($678|0)>($687|0); //@line 611 "./src/cpp/unrar/extract.cpp"
           $689 = ($677>>>0)>($684>>>0); //@line 611 "./src/cpp/unrar/extract.cpp"
           $690 = ($678|0)==($687|0); //@line 611 "./src/cpp/unrar/extract.cpp"
           $691 = $690 & $689; //@line 611 "./src/cpp/unrar/extract.cpp"
           $692 = $688 | $691; //@line 611 "./src/cpp/unrar/extract.cpp"
           if (!($692)) {
            break;
           }
           $693 = $6; //@line 612 "./src/cpp/unrar/extract.cpp"
           $694 = ((($693)) + 21424|0); //@line 612 "./src/cpp/unrar/extract.cpp"
           $695 = ((($694)) + 8272|0); //@line 612 "./src/cpp/unrar/extract.cpp"
           $696 = $695; //@line 612 "./src/cpp/unrar/extract.cpp"
           $697 = $696; //@line 612 "./src/cpp/unrar/extract.cpp"
           $698 = HEAP32[$697>>2]|0; //@line 612 "./src/cpp/unrar/extract.cpp"
           $699 = (($696) + 4)|0; //@line 612 "./src/cpp/unrar/extract.cpp"
           $700 = $699; //@line 612 "./src/cpp/unrar/extract.cpp"
           $701 = HEAP32[$700>>2]|0; //@line 612 "./src/cpp/unrar/extract.cpp"
           $702 = ($701|0)<(0); //@line 612 "./src/cpp/unrar/extract.cpp"
           $703 = ($698>>>0)<(100000000); //@line 612 "./src/cpp/unrar/extract.cpp"
           $704 = ($701|0)==(0); //@line 612 "./src/cpp/unrar/extract.cpp"
           $705 = $704 & $703; //@line 612 "./src/cpp/unrar/extract.cpp"
           $706 = $702 | $705; //@line 612 "./src/cpp/unrar/extract.cpp"
           if (!($706)) {
            $707 = $6; //@line 612 "./src/cpp/unrar/extract.cpp"
            __THREW__ = 0;
            $708 = (invoke_ii(199,($707|0))|0); //@line 612 "./src/cpp/unrar/extract.cpp"
            $709 = tempRet0; //@line 612 "./src/cpp/unrar/extract.cpp"
            $710 = __THREW__; __THREW__ = 0;
            $711 = $710&1;
            if ($711) {
             label = 100;
             break L159;
            }
            $712 = $6; //@line 612 "./src/cpp/unrar/extract.cpp"
            $713 = ((($712)) + 21424|0); //@line 612 "./src/cpp/unrar/extract.cpp"
            $714 = ((($713)) + 8264|0); //@line 612 "./src/cpp/unrar/extract.cpp"
            $715 = $714; //@line 612 "./src/cpp/unrar/extract.cpp"
            $716 = $715; //@line 612 "./src/cpp/unrar/extract.cpp"
            $717 = HEAP32[$716>>2]|0; //@line 612 "./src/cpp/unrar/extract.cpp"
            $718 = (($715) + 4)|0; //@line 612 "./src/cpp/unrar/extract.cpp"
            $719 = $718; //@line 612 "./src/cpp/unrar/extract.cpp"
            $720 = HEAP32[$719>>2]|0; //@line 612 "./src/cpp/unrar/extract.cpp"
            $721 = ($709|0)>($720|0); //@line 612 "./src/cpp/unrar/extract.cpp"
            $722 = ($708>>>0)>($717>>>0); //@line 612 "./src/cpp/unrar/extract.cpp"
            $723 = ($709|0)==($720|0); //@line 612 "./src/cpp/unrar/extract.cpp"
            $724 = $723 & $722; //@line 612 "./src/cpp/unrar/extract.cpp"
            $725 = $721 | $724; //@line 612 "./src/cpp/unrar/extract.cpp"
            if (!($725)) {
             break;
            }
           }
           $726 = $6; //@line 613 "./src/cpp/unrar/extract.cpp"
           $727 = ((($726)) + 21424|0); //@line 613 "./src/cpp/unrar/extract.cpp"
           $728 = ((($727)) + 8272|0); //@line 613 "./src/cpp/unrar/extract.cpp"
           $729 = $728; //@line 613 "./src/cpp/unrar/extract.cpp"
           $730 = $729; //@line 613 "./src/cpp/unrar/extract.cpp"
           $731 = HEAP32[$730>>2]|0; //@line 613 "./src/cpp/unrar/extract.cpp"
           $732 = (($729) + 4)|0; //@line 613 "./src/cpp/unrar/extract.cpp"
           $733 = $732; //@line 613 "./src/cpp/unrar/extract.cpp"
           $734 = HEAP32[$733>>2]|0; //@line 613 "./src/cpp/unrar/extract.cpp"
           __THREW__ = 0;
           invoke_viii(200,($25|0),($731|0),($734|0)); //@line 613 "./src/cpp/unrar/extract.cpp"
           $735 = __THREW__; __THREW__ = 0;
           $736 = $735&1;
           if ($736) {
            label = 100;
            break L159;
           }
          }
         } while(0);
         $737 = ((($37)) + 8|0); //@line 615 "./src/cpp/unrar/extract.cpp"
         $738 = HEAP32[$737>>2]|0; //@line 615 "./src/cpp/unrar/extract.cpp"
         $739 = ((($738)) + 49820|0); //@line 615 "./src/cpp/unrar/extract.cpp"
         $740 = HEAP8[$739>>0]|0; //@line 615 "./src/cpp/unrar/extract.cpp"
         $741 = $740&1; //@line 615 "./src/cpp/unrar/extract.cpp"
         $742 = $741 ^ 1; //@line 615 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         invoke_vii(201,($25|0),($742|0)); //@line 615 "./src/cpp/unrar/extract.cpp"
         $743 = __THREW__; __THREW__ = 0;
         $744 = $743&1;
         if ($744) {
          label = 100;
          break L159;
         }
         $745 = $29; //@line 617 "./src/cpp/unrar/extract.cpp"
         $746 = $745&1; //@line 617 "./src/cpp/unrar/extract.cpp"
         do {
          if ($746) {
           $752 = 0;
          } else {
           $747 = $19; //@line 617 "./src/cpp/unrar/extract.cpp"
           $748 = $747&1; //@line 617 "./src/cpp/unrar/extract.cpp"
           if ($748) {
            $752 = 0;
            break;
           }
           $749 = $9; //@line 617 "./src/cpp/unrar/extract.cpp"
           $750 = ($749|0)!=(80); //@line 617 "./src/cpp/unrar/extract.cpp"
           $752 = $750;
          }
         } while(0);
         $751 = $752&1; //@line 617 "./src/cpp/unrar/extract.cpp"
         $30 = $751; //@line 617 "./src/cpp/unrar/extract.cpp"
         $31 = 1; //@line 618 "./src/cpp/unrar/extract.cpp"
         $32 = 1; //@line 620 "./src/cpp/unrar/extract.cpp"
         $753 = $26; //@line 621 "./src/cpp/unrar/extract.cpp"
         $754 = $753&1; //@line 621 "./src/cpp/unrar/extract.cpp"
         $755 = $6;
         $756 = ((($755)) + 21424|0);
         L214: do {
          if ($754) {
           $757 = ((($756)) + 8432|0); //@line 623 "./src/cpp/unrar/extract.cpp"
           $758 = HEAP32[$757>>2]|0; //@line 623 "./src/cpp/unrar/extract.cpp"
           $33 = $758; //@line 623 "./src/cpp/unrar/extract.cpp"
           $759 = $33; //@line 625 "./src/cpp/unrar/extract.cpp"
           $760 = ($759|0)==(4); //@line 625 "./src/cpp/unrar/extract.cpp"
           $761 = $33; //@line 625 "./src/cpp/unrar/extract.cpp"
           $762 = ($761|0)==(5); //@line 625 "./src/cpp/unrar/extract.cpp"
           $or$cond14 = $760 | $762; //@line 625 "./src/cpp/unrar/extract.cpp"
           do {
            if ($or$cond14) {
             $763 = $6; //@line 628 "./src/cpp/unrar/extract.cpp"
             $764 = $6; //@line 628 "./src/cpp/unrar/extract.cpp"
             $765 = ((($764)) + 21424|0); //@line 628 "./src/cpp/unrar/extract.cpp"
             $766 = ((($765)) + 8436|0); //@line 628 "./src/cpp/unrar/extract.cpp"
             __THREW__ = 0;
             invoke_viiiii(202,($37|0),($763|0),($766|0),($34|0),2048); //@line 628 "./src/cpp/unrar/extract.cpp"
             $767 = __THREW__; __THREW__ = 0;
             $768 = $767&1;
             if ($768) {
              label = 100;
              break L159;
             }
             $769 = $30; //@line 629 "./src/cpp/unrar/extract.cpp"
             $770 = $769&1; //@line 629 "./src/cpp/unrar/extract.cpp"
             if (!($770)) {
              break;
             }
             $771 = HEAP32[$34>>2]|0; //@line 629 "./src/cpp/unrar/extract.cpp"
             $772 = ($771|0)!=(0); //@line 629 "./src/cpp/unrar/extract.cpp"
             if (!($772)) {
              break;
             }
             $773 = $33; //@line 630 "./src/cpp/unrar/extract.cpp"
             $774 = ($773|0)==(4); //@line 630 "./src/cpp/unrar/extract.cpp"
             if ($774) {
              $775 = ((($37)) + 8416|0); //@line 631 "./src/cpp/unrar/extract.cpp"
              __THREW__ = 0;
              $776 = (invoke_iiii(203,($775|0),($34|0),2048)|0); //@line 631 "./src/cpp/unrar/extract.cpp"
              $777 = __THREW__; __THREW__ = 0;
              $778 = $777&1;
              if ($778) {
               label = 100;
               break L159;
              }
              $779 = $776&1; //@line 631 "./src/cpp/unrar/extract.cpp"
              $32 = $779; //@line 631 "./src/cpp/unrar/extract.cpp"
              break;
             } else {
              $780 = $6; //@line 633 "./src/cpp/unrar/extract.cpp"
              $781 = ((($780)) + 24|0); //@line 633 "./src/cpp/unrar/extract.cpp"
              $782 = ((($37)) + 8416|0); //@line 633 "./src/cpp/unrar/extract.cpp"
              __THREW__ = 0;
              $783 = (invoke_iiiiiii(204,($37|0),($25|0),($781|0),($782|0),($34|0),2048)|0); //@line 633 "./src/cpp/unrar/extract.cpp"
              $784 = __THREW__; __THREW__ = 0;
              $785 = $784&1;
              if ($785) {
               label = 100;
               break L159;
              }
              $786 = $783&1; //@line 633 "./src/cpp/unrar/extract.cpp"
              $32 = $786; //@line 633 "./src/cpp/unrar/extract.cpp"
              break;
             }
            } else {
             $787 = $33; //@line 636 "./src/cpp/unrar/extract.cpp"
             $788 = ($787|0)==(1); //@line 636 "./src/cpp/unrar/extract.cpp"
             $789 = $33; //@line 636 "./src/cpp/unrar/extract.cpp"
             $790 = ($789|0)==(2); //@line 636 "./src/cpp/unrar/extract.cpp"
             $or$cond16 = $788 | $790; //@line 636 "./src/cpp/unrar/extract.cpp"
             $791 = $33; //@line 636 "./src/cpp/unrar/extract.cpp"
             $792 = ($791|0)==(3); //@line 636 "./src/cpp/unrar/extract.cpp"
             $or$cond18 = $or$cond16 | $792; //@line 636 "./src/cpp/unrar/extract.cpp"
             if (!($or$cond18)) {
              $804 = $6; //@line 643 "./src/cpp/unrar/extract.cpp"
              $805 = ((($804)) + 24|0); //@line 643 "./src/cpp/unrar/extract.cpp"
              $806 = ((($37)) + 8416|0); //@line 643 "./src/cpp/unrar/extract.cpp"
              __THREW__ = 0;
              invoke_viii(158,70,($805|0),($806|0)); //@line 643 "./src/cpp/unrar/extract.cpp"
              $807 = __THREW__; __THREW__ = 0;
              $808 = $807&1;
              if ($808) {
               label = 100;
               break L159;
              }
              $32 = 0; //@line 644 "./src/cpp/unrar/extract.cpp"
              break;
             }
             $793 = $30; //@line 638 "./src/cpp/unrar/extract.cpp"
             $794 = $793&1; //@line 638 "./src/cpp/unrar/extract.cpp"
             if (!($794)) {
              break;
             }
             $795 = ((($37)) + 8|0); //@line 639 "./src/cpp/unrar/extract.cpp"
             $796 = HEAP32[$795>>2]|0; //@line 639 "./src/cpp/unrar/extract.cpp"
             $797 = ((($37)) + 16|0); //@line 639 "./src/cpp/unrar/extract.cpp"
             $798 = $6; //@line 639 "./src/cpp/unrar/extract.cpp"
             $799 = ((($37)) + 8416|0); //@line 639 "./src/cpp/unrar/extract.cpp"
             __THREW__ = 0;
             $800 = (invoke_iiiii(205,($796|0),($797|0),($798|0),($799|0))|0); //@line 639 "./src/cpp/unrar/extract.cpp"
             $801 = __THREW__; __THREW__ = 0;
             $802 = $801&1;
             if ($802) {
              label = 100;
              break L159;
             }
             $803 = $800&1; //@line 639 "./src/cpp/unrar/extract.cpp"
             $32 = $803; //@line 639 "./src/cpp/unrar/extract.cpp"
            }
           } while(0);
           $809 = $32; //@line 647 "./src/cpp/unrar/extract.cpp"
           $810 = $809&1; //@line 647 "./src/cpp/unrar/extract.cpp"
           do {
            if ($810) {
             $811 = $6; //@line 647 "./src/cpp/unrar/extract.cpp"
             $812 = ((($811)) + 56856|0); //@line 647 "./src/cpp/unrar/extract.cpp"
             $813 = HEAP32[$812>>2]|0; //@line 647 "./src/cpp/unrar/extract.cpp"
             $814 = ($813|0)==(2); //@line 647 "./src/cpp/unrar/extract.cpp"
             if (!($814)) {
              break;
             }
             $815 = $30; //@line 647 "./src/cpp/unrar/extract.cpp"
             $816 = $815&1; //@line 647 "./src/cpp/unrar/extract.cpp"
             if (!($816)) {
              label = 173;
             }
            } else {
             label = 173;
            }
           } while(0);
           if ((label|0) == 173) {
            $31 = 0; //@line 654 "./src/cpp/unrar/extract.cpp"
           }
           $817 = $30; //@line 656 "./src/cpp/unrar/extract.cpp"
           $818 = $817&1; //@line 656 "./src/cpp/unrar/extract.cpp"
           $819 = $32; //@line 656 "./src/cpp/unrar/extract.cpp"
           $820 = $819&1; //@line 656 "./src/cpp/unrar/extract.cpp"
           $821 = $818 ? $820 : 0; //@line 656 "./src/cpp/unrar/extract.cpp"
           $822 = ((($37)) + 8413|0); //@line 656 "./src/cpp/unrar/extract.cpp"
           $823 = $821&1; //@line 656 "./src/cpp/unrar/extract.cpp"
           HEAP8[$822>>0] = $823; //@line 656 "./src/cpp/unrar/extract.cpp"
          } else {
           $824 = ((($756)) + 8328|0); //@line 659 "./src/cpp/unrar/extract.cpp"
           $825 = HEAP8[$824>>0]|0; //@line 659 "./src/cpp/unrar/extract.cpp"
           $826 = $825&1; //@line 659 "./src/cpp/unrar/extract.cpp"
           if ($826) {
            break;
           }
           $827 = $6; //@line 660 "./src/cpp/unrar/extract.cpp"
           $828 = ((($827)) + 21424|0); //@line 660 "./src/cpp/unrar/extract.cpp"
           $829 = ((($828)) + 26|0); //@line 660 "./src/cpp/unrar/extract.cpp"
           $830 = HEAP8[$829>>0]|0; //@line 660 "./src/cpp/unrar/extract.cpp"
           $831 = $830&255; //@line 660 "./src/cpp/unrar/extract.cpp"
           $832 = ($831|0)==(0); //@line 660 "./src/cpp/unrar/extract.cpp"
           if ($832) {
            $833 = ((($37)) + 16|0); //@line 661 "./src/cpp/unrar/extract.cpp"
            $834 = $6; //@line 661 "./src/cpp/unrar/extract.cpp"
            $835 = ((($834)) + 21424|0); //@line 661 "./src/cpp/unrar/extract.cpp"
            $836 = ((($835)) + 8272|0); //@line 661 "./src/cpp/unrar/extract.cpp"
            $837 = $836; //@line 661 "./src/cpp/unrar/extract.cpp"
            $838 = $837; //@line 661 "./src/cpp/unrar/extract.cpp"
            $839 = HEAP32[$838>>2]|0; //@line 661 "./src/cpp/unrar/extract.cpp"
            $840 = (($837) + 4)|0; //@line 661 "./src/cpp/unrar/extract.cpp"
            $841 = $840; //@line 661 "./src/cpp/unrar/extract.cpp"
            $842 = HEAP32[$841>>2]|0; //@line 661 "./src/cpp/unrar/extract.cpp"
            __THREW__ = 0;
            invoke_viii(174,($833|0),($839|0),($842|0)); //@line 661 "./src/cpp/unrar/extract.cpp"
            $843 = __THREW__; __THREW__ = 0;
            $844 = $843&1;
            if ($844) {
             label = 100;
             break L159;
            } else {
             break;
            }
           }
           $845 = ((($37)) + 200|0); //@line 671 "./src/cpp/unrar/extract.cpp"
           $846 = HEAP32[$845>>2]|0; //@line 671 "./src/cpp/unrar/extract.cpp"
           $847 = $6; //@line 671 "./src/cpp/unrar/extract.cpp"
           $848 = ((($847)) + 21424|0); //@line 671 "./src/cpp/unrar/extract.cpp"
           $849 = ((($848)) + 8420|0); //@line 671 "./src/cpp/unrar/extract.cpp"
           $850 = HEAP32[$849>>2]|0; //@line 671 "./src/cpp/unrar/extract.cpp"
           $851 = $6; //@line 671 "./src/cpp/unrar/extract.cpp"
           $852 = ((($851)) + 21424|0); //@line 671 "./src/cpp/unrar/extract.cpp"
           $853 = ((($852)) + 8416|0); //@line 671 "./src/cpp/unrar/extract.cpp"
           $854 = HEAP8[$853>>0]|0; //@line 671 "./src/cpp/unrar/extract.cpp"
           $855 = $854&1; //@line 671 "./src/cpp/unrar/extract.cpp"
           __THREW__ = 0;
           invoke_viii(110,($846|0),($850|0),($855|0)); //@line 671 "./src/cpp/unrar/extract.cpp"
           $856 = __THREW__; __THREW__ = 0;
           $857 = $856&1;
           if ($857) {
            label = 100;
            break L159;
           }
           $858 = ((($37)) + 200|0); //@line 672 "./src/cpp/unrar/extract.cpp"
           $859 = HEAP32[$858>>2]|0; //@line 672 "./src/cpp/unrar/extract.cpp"
           $860 = $6; //@line 672 "./src/cpp/unrar/extract.cpp"
           $861 = ((($860)) + 21424|0); //@line 672 "./src/cpp/unrar/extract.cpp"
           $862 = ((($861)) + 8272|0); //@line 672 "./src/cpp/unrar/extract.cpp"
           $863 = $862; //@line 672 "./src/cpp/unrar/extract.cpp"
           $864 = $863; //@line 672 "./src/cpp/unrar/extract.cpp"
           $865 = HEAP32[$864>>2]|0; //@line 672 "./src/cpp/unrar/extract.cpp"
           $866 = (($863) + 4)|0; //@line 672 "./src/cpp/unrar/extract.cpp"
           $867 = $866; //@line 672 "./src/cpp/unrar/extract.cpp"
           $868 = HEAP32[$867>>2]|0; //@line 672 "./src/cpp/unrar/extract.cpp"
           __THREW__ = 0;
           invoke_viii(111,($859|0),($865|0),($868|0)); //@line 672 "./src/cpp/unrar/extract.cpp"
           $869 = __THREW__; __THREW__ = 0;
           $870 = $869&1;
           if ($870) {
            label = 100;
            break L159;
           }
           $871 = $6; //@line 674 "./src/cpp/unrar/extract.cpp"
           $872 = ((($871)) + 56856|0); //@line 674 "./src/cpp/unrar/extract.cpp"
           $873 = HEAP32[$872>>2]|0; //@line 674 "./src/cpp/unrar/extract.cpp"
           $874 = ($873|0)!=(3); //@line 674 "./src/cpp/unrar/extract.cpp"
           do {
            if ($874) {
             $875 = $6; //@line 674 "./src/cpp/unrar/extract.cpp"
             $876 = ((($875)) + 21424|0); //@line 674 "./src/cpp/unrar/extract.cpp"
             $877 = ((($876)) + 25|0); //@line 674 "./src/cpp/unrar/extract.cpp"
             $878 = HEAP8[$877>>0]|0; //@line 674 "./src/cpp/unrar/extract.cpp"
             $879 = $878&255; //@line 674 "./src/cpp/unrar/extract.cpp"
             $880 = ($879|0)<=(15); //@line 674 "./src/cpp/unrar/extract.cpp"
             if (!($880)) {
              break;
             }
             $881 = ((($37)) + 200|0); //@line 675 "./src/cpp/unrar/extract.cpp"
             $882 = HEAP32[$881>>2]|0; //@line 675 "./src/cpp/unrar/extract.cpp"
             $883 = ((($37)) + 208|0); //@line 675 "./src/cpp/unrar/extract.cpp"
             $884 = HEAP32[$883>>2]|0; //@line 675 "./src/cpp/unrar/extract.cpp"
             $885 = ($884>>>0)>(1); //@line 675 "./src/cpp/unrar/extract.cpp"
             if ($885) {
              $886 = $6; //@line 675 "./src/cpp/unrar/extract.cpp"
              $887 = ((($886)) + 56860|0); //@line 675 "./src/cpp/unrar/extract.cpp"
              $888 = HEAP8[$887>>0]|0; //@line 675 "./src/cpp/unrar/extract.cpp"
              $889 = $888&1; //@line 675 "./src/cpp/unrar/extract.cpp"
              $890 = $889;
             } else {
              $890 = 0;
             }
             __THREW__ = 0;
             invoke_viii(112,($882|0),15,($890|0)); //@line 675 "./src/cpp/unrar/extract.cpp"
             $891 = __THREW__; __THREW__ = 0;
             $892 = $891&1;
             if ($892) {
              label = 100;
              break L159;
             } else {
              break L214;
             }
            }
           } while(0);
           $893 = ((($37)) + 200|0); //@line 678 "./src/cpp/unrar/extract.cpp"
           $894 = HEAP32[$893>>2]|0; //@line 678 "./src/cpp/unrar/extract.cpp"
           $895 = $6; //@line 678 "./src/cpp/unrar/extract.cpp"
           $896 = ((($895)) + 21424|0); //@line 678 "./src/cpp/unrar/extract.cpp"
           $897 = ((($896)) + 25|0); //@line 678 "./src/cpp/unrar/extract.cpp"
           $898 = HEAP8[$897>>0]|0; //@line 678 "./src/cpp/unrar/extract.cpp"
           $899 = $898&255; //@line 678 "./src/cpp/unrar/extract.cpp"
           $900 = $6; //@line 678 "./src/cpp/unrar/extract.cpp"
           $901 = ((($900)) + 21424|0); //@line 678 "./src/cpp/unrar/extract.cpp"
           $902 = ((($901)) + 8416|0); //@line 678 "./src/cpp/unrar/extract.cpp"
           $903 = HEAP8[$902>>0]|0; //@line 678 "./src/cpp/unrar/extract.cpp"
           $904 = $903&1; //@line 678 "./src/cpp/unrar/extract.cpp"
           __THREW__ = 0;
           invoke_viii(112,($894|0),($899|0),($904|0)); //@line 678 "./src/cpp/unrar/extract.cpp"
           $905 = __THREW__; __THREW__ = 0;
           $906 = $905&1;
           if ($906) {
            label = 100;
            break L159;
           }
          }
         } while(0);
         $907 = $6; //@line 681 "./src/cpp/unrar/extract.cpp"
         __THREW__ = 0;
         invoke_vi(79,($907|0)); //@line 681 "./src/cpp/unrar/extract.cpp"
         $908 = __THREW__; __THREW__ = 0;
         $909 = $908&1;
         if ($909) {
          label = 100;
          break L159;
         }
         $910 = $6; //@line 689 "./src/cpp/unrar/extract.cpp"
         $911 = ((($910)) + 21424|0); //@line 689 "./src/cpp/unrar/extract.cpp"
         $912 = ((($911)) + 8329|0); //@line 689 "./src/cpp/unrar/extract.cpp"
         $913 = HEAP8[$912>>0]|0; //@line 689 "./src/cpp/unrar/extract.cpp"
         $914 = $913&1; //@line 689 "./src/cpp/unrar/extract.cpp"
         if ($914) {
          $933 = 0;
         } else {
          $915 = ((($37)) + 16|0); //@line 689 "./src/cpp/unrar/extract.cpp"
          $916 = ((($915)) + 168|0); //@line 689 "./src/cpp/unrar/extract.cpp"
          $917 = $6; //@line 689 "./src/cpp/unrar/extract.cpp"
          $918 = ((($917)) + 21424|0); //@line 689 "./src/cpp/unrar/extract.cpp"
          $919 = ((($918)) + 8288|0); //@line 689 "./src/cpp/unrar/extract.cpp"
          $920 = $6; //@line 689 "./src/cpp/unrar/extract.cpp"
          $921 = ((($920)) + 21424|0); //@line 689 "./src/cpp/unrar/extract.cpp"
          $922 = ((($921)) + 8378|0); //@line 689 "./src/cpp/unrar/extract.cpp"
          $923 = HEAP8[$922>>0]|0; //@line 689 "./src/cpp/unrar/extract.cpp"
          $924 = $923&1; //@line 689 "./src/cpp/unrar/extract.cpp"
          if ($924) {
           $925 = $6; //@line 689 "./src/cpp/unrar/extract.cpp"
           $926 = ((($925)) + 21424|0); //@line 689 "./src/cpp/unrar/extract.cpp"
           $927 = ((($926)) + 8379|0); //@line 689 "./src/cpp/unrar/extract.cpp"
           $928 = $927;
          } else {
           $928 = 0;
          }
          __THREW__ = 0;
          $929 = (invoke_iiii(175,($916|0),($919|0),($928|0))|0); //@line 689 "./src/cpp/unrar/extract.cpp"
          $930 = __THREW__; __THREW__ = 0;
          $931 = $930&1;
          if ($931) {
           label = 100;
           break L159;
          } else {
           $933 = $929;
          }
         }
         $932 = $933&1; //@line 689 "./src/cpp/unrar/extract.cpp"
         $35 = $932; //@line 689 "./src/cpp/unrar/extract.cpp"
         $934 = $6; //@line 695 "./src/cpp/unrar/extract.cpp"
         $935 = ((($934)) + 21424|0); //@line 695 "./src/cpp/unrar/extract.cpp"
         $936 = ((($935)) + 8416|0); //@line 695 "./src/cpp/unrar/extract.cpp"
         $937 = HEAP8[$936>>0]|0; //@line 695 "./src/cpp/unrar/extract.cpp"
         $938 = $937&1; //@line 695 "./src/cpp/unrar/extract.cpp"
         do {
          if ($938) {
           $940 = $6; //@line 698 "./src/cpp/unrar/extract.cpp"
           $941 = ((($940)) + 21424|0); //@line 698 "./src/cpp/unrar/extract.cpp"
           $942 = ((($941)) + 26|0); //@line 698 "./src/cpp/unrar/extract.cpp"
           $943 = HEAP8[$942>>0]|0; //@line 698 "./src/cpp/unrar/extract.cpp"
           $944 = $943&255; //@line 698 "./src/cpp/unrar/extract.cpp"
           $945 = ($944|0)!=(0); //@line 698 "./src/cpp/unrar/extract.cpp"
           if (!($945)) {
            break;
           }
           $946 = $6; //@line 698 "./src/cpp/unrar/extract.cpp"
           $947 = ((($946)) + 21424|0); //@line 698 "./src/cpp/unrar/extract.cpp"
           $948 = ((($947)) + 8272|0); //@line 698 "./src/cpp/unrar/extract.cpp"
           $949 = $948; //@line 698 "./src/cpp/unrar/extract.cpp"
           $950 = $949; //@line 698 "./src/cpp/unrar/extract.cpp"
           $951 = HEAP32[$950>>2]|0; //@line 698 "./src/cpp/unrar/extract.cpp"
           $952 = (($949) + 4)|0; //@line 698 "./src/cpp/unrar/extract.cpp"
           $953 = $952; //@line 698 "./src/cpp/unrar/extract.cpp"
           $954 = HEAP32[$953>>2]|0; //@line 698 "./src/cpp/unrar/extract.cpp"
           $955 = ($954|0)>(0); //@line 698 "./src/cpp/unrar/extract.cpp"
           $956 = ($951>>>0)>(0); //@line 698 "./src/cpp/unrar/extract.cpp"
           $957 = ($954|0)==(0); //@line 698 "./src/cpp/unrar/extract.cpp"
           $958 = $957 & $956; //@line 698 "./src/cpp/unrar/extract.cpp"
           $959 = $955 | $958; //@line 698 "./src/cpp/unrar/extract.cpp"
           if (!($959)) {
            break;
           }
           $960 = $35; //@line 698 "./src/cpp/unrar/extract.cpp"
           $961 = $960&1; //@line 698 "./src/cpp/unrar/extract.cpp"
           if (!($961)) {
            break;
           }
           $962 = ((($37)) + 219|0); //@line 699 "./src/cpp/unrar/extract.cpp"
           HEAP8[$962>>0] = 1; //@line 699 "./src/cpp/unrar/extract.cpp"
          } else {
           $939 = ((($37)) + 219|0); //@line 696 "./src/cpp/unrar/extract.cpp"
           HEAP8[$939>>0] = 0; //@line 696 "./src/cpp/unrar/extract.cpp"
          }
         } while(0);
         $36 = 0; //@line 701 "./src/cpp/unrar/extract.cpp"
         $963 = $19; //@line 704 "./src/cpp/unrar/extract.cpp"
         $964 = $963&1; //@line 704 "./src/cpp/unrar/extract.cpp"
         do {
          if ($964) {
           label = 212;
          } else {
           $965 = $31; //@line 704 "./src/cpp/unrar/extract.cpp"
           $966 = $965&1; //@line 704 "./src/cpp/unrar/extract.cpp"
           if (!($966)) {
            label = 212;
            break;
           }
           $967 = $35; //@line 706 "./src/cpp/unrar/extract.cpp"
           $968 = $967&1; //@line 706 "./src/cpp/unrar/extract.cpp"
           if ($968) {
            $969 = $9; //@line 709 "./src/cpp/unrar/extract.cpp"
            $970 = ($969|0)!=(80); //@line 709 "./src/cpp/unrar/extract.cpp"
            $971 = $9; //@line 709 "./src/cpp/unrar/extract.cpp"
            $972 = ($971|0)!=(73); //@line 709 "./src/cpp/unrar/extract.cpp"
            $or$cond20 = $970 & $972; //@line 709 "./src/cpp/unrar/extract.cpp"
            if (!($or$cond20)) {
             break;
            }
            $973 = ((($37)) + 8|0); //@line 710 "./src/cpp/unrar/extract.cpp"
            $974 = HEAP32[$973>>2]|0; //@line 710 "./src/cpp/unrar/extract.cpp"
            $975 = ((($974)) + 49740|0); //@line 710 "./src/cpp/unrar/extract.cpp"
            $976 = HEAP8[$975>>0]|0; //@line 710 "./src/cpp/unrar/extract.cpp"
            $977 = $976&1; //@line 710 "./src/cpp/unrar/extract.cpp"
            $978 = $977 ? 1268 : 1276; //@line 710 "./src/cpp/unrar/extract.cpp"
            $979 = $6; //@line 711 "./src/cpp/unrar/extract.cpp"
            $980 = ((($979)) + 21424|0); //@line 711 "./src/cpp/unrar/extract.cpp"
            $981 = ((($980)) + 8288|0); //@line 711 "./src/cpp/unrar/extract.cpp"
            $982 = HEAP32[$981>>2]|0; //@line 711 "./src/cpp/unrar/extract.cpp"
            $983 = ($982|0)==(0); //@line 711 "./src/cpp/unrar/extract.cpp"
            $984 = $983 ? 1304 : 55124; //@line 711 "./src/cpp/unrar/extract.cpp"
            __THREW__ = 0;
            HEAP32[$vararg_buffer34>>2] = $978; //@line 710 "./src/cpp/unrar/extract.cpp"
            $vararg_ptr37 = ((($vararg_buffer34)) + 4|0); //@line 710 "./src/cpp/unrar/extract.cpp"
            HEAP32[$vararg_ptr37>>2] = $984; //@line 710 "./src/cpp/unrar/extract.cpp"
            invoke_vii(197,(1320|0),($vararg_buffer34|0)); //@line 710 "./src/cpp/unrar/extract.cpp"
            $985 = __THREW__; __THREW__ = 0;
            $986 = $985&1;
            if ($986) {
             label = 100;
             break L159;
            } else {
             break;
            }
           }
           $987 = $6; //@line 716 "./src/cpp/unrar/extract.cpp"
           $988 = ((($987)) + 21424|0); //@line 716 "./src/cpp/unrar/extract.cpp"
           $989 = ((($988)) + 8331|0); //@line 716 "./src/cpp/unrar/extract.cpp"
           $990 = HEAP8[$989>>0]|0; //@line 716 "./src/cpp/unrar/extract.cpp"
           $991 = $990&1; //@line 716 "./src/cpp/unrar/extract.cpp"
           do {
            if ($991) {
             $992 = $6; //@line 716 "./src/cpp/unrar/extract.cpp"
             $993 = ((($992)) + 21424|0); //@line 716 "./src/cpp/unrar/extract.cpp"
             $994 = ((($993)) + 8369|0); //@line 716 "./src/cpp/unrar/extract.cpp"
             $995 = HEAP8[$994>>0]|0; //@line 716 "./src/cpp/unrar/extract.cpp"
             $996 = $995&1; //@line 716 "./src/cpp/unrar/extract.cpp"
             if ($996) {
              $997 = $6; //@line 717 "./src/cpp/unrar/extract.cpp"
              $998 = ((($997)) + 56876|0); //@line 717 "./src/cpp/unrar/extract.cpp"
              $999 = HEAP8[$998>>0]|0; //@line 717 "./src/cpp/unrar/extract.cpp"
              $1000 = $999&1; //@line 717 "./src/cpp/unrar/extract.cpp"
              if (!($1000)) {
               label = 207;
               break;
              }
             }
             $1001 = ((($37)) + 219|0); //@line 717 "./src/cpp/unrar/extract.cpp"
             $1002 = HEAP8[$1001>>0]|0; //@line 717 "./src/cpp/unrar/extract.cpp"
             $1003 = $1002&1; //@line 717 "./src/cpp/unrar/extract.cpp"
             if ($1003) {
              label = 207;
              break;
             }
             $1004 = $6; //@line 718 "./src/cpp/unrar/extract.cpp"
             $1005 = ((($1004)) + 24|0); //@line 718 "./src/cpp/unrar/extract.cpp"
             __THREW__ = 0;
             invoke_viii(158,4,($1005|0),($16|0)); //@line 718 "./src/cpp/unrar/extract.cpp"
             $1006 = __THREW__; __THREW__ = 0;
             $1007 = $1006&1;
             if ($1007) {
              label = 100;
              break L159;
             }
            } else {
             label = 207;
            }
           } while(0);
           if ((label|0) == 207) {
            $1008 = $6; //@line 720 "./src/cpp/unrar/extract.cpp"
            $1009 = ((($1008)) + 24|0); //@line 720 "./src/cpp/unrar/extract.cpp"
            __THREW__ = 0;
            invoke_viii(158,3,($1009|0),($16|0)); //@line 720 "./src/cpp/unrar/extract.cpp"
            $1010 = __THREW__; __THREW__ = 0;
            $1011 = $1010&1;
            if ($1011) {
             label = 100;
             break L159;
            }
           }
           $36 = 1; //@line 721 "./src/cpp/unrar/extract.cpp"
           __THREW__ = 0;
           invoke_vii(157,(756|0),3); //@line 722 "./src/cpp/unrar/extract.cpp"
           $1012 = __THREW__; __THREW__ = 0;
           $1013 = $1012&1;
           if ($1013) {
            label = 100;
            break L159;
           }
           $1014 = ((($37)) + 8|0); //@line 727 "./src/cpp/unrar/extract.cpp"
           $1015 = HEAP32[$1014>>2]|0; //@line 727 "./src/cpp/unrar/extract.cpp"
           $1016 = ((($1015)) + 75176|0); //@line 727 "./src/cpp/unrar/extract.cpp"
           $1017 = HEAP32[$1016>>2]|0; //@line 727 "./src/cpp/unrar/extract.cpp"
           $1018 = ($1017|0)!=(15); //@line 727 "./src/cpp/unrar/extract.cpp"
           if (!($1018)) {
            break;
           }
           $1019 = ((($37)) + 8|0); //@line 727 "./src/cpp/unrar/extract.cpp"
           $1020 = HEAP32[$1019>>2]|0; //@line 727 "./src/cpp/unrar/extract.cpp"
           $1021 = ((($1020)) + 75176|0); //@line 727 "./src/cpp/unrar/extract.cpp"
           $1022 = HEAP32[$1021>>2]|0; //@line 727 "./src/cpp/unrar/extract.cpp"
           $1023 = ($1022|0)!=(24); //@line 727 "./src/cpp/unrar/extract.cpp"
           if (!($1023)) {
            break;
           }
           $1024 = ((($37)) + 8|0); //@line 728 "./src/cpp/unrar/extract.cpp"
           $1025 = HEAP32[$1024>>2]|0; //@line 728 "./src/cpp/unrar/extract.cpp"
           $1026 = ((($1025)) + 75176|0); //@line 728 "./src/cpp/unrar/extract.cpp"
           HEAP32[$1026>>2] = 12; //@line 728 "./src/cpp/unrar/extract.cpp"
          }
         } while(0);
         if ((label|0) == 212) {
          __THREW__ = 0;
          invoke_vii(197,(1344|0),($vararg_buffer38|0)); //@line 734 "./src/cpp/unrar/extract.cpp"
          $1027 = __THREW__; __THREW__ = 0;
          $1028 = $1027&1;
          if ($1028) {
           label = 100;
           break L159;
          }
         }
         $1029 = $29; //@line 737 "./src/cpp/unrar/extract.cpp"
         $1030 = $1029&1; //@line 737 "./src/cpp/unrar/extract.cpp"
         if ($1030) {
          break;
         }
         $1031 = $9; //@line 737 "./src/cpp/unrar/extract.cpp"
         $1032 = ($1031|0)==(88); //@line 737 "./src/cpp/unrar/extract.cpp"
         $1033 = $9; //@line 737 "./src/cpp/unrar/extract.cpp"
         $1034 = ($1033|0)==(69); //@line 737 "./src/cpp/unrar/extract.cpp"
         $or$cond22 = $1032 | $1034; //@line 737 "./src/cpp/unrar/extract.cpp"
         if (!($or$cond22)) {
          break;
         }
         $1035 = $26; //@line 738 "./src/cpp/unrar/extract.cpp"
         $1036 = $1035&1; //@line 738 "./src/cpp/unrar/extract.cpp"
         if ($1036) {
          $1037 = $6; //@line 738 "./src/cpp/unrar/extract.cpp"
          $1038 = ((($1037)) + 21424|0); //@line 738 "./src/cpp/unrar/extract.cpp"
          $1039 = ((($1038)) + 8432|0); //@line 738 "./src/cpp/unrar/extract.cpp"
          $1040 = HEAP32[$1039>>2]|0; //@line 738 "./src/cpp/unrar/extract.cpp"
          $1041 = ($1040|0)==(5); //@line 738 "./src/cpp/unrar/extract.cpp"
          if (!($1041)) {
           break;
          }
          $1042 = $32; //@line 738 "./src/cpp/unrar/extract.cpp"
          $1043 = $1042&1; //@line 738 "./src/cpp/unrar/extract.cpp"
          if (!($1043)) {
           break;
          }
         }
         $1044 = $36; //@line 739 "./src/cpp/unrar/extract.cpp"
         $1045 = $1044&1; //@line 739 "./src/cpp/unrar/extract.cpp"
         if ($1045) {
          $1046 = ((($37)) + 8|0); //@line 739 "./src/cpp/unrar/extract.cpp"
          $1047 = HEAP32[$1046>>2]|0; //@line 739 "./src/cpp/unrar/extract.cpp"
          $1048 = ((($1047)) + 49820|0); //@line 739 "./src/cpp/unrar/extract.cpp"
          $1049 = HEAP8[$1048>>0]|0; //@line 739 "./src/cpp/unrar/extract.cpp"
          $1050 = $1049&1; //@line 739 "./src/cpp/unrar/extract.cpp"
          if (!($1050)) {
           break;
          }
         }
         $1051 = $36; //@line 742 "./src/cpp/unrar/extract.cpp"
         $1052 = $1051&1; //@line 742 "./src/cpp/unrar/extract.cpp"
         if ($1052) {
          __THREW__ = 0;
          (invoke_ii(206,($25|0))|0); //@line 743 "./src/cpp/unrar/extract.cpp"
          $1053 = __THREW__; __THREW__ = 0;
          $1054 = $1053&1;
          if ($1054) {
           label = 100;
           break L159;
          }
         }
         $1055 = ((($37)) + 8|0); //@line 752 "./src/cpp/unrar/extract.cpp"
         $1056 = HEAP32[$1055>>2]|0; //@line 752 "./src/cpp/unrar/extract.cpp"
         $1057 = ((($1056)) + 58772|0); //@line 752 "./src/cpp/unrar/extract.cpp"
         $1058 = HEAP32[$1057>>2]|0; //@line 752 "./src/cpp/unrar/extract.cpp"
         $1059 = ($1058|0)==(0); //@line 752 "./src/cpp/unrar/extract.cpp"
         if ($1059) {
          $1079 = 0;
         } else {
          $1060 = $6; //@line 752 "./src/cpp/unrar/extract.cpp"
          $1061 = ((($1060)) + 21424|0); //@line 752 "./src/cpp/unrar/extract.cpp"
          $1062 = ((($1061)) + 8240|0); //@line 752 "./src/cpp/unrar/extract.cpp"
          $1079 = $1062;
         }
         $1063 = ((($37)) + 8|0); //@line 753 "./src/cpp/unrar/extract.cpp"
         $1064 = HEAP32[$1063>>2]|0; //@line 753 "./src/cpp/unrar/extract.cpp"
         $1065 = ((($1064)) + 58776|0); //@line 753 "./src/cpp/unrar/extract.cpp"
         $1066 = HEAP32[$1065>>2]|0; //@line 753 "./src/cpp/unrar/extract.cpp"
         $1067 = ($1066|0)==(0); //@line 753 "./src/cpp/unrar/extract.cpp"
         if ($1067) {
          $1080 = 0;
         } else {
          $1068 = $6; //@line 753 "./src/cpp/unrar/extract.cpp"
          $1069 = ((($1068)) + 21424|0); //@line 753 "./src/cpp/unrar/extract.cpp"
          $1070 = ((($1069)) + 8248|0); //@line 753 "./src/cpp/unrar/extract.cpp"
          $1080 = $1070;
         }
         $1071 = ((($37)) + 8|0); //@line 754 "./src/cpp/unrar/extract.cpp"
         $1072 = HEAP32[$1071>>2]|0; //@line 754 "./src/cpp/unrar/extract.cpp"
         $1073 = ((($1072)) + 58780|0); //@line 754 "./src/cpp/unrar/extract.cpp"
         $1074 = HEAP32[$1073>>2]|0; //@line 754 "./src/cpp/unrar/extract.cpp"
         $1075 = ($1074|0)==(0); //@line 754 "./src/cpp/unrar/extract.cpp"
         if ($1075) {
          $1081 = 0;
         } else {
          $1076 = $6; //@line 754 "./src/cpp/unrar/extract.cpp"
          $1077 = ((($1076)) + 21424|0); //@line 754 "./src/cpp/unrar/extract.cpp"
          $1078 = ((($1077)) + 8256|0); //@line 754 "./src/cpp/unrar/extract.cpp"
          $1081 = $1078;
         }
         __THREW__ = 0;
         invoke_viiii(207,($25|0),($1079|0),($1080|0),($1081|0)); //@line 751 "./src/cpp/unrar/extract.cpp"
         $1082 = __THREW__; __THREW__ = 0;
         $1083 = $1082&1;
         if ($1083) {
          label = 100;
          break L159;
         }
         __THREW__ = 0;
         (invoke_ii(208,($25|0))|0); //@line 755 "./src/cpp/unrar/extract.cpp"
         $1084 = __THREW__; __THREW__ = 0;
         $1085 = $1084&1;
         if ($1085) {
          label = 100;
          break L159;
         }
         $1086 = ((($37)) + 8|0); //@line 762 "./src/cpp/unrar/extract.cpp"
         $1087 = HEAP32[$1086>>2]|0; //@line 762 "./src/cpp/unrar/extract.cpp"
         $1088 = ((($1087)) + 49808|0); //@line 762 "./src/cpp/unrar/extract.cpp"
         $1089 = HEAP8[$1088>>0]|0; //@line 762 "./src/cpp/unrar/extract.cpp"
         $1090 = $1089&1; //@line 762 "./src/cpp/unrar/extract.cpp"
         do {
          if ($1090) {
           $1091 = $6; //@line 762 "./src/cpp/unrar/extract.cpp"
           $1092 = ((($1091)) + 56856|0); //@line 762 "./src/cpp/unrar/extract.cpp"
           $1093 = HEAP32[$1092>>2]|0; //@line 762 "./src/cpp/unrar/extract.cpp"
           $1094 = ($1093|0)==(3); //@line 762 "./src/cpp/unrar/extract.cpp"
           if (!($1094)) {
            break;
           }
           $1095 = $6; //@line 762 "./src/cpp/unrar/extract.cpp"
           $1096 = ((($1095)) + 21424|0); //@line 762 "./src/cpp/unrar/extract.cpp"
           $1097 = ((($1096)) + 16629|0); //@line 762 "./src/cpp/unrar/extract.cpp"
           $1098 = HEAP8[$1097>>0]|0; //@line 762 "./src/cpp/unrar/extract.cpp"
           $1099 = $1098&1; //@line 762 "./src/cpp/unrar/extract.cpp"
           if (!($1099)) {
            break;
           }
           $1100 = $6; //@line 763 "./src/cpp/unrar/extract.cpp"
           $1101 = ((($25)) + 24|0); //@line 763 "./src/cpp/unrar/extract.cpp"
           __THREW__ = 0;
           invoke_vii(209,($1100|0),($1101|0)); //@line 763 "./src/cpp/unrar/extract.cpp"
           $1102 = __THREW__; __THREW__ = 0;
           $1103 = $1102&1;
           if ($1103) {
            label = 100;
            break L159;
           }
          }
         } while(0);
         $1104 = ((($37)) + 8|0); //@line 767 "./src/cpp/unrar/extract.cpp"
         $1105 = HEAP32[$1104>>2]|0; //@line 767 "./src/cpp/unrar/extract.cpp"
         $1106 = ((($1105)) + 58772|0); //@line 767 "./src/cpp/unrar/extract.cpp"
         $1107 = HEAP32[$1106>>2]|0; //@line 767 "./src/cpp/unrar/extract.cpp"
         $1108 = ($1107|0)==(0); //@line 767 "./src/cpp/unrar/extract.cpp"
         if ($1108) {
          $1120 = 0;
         } else {
          $1109 = $6; //@line 767 "./src/cpp/unrar/extract.cpp"
          $1110 = ((($1109)) + 21424|0); //@line 767 "./src/cpp/unrar/extract.cpp"
          $1111 = ((($1110)) + 8240|0); //@line 767 "./src/cpp/unrar/extract.cpp"
          $1120 = $1111;
         }
         $1112 = ((($37)) + 8|0); //@line 768 "./src/cpp/unrar/extract.cpp"
         $1113 = HEAP32[$1112>>2]|0; //@line 768 "./src/cpp/unrar/extract.cpp"
         $1114 = ((($1113)) + 58780|0); //@line 768 "./src/cpp/unrar/extract.cpp"
         $1115 = HEAP32[$1114>>2]|0; //@line 768 "./src/cpp/unrar/extract.cpp"
         $1116 = ($1115|0)==(0); //@line 768 "./src/cpp/unrar/extract.cpp"
         if ($1116) {
          $1121 = 0;
         } else {
          $1117 = $6; //@line 768 "./src/cpp/unrar/extract.cpp"
          $1118 = ((($1117)) + 21424|0); //@line 768 "./src/cpp/unrar/extract.cpp"
          $1119 = ((($1118)) + 8256|0); //@line 768 "./src/cpp/unrar/extract.cpp"
          $1121 = $1119;
         }
         __THREW__ = 0;
         invoke_viii(210,($25|0),($1120|0),($1121|0)); //@line 766 "./src/cpp/unrar/extract.cpp"
         $1122 = __THREW__; __THREW__ = 0;
         $1123 = $1122&1;
         if ($1123) {
          label = 100;
          break L159;
         }
         $1124 = ((($37)) + 8|0); //@line 769 "./src/cpp/unrar/extract.cpp"
         $1125 = HEAP32[$1124>>2]|0; //@line 769 "./src/cpp/unrar/extract.cpp"
         $1126 = ((($1125)) + 50340|0); //@line 769 "./src/cpp/unrar/extract.cpp"
         $1127 = HEAP8[$1126>>0]|0; //@line 769 "./src/cpp/unrar/extract.cpp"
         $1128 = $1127&1; //@line 769 "./src/cpp/unrar/extract.cpp"
         do {
          if (!($1128)) {
           $1129 = ((($25)) + 24|0); //@line 769 "./src/cpp/unrar/extract.cpp"
           $1130 = $6; //@line 769 "./src/cpp/unrar/extract.cpp"
           $1131 = ((($1130)) + 21424|0); //@line 769 "./src/cpp/unrar/extract.cpp"
           $1132 = ((($1131)) + 28|0); //@line 769 "./src/cpp/unrar/extract.cpp"
           $1133 = HEAP32[$1132>>2]|0; //@line 769 "./src/cpp/unrar/extract.cpp"
           __THREW__ = 0;
           $1134 = (invoke_iii(211,($1129|0),($1133|0))|0); //@line 769 "./src/cpp/unrar/extract.cpp"
           $1135 = __THREW__; __THREW__ = 0;
           $1136 = $1135&1;
           if ($1136) {
            label = 100;
            break L159;
           }
           if ($1134) {
            break;
           }
           $1137 = $6; //@line 770 "./src/cpp/unrar/extract.cpp"
           $1138 = ((($1137)) + 24|0); //@line 770 "./src/cpp/unrar/extract.cpp"
           $1139 = ((($25)) + 24|0); //@line 770 "./src/cpp/unrar/extract.cpp"
           __THREW__ = 0;
           invoke_viii(158,16,($1138|0),($1139|0)); //@line 770 "./src/cpp/unrar/extract.cpp"
           $1140 = __THREW__; __THREW__ = 0;
           $1141 = $1140&1;
           if ($1141) {
            label = 100;
            break L159;
           }
          }
         } while(0);
         $1142 = ((($37)) + 8413|0); //@line 772 "./src/cpp/unrar/extract.cpp"
         HEAP8[$1142>>0] = 1; //@line 772 "./src/cpp/unrar/extract.cpp"
        }
       } while(0);
       $28 = 0; //@line 775 "./src/cpp/unrar/extract.cpp"
       label = 245;
      }
     } while(0);
     if ((label|0) == 100) {
      $490 = ___cxa_find_matching_catch_2()|0;
      $491 = tempRet0;
      $23 = $490; //@line 787 "./src/cpp/unrar/extract.cpp"
      $24 = $491; //@line 787 "./src/cpp/unrar/extract.cpp"
      __ZN4FileD2Ev($25); //@line 775 "./src/cpp/unrar/extract.cpp"
      __ZN11SecPasswordD2Ev($21); //@line 775 "./src/cpp/unrar/extract.cpp"
      $1144 = $23; //@line 775 "./src/cpp/unrar/extract.cpp"
      $1145 = $24; //@line 775 "./src/cpp/unrar/extract.cpp"
      ___resumeException($1144|0);
      // unreachable;
     }
     else if ((label|0) == 245) {
      __ZN4FileD2Ev($25); //@line 775 "./src/cpp/unrar/extract.cpp"
      __ZN11SecPasswordD2Ev($21); //@line 775 "./src/cpp/unrar/extract.cpp"
      $1143 = $28;
      $switch = ($1143>>>0)<(1);
      if ($switch) {
       break L80;
      }
      $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
      $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
      STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
     }
    }
   } while(0);
   $441 = ___cxa_find_matching_catch_2()|0;
   $442 = tempRet0;
   $23 = $441; //@line 787 "./src/cpp/unrar/extract.cpp"
   $24 = $442; //@line 787 "./src/cpp/unrar/extract.cpp"
   __ZN11SecPasswordD2Ev($21); //@line 775 "./src/cpp/unrar/extract.cpp"
   $1144 = $23; //@line 775 "./src/cpp/unrar/extract.cpp"
   $1145 = $24; //@line 775 "./src/cpp/unrar/extract.cpp"
   ___resumeException($1144|0);
   // unreachable;
  }
 } while(0);
 $1146 = $15; //@line 776 "./src/cpp/unrar/extract.cpp"
 $1147 = $1146&1; //@line 776 "./src/cpp/unrar/extract.cpp"
 if ($1147) {
  $1148 = ((($37)) + 212|0); //@line 777 "./src/cpp/unrar/extract.cpp"
  $1149 = HEAP32[$1148>>2]|0; //@line 777 "./src/cpp/unrar/extract.cpp"
  $1150 = (($1149) + 1)|0; //@line 777 "./src/cpp/unrar/extract.cpp"
  HEAP32[$1148>>2] = $1150; //@line 777 "./src/cpp/unrar/extract.cpp"
 }
 $1151 = ((($37)) + 16|0); //@line 778 "./src/cpp/unrar/extract.cpp"
 $1152 = ((($1151)) + 82|0); //@line 778 "./src/cpp/unrar/extract.cpp"
 $1153 = HEAP8[$1152>>0]|0; //@line 778 "./src/cpp/unrar/extract.cpp"
 $1154 = $1153&1; //@line 778 "./src/cpp/unrar/extract.cpp"
 if ($1154) {
  $$expand_i1_val65 = 0; //@line 779 "./src/cpp/unrar/extract.cpp"
  HEAP8[$4>>0] = $$expand_i1_val65; //@line 779 "./src/cpp/unrar/extract.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
  $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
 }
 $1155 = $18; //@line 780 "./src/cpp/unrar/extract.cpp"
 $1156 = $1155&1; //@line 780 "./src/cpp/unrar/extract.cpp"
 do {
  if (!($1156)) {
   $1157 = $6; //@line 781 "./src/cpp/unrar/extract.cpp"
   $1158 = ((($1157)) + 56860|0); //@line 781 "./src/cpp/unrar/extract.cpp"
   $1159 = HEAP8[$1158>>0]|0; //@line 781 "./src/cpp/unrar/extract.cpp"
   $1160 = $1159&1; //@line 781 "./src/cpp/unrar/extract.cpp"
   if (!($1160)) {
    $1161 = $6; //@line 782 "./src/cpp/unrar/extract.cpp"
    __ZN7Archive10SeekToNextEv($1161); //@line 782 "./src/cpp/unrar/extract.cpp"
    break;
   }
   $1162 = $19; //@line 784 "./src/cpp/unrar/extract.cpp"
   $1163 = $1162&1; //@line 784 "./src/cpp/unrar/extract.cpp"
   if (!($1163)) {
    $$expand_i1_val67 = 0; //@line 785 "./src/cpp/unrar/extract.cpp"
    HEAP8[$4>>0] = $$expand_i1_val67; //@line 785 "./src/cpp/unrar/extract.cpp"
    $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
    $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
    STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
   }
  }
 } while(0);
 $$expand_i1_val69 = 1; //@line 786 "./src/cpp/unrar/extract.cpp"
 HEAP8[$4>>0] = $$expand_i1_val69; //@line 786 "./src/cpp/unrar/extract.cpp"
 $$pre_trunc = HEAP8[$4>>0]|0; //@line 787 "./src/cpp/unrar/extract.cpp"
 $1164 = $$pre_trunc&1; //@line 787 "./src/cpp/unrar/extract.cpp"
 STACKTOP = sp;return ($1164|0); //@line 787 "./src/cpp/unrar/extract.cpp"
}
function __ZN10StringList10ItemsCountEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0); //@line 24 "./src/cpp/unrar/strlist.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 24 "./src/cpp/unrar/strlist.hpp"
 STACKTOP = sp;return ($4|0); //@line 24 "./src/cpp/unrar/strlist.hpp"
}
function __ZN10CmdExtract15ExtrPrepareNameER7ArchivePKwPwj($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $16 = $5;
 $17 = $8; //@line 843 "./src/cpp/unrar/extract.cpp"
 $18 = ((($16)) + 8|0); //@line 843 "./src/cpp/unrar/extract.cpp"
 $19 = HEAP32[$18>>2]|0; //@line 843 "./src/cpp/unrar/extract.cpp"
 $20 = ((($19)) + 16408|0); //@line 843 "./src/cpp/unrar/extract.cpp"
 $21 = $9; //@line 843 "./src/cpp/unrar/extract.cpp"
 (__Z8wcsncpyzPwPKwj($17,$20,$21)|0); //@line 843 "./src/cpp/unrar/extract.cpp"
 $22 = ((($16)) + 8|0); //@line 845 "./src/cpp/unrar/extract.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 845 "./src/cpp/unrar/extract.cpp"
 $24 = ((($23)) + 16408|0); //@line 845 "./src/cpp/unrar/extract.cpp"
 $25 = HEAP32[$24>>2]|0; //@line 845 "./src/cpp/unrar/extract.cpp"
 $26 = ($25|0)!=(0); //@line 845 "./src/cpp/unrar/extract.cpp"
 if ($26) {
  $27 = ((($16)) + 8|0); //@line 847 "./src/cpp/unrar/extract.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 847 "./src/cpp/unrar/extract.cpp"
  $29 = ((($28)) + 16408|0); //@line 847 "./src/cpp/unrar/extract.cpp"
  $30 = (__Z15PointToLastCharPKw($29)|0); //@line 847 "./src/cpp/unrar/extract.cpp"
  $31 = HEAP32[$30>>2]|0; //@line 847 "./src/cpp/unrar/extract.cpp"
  $10 = $31; //@line 847 "./src/cpp/unrar/extract.cpp"
  $32 = $10; //@line 851 "./src/cpp/unrar/extract.cpp"
  $33 = (__Z9IsPathDivi($32)|0); //@line 851 "./src/cpp/unrar/extract.cpp"
  if (!($33)) {
   $34 = $10; //@line 851 "./src/cpp/unrar/extract.cpp"
   $35 = (__Z10IsDriveDivi($34)|0); //@line 851 "./src/cpp/unrar/extract.cpp"
   if (!($35)) {
    $36 = $8; //@line 854 "./src/cpp/unrar/extract.cpp"
    $37 = $9; //@line 854 "./src/cpp/unrar/extract.cpp"
    __Z11AddEndSlashPwj($36,$37); //@line 854 "./src/cpp/unrar/extract.cpp"
   }
  }
 }
 $38 = ((($16)) + 8|0); //@line 859 "./src/cpp/unrar/extract.cpp"
 $39 = HEAP32[$38>>2]|0; //@line 859 "./src/cpp/unrar/extract.cpp"
 $40 = ((($39)) + 58768|0); //@line 859 "./src/cpp/unrar/extract.cpp"
 $41 = HEAP8[$40>>0]|0; //@line 859 "./src/cpp/unrar/extract.cpp"
 $42 = $41&1; //@line 859 "./src/cpp/unrar/extract.cpp"
 if ($42) {
  $43 = $8; //@line 861 "./src/cpp/unrar/extract.cpp"
  $44 = $6; //@line 861 "./src/cpp/unrar/extract.cpp"
  $45 = ((($44)) + 56932|0); //@line 861 "./src/cpp/unrar/extract.cpp"
  $46 = (__Z11PointToNamePKw($45)|0); //@line 861 "./src/cpp/unrar/extract.cpp"
  $47 = $9; //@line 861 "./src/cpp/unrar/extract.cpp"
  (__Z8wcsncatzPwPKwj($43,$46,$47)|0); //@line 861 "./src/cpp/unrar/extract.cpp"
  $48 = $8; //@line 862 "./src/cpp/unrar/extract.cpp"
  $49 = $9; //@line 862 "./src/cpp/unrar/extract.cpp"
  __Z6SetExtPwPKwj($48,0,$49); //@line 862 "./src/cpp/unrar/extract.cpp"
  $50 = $8; //@line 863 "./src/cpp/unrar/extract.cpp"
  $51 = $9; //@line 863 "./src/cpp/unrar/extract.cpp"
  __Z11AddEndSlashPwj($50,$51); //@line 863 "./src/cpp/unrar/extract.cpp"
 }
 $52 = ((($16)) + 8|0); //@line 868 "./src/cpp/unrar/extract.cpp"
 $53 = HEAP32[$52>>2]|0; //@line 868 "./src/cpp/unrar/extract.cpp"
 $54 = ((($53)) + 32808|0); //@line 868 "./src/cpp/unrar/extract.cpp"
 $55 = (_wcslen($54)|0); //@line 868 "./src/cpp/unrar/extract.cpp"
 $11 = $55; //@line 868 "./src/cpp/unrar/extract.cpp"
 $56 = $11; //@line 869 "./src/cpp/unrar/extract.cpp"
 $57 = ($56>>>0)>(0); //@line 869 "./src/cpp/unrar/extract.cpp"
 if ($57) {
  $58 = $7; //@line 871 "./src/cpp/unrar/extract.cpp"
  $59 = (_wcslen($58)|0); //@line 871 "./src/cpp/unrar/extract.cpp"
  $12 = $59; //@line 871 "./src/cpp/unrar/extract.cpp"
  $60 = $11; //@line 872 "./src/cpp/unrar/extract.cpp"
  $61 = $12; //@line 872 "./src/cpp/unrar/extract.cpp"
  $62 = ($60>>>0)<($61>>>0); //@line 872 "./src/cpp/unrar/extract.cpp"
  $63 = $11; //@line 872 "./src/cpp/unrar/extract.cpp"
  $64 = $12; //@line 872 "./src/cpp/unrar/extract.cpp"
  $65 = $62 ? $63 : $64; //@line 872 "./src/cpp/unrar/extract.cpp"
  $66 = $7; //@line 872 "./src/cpp/unrar/extract.cpp"
  $67 = (($66) + ($65<<2)|0); //@line 872 "./src/cpp/unrar/extract.cpp"
  $7 = $67; //@line 872 "./src/cpp/unrar/extract.cpp"
  while(1) {
   $68 = $7; //@line 873 "./src/cpp/unrar/extract.cpp"
   $69 = HEAP32[$68>>2]|0; //@line 873 "./src/cpp/unrar/extract.cpp"
   $70 = ($69|0)==(47); //@line 873 "./src/cpp/unrar/extract.cpp"
   $71 = $7;
   if (!($70)) {
    break;
   }
   $72 = ((($71)) + 4|0); //@line 874 "./src/cpp/unrar/extract.cpp"
   $7 = $72; //@line 874 "./src/cpp/unrar/extract.cpp"
  }
  $73 = HEAP32[$71>>2]|0; //@line 875 "./src/cpp/unrar/extract.cpp"
  $74 = ($73|0)==(0); //@line 875 "./src/cpp/unrar/extract.cpp"
  if ($74) {
   $75 = $8; //@line 877 "./src/cpp/unrar/extract.cpp"
   HEAP32[$75>>2] = 0; //@line 877 "./src/cpp/unrar/extract.cpp"
   STACKTOP = sp;return; //@line 912 "./src/cpp/unrar/extract.cpp"
  }
 }
 $76 = ((($16)) + 8|0); //@line 883 "./src/cpp/unrar/extract.cpp"
 $77 = HEAP32[$76>>2]|0; //@line 883 "./src/cpp/unrar/extract.cpp"
 $78 = ((($77)) + 75208|0); //@line 883 "./src/cpp/unrar/extract.cpp"
 $79 = HEAP32[$78>>2]|0; //@line 883 "./src/cpp/unrar/extract.cpp"
 $13 = $79; //@line 883 "./src/cpp/unrar/extract.cpp"
 $80 = ((($16)) + 8|0); //@line 885 "./src/cpp/unrar/extract.cpp"
 $81 = HEAP32[$80>>2]|0; //@line 885 "./src/cpp/unrar/extract.cpp"
 $82 = ((($81)) + 49760|0); //@line 885 "./src/cpp/unrar/extract.cpp"
 $83 = HEAP32[$82>>2]|0; //@line 885 "./src/cpp/unrar/extract.cpp"
 $84 = ($83|0)==(4); //@line 885 "./src/cpp/unrar/extract.cpp"
 $85 = $13; //@line 885 "./src/cpp/unrar/extract.cpp"
 $86 = ($85|0)==(88); //@line 885 "./src/cpp/unrar/extract.cpp"
 $or$cond = $84 & $86; //@line 885 "./src/cpp/unrar/extract.cpp"
 if ($or$cond) {
  $87 = (__Z10IsDriveDivi(58)|0); //@line 885 "./src/cpp/unrar/extract.cpp"
  $89 = $87;
 } else {
  $89 = 0;
 }
 $88 = $89&1; //@line 885 "./src/cpp/unrar/extract.cpp"
 $14 = $88; //@line 885 "./src/cpp/unrar/extract.cpp"
 $90 = $14; //@line 889 "./src/cpp/unrar/extract.cpp"
 $91 = $90&1; //@line 889 "./src/cpp/unrar/extract.cpp"
 if ($91) {
  $92 = $8; //@line 890 "./src/cpp/unrar/extract.cpp"
  HEAP32[$92>>2] = 0; //@line 890 "./src/cpp/unrar/extract.cpp"
 }
 $93 = $13; //@line 892 "./src/cpp/unrar/extract.cpp"
 $94 = ($93|0)==(69); //@line 892 "./src/cpp/unrar/extract.cpp"
 if ($94) {
  label = 19;
 } else {
  $95 = ((($16)) + 8|0); //@line 892 "./src/cpp/unrar/extract.cpp"
  $96 = HEAP32[$95>>2]|0; //@line 892 "./src/cpp/unrar/extract.cpp"
  $97 = ((($96)) + 49760|0); //@line 892 "./src/cpp/unrar/extract.cpp"
  $98 = HEAP32[$97>>2]|0; //@line 892 "./src/cpp/unrar/extract.cpp"
  $99 = ($98|0)==(1); //@line 892 "./src/cpp/unrar/extract.cpp"
  if ($99) {
   label = 19;
  } else {
   $104 = $8; //@line 895 "./src/cpp/unrar/extract.cpp"
   $105 = $7; //@line 895 "./src/cpp/unrar/extract.cpp"
   $106 = $9; //@line 895 "./src/cpp/unrar/extract.cpp"
   (__Z8wcsncatzPwPKwj($104,$105,$106)|0); //@line 895 "./src/cpp/unrar/extract.cpp"
  }
 }
 if ((label|0) == 19) {
  $100 = $8; //@line 893 "./src/cpp/unrar/extract.cpp"
  $101 = $7; //@line 893 "./src/cpp/unrar/extract.cpp"
  $102 = (__Z11PointToNamePKw($101)|0); //@line 893 "./src/cpp/unrar/extract.cpp"
  $103 = $9; //@line 893 "./src/cpp/unrar/extract.cpp"
  (__Z8wcsncatzPwPKwj($100,$102,$103)|0); //@line 893 "./src/cpp/unrar/extract.cpp"
 }
 $107 = $8; //@line 897 "./src/cpp/unrar/extract.cpp"
 $108 = HEAP32[$107>>2]|0; //@line 897 "./src/cpp/unrar/extract.cpp"
 $109 = (__Z8toupperwi($108)|0); //@line 897 "./src/cpp/unrar/extract.cpp"
 $15 = $109; //@line 897 "./src/cpp/unrar/extract.cpp"
 $110 = $14; //@line 899 "./src/cpp/unrar/extract.cpp"
 $111 = $110&1; //@line 899 "./src/cpp/unrar/extract.cpp"
 if (!($111)) {
  STACKTOP = sp;return; //@line 912 "./src/cpp/unrar/extract.cpp"
 }
 $112 = $8; //@line 901 "./src/cpp/unrar/extract.cpp"
 $113 = ((($112)) + 4|0); //@line 901 "./src/cpp/unrar/extract.cpp"
 $114 = HEAP32[$113>>2]|0; //@line 901 "./src/cpp/unrar/extract.cpp"
 $115 = ($114|0)==(95); //@line 901 "./src/cpp/unrar/extract.cpp"
 if ($115) {
  $116 = $8; //@line 901 "./src/cpp/unrar/extract.cpp"
  $117 = ((($116)) + 8|0); //@line 901 "./src/cpp/unrar/extract.cpp"
  $118 = HEAP32[$117>>2]|0; //@line 901 "./src/cpp/unrar/extract.cpp"
  $119 = (__Z9IsPathDivi($118)|0); //@line 901 "./src/cpp/unrar/extract.cpp"
  $120 = $15; //@line 902 "./src/cpp/unrar/extract.cpp"
  $121 = ($120|0)>=(65); //@line 902 "./src/cpp/unrar/extract.cpp"
  $or$cond3 = $119 & $121; //@line 901 "./src/cpp/unrar/extract.cpp"
  $122 = $15; //@line 902 "./src/cpp/unrar/extract.cpp"
  $123 = ($122|0)<=(90); //@line 902 "./src/cpp/unrar/extract.cpp"
  $or$cond5 = $or$cond3 & $123; //@line 901 "./src/cpp/unrar/extract.cpp"
  if ($or$cond5) {
   $124 = $8; //@line 903 "./src/cpp/unrar/extract.cpp"
   $125 = ((($124)) + 4|0); //@line 903 "./src/cpp/unrar/extract.cpp"
   HEAP32[$125>>2] = 58; //@line 903 "./src/cpp/unrar/extract.cpp"
   STACKTOP = sp;return; //@line 912 "./src/cpp/unrar/extract.cpp"
  }
 }
 $126 = $8; //@line 905 "./src/cpp/unrar/extract.cpp"
 $127 = HEAP32[$126>>2]|0; //@line 905 "./src/cpp/unrar/extract.cpp"
 $128 = ($127|0)==(95); //@line 905 "./src/cpp/unrar/extract.cpp"
 if (!($128)) {
  STACKTOP = sp;return; //@line 912 "./src/cpp/unrar/extract.cpp"
 }
 $129 = $8; //@line 905 "./src/cpp/unrar/extract.cpp"
 $130 = ((($129)) + 4|0); //@line 905 "./src/cpp/unrar/extract.cpp"
 $131 = HEAP32[$130>>2]|0; //@line 905 "./src/cpp/unrar/extract.cpp"
 $132 = ($131|0)==(95); //@line 905 "./src/cpp/unrar/extract.cpp"
 if (!($132)) {
  STACKTOP = sp;return; //@line 912 "./src/cpp/unrar/extract.cpp"
 }
 $133 = $8; //@line 908 "./src/cpp/unrar/extract.cpp"
 HEAP32[$133>>2] = 47; //@line 908 "./src/cpp/unrar/extract.cpp"
 $134 = $8; //@line 909 "./src/cpp/unrar/extract.cpp"
 $135 = ((($134)) + 4|0); //@line 909 "./src/cpp/unrar/extract.cpp"
 HEAP32[$135>>2] = 47; //@line 909 "./src/cpp/unrar/extract.cpp"
 STACKTOP = sp;return; //@line 912 "./src/cpp/unrar/extract.cpp"
}
function __ZN7RarTimegeERS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $4; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $6 = $5; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $7 = HEAP32[$6>>2]|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $8 = (($5) + 4)|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $9 = $8; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $11 = $3; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $12 = $11; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $13 = $12; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $14 = HEAP32[$13>>2]|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $15 = (($12) + 4)|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $16 = $15; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $17 = HEAP32[$16>>2]|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $18 = ($10>>>0)>($17>>>0); //@line 41 "./src/cpp/unrar/timefn.hpp"
 $19 = ($7>>>0)>($14>>>0); //@line 41 "./src/cpp/unrar/timefn.hpp"
 $20 = ($10|0)==($17|0); //@line 41 "./src/cpp/unrar/timefn.hpp"
 $21 = $20 & $19; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $22 = $18 | $21; //@line 41 "./src/cpp/unrar/timefn.hpp"
 if ($22) {
  $39 = 1;
  STACKTOP = sp;return ($39|0); //@line 41 "./src/cpp/unrar/timefn.hpp"
 }
 $23 = $4; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $24 = $23; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $25 = HEAP32[$24>>2]|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $26 = (($23) + 4)|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $27 = $26; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $28 = HEAP32[$27>>2]|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $29 = $3; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $30 = $29; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $31 = $30; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $32 = HEAP32[$31>>2]|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $33 = (($30) + 4)|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $34 = $33; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $35 = HEAP32[$34>>2]|0; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $36 = ($25|0)==($32|0); //@line 41 "./src/cpp/unrar/timefn.hpp"
 $37 = ($28|0)==($35|0); //@line 41 "./src/cpp/unrar/timefn.hpp"
 $38 = $36 & $37; //@line 41 "./src/cpp/unrar/timefn.hpp"
 $39 = $38;
 STACKTOP = sp;return ($39|0); //@line 41 "./src/cpp/unrar/timefn.hpp"
}
function __ZN7RarTimeltERS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $4; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $6 = $5; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $7 = HEAP32[$6>>2]|0; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $8 = (($5) + 4)|0; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $9 = $8; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $11 = $3; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $12 = $11; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $13 = $12; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $14 = HEAP32[$13>>2]|0; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $15 = (($12) + 4)|0; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $16 = $15; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $17 = HEAP32[$16>>2]|0; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $18 = ($10>>>0)<($17>>>0); //@line 38 "./src/cpp/unrar/timefn.hpp"
 $19 = ($7>>>0)<($14>>>0); //@line 38 "./src/cpp/unrar/timefn.hpp"
 $20 = ($10|0)==($17|0); //@line 38 "./src/cpp/unrar/timefn.hpp"
 $21 = $20 & $19; //@line 38 "./src/cpp/unrar/timefn.hpp"
 $22 = $18 | $21; //@line 38 "./src/cpp/unrar/timefn.hpp"
 STACKTOP = sp;return ($22|0); //@line 38 "./src/cpp/unrar/timefn.hpp"
}
function __ZN10CmdExtract18ExtrDllGetPasswordEv($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 656|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(656|0);
 $1 = sp + 648|0;
 $3 = sp;
 $4 = sp + 520|0;
 $2 = $0;
 $5 = $2;
 $6 = ((($5)) + 8|0); //@line 918 "./src/cpp/unrar/extract.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 918 "./src/cpp/unrar/extract.cpp"
 $8 = ((($7)) + 41000|0); //@line 918 "./src/cpp/unrar/extract.cpp"
 $9 = (__ZN11SecPassword5IsSetEv($8)|0); //@line 918 "./src/cpp/unrar/extract.cpp"
 if (!($9)) {
  $10 = ((($5)) + 8|0); //@line 920 "./src/cpp/unrar/extract.cpp"
  $11 = HEAP32[$10>>2]|0; //@line 920 "./src/cpp/unrar/extract.cpp"
  $12 = ((($11)) + 75184|0); //@line 920 "./src/cpp/unrar/extract.cpp"
  $13 = HEAP32[$12>>2]|0; //@line 920 "./src/cpp/unrar/extract.cpp"
  $14 = ($13|0)!=(0|0); //@line 920 "./src/cpp/unrar/extract.cpp"
  if ($14) {
   HEAP32[$3>>2] = 0; //@line 923 "./src/cpp/unrar/extract.cpp"
   $15 = ((($5)) + 8|0); //@line 924 "./src/cpp/unrar/extract.cpp"
   $16 = HEAP32[$15>>2]|0; //@line 924 "./src/cpp/unrar/extract.cpp"
   $17 = ((($16)) + 75184|0); //@line 924 "./src/cpp/unrar/extract.cpp"
   $18 = HEAP32[$17>>2]|0; //@line 924 "./src/cpp/unrar/extract.cpp"
   $19 = ((($5)) + 8|0); //@line 924 "./src/cpp/unrar/extract.cpp"
   $20 = HEAP32[$19>>2]|0; //@line 924 "./src/cpp/unrar/extract.cpp"
   $21 = ((($20)) + 75180|0); //@line 924 "./src/cpp/unrar/extract.cpp"
   $22 = HEAP32[$21>>2]|0; //@line 924 "./src/cpp/unrar/extract.cpp"
   $23 = $3; //@line 924 "./src/cpp/unrar/extract.cpp"
   $24 = (FUNCTION_TABLE_iiiii[$18 & 511](4,$22,$23,128)|0); //@line 924 "./src/cpp/unrar/extract.cpp"
   $25 = ($24|0)==(-1); //@line 924 "./src/cpp/unrar/extract.cpp"
   if ($25) {
    HEAP32[$3>>2] = 0; //@line 925 "./src/cpp/unrar/extract.cpp"
   }
   $26 = HEAP32[$3>>2]|0; //@line 926 "./src/cpp/unrar/extract.cpp"
   $27 = ($26|0)==(0); //@line 926 "./src/cpp/unrar/extract.cpp"
   if ($27) {
    HEAP8[$4>>0] = 0; //@line 929 "./src/cpp/unrar/extract.cpp"
    $28 = ((($5)) + 8|0); //@line 930 "./src/cpp/unrar/extract.cpp"
    $29 = HEAP32[$28>>2]|0; //@line 930 "./src/cpp/unrar/extract.cpp"
    $30 = ((($29)) + 75184|0); //@line 930 "./src/cpp/unrar/extract.cpp"
    $31 = HEAP32[$30>>2]|0; //@line 930 "./src/cpp/unrar/extract.cpp"
    $32 = ((($5)) + 8|0); //@line 930 "./src/cpp/unrar/extract.cpp"
    $33 = HEAP32[$32>>2]|0; //@line 930 "./src/cpp/unrar/extract.cpp"
    $34 = ((($33)) + 75180|0); //@line 930 "./src/cpp/unrar/extract.cpp"
    $35 = HEAP32[$34>>2]|0; //@line 930 "./src/cpp/unrar/extract.cpp"
    $36 = $4; //@line 930 "./src/cpp/unrar/extract.cpp"
    $37 = (FUNCTION_TABLE_iiiii[$31 & 511](2,$35,$36,128)|0); //@line 930 "./src/cpp/unrar/extract.cpp"
    $38 = ($37|0)==(-1); //@line 930 "./src/cpp/unrar/extract.cpp"
    if ($38) {
     HEAP8[$4>>0] = 0; //@line 931 "./src/cpp/unrar/extract.cpp"
    }
    (__Z11GetWideNamePKcPKwPwj($4,0,$3,128)|0); //@line 932 "./src/cpp/unrar/extract.cpp"
    __Z9cleandataPvj($4,128); //@line 933 "./src/cpp/unrar/extract.cpp"
   }
   $39 = ((($5)) + 8|0); //@line 935 "./src/cpp/unrar/extract.cpp"
   $40 = HEAP32[$39>>2]|0; //@line 935 "./src/cpp/unrar/extract.cpp"
   $41 = ((($40)) + 41000|0); //@line 935 "./src/cpp/unrar/extract.cpp"
   __ZN11SecPassword3SetEPKw($41,$3); //@line 935 "./src/cpp/unrar/extract.cpp"
   __Z9cleandataPvj($3,512); //@line 936 "./src/cpp/unrar/extract.cpp"
   $42 = ((($5)) + 8|0); //@line 937 "./src/cpp/unrar/extract.cpp"
   $43 = HEAP32[$42>>2]|0; //@line 937 "./src/cpp/unrar/extract.cpp"
   $44 = ((($43)) + 41517|0); //@line 937 "./src/cpp/unrar/extract.cpp"
   HEAP8[$44>>0] = 1; //@line 937 "./src/cpp/unrar/extract.cpp"
  }
  $45 = ((($5)) + 8|0); //@line 939 "./src/cpp/unrar/extract.cpp"
  $46 = HEAP32[$45>>2]|0; //@line 939 "./src/cpp/unrar/extract.cpp"
  $47 = ((($46)) + 41000|0); //@line 939 "./src/cpp/unrar/extract.cpp"
  $48 = (__ZN11SecPassword5IsSetEv($47)|0); //@line 939 "./src/cpp/unrar/extract.cpp"
  if (!($48)) {
   $$expand_i1_val = 0; //@line 940 "./src/cpp/unrar/extract.cpp"
   HEAP8[$1>>0] = $$expand_i1_val; //@line 940 "./src/cpp/unrar/extract.cpp"
   $$pre_trunc = HEAP8[$1>>0]|0; //@line 943 "./src/cpp/unrar/extract.cpp"
   $49 = $$pre_trunc&1; //@line 943 "./src/cpp/unrar/extract.cpp"
   STACKTOP = sp;return ($49|0); //@line 943 "./src/cpp/unrar/extract.cpp"
  }
 }
 $$expand_i1_val2 = 1; //@line 942 "./src/cpp/unrar/extract.cpp"
 HEAP8[$1>>0] = $$expand_i1_val2; //@line 942 "./src/cpp/unrar/extract.cpp"
 $$pre_trunc = HEAP8[$1>>0]|0; //@line 943 "./src/cpp/unrar/extract.cpp"
 $49 = $$pre_trunc&1; //@line 943 "./src/cpp/unrar/extract.cpp"
 STACKTOP = sp;return ($49|0); //@line 943 "./src/cpp/unrar/extract.cpp"
}
function __ZN10CmdExtract11CheckUnpVerER7ArchivePKw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $4; //@line 1140 "./src/cpp/unrar/extract.cpp"
 $8 = ((($7)) + 56856|0); //@line 1140 "./src/cpp/unrar/extract.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 1140 "./src/cpp/unrar/extract.cpp"
 $10 = ($9|0)==(3); //@line 1140 "./src/cpp/unrar/extract.cpp"
 $11 = $4;
 $12 = ((($11)) + 21424|0);
 $13 = ((($12)) + 25|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14&255;
 if ($10) {
  $16 = ($15|0)>(50); //@line 1141 "./src/cpp/unrar/extract.cpp"
  $17 = $16&1; //@line 1141 "./src/cpp/unrar/extract.cpp"
  $6 = $17; //@line 1141 "./src/cpp/unrar/extract.cpp"
 } else {
  $18 = ($15|0)<(13); //@line 1147 "./src/cpp/unrar/extract.cpp"
  if ($18) {
   $26 = 1;
  } else {
   $19 = $4; //@line 1147 "./src/cpp/unrar/extract.cpp"
   $20 = ((($19)) + 21424|0); //@line 1147 "./src/cpp/unrar/extract.cpp"
   $21 = ((($20)) + 25|0); //@line 1147 "./src/cpp/unrar/extract.cpp"
   $22 = HEAP8[$21>>0]|0; //@line 1147 "./src/cpp/unrar/extract.cpp"
   $23 = $22&255; //@line 1147 "./src/cpp/unrar/extract.cpp"
   $24 = ($23|0)>(29); //@line 1147 "./src/cpp/unrar/extract.cpp"
   $26 = $24;
  }
  $25 = $26&1; //@line 1147 "./src/cpp/unrar/extract.cpp"
  $6 = $25; //@line 1147 "./src/cpp/unrar/extract.cpp"
 }
 $27 = $4; //@line 1152 "./src/cpp/unrar/extract.cpp"
 $28 = ((($27)) + 21424|0); //@line 1152 "./src/cpp/unrar/extract.cpp"
 $29 = ((($28)) + 26|0); //@line 1152 "./src/cpp/unrar/extract.cpp"
 $30 = HEAP8[$29>>0]|0; //@line 1152 "./src/cpp/unrar/extract.cpp"
 $31 = $30&255; //@line 1152 "./src/cpp/unrar/extract.cpp"
 $32 = ($31|0)==(0); //@line 1152 "./src/cpp/unrar/extract.cpp"
 if ($32) {
  $6 = 0; //@line 1153 "./src/cpp/unrar/extract.cpp"
 }
 $33 = $6; //@line 1155 "./src/cpp/unrar/extract.cpp"
 $34 = $33&1; //@line 1155 "./src/cpp/unrar/extract.cpp"
 if (!($34)) {
  $40 = $6; //@line 1160 "./src/cpp/unrar/extract.cpp"
  $41 = $40&1; //@line 1160 "./src/cpp/unrar/extract.cpp"
  $42 = $41 ^ 1; //@line 1160 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return ($42|0); //@line 1160 "./src/cpp/unrar/extract.cpp"
 }
 $35 = $4; //@line 1157 "./src/cpp/unrar/extract.cpp"
 $36 = ((($35)) + 24|0); //@line 1157 "./src/cpp/unrar/extract.cpp"
 $37 = $5; //@line 1157 "./src/cpp/unrar/extract.cpp"
 __ZN12ErrorHandler16UnknownMethodMsgEPKwS1_(756,$36,$37); //@line 1157 "./src/cpp/unrar/extract.cpp"
 $38 = $4; //@line 1158 "./src/cpp/unrar/extract.cpp"
 $39 = ((($38)) + 24|0); //@line 1158 "./src/cpp/unrar/extract.cpp"
 __Z5uiMsgIPwEv14UIMESSAGE_CODET_(34,$39); //@line 1158 "./src/cpp/unrar/extract.cpp"
 $40 = $6; //@line 1160 "./src/cpp/unrar/extract.cpp"
 $41 = $40&1; //@line 1160 "./src/cpp/unrar/extract.cpp"
 $42 = $41 ^ 1; //@line 1160 "./src/cpp/unrar/extract.cpp"
 STACKTOP = sp;return ($42|0); //@line 1160 "./src/cpp/unrar/extract.cpp"
}
function __ZN10CmdExtract13ExtrCreateDirER7ArchivePKw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(8256|0);
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $8 = sp + 8240|0;
 $9 = sp + 32|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $10 = $3;
 $11 = ((($10)) + 8|0); //@line 1009 "./src/cpp/unrar/extract.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 1009 "./src/cpp/unrar/extract.cpp"
 $13 = ((($12)) + 50377|0); //@line 1009 "./src/cpp/unrar/extract.cpp"
 $14 = HEAP8[$13>>0]|0; //@line 1009 "./src/cpp/unrar/extract.cpp"
 $15 = $14&1; //@line 1009 "./src/cpp/unrar/extract.cpp"
 if ($15) {
  $16 = $5; //@line 1012 "./src/cpp/unrar/extract.cpp"
  HEAP32[$vararg_buffer>>2] = $16; //@line 1012 "./src/cpp/unrar/extract.cpp"
  __Z7mprintfPKwz(55124,$vararg_buffer); //@line 1012 "./src/cpp/unrar/extract.cpp"
  HEAP32[$vararg_buffer1>>2] = 55124; //@line 1013 "./src/cpp/unrar/extract.cpp"
  __Z7mprintfPKwz(1388,$vararg_buffer1); //@line 1013 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return; //@line 1085 "./src/cpp/unrar/extract.cpp"
 }
 $17 = ((($10)) + 8416|0); //@line 1018 "./src/cpp/unrar/extract.cpp"
 $18 = ((($10)) + 8|0); //@line 1018 "./src/cpp/unrar/extract.cpp"
 $19 = HEAP32[$18>>2]|0; //@line 1018 "./src/cpp/unrar/extract.cpp"
 $20 = ((($19)) + 50340|0); //@line 1018 "./src/cpp/unrar/extract.cpp"
 $21 = HEAP8[$20>>0]|0; //@line 1018 "./src/cpp/unrar/extract.cpp"
 $22 = $21&1; //@line 1018 "./src/cpp/unrar/extract.cpp"
 $23 = $22 ^ 1; //@line 1018 "./src/cpp/unrar/extract.cpp"
 $24 = $4; //@line 1018 "./src/cpp/unrar/extract.cpp"
 $25 = ((($24)) + 21424|0); //@line 1018 "./src/cpp/unrar/extract.cpp"
 $26 = ((($25)) + 28|0); //@line 1018 "./src/cpp/unrar/extract.cpp"
 $27 = HEAP32[$26>>2]|0; //@line 1018 "./src/cpp/unrar/extract.cpp"
 $28 = (__Z7MakeDirPKwbj($17,$23,$27)|0); //@line 1018 "./src/cpp/unrar/extract.cpp"
 $6 = $28; //@line 1018 "./src/cpp/unrar/extract.cpp"
 $7 = 0; //@line 1019 "./src/cpp/unrar/extract.cpp"
 $29 = $6; //@line 1020 "./src/cpp/unrar/extract.cpp"
 $30 = ($29|0)!=(0); //@line 1020 "./src/cpp/unrar/extract.cpp"
 if ($30) {
  $31 = ((($10)) + 8416|0); //@line 1022 "./src/cpp/unrar/extract.cpp"
  $32 = (__Z9FileExistPKw($31)|0); //@line 1022 "./src/cpp/unrar/extract.cpp"
  $33 = $32&1; //@line 1022 "./src/cpp/unrar/extract.cpp"
  $7 = $33; //@line 1022 "./src/cpp/unrar/extract.cpp"
  $34 = $7; //@line 1023 "./src/cpp/unrar/extract.cpp"
  $35 = $34&1; //@line 1023 "./src/cpp/unrar/extract.cpp"
  if ($35) {
   $36 = ((($10)) + 8416|0); //@line 1023 "./src/cpp/unrar/extract.cpp"
   $37 = (__Z11GetFileAttrPKw($36)|0); //@line 1023 "./src/cpp/unrar/extract.cpp"
   $38 = (__Z5IsDirj($37)|0); //@line 1023 "./src/cpp/unrar/extract.cpp"
   if (!($38)) {
    $39 = ((($10)) + 8|0); //@line 1028 "./src/cpp/unrar/extract.cpp"
    $40 = HEAP32[$39>>2]|0; //@line 1028 "./src/cpp/unrar/extract.cpp"
    $41 = ((($10)) + 8416|0); //@line 1028 "./src/cpp/unrar/extract.cpp"
    $42 = $4; //@line 1028 "./src/cpp/unrar/extract.cpp"
    $43 = ((($42)) + 21424|0); //@line 1028 "./src/cpp/unrar/extract.cpp"
    $44 = ((($43)) + 8272|0); //@line 1028 "./src/cpp/unrar/extract.cpp"
    $45 = $44; //@line 1028 "./src/cpp/unrar/extract.cpp"
    $46 = $45; //@line 1028 "./src/cpp/unrar/extract.cpp"
    $47 = HEAP32[$46>>2]|0; //@line 1028 "./src/cpp/unrar/extract.cpp"
    $48 = (($45) + 4)|0; //@line 1028 "./src/cpp/unrar/extract.cpp"
    $49 = $48; //@line 1028 "./src/cpp/unrar/extract.cpp"
    $50 = HEAP32[$49>>2]|0; //@line 1028 "./src/cpp/unrar/extract.cpp"
    $51 = $4; //@line 1028 "./src/cpp/unrar/extract.cpp"
    $52 = ((($51)) + 21424|0); //@line 1028 "./src/cpp/unrar/extract.cpp"
    $53 = ((($52)) + 8240|0); //@line 1028 "./src/cpp/unrar/extract.cpp"
    (__Z10FileCreateP10RAROptionsP4FilePwjPbxP7RarTimeb($40,0,$41,2048,$8,$47,$50,$53,0)|0); //@line 1028 "./src/cpp/unrar/extract.cpp"
    $7 = 0; //@line 1029 "./src/cpp/unrar/extract.cpp"
   }
  }
  $54 = $7; //@line 1031 "./src/cpp/unrar/extract.cpp"
  $55 = $54&1; //@line 1031 "./src/cpp/unrar/extract.cpp"
  if (!($55)) {
   $56 = ((($10)) + 8416|0); //@line 1033 "./src/cpp/unrar/extract.cpp"
   (__Z10CreatePathPKwb($56,1)|0); //@line 1033 "./src/cpp/unrar/extract.cpp"
   $57 = ((($10)) + 8416|0); //@line 1034 "./src/cpp/unrar/extract.cpp"
   $58 = ((($10)) + 8|0); //@line 1034 "./src/cpp/unrar/extract.cpp"
   $59 = HEAP32[$58>>2]|0; //@line 1034 "./src/cpp/unrar/extract.cpp"
   $60 = ((($59)) + 50340|0); //@line 1034 "./src/cpp/unrar/extract.cpp"
   $61 = HEAP8[$60>>0]|0; //@line 1034 "./src/cpp/unrar/extract.cpp"
   $62 = $61&1; //@line 1034 "./src/cpp/unrar/extract.cpp"
   $63 = $62 ^ 1; //@line 1034 "./src/cpp/unrar/extract.cpp"
   $64 = $4; //@line 1034 "./src/cpp/unrar/extract.cpp"
   $65 = ((($64)) + 21424|0); //@line 1034 "./src/cpp/unrar/extract.cpp"
   $66 = ((($65)) + 28|0); //@line 1034 "./src/cpp/unrar/extract.cpp"
   $67 = HEAP32[$66>>2]|0; //@line 1034 "./src/cpp/unrar/extract.cpp"
   $68 = (__Z7MakeDirPKwbj($57,$63,$67)|0); //@line 1034 "./src/cpp/unrar/extract.cpp"
   $6 = $68; //@line 1034 "./src/cpp/unrar/extract.cpp"
   $69 = $6; //@line 1035 "./src/cpp/unrar/extract.cpp"
   $70 = ($69|0)!=(0); //@line 1035 "./src/cpp/unrar/extract.cpp"
   if ($70) {
    $71 = ((($10)) + 8416|0); //@line 1038 "./src/cpp/unrar/extract.cpp"
    (__Z8wcsncpyzPwPKwj($9,$71,2048)|0); //@line 1038 "./src/cpp/unrar/extract.cpp"
    $72 = ((($10)) + 8416|0); //@line 1039 "./src/cpp/unrar/extract.cpp"
    __Z14MakeNameUsablePwb($72,1); //@line 1039 "./src/cpp/unrar/extract.cpp"
    $73 = ((($10)) + 8416|0); //@line 1040 "./src/cpp/unrar/extract.cpp"
    (__Z10CreatePathPKwb($73,1)|0); //@line 1040 "./src/cpp/unrar/extract.cpp"
    $74 = ((($10)) + 8416|0); //@line 1041 "./src/cpp/unrar/extract.cpp"
    $75 = ((($10)) + 8|0); //@line 1041 "./src/cpp/unrar/extract.cpp"
    $76 = HEAP32[$75>>2]|0; //@line 1041 "./src/cpp/unrar/extract.cpp"
    $77 = ((($76)) + 50340|0); //@line 1041 "./src/cpp/unrar/extract.cpp"
    $78 = HEAP8[$77>>0]|0; //@line 1041 "./src/cpp/unrar/extract.cpp"
    $79 = $78&1; //@line 1041 "./src/cpp/unrar/extract.cpp"
    $80 = $79 ^ 1; //@line 1041 "./src/cpp/unrar/extract.cpp"
    $81 = $4; //@line 1041 "./src/cpp/unrar/extract.cpp"
    $82 = ((($81)) + 21424|0); //@line 1041 "./src/cpp/unrar/extract.cpp"
    $83 = ((($82)) + 28|0); //@line 1041 "./src/cpp/unrar/extract.cpp"
    $84 = HEAP32[$83>>2]|0; //@line 1041 "./src/cpp/unrar/extract.cpp"
    $85 = (__Z7MakeDirPKwbj($74,$80,$84)|0); //@line 1041 "./src/cpp/unrar/extract.cpp"
    $6 = $85; //@line 1041 "./src/cpp/unrar/extract.cpp"
    $86 = $6; //@line 1043 "./src/cpp/unrar/extract.cpp"
    $87 = ($86|0)==(0); //@line 1043 "./src/cpp/unrar/extract.cpp"
    if ($87) {
     $88 = $4; //@line 1044 "./src/cpp/unrar/extract.cpp"
     $89 = ((($88)) + 24|0); //@line 1044 "./src/cpp/unrar/extract.cpp"
     $90 = ((($10)) + 8416|0); //@line 1044 "./src/cpp/unrar/extract.cpp"
     __Z5uiMsgIPwS0_S0_Ev14UIMESSAGE_CODET_T0_T1_(33,$89,$9,$90); //@line 1044 "./src/cpp/unrar/extract.cpp"
    }
   }
  }
 }
 $91 = $6; //@line 1049 "./src/cpp/unrar/extract.cpp"
 $92 = ($91|0)==(0); //@line 1049 "./src/cpp/unrar/extract.cpp"
 do {
  if ($92) {
   $93 = ((($10)) + 8416|0); //@line 1052 "./src/cpp/unrar/extract.cpp"
   HEAP32[$vararg_buffer4>>2] = $93; //@line 1052 "./src/cpp/unrar/extract.cpp"
   __Z7mprintfPKwz(55124,$vararg_buffer4); //@line 1052 "./src/cpp/unrar/extract.cpp"
   HEAP32[$vararg_buffer7>>2] = 55124; //@line 1053 "./src/cpp/unrar/extract.cpp"
   __Z7mprintfPKwz(1388,$vararg_buffer7); //@line 1053 "./src/cpp/unrar/extract.cpp"
   $94 = ((($10)) + 8413|0); //@line 1055 "./src/cpp/unrar/extract.cpp"
   HEAP8[$94>>0] = 1; //@line 1055 "./src/cpp/unrar/extract.cpp"
  } else {
   $95 = $7; //@line 1058 "./src/cpp/unrar/extract.cpp"
   $96 = $95&1; //@line 1058 "./src/cpp/unrar/extract.cpp"
   if (!($96)) {
    $108 = $4; //@line 1066 "./src/cpp/unrar/extract.cpp"
    $109 = ((($108)) + 24|0); //@line 1066 "./src/cpp/unrar/extract.cpp"
    $110 = ((($10)) + 8416|0); //@line 1066 "./src/cpp/unrar/extract.cpp"
    __Z5uiMsgIPwS0_Ev14UIMESSAGE_CODET_T0_(19,$109,$110); //@line 1066 "./src/cpp/unrar/extract.cpp"
    __ZN12ErrorHandler9SysErrMsgEv(756); //@line 1067 "./src/cpp/unrar/extract.cpp"
    $111 = ((($10)) + 8|0); //@line 1069 "./src/cpp/unrar/extract.cpp"
    $112 = HEAP32[$111>>2]|0; //@line 1069 "./src/cpp/unrar/extract.cpp"
    $113 = ((($112)) + 75176|0); //@line 1069 "./src/cpp/unrar/extract.cpp"
    HEAP32[$113>>2] = 16; //@line 1069 "./src/cpp/unrar/extract.cpp"
    __ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(756,9); //@line 1071 "./src/cpp/unrar/extract.cpp"
    break;
   }
   $97 = ((($10)) + 8|0); //@line 1060 "./src/cpp/unrar/extract.cpp"
   $98 = HEAP32[$97>>2]|0; //@line 1060 "./src/cpp/unrar/extract.cpp"
   $99 = ((($98)) + 50340|0); //@line 1060 "./src/cpp/unrar/extract.cpp"
   $100 = HEAP8[$99>>0]|0; //@line 1060 "./src/cpp/unrar/extract.cpp"
   $101 = $100&1; //@line 1060 "./src/cpp/unrar/extract.cpp"
   if (!($101)) {
    $102 = ((($10)) + 8416|0); //@line 1061 "./src/cpp/unrar/extract.cpp"
    $103 = $4; //@line 1061 "./src/cpp/unrar/extract.cpp"
    $104 = ((($103)) + 21424|0); //@line 1061 "./src/cpp/unrar/extract.cpp"
    $105 = ((($104)) + 28|0); //@line 1061 "./src/cpp/unrar/extract.cpp"
    $106 = HEAP32[$105>>2]|0; //@line 1061 "./src/cpp/unrar/extract.cpp"
    (__Z11SetFileAttrPKwj($102,$106)|0); //@line 1061 "./src/cpp/unrar/extract.cpp"
   }
   $107 = ((($10)) + 8413|0); //@line 1062 "./src/cpp/unrar/extract.cpp"
   HEAP8[$107>>0] = 1; //@line 1062 "./src/cpp/unrar/extract.cpp"
  }
 } while(0);
 $114 = ((($10)) + 8413|0); //@line 1073 "./src/cpp/unrar/extract.cpp"
 $115 = HEAP8[$114>>0]|0; //@line 1073 "./src/cpp/unrar/extract.cpp"
 $116 = $115&1; //@line 1073 "./src/cpp/unrar/extract.cpp"
 if (!($116)) {
  STACKTOP = sp;return; //@line 1085 "./src/cpp/unrar/extract.cpp"
 }
 $117 = ((($10)) + 8416|0); //@line 1080 "./src/cpp/unrar/extract.cpp"
 $118 = ((($10)) + 8|0); //@line 1081 "./src/cpp/unrar/extract.cpp"
 $119 = HEAP32[$118>>2]|0; //@line 1081 "./src/cpp/unrar/extract.cpp"
 $120 = ((($119)) + 58772|0); //@line 1081 "./src/cpp/unrar/extract.cpp"
 $121 = HEAP32[$120>>2]|0; //@line 1081 "./src/cpp/unrar/extract.cpp"
 $122 = ($121|0)==(0); //@line 1081 "./src/cpp/unrar/extract.cpp"
 if ($122) {
  $142 = 0;
 } else {
  $123 = $4; //@line 1081 "./src/cpp/unrar/extract.cpp"
  $124 = ((($123)) + 21424|0); //@line 1081 "./src/cpp/unrar/extract.cpp"
  $125 = ((($124)) + 8240|0); //@line 1081 "./src/cpp/unrar/extract.cpp"
  $142 = $125;
 }
 $126 = ((($10)) + 8|0); //@line 1082 "./src/cpp/unrar/extract.cpp"
 $127 = HEAP32[$126>>2]|0; //@line 1082 "./src/cpp/unrar/extract.cpp"
 $128 = ((($127)) + 58776|0); //@line 1082 "./src/cpp/unrar/extract.cpp"
 $129 = HEAP32[$128>>2]|0; //@line 1082 "./src/cpp/unrar/extract.cpp"
 $130 = ($129|0)==(0); //@line 1082 "./src/cpp/unrar/extract.cpp"
 if ($130) {
  $143 = 0;
 } else {
  $131 = $4; //@line 1082 "./src/cpp/unrar/extract.cpp"
  $132 = ((($131)) + 21424|0); //@line 1082 "./src/cpp/unrar/extract.cpp"
  $133 = ((($132)) + 8248|0); //@line 1082 "./src/cpp/unrar/extract.cpp"
  $143 = $133;
 }
 $134 = ((($10)) + 8|0); //@line 1083 "./src/cpp/unrar/extract.cpp"
 $135 = HEAP32[$134>>2]|0; //@line 1083 "./src/cpp/unrar/extract.cpp"
 $136 = ((($135)) + 58780|0); //@line 1083 "./src/cpp/unrar/extract.cpp"
 $137 = HEAP32[$136>>2]|0; //@line 1083 "./src/cpp/unrar/extract.cpp"
 $138 = ($137|0)==(0); //@line 1083 "./src/cpp/unrar/extract.cpp"
 if ($138) {
  $144 = 0;
 } else {
  $139 = $4; //@line 1083 "./src/cpp/unrar/extract.cpp"
  $140 = ((($139)) + 21424|0); //@line 1083 "./src/cpp/unrar/extract.cpp"
  $141 = ((($140)) + 8256|0); //@line 1083 "./src/cpp/unrar/extract.cpp"
  $144 = $141;
 }
 __Z10SetDirTimePKwP7RarTimeS2_S2_($117,$142,$143,$144); //@line 1080 "./src/cpp/unrar/extract.cpp"
 STACKTOP = sp;return; //@line 1085 "./src/cpp/unrar/extract.cpp"
}
function __ZN10CmdExtract14ExtrCreateFileER7ArchiveR4File($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(8224|0);
 $8 = sp + 8208|0;
 $9 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $10 = $3;
 $6 = 1; //@line 1090 "./src/cpp/unrar/extract.cpp"
 $11 = ((($10)) + 8|0); //@line 1091 "./src/cpp/unrar/extract.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 1091 "./src/cpp/unrar/extract.cpp"
 $13 = ((($12)) + 75208|0); //@line 1091 "./src/cpp/unrar/extract.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 1091 "./src/cpp/unrar/extract.cpp"
 $7 = $14; //@line 1091 "./src/cpp/unrar/extract.cpp"
 $15 = $7; //@line 1093 "./src/cpp/unrar/extract.cpp"
 $16 = ($15|0)==(80); //@line 1093 "./src/cpp/unrar/extract.cpp"
 if ($16) {
  $17 = $5; //@line 1094 "./src/cpp/unrar/extract.cpp"
  __ZN4File13SetHandleTypeE15FILE_HANDLETYPE($17,1); //@line 1094 "./src/cpp/unrar/extract.cpp"
 }
 $18 = $7; //@line 1096 "./src/cpp/unrar/extract.cpp"
 $19 = ($18|0)==(69); //@line 1096 "./src/cpp/unrar/extract.cpp"
 $20 = $7; //@line 1096 "./src/cpp/unrar/extract.cpp"
 $21 = ($20|0)==(88); //@line 1096 "./src/cpp/unrar/extract.cpp"
 $or$cond = $19 | $21; //@line 1096 "./src/cpp/unrar/extract.cpp"
 if (!($or$cond)) {
  $80 = $6; //@line 1133 "./src/cpp/unrar/extract.cpp"
  $81 = $80&1; //@line 1133 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return ($81|0); //@line 1133 "./src/cpp/unrar/extract.cpp"
 }
 $22 = ((($10)) + 8|0); //@line 1096 "./src/cpp/unrar/extract.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 1096 "./src/cpp/unrar/extract.cpp"
 $24 = ((($23)) + 50377|0); //@line 1096 "./src/cpp/unrar/extract.cpp"
 $25 = HEAP8[$24>>0]|0; //@line 1096 "./src/cpp/unrar/extract.cpp"
 $26 = $25&1; //@line 1096 "./src/cpp/unrar/extract.cpp"
 if ($26) {
  $80 = $6; //@line 1133 "./src/cpp/unrar/extract.cpp"
  $81 = $80&1; //@line 1133 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return ($81|0); //@line 1133 "./src/cpp/unrar/extract.cpp"
 }
 $27 = ((($10)) + 8|0); //@line 1101 "./src/cpp/unrar/extract.cpp"
 $28 = HEAP32[$27>>2]|0; //@line 1101 "./src/cpp/unrar/extract.cpp"
 $29 = $5; //@line 1101 "./src/cpp/unrar/extract.cpp"
 $30 = ((($10)) + 8416|0); //@line 1101 "./src/cpp/unrar/extract.cpp"
 $31 = $4; //@line 1101 "./src/cpp/unrar/extract.cpp"
 $32 = ((($31)) + 21424|0); //@line 1101 "./src/cpp/unrar/extract.cpp"
 $33 = ((($32)) + 8272|0); //@line 1101 "./src/cpp/unrar/extract.cpp"
 $34 = $33; //@line 1101 "./src/cpp/unrar/extract.cpp"
 $35 = $34; //@line 1101 "./src/cpp/unrar/extract.cpp"
 $36 = HEAP32[$35>>2]|0; //@line 1101 "./src/cpp/unrar/extract.cpp"
 $37 = (($34) + 4)|0; //@line 1101 "./src/cpp/unrar/extract.cpp"
 $38 = $37; //@line 1101 "./src/cpp/unrar/extract.cpp"
 $39 = HEAP32[$38>>2]|0; //@line 1101 "./src/cpp/unrar/extract.cpp"
 $40 = $4; //@line 1101 "./src/cpp/unrar/extract.cpp"
 $41 = ((($40)) + 21424|0); //@line 1101 "./src/cpp/unrar/extract.cpp"
 $42 = ((($41)) + 8240|0); //@line 1101 "./src/cpp/unrar/extract.cpp"
 $43 = (__Z10FileCreateP10RAROptionsP4FilePwjPbxP7RarTimeb($28,$29,$30,2048,$8,$36,$39,$42,1)|0); //@line 1101 "./src/cpp/unrar/extract.cpp"
 if ($43) {
  $80 = $6; //@line 1133 "./src/cpp/unrar/extract.cpp"
  $81 = $80&1; //@line 1133 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return ($81|0); //@line 1133 "./src/cpp/unrar/extract.cpp"
 }
 $6 = 0; //@line 1103 "./src/cpp/unrar/extract.cpp"
 $44 = HEAP8[$8>>0]|0; //@line 1104 "./src/cpp/unrar/extract.cpp"
 $45 = $44&1; //@line 1104 "./src/cpp/unrar/extract.cpp"
 if ($45) {
  $80 = $6; //@line 1133 "./src/cpp/unrar/extract.cpp"
  $81 = $80&1; //@line 1133 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return ($81|0); //@line 1133 "./src/cpp/unrar/extract.cpp"
 }
 $46 = $4; //@line 1106 "./src/cpp/unrar/extract.cpp"
 $47 = ((($46)) + 24|0); //@line 1106 "./src/cpp/unrar/extract.cpp"
 $48 = ((($10)) + 8416|0); //@line 1106 "./src/cpp/unrar/extract.cpp"
 __ZN12ErrorHandler14CreateErrorMsgEPKwS1_(756,$47,$48); //@line 1106 "./src/cpp/unrar/extract.cpp"
 $49 = ((($10)) + 8|0); //@line 1108 "./src/cpp/unrar/extract.cpp"
 $50 = HEAP32[$49>>2]|0; //@line 1108 "./src/cpp/unrar/extract.cpp"
 $51 = ((($50)) + 75176|0); //@line 1108 "./src/cpp/unrar/extract.cpp"
 HEAP32[$51>>2] = 16; //@line 1108 "./src/cpp/unrar/extract.cpp"
 $52 = ((($10)) + 8416|0); //@line 1110 "./src/cpp/unrar/extract.cpp"
 $53 = (__Z12IsNameUsablePKw($52)|0); //@line 1110 "./src/cpp/unrar/extract.cpp"
 if ($53) {
  $80 = $6; //@line 1133 "./src/cpp/unrar/extract.cpp"
  $81 = $80&1; //@line 1133 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return ($81|0); //@line 1133 "./src/cpp/unrar/extract.cpp"
 }
 $54 = $4; //@line 1112 "./src/cpp/unrar/extract.cpp"
 $55 = ((($54)) + 24|0); //@line 1112 "./src/cpp/unrar/extract.cpp"
 __Z5uiMsgIPwEv14UIMESSAGE_CODET_(106,$55); //@line 1112 "./src/cpp/unrar/extract.cpp"
 $56 = ((($10)) + 8416|0); //@line 1115 "./src/cpp/unrar/extract.cpp"
 (__Z8wcsncpyzPwPKwj($9,$56,2048)|0); //@line 1115 "./src/cpp/unrar/extract.cpp"
 $57 = ((($10)) + 8416|0); //@line 1117 "./src/cpp/unrar/extract.cpp"
 __Z14MakeNameUsablePwb($57,1); //@line 1117 "./src/cpp/unrar/extract.cpp"
 $58 = ((($10)) + 8416|0); //@line 1119 "./src/cpp/unrar/extract.cpp"
 (__Z10CreatePathPKwb($58,1)|0); //@line 1119 "./src/cpp/unrar/extract.cpp"
 $59 = ((($10)) + 8|0); //@line 1120 "./src/cpp/unrar/extract.cpp"
 $60 = HEAP32[$59>>2]|0; //@line 1120 "./src/cpp/unrar/extract.cpp"
 $61 = $5; //@line 1120 "./src/cpp/unrar/extract.cpp"
 $62 = ((($10)) + 8416|0); //@line 1120 "./src/cpp/unrar/extract.cpp"
 $63 = $4; //@line 1120 "./src/cpp/unrar/extract.cpp"
 $64 = ((($63)) + 21424|0); //@line 1120 "./src/cpp/unrar/extract.cpp"
 $65 = ((($64)) + 8272|0); //@line 1120 "./src/cpp/unrar/extract.cpp"
 $66 = $65; //@line 1120 "./src/cpp/unrar/extract.cpp"
 $67 = $66; //@line 1120 "./src/cpp/unrar/extract.cpp"
 $68 = HEAP32[$67>>2]|0; //@line 1120 "./src/cpp/unrar/extract.cpp"
 $69 = (($66) + 4)|0; //@line 1120 "./src/cpp/unrar/extract.cpp"
 $70 = $69; //@line 1120 "./src/cpp/unrar/extract.cpp"
 $71 = HEAP32[$70>>2]|0; //@line 1120 "./src/cpp/unrar/extract.cpp"
 $72 = $4; //@line 1120 "./src/cpp/unrar/extract.cpp"
 $73 = ((($72)) + 21424|0); //@line 1120 "./src/cpp/unrar/extract.cpp"
 $74 = ((($73)) + 8240|0); //@line 1120 "./src/cpp/unrar/extract.cpp"
 $75 = (__Z10FileCreateP10RAROptionsP4FilePwjPbxP7RarTimeb($60,$61,$62,2048,$8,$68,$71,$74,1)|0); //@line 1120 "./src/cpp/unrar/extract.cpp"
 $76 = $4;
 $77 = ((($76)) + 24|0);
 if ($75) {
  $78 = ((($10)) + 8416|0); //@line 1123 "./src/cpp/unrar/extract.cpp"
  __Z5uiMsgIPwS0_S0_Ev14UIMESSAGE_CODET_T0_T1_(33,$77,$9,$78); //@line 1123 "./src/cpp/unrar/extract.cpp"
  $6 = 1; //@line 1125 "./src/cpp/unrar/extract.cpp"
  $80 = $6; //@line 1133 "./src/cpp/unrar/extract.cpp"
  $81 = $80&1; //@line 1133 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return ($81|0); //@line 1133 "./src/cpp/unrar/extract.cpp"
 } else {
  $79 = ((($10)) + 8416|0); //@line 1128 "./src/cpp/unrar/extract.cpp"
  __ZN12ErrorHandler14CreateErrorMsgEPKwS1_(756,$77,$79); //@line 1128 "./src/cpp/unrar/extract.cpp"
  $80 = $6; //@line 1133 "./src/cpp/unrar/extract.cpp"
  $81 = $80&1; //@line 1133 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return ($81|0); //@line 1133 "./src/cpp/unrar/extract.cpp"
 }
 return (0)|0;
}
function __ZN11ComprDataIO13SetSkipUnpCRCEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $1&1;
 $3 = $4;
 $5 = $2;
 $6 = $3; //@line 60 "./src/cpp/unrar/rdwrfn.hpp"
 $7 = $6&1; //@line 60 "./src/cpp/unrar/rdwrfn.hpp"
 $8 = ((($5)) + 42|0); //@line 60 "./src/cpp/unrar/rdwrfn.hpp"
 $9 = $7&1; //@line 60 "./src/cpp/unrar/rdwrfn.hpp"
 HEAP8[$8>>0] = $9; //@line 60 "./src/cpp/unrar/rdwrfn.hpp"
 STACKTOP = sp;return; //@line 60 "./src/cpp/unrar/rdwrfn.hpp"
}
function __ZN4File14SetAllowDeleteEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $1&1;
 $3 = $4;
 $5 = $2;
 $6 = $3; //@line 108 "./src/cpp/unrar/file.hpp"
 $7 = $6&1; //@line 108 "./src/cpp/unrar/file.hpp"
 $8 = ((($5)) + 19|0); //@line 108 "./src/cpp/unrar/file.hpp"
 $9 = $7&1; //@line 108 "./src/cpp/unrar/file.hpp"
 HEAP8[$8>>0] = $9; //@line 108 "./src/cpp/unrar/file.hpp"
 STACKTOP = sp;return; //@line 108 "./src/cpp/unrar/file.hpp"
}
function __ZN10CmdExtract15ExtractFileCopyER4FilePwS2_S2_j($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(8304|0);
 $6 = sp + 8288|0;
 $13 = sp + 44|0;
 $17 = sp + 16|0;
 $18 = sp;
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $20 = $7;
 $21 = $11; //@line 811 "./src/cpp/unrar/extract.cpp"
 $22 = $11; //@line 811 "./src/cpp/unrar/extract.cpp"
 $23 = $12; //@line 811 "./src/cpp/unrar/extract.cpp"
 __Z13SlashToNativePKwPwj($21,$22,$23); //@line 811 "./src/cpp/unrar/extract.cpp"
 __ZN4FileC2Ev($13); //@line 813 "./src/cpp/unrar/extract.cpp"
 $24 = $11; //@line 814 "./src/cpp/unrar/extract.cpp"
 __THREW__ = 0;
 $25 = (invoke_iii(212,($13|0),($24|0))|0); //@line 814 "./src/cpp/unrar/extract.cpp"
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 do {
  if (!($27)) {
   if (!($25)) {
    $28 = $9; //@line 816 "./src/cpp/unrar/extract.cpp"
    $29 = $11; //@line 816 "./src/cpp/unrar/extract.cpp"
    $30 = $10; //@line 816 "./src/cpp/unrar/extract.cpp"
    __THREW__ = 0;
    invoke_viiii(213,17,($28|0),($29|0),($30|0)); //@line 816 "./src/cpp/unrar/extract.cpp"
    $31 = __THREW__; __THREW__ = 0;
    $32 = $31&1;
    if ($32) {
     break;
    }
    $33 = $9; //@line 817 "./src/cpp/unrar/extract.cpp"
    __THREW__ = 0;
    invoke_vii(101,18,($33|0)); //@line 817 "./src/cpp/unrar/extract.cpp"
    $34 = __THREW__; __THREW__ = 0;
    $35 = $34&1;
    if ($35) {
     break;
    }
    $36 = ((($20)) + 8|0); //@line 819 "./src/cpp/unrar/extract.cpp"
    $37 = HEAP32[$36>>2]|0; //@line 819 "./src/cpp/unrar/extract.cpp"
    $38 = ((($37)) + 75176|0); //@line 819 "./src/cpp/unrar/extract.cpp"
    HEAP32[$38>>2] = 23; //@line 819 "./src/cpp/unrar/extract.cpp"
    $$expand_i1_val = 0; //@line 821 "./src/cpp/unrar/extract.cpp"
    HEAP8[$6>>0] = $$expand_i1_val; //@line 821 "./src/cpp/unrar/extract.cpp"
    $16 = 1;
    __ZN4FileD2Ev($13); //@line 838 "./src/cpp/unrar/extract.cpp"
    $$pre_trunc = HEAP8[$6>>0]|0; //@line 838 "./src/cpp/unrar/extract.cpp"
    $84 = $$pre_trunc&1; //@line 838 "./src/cpp/unrar/extract.cpp"
    STACKTOP = sp;return ($84|0); //@line 838 "./src/cpp/unrar/extract.cpp"
   }
   __THREW__ = 0;
   invoke_vii(61,($17|0),1048576); //@line 824 "./src/cpp/unrar/extract.cpp"
   $41 = __THREW__; __THREW__ = 0;
   $42 = $41&1;
   if (!($42)) {
    $43 = $18; //@line 825 "./src/cpp/unrar/extract.cpp"
    $44 = $43; //@line 825 "./src/cpp/unrar/extract.cpp"
    HEAP32[$44>>2] = 0; //@line 825 "./src/cpp/unrar/extract.cpp"
    $45 = (($43) + 4)|0; //@line 825 "./src/cpp/unrar/extract.cpp"
    $46 = $45; //@line 825 "./src/cpp/unrar/extract.cpp"
    HEAP32[$46>>2] = 0; //@line 825 "./src/cpp/unrar/extract.cpp"
    while(1) {
     __THREW__ = 0;
     invoke_v(214); //@line 829 "./src/cpp/unrar/extract.cpp"
     $47 = __THREW__; __THREW__ = 0;
     $48 = $47&1;
     if ($48) {
      label = 14;
      break;
     }
     __THREW__ = 0;
     $49 = (invoke_iii(62,($17|0),0)|0); //@line 830 "./src/cpp/unrar/extract.cpp"
     $50 = __THREW__; __THREW__ = 0;
     $51 = $50&1;
     if ($51) {
      label = 14;
      break;
     }
     __THREW__ = 0;
     $52 = (invoke_ii(63,($17|0))|0); //@line 830 "./src/cpp/unrar/extract.cpp"
     $53 = __THREW__; __THREW__ = 0;
     $54 = $53&1;
     if ($54) {
      label = 14;
      break;
     }
     __THREW__ = 0;
     $55 = (invoke_iiii(10,($13|0),($49|0),($52|0))|0); //@line 830 "./src/cpp/unrar/extract.cpp"
     $56 = __THREW__; __THREW__ = 0;
     $57 = $56&1;
     if ($57) {
      label = 14;
      break;
     }
     $19 = $55; //@line 830 "./src/cpp/unrar/extract.cpp"
     $58 = $19; //@line 831 "./src/cpp/unrar/extract.cpp"
     $59 = ($58|0)==(0); //@line 831 "./src/cpp/unrar/extract.cpp"
     if ($59) {
      label = 18;
      break;
     }
     $62 = $8; //@line 833 "./src/cpp/unrar/extract.cpp"
     __THREW__ = 0;
     $63 = (invoke_iii(62,($17|0),0)|0); //@line 833 "./src/cpp/unrar/extract.cpp"
     $64 = __THREW__; __THREW__ = 0;
     $65 = $64&1;
     if ($65) {
      label = 14;
      break;
     }
     $66 = $19; //@line 833 "./src/cpp/unrar/extract.cpp"
     __THREW__ = 0;
     (invoke_iiii(215,($62|0),($63|0),($66|0))|0); //@line 833 "./src/cpp/unrar/extract.cpp"
     $67 = __THREW__; __THREW__ = 0;
     $68 = $67&1;
     if ($68) {
      label = 14;
      break;
     }
     $69 = $19; //@line 834 "./src/cpp/unrar/extract.cpp"
     $70 = ($69|0)<(0); //@line 834 "./src/cpp/unrar/extract.cpp"
     $71 = $70 << 31 >> 31; //@line 834 "./src/cpp/unrar/extract.cpp"
     $72 = $18; //@line 834 "./src/cpp/unrar/extract.cpp"
     $73 = $72; //@line 834 "./src/cpp/unrar/extract.cpp"
     $74 = HEAP32[$73>>2]|0; //@line 834 "./src/cpp/unrar/extract.cpp"
     $75 = (($72) + 4)|0; //@line 834 "./src/cpp/unrar/extract.cpp"
     $76 = $75; //@line 834 "./src/cpp/unrar/extract.cpp"
     $77 = HEAP32[$76>>2]|0; //@line 834 "./src/cpp/unrar/extract.cpp"
     $78 = (_i64Add(($74|0),($77|0),($69|0),($71|0))|0); //@line 834 "./src/cpp/unrar/extract.cpp"
     $79 = tempRet0; //@line 834 "./src/cpp/unrar/extract.cpp"
     $80 = $18; //@line 834 "./src/cpp/unrar/extract.cpp"
     $81 = $80; //@line 834 "./src/cpp/unrar/extract.cpp"
     HEAP32[$81>>2] = $78; //@line 834 "./src/cpp/unrar/extract.cpp"
     $82 = (($80) + 4)|0; //@line 834 "./src/cpp/unrar/extract.cpp"
     $83 = $82; //@line 834 "./src/cpp/unrar/extract.cpp"
     HEAP32[$83>>2] = $79; //@line 834 "./src/cpp/unrar/extract.cpp"
    }
    if ((label|0) == 14) {
     $60 = ___cxa_find_matching_catch_2()|0;
     $61 = tempRet0;
     $14 = $60; //@line 838 "./src/cpp/unrar/extract.cpp"
     $15 = $61; //@line 838 "./src/cpp/unrar/extract.cpp"
     __ZN5ArrayIcED2Ev($17); //@line 838 "./src/cpp/unrar/extract.cpp"
     __ZN4FileD2Ev($13); //@line 838 "./src/cpp/unrar/extract.cpp"
     $85 = $14; //@line 838 "./src/cpp/unrar/extract.cpp"
     $86 = $15; //@line 838 "./src/cpp/unrar/extract.cpp"
     ___resumeException($85|0);
     // unreachable;
    }
    else if ((label|0) == 18) {
     $$expand_i1_val2 = 1; //@line 837 "./src/cpp/unrar/extract.cpp"
     HEAP8[$6>>0] = $$expand_i1_val2; //@line 837 "./src/cpp/unrar/extract.cpp"
     $16 = 1;
     __ZN5ArrayIcED2Ev($17); //@line 838 "./src/cpp/unrar/extract.cpp"
     __ZN4FileD2Ev($13); //@line 838 "./src/cpp/unrar/extract.cpp"
     $$pre_trunc = HEAP8[$6>>0]|0; //@line 838 "./src/cpp/unrar/extract.cpp"
     $84 = $$pre_trunc&1; //@line 838 "./src/cpp/unrar/extract.cpp"
     STACKTOP = sp;return ($84|0); //@line 838 "./src/cpp/unrar/extract.cpp"
    }
   }
  }
 } while(0);
 $39 = ___cxa_find_matching_catch_2()|0;
 $40 = tempRet0;
 $14 = $39; //@line 838 "./src/cpp/unrar/extract.cpp"
 $15 = $40; //@line 838 "./src/cpp/unrar/extract.cpp"
 __ZN4FileD2Ev($13); //@line 838 "./src/cpp/unrar/extract.cpp"
 $85 = $14; //@line 838 "./src/cpp/unrar/extract.cpp"
 $86 = $15; //@line 838 "./src/cpp/unrar/extract.cpp"
 ___resumeException($85|0);
 // unreachable;
 return (0)|0;
}
function __ZN10CmdExtract11UnstoreFileER11ComprDataIOx($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = sp;
 $5 = sp + 24|0;
 $3 = $0;
 $9 = $4;
 $10 = $9;
 HEAP32[$10>>2] = $1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $2;
 __ZN5ArrayIhEC2Ej($5,262144); //@line 795 "./src/cpp/unrar/extract.cpp"
 while(1) {
  $13 = $3; //@line 798 "./src/cpp/unrar/extract.cpp"
  __THREW__ = 0;
  $14 = (invoke_iii(94,($5|0),0)|0); //@line 798 "./src/cpp/unrar/extract.cpp"
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 6;
   break;
  }
  __THREW__ = 0;
  $17 = (invoke_ii(122,($5|0))|0); //@line 798 "./src/cpp/unrar/extract.cpp"
  $18 = __THREW__; __THREW__ = 0;
  $19 = $18&1;
  if ($19) {
   label = 6;
   break;
  }
  __THREW__ = 0;
  $20 = (invoke_iiii(216,($13|0),($14|0),($17|0))|0); //@line 798 "./src/cpp/unrar/extract.cpp"
  $21 = __THREW__; __THREW__ = 0;
  $22 = $21&1;
  if ($22) {
   label = 6;
   break;
  }
  $6 = $20; //@line 798 "./src/cpp/unrar/extract.cpp"
  $23 = $6; //@line 799 "./src/cpp/unrar/extract.cpp"
  $24 = ($23|0)==(0); //@line 799 "./src/cpp/unrar/extract.cpp"
  $25 = $6; //@line 799 "./src/cpp/unrar/extract.cpp"
  $26 = ($25|0)==(-1); //@line 799 "./src/cpp/unrar/extract.cpp"
  $or$cond = $24 | $26; //@line 799 "./src/cpp/unrar/extract.cpp"
  if ($or$cond) {
   label = 11;
   break;
  }
  $31 = $6; //@line 801 "./src/cpp/unrar/extract.cpp"
  $32 = $4; //@line 801 "./src/cpp/unrar/extract.cpp"
  $33 = $32; //@line 801 "./src/cpp/unrar/extract.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 801 "./src/cpp/unrar/extract.cpp"
  $35 = (($32) + 4)|0; //@line 801 "./src/cpp/unrar/extract.cpp"
  $36 = $35; //@line 801 "./src/cpp/unrar/extract.cpp"
  $37 = HEAP32[$36>>2]|0; //@line 801 "./src/cpp/unrar/extract.cpp"
  $38 = (0)<($37|0); //@line 801 "./src/cpp/unrar/extract.cpp"
  $39 = ($31>>>0)<($34>>>0); //@line 801 "./src/cpp/unrar/extract.cpp"
  $40 = (0)==($37|0); //@line 801 "./src/cpp/unrar/extract.cpp"
  $41 = $40 & $39; //@line 801 "./src/cpp/unrar/extract.cpp"
  $42 = $38 | $41; //@line 801 "./src/cpp/unrar/extract.cpp"
  $43 = $6; //@line 801 "./src/cpp/unrar/extract.cpp"
  $44 = $4; //@line 801 "./src/cpp/unrar/extract.cpp"
  $45 = $44; //@line 801 "./src/cpp/unrar/extract.cpp"
  $46 = HEAP32[$45>>2]|0; //@line 801 "./src/cpp/unrar/extract.cpp"
  $47 = (($44) + 4)|0; //@line 801 "./src/cpp/unrar/extract.cpp"
  $48 = $47; //@line 801 "./src/cpp/unrar/extract.cpp"
  $49 = HEAP32[$48>>2]|0; //@line 801 "./src/cpp/unrar/extract.cpp"
  $50 = $42 ? $43 : $46; //@line 801 "./src/cpp/unrar/extract.cpp"
  $6 = $50; //@line 801 "./src/cpp/unrar/extract.cpp"
  $51 = $3; //@line 802 "./src/cpp/unrar/extract.cpp"
  __THREW__ = 0;
  $52 = (invoke_iii(94,($5|0),0)|0); //@line 802 "./src/cpp/unrar/extract.cpp"
  $53 = __THREW__; __THREW__ = 0;
  $54 = $53&1;
  if ($54) {
   label = 6;
   break;
  }
  $55 = $6; //@line 802 "./src/cpp/unrar/extract.cpp"
  __THREW__ = 0;
  invoke_viii(217,($51|0),($52|0),($55|0)); //@line 802 "./src/cpp/unrar/extract.cpp"
  $56 = __THREW__; __THREW__ = 0;
  $57 = $56&1;
  if ($57) {
   label = 6;
   break;
  }
  $58 = $4; //@line 803 "./src/cpp/unrar/extract.cpp"
  $59 = $58; //@line 803 "./src/cpp/unrar/extract.cpp"
  $60 = HEAP32[$59>>2]|0; //@line 803 "./src/cpp/unrar/extract.cpp"
  $61 = (($58) + 4)|0; //@line 803 "./src/cpp/unrar/extract.cpp"
  $62 = $61; //@line 803 "./src/cpp/unrar/extract.cpp"
  $63 = HEAP32[$62>>2]|0; //@line 803 "./src/cpp/unrar/extract.cpp"
  $64 = ($63|0)>(0); //@line 803 "./src/cpp/unrar/extract.cpp"
  $65 = ($60>>>0)>=(0); //@line 803 "./src/cpp/unrar/extract.cpp"
  $66 = ($63|0)==(0); //@line 803 "./src/cpp/unrar/extract.cpp"
  $67 = $66 & $65; //@line 803 "./src/cpp/unrar/extract.cpp"
  $68 = $64 | $67; //@line 803 "./src/cpp/unrar/extract.cpp"
  if (!($68)) {
   continue;
  }
  $69 = $6; //@line 804 "./src/cpp/unrar/extract.cpp"
  $70 = $4; //@line 804 "./src/cpp/unrar/extract.cpp"
  $71 = $70; //@line 804 "./src/cpp/unrar/extract.cpp"
  $72 = HEAP32[$71>>2]|0; //@line 804 "./src/cpp/unrar/extract.cpp"
  $73 = (($70) + 4)|0; //@line 804 "./src/cpp/unrar/extract.cpp"
  $74 = $73; //@line 804 "./src/cpp/unrar/extract.cpp"
  $75 = HEAP32[$74>>2]|0; //@line 804 "./src/cpp/unrar/extract.cpp"
  $76 = (_i64Subtract(($72|0),($75|0),($69|0),0)|0); //@line 804 "./src/cpp/unrar/extract.cpp"
  $77 = tempRet0; //@line 804 "./src/cpp/unrar/extract.cpp"
  $78 = $4; //@line 804 "./src/cpp/unrar/extract.cpp"
  $79 = $78; //@line 804 "./src/cpp/unrar/extract.cpp"
  HEAP32[$79>>2] = $76; //@line 804 "./src/cpp/unrar/extract.cpp"
  $80 = (($78) + 4)|0; //@line 804 "./src/cpp/unrar/extract.cpp"
  $81 = $80; //@line 804 "./src/cpp/unrar/extract.cpp"
  HEAP32[$81>>2] = $77; //@line 804 "./src/cpp/unrar/extract.cpp"
 }
 if ((label|0) == 6) {
  $27 = ___cxa_find_matching_catch_2()|0;
  $28 = tempRet0;
  $7 = $27; //@line 806 "./src/cpp/unrar/extract.cpp"
  $8 = $28; //@line 806 "./src/cpp/unrar/extract.cpp"
  __ZN5ArrayIhED2Ev($5); //@line 806 "./src/cpp/unrar/extract.cpp"
  $29 = $7; //@line 806 "./src/cpp/unrar/extract.cpp"
  $30 = $8; //@line 806 "./src/cpp/unrar/extract.cpp"
  ___resumeException($29|0);
  // unreachable;
 }
 else if ((label|0) == 11) {
  __ZN5ArrayIhED2Ev($5); //@line 806 "./src/cpp/unrar/extract.cpp"
  STACKTOP = sp;return; //@line 806 "./src/cpp/unrar/extract.cpp"
 }
}
function __Z5uiMsgIPwS0_S0_Ev14UIMESSAGE_CODET_T0_T1_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $8 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4; //@line 157 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStoreC2E14UIMESSAGE_CODE($8,$9); //@line 157 "./src/cpp/unrar/ui.hpp"
 $10 = $5; //@line 158 "./src/cpp/unrar/ui.hpp"
 $11 = (__ZN10uiMsgStorelsEPKw($8,$10)|0); //@line 158 "./src/cpp/unrar/ui.hpp"
 $12 = $6; //@line 158 "./src/cpp/unrar/ui.hpp"
 $13 = (__ZN10uiMsgStorelsEPKw($11,$12)|0); //@line 158 "./src/cpp/unrar/ui.hpp"
 $14 = $7; //@line 158 "./src/cpp/unrar/ui.hpp"
 (__ZN10uiMsgStorelsEPKw($13,$14)|0); //@line 158 "./src/cpp/unrar/ui.hpp"
 __ZN10uiMsgStore3MsgEv($8); //@line 159 "./src/cpp/unrar/ui.hpp"
 STACKTOP = sp;return; //@line 160 "./src/cpp/unrar/ui.hpp"
}
function __ZN4File13SetHandleTypeE15FILE_HANDLETYPE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 100 "./src/cpp/unrar/file.hpp"
 $6 = ((($4)) + 12|0); //@line 100 "./src/cpp/unrar/file.hpp"
 HEAP32[$6>>2] = $5; //@line 100 "./src/cpp/unrar/file.hpp"
 STACKTOP = sp;return; //@line 100 "./src/cpp/unrar/file.hpp"
}
function __Z12MergeArchiveR7ArchiveP11ComprDataIObw($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val12 = 0, $$expand_i1_val14 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0;
 var $vararg_buffer = 0, $vararg_buffer6 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16464|0);
 $vararg_buffer9 = sp + 24|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer = sp + 8|0;
 $4 = sp + 16453|0;
 $14 = sp;
 $15 = sp + 8232|0;
 $19 = sp + 32|0;
 $5 = $0;
 $6 = $1;
 $20 = $2&1;
 $7 = $20;
 $8 = $3;
 $21 = $5; //@line 12 "./src/cpp/unrar/volume.cpp"
 $22 = (__ZN7Archive13GetRAROptionsEv($21)|0); //@line 12 "./src/cpp/unrar/volume.cpp"
 $9 = $22; //@line 12 "./src/cpp/unrar/volume.cpp"
 $23 = $5; //@line 14 "./src/cpp/unrar/volume.cpp"
 $24 = (__ZN7Archive13GetHeaderTypeEv($23)|0); //@line 14 "./src/cpp/unrar/volume.cpp"
 $10 = $24; //@line 14 "./src/cpp/unrar/volume.cpp"
 $25 = $10; //@line 15 "./src/cpp/unrar/volume.cpp"
 $26 = ($25|0)==(3); //@line 15 "./src/cpp/unrar/volume.cpp"
 $27 = $5;
 $28 = ((($27)) + 38640|0); //@line 15 "./src/cpp/unrar/volume.cpp"
 $29 = ((($27)) + 21424|0); //@line 15 "./src/cpp/unrar/volume.cpp"
 $30 = $26 ? $28 : $29; //@line 15 "./src/cpp/unrar/volume.cpp"
 $11 = $30; //@line 15 "./src/cpp/unrar/volume.cpp"
 $31 = $10; //@line 16 "./src/cpp/unrar/volume.cpp"
 $32 = ($31|0)==(2); //@line 16 "./src/cpp/unrar/volume.cpp"
 $33 = $10; //@line 16 "./src/cpp/unrar/volume.cpp"
 $34 = ($33|0)==(3); //@line 16 "./src/cpp/unrar/volume.cpp"
 $or$cond = $32 | $34; //@line 16 "./src/cpp/unrar/volume.cpp"
 if ($or$cond) {
  $35 = $11; //@line 17 "./src/cpp/unrar/volume.cpp"
  $36 = ((($35)) + 8329|0); //@line 17 "./src/cpp/unrar/volume.cpp"
  $37 = HEAP8[$36>>0]|0; //@line 17 "./src/cpp/unrar/volume.cpp"
  $38 = $37&1; //@line 17 "./src/cpp/unrar/volume.cpp"
  $40 = $38;
 } else {
  $40 = 0;
 }
 $39 = $40&1; //@line 16 "./src/cpp/unrar/volume.cpp"
 $12 = $39; //@line 16 "./src/cpp/unrar/volume.cpp"
 $41 = $6; //@line 19 "./src/cpp/unrar/volume.cpp"
 $42 = ($41|0)!=(0|0); //@line 19 "./src/cpp/unrar/volume.cpp"
 if ($42) {
  $43 = $12; //@line 19 "./src/cpp/unrar/volume.cpp"
  $44 = $43&1; //@line 19 "./src/cpp/unrar/volume.cpp"
  if ($44) {
   $45 = $5; //@line 21 "./src/cpp/unrar/volume.cpp"
   $46 = ((($45)) + 56856|0); //@line 21 "./src/cpp/unrar/volume.cpp"
   $47 = HEAP32[$46>>2]|0; //@line 21 "./src/cpp/unrar/volume.cpp"
   $48 = ($47|0)==(3); //@line 21 "./src/cpp/unrar/volume.cpp"
   if ($48) {
    $60 = 1;
   } else {
    $49 = $11; //@line 22 "./src/cpp/unrar/volume.cpp"
    $50 = ((($49)) + 25|0); //@line 22 "./src/cpp/unrar/volume.cpp"
    $51 = HEAP8[$50>>0]|0; //@line 22 "./src/cpp/unrar/volume.cpp"
    $52 = $51&255; //@line 22 "./src/cpp/unrar/volume.cpp"
    $53 = ($52|0)>=(20); //@line 22 "./src/cpp/unrar/volume.cpp"
    if ($53) {
     $54 = $11; //@line 22 "./src/cpp/unrar/volume.cpp"
     $55 = ((($54)) + 8288|0); //@line 22 "./src/cpp/unrar/volume.cpp"
     $56 = ((($55)) + 4|0); //@line 22 "./src/cpp/unrar/volume.cpp"
     $57 = HEAP32[$56>>2]|0; //@line 22 "./src/cpp/unrar/volume.cpp"
     $58 = ($57|0)!=(-1); //@line 22 "./src/cpp/unrar/volume.cpp"
     $60 = $58;
    } else {
     $60 = 0;
    }
   }
   $59 = $60&1; //@line 21 "./src/cpp/unrar/volume.cpp"
   $13 = $59; //@line 21 "./src/cpp/unrar/volume.cpp"
   $61 = $13; //@line 23 "./src/cpp/unrar/volume.cpp"
   $62 = $61&1; //@line 23 "./src/cpp/unrar/volume.cpp"
   if ($62) {
    $63 = $6; //@line 24 "./src/cpp/unrar/volume.cpp"
    $64 = ((($63)) + 144|0); //@line 24 "./src/cpp/unrar/volume.cpp"
    $65 = $11; //@line 24 "./src/cpp/unrar/volume.cpp"
    $66 = ((($65)) + 8288|0); //@line 24 "./src/cpp/unrar/volume.cpp"
    $67 = $11; //@line 24 "./src/cpp/unrar/volume.cpp"
    $68 = ((($67)) + 8378|0); //@line 24 "./src/cpp/unrar/volume.cpp"
    $69 = HEAP8[$68>>0]|0; //@line 24 "./src/cpp/unrar/volume.cpp"
    $70 = $69&1; //@line 24 "./src/cpp/unrar/volume.cpp"
    $71 = $11; //@line 24 "./src/cpp/unrar/volume.cpp"
    $72 = ((($71)) + 8379|0); //@line 24 "./src/cpp/unrar/volume.cpp"
    $73 = $70 ? $72 : 0; //@line 24 "./src/cpp/unrar/volume.cpp"
    $74 = (__ZN8DataHash3CmpEP9HashValuePh($64,$66,$73)|0); //@line 24 "./src/cpp/unrar/volume.cpp"
    if (!($74)) {
     $75 = $5; //@line 25 "./src/cpp/unrar/volume.cpp"
     $76 = ((($75)) + 24|0); //@line 25 "./src/cpp/unrar/volume.cpp"
     $77 = $11; //@line 25 "./src/cpp/unrar/volume.cpp"
     $78 = ((($77)) + 32|0); //@line 25 "./src/cpp/unrar/volume.cpp"
     __Z5uiMsgIPwS0_Ev14UIMESSAGE_CODET_T0_(5,$76,$78); //@line 25 "./src/cpp/unrar/volume.cpp"
    }
   }
  }
 }
 $79 = $5; //@line 28 "./src/cpp/unrar/volume.cpp"
 $80 = HEAP32[$79>>2]|0; //@line 28 "./src/cpp/unrar/volume.cpp"
 $81 = ((($80)) + 20|0); //@line 28 "./src/cpp/unrar/volume.cpp"
 $82 = HEAP32[$81>>2]|0; //@line 28 "./src/cpp/unrar/volume.cpp"
 $83 = (FUNCTION_TABLE_ii[$82 & 511]($79)|0); //@line 28 "./src/cpp/unrar/volume.cpp"
 $84 = tempRet0; //@line 28 "./src/cpp/unrar/volume.cpp"
 $85 = $14; //@line 28 "./src/cpp/unrar/volume.cpp"
 $86 = $85; //@line 28 "./src/cpp/unrar/volume.cpp"
 HEAP32[$86>>2] = $83; //@line 28 "./src/cpp/unrar/volume.cpp"
 $87 = (($85) + 4)|0; //@line 28 "./src/cpp/unrar/volume.cpp"
 $88 = $87; //@line 28 "./src/cpp/unrar/volume.cpp"
 HEAP32[$88>>2] = $84; //@line 28 "./src/cpp/unrar/volume.cpp"
 $89 = $6; //@line 30 "./src/cpp/unrar/volume.cpp"
 $90 = ($89|0)!=(0|0); //@line 30 "./src/cpp/unrar/volume.cpp"
 if ($90) {
  $91 = $5; //@line 31 "./src/cpp/unrar/volume.cpp"
  $92 = (__ZN4File10FileLengthEv($91)|0); //@line 31 "./src/cpp/unrar/volume.cpp"
  $93 = tempRet0; //@line 31 "./src/cpp/unrar/volume.cpp"
  $94 = $6; //@line 31 "./src/cpp/unrar/volume.cpp"
  $95 = ((($94)) + 128|0); //@line 31 "./src/cpp/unrar/volume.cpp"
  $96 = $95; //@line 31 "./src/cpp/unrar/volume.cpp"
  $97 = $96; //@line 31 "./src/cpp/unrar/volume.cpp"
  $98 = HEAP32[$97>>2]|0; //@line 31 "./src/cpp/unrar/volume.cpp"
  $99 = (($96) + 4)|0; //@line 31 "./src/cpp/unrar/volume.cpp"
  $100 = $99; //@line 31 "./src/cpp/unrar/volume.cpp"
  $101 = HEAP32[$100>>2]|0; //@line 31 "./src/cpp/unrar/volume.cpp"
  $102 = (_i64Add(($98|0),($101|0),($92|0),($93|0))|0); //@line 31 "./src/cpp/unrar/volume.cpp"
  $103 = tempRet0; //@line 31 "./src/cpp/unrar/volume.cpp"
  $104 = $95; //@line 31 "./src/cpp/unrar/volume.cpp"
  $105 = $104; //@line 31 "./src/cpp/unrar/volume.cpp"
  HEAP32[$105>>2] = $102; //@line 31 "./src/cpp/unrar/volume.cpp"
  $106 = (($104) + 4)|0; //@line 31 "./src/cpp/unrar/volume.cpp"
  $107 = $106; //@line 31 "./src/cpp/unrar/volume.cpp"
  HEAP32[$107>>2] = $103; //@line 31 "./src/cpp/unrar/volume.cpp"
 }
 $108 = $5; //@line 34 "./src/cpp/unrar/volume.cpp"
 (__ZN4File5CloseEv($108)|0); //@line 34 "./src/cpp/unrar/volume.cpp"
 $109 = $5; //@line 37 "./src/cpp/unrar/volume.cpp"
 $110 = ((($109)) + 24|0); //@line 37 "./src/cpp/unrar/volume.cpp"
 (_wcscpy($15,$110)|0); //@line 37 "./src/cpp/unrar/volume.cpp"
 $111 = $5; //@line 38 "./src/cpp/unrar/volume.cpp"
 $112 = ((($111)) + 56866|0); //@line 38 "./src/cpp/unrar/volume.cpp"
 $113 = HEAP8[$112>>0]|0; //@line 38 "./src/cpp/unrar/volume.cpp"
 $114 = $113&1; //@line 38 "./src/cpp/unrar/volume.cpp"
 $115 = $114 ^ 1; //@line 38 "./src/cpp/unrar/volume.cpp"
 __Z14NextVolumeNamePwjb($15,2048,$115); //@line 38 "./src/cpp/unrar/volume.cpp"
 $16 = 0; //@line 43 "./src/cpp/unrar/volume.cpp"
 $17 = 0; //@line 43 "./src/cpp/unrar/volume.cpp"
 $116 = $9; //@line 53 "./src/cpp/unrar/volume.cpp"
 $117 = ((($116)) + 49821|0); //@line 53 "./src/cpp/unrar/volume.cpp"
 $118 = HEAP8[$117>>0]|0; //@line 53 "./src/cpp/unrar/volume.cpp"
 $119 = $118&1; //@line 53 "./src/cpp/unrar/volume.cpp"
 $120 = $119 ? 4 : 0; //@line 53 "./src/cpp/unrar/volume.cpp"
 $18 = $120; //@line 53 "./src/cpp/unrar/volume.cpp"
 $121 = $16; //@line 55 "./src/cpp/unrar/volume.cpp"
 $122 = $121&1; //@line 55 "./src/cpp/unrar/volume.cpp"
 L17: do {
  if (!($122)) {
   while(1) {
    $123 = $5; //@line 56 "./src/cpp/unrar/volume.cpp"
    $124 = HEAP32[$123>>2]|0; //@line 56 "./src/cpp/unrar/volume.cpp"
    $125 = ((($124)) + 8|0); //@line 56 "./src/cpp/unrar/volume.cpp"
    $126 = HEAP32[$125>>2]|0; //@line 56 "./src/cpp/unrar/volume.cpp"
    $127 = $18; //@line 56 "./src/cpp/unrar/volume.cpp"
    $128 = (FUNCTION_TABLE_iiii[$126 & 511]($123,$15,$127)|0); //@line 56 "./src/cpp/unrar/volume.cpp"
    $129 = $128 ^ 1; //@line 56 "./src/cpp/unrar/volume.cpp"
    if (!($129)) {
     break L17;
    }
    $130 = $6; //@line 62 "./src/cpp/unrar/volume.cpp"
    $131 = ($130|0)!=(0|0); //@line 62 "./src/cpp/unrar/volume.cpp"
    if ($131) {
     $132 = $6; //@line 63 "./src/cpp/unrar/volume.cpp"
     $133 = ((($132)) + 136|0); //@line 63 "./src/cpp/unrar/volume.cpp"
     $134 = $133; //@line 63 "./src/cpp/unrar/volume.cpp"
     $135 = $134; //@line 63 "./src/cpp/unrar/volume.cpp"
     HEAP32[$135>>2] = 0; //@line 63 "./src/cpp/unrar/volume.cpp"
     $136 = (($134) + 4)|0; //@line 63 "./src/cpp/unrar/volume.cpp"
     $137 = $136; //@line 63 "./src/cpp/unrar/volume.cpp"
     HEAP32[$137>>2] = 0; //@line 63 "./src/cpp/unrar/volume.cpp"
    }
    $138 = $17; //@line 65 "./src/cpp/unrar/volume.cpp"
    $139 = $138&1; //@line 65 "./src/cpp/unrar/volume.cpp"
    if (!($139)) {
     $140 = $5; //@line 70 "./src/cpp/unrar/volume.cpp"
     $141 = ((($140)) + 24|0); //@line 70 "./src/cpp/unrar/volume.cpp"
     (_wcscpy($19,$141)|0); //@line 70 "./src/cpp/unrar/volume.cpp"
     __Z14NextVolumeNamePwjb($19,2048,1); //@line 71 "./src/cpp/unrar/volume.cpp"
     $17 = 1; //@line 72 "./src/cpp/unrar/volume.cpp"
     $142 = $5; //@line 73 "./src/cpp/unrar/volume.cpp"
     $143 = HEAP32[$142>>2]|0; //@line 73 "./src/cpp/unrar/volume.cpp"
     $144 = ((($143)) + 8|0); //@line 73 "./src/cpp/unrar/volume.cpp"
     $145 = HEAP32[$144>>2]|0; //@line 73 "./src/cpp/unrar/volume.cpp"
     $146 = $18; //@line 73 "./src/cpp/unrar/volume.cpp"
     $147 = (FUNCTION_TABLE_iiii[$145 & 511]($142,$19,$146)|0); //@line 73 "./src/cpp/unrar/volume.cpp"
     if ($147) {
      label = 19;
      break;
     }
    }
    $148 = $9; //@line 80 "./src/cpp/unrar/volume.cpp"
    $149 = (__ZL12DllVolChangeP10RAROptionsPwj($148,$15,2048)|0); //@line 80 "./src/cpp/unrar/volume.cpp"
    if (!($149)) {
     label = 21;
     break;
    }
   }
   if ((label|0) == 19) {
    (_wcscpy($15,$19)|0); //@line 75 "./src/cpp/unrar/volume.cpp"
    break;
   }
   else if ((label|0) == 21) {
    $16 = 1; //@line 82 "./src/cpp/unrar/volume.cpp"
    break;
   }
  }
 } while(0);
 $150 = $16; //@line 114 "./src/cpp/unrar/volume.cpp"
 $151 = $150&1; //@line 114 "./src/cpp/unrar/volume.cpp"
 if ($151) {
  __Z5uiMsgIPwEv14UIMESSAGE_CODET_(68,$15); //@line 116 "./src/cpp/unrar/volume.cpp"
  $152 = $5; //@line 117 "./src/cpp/unrar/volume.cpp"
  $153 = HEAP32[$152>>2]|0; //@line 117 "./src/cpp/unrar/volume.cpp"
  $154 = ((($153)) + 8|0); //@line 117 "./src/cpp/unrar/volume.cpp"
  $155 = HEAP32[$154>>2]|0; //@line 117 "./src/cpp/unrar/volume.cpp"
  $156 = $5; //@line 117 "./src/cpp/unrar/volume.cpp"
  $157 = ((($156)) + 24|0); //@line 117 "./src/cpp/unrar/volume.cpp"
  $158 = $18; //@line 117 "./src/cpp/unrar/volume.cpp"
  (FUNCTION_TABLE_iiii[$155 & 511]($152,$157,$158)|0); //@line 117 "./src/cpp/unrar/volume.cpp"
  $159 = $5; //@line 118 "./src/cpp/unrar/volume.cpp"
  $160 = HEAP32[$159>>2]|0; //@line 118 "./src/cpp/unrar/volume.cpp"
  $161 = ((($160)) + 16|0); //@line 118 "./src/cpp/unrar/volume.cpp"
  $162 = HEAP32[$161>>2]|0; //@line 118 "./src/cpp/unrar/volume.cpp"
  $163 = $14; //@line 118 "./src/cpp/unrar/volume.cpp"
  $164 = $163; //@line 118 "./src/cpp/unrar/volume.cpp"
  $165 = HEAP32[$164>>2]|0; //@line 118 "./src/cpp/unrar/volume.cpp"
  $166 = (($163) + 4)|0; //@line 118 "./src/cpp/unrar/volume.cpp"
  $167 = $166; //@line 118 "./src/cpp/unrar/volume.cpp"
  $168 = HEAP32[$167>>2]|0; //@line 118 "./src/cpp/unrar/volume.cpp"
  FUNCTION_TABLE_viiii[$162 & 255]($159,$165,$168,0); //@line 118 "./src/cpp/unrar/volume.cpp"
  $$expand_i1_val = 0; //@line 119 "./src/cpp/unrar/volume.cpp"
  HEAP8[$4>>0] = $$expand_i1_val; //@line 119 "./src/cpp/unrar/volume.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 170 "./src/cpp/unrar/volume.cpp"
  $256 = $$pre_trunc&1; //@line 170 "./src/cpp/unrar/volume.cpp"
  STACKTOP = sp;return ($256|0); //@line 170 "./src/cpp/unrar/volume.cpp"
 }
 $169 = $8; //@line 122 "./src/cpp/unrar/volume.cpp"
 $170 = ($169|0)==(84); //@line 122 "./src/cpp/unrar/volume.cpp"
 $171 = $8; //@line 122 "./src/cpp/unrar/volume.cpp"
 $172 = ($171|0)==(88); //@line 122 "./src/cpp/unrar/volume.cpp"
 $or$cond3 = $170 | $172; //@line 122 "./src/cpp/unrar/volume.cpp"
 $173 = $8; //@line 122 "./src/cpp/unrar/volume.cpp"
 $174 = ($173|0)==(69); //@line 122 "./src/cpp/unrar/volume.cpp"
 $or$cond5 = $or$cond3 | $174; //@line 122 "./src/cpp/unrar/volume.cpp"
 if ($or$cond5) {
  $175 = $5; //@line 123 "./src/cpp/unrar/volume.cpp"
  $176 = ((($175)) + 24|0); //@line 123 "./src/cpp/unrar/volume.cpp"
  HEAP32[$vararg_buffer>>2] = $176; //@line 123 "./src/cpp/unrar/volume.cpp"
  __Z7mprintfPKwz(55124,$vararg_buffer); //@line 123 "./src/cpp/unrar/volume.cpp"
 }
 $177 = $5; //@line 126 "./src/cpp/unrar/volume.cpp"
 __ZN7Archive8CheckArcEb($177,1); //@line 126 "./src/cpp/unrar/volume.cpp"
 $178 = $9; //@line 128 "./src/cpp/unrar/volume.cpp"
 $179 = (__ZL12DllVolNotifyP10RAROptionsPw($178,$15)|0); //@line 128 "./src/cpp/unrar/volume.cpp"
 if (!($179)) {
  $$expand_i1_val12 = 0; //@line 129 "./src/cpp/unrar/volume.cpp"
  HEAP8[$4>>0] = $$expand_i1_val12; //@line 129 "./src/cpp/unrar/volume.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 170 "./src/cpp/unrar/volume.cpp"
  $256 = $$pre_trunc&1; //@line 170 "./src/cpp/unrar/volume.cpp"
  STACKTOP = sp;return ($256|0); //@line 170 "./src/cpp/unrar/volume.cpp"
 }
 $180 = $12; //@line 132 "./src/cpp/unrar/volume.cpp"
 $181 = $180&1; //@line 132 "./src/cpp/unrar/volume.cpp"
 $182 = $5;
 if ($181) {
  $183 = $10; //@line 133 "./src/cpp/unrar/volume.cpp"
  (__ZN7Archive11SearchBlockE11HEADER_TYPE($182,$183)|0); //@line 133 "./src/cpp/unrar/volume.cpp"
 } else {
  (__ZN7Archive10ReadHeaderEv($182)|0); //@line 135 "./src/cpp/unrar/volume.cpp"
 }
 $184 = $5; //@line 136 "./src/cpp/unrar/volume.cpp"
 $185 = (__ZN7Archive13GetHeaderTypeEv($184)|0); //@line 136 "./src/cpp/unrar/volume.cpp"
 $186 = ($185|0)==(2); //@line 136 "./src/cpp/unrar/volume.cpp"
 if ($186) {
  $187 = $5; //@line 138 "./src/cpp/unrar/volume.cpp"
  __ZN7Archive17ConvertAttributesEv($187); //@line 138 "./src/cpp/unrar/volume.cpp"
  $188 = $5; //@line 139 "./src/cpp/unrar/volume.cpp"
  $189 = HEAP32[$188>>2]|0; //@line 139 "./src/cpp/unrar/volume.cpp"
  $190 = ((($189)) + 16|0); //@line 139 "./src/cpp/unrar/volume.cpp"
  $191 = HEAP32[$190>>2]|0; //@line 139 "./src/cpp/unrar/volume.cpp"
  $192 = $5; //@line 139 "./src/cpp/unrar/volume.cpp"
  $193 = ((($192)) + 56848|0); //@line 139 "./src/cpp/unrar/volume.cpp"
  $194 = $193; //@line 139 "./src/cpp/unrar/volume.cpp"
  $195 = $194; //@line 139 "./src/cpp/unrar/volume.cpp"
  $196 = HEAP32[$195>>2]|0; //@line 139 "./src/cpp/unrar/volume.cpp"
  $197 = (($194) + 4)|0; //@line 139 "./src/cpp/unrar/volume.cpp"
  $198 = $197; //@line 139 "./src/cpp/unrar/volume.cpp"
  $199 = HEAP32[$198>>2]|0; //@line 139 "./src/cpp/unrar/volume.cpp"
  $200 = $5; //@line 139 "./src/cpp/unrar/volume.cpp"
  $201 = ((($200)) + 21424|0); //@line 139 "./src/cpp/unrar/volume.cpp"
  $202 = ((($201)) + 8264|0); //@line 139 "./src/cpp/unrar/volume.cpp"
  $203 = $202; //@line 139 "./src/cpp/unrar/volume.cpp"
  $204 = $203; //@line 139 "./src/cpp/unrar/volume.cpp"
  $205 = HEAP32[$204>>2]|0; //@line 139 "./src/cpp/unrar/volume.cpp"
  $206 = (($203) + 4)|0; //@line 139 "./src/cpp/unrar/volume.cpp"
  $207 = $206; //@line 139 "./src/cpp/unrar/volume.cpp"
  $208 = HEAP32[$207>>2]|0; //@line 139 "./src/cpp/unrar/volume.cpp"
  $209 = (_i64Subtract(($196|0),($199|0),($205|0),($208|0))|0); //@line 139 "./src/cpp/unrar/volume.cpp"
  $210 = tempRet0; //@line 139 "./src/cpp/unrar/volume.cpp"
  FUNCTION_TABLE_viiii[$191 & 255]($188,$209,$210,0); //@line 139 "./src/cpp/unrar/volume.cpp"
 }
 $211 = $7; //@line 142 "./src/cpp/unrar/volume.cpp"
 $212 = $211&1; //@line 142 "./src/cpp/unrar/volume.cpp"
 if ($212) {
  $213 = $5; //@line 144 "./src/cpp/unrar/volume.cpp"
  $214 = ((($213)) + 21424|0); //@line 144 "./src/cpp/unrar/volume.cpp"
  $215 = ((($214)) + 32|0); //@line 144 "./src/cpp/unrar/volume.cpp"
  HEAP32[$vararg_buffer6>>2] = $215; //@line 144 "./src/cpp/unrar/volume.cpp"
  __Z7mprintfPKwz(55124,$vararg_buffer6); //@line 144 "./src/cpp/unrar/volume.cpp"
  $216 = $9; //@line 145 "./src/cpp/unrar/volume.cpp"
  $217 = ((($216)) + 49740|0); //@line 145 "./src/cpp/unrar/volume.cpp"
  $218 = HEAP8[$217>>0]|0; //@line 145 "./src/cpp/unrar/volume.cpp"
  $219 = $218&1; //@line 145 "./src/cpp/unrar/volume.cpp"
  if (!($219)) {
   __Z7mprintfPKwz(1404,$vararg_buffer9); //@line 146 "./src/cpp/unrar/volume.cpp"
  }
 }
 $220 = $6; //@line 149 "./src/cpp/unrar/volume.cpp"
 $221 = ($220|0)!=(0|0); //@line 149 "./src/cpp/unrar/volume.cpp"
 if ($221) {
  $222 = $10; //@line 151 "./src/cpp/unrar/volume.cpp"
  $223 = ($222|0)==(5); //@line 151 "./src/cpp/unrar/volume.cpp"
  if ($223) {
   $224 = $6; //@line 152 "./src/cpp/unrar/volume.cpp"
   $225 = ((($224)) + 81|0); //@line 152 "./src/cpp/unrar/volume.cpp"
   HEAP8[$225>>0] = 0; //@line 152 "./src/cpp/unrar/volume.cpp"
  } else {
   $226 = $11; //@line 155 "./src/cpp/unrar/volume.cpp"
   $227 = ((($226)) + 8329|0); //@line 155 "./src/cpp/unrar/volume.cpp"
   $228 = HEAP8[$227>>0]|0; //@line 155 "./src/cpp/unrar/volume.cpp"
   $229 = $228&1; //@line 155 "./src/cpp/unrar/volume.cpp"
   $230 = $6; //@line 155 "./src/cpp/unrar/volume.cpp"
   $231 = ((($230)) + 81|0); //@line 155 "./src/cpp/unrar/volume.cpp"
   $232 = $229&1; //@line 155 "./src/cpp/unrar/volume.cpp"
   HEAP8[$231>>0] = $232; //@line 155 "./src/cpp/unrar/volume.cpp"
   $233 = $6; //@line 156 "./src/cpp/unrar/volume.cpp"
   $234 = $11; //@line 156 "./src/cpp/unrar/volume.cpp"
   $235 = ((($234)) + 8264|0); //@line 156 "./src/cpp/unrar/volume.cpp"
   $236 = $235; //@line 156 "./src/cpp/unrar/volume.cpp"
   $237 = $236; //@line 156 "./src/cpp/unrar/volume.cpp"
   $238 = HEAP32[$237>>2]|0; //@line 156 "./src/cpp/unrar/volume.cpp"
   $239 = (($236) + 4)|0; //@line 156 "./src/cpp/unrar/volume.cpp"
   $240 = $239; //@line 156 "./src/cpp/unrar/volume.cpp"
   $241 = HEAP32[$240>>2]|0; //@line 156 "./src/cpp/unrar/volume.cpp"
   __ZN11ComprDataIO19SetPackedSizeToReadEx($233,$238,$241); //@line 156 "./src/cpp/unrar/volume.cpp"
  }
  $242 = $6; //@line 165 "./src/cpp/unrar/volume.cpp"
  $243 = ((($242)) + 112|0); //@line 165 "./src/cpp/unrar/volume.cpp"
  $244 = $243; //@line 165 "./src/cpp/unrar/volume.cpp"
  $245 = $244; //@line 165 "./src/cpp/unrar/volume.cpp"
  HEAP32[$245>>2] = 0; //@line 165 "./src/cpp/unrar/volume.cpp"
  $246 = (($244) + 4)|0; //@line 165 "./src/cpp/unrar/volume.cpp"
  $247 = $246; //@line 165 "./src/cpp/unrar/volume.cpp"
  HEAP32[$247>>2] = 0; //@line 165 "./src/cpp/unrar/volume.cpp"
  $248 = $6; //@line 167 "./src/cpp/unrar/volume.cpp"
  $249 = ((($248)) + 144|0); //@line 167 "./src/cpp/unrar/volume.cpp"
  $250 = $11; //@line 167 "./src/cpp/unrar/volume.cpp"
  $251 = ((($250)) + 8288|0); //@line 167 "./src/cpp/unrar/volume.cpp"
  $252 = HEAP32[$251>>2]|0; //@line 167 "./src/cpp/unrar/volume.cpp"
  $253 = $9; //@line 167 "./src/cpp/unrar/volume.cpp"
  $254 = ((($253)) + 66976|0); //@line 167 "./src/cpp/unrar/volume.cpp"
  $255 = HEAP32[$254>>2]|0; //@line 167 "./src/cpp/unrar/volume.cpp"
  __ZN8DataHash4InitE9HASH_TYPEj($249,$252,$255); //@line 167 "./src/cpp/unrar/volume.cpp"
 }
 $$expand_i1_val14 = 1; //@line 169 "./src/cpp/unrar/volume.cpp"
 HEAP8[$4>>0] = $$expand_i1_val14; //@line 169 "./src/cpp/unrar/volume.cpp"
 $$pre_trunc = HEAP8[$4>>0]|0; //@line 170 "./src/cpp/unrar/volume.cpp"
 $256 = $$pre_trunc&1; //@line 170 "./src/cpp/unrar/volume.cpp"
 STACKTOP = sp;return ($256|0); //@line 170 "./src/cpp/unrar/volume.cpp"
}
function __ZL12DllVolChangeP10RAROptionsPwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 14368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(14368|0);
 $3 = sp + 14362|0;
 $9 = sp + 8|0;
 $10 = sp + 12312|0;
 $11 = sp + 10264|0;
 $12 = sp + 8216|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = 0; //@line 187 "./src/cpp/unrar/volume.cpp"
 $8 = 0; //@line 187 "./src/cpp/unrar/volume.cpp"
 $14 = $4; //@line 189 "./src/cpp/unrar/volume.cpp"
 $15 = ((($14)) + 75184|0); //@line 189 "./src/cpp/unrar/volume.cpp"
 $16 = HEAP32[$15>>2]|0; //@line 189 "./src/cpp/unrar/volume.cpp"
 $17 = ($16|0)!=(0|0); //@line 189 "./src/cpp/unrar/volume.cpp"
 do {
  if ($17) {
   $18 = $5; //@line 192 "./src/cpp/unrar/volume.cpp"
   (_wcscpy($9,$18)|0); //@line 192 "./src/cpp/unrar/volume.cpp"
   $19 = $4; //@line 193 "./src/cpp/unrar/volume.cpp"
   $20 = ((($19)) + 75184|0); //@line 193 "./src/cpp/unrar/volume.cpp"
   $21 = HEAP32[$20>>2]|0; //@line 193 "./src/cpp/unrar/volume.cpp"
   $22 = $4; //@line 193 "./src/cpp/unrar/volume.cpp"
   $23 = ((($22)) + 75180|0); //@line 193 "./src/cpp/unrar/volume.cpp"
   $24 = HEAP32[$23>>2]|0; //@line 193 "./src/cpp/unrar/volume.cpp"
   $25 = $5; //@line 193 "./src/cpp/unrar/volume.cpp"
   $26 = $25; //@line 193 "./src/cpp/unrar/volume.cpp"
   $27 = (FUNCTION_TABLE_iiiii[$21 & 511](3,$24,$26,0)|0); //@line 193 "./src/cpp/unrar/volume.cpp"
   $28 = ($27|0)==(-1); //@line 193 "./src/cpp/unrar/volume.cpp"
   if ($28) {
    $8 = 1; //@line 194 "./src/cpp/unrar/volume.cpp"
    break;
   }
   $29 = $5; //@line 196 "./src/cpp/unrar/volume.cpp"
   $30 = (_wcscmp($9,$29)|0); //@line 196 "./src/cpp/unrar/volume.cpp"
   $31 = ($30|0)!=(0); //@line 196 "./src/cpp/unrar/volume.cpp"
   if ($31) {
    $7 = 1; //@line 197 "./src/cpp/unrar/volume.cpp"
    break;
   }
   $32 = $5; //@line 201 "./src/cpp/unrar/volume.cpp"
   (__Z10WideToCharPKwPcj($32,$10,2048)|0); //@line 201 "./src/cpp/unrar/volume.cpp"
   (_strcpy($11,$10)|0); //@line 202 "./src/cpp/unrar/volume.cpp"
   $33 = $4; //@line 203 "./src/cpp/unrar/volume.cpp"
   $34 = ((($33)) + 75184|0); //@line 203 "./src/cpp/unrar/volume.cpp"
   $35 = HEAP32[$34>>2]|0; //@line 203 "./src/cpp/unrar/volume.cpp"
   $36 = $4; //@line 203 "./src/cpp/unrar/volume.cpp"
   $37 = ((($36)) + 75180|0); //@line 203 "./src/cpp/unrar/volume.cpp"
   $38 = HEAP32[$37>>2]|0; //@line 203 "./src/cpp/unrar/volume.cpp"
   $39 = $10; //@line 203 "./src/cpp/unrar/volume.cpp"
   $40 = (FUNCTION_TABLE_iiiii[$35 & 511](0,$38,$39,0)|0); //@line 203 "./src/cpp/unrar/volume.cpp"
   $41 = ($40|0)==(-1); //@line 203 "./src/cpp/unrar/volume.cpp"
   if ($41) {
    $8 = 1; //@line 204 "./src/cpp/unrar/volume.cpp"
    break;
   }
   $42 = (_strcmp($11,$10)|0); //@line 206 "./src/cpp/unrar/volume.cpp"
   $43 = ($42|0)!=(0); //@line 206 "./src/cpp/unrar/volume.cpp"
   if ($43) {
    $44 = $5; //@line 210 "./src/cpp/unrar/volume.cpp"
    $45 = $6; //@line 210 "./src/cpp/unrar/volume.cpp"
    (__Z10CharToWidePKcPwj($10,$44,$45)|0); //@line 210 "./src/cpp/unrar/volume.cpp"
    $7 = 1; //@line 211 "./src/cpp/unrar/volume.cpp"
   }
  }
 } while(0);
 $46 = $7; //@line 215 "./src/cpp/unrar/volume.cpp"
 $47 = $46&1; //@line 215 "./src/cpp/unrar/volume.cpp"
 do {
  if (!($47)) {
   $48 = $4; //@line 215 "./src/cpp/unrar/volume.cpp"
   $49 = ((($48)) + 75188|0); //@line 215 "./src/cpp/unrar/volume.cpp"
   $50 = HEAP32[$49>>2]|0; //@line 215 "./src/cpp/unrar/volume.cpp"
   $51 = ($50|0)!=(0|0); //@line 215 "./src/cpp/unrar/volume.cpp"
   if ($51) {
    $52 = $5; //@line 218 "./src/cpp/unrar/volume.cpp"
    (__Z10WideToCharPKwPcj($52,$12,2048)|0); //@line 218 "./src/cpp/unrar/volume.cpp"
    $53 = $4; //@line 230 "./src/cpp/unrar/volume.cpp"
    $54 = ((($53)) + 75188|0); //@line 230 "./src/cpp/unrar/volume.cpp"
    $55 = HEAP32[$54>>2]|0; //@line 230 "./src/cpp/unrar/volume.cpp"
    $56 = (FUNCTION_TABLE_iii[$55 & 511]($12,0)|0); //@line 230 "./src/cpp/unrar/volume.cpp"
    $13 = $56; //@line 230 "./src/cpp/unrar/volume.cpp"
    $57 = $13; //@line 241 "./src/cpp/unrar/volume.cpp"
    $58 = ($57|0)==(0); //@line 241 "./src/cpp/unrar/volume.cpp"
    if ($58) {
     $8 = 1; //@line 242 "./src/cpp/unrar/volume.cpp"
     break;
    } else {
     $59 = $5; //@line 244 "./src/cpp/unrar/volume.cpp"
     $60 = $6; //@line 244 "./src/cpp/unrar/volume.cpp"
     (__Z10CharToWidePKcPwj($12,$59,$60)|0); //@line 244 "./src/cpp/unrar/volume.cpp"
     break;
    }
   }
  }
 } while(0);
 $61 = $8; //@line 251 "./src/cpp/unrar/volume.cpp"
 $62 = $61&1; //@line 251 "./src/cpp/unrar/volume.cpp"
 do {
  if (!($62)) {
   $63 = $4; //@line 251 "./src/cpp/unrar/volume.cpp"
   $64 = ((($63)) + 75184|0); //@line 251 "./src/cpp/unrar/volume.cpp"
   $65 = HEAP32[$64>>2]|0; //@line 251 "./src/cpp/unrar/volume.cpp"
   $66 = ($65|0)==(0|0); //@line 251 "./src/cpp/unrar/volume.cpp"
   if ($66) {
    $67 = $4; //@line 251 "./src/cpp/unrar/volume.cpp"
    $68 = ((($67)) + 75188|0); //@line 251 "./src/cpp/unrar/volume.cpp"
    $69 = HEAP32[$68>>2]|0; //@line 251 "./src/cpp/unrar/volume.cpp"
    $70 = ($69|0)==(0|0); //@line 251 "./src/cpp/unrar/volume.cpp"
    if ($70) {
     break;
    }
   }
   $$expand_i1_val2 = 1; //@line 256 "./src/cpp/unrar/volume.cpp"
   HEAP8[$3>>0] = $$expand_i1_val2; //@line 256 "./src/cpp/unrar/volume.cpp"
   $$pre_trunc = HEAP8[$3>>0]|0; //@line 257 "./src/cpp/unrar/volume.cpp"
   $73 = $$pre_trunc&1; //@line 257 "./src/cpp/unrar/volume.cpp"
   STACKTOP = sp;return ($73|0); //@line 257 "./src/cpp/unrar/volume.cpp"
  }
 } while(0);
 $71 = $4; //@line 253 "./src/cpp/unrar/volume.cpp"
 $72 = ((($71)) + 75176|0); //@line 253 "./src/cpp/unrar/volume.cpp"
 HEAP32[$72>>2] = 15; //@line 253 "./src/cpp/unrar/volume.cpp"
 $$expand_i1_val = 0; //@line 254 "./src/cpp/unrar/volume.cpp"
 HEAP8[$3>>0] = $$expand_i1_val; //@line 254 "./src/cpp/unrar/volume.cpp"
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 257 "./src/cpp/unrar/volume.cpp"
 $73 = $$pre_trunc&1; //@line 257 "./src/cpp/unrar/volume.cpp"
 STACKTOP = sp;return ($73|0); //@line 257 "./src/cpp/unrar/volume.cpp"
}
function __ZL12DllVolNotifyP10RAROptionsPw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2080|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2080|0);
 $2 = sp + 2064|0;
 $5 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $7 = $4; //@line 265 "./src/cpp/unrar/volume.cpp"
 (__Z10WideToCharPKwPcj($7,$5,2048)|0); //@line 265 "./src/cpp/unrar/volume.cpp"
 $8 = $3; //@line 266 "./src/cpp/unrar/volume.cpp"
 $9 = ((($8)) + 75184|0); //@line 266 "./src/cpp/unrar/volume.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 266 "./src/cpp/unrar/volume.cpp"
 $11 = ($10|0)!=(0|0); //@line 266 "./src/cpp/unrar/volume.cpp"
 if ($11) {
  $12 = $3; //@line 268 "./src/cpp/unrar/volume.cpp"
  $13 = ((($12)) + 75184|0); //@line 268 "./src/cpp/unrar/volume.cpp"
  $14 = HEAP32[$13>>2]|0; //@line 268 "./src/cpp/unrar/volume.cpp"
  $15 = $3; //@line 268 "./src/cpp/unrar/volume.cpp"
  $16 = ((($15)) + 75180|0); //@line 268 "./src/cpp/unrar/volume.cpp"
  $17 = HEAP32[$16>>2]|0; //@line 268 "./src/cpp/unrar/volume.cpp"
  $18 = $4; //@line 268 "./src/cpp/unrar/volume.cpp"
  $19 = $18; //@line 268 "./src/cpp/unrar/volume.cpp"
  $20 = (FUNCTION_TABLE_iiiii[$14 & 511](3,$17,$19,1)|0); //@line 268 "./src/cpp/unrar/volume.cpp"
  $21 = ($20|0)==(-1); //@line 268 "./src/cpp/unrar/volume.cpp"
  if ($21) {
   $$expand_i1_val = 0; //@line 269 "./src/cpp/unrar/volume.cpp"
   HEAP8[$2>>0] = $$expand_i1_val; //@line 269 "./src/cpp/unrar/volume.cpp"
   $$pre_trunc = HEAP8[$2>>0]|0; //@line 286 "./src/cpp/unrar/volume.cpp"
   $41 = $$pre_trunc&1; //@line 286 "./src/cpp/unrar/volume.cpp"
   STACKTOP = sp;return ($41|0); //@line 286 "./src/cpp/unrar/volume.cpp"
  }
  $22 = $3; //@line 270 "./src/cpp/unrar/volume.cpp"
  $23 = ((($22)) + 75184|0); //@line 270 "./src/cpp/unrar/volume.cpp"
  $24 = HEAP32[$23>>2]|0; //@line 270 "./src/cpp/unrar/volume.cpp"
  $25 = $3; //@line 270 "./src/cpp/unrar/volume.cpp"
  $26 = ((($25)) + 75180|0); //@line 270 "./src/cpp/unrar/volume.cpp"
  $27 = HEAP32[$26>>2]|0; //@line 270 "./src/cpp/unrar/volume.cpp"
  $28 = $5; //@line 270 "./src/cpp/unrar/volume.cpp"
  $29 = (FUNCTION_TABLE_iiiii[$24 & 511](0,$27,$28,1)|0); //@line 270 "./src/cpp/unrar/volume.cpp"
  $30 = ($29|0)==(-1); //@line 270 "./src/cpp/unrar/volume.cpp"
  if ($30) {
   $$expand_i1_val2 = 0; //@line 271 "./src/cpp/unrar/volume.cpp"
   HEAP8[$2>>0] = $$expand_i1_val2; //@line 271 "./src/cpp/unrar/volume.cpp"
   $$pre_trunc = HEAP8[$2>>0]|0; //@line 286 "./src/cpp/unrar/volume.cpp"
   $41 = $$pre_trunc&1; //@line 286 "./src/cpp/unrar/volume.cpp"
   STACKTOP = sp;return ($41|0); //@line 286 "./src/cpp/unrar/volume.cpp"
  }
 }
 $31 = $3; //@line 273 "./src/cpp/unrar/volume.cpp"
 $32 = ((($31)) + 75188|0); //@line 273 "./src/cpp/unrar/volume.cpp"
 $33 = HEAP32[$32>>2]|0; //@line 273 "./src/cpp/unrar/volume.cpp"
 $34 = ($33|0)!=(0|0); //@line 273 "./src/cpp/unrar/volume.cpp"
 if ($34) {
  $35 = $3; //@line 278 "./src/cpp/unrar/volume.cpp"
  $36 = ((($35)) + 75188|0); //@line 278 "./src/cpp/unrar/volume.cpp"
  $37 = HEAP32[$36>>2]|0; //@line 278 "./src/cpp/unrar/volume.cpp"
  $38 = (FUNCTION_TABLE_iii[$37 & 511]($5,1)|0); //@line 278 "./src/cpp/unrar/volume.cpp"
  $6 = $38; //@line 278 "./src/cpp/unrar/volume.cpp"
  $39 = $6; //@line 282 "./src/cpp/unrar/volume.cpp"
  $40 = ($39|0)==(0); //@line 282 "./src/cpp/unrar/volume.cpp"
  if ($40) {
   $$expand_i1_val4 = 0; //@line 283 "./src/cpp/unrar/volume.cpp"
   HEAP8[$2>>0] = $$expand_i1_val4; //@line 283 "./src/cpp/unrar/volume.cpp"
   $$pre_trunc = HEAP8[$2>>0]|0; //@line 286 "./src/cpp/unrar/volume.cpp"
   $41 = $$pre_trunc&1; //@line 286 "./src/cpp/unrar/volume.cpp"
   STACKTOP = sp;return ($41|0); //@line 286 "./src/cpp/unrar/volume.cpp"
  }
 }
 $$expand_i1_val6 = 1; //@line 285 "./src/cpp/unrar/volume.cpp"
 HEAP8[$2>>0] = $$expand_i1_val6; //@line 285 "./src/cpp/unrar/volume.cpp"
 $$pre_trunc = HEAP8[$2>>0]|0; //@line 286 "./src/cpp/unrar/volume.cpp"
 $41 = $$pre_trunc&1; //@line 286 "./src/cpp/unrar/volume.cpp"
 STACKTOP = sp;return ($41|0); //@line 286 "./src/cpp/unrar/volume.cpp"
}
function __ZN10RangeCoder11InitDecoderEP6Unpack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3; //@line 11 "./src/cpp/unrar/coder.cpp"
 $7 = ((($5)) + 24|0); //@line 11 "./src/cpp/unrar/coder.cpp"
 HEAP32[$7>>2] = $6; //@line 11 "./src/cpp/unrar/coder.cpp"
 $8 = ((($5)) + 4|0); //@line 13 "./src/cpp/unrar/coder.cpp"
 HEAP32[$8>>2] = 0; //@line 13 "./src/cpp/unrar/coder.cpp"
 HEAP32[$5>>2] = 0; //@line 13 "./src/cpp/unrar/coder.cpp"
 $9 = ((($5)) + 8|0); //@line 14 "./src/cpp/unrar/coder.cpp"
 HEAP32[$9>>2] = -1; //@line 14 "./src/cpp/unrar/coder.cpp"
 $4 = 0; //@line 15 "./src/cpp/unrar/coder.cpp"
 while(1) {
  $10 = $4; //@line 15 "./src/cpp/unrar/coder.cpp"
  $11 = ($10|0)<(4); //@line 15 "./src/cpp/unrar/coder.cpp"
  if (!($11)) {
   break;
  }
  $12 = ((($5)) + 4|0); //@line 16 "./src/cpp/unrar/coder.cpp"
  $13 = HEAP32[$12>>2]|0; //@line 16 "./src/cpp/unrar/coder.cpp"
  $14 = $13 << 8; //@line 16 "./src/cpp/unrar/coder.cpp"
  $15 = (__ZN10RangeCoder7GetCharEv($5)|0); //@line 16 "./src/cpp/unrar/coder.cpp"
  $16 = $14 | $15; //@line 16 "./src/cpp/unrar/coder.cpp"
  $17 = ((($5)) + 4|0); //@line 16 "./src/cpp/unrar/coder.cpp"
  HEAP32[$17>>2] = $16; //@line 16 "./src/cpp/unrar/coder.cpp"
  $18 = $4; //@line 15 "./src/cpp/unrar/coder.cpp"
  $19 = (($18) + 1)|0; //@line 15 "./src/cpp/unrar/coder.cpp"
  $4 = $19; //@line 15 "./src/cpp/unrar/coder.cpp"
 }
 STACKTOP = sp;return; //@line 17 "./src/cpp/unrar/coder.cpp"
}
function __ZN10RangeCoder7GetCharEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0); //@line 5 "./src/cpp/unrar/coder.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 5 "./src/cpp/unrar/coder.cpp"
 $5 = (__ZN6Unpack7GetCharEv($4)|0); //@line 5 "./src/cpp/unrar/coder.cpp"
 STACKTOP = sp;return ($5|0); //@line 5 "./src/cpp/unrar/coder.cpp"
}
function __ZN6Unpack7GetCharEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 380 "./src/cpp/unrar/unpack.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 380 "./src/cpp/unrar/unpack.hpp"
 $5 = ($4|0)>(32738); //@line 380 "./src/cpp/unrar/unpack.hpp"
 if ($5) {
  (__ZN6Unpack10UnpReadBufEv($2)|0); //@line 381 "./src/cpp/unrar/unpack.hpp"
 }
 $6 = ((($2)) + 4|0); //@line 382 "./src/cpp/unrar/unpack.hpp"
 $7 = ((($6)) + 12|0); //@line 382 "./src/cpp/unrar/unpack.hpp"
 $8 = HEAP32[$7>>2]|0; //@line 382 "./src/cpp/unrar/unpack.hpp"
 $9 = ((($2)) + 4|0); //@line 382 "./src/cpp/unrar/unpack.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 382 "./src/cpp/unrar/unpack.hpp"
 $11 = (($10) + 1)|0; //@line 382 "./src/cpp/unrar/unpack.hpp"
 HEAP32[$9>>2] = $11; //@line 382 "./src/cpp/unrar/unpack.hpp"
 $12 = (($8) + ($10)|0); //@line 382 "./src/cpp/unrar/unpack.hpp"
 $13 = HEAP8[$12>>0]|0; //@line 382 "./src/cpp/unrar/unpack.hpp"
 $14 = $13&255; //@line 382 "./src/cpp/unrar/unpack.hpp"
 STACKTOP = sp;return ($14|0); //@line 382 "./src/cpp/unrar/unpack.hpp"
}
function __ZN6Unpack10UnpReadBufEv($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 12|0;
 $2 = $0;
 $5 = $2;
 $6 = ((($5)) + 104|0); //@line 212 "./src/cpp/unrar/unpack50.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 212 "./src/cpp/unrar/unpack50.cpp"
 $8 = ((($5)) + 4|0); //@line 212 "./src/cpp/unrar/unpack50.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 212 "./src/cpp/unrar/unpack50.cpp"
 $10 = (($7) - ($9))|0; //@line 212 "./src/cpp/unrar/unpack50.cpp"
 $3 = $10; //@line 212 "./src/cpp/unrar/unpack50.cpp"
 $11 = $3; //@line 213 "./src/cpp/unrar/unpack50.cpp"
 $12 = ($11|0)<(0); //@line 213 "./src/cpp/unrar/unpack50.cpp"
 if ($12) {
  $$expand_i1_val = 0; //@line 214 "./src/cpp/unrar/unpack50.cpp"
  HEAP8[$1>>0] = $$expand_i1_val; //@line 214 "./src/cpp/unrar/unpack50.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 245 "./src/cpp/unrar/unpack50.cpp"
  $93 = $$pre_trunc&1; //@line 245 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return ($93|0); //@line 245 "./src/cpp/unrar/unpack50.cpp"
 }
 $13 = ((($5)) + 4|0); //@line 215 "./src/cpp/unrar/unpack50.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 215 "./src/cpp/unrar/unpack50.cpp"
 $15 = ((($5)) + 112|0); //@line 215 "./src/cpp/unrar/unpack50.cpp"
 $16 = ((($15)) + 8|0); //@line 215 "./src/cpp/unrar/unpack50.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 215 "./src/cpp/unrar/unpack50.cpp"
 $18 = (($14) - ($17))|0; //@line 215 "./src/cpp/unrar/unpack50.cpp"
 $19 = ((($5)) + 112|0); //@line 215 "./src/cpp/unrar/unpack50.cpp"
 $20 = HEAP32[$19>>2]|0; //@line 215 "./src/cpp/unrar/unpack50.cpp"
 $21 = (($20) - ($18))|0; //@line 215 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$19>>2] = $21; //@line 215 "./src/cpp/unrar/unpack50.cpp"
 $22 = ((($5)) + 4|0); //@line 216 "./src/cpp/unrar/unpack50.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 216 "./src/cpp/unrar/unpack50.cpp"
 $24 = ($23|0)>(16384); //@line 216 "./src/cpp/unrar/unpack50.cpp"
 if ($24) {
  $25 = $3; //@line 224 "./src/cpp/unrar/unpack50.cpp"
  $26 = ($25|0)>(0); //@line 224 "./src/cpp/unrar/unpack50.cpp"
  if ($26) {
   $27 = ((($5)) + 4|0); //@line 225 "./src/cpp/unrar/unpack50.cpp"
   $28 = ((($27)) + 12|0); //@line 225 "./src/cpp/unrar/unpack50.cpp"
   $29 = HEAP32[$28>>2]|0; //@line 225 "./src/cpp/unrar/unpack50.cpp"
   $30 = ((($5)) + 4|0); //@line 225 "./src/cpp/unrar/unpack50.cpp"
   $31 = ((($30)) + 12|0); //@line 225 "./src/cpp/unrar/unpack50.cpp"
   $32 = HEAP32[$31>>2]|0; //@line 225 "./src/cpp/unrar/unpack50.cpp"
   $33 = ((($5)) + 4|0); //@line 225 "./src/cpp/unrar/unpack50.cpp"
   $34 = HEAP32[$33>>2]|0; //@line 225 "./src/cpp/unrar/unpack50.cpp"
   $35 = (($32) + ($34)|0); //@line 225 "./src/cpp/unrar/unpack50.cpp"
   $36 = $3; //@line 225 "./src/cpp/unrar/unpack50.cpp"
   _memmove(($29|0),($35|0),($36|0))|0; //@line 225 "./src/cpp/unrar/unpack50.cpp"
  }
  $37 = ((($5)) + 4|0); //@line 226 "./src/cpp/unrar/unpack50.cpp"
  HEAP32[$37>>2] = 0; //@line 226 "./src/cpp/unrar/unpack50.cpp"
  $38 = $3; //@line 227 "./src/cpp/unrar/unpack50.cpp"
  $39 = ((($5)) + 104|0); //@line 227 "./src/cpp/unrar/unpack50.cpp"
  HEAP32[$39>>2] = $38; //@line 227 "./src/cpp/unrar/unpack50.cpp"
 } else {
  $40 = ((($5)) + 104|0); //@line 230 "./src/cpp/unrar/unpack50.cpp"
  $41 = HEAP32[$40>>2]|0; //@line 230 "./src/cpp/unrar/unpack50.cpp"
  $3 = $41; //@line 230 "./src/cpp/unrar/unpack50.cpp"
 }
 $4 = 0; //@line 231 "./src/cpp/unrar/unpack50.cpp"
 $42 = $3; //@line 232 "./src/cpp/unrar/unpack50.cpp"
 $43 = (32768)!=($42|0); //@line 232 "./src/cpp/unrar/unpack50.cpp"
 if ($43) {
  $44 = HEAP32[$5>>2]|0; //@line 233 "./src/cpp/unrar/unpack50.cpp"
  $45 = ((($5)) + 4|0); //@line 233 "./src/cpp/unrar/unpack50.cpp"
  $46 = ((($45)) + 12|0); //@line 233 "./src/cpp/unrar/unpack50.cpp"
  $47 = HEAP32[$46>>2]|0; //@line 233 "./src/cpp/unrar/unpack50.cpp"
  $48 = $3; //@line 233 "./src/cpp/unrar/unpack50.cpp"
  $49 = (($47) + ($48)|0); //@line 233 "./src/cpp/unrar/unpack50.cpp"
  $50 = $3; //@line 233 "./src/cpp/unrar/unpack50.cpp"
  $51 = (32768 - ($50))|0; //@line 233 "./src/cpp/unrar/unpack50.cpp"
  $52 = (__ZN11ComprDataIO7UnpReadEPhj($44,$49,$51)|0); //@line 233 "./src/cpp/unrar/unpack50.cpp"
  $4 = $52; //@line 233 "./src/cpp/unrar/unpack50.cpp"
 }
 $53 = $4; //@line 234 "./src/cpp/unrar/unpack50.cpp"
 $54 = ($53|0)>(0); //@line 234 "./src/cpp/unrar/unpack50.cpp"
 if ($54) {
  $55 = $4; //@line 235 "./src/cpp/unrar/unpack50.cpp"
  $56 = ((($5)) + 104|0); //@line 235 "./src/cpp/unrar/unpack50.cpp"
  $57 = HEAP32[$56>>2]|0; //@line 235 "./src/cpp/unrar/unpack50.cpp"
  $58 = (($57) + ($55))|0; //@line 235 "./src/cpp/unrar/unpack50.cpp"
  HEAP32[$56>>2] = $58; //@line 235 "./src/cpp/unrar/unpack50.cpp"
 }
 $59 = ((($5)) + 104|0); //@line 236 "./src/cpp/unrar/unpack50.cpp"
 $60 = HEAP32[$59>>2]|0; //@line 236 "./src/cpp/unrar/unpack50.cpp"
 $61 = (($60) - 30)|0; //@line 236 "./src/cpp/unrar/unpack50.cpp"
 $62 = ((($5)) + 108|0); //@line 236 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$62>>2] = $61; //@line 236 "./src/cpp/unrar/unpack50.cpp"
 $63 = ((($5)) + 4|0); //@line 237 "./src/cpp/unrar/unpack50.cpp"
 $64 = HEAP32[$63>>2]|0; //@line 237 "./src/cpp/unrar/unpack50.cpp"
 $65 = ((($5)) + 112|0); //@line 237 "./src/cpp/unrar/unpack50.cpp"
 $66 = ((($65)) + 8|0); //@line 237 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$66>>2] = $64; //@line 237 "./src/cpp/unrar/unpack50.cpp"
 $67 = ((($5)) + 112|0); //@line 238 "./src/cpp/unrar/unpack50.cpp"
 $68 = HEAP32[$67>>2]|0; //@line 238 "./src/cpp/unrar/unpack50.cpp"
 $69 = ($68|0)!=(-1); //@line 238 "./src/cpp/unrar/unpack50.cpp"
 if ($69) {
  $70 = ((($5)) + 108|0); //@line 242 "./src/cpp/unrar/unpack50.cpp"
  $71 = HEAP32[$70>>2]|0; //@line 242 "./src/cpp/unrar/unpack50.cpp"
  $72 = ((($5)) + 112|0); //@line 242 "./src/cpp/unrar/unpack50.cpp"
  $73 = ((($72)) + 8|0); //@line 242 "./src/cpp/unrar/unpack50.cpp"
  $74 = HEAP32[$73>>2]|0; //@line 242 "./src/cpp/unrar/unpack50.cpp"
  $75 = ((($5)) + 112|0); //@line 242 "./src/cpp/unrar/unpack50.cpp"
  $76 = HEAP32[$75>>2]|0; //@line 242 "./src/cpp/unrar/unpack50.cpp"
  $77 = (($74) + ($76))|0; //@line 242 "./src/cpp/unrar/unpack50.cpp"
  $78 = (($77) - 1)|0; //@line 242 "./src/cpp/unrar/unpack50.cpp"
  $79 = ($71|0)<($78|0); //@line 242 "./src/cpp/unrar/unpack50.cpp"
  if ($79) {
   $80 = ((($5)) + 108|0); //@line 242 "./src/cpp/unrar/unpack50.cpp"
   $81 = HEAP32[$80>>2]|0; //@line 242 "./src/cpp/unrar/unpack50.cpp"
   $90 = $81;
  } else {
   $82 = ((($5)) + 112|0); //@line 242 "./src/cpp/unrar/unpack50.cpp"
   $83 = ((($82)) + 8|0); //@line 242 "./src/cpp/unrar/unpack50.cpp"
   $84 = HEAP32[$83>>2]|0; //@line 242 "./src/cpp/unrar/unpack50.cpp"
   $85 = ((($5)) + 112|0); //@line 242 "./src/cpp/unrar/unpack50.cpp"
   $86 = HEAP32[$85>>2]|0; //@line 242 "./src/cpp/unrar/unpack50.cpp"
   $87 = (($84) + ($86))|0; //@line 242 "./src/cpp/unrar/unpack50.cpp"
   $88 = (($87) - 1)|0; //@line 242 "./src/cpp/unrar/unpack50.cpp"
   $90 = $88;
  }
  $89 = ((($5)) + 108|0); //@line 242 "./src/cpp/unrar/unpack50.cpp"
  HEAP32[$89>>2] = $90; //@line 242 "./src/cpp/unrar/unpack50.cpp"
 }
 $91 = $4; //@line 244 "./src/cpp/unrar/unpack50.cpp"
 $92 = ($91|0)!=(-1); //@line 244 "./src/cpp/unrar/unpack50.cpp"
 $$expand_i1_val2 = $92&1; //@line 244 "./src/cpp/unrar/unpack50.cpp"
 HEAP8[$1>>0] = $$expand_i1_val2; //@line 244 "./src/cpp/unrar/unpack50.cpp"
 $$pre_trunc = HEAP8[$1>>0]|0; //@line 245 "./src/cpp/unrar/unpack50.cpp"
 $93 = $$pre_trunc&1; //@line 245 "./src/cpp/unrar/unpack50.cpp"
 STACKTOP = sp;return ($93|0); //@line 245 "./src/cpp/unrar/unpack50.cpp"
}
function __ZN12SubAllocatorC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN12SubAllocator5CleanEv($2); //@line 13 "./src/cpp/unrar/suballoc.cpp"
 STACKTOP = sp;return; //@line 14 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN12SubAllocator5CleanEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0; //@line 19 "./src/cpp/unrar/suballoc.cpp"
 STACKTOP = sp;return; //@line 20 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN12SubAllocator16StopSubAllocatorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 71 "./src/cpp/unrar/suballoc.cpp"
 $4 = ($3|0)!=(0); //@line 71 "./src/cpp/unrar/suballoc.cpp"
 if (!($4)) {
  STACKTOP = sp;return; //@line 76 "./src/cpp/unrar/suballoc.cpp"
 }
 HEAP32[$2>>2] = 0; //@line 73 "./src/cpp/unrar/suballoc.cpp"
 $5 = ((($2)) + 172|0); //@line 74 "./src/cpp/unrar/suballoc.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 74 "./src/cpp/unrar/suballoc.cpp"
 _free($6); //@line 74 "./src/cpp/unrar/suballoc.cpp"
 STACKTOP = sp;return; //@line 76 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN12SubAllocator17StartSubAllocatorEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $7 = $3;
 $8 = $4; //@line 81 "./src/cpp/unrar/suballoc.cpp"
 $9 = $8 << 20; //@line 81 "./src/cpp/unrar/suballoc.cpp"
 $5 = $9; //@line 81 "./src/cpp/unrar/suballoc.cpp"
 $10 = HEAP32[$7>>2]|0; //@line 82 "./src/cpp/unrar/suballoc.cpp"
 $11 = $5; //@line 82 "./src/cpp/unrar/suballoc.cpp"
 $12 = ($10|0)==($11|0); //@line 82 "./src/cpp/unrar/suballoc.cpp"
 if ($12) {
  $$expand_i1_val = 1; //@line 83 "./src/cpp/unrar/suballoc.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 83 "./src/cpp/unrar/suballoc.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 103 "./src/cpp/unrar/suballoc.cpp"
  $28 = $$pre_trunc&1; //@line 103 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($28|0); //@line 103 "./src/cpp/unrar/suballoc.cpp"
 }
 __ZN12SubAllocator16StopSubAllocatorEv($7); //@line 84 "./src/cpp/unrar/suballoc.cpp"
 $13 = $5; //@line 90 "./src/cpp/unrar/suballoc.cpp"
 $14 = (($13>>>0) / 12)&-1; //@line 90 "./src/cpp/unrar/suballoc.cpp"
 $15 = $14<<4; //@line 90 "./src/cpp/unrar/suballoc.cpp"
 $16 = (($15) + 32)|0; //@line 90 "./src/cpp/unrar/suballoc.cpp"
 $6 = $16; //@line 90 "./src/cpp/unrar/suballoc.cpp"
 $17 = $6; //@line 91 "./src/cpp/unrar/suballoc.cpp"
 $18 = (_malloc($17)|0); //@line 91 "./src/cpp/unrar/suballoc.cpp"
 $19 = ((($7)) + 172|0); //@line 91 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$19>>2] = $18; //@line 91 "./src/cpp/unrar/suballoc.cpp"
 $20 = ($18|0)==(0|0); //@line 91 "./src/cpp/unrar/suballoc.cpp"
 if ($20) {
  __ZN12ErrorHandler11MemoryErrorEv(756); //@line 93 "./src/cpp/unrar/suballoc.cpp"
  $$expand_i1_val2 = 0; //@line 94 "./src/cpp/unrar/suballoc.cpp"
  HEAP8[$2>>0] = $$expand_i1_val2; //@line 94 "./src/cpp/unrar/suballoc.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 103 "./src/cpp/unrar/suballoc.cpp"
  $28 = $$pre_trunc&1; //@line 103 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($28|0); //@line 103 "./src/cpp/unrar/suballoc.cpp"
 } else {
  $21 = ((($7)) + 172|0); //@line 99 "./src/cpp/unrar/suballoc.cpp"
  $22 = HEAP32[$21>>2]|0; //@line 99 "./src/cpp/unrar/suballoc.cpp"
  $23 = $6; //@line 99 "./src/cpp/unrar/suballoc.cpp"
  $24 = (($22) + ($23)|0); //@line 99 "./src/cpp/unrar/suballoc.cpp"
  $25 = ((($24)) + -16|0); //@line 99 "./src/cpp/unrar/suballoc.cpp"
  $26 = ((($7)) + 344|0); //@line 99 "./src/cpp/unrar/suballoc.cpp"
  HEAP32[$26>>2] = $25; //@line 99 "./src/cpp/unrar/suballoc.cpp"
  $27 = $5; //@line 101 "./src/cpp/unrar/suballoc.cpp"
  HEAP32[$7>>2] = $27; //@line 101 "./src/cpp/unrar/suballoc.cpp"
  $$expand_i1_val4 = 1; //@line 102 "./src/cpp/unrar/suballoc.cpp"
  HEAP8[$2>>0] = $$expand_i1_val4; //@line 102 "./src/cpp/unrar/suballoc.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 103 "./src/cpp/unrar/suballoc.cpp"
  $28 = $$pre_trunc&1; //@line 103 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($28|0); //@line 103 "./src/cpp/unrar/suballoc.cpp"
 }
 return (0)|0;
}
function __ZN12SubAllocator16InitSubAllocatorEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $8 = $1;
 $9 = ((($8)) + 184|0); //@line 109 "./src/cpp/unrar/suballoc.cpp"
 _memset(($9|0),0,152)|0; //@line 109 "./src/cpp/unrar/suballoc.cpp"
 $10 = ((($8)) + 172|0); //@line 110 "./src/cpp/unrar/suballoc.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 110 "./src/cpp/unrar/suballoc.cpp"
 $12 = ((($8)) + 336|0); //@line 110 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$12>>2] = $11; //@line 110 "./src/cpp/unrar/suballoc.cpp"
 $13 = HEAP32[$8>>2]|0; //@line 120 "./src/cpp/unrar/suballoc.cpp"
 $14 = (($13|0) / 8)&-1; //@line 120 "./src/cpp/unrar/suballoc.cpp"
 $15 = (($14>>>0) / 12)&-1; //@line 120 "./src/cpp/unrar/suballoc.cpp"
 $16 = ($15*7)|0; //@line 120 "./src/cpp/unrar/suballoc.cpp"
 $17 = ($16*12)|0; //@line 120 "./src/cpp/unrar/suballoc.cpp"
 $4 = $17; //@line 120 "./src/cpp/unrar/suballoc.cpp"
 $18 = $4; //@line 124 "./src/cpp/unrar/suballoc.cpp"
 $19 = (($18>>>0) / 12)&-1; //@line 124 "./src/cpp/unrar/suballoc.cpp"
 $20 = $19<<4; //@line 124 "./src/cpp/unrar/suballoc.cpp"
 $5 = $20; //@line 124 "./src/cpp/unrar/suballoc.cpp"
 $21 = HEAP32[$8>>2]|0; //@line 129 "./src/cpp/unrar/suballoc.cpp"
 $22 = $4; //@line 129 "./src/cpp/unrar/suballoc.cpp"
 $23 = (($21) - ($22))|0; //@line 129 "./src/cpp/unrar/suballoc.cpp"
 $6 = $23; //@line 129 "./src/cpp/unrar/suballoc.cpp"
 $24 = $6; //@line 137 "./src/cpp/unrar/suballoc.cpp"
 $25 = (($24>>>0) / 12)&-1; //@line 137 "./src/cpp/unrar/suballoc.cpp"
 $26 = $25<<4; //@line 137 "./src/cpp/unrar/suballoc.cpp"
 $27 = (($26) + 16)|0; //@line 137 "./src/cpp/unrar/suballoc.cpp"
 $7 = $27; //@line 137 "./src/cpp/unrar/suballoc.cpp"
 $28 = ((($8)) + 172|0); //@line 144 "./src/cpp/unrar/suballoc.cpp"
 $29 = HEAP32[$28>>2]|0; //@line 144 "./src/cpp/unrar/suballoc.cpp"
 $30 = $7; //@line 144 "./src/cpp/unrar/suballoc.cpp"
 $31 = (($29) + ($30)|0); //@line 144 "./src/cpp/unrar/suballoc.cpp"
 $32 = ((($8)) + 340|0); //@line 144 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$32>>2] = $31; //@line 144 "./src/cpp/unrar/suballoc.cpp"
 $33 = ((($8)) + 176|0); //@line 144 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$33>>2] = $31; //@line 144 "./src/cpp/unrar/suballoc.cpp"
 $34 = ((($8)) + 172|0); //@line 149 "./src/cpp/unrar/suballoc.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 149 "./src/cpp/unrar/suballoc.cpp"
 $36 = $6; //@line 149 "./src/cpp/unrar/suballoc.cpp"
 $37 = (($35) + ($36)|0); //@line 149 "./src/cpp/unrar/suballoc.cpp"
 $38 = ((($8)) + 348|0); //@line 149 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$38>>2] = $37; //@line 149 "./src/cpp/unrar/suballoc.cpp"
 $39 = ((($8)) + 176|0); //@line 151 "./src/cpp/unrar/suballoc.cpp"
 $40 = HEAP32[$39>>2]|0; //@line 151 "./src/cpp/unrar/suballoc.cpp"
 $41 = $5; //@line 151 "./src/cpp/unrar/suballoc.cpp"
 $42 = (($40) + ($41)|0); //@line 151 "./src/cpp/unrar/suballoc.cpp"
 $43 = ((($8)) + 180|0); //@line 151 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$43>>2] = $42; //@line 151 "./src/cpp/unrar/suballoc.cpp"
 $2 = 0; //@line 152 "./src/cpp/unrar/suballoc.cpp"
 $3 = 1; //@line 152 "./src/cpp/unrar/suballoc.cpp"
 while(1) {
  $44 = $2; //@line 152 "./src/cpp/unrar/suballoc.cpp"
  $45 = ($44|0)<(4); //@line 152 "./src/cpp/unrar/suballoc.cpp"
  $46 = $3;
  if (!($45)) {
   break;
  }
  $47 = $46&255; //@line 153 "./src/cpp/unrar/suballoc.cpp"
  $48 = ((($8)) + 4|0); //@line 153 "./src/cpp/unrar/suballoc.cpp"
  $49 = $2; //@line 153 "./src/cpp/unrar/suballoc.cpp"
  $50 = (($48) + ($49)|0); //@line 153 "./src/cpp/unrar/suballoc.cpp"
  HEAP8[$50>>0] = $47; //@line 153 "./src/cpp/unrar/suballoc.cpp"
  $51 = $2; //@line 152 "./src/cpp/unrar/suballoc.cpp"
  $52 = (($51) + 1)|0; //@line 152 "./src/cpp/unrar/suballoc.cpp"
  $2 = $52; //@line 152 "./src/cpp/unrar/suballoc.cpp"
  $53 = $3; //@line 152 "./src/cpp/unrar/suballoc.cpp"
  $54 = (($53) + 1)|0; //@line 152 "./src/cpp/unrar/suballoc.cpp"
  $3 = $54; //@line 152 "./src/cpp/unrar/suballoc.cpp"
 }
 $55 = (($46) + 1)|0; //@line 154 "./src/cpp/unrar/suballoc.cpp"
 $3 = $55; //@line 154 "./src/cpp/unrar/suballoc.cpp"
 while(1) {
  $56 = $2; //@line 154 "./src/cpp/unrar/suballoc.cpp"
  $57 = ($56|0)<(8); //@line 154 "./src/cpp/unrar/suballoc.cpp"
  $58 = $3;
  if (!($57)) {
   break;
  }
  $59 = $58&255; //@line 155 "./src/cpp/unrar/suballoc.cpp"
  $60 = ((($8)) + 4|0); //@line 155 "./src/cpp/unrar/suballoc.cpp"
  $61 = $2; //@line 155 "./src/cpp/unrar/suballoc.cpp"
  $62 = (($60) + ($61)|0); //@line 155 "./src/cpp/unrar/suballoc.cpp"
  HEAP8[$62>>0] = $59; //@line 155 "./src/cpp/unrar/suballoc.cpp"
  $63 = $2; //@line 154 "./src/cpp/unrar/suballoc.cpp"
  $64 = (($63) + 1)|0; //@line 154 "./src/cpp/unrar/suballoc.cpp"
  $2 = $64; //@line 154 "./src/cpp/unrar/suballoc.cpp"
  $65 = $3; //@line 154 "./src/cpp/unrar/suballoc.cpp"
  $66 = (($65) + 2)|0; //@line 154 "./src/cpp/unrar/suballoc.cpp"
  $3 = $66; //@line 154 "./src/cpp/unrar/suballoc.cpp"
 }
 $67 = (($58) + 1)|0; //@line 156 "./src/cpp/unrar/suballoc.cpp"
 $3 = $67; //@line 156 "./src/cpp/unrar/suballoc.cpp"
 while(1) {
  $68 = $2; //@line 156 "./src/cpp/unrar/suballoc.cpp"
  $69 = ($68|0)<(12); //@line 156 "./src/cpp/unrar/suballoc.cpp"
  $70 = $3;
  if (!($69)) {
   break;
  }
  $71 = $70&255; //@line 157 "./src/cpp/unrar/suballoc.cpp"
  $72 = ((($8)) + 4|0); //@line 157 "./src/cpp/unrar/suballoc.cpp"
  $73 = $2; //@line 157 "./src/cpp/unrar/suballoc.cpp"
  $74 = (($72) + ($73)|0); //@line 157 "./src/cpp/unrar/suballoc.cpp"
  HEAP8[$74>>0] = $71; //@line 157 "./src/cpp/unrar/suballoc.cpp"
  $75 = $2; //@line 156 "./src/cpp/unrar/suballoc.cpp"
  $76 = (($75) + 1)|0; //@line 156 "./src/cpp/unrar/suballoc.cpp"
  $2 = $76; //@line 156 "./src/cpp/unrar/suballoc.cpp"
  $77 = $3; //@line 156 "./src/cpp/unrar/suballoc.cpp"
  $78 = (($77) + 3)|0; //@line 156 "./src/cpp/unrar/suballoc.cpp"
  $3 = $78; //@line 156 "./src/cpp/unrar/suballoc.cpp"
 }
 $79 = (($70) + 1)|0; //@line 158 "./src/cpp/unrar/suballoc.cpp"
 $3 = $79; //@line 158 "./src/cpp/unrar/suballoc.cpp"
 while(1) {
  $80 = $2; //@line 158 "./src/cpp/unrar/suballoc.cpp"
  $81 = ($80|0)<(38); //@line 158 "./src/cpp/unrar/suballoc.cpp"
  if (!($81)) {
   break;
  }
  $82 = $3; //@line 159 "./src/cpp/unrar/suballoc.cpp"
  $83 = $82&255; //@line 159 "./src/cpp/unrar/suballoc.cpp"
  $84 = ((($8)) + 4|0); //@line 159 "./src/cpp/unrar/suballoc.cpp"
  $85 = $2; //@line 159 "./src/cpp/unrar/suballoc.cpp"
  $86 = (($84) + ($85)|0); //@line 159 "./src/cpp/unrar/suballoc.cpp"
  HEAP8[$86>>0] = $83; //@line 159 "./src/cpp/unrar/suballoc.cpp"
  $87 = $2; //@line 158 "./src/cpp/unrar/suballoc.cpp"
  $88 = (($87) + 1)|0; //@line 158 "./src/cpp/unrar/suballoc.cpp"
  $2 = $88; //@line 158 "./src/cpp/unrar/suballoc.cpp"
  $89 = $3; //@line 158 "./src/cpp/unrar/suballoc.cpp"
  $90 = (($89) + 4)|0; //@line 158 "./src/cpp/unrar/suballoc.cpp"
  $3 = $90; //@line 158 "./src/cpp/unrar/suballoc.cpp"
 }
 $2 = 0; //@line 160 "./src/cpp/unrar/suballoc.cpp"
 $3 = 0; //@line 160 "./src/cpp/unrar/suballoc.cpp"
 $91 = ((($8)) + 170|0); //@line 160 "./src/cpp/unrar/suballoc.cpp"
 HEAP8[$91>>0] = 0; //@line 160 "./src/cpp/unrar/suballoc.cpp"
 while(1) {
  $92 = $3; //@line 160 "./src/cpp/unrar/suballoc.cpp"
  $93 = ($92|0)<(128); //@line 160 "./src/cpp/unrar/suballoc.cpp"
  if (!($93)) {
   break;
  }
  $94 = ((($8)) + 4|0); //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $95 = $2; //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $96 = (($94) + ($95)|0); //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $97 = HEAP8[$96>>0]|0; //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $98 = $97&255; //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $99 = $3; //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $100 = (($99) + 1)|0; //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $101 = ($98|0)<($100|0); //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $102 = $101&1; //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $103 = $2; //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $104 = (($103) + ($102))|0; //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $2 = $104; //@line 162 "./src/cpp/unrar/suballoc.cpp"
  $105 = $2; //@line 163 "./src/cpp/unrar/suballoc.cpp"
  $106 = $105&255; //@line 163 "./src/cpp/unrar/suballoc.cpp"
  $107 = ((($8)) + 42|0); //@line 163 "./src/cpp/unrar/suballoc.cpp"
  $108 = $3; //@line 163 "./src/cpp/unrar/suballoc.cpp"
  $109 = (($107) + ($108)|0); //@line 163 "./src/cpp/unrar/suballoc.cpp"
  HEAP8[$109>>0] = $106; //@line 163 "./src/cpp/unrar/suballoc.cpp"
  $110 = $3; //@line 160 "./src/cpp/unrar/suballoc.cpp"
  $111 = (($110) + 1)|0; //@line 160 "./src/cpp/unrar/suballoc.cpp"
  $3 = $111; //@line 160 "./src/cpp/unrar/suballoc.cpp"
 }
 STACKTOP = sp;return; //@line 165 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN12SubAllocator14AllocUnitsRareEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $8 = $3;
 $9 = ((($8)) + 170|0); //@line 203 "./src/cpp/unrar/suballoc.cpp"
 $10 = HEAP8[$9>>0]|0; //@line 203 "./src/cpp/unrar/suballoc.cpp"
 $11 = ($10<<24>>24)!=(0); //@line 203 "./src/cpp/unrar/suballoc.cpp"
 if (!($11)) {
  $12 = ((($8)) + 170|0); //@line 205 "./src/cpp/unrar/suballoc.cpp"
  HEAP8[$12>>0] = -1; //@line 205 "./src/cpp/unrar/suballoc.cpp"
  __ZN12SubAllocator14GlueFreeBlocksEv($8); //@line 206 "./src/cpp/unrar/suballoc.cpp"
  $13 = ((($8)) + 184|0); //@line 207 "./src/cpp/unrar/suballoc.cpp"
  $14 = $4; //@line 207 "./src/cpp/unrar/suballoc.cpp"
  $15 = (($13) + ($14<<2)|0); //@line 207 "./src/cpp/unrar/suballoc.cpp"
  $16 = HEAP32[$15>>2]|0; //@line 207 "./src/cpp/unrar/suballoc.cpp"
  $17 = ($16|0)!=(0|0); //@line 207 "./src/cpp/unrar/suballoc.cpp"
  if ($17) {
   $18 = $4; //@line 208 "./src/cpp/unrar/suballoc.cpp"
   $19 = (__ZN12SubAllocator10RemoveNodeEi($8,$18)|0); //@line 208 "./src/cpp/unrar/suballoc.cpp"
   $2 = $19; //@line 208 "./src/cpp/unrar/suballoc.cpp"
   $72 = $2; //@line 230 "./src/cpp/unrar/suballoc.cpp"
   STACKTOP = sp;return ($72|0); //@line 230 "./src/cpp/unrar/suballoc.cpp"
  }
 }
 $20 = $4; //@line 210 "./src/cpp/unrar/suballoc.cpp"
 $5 = $20; //@line 210 "./src/cpp/unrar/suballoc.cpp"
 while(1) {
  $21 = $5; //@line 213 "./src/cpp/unrar/suballoc.cpp"
  $22 = (($21) + 1)|0; //@line 213 "./src/cpp/unrar/suballoc.cpp"
  $5 = $22; //@line 213 "./src/cpp/unrar/suballoc.cpp"
  $23 = ($22|0)==(38); //@line 213 "./src/cpp/unrar/suballoc.cpp"
  if ($23) {
   break;
  }
  $60 = ((($8)) + 184|0); //@line 226 "./src/cpp/unrar/suballoc.cpp"
  $61 = $5; //@line 226 "./src/cpp/unrar/suballoc.cpp"
  $62 = (($60) + ($61<<2)|0); //@line 226 "./src/cpp/unrar/suballoc.cpp"
  $63 = HEAP32[$62>>2]|0; //@line 226 "./src/cpp/unrar/suballoc.cpp"
  $64 = ($63|0)!=(0|0); //@line 226 "./src/cpp/unrar/suballoc.cpp"
  $65 = $64 ^ 1; //@line 226 "./src/cpp/unrar/suballoc.cpp"
  if (!($65)) {
   label = 10;
   break;
  }
 }
 if ((label|0) == 10) {
  $66 = $5; //@line 227 "./src/cpp/unrar/suballoc.cpp"
  $67 = (__ZN12SubAllocator10RemoveNodeEi($8,$66)|0); //@line 227 "./src/cpp/unrar/suballoc.cpp"
  $7 = $67; //@line 227 "./src/cpp/unrar/suballoc.cpp"
  $68 = $7; //@line 228 "./src/cpp/unrar/suballoc.cpp"
  $69 = $5; //@line 228 "./src/cpp/unrar/suballoc.cpp"
  $70 = $4; //@line 228 "./src/cpp/unrar/suballoc.cpp"
  __ZN12SubAllocator10SplitBlockEPvii($8,$68,$69,$70); //@line 228 "./src/cpp/unrar/suballoc.cpp"
  $71 = $7; //@line 229 "./src/cpp/unrar/suballoc.cpp"
  $2 = $71; //@line 229 "./src/cpp/unrar/suballoc.cpp"
  $72 = $2; //@line 230 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($72|0); //@line 230 "./src/cpp/unrar/suballoc.cpp"
 }
 $24 = ((($8)) + 170|0); //@line 215 "./src/cpp/unrar/suballoc.cpp"
 $25 = HEAP8[$24>>0]|0; //@line 215 "./src/cpp/unrar/suballoc.cpp"
 $26 = (($25) + -1)<<24>>24; //@line 215 "./src/cpp/unrar/suballoc.cpp"
 HEAP8[$24>>0] = $26; //@line 215 "./src/cpp/unrar/suballoc.cpp"
 $27 = ((($8)) + 4|0); //@line 216 "./src/cpp/unrar/suballoc.cpp"
 $28 = $4; //@line 216 "./src/cpp/unrar/suballoc.cpp"
 $29 = (($27) + ($28)|0); //@line 216 "./src/cpp/unrar/suballoc.cpp"
 $30 = HEAP8[$29>>0]|0; //@line 216 "./src/cpp/unrar/suballoc.cpp"
 $31 = $30&255; //@line 216 "./src/cpp/unrar/suballoc.cpp"
 $32 = (__ZN12SubAllocator3U2BEi($8,$31)|0); //@line 216 "./src/cpp/unrar/suballoc.cpp"
 $5 = $32; //@line 216 "./src/cpp/unrar/suballoc.cpp"
 $33 = ((($8)) + 4|0); //@line 217 "./src/cpp/unrar/suballoc.cpp"
 $34 = $4; //@line 217 "./src/cpp/unrar/suballoc.cpp"
 $35 = (($33) + ($34)|0); //@line 217 "./src/cpp/unrar/suballoc.cpp"
 $36 = HEAP8[$35>>0]|0; //@line 217 "./src/cpp/unrar/suballoc.cpp"
 $37 = $36&255; //@line 217 "./src/cpp/unrar/suballoc.cpp"
 $38 = ($37*12)|0; //@line 217 "./src/cpp/unrar/suballoc.cpp"
 $6 = $38; //@line 217 "./src/cpp/unrar/suballoc.cpp"
 $39 = ((($8)) + 348|0); //@line 218 "./src/cpp/unrar/suballoc.cpp"
 $40 = HEAP32[$39>>2]|0; //@line 218 "./src/cpp/unrar/suballoc.cpp"
 $41 = ((($8)) + 336|0); //@line 218 "./src/cpp/unrar/suballoc.cpp"
 $42 = HEAP32[$41>>2]|0; //@line 218 "./src/cpp/unrar/suballoc.cpp"
 $43 = $40; //@line 218 "./src/cpp/unrar/suballoc.cpp"
 $44 = $42; //@line 218 "./src/cpp/unrar/suballoc.cpp"
 $45 = (($43) - ($44))|0; //@line 218 "./src/cpp/unrar/suballoc.cpp"
 $46 = $6; //@line 218 "./src/cpp/unrar/suballoc.cpp"
 $47 = ($45|0)>($46|0); //@line 218 "./src/cpp/unrar/suballoc.cpp"
 if ($47) {
  $48 = $6; //@line 220 "./src/cpp/unrar/suballoc.cpp"
  $49 = ((($8)) + 348|0); //@line 220 "./src/cpp/unrar/suballoc.cpp"
  $50 = HEAP32[$49>>2]|0; //@line 220 "./src/cpp/unrar/suballoc.cpp"
  $51 = (0 - ($48))|0; //@line 220 "./src/cpp/unrar/suballoc.cpp"
  $52 = (($50) + ($51)|0); //@line 220 "./src/cpp/unrar/suballoc.cpp"
  HEAP32[$49>>2] = $52; //@line 220 "./src/cpp/unrar/suballoc.cpp"
  $53 = $5; //@line 221 "./src/cpp/unrar/suballoc.cpp"
  $54 = ((($8)) + 340|0); //@line 221 "./src/cpp/unrar/suballoc.cpp"
  $55 = HEAP32[$54>>2]|0; //@line 221 "./src/cpp/unrar/suballoc.cpp"
  $56 = (0 - ($53))|0; //@line 221 "./src/cpp/unrar/suballoc.cpp"
  $57 = (($55) + ($56)|0); //@line 221 "./src/cpp/unrar/suballoc.cpp"
  HEAP32[$54>>2] = $57; //@line 221 "./src/cpp/unrar/suballoc.cpp"
  $58 = ((($8)) + 340|0); //@line 222 "./src/cpp/unrar/suballoc.cpp"
  $59 = HEAP32[$58>>2]|0; //@line 222 "./src/cpp/unrar/suballoc.cpp"
  $2 = $59; //@line 222 "./src/cpp/unrar/suballoc.cpp"
  $72 = $2; //@line 230 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($72|0); //@line 230 "./src/cpp/unrar/suballoc.cpp"
 } else {
  $2 = 0; //@line 224 "./src/cpp/unrar/suballoc.cpp"
  $72 = $2; //@line 230 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($72|0); //@line 230 "./src/cpp/unrar/suballoc.cpp"
 }
 return (0)|0;
}
function __ZN12SubAllocator14GlueFreeBlocksEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 20|0;
 $1 = $0;
 $8 = $1;
 $9 = ((($8)) + 176|0); //@line 172 "./src/cpp/unrar/suballoc.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 172 "./src/cpp/unrar/suballoc.cpp"
 $11 = ((($8)) + 180|0); //@line 172 "./src/cpp/unrar/suballoc.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 172 "./src/cpp/unrar/suballoc.cpp"
 $13 = ($10|0)!=($12|0); //@line 172 "./src/cpp/unrar/suballoc.cpp"
 if ($13) {
  $14 = ((($8)) + 176|0); //@line 173 "./src/cpp/unrar/suballoc.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 173 "./src/cpp/unrar/suballoc.cpp"
  HEAP8[$15>>0] = 0; //@line 173 "./src/cpp/unrar/suballoc.cpp"
 }
 $5 = 0; //@line 174 "./src/cpp/unrar/suballoc.cpp"
 $16 = ((($2)) + 8|0); //@line 174 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$16>>2] = $2; //@line 174 "./src/cpp/unrar/suballoc.cpp"
 $17 = ((($2)) + 4|0); //@line 174 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$17>>2] = $2; //@line 174 "./src/cpp/unrar/suballoc.cpp"
 while(1) {
  $18 = $5; //@line 174 "./src/cpp/unrar/suballoc.cpp"
  $19 = ($18|0)<(38); //@line 174 "./src/cpp/unrar/suballoc.cpp"
  if (!($19)) {
   break;
  }
  while(1) {
   $20 = ((($8)) + 184|0); //@line 175 "./src/cpp/unrar/suballoc.cpp"
   $21 = $5; //@line 175 "./src/cpp/unrar/suballoc.cpp"
   $22 = (($20) + ($21<<2)|0); //@line 175 "./src/cpp/unrar/suballoc.cpp"
   $23 = HEAP32[$22>>2]|0; //@line 175 "./src/cpp/unrar/suballoc.cpp"
   $24 = ($23|0)!=(0|0); //@line 175 "./src/cpp/unrar/suballoc.cpp"
   $25 = $5;
   if (!($24)) {
    break;
   }
   $26 = (__ZN12SubAllocator10RemoveNodeEi($8,$25)|0); //@line 177 "./src/cpp/unrar/suballoc.cpp"
   $3 = $26; //@line 177 "./src/cpp/unrar/suballoc.cpp"
   $27 = $3; //@line 178 "./src/cpp/unrar/suballoc.cpp"
   __ZN14RARPPM_MEM_BLK8insertAtEPS_($27,$2); //@line 178 "./src/cpp/unrar/suballoc.cpp"
   $28 = $3; //@line 179 "./src/cpp/unrar/suballoc.cpp"
   HEAP16[$28>>1] = -1; //@line 179 "./src/cpp/unrar/suballoc.cpp"
   $29 = ((($8)) + 4|0); //@line 180 "./src/cpp/unrar/suballoc.cpp"
   $30 = $5; //@line 180 "./src/cpp/unrar/suballoc.cpp"
   $31 = (($29) + ($30)|0); //@line 180 "./src/cpp/unrar/suballoc.cpp"
   $32 = HEAP8[$31>>0]|0; //@line 180 "./src/cpp/unrar/suballoc.cpp"
   $33 = $32&255; //@line 180 "./src/cpp/unrar/suballoc.cpp"
   $34 = $3; //@line 180 "./src/cpp/unrar/suballoc.cpp"
   $35 = ((($34)) + 2|0); //@line 180 "./src/cpp/unrar/suballoc.cpp"
   HEAP16[$35>>1] = $33; //@line 180 "./src/cpp/unrar/suballoc.cpp"
  }
  $36 = (($25) + 1)|0; //@line 174 "./src/cpp/unrar/suballoc.cpp"
  $5 = $36; //@line 174 "./src/cpp/unrar/suballoc.cpp"
 }
 $37 = ((($2)) + 4|0); //@line 182 "./src/cpp/unrar/suballoc.cpp"
 $38 = HEAP32[$37>>2]|0; //@line 182 "./src/cpp/unrar/suballoc.cpp"
 $3 = $38; //@line 182 "./src/cpp/unrar/suballoc.cpp"
 while(1) {
  $39 = $3; //@line 182 "./src/cpp/unrar/suballoc.cpp"
  $40 = ($39|0)!=($2|0); //@line 182 "./src/cpp/unrar/suballoc.cpp"
  if (!($40)) {
   break;
  }
  while(1) {
   $41 = $3; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $42 = $3; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $43 = ((($42)) + 2|0); //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $44 = HEAP16[$43>>1]|0; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $45 = $44&65535; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $46 = (__ZN12SubAllocator5MBPtrEP14RARPPM_MEM_BLKi($8,$41,$45)|0); //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $4 = $46; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $47 = HEAP16[$46>>1]|0; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $48 = $47&65535; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $49 = ($48|0)==(65535); //@line 183 "./src/cpp/unrar/suballoc.cpp"
   if (!($49)) {
    break;
   }
   $50 = $3; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $51 = ((($50)) + 2|0); //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $52 = HEAP16[$51>>1]|0; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $53 = $52&65535; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $54 = $4; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $55 = ((($54)) + 2|0); //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $56 = HEAP16[$55>>1]|0; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $57 = $56&65535; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $58 = (($53) + ($57))|0; //@line 183 "./src/cpp/unrar/suballoc.cpp"
   $59 = ($58|0)<(65536); //@line 183 "./src/cpp/unrar/suballoc.cpp"
   if (!($59)) {
    break;
   }
   $60 = $4; //@line 185 "./src/cpp/unrar/suballoc.cpp"
   __ZN14RARPPM_MEM_BLK6removeEv($60); //@line 185 "./src/cpp/unrar/suballoc.cpp"
   $61 = $4; //@line 186 "./src/cpp/unrar/suballoc.cpp"
   $62 = ((($61)) + 2|0); //@line 186 "./src/cpp/unrar/suballoc.cpp"
   $63 = HEAP16[$62>>1]|0; //@line 186 "./src/cpp/unrar/suballoc.cpp"
   $64 = $63&65535; //@line 186 "./src/cpp/unrar/suballoc.cpp"
   $65 = $3; //@line 186 "./src/cpp/unrar/suballoc.cpp"
   $66 = ((($65)) + 2|0); //@line 186 "./src/cpp/unrar/suballoc.cpp"
   $67 = HEAP16[$66>>1]|0; //@line 186 "./src/cpp/unrar/suballoc.cpp"
   $68 = $67&65535; //@line 186 "./src/cpp/unrar/suballoc.cpp"
   $69 = (($68) + ($64))|0; //@line 186 "./src/cpp/unrar/suballoc.cpp"
   $70 = $69&65535; //@line 186 "./src/cpp/unrar/suballoc.cpp"
   HEAP16[$66>>1] = $70; //@line 186 "./src/cpp/unrar/suballoc.cpp"
  }
  $71 = $3; //@line 182 "./src/cpp/unrar/suballoc.cpp"
  $72 = ((($71)) + 4|0); //@line 182 "./src/cpp/unrar/suballoc.cpp"
  $73 = HEAP32[$72>>2]|0; //@line 182 "./src/cpp/unrar/suballoc.cpp"
  $3 = $73; //@line 182 "./src/cpp/unrar/suballoc.cpp"
 }
 while(1) {
  $74 = ((($2)) + 4|0); //@line 188 "./src/cpp/unrar/suballoc.cpp"
  $75 = HEAP32[$74>>2]|0; //@line 188 "./src/cpp/unrar/suballoc.cpp"
  $3 = $75; //@line 188 "./src/cpp/unrar/suballoc.cpp"
  $76 = ($75|0)!=($2|0); //@line 188 "./src/cpp/unrar/suballoc.cpp"
  if (!($76)) {
   break;
  }
  $77 = $3; //@line 190 "./src/cpp/unrar/suballoc.cpp"
  __ZN14RARPPM_MEM_BLK6removeEv($77); //@line 190 "./src/cpp/unrar/suballoc.cpp"
  $78 = $3; //@line 190 "./src/cpp/unrar/suballoc.cpp"
  $79 = ((($78)) + 2|0); //@line 190 "./src/cpp/unrar/suballoc.cpp"
  $80 = HEAP16[$79>>1]|0; //@line 190 "./src/cpp/unrar/suballoc.cpp"
  $81 = $80&65535; //@line 190 "./src/cpp/unrar/suballoc.cpp"
  $7 = $81; //@line 190 "./src/cpp/unrar/suballoc.cpp"
  while(1) {
   $82 = $7; //@line 190 "./src/cpp/unrar/suballoc.cpp"
   $83 = ($82|0)>(128); //@line 190 "./src/cpp/unrar/suballoc.cpp"
   if (!($83)) {
    break;
   }
   $84 = $3; //@line 191 "./src/cpp/unrar/suballoc.cpp"
   __ZN12SubAllocator10InsertNodeEPvi($8,$84,37); //@line 191 "./src/cpp/unrar/suballoc.cpp"
   $85 = $7; //@line 190 "./src/cpp/unrar/suballoc.cpp"
   $86 = (($85) - 128)|0; //@line 190 "./src/cpp/unrar/suballoc.cpp"
   $7 = $86; //@line 190 "./src/cpp/unrar/suballoc.cpp"
   $87 = $3; //@line 190 "./src/cpp/unrar/suballoc.cpp"
   $88 = (__ZN12SubAllocator5MBPtrEP14RARPPM_MEM_BLKi($8,$87,128)|0); //@line 190 "./src/cpp/unrar/suballoc.cpp"
   $3 = $88; //@line 190 "./src/cpp/unrar/suballoc.cpp"
  }
  $89 = ((($8)) + 4|0); //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $90 = ((($8)) + 42|0); //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $91 = $7; //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $92 = (($91) - 1)|0; //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $93 = (($90) + ($92)|0); //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $94 = HEAP8[$93>>0]|0; //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $95 = $94&255; //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $5 = $95; //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $96 = (($89) + ($95)|0); //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $97 = HEAP8[$96>>0]|0; //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $98 = $97&255; //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $99 = $7; //@line 192 "./src/cpp/unrar/suballoc.cpp"
  $100 = ($98|0)!=($99|0); //@line 192 "./src/cpp/unrar/suballoc.cpp"
  if ($100) {
   $101 = $7; //@line 194 "./src/cpp/unrar/suballoc.cpp"
   $102 = ((($8)) + 4|0); //@line 194 "./src/cpp/unrar/suballoc.cpp"
   $103 = $5; //@line 194 "./src/cpp/unrar/suballoc.cpp"
   $104 = (($103) + -1)|0; //@line 194 "./src/cpp/unrar/suballoc.cpp"
   $5 = $104; //@line 194 "./src/cpp/unrar/suballoc.cpp"
   $105 = (($102) + ($104)|0); //@line 194 "./src/cpp/unrar/suballoc.cpp"
   $106 = HEAP8[$105>>0]|0; //@line 194 "./src/cpp/unrar/suballoc.cpp"
   $107 = $106&255; //@line 194 "./src/cpp/unrar/suballoc.cpp"
   $108 = (($101) - ($107))|0; //@line 194 "./src/cpp/unrar/suballoc.cpp"
   $6 = $108; //@line 194 "./src/cpp/unrar/suballoc.cpp"
   $109 = $3; //@line 195 "./src/cpp/unrar/suballoc.cpp"
   $110 = $7; //@line 195 "./src/cpp/unrar/suballoc.cpp"
   $111 = $6; //@line 195 "./src/cpp/unrar/suballoc.cpp"
   $112 = (($110) - ($111))|0; //@line 195 "./src/cpp/unrar/suballoc.cpp"
   $113 = (__ZN12SubAllocator5MBPtrEP14RARPPM_MEM_BLKi($8,$109,$112)|0); //@line 195 "./src/cpp/unrar/suballoc.cpp"
   $114 = $6; //@line 195 "./src/cpp/unrar/suballoc.cpp"
   $115 = (($114) - 1)|0; //@line 195 "./src/cpp/unrar/suballoc.cpp"
   __ZN12SubAllocator10InsertNodeEPvi($8,$113,$115); //@line 195 "./src/cpp/unrar/suballoc.cpp"
  }
  $116 = $3; //@line 197 "./src/cpp/unrar/suballoc.cpp"
  $117 = $5; //@line 197 "./src/cpp/unrar/suballoc.cpp"
  __ZN12SubAllocator10InsertNodeEPvi($8,$116,$117); //@line 197 "./src/cpp/unrar/suballoc.cpp"
 }
 STACKTOP = sp;return; //@line 199 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN12SubAllocator10RemoveNodeEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 184|0); //@line 32 "./src/cpp/unrar/suballoc.cpp"
 $7 = $3; //@line 32 "./src/cpp/unrar/suballoc.cpp"
 $8 = (($6) + ($7<<2)|0); //@line 32 "./src/cpp/unrar/suballoc.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 32 "./src/cpp/unrar/suballoc.cpp"
 $4 = $9; //@line 32 "./src/cpp/unrar/suballoc.cpp"
 $10 = $4; //@line 33 "./src/cpp/unrar/suballoc.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 33 "./src/cpp/unrar/suballoc.cpp"
 $12 = ((($5)) + 184|0); //@line 33 "./src/cpp/unrar/suballoc.cpp"
 $13 = $3; //@line 33 "./src/cpp/unrar/suballoc.cpp"
 $14 = (($12) + ($13<<2)|0); //@line 33 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$14>>2] = $11; //@line 33 "./src/cpp/unrar/suballoc.cpp"
 $15 = $4; //@line 34 "./src/cpp/unrar/suballoc.cpp"
 STACKTOP = sp;return ($15|0); //@line 34 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN12SubAllocator3U2BEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 42 "./src/cpp/unrar/suballoc.cpp"
 $5 = $4<<4; //@line 42 "./src/cpp/unrar/suballoc.cpp"
 STACKTOP = sp;return ($5|0); //@line 42 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN12SubAllocator10SplitBlockEPvii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = $4;
 $12 = ((($11)) + 4|0); //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $13 = $6; //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $14 = (($12) + ($13)|0); //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $15 = HEAP8[$14>>0]|0; //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $16 = $15&255; //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $17 = ((($11)) + 4|0); //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $18 = $7; //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $19 = (($17) + ($18)|0); //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $20 = HEAP8[$19>>0]|0; //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $21 = $20&255; //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $22 = (($16) - ($21))|0; //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $9 = $22; //@line 57 "./src/cpp/unrar/suballoc.cpp"
 $23 = $5; //@line 58 "./src/cpp/unrar/suballoc.cpp"
 $24 = ((($11)) + 4|0); //@line 58 "./src/cpp/unrar/suballoc.cpp"
 $25 = $7; //@line 58 "./src/cpp/unrar/suballoc.cpp"
 $26 = (($24) + ($25)|0); //@line 58 "./src/cpp/unrar/suballoc.cpp"
 $27 = HEAP8[$26>>0]|0; //@line 58 "./src/cpp/unrar/suballoc.cpp"
 $28 = $27&255; //@line 58 "./src/cpp/unrar/suballoc.cpp"
 $29 = (__ZN12SubAllocator3U2BEi($11,$28)|0); //@line 58 "./src/cpp/unrar/suballoc.cpp"
 $30 = (($23) + ($29)|0); //@line 58 "./src/cpp/unrar/suballoc.cpp"
 $10 = $30; //@line 58 "./src/cpp/unrar/suballoc.cpp"
 $31 = ((($11)) + 4|0); //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $32 = ((($11)) + 42|0); //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $33 = $9; //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $34 = (($33) - 1)|0; //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $35 = (($32) + ($34)|0); //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $36 = HEAP8[$35>>0]|0; //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $37 = $36&255; //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $8 = $37; //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $38 = (($31) + ($37)|0); //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $39 = HEAP8[$38>>0]|0; //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $40 = $39&255; //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $41 = $9; //@line 59 "./src/cpp/unrar/suballoc.cpp"
 $42 = ($40|0)!=($41|0); //@line 59 "./src/cpp/unrar/suballoc.cpp"
 if (!($42)) {
  $57 = $10; //@line 65 "./src/cpp/unrar/suballoc.cpp"
  $58 = ((($11)) + 42|0); //@line 65 "./src/cpp/unrar/suballoc.cpp"
  $59 = $9; //@line 65 "./src/cpp/unrar/suballoc.cpp"
  $60 = (($59) - 1)|0; //@line 65 "./src/cpp/unrar/suballoc.cpp"
  $61 = (($58) + ($60)|0); //@line 65 "./src/cpp/unrar/suballoc.cpp"
  $62 = HEAP8[$61>>0]|0; //@line 65 "./src/cpp/unrar/suballoc.cpp"
  $63 = $62&255; //@line 65 "./src/cpp/unrar/suballoc.cpp"
  __ZN12SubAllocator10InsertNodeEPvi($11,$57,$63); //@line 65 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return; //@line 66 "./src/cpp/unrar/suballoc.cpp"
 }
 $43 = $10; //@line 61 "./src/cpp/unrar/suballoc.cpp"
 $44 = $8; //@line 61 "./src/cpp/unrar/suballoc.cpp"
 $45 = (($44) + -1)|0; //@line 61 "./src/cpp/unrar/suballoc.cpp"
 $8 = $45; //@line 61 "./src/cpp/unrar/suballoc.cpp"
 __ZN12SubAllocator10InsertNodeEPvi($11,$43,$45); //@line 61 "./src/cpp/unrar/suballoc.cpp"
 $46 = ((($11)) + 4|0); //@line 62 "./src/cpp/unrar/suballoc.cpp"
 $47 = $8; //@line 62 "./src/cpp/unrar/suballoc.cpp"
 $48 = (($46) + ($47)|0); //@line 62 "./src/cpp/unrar/suballoc.cpp"
 $49 = HEAP8[$48>>0]|0; //@line 62 "./src/cpp/unrar/suballoc.cpp"
 $50 = $49&255; //@line 62 "./src/cpp/unrar/suballoc.cpp"
 $8 = $50; //@line 62 "./src/cpp/unrar/suballoc.cpp"
 $51 = (__ZN12SubAllocator3U2BEi($11,$50)|0); //@line 62 "./src/cpp/unrar/suballoc.cpp"
 $52 = $10; //@line 62 "./src/cpp/unrar/suballoc.cpp"
 $53 = (($52) + ($51)|0); //@line 62 "./src/cpp/unrar/suballoc.cpp"
 $10 = $53; //@line 62 "./src/cpp/unrar/suballoc.cpp"
 $54 = $8; //@line 63 "./src/cpp/unrar/suballoc.cpp"
 $55 = $9; //@line 63 "./src/cpp/unrar/suballoc.cpp"
 $56 = (($55) - ($54))|0; //@line 63 "./src/cpp/unrar/suballoc.cpp"
 $9 = $56; //@line 63 "./src/cpp/unrar/suballoc.cpp"
 $57 = $10; //@line 65 "./src/cpp/unrar/suballoc.cpp"
 $58 = ((($11)) + 42|0); //@line 65 "./src/cpp/unrar/suballoc.cpp"
 $59 = $9; //@line 65 "./src/cpp/unrar/suballoc.cpp"
 $60 = (($59) - 1)|0; //@line 65 "./src/cpp/unrar/suballoc.cpp"
 $61 = (($58) + ($60)|0); //@line 65 "./src/cpp/unrar/suballoc.cpp"
 $62 = HEAP8[$61>>0]|0; //@line 65 "./src/cpp/unrar/suballoc.cpp"
 $63 = $62&255; //@line 65 "./src/cpp/unrar/suballoc.cpp"
 __ZN12SubAllocator10InsertNodeEPvi($11,$57,$63); //@line 65 "./src/cpp/unrar/suballoc.cpp"
 STACKTOP = sp;return; //@line 66 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN12SubAllocator10InsertNodeEPvi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 184|0); //@line 25 "./src/cpp/unrar/suballoc.cpp"
 $8 = $5; //@line 25 "./src/cpp/unrar/suballoc.cpp"
 $9 = (($7) + ($8<<2)|0); //@line 25 "./src/cpp/unrar/suballoc.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 25 "./src/cpp/unrar/suballoc.cpp"
 $11 = $4; //@line 25 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$11>>2] = $10; //@line 25 "./src/cpp/unrar/suballoc.cpp"
 $12 = $4; //@line 26 "./src/cpp/unrar/suballoc.cpp"
 $13 = ((($6)) + 184|0); //@line 26 "./src/cpp/unrar/suballoc.cpp"
 $14 = $5; //@line 26 "./src/cpp/unrar/suballoc.cpp"
 $15 = (($13) + ($14<<2)|0); //@line 26 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$15>>2] = $12; //@line 26 "./src/cpp/unrar/suballoc.cpp"
 STACKTOP = sp;return; //@line 27 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN14RARPPM_MEM_BLK8insertAtEPS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 26 "./src/cpp/unrar/suballoc.hpp"
 $6 = ((($4)) + 8|0); //@line 26 "./src/cpp/unrar/suballoc.hpp"
 HEAP32[$6>>2] = $5; //@line 26 "./src/cpp/unrar/suballoc.hpp"
 $7 = ((($5)) + 4|0); //@line 26 "./src/cpp/unrar/suballoc.hpp"
 $8 = HEAP32[$7>>2]|0; //@line 26 "./src/cpp/unrar/suballoc.hpp"
 $9 = ((($4)) + 4|0); //@line 26 "./src/cpp/unrar/suballoc.hpp"
 HEAP32[$9>>2] = $8; //@line 26 "./src/cpp/unrar/suballoc.hpp"
 $10 = ((($4)) + 4|0); //@line 27 "./src/cpp/unrar/suballoc.hpp"
 $11 = HEAP32[$10>>2]|0; //@line 27 "./src/cpp/unrar/suballoc.hpp"
 $12 = ((($11)) + 8|0); //@line 27 "./src/cpp/unrar/suballoc.hpp"
 HEAP32[$12>>2] = $4; //@line 27 "./src/cpp/unrar/suballoc.hpp"
 $13 = $3; //@line 27 "./src/cpp/unrar/suballoc.hpp"
 $14 = ((($13)) + 4|0); //@line 27 "./src/cpp/unrar/suballoc.hpp"
 HEAP32[$14>>2] = $4; //@line 27 "./src/cpp/unrar/suballoc.hpp"
 STACKTOP = sp;return; //@line 28 "./src/cpp/unrar/suballoc.hpp"
}
function __ZN12SubAllocator5MBPtrEP14RARPPM_MEM_BLKi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4; //@line 51 "./src/cpp/unrar/suballoc.cpp"
 $8 = $5; //@line 51 "./src/cpp/unrar/suballoc.cpp"
 $9 = (__ZN12SubAllocator3U2BEi($6,$8)|0); //@line 51 "./src/cpp/unrar/suballoc.cpp"
 $10 = (($7) + ($9)|0); //@line 51 "./src/cpp/unrar/suballoc.cpp"
 STACKTOP = sp;return ($10|0); //@line 51 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN14RARPPM_MEM_BLK6removeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 31 "./src/cpp/unrar/suballoc.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 31 "./src/cpp/unrar/suballoc.hpp"
 $5 = ((($2)) + 8|0); //@line 31 "./src/cpp/unrar/suballoc.hpp"
 $6 = HEAP32[$5>>2]|0; //@line 31 "./src/cpp/unrar/suballoc.hpp"
 $7 = ((($6)) + 4|0); //@line 31 "./src/cpp/unrar/suballoc.hpp"
 HEAP32[$7>>2] = $4; //@line 31 "./src/cpp/unrar/suballoc.hpp"
 $8 = ((($2)) + 8|0); //@line 32 "./src/cpp/unrar/suballoc.hpp"
 $9 = HEAP32[$8>>2]|0; //@line 32 "./src/cpp/unrar/suballoc.hpp"
 $10 = ((($2)) + 4|0); //@line 32 "./src/cpp/unrar/suballoc.hpp"
 $11 = HEAP32[$10>>2]|0; //@line 32 "./src/cpp/unrar/suballoc.hpp"
 $12 = ((($11)) + 8|0); //@line 32 "./src/cpp/unrar/suballoc.hpp"
 HEAP32[$12>>2] = $9; //@line 32 "./src/cpp/unrar/suballoc.hpp"
 STACKTOP = sp;return; //@line 33 "./src/cpp/unrar/suballoc.hpp"
}
function __ZN8ModelPPMC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 19088|0); //@line 30 "./src/cpp/unrar/model.cpp"
 __ZN12SubAllocatorC2Ev($3); //@line 30 "./src/cpp/unrar/model.cpp"
 $4 = ((($2)) + 1608|0); //@line 32 "./src/cpp/unrar/model.cpp"
 HEAP32[$4>>2] = 0; //@line 32 "./src/cpp/unrar/model.cpp"
 $5 = ((($2)) + 1616|0); //@line 33 "./src/cpp/unrar/model.cpp"
 HEAP32[$5>>2] = 0; //@line 33 "./src/cpp/unrar/model.cpp"
 $6 = ((($2)) + 1612|0); //@line 34 "./src/cpp/unrar/model.cpp"
 HEAP32[$6>>2] = 0; //@line 34 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return; //@line 35 "./src/cpp/unrar/model.cpp"
}
function __ZN8ModelPPM16RestartModelRareEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $5 = $1;
 $6 = ((($5)) + 1648|0); //@line 41 "./src/cpp/unrar/model.cpp"
 _memset(($6|0),0,256)|0; //@line 41 "./src/cpp/unrar/model.cpp"
 $7 = ((($5)) + 19088|0); //@line 42 "./src/cpp/unrar/model.cpp"
 __ZN12SubAllocator16InitSubAllocatorEv($7); //@line 42 "./src/cpp/unrar/model.cpp"
 $8 = ((($5)) + 1636|0); //@line 43 "./src/cpp/unrar/model.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 43 "./src/cpp/unrar/model.cpp"
 $10 = ($9|0)<(12); //@line 43 "./src/cpp/unrar/model.cpp"
 if ($10) {
  $11 = ((($5)) + 1636|0); //@line 43 "./src/cpp/unrar/model.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 43 "./src/cpp/unrar/model.cpp"
  $14 = $12;
 } else {
  $14 = 12;
 }
 $13 = (0 - ($14))|0; //@line 43 "./src/cpp/unrar/model.cpp"
 $15 = (($13) - 1)|0; //@line 43 "./src/cpp/unrar/model.cpp"
 $16 = ((($5)) + 1644|0); //@line 43 "./src/cpp/unrar/model.cpp"
 HEAP32[$16>>2] = $15; //@line 43 "./src/cpp/unrar/model.cpp"
 $17 = ((($5)) + 19088|0); //@line 44 "./src/cpp/unrar/model.cpp"
 $18 = (__ZN12SubAllocator12AllocContextEv($17)|0); //@line 44 "./src/cpp/unrar/model.cpp"
 $19 = ((($5)) + 1616|0); //@line 44 "./src/cpp/unrar/model.cpp"
 HEAP32[$19>>2] = $18; //@line 44 "./src/cpp/unrar/model.cpp"
 $20 = ((($5)) + 1608|0); //@line 44 "./src/cpp/unrar/model.cpp"
 HEAP32[$20>>2] = $18; //@line 44 "./src/cpp/unrar/model.cpp"
 $21 = ((($5)) + 1608|0); //@line 45 "./src/cpp/unrar/model.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 45 "./src/cpp/unrar/model.cpp"
 $23 = ((($22)) + 12|0); //@line 45 "./src/cpp/unrar/model.cpp"
 HEAP32[$23>>2] = 0; //@line 45 "./src/cpp/unrar/model.cpp"
 $24 = ((($5)) + 1636|0); //@line 46 "./src/cpp/unrar/model.cpp"
 $25 = HEAP32[$24>>2]|0; //@line 46 "./src/cpp/unrar/model.cpp"
 $26 = ((($5)) + 1632|0); //@line 46 "./src/cpp/unrar/model.cpp"
 HEAP32[$26>>2] = $25; //@line 46 "./src/cpp/unrar/model.cpp"
 $27 = ((($5)) + 1608|0); //@line 47 "./src/cpp/unrar/model.cpp"
 $28 = HEAP32[$27>>2]|0; //@line 47 "./src/cpp/unrar/model.cpp"
 HEAP16[$28>>1] = 256; //@line 47 "./src/cpp/unrar/model.cpp"
 $29 = ((($5)) + 1608|0); //@line 47 "./src/cpp/unrar/model.cpp"
 $30 = HEAP32[$29>>2]|0; //@line 47 "./src/cpp/unrar/model.cpp"
 $31 = ((($30)) + 4|0); //@line 47 "./src/cpp/unrar/model.cpp"
 HEAP16[$31>>1] = 257; //@line 47 "./src/cpp/unrar/model.cpp"
 $32 = ((($5)) + 19088|0); //@line 48 "./src/cpp/unrar/model.cpp"
 $33 = (__ZN12SubAllocator10AllocUnitsEi($32,128)|0); //@line 48 "./src/cpp/unrar/model.cpp"
 $34 = ((($5)) + 1608|0); //@line 48 "./src/cpp/unrar/model.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 48 "./src/cpp/unrar/model.cpp"
 $36 = ((($35)) + 4|0); //@line 48 "./src/cpp/unrar/model.cpp"
 $37 = ((($36)) + 4|0); //@line 48 "./src/cpp/unrar/model.cpp"
 HEAP32[$37>>2] = $33; //@line 48 "./src/cpp/unrar/model.cpp"
 $38 = ((($5)) + 1620|0); //@line 48 "./src/cpp/unrar/model.cpp"
 HEAP32[$38>>2] = $33; //@line 48 "./src/cpp/unrar/model.cpp"
 $39 = ((($5)) + 1644|0); //@line 49 "./src/cpp/unrar/model.cpp"
 $40 = HEAP32[$39>>2]|0; //@line 49 "./src/cpp/unrar/model.cpp"
 $41 = ((($5)) + 1640|0); //@line 49 "./src/cpp/unrar/model.cpp"
 HEAP32[$41>>2] = $40; //@line 49 "./src/cpp/unrar/model.cpp"
 $2 = 0; //@line 49 "./src/cpp/unrar/model.cpp"
 $42 = ((($5)) + 2673|0); //@line 49 "./src/cpp/unrar/model.cpp"
 HEAP8[$42>>0] = 0; //@line 49 "./src/cpp/unrar/model.cpp"
 while(1) {
  $43 = $2; //@line 49 "./src/cpp/unrar/model.cpp"
  $44 = ($43|0)<(256); //@line 49 "./src/cpp/unrar/model.cpp"
  if (!($44)) {
   break;
  }
  $45 = $2; //@line 51 "./src/cpp/unrar/model.cpp"
  $46 = $45&255; //@line 51 "./src/cpp/unrar/model.cpp"
  $47 = ((($5)) + 1608|0); //@line 51 "./src/cpp/unrar/model.cpp"
  $48 = HEAP32[$47>>2]|0; //@line 51 "./src/cpp/unrar/model.cpp"
  $49 = ((($48)) + 4|0); //@line 51 "./src/cpp/unrar/model.cpp"
  $50 = ((($49)) + 4|0); //@line 51 "./src/cpp/unrar/model.cpp"
  $51 = HEAP32[$50>>2]|0; //@line 51 "./src/cpp/unrar/model.cpp"
  $52 = $2; //@line 51 "./src/cpp/unrar/model.cpp"
  $53 = (($51) + ($52<<3)|0); //@line 51 "./src/cpp/unrar/model.cpp"
  HEAP8[$53>>0] = $46; //@line 51 "./src/cpp/unrar/model.cpp"
  $54 = ((($5)) + 1608|0); //@line 52 "./src/cpp/unrar/model.cpp"
  $55 = HEAP32[$54>>2]|0; //@line 52 "./src/cpp/unrar/model.cpp"
  $56 = ((($55)) + 4|0); //@line 52 "./src/cpp/unrar/model.cpp"
  $57 = ((($56)) + 4|0); //@line 52 "./src/cpp/unrar/model.cpp"
  $58 = HEAP32[$57>>2]|0; //@line 52 "./src/cpp/unrar/model.cpp"
  $59 = $2; //@line 52 "./src/cpp/unrar/model.cpp"
  $60 = (($58) + ($59<<3)|0); //@line 52 "./src/cpp/unrar/model.cpp"
  $61 = ((($60)) + 1|0); //@line 52 "./src/cpp/unrar/model.cpp"
  HEAP8[$61>>0] = 1; //@line 52 "./src/cpp/unrar/model.cpp"
  $62 = ((($5)) + 1608|0); //@line 53 "./src/cpp/unrar/model.cpp"
  $63 = HEAP32[$62>>2]|0; //@line 53 "./src/cpp/unrar/model.cpp"
  $64 = ((($63)) + 4|0); //@line 53 "./src/cpp/unrar/model.cpp"
  $65 = ((($64)) + 4|0); //@line 53 "./src/cpp/unrar/model.cpp"
  $66 = HEAP32[$65>>2]|0; //@line 53 "./src/cpp/unrar/model.cpp"
  $67 = $2; //@line 53 "./src/cpp/unrar/model.cpp"
  $68 = (($66) + ($67<<3)|0); //@line 53 "./src/cpp/unrar/model.cpp"
  $69 = ((($68)) + 4|0); //@line 53 "./src/cpp/unrar/model.cpp"
  HEAP32[$69>>2] = 0; //@line 53 "./src/cpp/unrar/model.cpp"
  $70 = $2; //@line 49 "./src/cpp/unrar/model.cpp"
  $71 = (($70) + 1)|0; //@line 49 "./src/cpp/unrar/model.cpp"
  $2 = $71; //@line 49 "./src/cpp/unrar/model.cpp"
 }
 $2 = 0; //@line 60 "./src/cpp/unrar/model.cpp"
 while(1) {
  $72 = $2; //@line 60 "./src/cpp/unrar/model.cpp"
  $73 = ($72|0)<(128); //@line 60 "./src/cpp/unrar/model.cpp"
  if (!($73)) {
   break;
  }
  $3 = 0; //@line 61 "./src/cpp/unrar/model.cpp"
  while(1) {
   $74 = $3; //@line 61 "./src/cpp/unrar/model.cpp"
   $75 = ($74|0)<(8); //@line 61 "./src/cpp/unrar/model.cpp"
   if (!($75)) {
    break;
   }
   $4 = 0; //@line 62 "./src/cpp/unrar/model.cpp"
   while(1) {
    $76 = $4; //@line 62 "./src/cpp/unrar/model.cpp"
    $77 = ($76|0)<(64); //@line 62 "./src/cpp/unrar/model.cpp"
    $78 = $3;
    if (!($77)) {
     break;
    }
    $79 = (4108 + ($78<<1)|0); //@line 63 "./src/cpp/unrar/model.cpp"
    $80 = HEAP16[$79>>1]|0; //@line 63 "./src/cpp/unrar/model.cpp"
    $81 = $80&65535; //@line 63 "./src/cpp/unrar/model.cpp"
    $82 = $2; //@line 63 "./src/cpp/unrar/model.cpp"
    $83 = (($82) + 2)|0; //@line 63 "./src/cpp/unrar/model.cpp"
    $84 = (($81|0) / ($83|0))&-1; //@line 63 "./src/cpp/unrar/model.cpp"
    $85 = (16384 - ($84))|0; //@line 63 "./src/cpp/unrar/model.cpp"
    $86 = $85&65535; //@line 63 "./src/cpp/unrar/model.cpp"
    $87 = ((($5)) + 2676|0); //@line 63 "./src/cpp/unrar/model.cpp"
    $88 = $2; //@line 63 "./src/cpp/unrar/model.cpp"
    $89 = (($87) + ($88<<7)|0); //@line 63 "./src/cpp/unrar/model.cpp"
    $90 = $3; //@line 63 "./src/cpp/unrar/model.cpp"
    $91 = $4; //@line 63 "./src/cpp/unrar/model.cpp"
    $92 = (($90) + ($91))|0; //@line 63 "./src/cpp/unrar/model.cpp"
    $93 = (($89) + ($92<<1)|0); //@line 63 "./src/cpp/unrar/model.cpp"
    HEAP16[$93>>1] = $86; //@line 63 "./src/cpp/unrar/model.cpp"
    $94 = $4; //@line 62 "./src/cpp/unrar/model.cpp"
    $95 = (($94) + 8)|0; //@line 62 "./src/cpp/unrar/model.cpp"
    $4 = $95; //@line 62 "./src/cpp/unrar/model.cpp"
   }
   $96 = (($78) + 1)|0; //@line 61 "./src/cpp/unrar/model.cpp"
   $3 = $96; //@line 61 "./src/cpp/unrar/model.cpp"
  }
  $97 = $2; //@line 60 "./src/cpp/unrar/model.cpp"
  $98 = (($97) + 1)|0; //@line 60 "./src/cpp/unrar/model.cpp"
  $2 = $98; //@line 60 "./src/cpp/unrar/model.cpp"
 }
 $2 = 0; //@line 64 "./src/cpp/unrar/model.cpp"
 while(1) {
  $99 = $2; //@line 64 "./src/cpp/unrar/model.cpp"
  $100 = ($99|0)<(25); //@line 64 "./src/cpp/unrar/model.cpp"
  if (!($100)) {
   break;
  }
  $3 = 0; //@line 65 "./src/cpp/unrar/model.cpp"
  while(1) {
   $101 = $3; //@line 65 "./src/cpp/unrar/model.cpp"
   $102 = ($101|0)<(16); //@line 65 "./src/cpp/unrar/model.cpp"
   if (!($102)) {
    break;
   }
   $103 = ((($5)) + 2|0); //@line 66 "./src/cpp/unrar/model.cpp"
   $104 = $2; //@line 66 "./src/cpp/unrar/model.cpp"
   $105 = (($103) + ($104<<6)|0); //@line 66 "./src/cpp/unrar/model.cpp"
   $106 = $3; //@line 66 "./src/cpp/unrar/model.cpp"
   $107 = (($105) + ($106<<2)|0); //@line 66 "./src/cpp/unrar/model.cpp"
   $108 = $2; //@line 66 "./src/cpp/unrar/model.cpp"
   $109 = ($108*5)|0; //@line 66 "./src/cpp/unrar/model.cpp"
   $110 = (($109) + 10)|0; //@line 66 "./src/cpp/unrar/model.cpp"
   __ZN19RARPPM_SEE2_CONTEXT4initEi($107,$110); //@line 66 "./src/cpp/unrar/model.cpp"
   $111 = $3; //@line 65 "./src/cpp/unrar/model.cpp"
   $112 = (($111) + 1)|0; //@line 65 "./src/cpp/unrar/model.cpp"
   $3 = $112; //@line 65 "./src/cpp/unrar/model.cpp"
  }
  $113 = $2; //@line 64 "./src/cpp/unrar/model.cpp"
  $114 = (($113) + 1)|0; //@line 64 "./src/cpp/unrar/model.cpp"
  $2 = $114; //@line 64 "./src/cpp/unrar/model.cpp"
 }
 STACKTOP = sp;return; //@line 67 "./src/cpp/unrar/model.cpp"
}
function __ZN12SubAllocator12AllocContextEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $4 = ((($3)) + 180|0); //@line 249 "./src/cpp/unrar/suballoc.cpp"
 $5 = HEAP32[$4>>2]|0; //@line 249 "./src/cpp/unrar/suballoc.cpp"
 $6 = ((($3)) + 176|0); //@line 249 "./src/cpp/unrar/suballoc.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 249 "./src/cpp/unrar/suballoc.cpp"
 $8 = ($5|0)!=($7|0); //@line 249 "./src/cpp/unrar/suballoc.cpp"
 if ($8) {
  $9 = ((($3)) + 180|0); //@line 250 "./src/cpp/unrar/suballoc.cpp"
  $10 = HEAP32[$9>>2]|0; //@line 250 "./src/cpp/unrar/suballoc.cpp"
  $11 = ((($10)) + -16|0); //@line 250 "./src/cpp/unrar/suballoc.cpp"
  HEAP32[$9>>2] = $11; //@line 250 "./src/cpp/unrar/suballoc.cpp"
  $1 = $11; //@line 250 "./src/cpp/unrar/suballoc.cpp"
  $17 = $1; //@line 254 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($17|0); //@line 254 "./src/cpp/unrar/suballoc.cpp"
 }
 $12 = ((($3)) + 184|0); //@line 251 "./src/cpp/unrar/suballoc.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 251 "./src/cpp/unrar/suballoc.cpp"
 $14 = ($13|0)!=(0|0); //@line 251 "./src/cpp/unrar/suballoc.cpp"
 if ($14) {
  $15 = (__ZN12SubAllocator10RemoveNodeEi($3,0)|0); //@line 252 "./src/cpp/unrar/suballoc.cpp"
  $1 = $15; //@line 252 "./src/cpp/unrar/suballoc.cpp"
  $17 = $1; //@line 254 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($17|0); //@line 254 "./src/cpp/unrar/suballoc.cpp"
 } else {
  $16 = (__ZN12SubAllocator14AllocUnitsRareEi($3,0)|0); //@line 253 "./src/cpp/unrar/suballoc.cpp"
  $1 = $16; //@line 253 "./src/cpp/unrar/suballoc.cpp"
  $17 = $1; //@line 254 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($17|0); //@line 254 "./src/cpp/unrar/suballoc.cpp"
 }
 return (0)|0;
}
function __ZN12SubAllocator10AllocUnitsEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $3;
 $8 = ((($7)) + 42|0); //@line 235 "./src/cpp/unrar/suballoc.cpp"
 $9 = $4; //@line 235 "./src/cpp/unrar/suballoc.cpp"
 $10 = (($9) - 1)|0; //@line 235 "./src/cpp/unrar/suballoc.cpp"
 $11 = (($8) + ($10)|0); //@line 235 "./src/cpp/unrar/suballoc.cpp"
 $12 = HEAP8[$11>>0]|0; //@line 235 "./src/cpp/unrar/suballoc.cpp"
 $13 = $12&255; //@line 235 "./src/cpp/unrar/suballoc.cpp"
 $5 = $13; //@line 235 "./src/cpp/unrar/suballoc.cpp"
 $14 = ((($7)) + 184|0); //@line 236 "./src/cpp/unrar/suballoc.cpp"
 $15 = $5; //@line 236 "./src/cpp/unrar/suballoc.cpp"
 $16 = (($14) + ($15<<2)|0); //@line 236 "./src/cpp/unrar/suballoc.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 236 "./src/cpp/unrar/suballoc.cpp"
 $18 = ($17|0)!=(0|0); //@line 236 "./src/cpp/unrar/suballoc.cpp"
 if ($18) {
  $19 = $5; //@line 237 "./src/cpp/unrar/suballoc.cpp"
  $20 = (__ZN12SubAllocator10RemoveNodeEi($7,$19)|0); //@line 237 "./src/cpp/unrar/suballoc.cpp"
  $2 = $20; //@line 237 "./src/cpp/unrar/suballoc.cpp"
  $50 = $2; //@line 244 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($50|0); //@line 244 "./src/cpp/unrar/suballoc.cpp"
 }
 $21 = ((($7)) + 176|0); //@line 238 "./src/cpp/unrar/suballoc.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 238 "./src/cpp/unrar/suballoc.cpp"
 $6 = $22; //@line 238 "./src/cpp/unrar/suballoc.cpp"
 $23 = ((($7)) + 4|0); //@line 239 "./src/cpp/unrar/suballoc.cpp"
 $24 = $5; //@line 239 "./src/cpp/unrar/suballoc.cpp"
 $25 = (($23) + ($24)|0); //@line 239 "./src/cpp/unrar/suballoc.cpp"
 $26 = HEAP8[$25>>0]|0; //@line 239 "./src/cpp/unrar/suballoc.cpp"
 $27 = $26&255; //@line 239 "./src/cpp/unrar/suballoc.cpp"
 $28 = (__ZN12SubAllocator3U2BEi($7,$27)|0); //@line 239 "./src/cpp/unrar/suballoc.cpp"
 $29 = ((($7)) + 176|0); //@line 239 "./src/cpp/unrar/suballoc.cpp"
 $30 = HEAP32[$29>>2]|0; //@line 239 "./src/cpp/unrar/suballoc.cpp"
 $31 = (($30) + ($28)|0); //@line 239 "./src/cpp/unrar/suballoc.cpp"
 HEAP32[$29>>2] = $31; //@line 239 "./src/cpp/unrar/suballoc.cpp"
 $32 = ((($7)) + 176|0); //@line 240 "./src/cpp/unrar/suballoc.cpp"
 $33 = HEAP32[$32>>2]|0; //@line 240 "./src/cpp/unrar/suballoc.cpp"
 $34 = ((($7)) + 180|0); //@line 240 "./src/cpp/unrar/suballoc.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 240 "./src/cpp/unrar/suballoc.cpp"
 $36 = ($33>>>0)<=($35>>>0); //@line 240 "./src/cpp/unrar/suballoc.cpp"
 if ($36) {
  $37 = $6; //@line 241 "./src/cpp/unrar/suballoc.cpp"
  $2 = $37; //@line 241 "./src/cpp/unrar/suballoc.cpp"
  $50 = $2; //@line 244 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($50|0); //@line 244 "./src/cpp/unrar/suballoc.cpp"
 } else {
  $38 = ((($7)) + 4|0); //@line 242 "./src/cpp/unrar/suballoc.cpp"
  $39 = $5; //@line 242 "./src/cpp/unrar/suballoc.cpp"
  $40 = (($38) + ($39)|0); //@line 242 "./src/cpp/unrar/suballoc.cpp"
  $41 = HEAP8[$40>>0]|0; //@line 242 "./src/cpp/unrar/suballoc.cpp"
  $42 = $41&255; //@line 242 "./src/cpp/unrar/suballoc.cpp"
  $43 = (__ZN12SubAllocator3U2BEi($7,$42)|0); //@line 242 "./src/cpp/unrar/suballoc.cpp"
  $44 = ((($7)) + 176|0); //@line 242 "./src/cpp/unrar/suballoc.cpp"
  $45 = HEAP32[$44>>2]|0; //@line 242 "./src/cpp/unrar/suballoc.cpp"
  $46 = (0 - ($43))|0; //@line 242 "./src/cpp/unrar/suballoc.cpp"
  $47 = (($45) + ($46)|0); //@line 242 "./src/cpp/unrar/suballoc.cpp"
  HEAP32[$44>>2] = $47; //@line 242 "./src/cpp/unrar/suballoc.cpp"
  $48 = $5; //@line 243 "./src/cpp/unrar/suballoc.cpp"
  $49 = (__ZN12SubAllocator14AllocUnitsRareEi($7,$48)|0); //@line 243 "./src/cpp/unrar/suballoc.cpp"
  $2 = $49; //@line 243 "./src/cpp/unrar/suballoc.cpp"
  $50 = $2; //@line 244 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($50|0); //@line 244 "./src/cpp/unrar/suballoc.cpp"
 }
 return (0)|0;
}
function __ZN19RARPPM_SEE2_CONTEXT4initEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 23 "./src/cpp/unrar/model.hpp"
 $6 = ((($4)) + 2|0); //@line 23 "./src/cpp/unrar/model.hpp"
 HEAP8[$6>>0] = 3; //@line 23 "./src/cpp/unrar/model.hpp"
 $7 = $5 << 3; //@line 23 "./src/cpp/unrar/model.hpp"
 $8 = $7&65535; //@line 23 "./src/cpp/unrar/model.hpp"
 HEAP16[$4>>1] = $8; //@line 23 "./src/cpp/unrar/model.hpp"
 $9 = ((($4)) + 3|0); //@line 24 "./src/cpp/unrar/model.hpp"
 HEAP8[$9>>0] = 4; //@line 24 "./src/cpp/unrar/model.hpp"
 STACKTOP = sp;return; //@line 25 "./src/cpp/unrar/model.hpp"
}
function __ZN8ModelPPM14StartModelRareEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $8 = $2;
 $9 = ((($8)) + 2672|0); //@line 73 "./src/cpp/unrar/model.cpp"
 HEAP8[$9>>0] = 1; //@line 73 "./src/cpp/unrar/model.cpp"
 $10 = $3; //@line 91 "./src/cpp/unrar/model.cpp"
 $11 = ((($8)) + 1636|0); //@line 91 "./src/cpp/unrar/model.cpp"
 HEAP32[$11>>2] = $10; //@line 91 "./src/cpp/unrar/model.cpp"
 __ZN8ModelPPM16RestartModelRareEv($8); //@line 92 "./src/cpp/unrar/model.cpp"
 $12 = ((($8)) + 2160|0); //@line 93 "./src/cpp/unrar/model.cpp"
 HEAP8[$12>>0] = 0; //@line 93 "./src/cpp/unrar/model.cpp"
 $13 = ((($8)) + 2160|0); //@line 94 "./src/cpp/unrar/model.cpp"
 $14 = ((($13)) + 1|0); //@line 94 "./src/cpp/unrar/model.cpp"
 HEAP8[$14>>0] = 2; //@line 94 "./src/cpp/unrar/model.cpp"
 $15 = ((($8)) + 2160|0); //@line 95 "./src/cpp/unrar/model.cpp"
 $16 = ((($15)) + 2|0); //@line 95 "./src/cpp/unrar/model.cpp"
 dest=$16; stop=dest+9|0; do { HEAP8[dest>>0]=4|0; dest=dest+1|0; } while ((dest|0) < (stop|0)); //@line 95 "./src/cpp/unrar/model.cpp"
 $17 = ((($8)) + 2160|0); //@line 96 "./src/cpp/unrar/model.cpp"
 $18 = ((($17)) + 11|0); //@line 96 "./src/cpp/unrar/model.cpp"
 _memset(($18|0),6,245)|0; //@line 96 "./src/cpp/unrar/model.cpp"
 $4 = 0; //@line 97 "./src/cpp/unrar/model.cpp"
 while(1) {
  $19 = $4; //@line 97 "./src/cpp/unrar/model.cpp"
  $20 = ($19|0)<(3); //@line 97 "./src/cpp/unrar/model.cpp"
  $21 = $4;
  if (!($20)) {
   break;
  }
  $22 = $21&255; //@line 98 "./src/cpp/unrar/model.cpp"
  $23 = ((($8)) + 1904|0); //@line 98 "./src/cpp/unrar/model.cpp"
  $24 = $4; //@line 98 "./src/cpp/unrar/model.cpp"
  $25 = (($23) + ($24)|0); //@line 98 "./src/cpp/unrar/model.cpp"
  HEAP8[$25>>0] = $22; //@line 98 "./src/cpp/unrar/model.cpp"
  $26 = $4; //@line 97 "./src/cpp/unrar/model.cpp"
  $27 = (($26) + 1)|0; //@line 97 "./src/cpp/unrar/model.cpp"
  $4 = $27; //@line 97 "./src/cpp/unrar/model.cpp"
 }
 $6 = $21; //@line 99 "./src/cpp/unrar/model.cpp"
 $7 = 1; //@line 99 "./src/cpp/unrar/model.cpp"
 $5 = 1; //@line 99 "./src/cpp/unrar/model.cpp"
 while(1) {
  $28 = $4; //@line 99 "./src/cpp/unrar/model.cpp"
  $29 = ($28|0)<(256); //@line 99 "./src/cpp/unrar/model.cpp"
  if (!($29)) {
   break;
  }
  $30 = $6; //@line 101 "./src/cpp/unrar/model.cpp"
  $31 = $30&255; //@line 101 "./src/cpp/unrar/model.cpp"
  $32 = ((($8)) + 1904|0); //@line 101 "./src/cpp/unrar/model.cpp"
  $33 = $4; //@line 101 "./src/cpp/unrar/model.cpp"
  $34 = (($32) + ($33)|0); //@line 101 "./src/cpp/unrar/model.cpp"
  HEAP8[$34>>0] = $31; //@line 101 "./src/cpp/unrar/model.cpp"
  $35 = $5; //@line 102 "./src/cpp/unrar/model.cpp"
  $36 = (($35) + -1)|0; //@line 102 "./src/cpp/unrar/model.cpp"
  $5 = $36; //@line 102 "./src/cpp/unrar/model.cpp"
  $37 = ($36|0)!=(0); //@line 102 "./src/cpp/unrar/model.cpp"
  if (!($37)) {
   $38 = $7; //@line 104 "./src/cpp/unrar/model.cpp"
   $39 = (($38) + 1)|0; //@line 104 "./src/cpp/unrar/model.cpp"
   $7 = $39; //@line 104 "./src/cpp/unrar/model.cpp"
   $5 = $39; //@line 104 "./src/cpp/unrar/model.cpp"
   $40 = $6; //@line 105 "./src/cpp/unrar/model.cpp"
   $41 = (($40) + 1)|0; //@line 105 "./src/cpp/unrar/model.cpp"
   $6 = $41; //@line 105 "./src/cpp/unrar/model.cpp"
  }
  $42 = $4; //@line 99 "./src/cpp/unrar/model.cpp"
  $43 = (($42) + 1)|0; //@line 99 "./src/cpp/unrar/model.cpp"
  $4 = $43; //@line 99 "./src/cpp/unrar/model.cpp"
 }
 $44 = ((($8)) + 2416|0); //@line 108 "./src/cpp/unrar/model.cpp"
 dest=$44; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 108 "./src/cpp/unrar/model.cpp"
 $45 = ((($8)) + 2416|0); //@line 109 "./src/cpp/unrar/model.cpp"
 $46 = ((($45)) + 64|0); //@line 109 "./src/cpp/unrar/model.cpp"
 _memset(($46|0),8,192)|0; //@line 109 "./src/cpp/unrar/model.cpp"
 $47 = ((($8)) + 1602|0); //@line 110 "./src/cpp/unrar/model.cpp"
 $48 = ((($47)) + 2|0); //@line 110 "./src/cpp/unrar/model.cpp"
 HEAP8[$48>>0] = 7; //@line 110 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return; //@line 112 "./src/cpp/unrar/model.cpp"
}
function __ZN14RARPPM_CONTEXT7rescaleEP8ModelPPM($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $10 = sp + 16|0;
 $11 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $14 = $2;
 $15 = HEAP16[$14>>1]|0; //@line 117 "./src/cpp/unrar/model.cpp"
 $16 = $15&65535; //@line 117 "./src/cpp/unrar/model.cpp"
 $4 = $16; //@line 117 "./src/cpp/unrar/model.cpp"
 $17 = HEAP16[$14>>1]|0; //@line 117 "./src/cpp/unrar/model.cpp"
 $18 = $17&65535; //@line 117 "./src/cpp/unrar/model.cpp"
 $19 = (($18) - 1)|0; //@line 117 "./src/cpp/unrar/model.cpp"
 $5 = $19; //@line 117 "./src/cpp/unrar/model.cpp"
 $20 = $3; //@line 119 "./src/cpp/unrar/model.cpp"
 $21 = ((($20)) + 1620|0); //@line 119 "./src/cpp/unrar/model.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 119 "./src/cpp/unrar/model.cpp"
 $9 = $22; //@line 119 "./src/cpp/unrar/model.cpp"
 while(1) {
  $23 = $9; //@line 119 "./src/cpp/unrar/model.cpp"
  $24 = ((($14)) + 4|0); //@line 119 "./src/cpp/unrar/model.cpp"
  $25 = ((($24)) + 4|0); //@line 119 "./src/cpp/unrar/model.cpp"
  $26 = HEAP32[$25>>2]|0; //@line 119 "./src/cpp/unrar/model.cpp"
  $27 = ($23|0)!=($26|0); //@line 119 "./src/cpp/unrar/model.cpp"
  if (!($27)) {
   break;
  }
  $28 = $9; //@line 120 "./src/cpp/unrar/model.cpp"
  $29 = $9; //@line 120 "./src/cpp/unrar/model.cpp"
  $30 = ((($29)) + -8|0); //@line 120 "./src/cpp/unrar/model.cpp"
  __Z10_PPMD_SWAPI12RARPPM_STATEEvRT_S2_($28,$30); //@line 120 "./src/cpp/unrar/model.cpp"
  $31 = $9; //@line 119 "./src/cpp/unrar/model.cpp"
  $32 = ((($31)) + -8|0); //@line 119 "./src/cpp/unrar/model.cpp"
  $9 = $32; //@line 119 "./src/cpp/unrar/model.cpp"
 }
 $33 = ((($14)) + 4|0); //@line 121 "./src/cpp/unrar/model.cpp"
 $34 = ((($33)) + 4|0); //@line 121 "./src/cpp/unrar/model.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 121 "./src/cpp/unrar/model.cpp"
 $36 = ((($35)) + 1|0); //@line 121 "./src/cpp/unrar/model.cpp"
 $37 = HEAP8[$36>>0]|0; //@line 121 "./src/cpp/unrar/model.cpp"
 $38 = $37&255; //@line 121 "./src/cpp/unrar/model.cpp"
 $39 = (($38) + 4)|0; //@line 121 "./src/cpp/unrar/model.cpp"
 $40 = $39&255; //@line 121 "./src/cpp/unrar/model.cpp"
 HEAP8[$36>>0] = $40; //@line 121 "./src/cpp/unrar/model.cpp"
 $41 = ((($14)) + 4|0); //@line 122 "./src/cpp/unrar/model.cpp"
 $42 = HEAP16[$41>>1]|0; //@line 122 "./src/cpp/unrar/model.cpp"
 $43 = $42&65535; //@line 122 "./src/cpp/unrar/model.cpp"
 $44 = (($43) + 4)|0; //@line 122 "./src/cpp/unrar/model.cpp"
 $45 = $44&65535; //@line 122 "./src/cpp/unrar/model.cpp"
 HEAP16[$41>>1] = $45; //@line 122 "./src/cpp/unrar/model.cpp"
 $46 = ((($14)) + 4|0); //@line 123 "./src/cpp/unrar/model.cpp"
 $47 = HEAP16[$46>>1]|0; //@line 123 "./src/cpp/unrar/model.cpp"
 $48 = $47&65535; //@line 123 "./src/cpp/unrar/model.cpp"
 $49 = $9; //@line 123 "./src/cpp/unrar/model.cpp"
 $50 = ((($49)) + 1|0); //@line 123 "./src/cpp/unrar/model.cpp"
 $51 = HEAP8[$50>>0]|0; //@line 123 "./src/cpp/unrar/model.cpp"
 $52 = $51&255; //@line 123 "./src/cpp/unrar/model.cpp"
 $53 = (($48) - ($52))|0; //@line 123 "./src/cpp/unrar/model.cpp"
 $7 = $53; //@line 123 "./src/cpp/unrar/model.cpp"
 $54 = $3; //@line 124 "./src/cpp/unrar/model.cpp"
 $55 = ((($54)) + 1632|0); //@line 124 "./src/cpp/unrar/model.cpp"
 $56 = HEAP32[$55>>2]|0; //@line 124 "./src/cpp/unrar/model.cpp"
 $57 = ($56|0)!=(0); //@line 124 "./src/cpp/unrar/model.cpp"
 $58 = $57&1; //@line 124 "./src/cpp/unrar/model.cpp"
 $6 = $58; //@line 124 "./src/cpp/unrar/model.cpp"
 $59 = $9; //@line 125 "./src/cpp/unrar/model.cpp"
 $60 = ((($59)) + 1|0); //@line 125 "./src/cpp/unrar/model.cpp"
 $61 = HEAP8[$60>>0]|0; //@line 125 "./src/cpp/unrar/model.cpp"
 $62 = $61&255; //@line 125 "./src/cpp/unrar/model.cpp"
 $63 = $6; //@line 125 "./src/cpp/unrar/model.cpp"
 $64 = (($62) + ($63))|0; //@line 125 "./src/cpp/unrar/model.cpp"
 $65 = $64 >> 1; //@line 125 "./src/cpp/unrar/model.cpp"
 $66 = $65&255; //@line 125 "./src/cpp/unrar/model.cpp"
 $67 = $9; //@line 125 "./src/cpp/unrar/model.cpp"
 $68 = ((($67)) + 1|0); //@line 125 "./src/cpp/unrar/model.cpp"
 HEAP8[$68>>0] = $66; //@line 125 "./src/cpp/unrar/model.cpp"
 $69 = $66&255; //@line 125 "./src/cpp/unrar/model.cpp"
 $70 = ((($14)) + 4|0); //@line 125 "./src/cpp/unrar/model.cpp"
 HEAP16[$70>>1] = $69; //@line 125 "./src/cpp/unrar/model.cpp"
 while(1) {
  $71 = $9; //@line 128 "./src/cpp/unrar/model.cpp"
  $72 = ((($71)) + 8|0); //@line 128 "./src/cpp/unrar/model.cpp"
  $9 = $72; //@line 128 "./src/cpp/unrar/model.cpp"
  $73 = ((($72)) + 1|0); //@line 128 "./src/cpp/unrar/model.cpp"
  $74 = HEAP8[$73>>0]|0; //@line 128 "./src/cpp/unrar/model.cpp"
  $75 = $74&255; //@line 128 "./src/cpp/unrar/model.cpp"
  $76 = $7; //@line 128 "./src/cpp/unrar/model.cpp"
  $77 = (($76) - ($75))|0; //@line 128 "./src/cpp/unrar/model.cpp"
  $7 = $77; //@line 128 "./src/cpp/unrar/model.cpp"
  $78 = $9; //@line 129 "./src/cpp/unrar/model.cpp"
  $79 = ((($78)) + 1|0); //@line 129 "./src/cpp/unrar/model.cpp"
  $80 = HEAP8[$79>>0]|0; //@line 129 "./src/cpp/unrar/model.cpp"
  $81 = $80&255; //@line 129 "./src/cpp/unrar/model.cpp"
  $82 = $6; //@line 129 "./src/cpp/unrar/model.cpp"
  $83 = (($81) + ($82))|0; //@line 129 "./src/cpp/unrar/model.cpp"
  $84 = $83 >> 1; //@line 129 "./src/cpp/unrar/model.cpp"
  $85 = $84&255; //@line 129 "./src/cpp/unrar/model.cpp"
  $86 = $9; //@line 129 "./src/cpp/unrar/model.cpp"
  $87 = ((($86)) + 1|0); //@line 129 "./src/cpp/unrar/model.cpp"
  HEAP8[$87>>0] = $85; //@line 129 "./src/cpp/unrar/model.cpp"
  $88 = $85&255; //@line 129 "./src/cpp/unrar/model.cpp"
  $89 = ((($14)) + 4|0); //@line 129 "./src/cpp/unrar/model.cpp"
  $90 = HEAP16[$89>>1]|0; //@line 129 "./src/cpp/unrar/model.cpp"
  $91 = $90&65535; //@line 129 "./src/cpp/unrar/model.cpp"
  $92 = (($91) + ($88))|0; //@line 129 "./src/cpp/unrar/model.cpp"
  $93 = $92&65535; //@line 129 "./src/cpp/unrar/model.cpp"
  HEAP16[$89>>1] = $93; //@line 129 "./src/cpp/unrar/model.cpp"
  $94 = $9; //@line 130 "./src/cpp/unrar/model.cpp"
  $95 = ((($94)) + 1|0); //@line 130 "./src/cpp/unrar/model.cpp"
  $96 = HEAP8[$95>>0]|0; //@line 130 "./src/cpp/unrar/model.cpp"
  $97 = $96&255; //@line 130 "./src/cpp/unrar/model.cpp"
  $98 = $9; //@line 130 "./src/cpp/unrar/model.cpp"
  $99 = ((($98)) + -8|0); //@line 130 "./src/cpp/unrar/model.cpp"
  $100 = ((($99)) + 1|0); //@line 130 "./src/cpp/unrar/model.cpp"
  $101 = HEAP8[$100>>0]|0; //@line 130 "./src/cpp/unrar/model.cpp"
  $102 = $101&255; //@line 130 "./src/cpp/unrar/model.cpp"
  $103 = ($97|0)>($102|0); //@line 130 "./src/cpp/unrar/model.cpp"
  if ($103) {
   $104 = $9; //@line 132 "./src/cpp/unrar/model.cpp"
   $8 = $104; //@line 132 "./src/cpp/unrar/model.cpp"
   ;HEAP32[$10>>2]=HEAP32[$104>>2]|0;HEAP32[$10+4>>2]=HEAP32[$104+4>>2]|0; //@line 132 "./src/cpp/unrar/model.cpp"
   while(1) {
    $105 = $8; //@line 135 "./src/cpp/unrar/model.cpp"
    $106 = ((($105)) + -8|0); //@line 135 "./src/cpp/unrar/model.cpp"
    $107 = $8; //@line 135 "./src/cpp/unrar/model.cpp"
    ;HEAP32[$107>>2]=HEAP32[$106>>2]|0;HEAP32[$107+4>>2]=HEAP32[$106+4>>2]|0; //@line 135 "./src/cpp/unrar/model.cpp"
    $108 = $8; //@line 136 "./src/cpp/unrar/model.cpp"
    $109 = ((($108)) + -8|0); //@line 136 "./src/cpp/unrar/model.cpp"
    $8 = $109; //@line 136 "./src/cpp/unrar/model.cpp"
    $110 = ((($14)) + 4|0); //@line 136 "./src/cpp/unrar/model.cpp"
    $111 = ((($110)) + 4|0); //@line 136 "./src/cpp/unrar/model.cpp"
    $112 = HEAP32[$111>>2]|0; //@line 136 "./src/cpp/unrar/model.cpp"
    $113 = ($109|0)!=($112|0); //@line 136 "./src/cpp/unrar/model.cpp"
    if (!($113)) {
     break;
    }
    $114 = ((($10)) + 1|0); //@line 136 "./src/cpp/unrar/model.cpp"
    $115 = HEAP8[$114>>0]|0; //@line 136 "./src/cpp/unrar/model.cpp"
    $116 = $115&255; //@line 136 "./src/cpp/unrar/model.cpp"
    $117 = $8; //@line 136 "./src/cpp/unrar/model.cpp"
    $118 = ((($117)) + -8|0); //@line 136 "./src/cpp/unrar/model.cpp"
    $119 = ((($118)) + 1|0); //@line 136 "./src/cpp/unrar/model.cpp"
    $120 = HEAP8[$119>>0]|0; //@line 136 "./src/cpp/unrar/model.cpp"
    $121 = $120&255; //@line 136 "./src/cpp/unrar/model.cpp"
    $122 = ($116|0)>($121|0); //@line 136 "./src/cpp/unrar/model.cpp"
    if (!($122)) {
     break;
    }
   }
   $123 = $8; //@line 137 "./src/cpp/unrar/model.cpp"
   ;HEAP32[$123>>2]=HEAP32[$10>>2]|0;HEAP32[$123+4>>2]=HEAP32[$10+4>>2]|0; //@line 137 "./src/cpp/unrar/model.cpp"
  }
  $124 = $5; //@line 139 "./src/cpp/unrar/model.cpp"
  $125 = (($124) + -1)|0; //@line 139 "./src/cpp/unrar/model.cpp"
  $5 = $125; //@line 139 "./src/cpp/unrar/model.cpp"
  $126 = ($125|0)!=(0); //@line 139 "./src/cpp/unrar/model.cpp"
  if (!($126)) {
   break;
  }
 }
 $127 = $9; //@line 140 "./src/cpp/unrar/model.cpp"
 $128 = ((($127)) + 1|0); //@line 140 "./src/cpp/unrar/model.cpp"
 $129 = HEAP8[$128>>0]|0; //@line 140 "./src/cpp/unrar/model.cpp"
 $130 = $129&255; //@line 140 "./src/cpp/unrar/model.cpp"
 $131 = ($130|0)==(0); //@line 140 "./src/cpp/unrar/model.cpp"
 if ($131) {
  while(1) {
   $132 = $5; //@line 144 "./src/cpp/unrar/model.cpp"
   $133 = (($132) + 1)|0; //@line 144 "./src/cpp/unrar/model.cpp"
   $5 = $133; //@line 144 "./src/cpp/unrar/model.cpp"
   $134 = $9; //@line 145 "./src/cpp/unrar/model.cpp"
   $135 = ((($134)) + -8|0); //@line 145 "./src/cpp/unrar/model.cpp"
   $9 = $135; //@line 145 "./src/cpp/unrar/model.cpp"
   $136 = ((($135)) + 1|0); //@line 145 "./src/cpp/unrar/model.cpp"
   $137 = HEAP8[$136>>0]|0; //@line 145 "./src/cpp/unrar/model.cpp"
   $138 = $137&255; //@line 145 "./src/cpp/unrar/model.cpp"
   $139 = ($138|0)==(0); //@line 145 "./src/cpp/unrar/model.cpp"
   if (!($139)) {
    break;
   }
  }
  $140 = $5; //@line 146 "./src/cpp/unrar/model.cpp"
  $141 = $7; //@line 146 "./src/cpp/unrar/model.cpp"
  $142 = (($141) + ($140))|0; //@line 146 "./src/cpp/unrar/model.cpp"
  $7 = $142; //@line 146 "./src/cpp/unrar/model.cpp"
  $143 = $5; //@line 147 "./src/cpp/unrar/model.cpp"
  $144 = HEAP16[$14>>1]|0; //@line 147 "./src/cpp/unrar/model.cpp"
  $145 = $144&65535; //@line 147 "./src/cpp/unrar/model.cpp"
  $146 = (($145) - ($143))|0; //@line 147 "./src/cpp/unrar/model.cpp"
  $147 = $146&65535; //@line 147 "./src/cpp/unrar/model.cpp"
  HEAP16[$14>>1] = $147; //@line 147 "./src/cpp/unrar/model.cpp"
  $148 = $147&65535; //@line 147 "./src/cpp/unrar/model.cpp"
  $149 = ($148|0)==(1); //@line 147 "./src/cpp/unrar/model.cpp"
  if ($149) {
   $150 = ((($14)) + 4|0); //@line 149 "./src/cpp/unrar/model.cpp"
   $151 = ((($150)) + 4|0); //@line 149 "./src/cpp/unrar/model.cpp"
   $152 = HEAP32[$151>>2]|0; //@line 149 "./src/cpp/unrar/model.cpp"
   ;HEAP32[$11>>2]=HEAP32[$152>>2]|0;HEAP32[$11+4>>2]=HEAP32[$152+4>>2]|0; //@line 149 "./src/cpp/unrar/model.cpp"
   while(1) {
    $153 = ((($11)) + 1|0); //@line 152 "./src/cpp/unrar/model.cpp"
    $154 = HEAP8[$153>>0]|0; //@line 152 "./src/cpp/unrar/model.cpp"
    $155 = $154&255; //@line 152 "./src/cpp/unrar/model.cpp"
    $156 = $155 >> 1; //@line 152 "./src/cpp/unrar/model.cpp"
    $157 = ((($11)) + 1|0); //@line 152 "./src/cpp/unrar/model.cpp"
    $158 = HEAP8[$157>>0]|0; //@line 152 "./src/cpp/unrar/model.cpp"
    $159 = $158&255; //@line 152 "./src/cpp/unrar/model.cpp"
    $160 = (($159) - ($156))|0; //@line 152 "./src/cpp/unrar/model.cpp"
    $161 = $160&255; //@line 152 "./src/cpp/unrar/model.cpp"
    HEAP8[$157>>0] = $161; //@line 152 "./src/cpp/unrar/model.cpp"
    $162 = $7; //@line 153 "./src/cpp/unrar/model.cpp"
    $163 = $162 >> 1; //@line 153 "./src/cpp/unrar/model.cpp"
    $7 = $163; //@line 153 "./src/cpp/unrar/model.cpp"
    $164 = $7; //@line 154 "./src/cpp/unrar/model.cpp"
    $165 = ($164|0)>(1); //@line 154 "./src/cpp/unrar/model.cpp"
    if (!($165)) {
     break;
    }
   }
   $166 = $3; //@line 155 "./src/cpp/unrar/model.cpp"
   $167 = ((($166)) + 19088|0); //@line 155 "./src/cpp/unrar/model.cpp"
   $168 = ((($14)) + 4|0); //@line 155 "./src/cpp/unrar/model.cpp"
   $169 = ((($168)) + 4|0); //@line 155 "./src/cpp/unrar/model.cpp"
   $170 = HEAP32[$169>>2]|0; //@line 155 "./src/cpp/unrar/model.cpp"
   $171 = $4; //@line 155 "./src/cpp/unrar/model.cpp"
   $172 = (($171) + 1)|0; //@line 155 "./src/cpp/unrar/model.cpp"
   $173 = $172 >> 1; //@line 155 "./src/cpp/unrar/model.cpp"
   __ZN12SubAllocator9FreeUnitsEPvi($167,$170,$173); //@line 155 "./src/cpp/unrar/model.cpp"
   $174 = ((($14)) + 4|0); //@line 156 "./src/cpp/unrar/model.cpp"
   $175 = $3; //@line 156 "./src/cpp/unrar/model.cpp"
   $176 = ((($175)) + 1620|0); //@line 156 "./src/cpp/unrar/model.cpp"
   HEAP32[$176>>2] = $174; //@line 156 "./src/cpp/unrar/model.cpp"
   ;HEAP32[$174>>2]=HEAP32[$11>>2]|0;HEAP32[$174+4>>2]=HEAP32[$11+4>>2]|0; //@line 156 "./src/cpp/unrar/model.cpp"
   STACKTOP = sp;return; //@line 164 "./src/cpp/unrar/model.cpp"
  }
 }
 $177 = $7; //@line 159 "./src/cpp/unrar/model.cpp"
 $178 = $177 >> 1; //@line 159 "./src/cpp/unrar/model.cpp"
 $179 = $7; //@line 159 "./src/cpp/unrar/model.cpp"
 $180 = (($179) - ($178))|0; //@line 159 "./src/cpp/unrar/model.cpp"
 $7 = $180; //@line 159 "./src/cpp/unrar/model.cpp"
 $181 = ((($14)) + 4|0); //@line 159 "./src/cpp/unrar/model.cpp"
 $182 = HEAP16[$181>>1]|0; //@line 159 "./src/cpp/unrar/model.cpp"
 $183 = $182&65535; //@line 159 "./src/cpp/unrar/model.cpp"
 $184 = (($183) + ($180))|0; //@line 159 "./src/cpp/unrar/model.cpp"
 $185 = $184&65535; //@line 159 "./src/cpp/unrar/model.cpp"
 HEAP16[$181>>1] = $185; //@line 159 "./src/cpp/unrar/model.cpp"
 $186 = $4; //@line 160 "./src/cpp/unrar/model.cpp"
 $187 = (($186) + 1)|0; //@line 160 "./src/cpp/unrar/model.cpp"
 $188 = $187 >> 1; //@line 160 "./src/cpp/unrar/model.cpp"
 $12 = $188; //@line 160 "./src/cpp/unrar/model.cpp"
 $189 = HEAP16[$14>>1]|0; //@line 160 "./src/cpp/unrar/model.cpp"
 $190 = $189&65535; //@line 160 "./src/cpp/unrar/model.cpp"
 $191 = (($190) + 1)|0; //@line 160 "./src/cpp/unrar/model.cpp"
 $192 = $191 >> 1; //@line 160 "./src/cpp/unrar/model.cpp"
 $13 = $192; //@line 160 "./src/cpp/unrar/model.cpp"
 $193 = $12; //@line 161 "./src/cpp/unrar/model.cpp"
 $194 = $13; //@line 161 "./src/cpp/unrar/model.cpp"
 $195 = ($193|0)!=($194|0); //@line 161 "./src/cpp/unrar/model.cpp"
 if ($195) {
  $196 = $3; //@line 162 "./src/cpp/unrar/model.cpp"
  $197 = ((($196)) + 19088|0); //@line 162 "./src/cpp/unrar/model.cpp"
  $198 = ((($14)) + 4|0); //@line 162 "./src/cpp/unrar/model.cpp"
  $199 = ((($198)) + 4|0); //@line 162 "./src/cpp/unrar/model.cpp"
  $200 = HEAP32[$199>>2]|0; //@line 162 "./src/cpp/unrar/model.cpp"
  $201 = $12; //@line 162 "./src/cpp/unrar/model.cpp"
  $202 = $13; //@line 162 "./src/cpp/unrar/model.cpp"
  $203 = (__ZN12SubAllocator11ShrinkUnitsEPvii($197,$200,$201,$202)|0); //@line 162 "./src/cpp/unrar/model.cpp"
  $204 = ((($14)) + 4|0); //@line 162 "./src/cpp/unrar/model.cpp"
  $205 = ((($204)) + 4|0); //@line 162 "./src/cpp/unrar/model.cpp"
  HEAP32[$205>>2] = $203; //@line 162 "./src/cpp/unrar/model.cpp"
 }
 $206 = ((($14)) + 4|0); //@line 163 "./src/cpp/unrar/model.cpp"
 $207 = ((($206)) + 4|0); //@line 163 "./src/cpp/unrar/model.cpp"
 $208 = HEAP32[$207>>2]|0; //@line 163 "./src/cpp/unrar/model.cpp"
 $209 = $3; //@line 163 "./src/cpp/unrar/model.cpp"
 $210 = ((($209)) + 1620|0); //@line 163 "./src/cpp/unrar/model.cpp"
 HEAP32[$210>>2] = $208; //@line 163 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return; //@line 164 "./src/cpp/unrar/model.cpp"
}
function __Z10_PPMD_SWAPI12RARPPM_STATEEvRT_S2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 12 "./src/cpp/unrar/model.cpp"
 ;HEAP32[$4>>2]=HEAP32[$5>>2]|0;HEAP32[$4+4>>2]=HEAP32[$5+4>>2]|0; //@line 12 "./src/cpp/unrar/model.cpp"
 $6 = $3; //@line 12 "./src/cpp/unrar/model.cpp"
 $7 = $2; //@line 12 "./src/cpp/unrar/model.cpp"
 ;HEAP32[$7>>2]=HEAP32[$6>>2]|0;HEAP32[$7+4>>2]=HEAP32[$6+4>>2]|0; //@line 12 "./src/cpp/unrar/model.cpp"
 $8 = $3; //@line 12 "./src/cpp/unrar/model.cpp"
 ;HEAP32[$8>>2]=HEAP32[$4>>2]|0;HEAP32[$8+4>>2]=HEAP32[$4+4>>2]|0; //@line 12 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return; //@line 12 "./src/cpp/unrar/model.cpp"
}
function __ZN12SubAllocator9FreeUnitsEPvi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4; //@line 294 "./src/cpp/unrar/suballoc.cpp"
 $8 = ((($6)) + 42|0); //@line 294 "./src/cpp/unrar/suballoc.cpp"
 $9 = $5; //@line 294 "./src/cpp/unrar/suballoc.cpp"
 $10 = (($9) - 1)|0; //@line 294 "./src/cpp/unrar/suballoc.cpp"
 $11 = (($8) + ($10)|0); //@line 294 "./src/cpp/unrar/suballoc.cpp"
 $12 = HEAP8[$11>>0]|0; //@line 294 "./src/cpp/unrar/suballoc.cpp"
 $13 = $12&255; //@line 294 "./src/cpp/unrar/suballoc.cpp"
 __ZN12SubAllocator10InsertNodeEPvi($6,$7,$13); //@line 294 "./src/cpp/unrar/suballoc.cpp"
 STACKTOP = sp;return; //@line 295 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN12SubAllocator11ShrinkUnitsEPvii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $12 = $5;
 $13 = ((($12)) + 42|0); //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $14 = $7; //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $15 = (($14) - 1)|0; //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $16 = (($13) + ($15)|0); //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $17 = HEAP8[$16>>0]|0; //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $18 = $17&255; //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $9 = $18; //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $19 = ((($12)) + 42|0); //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $20 = $8; //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $21 = (($20) - 1)|0; //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $22 = (($19) + ($21)|0); //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $23 = HEAP8[$22>>0]|0; //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $24 = $23&255; //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $10 = $24; //@line 274 "./src/cpp/unrar/suballoc.cpp"
 $25 = $9; //@line 275 "./src/cpp/unrar/suballoc.cpp"
 $26 = $10; //@line 275 "./src/cpp/unrar/suballoc.cpp"
 $27 = ($25|0)==($26|0); //@line 275 "./src/cpp/unrar/suballoc.cpp"
 if ($27) {
  $28 = $6; //@line 276 "./src/cpp/unrar/suballoc.cpp"
  $4 = $28; //@line 276 "./src/cpp/unrar/suballoc.cpp"
  $47 = $4; //@line 289 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($47|0); //@line 289 "./src/cpp/unrar/suballoc.cpp"
 }
 $29 = ((($12)) + 184|0); //@line 277 "./src/cpp/unrar/suballoc.cpp"
 $30 = $10; //@line 277 "./src/cpp/unrar/suballoc.cpp"
 $31 = (($29) + ($30<<2)|0); //@line 277 "./src/cpp/unrar/suballoc.cpp"
 $32 = HEAP32[$31>>2]|0; //@line 277 "./src/cpp/unrar/suballoc.cpp"
 $33 = ($32|0)!=(0|0); //@line 277 "./src/cpp/unrar/suballoc.cpp"
 if ($33) {
  $34 = $10; //@line 279 "./src/cpp/unrar/suballoc.cpp"
  $35 = (__ZN12SubAllocator10RemoveNodeEi($12,$34)|0); //@line 279 "./src/cpp/unrar/suballoc.cpp"
  $11 = $35; //@line 279 "./src/cpp/unrar/suballoc.cpp"
  $36 = $11; //@line 280 "./src/cpp/unrar/suballoc.cpp"
  $37 = $6; //@line 280 "./src/cpp/unrar/suballoc.cpp"
  $38 = $8; //@line 280 "./src/cpp/unrar/suballoc.cpp"
  $39 = (__ZN12SubAllocator3U2BEi($12,$38)|0); //@line 280 "./src/cpp/unrar/suballoc.cpp"
  _memcpy(($36|0),($37|0),($39|0))|0; //@line 280 "./src/cpp/unrar/suballoc.cpp"
  $40 = $6; //@line 281 "./src/cpp/unrar/suballoc.cpp"
  $41 = $9; //@line 281 "./src/cpp/unrar/suballoc.cpp"
  __ZN12SubAllocator10InsertNodeEPvi($12,$40,$41); //@line 281 "./src/cpp/unrar/suballoc.cpp"
  $42 = $11; //@line 282 "./src/cpp/unrar/suballoc.cpp"
  $4 = $42; //@line 282 "./src/cpp/unrar/suballoc.cpp"
  $47 = $4; //@line 289 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($47|0); //@line 289 "./src/cpp/unrar/suballoc.cpp"
 } else {
  $43 = $6; //@line 286 "./src/cpp/unrar/suballoc.cpp"
  $44 = $9; //@line 286 "./src/cpp/unrar/suballoc.cpp"
  $45 = $10; //@line 286 "./src/cpp/unrar/suballoc.cpp"
  __ZN12SubAllocator10SplitBlockEPvii($12,$43,$44,$45); //@line 286 "./src/cpp/unrar/suballoc.cpp"
  $46 = $6; //@line 287 "./src/cpp/unrar/suballoc.cpp"
  $4 = $46; //@line 287 "./src/cpp/unrar/suballoc.cpp"
  $47 = $4; //@line 289 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($47|0); //@line 289 "./src/cpp/unrar/suballoc.cpp"
 }
 return (0)|0;
}
function __ZN8ModelPPM7CleanUpEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 19088|0); //@line 541 "./src/cpp/unrar/model.cpp"
 __ZN12SubAllocator16StopSubAllocatorEv($3); //@line 541 "./src/cpp/unrar/model.cpp"
 $4 = ((($2)) + 19088|0); //@line 542 "./src/cpp/unrar/model.cpp"
 (__ZN12SubAllocator17StartSubAllocatorEi($4,1)|0); //@line 542 "./src/cpp/unrar/model.cpp"
 __ZN8ModelPPM14StartModelRareEi($2,2); //@line 543 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return; //@line 544 "./src/cpp/unrar/model.cpp"
}
function __ZN8ModelPPM10DecodeInitEP6UnpackRi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp + 21|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $10 = $4;
 $11 = $5; //@line 549 "./src/cpp/unrar/model.cpp"
 $12 = (__ZN6Unpack7GetCharEv($11)|0); //@line 549 "./src/cpp/unrar/model.cpp"
 $7 = $12; //@line 549 "./src/cpp/unrar/model.cpp"
 $13 = $7; //@line 550 "./src/cpp/unrar/model.cpp"
 $14 = $13 & 32; //@line 550 "./src/cpp/unrar/model.cpp"
 $15 = ($14|0)!=(0); //@line 550 "./src/cpp/unrar/model.cpp"
 $16 = $15&1; //@line 550 "./src/cpp/unrar/model.cpp"
 $8 = $16; //@line 550 "./src/cpp/unrar/model.cpp"
 $17 = $8; //@line 553 "./src/cpp/unrar/model.cpp"
 $18 = $17&1; //@line 553 "./src/cpp/unrar/model.cpp"
 if ($18) {
  $19 = $5; //@line 554 "./src/cpp/unrar/model.cpp"
  $20 = (__ZN6Unpack7GetCharEv($19)|0); //@line 554 "./src/cpp/unrar/model.cpp"
  $9 = $20; //@line 554 "./src/cpp/unrar/model.cpp"
 } else {
  $21 = ((($10)) + 19088|0); //@line 556 "./src/cpp/unrar/model.cpp"
  $22 = (__ZN12SubAllocator18GetAllocatedMemoryEv($21)|0); //@line 556 "./src/cpp/unrar/model.cpp"
  $23 = ($22|0)==(0); //@line 556 "./src/cpp/unrar/model.cpp"
  if ($23) {
   $$expand_i1_val = 0; //@line 557 "./src/cpp/unrar/model.cpp"
   HEAP8[$3>>0] = $$expand_i1_val; //@line 557 "./src/cpp/unrar/model.cpp"
   $$pre_trunc = HEAP8[$3>>0]|0; //@line 575 "./src/cpp/unrar/model.cpp"
   $52 = $$pre_trunc&1; //@line 575 "./src/cpp/unrar/model.cpp"
   STACKTOP = sp;return ($52|0); //@line 575 "./src/cpp/unrar/model.cpp"
  }
 }
 $24 = $7; //@line 558 "./src/cpp/unrar/model.cpp"
 $25 = $24 & 64; //@line 558 "./src/cpp/unrar/model.cpp"
 $26 = ($25|0)!=(0); //@line 558 "./src/cpp/unrar/model.cpp"
 if ($26) {
  $27 = $5; //@line 559 "./src/cpp/unrar/model.cpp"
  $28 = (__ZN6Unpack7GetCharEv($27)|0); //@line 559 "./src/cpp/unrar/model.cpp"
  $29 = $6; //@line 559 "./src/cpp/unrar/model.cpp"
  HEAP32[$29>>2] = $28; //@line 559 "./src/cpp/unrar/model.cpp"
 }
 $30 = ((($10)) + 19060|0); //@line 560 "./src/cpp/unrar/model.cpp"
 $31 = $5; //@line 560 "./src/cpp/unrar/model.cpp"
 __ZN10RangeCoder11InitDecoderEP6Unpack($30,$31); //@line 560 "./src/cpp/unrar/model.cpp"
 $32 = $8; //@line 561 "./src/cpp/unrar/model.cpp"
 $33 = $32&1; //@line 561 "./src/cpp/unrar/model.cpp"
 do {
  if ($33) {
   $34 = $7; //@line 563 "./src/cpp/unrar/model.cpp"
   $35 = $34 & 31; //@line 563 "./src/cpp/unrar/model.cpp"
   $36 = (($35) + 1)|0; //@line 563 "./src/cpp/unrar/model.cpp"
   $7 = $36; //@line 563 "./src/cpp/unrar/model.cpp"
   $37 = $7; //@line 564 "./src/cpp/unrar/model.cpp"
   $38 = ($37|0)>(16); //@line 564 "./src/cpp/unrar/model.cpp"
   if ($38) {
    $39 = $7; //@line 565 "./src/cpp/unrar/model.cpp"
    $40 = (($39) - 16)|0; //@line 565 "./src/cpp/unrar/model.cpp"
    $41 = ($40*3)|0; //@line 565 "./src/cpp/unrar/model.cpp"
    $42 = (16 + ($41))|0; //@line 565 "./src/cpp/unrar/model.cpp"
    $7 = $42; //@line 565 "./src/cpp/unrar/model.cpp"
   }
   $43 = $7; //@line 566 "./src/cpp/unrar/model.cpp"
   $44 = ($43|0)==(1); //@line 566 "./src/cpp/unrar/model.cpp"
   $45 = ((($10)) + 19088|0);
   if (!($44)) {
    $46 = $9; //@line 571 "./src/cpp/unrar/model.cpp"
    $47 = (($46) + 1)|0; //@line 571 "./src/cpp/unrar/model.cpp"
    (__ZN12SubAllocator17StartSubAllocatorEi($45,$47)|0); //@line 571 "./src/cpp/unrar/model.cpp"
    $48 = $7; //@line 572 "./src/cpp/unrar/model.cpp"
    __ZN8ModelPPM14StartModelRareEi($10,$48); //@line 572 "./src/cpp/unrar/model.cpp"
    break;
   }
   __ZN12SubAllocator16StopSubAllocatorEv($45); //@line 568 "./src/cpp/unrar/model.cpp"
   $$expand_i1_val2 = 0; //@line 569 "./src/cpp/unrar/model.cpp"
   HEAP8[$3>>0] = $$expand_i1_val2; //@line 569 "./src/cpp/unrar/model.cpp"
   $$pre_trunc = HEAP8[$3>>0]|0; //@line 575 "./src/cpp/unrar/model.cpp"
   $52 = $$pre_trunc&1; //@line 575 "./src/cpp/unrar/model.cpp"
   STACKTOP = sp;return ($52|0); //@line 575 "./src/cpp/unrar/model.cpp"
  }
 } while(0);
 $49 = ((($10)) + 1608|0); //@line 574 "./src/cpp/unrar/model.cpp"
 $50 = HEAP32[$49>>2]|0; //@line 574 "./src/cpp/unrar/model.cpp"
 $51 = ($50|0)!=(0|0); //@line 574 "./src/cpp/unrar/model.cpp"
 $$expand_i1_val4 = $51&1; //@line 574 "./src/cpp/unrar/model.cpp"
 HEAP8[$3>>0] = $$expand_i1_val4; //@line 574 "./src/cpp/unrar/model.cpp"
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 575 "./src/cpp/unrar/model.cpp"
 $52 = $$pre_trunc&1; //@line 575 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return ($52|0); //@line 575 "./src/cpp/unrar/model.cpp"
}
function __ZN12SubAllocator18GetAllocatedMemoryEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 80 "./src/cpp/unrar/suballoc.hpp"
 STACKTOP = sp;return ($3|0); //@line 80 "./src/cpp/unrar/suballoc.hpp"
}
function __ZN8ModelPPM10DecodeCharEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2;
 $5 = ((($4)) + 1608|0); //@line 580 "./src/cpp/unrar/model.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 580 "./src/cpp/unrar/model.cpp"
 $7 = ((($4)) + 19088|0); //@line 580 "./src/cpp/unrar/model.cpp"
 $8 = ((($7)) + 336|0); //@line 580 "./src/cpp/unrar/model.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 580 "./src/cpp/unrar/model.cpp"
 $10 = ($6>>>0)<=($9>>>0); //@line 580 "./src/cpp/unrar/model.cpp"
 if (!($10)) {
  $11 = ((($4)) + 1608|0); //@line 580 "./src/cpp/unrar/model.cpp"
  $12 = HEAP32[$11>>2]|0; //@line 580 "./src/cpp/unrar/model.cpp"
  $13 = ((($4)) + 19088|0); //@line 580 "./src/cpp/unrar/model.cpp"
  $14 = ((($13)) + 344|0); //@line 580 "./src/cpp/unrar/model.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 580 "./src/cpp/unrar/model.cpp"
  $16 = ($12>>>0)>($15>>>0); //@line 580 "./src/cpp/unrar/model.cpp"
  if (!($16)) {
   $17 = ((($4)) + 1608|0); //@line 582 "./src/cpp/unrar/model.cpp"
   $18 = HEAP32[$17>>2]|0; //@line 582 "./src/cpp/unrar/model.cpp"
   $19 = HEAP16[$18>>1]|0; //@line 582 "./src/cpp/unrar/model.cpp"
   $20 = $19&65535; //@line 582 "./src/cpp/unrar/model.cpp"
   $21 = ($20|0)!=(1); //@line 582 "./src/cpp/unrar/model.cpp"
   $22 = ((($4)) + 1608|0);
   $23 = HEAP32[$22>>2]|0;
   do {
    if ($21) {
     $24 = ((($23)) + 4|0); //@line 584 "./src/cpp/unrar/model.cpp"
     $25 = ((($24)) + 4|0); //@line 584 "./src/cpp/unrar/model.cpp"
     $26 = HEAP32[$25>>2]|0; //@line 584 "./src/cpp/unrar/model.cpp"
     $27 = ((($4)) + 19088|0); //@line 584 "./src/cpp/unrar/model.cpp"
     $28 = ((($27)) + 336|0); //@line 584 "./src/cpp/unrar/model.cpp"
     $29 = HEAP32[$28>>2]|0; //@line 584 "./src/cpp/unrar/model.cpp"
     $30 = ($26>>>0)<=($29>>>0); //@line 584 "./src/cpp/unrar/model.cpp"
     if (!($30)) {
      $31 = ((($4)) + 1608|0); //@line 584 "./src/cpp/unrar/model.cpp"
      $32 = HEAP32[$31>>2]|0; //@line 584 "./src/cpp/unrar/model.cpp"
      $33 = ((($32)) + 4|0); //@line 584 "./src/cpp/unrar/model.cpp"
      $34 = ((($33)) + 4|0); //@line 584 "./src/cpp/unrar/model.cpp"
      $35 = HEAP32[$34>>2]|0; //@line 584 "./src/cpp/unrar/model.cpp"
      $36 = ((($4)) + 19088|0); //@line 584 "./src/cpp/unrar/model.cpp"
      $37 = ((($36)) + 344|0); //@line 584 "./src/cpp/unrar/model.cpp"
      $38 = HEAP32[$37>>2]|0; //@line 584 "./src/cpp/unrar/model.cpp"
      $39 = ($35>>>0)>($38>>>0); //@line 584 "./src/cpp/unrar/model.cpp"
      if (!($39)) {
       $40 = ((($4)) + 1608|0); //@line 586 "./src/cpp/unrar/model.cpp"
       $41 = HEAP32[$40>>2]|0; //@line 586 "./src/cpp/unrar/model.cpp"
       $42 = (__ZN14RARPPM_CONTEXT13decodeSymbol1EP8ModelPPM($41,$4)|0); //@line 586 "./src/cpp/unrar/model.cpp"
       if ($42) {
        break;
       }
       $1 = -1; //@line 587 "./src/cpp/unrar/model.cpp"
       $181 = $1; //@line 617 "./src/cpp/unrar/model.cpp"
       STACKTOP = sp;return ($181|0); //@line 617 "./src/cpp/unrar/model.cpp"
      }
     }
     $1 = -1; //@line 585 "./src/cpp/unrar/model.cpp"
     $181 = $1; //@line 617 "./src/cpp/unrar/model.cpp"
     STACKTOP = sp;return ($181|0); //@line 617 "./src/cpp/unrar/model.cpp"
    } else {
     __ZN14RARPPM_CONTEXT15decodeBinSymbolEP8ModelPPM($23,$4); //@line 590 "./src/cpp/unrar/model.cpp"
    }
   } while(0);
   $43 = ((($4)) + 19060|0); //@line 591 "./src/cpp/unrar/model.cpp"
   __ZN10RangeCoder6DecodeEv($43); //@line 591 "./src/cpp/unrar/model.cpp"
   L15: while(1) {
    $44 = ((($4)) + 1620|0); //@line 592 "./src/cpp/unrar/model.cpp"
    $45 = HEAP32[$44>>2]|0; //@line 592 "./src/cpp/unrar/model.cpp"
    $46 = ($45|0)!=(0|0); //@line 592 "./src/cpp/unrar/model.cpp"
    $47 = $46 ^ 1; //@line 592 "./src/cpp/unrar/model.cpp"
    if (!($47)) {
     label = 24;
     break;
    }
    while(1) {
     $48 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $49 = HEAP32[$48>>2]|0; //@line 594 "./src/cpp/unrar/model.cpp"
     $50 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $51 = HEAP32[$50>>2]|0; //@line 594 "./src/cpp/unrar/model.cpp"
     $52 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $53 = ((($52)) + 8|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $54 = HEAP32[$53>>2]|0; //@line 594 "./src/cpp/unrar/model.cpp"
     $55 = (($51) + ($54))|0; //@line 594 "./src/cpp/unrar/model.cpp"
     $56 = $49 ^ $55; //@line 594 "./src/cpp/unrar/model.cpp"
     $57 = ($56>>>0)<(16777216); //@line 594 "./src/cpp/unrar/model.cpp"
     if (!($57)) {
      $58 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
      $59 = ((($58)) + 8|0); //@line 594 "./src/cpp/unrar/model.cpp"
      $60 = HEAP32[$59>>2]|0; //@line 594 "./src/cpp/unrar/model.cpp"
      $61 = ($60>>>0)<(32768); //@line 594 "./src/cpp/unrar/model.cpp"
      if (!($61)) {
       break;
      }
      $62 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
      $63 = HEAP32[$62>>2]|0; //@line 594 "./src/cpp/unrar/model.cpp"
      $64 = (0 - ($63))|0; //@line 594 "./src/cpp/unrar/model.cpp"
      $65 = $64 & 32767; //@line 594 "./src/cpp/unrar/model.cpp"
      $66 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
      $67 = ((($66)) + 8|0); //@line 594 "./src/cpp/unrar/model.cpp"
      HEAP32[$67>>2] = $65; //@line 594 "./src/cpp/unrar/model.cpp"
     }
     $68 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $69 = ((($68)) + 4|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $70 = HEAP32[$69>>2]|0; //@line 594 "./src/cpp/unrar/model.cpp"
     $71 = $70 << 8; //@line 594 "./src/cpp/unrar/model.cpp"
     $72 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $73 = ((($72)) + 24|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $74 = HEAP32[$73>>2]|0; //@line 594 "./src/cpp/unrar/model.cpp"
     $75 = (__ZN6Unpack7GetCharEv($74)|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $76 = $71 | $75; //@line 594 "./src/cpp/unrar/model.cpp"
     $77 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $78 = ((($77)) + 4|0); //@line 594 "./src/cpp/unrar/model.cpp"
     HEAP32[$78>>2] = $76; //@line 594 "./src/cpp/unrar/model.cpp"
     $79 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $80 = ((($79)) + 8|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $81 = HEAP32[$80>>2]|0; //@line 594 "./src/cpp/unrar/model.cpp"
     $82 = $81 << 8; //@line 594 "./src/cpp/unrar/model.cpp"
     HEAP32[$80>>2] = $82; //@line 594 "./src/cpp/unrar/model.cpp"
     $83 = ((($4)) + 19060|0); //@line 594 "./src/cpp/unrar/model.cpp"
     $84 = HEAP32[$83>>2]|0; //@line 594 "./src/cpp/unrar/model.cpp"
     $85 = $84 << 8; //@line 594 "./src/cpp/unrar/model.cpp"
     HEAP32[$83>>2] = $85; //@line 594 "./src/cpp/unrar/model.cpp"
    }
    while(1) {
     $86 = ((($4)) + 1632|0); //@line 597 "./src/cpp/unrar/model.cpp"
     $87 = HEAP32[$86>>2]|0; //@line 597 "./src/cpp/unrar/model.cpp"
     $88 = (($87) + 1)|0; //@line 597 "./src/cpp/unrar/model.cpp"
     HEAP32[$86>>2] = $88; //@line 597 "./src/cpp/unrar/model.cpp"
     $89 = ((($4)) + 1608|0); //@line 598 "./src/cpp/unrar/model.cpp"
     $90 = HEAP32[$89>>2]|0; //@line 598 "./src/cpp/unrar/model.cpp"
     $91 = ((($90)) + 12|0); //@line 598 "./src/cpp/unrar/model.cpp"
     $92 = HEAP32[$91>>2]|0; //@line 598 "./src/cpp/unrar/model.cpp"
     $93 = ((($4)) + 1608|0); //@line 598 "./src/cpp/unrar/model.cpp"
     HEAP32[$93>>2] = $92; //@line 598 "./src/cpp/unrar/model.cpp"
     $94 = ((($4)) + 1608|0); //@line 599 "./src/cpp/unrar/model.cpp"
     $95 = HEAP32[$94>>2]|0; //@line 599 "./src/cpp/unrar/model.cpp"
     $96 = ((($4)) + 19088|0); //@line 599 "./src/cpp/unrar/model.cpp"
     $97 = ((($96)) + 336|0); //@line 599 "./src/cpp/unrar/model.cpp"
     $98 = HEAP32[$97>>2]|0; //@line 599 "./src/cpp/unrar/model.cpp"
     $99 = ($95>>>0)<=($98>>>0); //@line 599 "./src/cpp/unrar/model.cpp"
     if ($99) {
      label = 19;
      break L15;
     }
     $100 = ((($4)) + 1608|0); //@line 599 "./src/cpp/unrar/model.cpp"
     $101 = HEAP32[$100>>2]|0; //@line 599 "./src/cpp/unrar/model.cpp"
     $102 = ((($4)) + 19088|0); //@line 599 "./src/cpp/unrar/model.cpp"
     $103 = ((($102)) + 344|0); //@line 599 "./src/cpp/unrar/model.cpp"
     $104 = HEAP32[$103>>2]|0; //@line 599 "./src/cpp/unrar/model.cpp"
     $105 = ($101>>>0)>($104>>>0); //@line 599 "./src/cpp/unrar/model.cpp"
     if ($105) {
      label = 19;
      break L15;
     }
     $106 = ((($4)) + 1608|0); //@line 601 "./src/cpp/unrar/model.cpp"
     $107 = HEAP32[$106>>2]|0; //@line 601 "./src/cpp/unrar/model.cpp"
     $108 = HEAP16[$107>>1]|0; //@line 601 "./src/cpp/unrar/model.cpp"
     $109 = $108&65535; //@line 601 "./src/cpp/unrar/model.cpp"
     $110 = ((($4)) + 1624|0); //@line 601 "./src/cpp/unrar/model.cpp"
     $111 = HEAP32[$110>>2]|0; //@line 601 "./src/cpp/unrar/model.cpp"
     $112 = ($109|0)==($111|0); //@line 601 "./src/cpp/unrar/model.cpp"
     if (!($112)) {
      break;
     }
    }
    $113 = ((($4)) + 1608|0); //@line 602 "./src/cpp/unrar/model.cpp"
    $114 = HEAP32[$113>>2]|0; //@line 602 "./src/cpp/unrar/model.cpp"
    $115 = (__ZN14RARPPM_CONTEXT13decodeSymbol2EP8ModelPPM($114,$4)|0); //@line 602 "./src/cpp/unrar/model.cpp"
    if (!($115)) {
     label = 22;
     break;
    }
    $116 = ((($4)) + 19060|0); //@line 604 "./src/cpp/unrar/model.cpp"
    __ZN10RangeCoder6DecodeEv($116); //@line 604 "./src/cpp/unrar/model.cpp"
   }
   if ((label|0) == 19) {
    $1 = -1; //@line 600 "./src/cpp/unrar/model.cpp"
    $181 = $1; //@line 617 "./src/cpp/unrar/model.cpp"
    STACKTOP = sp;return ($181|0); //@line 617 "./src/cpp/unrar/model.cpp"
   }
   else if ((label|0) == 22) {
    $1 = -1; //@line 603 "./src/cpp/unrar/model.cpp"
    $181 = $1; //@line 617 "./src/cpp/unrar/model.cpp"
    STACKTOP = sp;return ($181|0); //@line 617 "./src/cpp/unrar/model.cpp"
   }
   else if ((label|0) == 24) {
    $117 = ((($4)) + 1620|0); //@line 606 "./src/cpp/unrar/model.cpp"
    $118 = HEAP32[$117>>2]|0; //@line 606 "./src/cpp/unrar/model.cpp"
    $119 = HEAP8[$118>>0]|0; //@line 606 "./src/cpp/unrar/model.cpp"
    $120 = $119&255; //@line 606 "./src/cpp/unrar/model.cpp"
    $3 = $120; //@line 606 "./src/cpp/unrar/model.cpp"
    $121 = ((($4)) + 1632|0); //@line 607 "./src/cpp/unrar/model.cpp"
    $122 = HEAP32[$121>>2]|0; //@line 607 "./src/cpp/unrar/model.cpp"
    $123 = ($122|0)!=(0); //@line 607 "./src/cpp/unrar/model.cpp"
    if ($123) {
     label = 27;
    } else {
     $124 = ((($4)) + 1620|0); //@line 607 "./src/cpp/unrar/model.cpp"
     $125 = HEAP32[$124>>2]|0; //@line 607 "./src/cpp/unrar/model.cpp"
     $126 = ((($125)) + 4|0); //@line 607 "./src/cpp/unrar/model.cpp"
     $127 = HEAP32[$126>>2]|0; //@line 607 "./src/cpp/unrar/model.cpp"
     $128 = ((($4)) + 19088|0); //@line 607 "./src/cpp/unrar/model.cpp"
     $129 = ((($128)) + 336|0); //@line 607 "./src/cpp/unrar/model.cpp"
     $130 = HEAP32[$129>>2]|0; //@line 607 "./src/cpp/unrar/model.cpp"
     $131 = ($127>>>0)>($130>>>0); //@line 607 "./src/cpp/unrar/model.cpp"
     if ($131) {
      $132 = ((($4)) + 1620|0); //@line 608 "./src/cpp/unrar/model.cpp"
      $133 = HEAP32[$132>>2]|0; //@line 608 "./src/cpp/unrar/model.cpp"
      $134 = ((($133)) + 4|0); //@line 608 "./src/cpp/unrar/model.cpp"
      $135 = HEAP32[$134>>2]|0; //@line 608 "./src/cpp/unrar/model.cpp"
      $136 = ((($4)) + 1616|0); //@line 608 "./src/cpp/unrar/model.cpp"
      HEAP32[$136>>2] = $135; //@line 608 "./src/cpp/unrar/model.cpp"
      $137 = ((($4)) + 1608|0); //@line 608 "./src/cpp/unrar/model.cpp"
      HEAP32[$137>>2] = $135; //@line 608 "./src/cpp/unrar/model.cpp"
     } else {
      label = 27;
     }
    }
    if ((label|0) == 27) {
     __ZN8ModelPPM11UpdateModelEv($4); //@line 611 "./src/cpp/unrar/model.cpp"
     $138 = ((($4)) + 2672|0); //@line 612 "./src/cpp/unrar/model.cpp"
     $139 = HEAP8[$138>>0]|0; //@line 612 "./src/cpp/unrar/model.cpp"
     $140 = $139&255; //@line 612 "./src/cpp/unrar/model.cpp"
     $141 = ($140|0)==(0); //@line 612 "./src/cpp/unrar/model.cpp"
     if ($141) {
      __ZN8ModelPPM9ClearMaskEv($4); //@line 613 "./src/cpp/unrar/model.cpp"
     }
    }
    while(1) {
     $142 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $143 = HEAP32[$142>>2]|0; //@line 615 "./src/cpp/unrar/model.cpp"
     $144 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $145 = HEAP32[$144>>2]|0; //@line 615 "./src/cpp/unrar/model.cpp"
     $146 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $147 = ((($146)) + 8|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $148 = HEAP32[$147>>2]|0; //@line 615 "./src/cpp/unrar/model.cpp"
     $149 = (($145) + ($148))|0; //@line 615 "./src/cpp/unrar/model.cpp"
     $150 = $143 ^ $149; //@line 615 "./src/cpp/unrar/model.cpp"
     $151 = ($150>>>0)<(16777216); //@line 615 "./src/cpp/unrar/model.cpp"
     if (!($151)) {
      $152 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
      $153 = ((($152)) + 8|0); //@line 615 "./src/cpp/unrar/model.cpp"
      $154 = HEAP32[$153>>2]|0; //@line 615 "./src/cpp/unrar/model.cpp"
      $155 = ($154>>>0)<(32768); //@line 615 "./src/cpp/unrar/model.cpp"
      if (!($155)) {
       break;
      }
      $156 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
      $157 = HEAP32[$156>>2]|0; //@line 615 "./src/cpp/unrar/model.cpp"
      $158 = (0 - ($157))|0; //@line 615 "./src/cpp/unrar/model.cpp"
      $159 = $158 & 32767; //@line 615 "./src/cpp/unrar/model.cpp"
      $160 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
      $161 = ((($160)) + 8|0); //@line 615 "./src/cpp/unrar/model.cpp"
      HEAP32[$161>>2] = $159; //@line 615 "./src/cpp/unrar/model.cpp"
     }
     $162 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $163 = ((($162)) + 4|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $164 = HEAP32[$163>>2]|0; //@line 615 "./src/cpp/unrar/model.cpp"
     $165 = $164 << 8; //@line 615 "./src/cpp/unrar/model.cpp"
     $166 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $167 = ((($166)) + 24|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $168 = HEAP32[$167>>2]|0; //@line 615 "./src/cpp/unrar/model.cpp"
     $169 = (__ZN6Unpack7GetCharEv($168)|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $170 = $165 | $169; //@line 615 "./src/cpp/unrar/model.cpp"
     $171 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $172 = ((($171)) + 4|0); //@line 615 "./src/cpp/unrar/model.cpp"
     HEAP32[$172>>2] = $170; //@line 615 "./src/cpp/unrar/model.cpp"
     $173 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $174 = ((($173)) + 8|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $175 = HEAP32[$174>>2]|0; //@line 615 "./src/cpp/unrar/model.cpp"
     $176 = $175 << 8; //@line 615 "./src/cpp/unrar/model.cpp"
     HEAP32[$174>>2] = $176; //@line 615 "./src/cpp/unrar/model.cpp"
     $177 = ((($4)) + 19060|0); //@line 615 "./src/cpp/unrar/model.cpp"
     $178 = HEAP32[$177>>2]|0; //@line 615 "./src/cpp/unrar/model.cpp"
     $179 = $178 << 8; //@line 615 "./src/cpp/unrar/model.cpp"
     HEAP32[$177>>2] = $179; //@line 615 "./src/cpp/unrar/model.cpp"
    }
    $180 = $3; //@line 616 "./src/cpp/unrar/model.cpp"
    $1 = $180; //@line 616 "./src/cpp/unrar/model.cpp"
    $181 = $1; //@line 617 "./src/cpp/unrar/model.cpp"
    STACKTOP = sp;return ($181|0); //@line 617 "./src/cpp/unrar/model.cpp"
   }
  }
 }
 $1 = -1; //@line 581 "./src/cpp/unrar/model.cpp"
 $181 = $1; //@line 617 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return ($181|0); //@line 617 "./src/cpp/unrar/model.cpp"
}
function __ZN14RARPPM_CONTEXT13decodeSymbol1EP8ModelPPM($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$expand_i1_val8 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 24|0;
 $3 = $0;
 $4 = $1;
 $9 = $3;
 $10 = ((($9)) + 4|0); //@line 406 "./src/cpp/unrar/model.cpp"
 $11 = HEAP16[$10>>1]|0; //@line 406 "./src/cpp/unrar/model.cpp"
 $12 = $11&65535; //@line 406 "./src/cpp/unrar/model.cpp"
 $13 = $4; //@line 406 "./src/cpp/unrar/model.cpp"
 $14 = ((($13)) + 19060|0); //@line 406 "./src/cpp/unrar/model.cpp"
 $15 = ((($14)) + 12|0); //@line 406 "./src/cpp/unrar/model.cpp"
 $16 = ((($15)) + 8|0); //@line 406 "./src/cpp/unrar/model.cpp"
 HEAP32[$16>>2] = $12; //@line 406 "./src/cpp/unrar/model.cpp"
 $17 = ((($9)) + 4|0); //@line 407 "./src/cpp/unrar/model.cpp"
 $18 = ((($17)) + 4|0); //@line 407 "./src/cpp/unrar/model.cpp"
 $19 = HEAP32[$18>>2]|0; //@line 407 "./src/cpp/unrar/model.cpp"
 $5 = $19; //@line 407 "./src/cpp/unrar/model.cpp"
 $20 = $4; //@line 409 "./src/cpp/unrar/model.cpp"
 $21 = ((($20)) + 19060|0); //@line 409 "./src/cpp/unrar/model.cpp"
 $22 = (__ZN10RangeCoder15GetCurrentCountEv($21)|0); //@line 409 "./src/cpp/unrar/model.cpp"
 $8 = $22; //@line 409 "./src/cpp/unrar/model.cpp"
 $23 = $8; //@line 410 "./src/cpp/unrar/model.cpp"
 $24 = $4; //@line 410 "./src/cpp/unrar/model.cpp"
 $25 = ((($24)) + 19060|0); //@line 410 "./src/cpp/unrar/model.cpp"
 $26 = ((($25)) + 12|0); //@line 410 "./src/cpp/unrar/model.cpp"
 $27 = ((($26)) + 8|0); //@line 410 "./src/cpp/unrar/model.cpp"
 $28 = HEAP32[$27>>2]|0; //@line 410 "./src/cpp/unrar/model.cpp"
 $29 = ($23|0)>=($28|0); //@line 410 "./src/cpp/unrar/model.cpp"
 if ($29) {
  $$expand_i1_val = 0; //@line 411 "./src/cpp/unrar/model.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 411 "./src/cpp/unrar/model.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 446 "./src/cpp/unrar/model.cpp"
  $166 = $$pre_trunc&1; //@line 446 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($166|0); //@line 446 "./src/cpp/unrar/model.cpp"
 }
 $30 = $8; //@line 412 "./src/cpp/unrar/model.cpp"
 $31 = $5; //@line 412 "./src/cpp/unrar/model.cpp"
 $32 = ((($31)) + 1|0); //@line 412 "./src/cpp/unrar/model.cpp"
 $33 = HEAP8[$32>>0]|0; //@line 412 "./src/cpp/unrar/model.cpp"
 $34 = $33&255; //@line 412 "./src/cpp/unrar/model.cpp"
 $7 = $34; //@line 412 "./src/cpp/unrar/model.cpp"
 $35 = ($30|0)<($34|0); //@line 412 "./src/cpp/unrar/model.cpp"
 if ($35) {
  $36 = $7; //@line 414 "./src/cpp/unrar/model.cpp"
  $37 = $4; //@line 414 "./src/cpp/unrar/model.cpp"
  $38 = ((($37)) + 19060|0); //@line 414 "./src/cpp/unrar/model.cpp"
  $39 = ((($38)) + 12|0); //@line 414 "./src/cpp/unrar/model.cpp"
  $40 = ((($39)) + 4|0); //@line 414 "./src/cpp/unrar/model.cpp"
  HEAP32[$40>>2] = $36; //@line 414 "./src/cpp/unrar/model.cpp"
  $41 = $36<<1; //@line 414 "./src/cpp/unrar/model.cpp"
  $42 = $4; //@line 414 "./src/cpp/unrar/model.cpp"
  $43 = ((($42)) + 19060|0); //@line 414 "./src/cpp/unrar/model.cpp"
  $44 = ((($43)) + 12|0); //@line 414 "./src/cpp/unrar/model.cpp"
  $45 = ((($44)) + 8|0); //@line 414 "./src/cpp/unrar/model.cpp"
  $46 = HEAP32[$45>>2]|0; //@line 414 "./src/cpp/unrar/model.cpp"
  $47 = ($41>>>0)>($46>>>0); //@line 414 "./src/cpp/unrar/model.cpp"
  $48 = $47&1; //@line 414 "./src/cpp/unrar/model.cpp"
  $49 = $4; //@line 414 "./src/cpp/unrar/model.cpp"
  $50 = ((($49)) + 2673|0); //@line 414 "./src/cpp/unrar/model.cpp"
  HEAP8[$50>>0] = $48; //@line 414 "./src/cpp/unrar/model.cpp"
  $51 = $4; //@line 415 "./src/cpp/unrar/model.cpp"
  $52 = ((($51)) + 2673|0); //@line 415 "./src/cpp/unrar/model.cpp"
  $53 = HEAP8[$52>>0]|0; //@line 415 "./src/cpp/unrar/model.cpp"
  $54 = $53&255; //@line 415 "./src/cpp/unrar/model.cpp"
  $55 = $4; //@line 415 "./src/cpp/unrar/model.cpp"
  $56 = ((($55)) + 1640|0); //@line 415 "./src/cpp/unrar/model.cpp"
  $57 = HEAP32[$56>>2]|0; //@line 415 "./src/cpp/unrar/model.cpp"
  $58 = (($57) + ($54))|0; //@line 415 "./src/cpp/unrar/model.cpp"
  HEAP32[$56>>2] = $58; //@line 415 "./src/cpp/unrar/model.cpp"
  $59 = $7; //@line 416 "./src/cpp/unrar/model.cpp"
  $60 = (($59) + 4)|0; //@line 416 "./src/cpp/unrar/model.cpp"
  $7 = $60; //@line 416 "./src/cpp/unrar/model.cpp"
  $61 = $60&255; //@line 416 "./src/cpp/unrar/model.cpp"
  $62 = $5; //@line 416 "./src/cpp/unrar/model.cpp"
  $63 = $4; //@line 416 "./src/cpp/unrar/model.cpp"
  $64 = ((($63)) + 1620|0); //@line 416 "./src/cpp/unrar/model.cpp"
  HEAP32[$64>>2] = $62; //@line 416 "./src/cpp/unrar/model.cpp"
  $65 = ((($62)) + 1|0); //@line 416 "./src/cpp/unrar/model.cpp"
  HEAP8[$65>>0] = $61; //@line 416 "./src/cpp/unrar/model.cpp"
  $66 = ((($9)) + 4|0); //@line 417 "./src/cpp/unrar/model.cpp"
  $67 = HEAP16[$66>>1]|0; //@line 417 "./src/cpp/unrar/model.cpp"
  $68 = $67&65535; //@line 417 "./src/cpp/unrar/model.cpp"
  $69 = (($68) + 4)|0; //@line 417 "./src/cpp/unrar/model.cpp"
  $70 = $69&65535; //@line 417 "./src/cpp/unrar/model.cpp"
  HEAP16[$66>>1] = $70; //@line 417 "./src/cpp/unrar/model.cpp"
  $71 = $7; //@line 418 "./src/cpp/unrar/model.cpp"
  $72 = ($71|0)>(124); //@line 418 "./src/cpp/unrar/model.cpp"
  if ($72) {
   $73 = $4; //@line 419 "./src/cpp/unrar/model.cpp"
   __ZN14RARPPM_CONTEXT7rescaleEP8ModelPPM($9,$73); //@line 419 "./src/cpp/unrar/model.cpp"
  }
  $74 = $4; //@line 420 "./src/cpp/unrar/model.cpp"
  $75 = ((($74)) + 19060|0); //@line 420 "./src/cpp/unrar/model.cpp"
  $76 = ((($75)) + 12|0); //@line 420 "./src/cpp/unrar/model.cpp"
  HEAP32[$76>>2] = 0; //@line 420 "./src/cpp/unrar/model.cpp"
  $$expand_i1_val2 = 1; //@line 421 "./src/cpp/unrar/model.cpp"
  HEAP8[$2>>0] = $$expand_i1_val2; //@line 421 "./src/cpp/unrar/model.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 446 "./src/cpp/unrar/model.cpp"
  $166 = $$pre_trunc&1; //@line 446 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($166|0); //@line 446 "./src/cpp/unrar/model.cpp"
 }
 $77 = $4; //@line 424 "./src/cpp/unrar/model.cpp"
 $78 = ((($77)) + 1620|0); //@line 424 "./src/cpp/unrar/model.cpp"
 $79 = HEAP32[$78>>2]|0; //@line 424 "./src/cpp/unrar/model.cpp"
 $80 = ($79|0)==(0|0); //@line 424 "./src/cpp/unrar/model.cpp"
 if ($80) {
  $$expand_i1_val4 = 0; //@line 425 "./src/cpp/unrar/model.cpp"
  HEAP8[$2>>0] = $$expand_i1_val4; //@line 425 "./src/cpp/unrar/model.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 446 "./src/cpp/unrar/model.cpp"
  $166 = $$pre_trunc&1; //@line 446 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($166|0); //@line 446 "./src/cpp/unrar/model.cpp"
 }
 $81 = $4; //@line 426 "./src/cpp/unrar/model.cpp"
 $82 = ((($81)) + 2673|0); //@line 426 "./src/cpp/unrar/model.cpp"
 HEAP8[$82>>0] = 0; //@line 426 "./src/cpp/unrar/model.cpp"
 $83 = HEAP16[$9>>1]|0; //@line 427 "./src/cpp/unrar/model.cpp"
 $84 = $83&65535; //@line 427 "./src/cpp/unrar/model.cpp"
 $85 = (($84) - 1)|0; //@line 427 "./src/cpp/unrar/model.cpp"
 $6 = $85; //@line 427 "./src/cpp/unrar/model.cpp"
 while(1) {
  $86 = $5; //@line 428 "./src/cpp/unrar/model.cpp"
  $87 = ((($86)) + 8|0); //@line 428 "./src/cpp/unrar/model.cpp"
  $5 = $87; //@line 428 "./src/cpp/unrar/model.cpp"
  $88 = ((($87)) + 1|0); //@line 428 "./src/cpp/unrar/model.cpp"
  $89 = HEAP8[$88>>0]|0; //@line 428 "./src/cpp/unrar/model.cpp"
  $90 = $89&255; //@line 428 "./src/cpp/unrar/model.cpp"
  $91 = $7; //@line 428 "./src/cpp/unrar/model.cpp"
  $92 = (($91) + ($90))|0; //@line 428 "./src/cpp/unrar/model.cpp"
  $7 = $92; //@line 428 "./src/cpp/unrar/model.cpp"
  $93 = $8; //@line 428 "./src/cpp/unrar/model.cpp"
  $94 = ($92|0)<=($93|0); //@line 428 "./src/cpp/unrar/model.cpp"
  if (!($94)) {
   label = 15;
   break;
  }
  $95 = $6; //@line 429 "./src/cpp/unrar/model.cpp"
  $96 = (($95) + -1)|0; //@line 429 "./src/cpp/unrar/model.cpp"
  $6 = $96; //@line 429 "./src/cpp/unrar/model.cpp"
  $97 = ($96|0)==(0); //@line 429 "./src/cpp/unrar/model.cpp"
  if ($97) {
   break;
  }
 }
 if ((label|0) == 15) {
  $151 = $7; //@line 443 "./src/cpp/unrar/model.cpp"
  $152 = $4; //@line 443 "./src/cpp/unrar/model.cpp"
  $153 = ((($152)) + 19060|0); //@line 443 "./src/cpp/unrar/model.cpp"
  $154 = ((($153)) + 12|0); //@line 443 "./src/cpp/unrar/model.cpp"
  $155 = ((($154)) + 4|0); //@line 443 "./src/cpp/unrar/model.cpp"
  HEAP32[$155>>2] = $151; //@line 443 "./src/cpp/unrar/model.cpp"
  $156 = $5; //@line 443 "./src/cpp/unrar/model.cpp"
  $157 = ((($156)) + 1|0); //@line 443 "./src/cpp/unrar/model.cpp"
  $158 = HEAP8[$157>>0]|0; //@line 443 "./src/cpp/unrar/model.cpp"
  $159 = $158&255; //@line 443 "./src/cpp/unrar/model.cpp"
  $160 = (($151) - ($159))|0; //@line 443 "./src/cpp/unrar/model.cpp"
  $161 = $4; //@line 443 "./src/cpp/unrar/model.cpp"
  $162 = ((($161)) + 19060|0); //@line 443 "./src/cpp/unrar/model.cpp"
  $163 = ((($162)) + 12|0); //@line 443 "./src/cpp/unrar/model.cpp"
  HEAP32[$163>>2] = $160; //@line 443 "./src/cpp/unrar/model.cpp"
  $164 = $4; //@line 444 "./src/cpp/unrar/model.cpp"
  $165 = $5; //@line 444 "./src/cpp/unrar/model.cpp"
  __ZN14RARPPM_CONTEXT7update1EP8ModelPPMP12RARPPM_STATE($9,$164,$165); //@line 444 "./src/cpp/unrar/model.cpp"
  $$expand_i1_val8 = 1; //@line 445 "./src/cpp/unrar/model.cpp"
  HEAP8[$2>>0] = $$expand_i1_val8; //@line 445 "./src/cpp/unrar/model.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 446 "./src/cpp/unrar/model.cpp"
  $166 = $$pre_trunc&1; //@line 446 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($166|0); //@line 446 "./src/cpp/unrar/model.cpp"
 }
 $98 = $4; //@line 431 "./src/cpp/unrar/model.cpp"
 $99 = ((($98)) + 2416|0); //@line 431 "./src/cpp/unrar/model.cpp"
 $100 = $4; //@line 431 "./src/cpp/unrar/model.cpp"
 $101 = ((($100)) + 1620|0); //@line 431 "./src/cpp/unrar/model.cpp"
 $102 = HEAP32[$101>>2]|0; //@line 431 "./src/cpp/unrar/model.cpp"
 $103 = HEAP8[$102>>0]|0; //@line 431 "./src/cpp/unrar/model.cpp"
 $104 = $103&255; //@line 431 "./src/cpp/unrar/model.cpp"
 $105 = (($99) + ($104)|0); //@line 431 "./src/cpp/unrar/model.cpp"
 $106 = HEAP8[$105>>0]|0; //@line 431 "./src/cpp/unrar/model.cpp"
 $107 = $4; //@line 431 "./src/cpp/unrar/model.cpp"
 $108 = ((($107)) + 2674|0); //@line 431 "./src/cpp/unrar/model.cpp"
 HEAP8[$108>>0] = $106; //@line 431 "./src/cpp/unrar/model.cpp"
 $109 = $7; //@line 432 "./src/cpp/unrar/model.cpp"
 $110 = $4; //@line 432 "./src/cpp/unrar/model.cpp"
 $111 = ((($110)) + 19060|0); //@line 432 "./src/cpp/unrar/model.cpp"
 $112 = ((($111)) + 12|0); //@line 432 "./src/cpp/unrar/model.cpp"
 HEAP32[$112>>2] = $109; //@line 432 "./src/cpp/unrar/model.cpp"
 $113 = $4; //@line 433 "./src/cpp/unrar/model.cpp"
 $114 = ((($113)) + 2672|0); //@line 433 "./src/cpp/unrar/model.cpp"
 $115 = HEAP8[$114>>0]|0; //@line 433 "./src/cpp/unrar/model.cpp"
 $116 = $4; //@line 433 "./src/cpp/unrar/model.cpp"
 $117 = ((($116)) + 1648|0); //@line 433 "./src/cpp/unrar/model.cpp"
 $118 = $5; //@line 433 "./src/cpp/unrar/model.cpp"
 $119 = HEAP8[$118>>0]|0; //@line 433 "./src/cpp/unrar/model.cpp"
 $120 = $119&255; //@line 433 "./src/cpp/unrar/model.cpp"
 $121 = (($117) + ($120)|0); //@line 433 "./src/cpp/unrar/model.cpp"
 HEAP8[$121>>0] = $115; //@line 433 "./src/cpp/unrar/model.cpp"
 $122 = HEAP16[$9>>1]|0; //@line 434 "./src/cpp/unrar/model.cpp"
 $123 = $122&65535; //@line 434 "./src/cpp/unrar/model.cpp"
 $124 = $4; //@line 434 "./src/cpp/unrar/model.cpp"
 $125 = ((($124)) + 1624|0); //@line 434 "./src/cpp/unrar/model.cpp"
 HEAP32[$125>>2] = $123; //@line 434 "./src/cpp/unrar/model.cpp"
 $126 = (($123) - 1)|0; //@line 434 "./src/cpp/unrar/model.cpp"
 $6 = $126; //@line 434 "./src/cpp/unrar/model.cpp"
 $127 = $4; //@line 435 "./src/cpp/unrar/model.cpp"
 $128 = ((($127)) + 1620|0); //@line 435 "./src/cpp/unrar/model.cpp"
 HEAP32[$128>>2] = 0; //@line 435 "./src/cpp/unrar/model.cpp"
 while(1) {
  $129 = $4; //@line 438 "./src/cpp/unrar/model.cpp"
  $130 = ((($129)) + 2672|0); //@line 438 "./src/cpp/unrar/model.cpp"
  $131 = HEAP8[$130>>0]|0; //@line 438 "./src/cpp/unrar/model.cpp"
  $132 = $4; //@line 438 "./src/cpp/unrar/model.cpp"
  $133 = ((($132)) + 1648|0); //@line 438 "./src/cpp/unrar/model.cpp"
  $134 = $5; //@line 438 "./src/cpp/unrar/model.cpp"
  $135 = ((($134)) + -8|0); //@line 438 "./src/cpp/unrar/model.cpp"
  $5 = $135; //@line 438 "./src/cpp/unrar/model.cpp"
  $136 = HEAP8[$135>>0]|0; //@line 438 "./src/cpp/unrar/model.cpp"
  $137 = $136&255; //@line 438 "./src/cpp/unrar/model.cpp"
  $138 = (($133) + ($137)|0); //@line 438 "./src/cpp/unrar/model.cpp"
  HEAP8[$138>>0] = $131; //@line 438 "./src/cpp/unrar/model.cpp"
  $139 = $6; //@line 439 "./src/cpp/unrar/model.cpp"
  $140 = (($139) + -1)|0; //@line 439 "./src/cpp/unrar/model.cpp"
  $6 = $140; //@line 439 "./src/cpp/unrar/model.cpp"
  $141 = ($140|0)!=(0); //@line 439 "./src/cpp/unrar/model.cpp"
  if (!($141)) {
   break;
  }
 }
 $142 = $4; //@line 440 "./src/cpp/unrar/model.cpp"
 $143 = ((($142)) + 19060|0); //@line 440 "./src/cpp/unrar/model.cpp"
 $144 = ((($143)) + 12|0); //@line 440 "./src/cpp/unrar/model.cpp"
 $145 = ((($144)) + 8|0); //@line 440 "./src/cpp/unrar/model.cpp"
 $146 = HEAP32[$145>>2]|0; //@line 440 "./src/cpp/unrar/model.cpp"
 $147 = $4; //@line 440 "./src/cpp/unrar/model.cpp"
 $148 = ((($147)) + 19060|0); //@line 440 "./src/cpp/unrar/model.cpp"
 $149 = ((($148)) + 12|0); //@line 440 "./src/cpp/unrar/model.cpp"
 $150 = ((($149)) + 4|0); //@line 440 "./src/cpp/unrar/model.cpp"
 HEAP32[$150>>2] = $146; //@line 440 "./src/cpp/unrar/model.cpp"
 $$expand_i1_val6 = 1; //@line 441 "./src/cpp/unrar/model.cpp"
 HEAP8[$2>>0] = $$expand_i1_val6; //@line 441 "./src/cpp/unrar/model.cpp"
 $$pre_trunc = HEAP8[$2>>0]|0; //@line 446 "./src/cpp/unrar/model.cpp"
 $166 = $$pre_trunc&1; //@line 446 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return ($166|0); //@line 446 "./src/cpp/unrar/model.cpp"
}
function __ZN14RARPPM_CONTEXT15decodeBinSymbolEP8ModelPPM($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = ((($6)) + 4|0); //@line 358 "./src/cpp/unrar/model.cpp"
 $4 = $7; //@line 358 "./src/cpp/unrar/model.cpp"
 $8 = $3; //@line 359 "./src/cpp/unrar/model.cpp"
 $9 = ((($8)) + 2416|0); //@line 359 "./src/cpp/unrar/model.cpp"
 $10 = $3; //@line 359 "./src/cpp/unrar/model.cpp"
 $11 = ((($10)) + 1620|0); //@line 359 "./src/cpp/unrar/model.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 359 "./src/cpp/unrar/model.cpp"
 $13 = HEAP8[$12>>0]|0; //@line 359 "./src/cpp/unrar/model.cpp"
 $14 = $13&255; //@line 359 "./src/cpp/unrar/model.cpp"
 $15 = (($9) + ($14)|0); //@line 359 "./src/cpp/unrar/model.cpp"
 $16 = HEAP8[$15>>0]|0; //@line 359 "./src/cpp/unrar/model.cpp"
 $17 = $3; //@line 359 "./src/cpp/unrar/model.cpp"
 $18 = ((($17)) + 2674|0); //@line 359 "./src/cpp/unrar/model.cpp"
 HEAP8[$18>>0] = $16; //@line 359 "./src/cpp/unrar/model.cpp"
 $19 = $3; //@line 360 "./src/cpp/unrar/model.cpp"
 $20 = ((($19)) + 2676|0); //@line 360 "./src/cpp/unrar/model.cpp"
 $21 = $4; //@line 360 "./src/cpp/unrar/model.cpp"
 $22 = ((($21)) + 1|0); //@line 360 "./src/cpp/unrar/model.cpp"
 $23 = HEAP8[$22>>0]|0; //@line 360 "./src/cpp/unrar/model.cpp"
 $24 = $23&255; //@line 360 "./src/cpp/unrar/model.cpp"
 $25 = (($24) - 1)|0; //@line 360 "./src/cpp/unrar/model.cpp"
 $26 = (($20) + ($25<<7)|0); //@line 360 "./src/cpp/unrar/model.cpp"
 $27 = $3; //@line 360 "./src/cpp/unrar/model.cpp"
 $28 = ((($27)) + 2673|0); //@line 360 "./src/cpp/unrar/model.cpp"
 $29 = HEAP8[$28>>0]|0; //@line 360 "./src/cpp/unrar/model.cpp"
 $30 = $29&255; //@line 360 "./src/cpp/unrar/model.cpp"
 $31 = $3; //@line 361 "./src/cpp/unrar/model.cpp"
 $32 = ((($31)) + 2160|0); //@line 361 "./src/cpp/unrar/model.cpp"
 $33 = ((($6)) + 12|0); //@line 361 "./src/cpp/unrar/model.cpp"
 $34 = HEAP32[$33>>2]|0; //@line 361 "./src/cpp/unrar/model.cpp"
 $35 = HEAP16[$34>>1]|0; //@line 361 "./src/cpp/unrar/model.cpp"
 $36 = $35&65535; //@line 361 "./src/cpp/unrar/model.cpp"
 $37 = (($36) - 1)|0; //@line 361 "./src/cpp/unrar/model.cpp"
 $38 = (($32) + ($37)|0); //@line 361 "./src/cpp/unrar/model.cpp"
 $39 = HEAP8[$38>>0]|0; //@line 361 "./src/cpp/unrar/model.cpp"
 $40 = $39&255; //@line 361 "./src/cpp/unrar/model.cpp"
 $41 = (($30) + ($40))|0; //@line 360 "./src/cpp/unrar/model.cpp"
 $42 = $3; //@line 362 "./src/cpp/unrar/model.cpp"
 $43 = ((($42)) + 2674|0); //@line 362 "./src/cpp/unrar/model.cpp"
 $44 = HEAP8[$43>>0]|0; //@line 362 "./src/cpp/unrar/model.cpp"
 $45 = $44&255; //@line 362 "./src/cpp/unrar/model.cpp"
 $46 = (($41) + ($45))|0; //@line 361 "./src/cpp/unrar/model.cpp"
 $47 = $3; //@line 362 "./src/cpp/unrar/model.cpp"
 $48 = ((($47)) + 2416|0); //@line 362 "./src/cpp/unrar/model.cpp"
 $49 = $4; //@line 362 "./src/cpp/unrar/model.cpp"
 $50 = HEAP8[$49>>0]|0; //@line 362 "./src/cpp/unrar/model.cpp"
 $51 = $50&255; //@line 362 "./src/cpp/unrar/model.cpp"
 $52 = (($48) + ($51)|0); //@line 362 "./src/cpp/unrar/model.cpp"
 $53 = HEAP8[$52>>0]|0; //@line 362 "./src/cpp/unrar/model.cpp"
 $54 = $53&255; //@line 362 "./src/cpp/unrar/model.cpp"
 $55 = $54<<1; //@line 362 "./src/cpp/unrar/model.cpp"
 $56 = (($46) + ($55))|0; //@line 362 "./src/cpp/unrar/model.cpp"
 $57 = $3; //@line 363 "./src/cpp/unrar/model.cpp"
 $58 = ((($57)) + 1640|0); //@line 363 "./src/cpp/unrar/model.cpp"
 $59 = HEAP32[$58>>2]|0; //@line 363 "./src/cpp/unrar/model.cpp"
 $60 = $59 >> 26; //@line 363 "./src/cpp/unrar/model.cpp"
 $61 = $60 & 32; //@line 363 "./src/cpp/unrar/model.cpp"
 $62 = (($56) + ($61))|0; //@line 362 "./src/cpp/unrar/model.cpp"
 $63 = (($26) + ($62<<1)|0); //@line 360 "./src/cpp/unrar/model.cpp"
 $5 = $63; //@line 360 "./src/cpp/unrar/model.cpp"
 $64 = $3; //@line 364 "./src/cpp/unrar/model.cpp"
 $65 = ((($64)) + 19060|0); //@line 364 "./src/cpp/unrar/model.cpp"
 $66 = (__ZN10RangeCoder20GetCurrentShiftCountEj($65,14)|0); //@line 364 "./src/cpp/unrar/model.cpp"
 $67 = $5; //@line 364 "./src/cpp/unrar/model.cpp"
 $68 = HEAP16[$67>>1]|0; //@line 364 "./src/cpp/unrar/model.cpp"
 $69 = $68&65535; //@line 364 "./src/cpp/unrar/model.cpp"
 $70 = ($66>>>0)<($69>>>0); //@line 364 "./src/cpp/unrar/model.cpp"
 if ($70) {
  $71 = $4; //@line 366 "./src/cpp/unrar/model.cpp"
  $72 = $3; //@line 366 "./src/cpp/unrar/model.cpp"
  $73 = ((($72)) + 1620|0); //@line 366 "./src/cpp/unrar/model.cpp"
  HEAP32[$73>>2] = $71; //@line 366 "./src/cpp/unrar/model.cpp"
  $74 = $4; //@line 367 "./src/cpp/unrar/model.cpp"
  $75 = ((($74)) + 1|0); //@line 367 "./src/cpp/unrar/model.cpp"
  $76 = HEAP8[$75>>0]|0; //@line 367 "./src/cpp/unrar/model.cpp"
  $77 = $76&255; //@line 367 "./src/cpp/unrar/model.cpp"
  $78 = ($77|0)<(128); //@line 367 "./src/cpp/unrar/model.cpp"
  $79 = $78&1; //@line 367 "./src/cpp/unrar/model.cpp"
  $80 = $4; //@line 367 "./src/cpp/unrar/model.cpp"
  $81 = ((($80)) + 1|0); //@line 367 "./src/cpp/unrar/model.cpp"
  $82 = HEAP8[$81>>0]|0; //@line 367 "./src/cpp/unrar/model.cpp"
  $83 = $82&255; //@line 367 "./src/cpp/unrar/model.cpp"
  $84 = (($83) + ($79))|0; //@line 367 "./src/cpp/unrar/model.cpp"
  $85 = $84&255; //@line 367 "./src/cpp/unrar/model.cpp"
  HEAP8[$81>>0] = $85; //@line 367 "./src/cpp/unrar/model.cpp"
  $86 = $3; //@line 368 "./src/cpp/unrar/model.cpp"
  $87 = ((($86)) + 19060|0); //@line 368 "./src/cpp/unrar/model.cpp"
  $88 = ((($87)) + 12|0); //@line 368 "./src/cpp/unrar/model.cpp"
  HEAP32[$88>>2] = 0; //@line 368 "./src/cpp/unrar/model.cpp"
  $89 = $5; //@line 369 "./src/cpp/unrar/model.cpp"
  $90 = HEAP16[$89>>1]|0; //@line 369 "./src/cpp/unrar/model.cpp"
  $91 = $90&65535; //@line 369 "./src/cpp/unrar/model.cpp"
  $92 = $3; //@line 369 "./src/cpp/unrar/model.cpp"
  $93 = ((($92)) + 19060|0); //@line 369 "./src/cpp/unrar/model.cpp"
  $94 = ((($93)) + 12|0); //@line 369 "./src/cpp/unrar/model.cpp"
  $95 = ((($94)) + 4|0); //@line 369 "./src/cpp/unrar/model.cpp"
  HEAP32[$95>>2] = $91; //@line 369 "./src/cpp/unrar/model.cpp"
  $96 = $5; //@line 370 "./src/cpp/unrar/model.cpp"
  $97 = HEAP16[$96>>1]|0; //@line 370 "./src/cpp/unrar/model.cpp"
  $98 = $97&65535; //@line 370 "./src/cpp/unrar/model.cpp"
  $99 = (($98) + 128)|0; //@line 370 "./src/cpp/unrar/model.cpp"
  $100 = $5; //@line 370 "./src/cpp/unrar/model.cpp"
  $101 = HEAP16[$100>>1]|0; //@line 370 "./src/cpp/unrar/model.cpp"
  $102 = $101&65535; //@line 370 "./src/cpp/unrar/model.cpp"
  $103 = (($102) + 32)|0; //@line 370 "./src/cpp/unrar/model.cpp"
  $104 = $103 >> 7; //@line 370 "./src/cpp/unrar/model.cpp"
  $105 = (($99) - ($104))|0; //@line 370 "./src/cpp/unrar/model.cpp"
  $106 = $105&65535; //@line 370 "./src/cpp/unrar/model.cpp"
  $107 = $106&65535; //@line 370 "./src/cpp/unrar/model.cpp"
  $108 = $107&65535; //@line 370 "./src/cpp/unrar/model.cpp"
  $109 = $5; //@line 370 "./src/cpp/unrar/model.cpp"
  HEAP16[$109>>1] = $108; //@line 370 "./src/cpp/unrar/model.cpp"
  $110 = $3; //@line 371 "./src/cpp/unrar/model.cpp"
  $111 = ((($110)) + 2673|0); //@line 371 "./src/cpp/unrar/model.cpp"
  HEAP8[$111>>0] = 1; //@line 371 "./src/cpp/unrar/model.cpp"
  $112 = $3; //@line 372 "./src/cpp/unrar/model.cpp"
  $113 = ((($112)) + 1640|0); //@line 372 "./src/cpp/unrar/model.cpp"
  $114 = HEAP32[$113>>2]|0; //@line 372 "./src/cpp/unrar/model.cpp"
  $115 = (($114) + 1)|0; //@line 372 "./src/cpp/unrar/model.cpp"
  HEAP32[$113>>2] = $115; //@line 372 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return; //@line 385 "./src/cpp/unrar/model.cpp"
 } else {
  $116 = $5; //@line 376 "./src/cpp/unrar/model.cpp"
  $117 = HEAP16[$116>>1]|0; //@line 376 "./src/cpp/unrar/model.cpp"
  $118 = $117&65535; //@line 376 "./src/cpp/unrar/model.cpp"
  $119 = $3; //@line 376 "./src/cpp/unrar/model.cpp"
  $120 = ((($119)) + 19060|0); //@line 376 "./src/cpp/unrar/model.cpp"
  $121 = ((($120)) + 12|0); //@line 376 "./src/cpp/unrar/model.cpp"
  HEAP32[$121>>2] = $118; //@line 376 "./src/cpp/unrar/model.cpp"
  $122 = $5; //@line 377 "./src/cpp/unrar/model.cpp"
  $123 = HEAP16[$122>>1]|0; //@line 377 "./src/cpp/unrar/model.cpp"
  $124 = $123&65535; //@line 377 "./src/cpp/unrar/model.cpp"
  $125 = $5; //@line 377 "./src/cpp/unrar/model.cpp"
  $126 = HEAP16[$125>>1]|0; //@line 377 "./src/cpp/unrar/model.cpp"
  $127 = $126&65535; //@line 377 "./src/cpp/unrar/model.cpp"
  $128 = (($127) + 32)|0; //@line 377 "./src/cpp/unrar/model.cpp"
  $129 = $128 >> 7; //@line 377 "./src/cpp/unrar/model.cpp"
  $130 = (($124) - ($129))|0; //@line 377 "./src/cpp/unrar/model.cpp"
  $131 = $130&65535; //@line 377 "./src/cpp/unrar/model.cpp"
  $132 = $131&65535; //@line 377 "./src/cpp/unrar/model.cpp"
  $133 = $132&65535; //@line 377 "./src/cpp/unrar/model.cpp"
  $134 = $5; //@line 377 "./src/cpp/unrar/model.cpp"
  HEAP16[$134>>1] = $133; //@line 377 "./src/cpp/unrar/model.cpp"
  $135 = $3; //@line 378 "./src/cpp/unrar/model.cpp"
  $136 = ((($135)) + 19060|0); //@line 378 "./src/cpp/unrar/model.cpp"
  $137 = ((($136)) + 12|0); //@line 378 "./src/cpp/unrar/model.cpp"
  $138 = ((($137)) + 4|0); //@line 378 "./src/cpp/unrar/model.cpp"
  HEAP32[$138>>2] = 16384; //@line 378 "./src/cpp/unrar/model.cpp"
  $139 = $5; //@line 379 "./src/cpp/unrar/model.cpp"
  $140 = HEAP16[$139>>1]|0; //@line 379 "./src/cpp/unrar/model.cpp"
  $141 = $140&65535; //@line 379 "./src/cpp/unrar/model.cpp"
  $142 = $141 >> 10; //@line 379 "./src/cpp/unrar/model.cpp"
  $143 = (5353 + ($142)|0); //@line 379 "./src/cpp/unrar/model.cpp"
  $144 = HEAP8[$143>>0]|0; //@line 379 "./src/cpp/unrar/model.cpp"
  $145 = $144&255; //@line 379 "./src/cpp/unrar/model.cpp"
  $146 = $3; //@line 379 "./src/cpp/unrar/model.cpp"
  $147 = ((($146)) + 1628|0); //@line 379 "./src/cpp/unrar/model.cpp"
  HEAP32[$147>>2] = $145; //@line 379 "./src/cpp/unrar/model.cpp"
  $148 = $3; //@line 380 "./src/cpp/unrar/model.cpp"
  $149 = ((($148)) + 1624|0); //@line 380 "./src/cpp/unrar/model.cpp"
  HEAP32[$149>>2] = 1; //@line 380 "./src/cpp/unrar/model.cpp"
  $150 = $3; //@line 381 "./src/cpp/unrar/model.cpp"
  $151 = ((($150)) + 2672|0); //@line 381 "./src/cpp/unrar/model.cpp"
  $152 = HEAP8[$151>>0]|0; //@line 381 "./src/cpp/unrar/model.cpp"
  $153 = $3; //@line 381 "./src/cpp/unrar/model.cpp"
  $154 = ((($153)) + 1648|0); //@line 381 "./src/cpp/unrar/model.cpp"
  $155 = $4; //@line 381 "./src/cpp/unrar/model.cpp"
  $156 = HEAP8[$155>>0]|0; //@line 381 "./src/cpp/unrar/model.cpp"
  $157 = $156&255; //@line 381 "./src/cpp/unrar/model.cpp"
  $158 = (($154) + ($157)|0); //@line 381 "./src/cpp/unrar/model.cpp"
  HEAP8[$158>>0] = $152; //@line 381 "./src/cpp/unrar/model.cpp"
  $159 = $3; //@line 382 "./src/cpp/unrar/model.cpp"
  $160 = ((($159)) + 2673|0); //@line 382 "./src/cpp/unrar/model.cpp"
  HEAP8[$160>>0] = 0; //@line 382 "./src/cpp/unrar/model.cpp"
  $161 = $3; //@line 383 "./src/cpp/unrar/model.cpp"
  $162 = ((($161)) + 1620|0); //@line 383 "./src/cpp/unrar/model.cpp"
  HEAP32[$162>>2] = 0; //@line 383 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return; //@line 385 "./src/cpp/unrar/model.cpp"
 }
}
function __ZN10RangeCoder6DecodeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0); //@line 46 "./src/cpp/unrar/coder.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 46 "./src/cpp/unrar/coder.cpp"
 $5 = ((($2)) + 12|0); //@line 46 "./src/cpp/unrar/coder.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 46 "./src/cpp/unrar/coder.cpp"
 $7 = Math_imul($4, $6)|0; //@line 46 "./src/cpp/unrar/coder.cpp"
 $8 = HEAP32[$2>>2]|0; //@line 46 "./src/cpp/unrar/coder.cpp"
 $9 = (($8) + ($7))|0; //@line 46 "./src/cpp/unrar/coder.cpp"
 HEAP32[$2>>2] = $9; //@line 46 "./src/cpp/unrar/coder.cpp"
 $10 = ((($2)) + 12|0); //@line 47 "./src/cpp/unrar/coder.cpp"
 $11 = ((($10)) + 4|0); //@line 47 "./src/cpp/unrar/coder.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 47 "./src/cpp/unrar/coder.cpp"
 $13 = ((($2)) + 12|0); //@line 47 "./src/cpp/unrar/coder.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 47 "./src/cpp/unrar/coder.cpp"
 $15 = (($12) - ($14))|0; //@line 47 "./src/cpp/unrar/coder.cpp"
 $16 = ((($2)) + 8|0); //@line 47 "./src/cpp/unrar/coder.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 47 "./src/cpp/unrar/coder.cpp"
 $18 = Math_imul($17, $15)|0; //@line 47 "./src/cpp/unrar/coder.cpp"
 HEAP32[$16>>2] = $18; //@line 47 "./src/cpp/unrar/coder.cpp"
 STACKTOP = sp;return; //@line 48 "./src/cpp/unrar/coder.cpp"
}
function __ZN14RARPPM_CONTEXT13decodeSymbol2EP8ModelPPM($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1072|0);
 $2 = sp + 1056|0;
 $9 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $12 = $3;
 $13 = HEAP16[$12>>1]|0; //@line 484 "./src/cpp/unrar/model.cpp"
 $14 = $13&65535; //@line 484 "./src/cpp/unrar/model.cpp"
 $15 = $4; //@line 484 "./src/cpp/unrar/model.cpp"
 $16 = ((($15)) + 1624|0); //@line 484 "./src/cpp/unrar/model.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 484 "./src/cpp/unrar/model.cpp"
 $18 = (($14) - ($17))|0; //@line 484 "./src/cpp/unrar/model.cpp"
 $7 = $18; //@line 484 "./src/cpp/unrar/model.cpp"
 $19 = $4; //@line 485 "./src/cpp/unrar/model.cpp"
 $20 = $7; //@line 485 "./src/cpp/unrar/model.cpp"
 $21 = (__ZN14RARPPM_CONTEXT12makeEscFreq2EP8ModelPPMi($12,$19,$20)|0); //@line 485 "./src/cpp/unrar/model.cpp"
 $8 = $21; //@line 485 "./src/cpp/unrar/model.cpp"
 $10 = $9; //@line 486 "./src/cpp/unrar/model.cpp"
 $22 = ((($12)) + 4|0); //@line 486 "./src/cpp/unrar/model.cpp"
 $23 = ((($22)) + 4|0); //@line 486 "./src/cpp/unrar/model.cpp"
 $24 = HEAP32[$23>>2]|0; //@line 486 "./src/cpp/unrar/model.cpp"
 $25 = ((($24)) + -8|0); //@line 486 "./src/cpp/unrar/model.cpp"
 $11 = $25; //@line 486 "./src/cpp/unrar/model.cpp"
 $6 = 0; //@line 487 "./src/cpp/unrar/model.cpp"
 while(1) {
  while(1) {
   $26 = $11; //@line 492 "./src/cpp/unrar/model.cpp"
   $27 = ((($26)) + 8|0); //@line 492 "./src/cpp/unrar/model.cpp"
   $11 = $27; //@line 492 "./src/cpp/unrar/model.cpp"
   $28 = $4; //@line 493 "./src/cpp/unrar/model.cpp"
   $29 = ((($28)) + 1648|0); //@line 493 "./src/cpp/unrar/model.cpp"
   $30 = $11; //@line 493 "./src/cpp/unrar/model.cpp"
   $31 = HEAP8[$30>>0]|0; //@line 493 "./src/cpp/unrar/model.cpp"
   $32 = $31&255; //@line 493 "./src/cpp/unrar/model.cpp"
   $33 = (($29) + ($32)|0); //@line 493 "./src/cpp/unrar/model.cpp"
   $34 = HEAP8[$33>>0]|0; //@line 493 "./src/cpp/unrar/model.cpp"
   $35 = $34&255; //@line 493 "./src/cpp/unrar/model.cpp"
   $36 = $4; //@line 493 "./src/cpp/unrar/model.cpp"
   $37 = ((($36)) + 2672|0); //@line 493 "./src/cpp/unrar/model.cpp"
   $38 = HEAP8[$37>>0]|0; //@line 493 "./src/cpp/unrar/model.cpp"
   $39 = $38&255; //@line 493 "./src/cpp/unrar/model.cpp"
   $40 = ($35|0)==($39|0); //@line 493 "./src/cpp/unrar/model.cpp"
   if (!($40)) {
    break;
   }
  }
  $41 = $11; //@line 494 "./src/cpp/unrar/model.cpp"
  $42 = ((($41)) + 1|0); //@line 494 "./src/cpp/unrar/model.cpp"
  $43 = HEAP8[$42>>0]|0; //@line 494 "./src/cpp/unrar/model.cpp"
  $44 = $43&255; //@line 494 "./src/cpp/unrar/model.cpp"
  $45 = $6; //@line 494 "./src/cpp/unrar/model.cpp"
  $46 = (($45) + ($44))|0; //@line 494 "./src/cpp/unrar/model.cpp"
  $6 = $46; //@line 494 "./src/cpp/unrar/model.cpp"
  $47 = $11; //@line 495 "./src/cpp/unrar/model.cpp"
  $48 = $10; //@line 495 "./src/cpp/unrar/model.cpp"
  $49 = ((($48)) + 4|0); //@line 495 "./src/cpp/unrar/model.cpp"
  $10 = $49; //@line 495 "./src/cpp/unrar/model.cpp"
  HEAP32[$48>>2] = $47; //@line 495 "./src/cpp/unrar/model.cpp"
  $50 = $7; //@line 496 "./src/cpp/unrar/model.cpp"
  $51 = (($50) + -1)|0; //@line 496 "./src/cpp/unrar/model.cpp"
  $7 = $51; //@line 496 "./src/cpp/unrar/model.cpp"
  $52 = ($51|0)!=(0); //@line 496 "./src/cpp/unrar/model.cpp"
  if (!($52)) {
   break;
  }
 }
 $53 = $6; //@line 497 "./src/cpp/unrar/model.cpp"
 $54 = $4; //@line 497 "./src/cpp/unrar/model.cpp"
 $55 = ((($54)) + 19060|0); //@line 497 "./src/cpp/unrar/model.cpp"
 $56 = ((($55)) + 12|0); //@line 497 "./src/cpp/unrar/model.cpp"
 $57 = ((($56)) + 8|0); //@line 497 "./src/cpp/unrar/model.cpp"
 $58 = HEAP32[$57>>2]|0; //@line 497 "./src/cpp/unrar/model.cpp"
 $59 = (($58) + ($53))|0; //@line 497 "./src/cpp/unrar/model.cpp"
 HEAP32[$57>>2] = $59; //@line 497 "./src/cpp/unrar/model.cpp"
 $60 = $4; //@line 498 "./src/cpp/unrar/model.cpp"
 $61 = ((($60)) + 19060|0); //@line 498 "./src/cpp/unrar/model.cpp"
 $62 = (__ZN10RangeCoder15GetCurrentCountEv($61)|0); //@line 498 "./src/cpp/unrar/model.cpp"
 $5 = $62; //@line 498 "./src/cpp/unrar/model.cpp"
 $63 = $5; //@line 499 "./src/cpp/unrar/model.cpp"
 $64 = $4; //@line 499 "./src/cpp/unrar/model.cpp"
 $65 = ((($64)) + 19060|0); //@line 499 "./src/cpp/unrar/model.cpp"
 $66 = ((($65)) + 12|0); //@line 499 "./src/cpp/unrar/model.cpp"
 $67 = ((($66)) + 8|0); //@line 499 "./src/cpp/unrar/model.cpp"
 $68 = HEAP32[$67>>2]|0; //@line 499 "./src/cpp/unrar/model.cpp"
 $69 = ($63|0)>=($68|0); //@line 499 "./src/cpp/unrar/model.cpp"
 if ($69) {
  $$expand_i1_val = 0; //@line 500 "./src/cpp/unrar/model.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 500 "./src/cpp/unrar/model.cpp"
  $$pre_trunc = HEAP8[$2>>0]|0; //@line 525 "./src/cpp/unrar/model.cpp"
  $150 = $$pre_trunc&1; //@line 525 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($150|0); //@line 525 "./src/cpp/unrar/model.cpp"
 }
 $10 = $9; //@line 501 "./src/cpp/unrar/model.cpp"
 $70 = HEAP32[$9>>2]|0; //@line 501 "./src/cpp/unrar/model.cpp"
 $11 = $70; //@line 501 "./src/cpp/unrar/model.cpp"
 $71 = $5; //@line 502 "./src/cpp/unrar/model.cpp"
 $72 = $6; //@line 502 "./src/cpp/unrar/model.cpp"
 $73 = ($71|0)<($72|0); //@line 502 "./src/cpp/unrar/model.cpp"
 if ($73) {
  $6 = 0; //@line 504 "./src/cpp/unrar/model.cpp"
  while(1) {
   $74 = $11; //@line 505 "./src/cpp/unrar/model.cpp"
   $75 = ((($74)) + 1|0); //@line 505 "./src/cpp/unrar/model.cpp"
   $76 = HEAP8[$75>>0]|0; //@line 505 "./src/cpp/unrar/model.cpp"
   $77 = $76&255; //@line 505 "./src/cpp/unrar/model.cpp"
   $78 = $6; //@line 505 "./src/cpp/unrar/model.cpp"
   $79 = (($78) + ($77))|0; //@line 505 "./src/cpp/unrar/model.cpp"
   $6 = $79; //@line 505 "./src/cpp/unrar/model.cpp"
   $80 = $5; //@line 505 "./src/cpp/unrar/model.cpp"
   $81 = ($79|0)<=($80|0); //@line 505 "./src/cpp/unrar/model.cpp"
   if (!($81)) {
    break;
   }
   $82 = $10; //@line 506 "./src/cpp/unrar/model.cpp"
   $83 = ((($82)) + 4|0); //@line 506 "./src/cpp/unrar/model.cpp"
   $10 = $83; //@line 506 "./src/cpp/unrar/model.cpp"
   $84 = HEAP32[$83>>2]|0; //@line 506 "./src/cpp/unrar/model.cpp"
   $11 = $84; //@line 506 "./src/cpp/unrar/model.cpp"
  }
  $85 = $6; //@line 507 "./src/cpp/unrar/model.cpp"
  $86 = $4; //@line 507 "./src/cpp/unrar/model.cpp"
  $87 = ((($86)) + 19060|0); //@line 507 "./src/cpp/unrar/model.cpp"
  $88 = ((($87)) + 12|0); //@line 507 "./src/cpp/unrar/model.cpp"
  $89 = ((($88)) + 4|0); //@line 507 "./src/cpp/unrar/model.cpp"
  HEAP32[$89>>2] = $85; //@line 507 "./src/cpp/unrar/model.cpp"
  $90 = $11; //@line 507 "./src/cpp/unrar/model.cpp"
  $91 = ((($90)) + 1|0); //@line 507 "./src/cpp/unrar/model.cpp"
  $92 = HEAP8[$91>>0]|0; //@line 507 "./src/cpp/unrar/model.cpp"
  $93 = $92&255; //@line 507 "./src/cpp/unrar/model.cpp"
  $94 = (($85) - ($93))|0; //@line 507 "./src/cpp/unrar/model.cpp"
  $95 = $4; //@line 507 "./src/cpp/unrar/model.cpp"
  $96 = ((($95)) + 19060|0); //@line 507 "./src/cpp/unrar/model.cpp"
  $97 = ((($96)) + 12|0); //@line 507 "./src/cpp/unrar/model.cpp"
  HEAP32[$97>>2] = $94; //@line 507 "./src/cpp/unrar/model.cpp"
  $98 = $8; //@line 508 "./src/cpp/unrar/model.cpp"
  __ZN19RARPPM_SEE2_CONTEXT6updateEv($98); //@line 508 "./src/cpp/unrar/model.cpp"
  $99 = $4; //@line 509 "./src/cpp/unrar/model.cpp"
  $100 = $11; //@line 509 "./src/cpp/unrar/model.cpp"
  __ZN14RARPPM_CONTEXT7update2EP8ModelPPMP12RARPPM_STATE($12,$99,$100); //@line 509 "./src/cpp/unrar/model.cpp"
 } else {
  $101 = $6; //@line 513 "./src/cpp/unrar/model.cpp"
  $102 = $4; //@line 513 "./src/cpp/unrar/model.cpp"
  $103 = ((($102)) + 19060|0); //@line 513 "./src/cpp/unrar/model.cpp"
  $104 = ((($103)) + 12|0); //@line 513 "./src/cpp/unrar/model.cpp"
  HEAP32[$104>>2] = $101; //@line 513 "./src/cpp/unrar/model.cpp"
  $105 = $4; //@line 514 "./src/cpp/unrar/model.cpp"
  $106 = ((($105)) + 19060|0); //@line 514 "./src/cpp/unrar/model.cpp"
  $107 = ((($106)) + 12|0); //@line 514 "./src/cpp/unrar/model.cpp"
  $108 = ((($107)) + 8|0); //@line 514 "./src/cpp/unrar/model.cpp"
  $109 = HEAP32[$108>>2]|0; //@line 514 "./src/cpp/unrar/model.cpp"
  $110 = $4; //@line 514 "./src/cpp/unrar/model.cpp"
  $111 = ((($110)) + 19060|0); //@line 514 "./src/cpp/unrar/model.cpp"
  $112 = ((($111)) + 12|0); //@line 514 "./src/cpp/unrar/model.cpp"
  $113 = ((($112)) + 4|0); //@line 514 "./src/cpp/unrar/model.cpp"
  HEAP32[$113>>2] = $109; //@line 514 "./src/cpp/unrar/model.cpp"
  $114 = HEAP16[$12>>1]|0; //@line 515 "./src/cpp/unrar/model.cpp"
  $115 = $114&65535; //@line 515 "./src/cpp/unrar/model.cpp"
  $116 = $4; //@line 515 "./src/cpp/unrar/model.cpp"
  $117 = ((($116)) + 1624|0); //@line 515 "./src/cpp/unrar/model.cpp"
  $118 = HEAP32[$117>>2]|0; //@line 515 "./src/cpp/unrar/model.cpp"
  $119 = (($115) - ($118))|0; //@line 515 "./src/cpp/unrar/model.cpp"
  $7 = $119; //@line 515 "./src/cpp/unrar/model.cpp"
  $120 = $10; //@line 516 "./src/cpp/unrar/model.cpp"
  $121 = ((($120)) + -4|0); //@line 516 "./src/cpp/unrar/model.cpp"
  $10 = $121; //@line 516 "./src/cpp/unrar/model.cpp"
  while(1) {
   $122 = $4; //@line 519 "./src/cpp/unrar/model.cpp"
   $123 = ((($122)) + 2672|0); //@line 519 "./src/cpp/unrar/model.cpp"
   $124 = HEAP8[$123>>0]|0; //@line 519 "./src/cpp/unrar/model.cpp"
   $125 = $4; //@line 519 "./src/cpp/unrar/model.cpp"
   $126 = ((($125)) + 1648|0); //@line 519 "./src/cpp/unrar/model.cpp"
   $127 = $10; //@line 519 "./src/cpp/unrar/model.cpp"
   $128 = ((($127)) + 4|0); //@line 519 "./src/cpp/unrar/model.cpp"
   $10 = $128; //@line 519 "./src/cpp/unrar/model.cpp"
   $129 = HEAP32[$128>>2]|0; //@line 519 "./src/cpp/unrar/model.cpp"
   $130 = HEAP8[$129>>0]|0; //@line 519 "./src/cpp/unrar/model.cpp"
   $131 = $130&255; //@line 519 "./src/cpp/unrar/model.cpp"
   $132 = (($126) + ($131)|0); //@line 519 "./src/cpp/unrar/model.cpp"
   HEAP8[$132>>0] = $124; //@line 519 "./src/cpp/unrar/model.cpp"
   $133 = $7; //@line 520 "./src/cpp/unrar/model.cpp"
   $134 = (($133) + -1)|0; //@line 520 "./src/cpp/unrar/model.cpp"
   $7 = $134; //@line 520 "./src/cpp/unrar/model.cpp"
   $135 = ($134|0)!=(0); //@line 520 "./src/cpp/unrar/model.cpp"
   if (!($135)) {
    break;
   }
  }
  $136 = $4; //@line 521 "./src/cpp/unrar/model.cpp"
  $137 = ((($136)) + 19060|0); //@line 521 "./src/cpp/unrar/model.cpp"
  $138 = ((($137)) + 12|0); //@line 521 "./src/cpp/unrar/model.cpp"
  $139 = ((($138)) + 8|0); //@line 521 "./src/cpp/unrar/model.cpp"
  $140 = HEAP32[$139>>2]|0; //@line 521 "./src/cpp/unrar/model.cpp"
  $141 = $8; //@line 521 "./src/cpp/unrar/model.cpp"
  $142 = HEAP16[$141>>1]|0; //@line 521 "./src/cpp/unrar/model.cpp"
  $143 = $142&65535; //@line 521 "./src/cpp/unrar/model.cpp"
  $144 = (($143) + ($140))|0; //@line 521 "./src/cpp/unrar/model.cpp"
  $145 = $144&65535; //@line 521 "./src/cpp/unrar/model.cpp"
  HEAP16[$141>>1] = $145; //@line 521 "./src/cpp/unrar/model.cpp"
  $146 = HEAP16[$12>>1]|0; //@line 522 "./src/cpp/unrar/model.cpp"
  $147 = $146&65535; //@line 522 "./src/cpp/unrar/model.cpp"
  $148 = $4; //@line 522 "./src/cpp/unrar/model.cpp"
  $149 = ((($148)) + 1624|0); //@line 522 "./src/cpp/unrar/model.cpp"
  HEAP32[$149>>2] = $147; //@line 522 "./src/cpp/unrar/model.cpp"
 }
 $$expand_i1_val2 = 1; //@line 524 "./src/cpp/unrar/model.cpp"
 HEAP8[$2>>0] = $$expand_i1_val2; //@line 524 "./src/cpp/unrar/model.cpp"
 $$pre_trunc = HEAP8[$2>>0]|0; //@line 525 "./src/cpp/unrar/model.cpp"
 $150 = $$pre_trunc&1; //@line 525 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return ($150|0); //@line 525 "./src/cpp/unrar/model.cpp"
}
function __ZN8ModelPPM11UpdateModelEv($0) {
 $0 = $0|0;
 var $$sink3 = 0, $$sink6 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 32|0;
 $1 = $0;
 $11 = $1;
 $12 = ((($11)) + 1620|0); //@line 240 "./src/cpp/unrar/model.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 240 "./src/cpp/unrar/model.cpp"
 ;HEAP32[$2>>2]=HEAP32[$13>>2]|0;HEAP32[$2+4>>2]=HEAP32[$13+4>>2]|0; //@line 240 "./src/cpp/unrar/model.cpp"
 $3 = 0; //@line 240 "./src/cpp/unrar/model.cpp"
 $14 = ((($2)) + 1|0); //@line 243 "./src/cpp/unrar/model.cpp"
 $15 = HEAP8[$14>>0]|0; //@line 243 "./src/cpp/unrar/model.cpp"
 $16 = $15&255; //@line 243 "./src/cpp/unrar/model.cpp"
 $17 = ($16|0)<(31); //@line 243 "./src/cpp/unrar/model.cpp"
 do {
  if ($17) {
   $18 = ((($11)) + 1608|0); //@line 243 "./src/cpp/unrar/model.cpp"
   $19 = HEAP32[$18>>2]|0; //@line 243 "./src/cpp/unrar/model.cpp"
   $20 = ((($19)) + 12|0); //@line 243 "./src/cpp/unrar/model.cpp"
   $21 = HEAP32[$20>>2]|0; //@line 243 "./src/cpp/unrar/model.cpp"
   $4 = $21; //@line 243 "./src/cpp/unrar/model.cpp"
   $22 = ($21|0)!=(0|0); //@line 243 "./src/cpp/unrar/model.cpp"
   if ($22) {
    $23 = $4; //@line 245 "./src/cpp/unrar/model.cpp"
    $24 = HEAP16[$23>>1]|0; //@line 245 "./src/cpp/unrar/model.cpp"
    $25 = $24&65535; //@line 245 "./src/cpp/unrar/model.cpp"
    $26 = ($25|0)!=(1); //@line 245 "./src/cpp/unrar/model.cpp"
    $27 = $4;
    $28 = ((($27)) + 4|0);
    if (!($26)) {
     $3 = $28; //@line 267 "./src/cpp/unrar/model.cpp"
     $76 = $3; //@line 268 "./src/cpp/unrar/model.cpp"
     $77 = ((($76)) + 1|0); //@line 268 "./src/cpp/unrar/model.cpp"
     $78 = HEAP8[$77>>0]|0; //@line 268 "./src/cpp/unrar/model.cpp"
     $79 = $78&255; //@line 268 "./src/cpp/unrar/model.cpp"
     $80 = ($79|0)<(32); //@line 268 "./src/cpp/unrar/model.cpp"
     $81 = $80&1; //@line 268 "./src/cpp/unrar/model.cpp"
     $82 = $3; //@line 268 "./src/cpp/unrar/model.cpp"
     $83 = ((($82)) + 1|0); //@line 268 "./src/cpp/unrar/model.cpp"
     $84 = HEAP8[$83>>0]|0; //@line 268 "./src/cpp/unrar/model.cpp"
     $85 = $84&255; //@line 268 "./src/cpp/unrar/model.cpp"
     $86 = (($85) + ($81))|0; //@line 268 "./src/cpp/unrar/model.cpp"
     $87 = $86&255; //@line 268 "./src/cpp/unrar/model.cpp"
     HEAP8[$83>>0] = $87; //@line 268 "./src/cpp/unrar/model.cpp"
     break;
    }
    $29 = ((($28)) + 4|0); //@line 247 "./src/cpp/unrar/model.cpp"
    $30 = HEAP32[$29>>2]|0; //@line 247 "./src/cpp/unrar/model.cpp"
    $3 = $30; //@line 247 "./src/cpp/unrar/model.cpp"
    $31 = HEAP8[$30>>0]|0; //@line 247 "./src/cpp/unrar/model.cpp"
    $32 = $31&255; //@line 247 "./src/cpp/unrar/model.cpp"
    $33 = HEAP8[$2>>0]|0; //@line 247 "./src/cpp/unrar/model.cpp"
    $34 = $33&255; //@line 247 "./src/cpp/unrar/model.cpp"
    $35 = ($32|0)!=($34|0); //@line 247 "./src/cpp/unrar/model.cpp"
    if ($35) {
     while(1) {
      $36 = $3; //@line 251 "./src/cpp/unrar/model.cpp"
      $37 = ((($36)) + 8|0); //@line 251 "./src/cpp/unrar/model.cpp"
      $3 = $37; //@line 251 "./src/cpp/unrar/model.cpp"
      $38 = $3; //@line 252 "./src/cpp/unrar/model.cpp"
      $39 = HEAP8[$38>>0]|0; //@line 252 "./src/cpp/unrar/model.cpp"
      $40 = $39&255; //@line 252 "./src/cpp/unrar/model.cpp"
      $41 = HEAP8[$2>>0]|0; //@line 252 "./src/cpp/unrar/model.cpp"
      $42 = $41&255; //@line 252 "./src/cpp/unrar/model.cpp"
      $43 = ($40|0)!=($42|0); //@line 252 "./src/cpp/unrar/model.cpp"
      if (!($43)) {
       break;
      }
     }
     $44 = $3; //@line 253 "./src/cpp/unrar/model.cpp"
     $45 = ((($44)) + 1|0); //@line 253 "./src/cpp/unrar/model.cpp"
     $46 = HEAP8[$45>>0]|0; //@line 253 "./src/cpp/unrar/model.cpp"
     $47 = $46&255; //@line 253 "./src/cpp/unrar/model.cpp"
     $48 = $3; //@line 253 "./src/cpp/unrar/model.cpp"
     $49 = ((($48)) + -8|0); //@line 253 "./src/cpp/unrar/model.cpp"
     $50 = ((($49)) + 1|0); //@line 253 "./src/cpp/unrar/model.cpp"
     $51 = HEAP8[$50>>0]|0; //@line 253 "./src/cpp/unrar/model.cpp"
     $52 = $51&255; //@line 253 "./src/cpp/unrar/model.cpp"
     $53 = ($47|0)>=($52|0); //@line 253 "./src/cpp/unrar/model.cpp"
     if ($53) {
      $54 = $3; //@line 255 "./src/cpp/unrar/model.cpp"
      $55 = $3; //@line 255 "./src/cpp/unrar/model.cpp"
      $56 = ((($55)) + -8|0); //@line 255 "./src/cpp/unrar/model.cpp"
      __Z10_PPMD_SWAPI12RARPPM_STATEEvRT_S2_($54,$56); //@line 255 "./src/cpp/unrar/model.cpp"
      $57 = $3; //@line 256 "./src/cpp/unrar/model.cpp"
      $58 = ((($57)) + -8|0); //@line 256 "./src/cpp/unrar/model.cpp"
      $3 = $58; //@line 256 "./src/cpp/unrar/model.cpp"
     }
    }
    $59 = $3; //@line 259 "./src/cpp/unrar/model.cpp"
    $60 = ((($59)) + 1|0); //@line 259 "./src/cpp/unrar/model.cpp"
    $61 = HEAP8[$60>>0]|0; //@line 259 "./src/cpp/unrar/model.cpp"
    $62 = $61&255; //@line 259 "./src/cpp/unrar/model.cpp"
    $63 = ($62|0)<(115); //@line 259 "./src/cpp/unrar/model.cpp"
    if ($63) {
     $64 = $3; //@line 261 "./src/cpp/unrar/model.cpp"
     $65 = ((($64)) + 1|0); //@line 261 "./src/cpp/unrar/model.cpp"
     $66 = HEAP8[$65>>0]|0; //@line 261 "./src/cpp/unrar/model.cpp"
     $67 = $66&255; //@line 261 "./src/cpp/unrar/model.cpp"
     $68 = (($67) + 2)|0; //@line 261 "./src/cpp/unrar/model.cpp"
     $69 = $68&255; //@line 261 "./src/cpp/unrar/model.cpp"
     HEAP8[$65>>0] = $69; //@line 261 "./src/cpp/unrar/model.cpp"
     $70 = $4; //@line 262 "./src/cpp/unrar/model.cpp"
     $71 = ((($70)) + 4|0); //@line 262 "./src/cpp/unrar/model.cpp"
     $72 = HEAP16[$71>>1]|0; //@line 262 "./src/cpp/unrar/model.cpp"
     $73 = $72&65535; //@line 262 "./src/cpp/unrar/model.cpp"
     $74 = (($73) + 2)|0; //@line 262 "./src/cpp/unrar/model.cpp"
     $75 = $74&65535; //@line 262 "./src/cpp/unrar/model.cpp"
     HEAP16[$71>>1] = $75; //@line 262 "./src/cpp/unrar/model.cpp"
    }
   }
  }
 } while(0);
 $88 = ((($11)) + 1632|0); //@line 271 "./src/cpp/unrar/model.cpp"
 $89 = HEAP32[$88>>2]|0; //@line 271 "./src/cpp/unrar/model.cpp"
 $90 = ($89|0)!=(0); //@line 271 "./src/cpp/unrar/model.cpp"
 L15: do {
  if ($90) {
   $101 = HEAP8[$2>>0]|0; //@line 278 "./src/cpp/unrar/model.cpp"
   $102 = ((($11)) + 19088|0); //@line 278 "./src/cpp/unrar/model.cpp"
   $103 = ((($102)) + 336|0); //@line 278 "./src/cpp/unrar/model.cpp"
   $104 = HEAP32[$103>>2]|0; //@line 278 "./src/cpp/unrar/model.cpp"
   $105 = ((($104)) + 1|0); //@line 278 "./src/cpp/unrar/model.cpp"
   HEAP32[$103>>2] = $105; //@line 278 "./src/cpp/unrar/model.cpp"
   HEAP8[$104>>0] = $101; //@line 278 "./src/cpp/unrar/model.cpp"
   $106 = ((($11)) + 19088|0); //@line 279 "./src/cpp/unrar/model.cpp"
   $107 = ((($106)) + 336|0); //@line 279 "./src/cpp/unrar/model.cpp"
   $108 = HEAP32[$107>>2]|0; //@line 279 "./src/cpp/unrar/model.cpp"
   $5 = $108; //@line 279 "./src/cpp/unrar/model.cpp"
   $109 = ((($11)) + 19088|0); //@line 280 "./src/cpp/unrar/model.cpp"
   $110 = ((($109)) + 336|0); //@line 280 "./src/cpp/unrar/model.cpp"
   $111 = HEAP32[$110>>2]|0; //@line 280 "./src/cpp/unrar/model.cpp"
   $112 = ((($11)) + 19088|0); //@line 280 "./src/cpp/unrar/model.cpp"
   $113 = ((($112)) + 348|0); //@line 280 "./src/cpp/unrar/model.cpp"
   $114 = HEAP32[$113>>2]|0; //@line 280 "./src/cpp/unrar/model.cpp"
   $115 = ($111>>>0)>=($114>>>0); //@line 280 "./src/cpp/unrar/model.cpp"
   if (!($115)) {
    $116 = ((($2)) + 4|0); //@line 282 "./src/cpp/unrar/model.cpp"
    $117 = HEAP32[$116>>2]|0; //@line 282 "./src/cpp/unrar/model.cpp"
    $118 = ($117|0)!=(0|0); //@line 282 "./src/cpp/unrar/model.cpp"
    if ($118) {
     $119 = ((($2)) + 4|0); //@line 284 "./src/cpp/unrar/model.cpp"
     $120 = HEAP32[$119>>2]|0; //@line 284 "./src/cpp/unrar/model.cpp"
     $121 = ((($11)) + 19088|0); //@line 284 "./src/cpp/unrar/model.cpp"
     $122 = ((($121)) + 336|0); //@line 284 "./src/cpp/unrar/model.cpp"
     $123 = HEAP32[$122>>2]|0; //@line 284 "./src/cpp/unrar/model.cpp"
     $124 = ($120>>>0)<=($123>>>0); //@line 284 "./src/cpp/unrar/model.cpp"
     if ($124) {
      $125 = $3; //@line 285 "./src/cpp/unrar/model.cpp"
      $126 = (__ZN8ModelPPM16CreateSuccessorsEbP12RARPPM_STATE($11,0,$125)|0); //@line 285 "./src/cpp/unrar/model.cpp"
      $127 = ((($2)) + 4|0); //@line 285 "./src/cpp/unrar/model.cpp"
      HEAP32[$127>>2] = $126; //@line 285 "./src/cpp/unrar/model.cpp"
      $128 = ($126|0)==(0|0); //@line 285 "./src/cpp/unrar/model.cpp"
      if ($128) {
       break;
      }
     }
     $129 = ((($11)) + 1632|0); //@line 287 "./src/cpp/unrar/model.cpp"
     $130 = HEAP32[$129>>2]|0; //@line 287 "./src/cpp/unrar/model.cpp"
     $131 = (($130) + -1)|0; //@line 287 "./src/cpp/unrar/model.cpp"
     HEAP32[$129>>2] = $131; //@line 287 "./src/cpp/unrar/model.cpp"
     $132 = ($131|0)!=(0); //@line 287 "./src/cpp/unrar/model.cpp"
     if (!($132)) {
      $133 = ((($2)) + 4|0); //@line 289 "./src/cpp/unrar/model.cpp"
      $134 = HEAP32[$133>>2]|0; //@line 289 "./src/cpp/unrar/model.cpp"
      $5 = $134; //@line 289 "./src/cpp/unrar/model.cpp"
      $135 = ((($11)) + 1616|0); //@line 290 "./src/cpp/unrar/model.cpp"
      $136 = HEAP32[$135>>2]|0; //@line 290 "./src/cpp/unrar/model.cpp"
      $137 = ((($11)) + 1608|0); //@line 290 "./src/cpp/unrar/model.cpp"
      $138 = HEAP32[$137>>2]|0; //@line 290 "./src/cpp/unrar/model.cpp"
      $139 = ($136|0)!=($138|0); //@line 290 "./src/cpp/unrar/model.cpp"
      $140 = $139&1; //@line 290 "./src/cpp/unrar/model.cpp"
      $141 = ((($11)) + 19088|0); //@line 290 "./src/cpp/unrar/model.cpp"
      $142 = ((($141)) + 336|0); //@line 290 "./src/cpp/unrar/model.cpp"
      $143 = HEAP32[$142>>2]|0; //@line 290 "./src/cpp/unrar/model.cpp"
      $144 = (0 - ($140))|0; //@line 290 "./src/cpp/unrar/model.cpp"
      $145 = (($143) + ($144)|0); //@line 290 "./src/cpp/unrar/model.cpp"
      HEAP32[$142>>2] = $145; //@line 290 "./src/cpp/unrar/model.cpp"
     }
    } else {
     $146 = $5; //@line 295 "./src/cpp/unrar/model.cpp"
     $147 = ((($11)) + 1620|0); //@line 295 "./src/cpp/unrar/model.cpp"
     $148 = HEAP32[$147>>2]|0; //@line 295 "./src/cpp/unrar/model.cpp"
     $149 = ((($148)) + 4|0); //@line 295 "./src/cpp/unrar/model.cpp"
     HEAP32[$149>>2] = $146; //@line 295 "./src/cpp/unrar/model.cpp"
     $150 = ((($11)) + 1608|0); //@line 296 "./src/cpp/unrar/model.cpp"
     $151 = HEAP32[$150>>2]|0; //@line 296 "./src/cpp/unrar/model.cpp"
     $152 = ((($2)) + 4|0); //@line 296 "./src/cpp/unrar/model.cpp"
     HEAP32[$152>>2] = $151; //@line 296 "./src/cpp/unrar/model.cpp"
    }
    $153 = ((($11)) + 1608|0); //@line 298 "./src/cpp/unrar/model.cpp"
    $154 = HEAP32[$153>>2]|0; //@line 298 "./src/cpp/unrar/model.cpp"
    $155 = ((($154)) + 4|0); //@line 298 "./src/cpp/unrar/model.cpp"
    $156 = HEAP16[$155>>1]|0; //@line 298 "./src/cpp/unrar/model.cpp"
    $157 = $156&65535; //@line 298 "./src/cpp/unrar/model.cpp"
    $158 = ((($11)) + 1608|0); //@line 298 "./src/cpp/unrar/model.cpp"
    $159 = HEAP32[$158>>2]|0; //@line 298 "./src/cpp/unrar/model.cpp"
    $160 = HEAP16[$159>>1]|0; //@line 298 "./src/cpp/unrar/model.cpp"
    $161 = $160&65535; //@line 298 "./src/cpp/unrar/model.cpp"
    $7 = $161; //@line 298 "./src/cpp/unrar/model.cpp"
    $162 = (($157) - ($161))|0; //@line 298 "./src/cpp/unrar/model.cpp"
    $163 = ((($2)) + 1|0); //@line 298 "./src/cpp/unrar/model.cpp"
    $164 = HEAP8[$163>>0]|0; //@line 298 "./src/cpp/unrar/model.cpp"
    $165 = $164&255; //@line 298 "./src/cpp/unrar/model.cpp"
    $166 = (($165) - 1)|0; //@line 298 "./src/cpp/unrar/model.cpp"
    $167 = (($162) - ($166))|0; //@line 298 "./src/cpp/unrar/model.cpp"
    $10 = $167; //@line 298 "./src/cpp/unrar/model.cpp"
    $168 = ((($11)) + 1616|0); //@line 299 "./src/cpp/unrar/model.cpp"
    $169 = HEAP32[$168>>2]|0; //@line 299 "./src/cpp/unrar/model.cpp"
    $4 = $169; //@line 299 "./src/cpp/unrar/model.cpp"
    while(1) {
     $170 = $4; //@line 299 "./src/cpp/unrar/model.cpp"
     $171 = ((($11)) + 1608|0); //@line 299 "./src/cpp/unrar/model.cpp"
     $172 = HEAP32[$171>>2]|0; //@line 299 "./src/cpp/unrar/model.cpp"
     $173 = ($170|0)!=($172|0); //@line 299 "./src/cpp/unrar/model.cpp"
     if (!($173)) {
      break;
     }
     $174 = $4; //@line 301 "./src/cpp/unrar/model.cpp"
     $175 = HEAP16[$174>>1]|0; //@line 301 "./src/cpp/unrar/model.cpp"
     $176 = $175&65535; //@line 301 "./src/cpp/unrar/model.cpp"
     $6 = $176; //@line 301 "./src/cpp/unrar/model.cpp"
     $177 = ($176|0)!=(1); //@line 301 "./src/cpp/unrar/model.cpp"
     if ($177) {
      $178 = $6; //@line 303 "./src/cpp/unrar/model.cpp"
      $179 = $178 & 1; //@line 303 "./src/cpp/unrar/model.cpp"
      $180 = ($179|0)==(0); //@line 303 "./src/cpp/unrar/model.cpp"
      if ($180) {
       $181 = ((($11)) + 19088|0); //@line 305 "./src/cpp/unrar/model.cpp"
       $182 = $4; //@line 305 "./src/cpp/unrar/model.cpp"
       $183 = ((($182)) + 4|0); //@line 305 "./src/cpp/unrar/model.cpp"
       $184 = ((($183)) + 4|0); //@line 305 "./src/cpp/unrar/model.cpp"
       $185 = HEAP32[$184>>2]|0; //@line 305 "./src/cpp/unrar/model.cpp"
       $186 = $6; //@line 305 "./src/cpp/unrar/model.cpp"
       $187 = $186 >>> 1; //@line 305 "./src/cpp/unrar/model.cpp"
       $188 = (__ZN12SubAllocator11ExpandUnitsEPvi($181,$185,$187)|0); //@line 305 "./src/cpp/unrar/model.cpp"
       $189 = $4; //@line 305 "./src/cpp/unrar/model.cpp"
       $190 = ((($189)) + 4|0); //@line 305 "./src/cpp/unrar/model.cpp"
       $191 = ((($190)) + 4|0); //@line 305 "./src/cpp/unrar/model.cpp"
       HEAP32[$191>>2] = $188; //@line 305 "./src/cpp/unrar/model.cpp"
       $192 = $4; //@line 306 "./src/cpp/unrar/model.cpp"
       $193 = ((($192)) + 4|0); //@line 306 "./src/cpp/unrar/model.cpp"
       $194 = ((($193)) + 4|0); //@line 306 "./src/cpp/unrar/model.cpp"
       $195 = HEAP32[$194>>2]|0; //@line 306 "./src/cpp/unrar/model.cpp"
       $196 = ($195|0)!=(0|0); //@line 306 "./src/cpp/unrar/model.cpp"
       if (!($196)) {
        break L15;
       }
      }
      $197 = $6; //@line 309 "./src/cpp/unrar/model.cpp"
      $198 = $197<<1; //@line 309 "./src/cpp/unrar/model.cpp"
      $199 = $7; //@line 309 "./src/cpp/unrar/model.cpp"
      $200 = ($198>>>0)<($199>>>0); //@line 309 "./src/cpp/unrar/model.cpp"
      $201 = $200&1; //@line 309 "./src/cpp/unrar/model.cpp"
      $202 = $6; //@line 309 "./src/cpp/unrar/model.cpp"
      $203 = $202<<2; //@line 309 "./src/cpp/unrar/model.cpp"
      $204 = $7; //@line 309 "./src/cpp/unrar/model.cpp"
      $205 = ($203>>>0)<=($204>>>0); //@line 309 "./src/cpp/unrar/model.cpp"
      $206 = $205&1; //@line 309 "./src/cpp/unrar/model.cpp"
      $207 = $4; //@line 309 "./src/cpp/unrar/model.cpp"
      $208 = ((($207)) + 4|0); //@line 309 "./src/cpp/unrar/model.cpp"
      $209 = HEAP16[$208>>1]|0; //@line 309 "./src/cpp/unrar/model.cpp"
      $210 = $209&65535; //@line 309 "./src/cpp/unrar/model.cpp"
      $211 = $6; //@line 309 "./src/cpp/unrar/model.cpp"
      $212 = $211<<3; //@line 309 "./src/cpp/unrar/model.cpp"
      $213 = ($210>>>0)<=($212>>>0); //@line 309 "./src/cpp/unrar/model.cpp"
      $214 = $213&1; //@line 309 "./src/cpp/unrar/model.cpp"
      $215 = $206 & $214; //@line 309 "./src/cpp/unrar/model.cpp"
      $216 = $215<<1; //@line 309 "./src/cpp/unrar/model.cpp"
      $217 = (($201) + ($216))|0; //@line 309 "./src/cpp/unrar/model.cpp"
      $218 = $4; //@line 309 "./src/cpp/unrar/model.cpp"
      $219 = ((($218)) + 4|0); //@line 309 "./src/cpp/unrar/model.cpp"
      $220 = HEAP16[$219>>1]|0; //@line 309 "./src/cpp/unrar/model.cpp"
      $221 = $220&65535; //@line 309 "./src/cpp/unrar/model.cpp"
      $222 = (($221) + ($217))|0; //@line 309 "./src/cpp/unrar/model.cpp"
      $223 = $222&65535; //@line 309 "./src/cpp/unrar/model.cpp"
      HEAP16[$219>>1] = $223; //@line 309 "./src/cpp/unrar/model.cpp"
     } else {
      $224 = ((($11)) + 19088|0); //@line 313 "./src/cpp/unrar/model.cpp"
      $225 = (__ZN12SubAllocator10AllocUnitsEi($224,1)|0); //@line 313 "./src/cpp/unrar/model.cpp"
      $3 = $225; //@line 313 "./src/cpp/unrar/model.cpp"
      $226 = $3; //@line 314 "./src/cpp/unrar/model.cpp"
      $227 = ($226|0)!=(0|0); //@line 314 "./src/cpp/unrar/model.cpp"
      if (!($227)) {
       break L15;
      }
      $228 = $4; //@line 316 "./src/cpp/unrar/model.cpp"
      $229 = ((($228)) + 4|0); //@line 316 "./src/cpp/unrar/model.cpp"
      $230 = $3; //@line 316 "./src/cpp/unrar/model.cpp"
      ;HEAP32[$230>>2]=HEAP32[$229>>2]|0;HEAP32[$230+4>>2]=HEAP32[$229+4>>2]|0; //@line 316 "./src/cpp/unrar/model.cpp"
      $231 = $3; //@line 317 "./src/cpp/unrar/model.cpp"
      $232 = $4; //@line 317 "./src/cpp/unrar/model.cpp"
      $233 = ((($232)) + 4|0); //@line 317 "./src/cpp/unrar/model.cpp"
      $234 = ((($233)) + 4|0); //@line 317 "./src/cpp/unrar/model.cpp"
      HEAP32[$234>>2] = $231; //@line 317 "./src/cpp/unrar/model.cpp"
      $235 = $3; //@line 318 "./src/cpp/unrar/model.cpp"
      $236 = ((($235)) + 1|0); //@line 318 "./src/cpp/unrar/model.cpp"
      $237 = HEAP8[$236>>0]|0; //@line 318 "./src/cpp/unrar/model.cpp"
      $238 = $237&255; //@line 318 "./src/cpp/unrar/model.cpp"
      $239 = ($238|0)<(30); //@line 318 "./src/cpp/unrar/model.cpp"
      $240 = $3;
      $241 = ((($240)) + 1|0);
      if ($239) {
       $242 = HEAP8[$241>>0]|0; //@line 319 "./src/cpp/unrar/model.cpp"
       $243 = $242&255; //@line 319 "./src/cpp/unrar/model.cpp"
       $244 = $3; //@line 319 "./src/cpp/unrar/model.cpp"
       $245 = ((($244)) + 1|0); //@line 319 "./src/cpp/unrar/model.cpp"
       $246 = HEAP8[$245>>0]|0; //@line 319 "./src/cpp/unrar/model.cpp"
       $247 = $246&255; //@line 319 "./src/cpp/unrar/model.cpp"
       $248 = (($247) + ($243))|0; //@line 319 "./src/cpp/unrar/model.cpp"
       $249 = $248&255; //@line 319 "./src/cpp/unrar/model.cpp"
       HEAP8[$245>>0] = $249; //@line 319 "./src/cpp/unrar/model.cpp"
      } else {
       HEAP8[$241>>0] = 120; //@line 321 "./src/cpp/unrar/model.cpp"
      }
      $250 = $3; //@line 322 "./src/cpp/unrar/model.cpp"
      $251 = ((($250)) + 1|0); //@line 322 "./src/cpp/unrar/model.cpp"
      $252 = HEAP8[$251>>0]|0; //@line 322 "./src/cpp/unrar/model.cpp"
      $253 = $252&255; //@line 322 "./src/cpp/unrar/model.cpp"
      $254 = ((($11)) + 1628|0); //@line 322 "./src/cpp/unrar/model.cpp"
      $255 = HEAP32[$254>>2]|0; //@line 322 "./src/cpp/unrar/model.cpp"
      $256 = (($253) + ($255))|0; //@line 322 "./src/cpp/unrar/model.cpp"
      $257 = $7; //@line 322 "./src/cpp/unrar/model.cpp"
      $258 = ($257>>>0)>(3); //@line 322 "./src/cpp/unrar/model.cpp"
      $259 = $258&1; //@line 322 "./src/cpp/unrar/model.cpp"
      $260 = (($256) + ($259))|0; //@line 322 "./src/cpp/unrar/model.cpp"
      $261 = $260&65535; //@line 322 "./src/cpp/unrar/model.cpp"
      $262 = $4; //@line 322 "./src/cpp/unrar/model.cpp"
      $263 = ((($262)) + 4|0); //@line 322 "./src/cpp/unrar/model.cpp"
      HEAP16[$263>>1] = $261; //@line 322 "./src/cpp/unrar/model.cpp"
     }
     $264 = ((($2)) + 1|0); //@line 324 "./src/cpp/unrar/model.cpp"
     $265 = HEAP8[$264>>0]|0; //@line 324 "./src/cpp/unrar/model.cpp"
     $266 = $265&255; //@line 324 "./src/cpp/unrar/model.cpp"
     $267 = $266<<1; //@line 324 "./src/cpp/unrar/model.cpp"
     $268 = $4; //@line 324 "./src/cpp/unrar/model.cpp"
     $269 = ((($268)) + 4|0); //@line 324 "./src/cpp/unrar/model.cpp"
     $270 = HEAP16[$269>>1]|0; //@line 324 "./src/cpp/unrar/model.cpp"
     $271 = $270&65535; //@line 324 "./src/cpp/unrar/model.cpp"
     $272 = (($271) + 6)|0; //@line 324 "./src/cpp/unrar/model.cpp"
     $273 = Math_imul($267, $272)|0; //@line 324 "./src/cpp/unrar/model.cpp"
     $8 = $273; //@line 324 "./src/cpp/unrar/model.cpp"
     $274 = $10; //@line 325 "./src/cpp/unrar/model.cpp"
     $275 = $4; //@line 325 "./src/cpp/unrar/model.cpp"
     $276 = ((($275)) + 4|0); //@line 325 "./src/cpp/unrar/model.cpp"
     $277 = HEAP16[$276>>1]|0; //@line 325 "./src/cpp/unrar/model.cpp"
     $278 = $277&65535; //@line 325 "./src/cpp/unrar/model.cpp"
     $279 = (($274) + ($278))|0; //@line 325 "./src/cpp/unrar/model.cpp"
     $9 = $279; //@line 325 "./src/cpp/unrar/model.cpp"
     $280 = $8; //@line 326 "./src/cpp/unrar/model.cpp"
     $281 = $9; //@line 326 "./src/cpp/unrar/model.cpp"
     $282 = ($281*6)|0; //@line 326 "./src/cpp/unrar/model.cpp"
     $283 = ($280>>>0)<($282>>>0); //@line 326 "./src/cpp/unrar/model.cpp"
     $284 = $8;
     $285 = $9;
     if ($283) {
      $286 = ($284>>>0)>($285>>>0); //@line 328 "./src/cpp/unrar/model.cpp"
      $287 = $286&1; //@line 328 "./src/cpp/unrar/model.cpp"
      $288 = (1 + ($287))|0; //@line 328 "./src/cpp/unrar/model.cpp"
      $289 = $8; //@line 328 "./src/cpp/unrar/model.cpp"
      $290 = $9; //@line 328 "./src/cpp/unrar/model.cpp"
      $291 = $290<<2; //@line 328 "./src/cpp/unrar/model.cpp"
      $292 = ($289>>>0)>=($291>>>0); //@line 328 "./src/cpp/unrar/model.cpp"
      $293 = $292&1; //@line 328 "./src/cpp/unrar/model.cpp"
      $294 = (($288) + ($293))|0; //@line 328 "./src/cpp/unrar/model.cpp"
      $8 = $294; //@line 328 "./src/cpp/unrar/model.cpp"
      $295 = $4; //@line 329 "./src/cpp/unrar/model.cpp"
      $$sink3 = 3;$$sink6 = $295;
     } else {
      $296 = ($285*9)|0; //@line 333 "./src/cpp/unrar/model.cpp"
      $297 = ($284>>>0)>=($296>>>0); //@line 333 "./src/cpp/unrar/model.cpp"
      $298 = $297&1; //@line 333 "./src/cpp/unrar/model.cpp"
      $299 = (4 + ($298))|0; //@line 333 "./src/cpp/unrar/model.cpp"
      $300 = $8; //@line 333 "./src/cpp/unrar/model.cpp"
      $301 = $9; //@line 333 "./src/cpp/unrar/model.cpp"
      $302 = ($301*12)|0; //@line 333 "./src/cpp/unrar/model.cpp"
      $303 = ($300>>>0)>=($302>>>0); //@line 333 "./src/cpp/unrar/model.cpp"
      $304 = $303&1; //@line 333 "./src/cpp/unrar/model.cpp"
      $305 = (($299) + ($304))|0; //@line 333 "./src/cpp/unrar/model.cpp"
      $306 = $8; //@line 333 "./src/cpp/unrar/model.cpp"
      $307 = $9; //@line 333 "./src/cpp/unrar/model.cpp"
      $308 = ($307*15)|0; //@line 333 "./src/cpp/unrar/model.cpp"
      $309 = ($306>>>0)>=($308>>>0); //@line 333 "./src/cpp/unrar/model.cpp"
      $310 = $309&1; //@line 333 "./src/cpp/unrar/model.cpp"
      $311 = (($305) + ($310))|0; //@line 333 "./src/cpp/unrar/model.cpp"
      $8 = $311; //@line 333 "./src/cpp/unrar/model.cpp"
      $312 = $8; //@line 334 "./src/cpp/unrar/model.cpp"
      $313 = $4; //@line 334 "./src/cpp/unrar/model.cpp"
      $$sink3 = $312;$$sink6 = $313;
     }
     $314 = ((($$sink6)) + 4|0);
     $315 = HEAP16[$314>>1]|0;
     $316 = $315&65535;
     $317 = (($316) + ($$sink3))|0;
     $318 = $317&65535;
     HEAP16[$314>>1] = $318;
     $319 = $4; //@line 336 "./src/cpp/unrar/model.cpp"
     $320 = ((($319)) + 4|0); //@line 336 "./src/cpp/unrar/model.cpp"
     $321 = ((($320)) + 4|0); //@line 336 "./src/cpp/unrar/model.cpp"
     $322 = HEAP32[$321>>2]|0; //@line 336 "./src/cpp/unrar/model.cpp"
     $323 = $6; //@line 336 "./src/cpp/unrar/model.cpp"
     $324 = (($322) + ($323<<3)|0); //@line 336 "./src/cpp/unrar/model.cpp"
     $3 = $324; //@line 336 "./src/cpp/unrar/model.cpp"
     $325 = $5; //@line 337 "./src/cpp/unrar/model.cpp"
     $326 = $3; //@line 337 "./src/cpp/unrar/model.cpp"
     $327 = ((($326)) + 4|0); //@line 337 "./src/cpp/unrar/model.cpp"
     HEAP32[$327>>2] = $325; //@line 337 "./src/cpp/unrar/model.cpp"
     $328 = HEAP8[$2>>0]|0; //@line 338 "./src/cpp/unrar/model.cpp"
     $329 = $3; //@line 338 "./src/cpp/unrar/model.cpp"
     HEAP8[$329>>0] = $328; //@line 338 "./src/cpp/unrar/model.cpp"
     $330 = $8; //@line 339 "./src/cpp/unrar/model.cpp"
     $331 = $330&255; //@line 339 "./src/cpp/unrar/model.cpp"
     $332 = $3; //@line 339 "./src/cpp/unrar/model.cpp"
     $333 = ((($332)) + 1|0); //@line 339 "./src/cpp/unrar/model.cpp"
     HEAP8[$333>>0] = $331; //@line 339 "./src/cpp/unrar/model.cpp"
     $334 = $6; //@line 340 "./src/cpp/unrar/model.cpp"
     $335 = (($334) + 1)|0; //@line 340 "./src/cpp/unrar/model.cpp"
     $6 = $335; //@line 340 "./src/cpp/unrar/model.cpp"
     $336 = $335&65535; //@line 340 "./src/cpp/unrar/model.cpp"
     $337 = $4; //@line 340 "./src/cpp/unrar/model.cpp"
     HEAP16[$337>>1] = $336; //@line 340 "./src/cpp/unrar/model.cpp"
     $338 = $4; //@line 299 "./src/cpp/unrar/model.cpp"
     $339 = ((($338)) + 12|0); //@line 299 "./src/cpp/unrar/model.cpp"
     $340 = HEAP32[$339>>2]|0; //@line 299 "./src/cpp/unrar/model.cpp"
     $4 = $340; //@line 299 "./src/cpp/unrar/model.cpp"
    }
    $341 = ((($2)) + 4|0); //@line 342 "./src/cpp/unrar/model.cpp"
    $342 = HEAP32[$341>>2]|0; //@line 342 "./src/cpp/unrar/model.cpp"
    $343 = ((($11)) + 1608|0); //@line 342 "./src/cpp/unrar/model.cpp"
    HEAP32[$343>>2] = $342; //@line 342 "./src/cpp/unrar/model.cpp"
    $344 = ((($11)) + 1616|0); //@line 342 "./src/cpp/unrar/model.cpp"
    HEAP32[$344>>2] = $342; //@line 342 "./src/cpp/unrar/model.cpp"
    STACKTOP = sp;return; //@line 347 "./src/cpp/unrar/model.cpp"
   }
  } else {
   $91 = $3; //@line 273 "./src/cpp/unrar/model.cpp"
   $92 = (__ZN8ModelPPM16CreateSuccessorsEbP12RARPPM_STATE($11,1,$91)|0); //@line 273 "./src/cpp/unrar/model.cpp"
   $93 = ((($11)) + 1620|0); //@line 273 "./src/cpp/unrar/model.cpp"
   $94 = HEAP32[$93>>2]|0; //@line 273 "./src/cpp/unrar/model.cpp"
   $95 = ((($94)) + 4|0); //@line 273 "./src/cpp/unrar/model.cpp"
   HEAP32[$95>>2] = $92; //@line 273 "./src/cpp/unrar/model.cpp"
   $96 = ((($11)) + 1616|0); //@line 273 "./src/cpp/unrar/model.cpp"
   HEAP32[$96>>2] = $92; //@line 273 "./src/cpp/unrar/model.cpp"
   $97 = ((($11)) + 1608|0); //@line 273 "./src/cpp/unrar/model.cpp"
   HEAP32[$97>>2] = $92; //@line 273 "./src/cpp/unrar/model.cpp"
   $98 = ((($11)) + 1608|0); //@line 274 "./src/cpp/unrar/model.cpp"
   $99 = HEAP32[$98>>2]|0; //@line 274 "./src/cpp/unrar/model.cpp"
   $100 = ($99|0)!=(0|0); //@line 274 "./src/cpp/unrar/model.cpp"
   if ($100) {
    STACKTOP = sp;return; //@line 347 "./src/cpp/unrar/model.cpp"
   }
  }
 } while(0);
 __ZN8ModelPPM16RestartModelRareEv($11); //@line 345 "./src/cpp/unrar/model.cpp"
 $345 = ((($11)) + 2672|0); //@line 346 "./src/cpp/unrar/model.cpp"
 HEAP8[$345>>0] = 0; //@line 346 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return; //@line 347 "./src/cpp/unrar/model.cpp"
}
function __ZN8ModelPPM9ClearMaskEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 2672|0); //@line 530 "./src/cpp/unrar/model.cpp"
 HEAP8[$3>>0] = 1; //@line 530 "./src/cpp/unrar/model.cpp"
 $4 = ((($2)) + 1648|0); //@line 531 "./src/cpp/unrar/model.cpp"
 _memset(($4|0),0,256)|0; //@line 531 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return; //@line 532 "./src/cpp/unrar/model.cpp"
}
function __ZN8ModelPPM16CreateSuccessorsEbP12RARPPM_STATE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $7 = sp + 288|0;
 $11 = sp + 16|0;
 $4 = $0;
 $15 = $1&1;
 $5 = $15;
 $6 = $2;
 $16 = $4;
 $17 = ((($16)) + 1608|0); //@line 173 "./src/cpp/unrar/model.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 173 "./src/cpp/unrar/model.cpp"
 $8 = $18; //@line 173 "./src/cpp/unrar/model.cpp"
 $19 = ((($16)) + 1620|0); //@line 173 "./src/cpp/unrar/model.cpp"
 $20 = HEAP32[$19>>2]|0; //@line 173 "./src/cpp/unrar/model.cpp"
 $21 = ((($20)) + 4|0); //@line 173 "./src/cpp/unrar/model.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 173 "./src/cpp/unrar/model.cpp"
 $9 = $22; //@line 173 "./src/cpp/unrar/model.cpp"
 $12 = $11; //@line 174 "./src/cpp/unrar/model.cpp"
 $23 = $5; //@line 175 "./src/cpp/unrar/model.cpp"
 $24 = $23&1; //@line 175 "./src/cpp/unrar/model.cpp"
 if ($24) {
  label = 3;
 } else {
  $25 = ((($16)) + 1620|0); //@line 177 "./src/cpp/unrar/model.cpp"
  $26 = HEAP32[$25>>2]|0; //@line 177 "./src/cpp/unrar/model.cpp"
  $27 = $12; //@line 177 "./src/cpp/unrar/model.cpp"
  $28 = ((($27)) + 4|0); //@line 177 "./src/cpp/unrar/model.cpp"
  $12 = $28; //@line 177 "./src/cpp/unrar/model.cpp"
  HEAP32[$27>>2] = $26; //@line 177 "./src/cpp/unrar/model.cpp"
  $29 = $8; //@line 178 "./src/cpp/unrar/model.cpp"
  $30 = ((($29)) + 12|0); //@line 178 "./src/cpp/unrar/model.cpp"
  $31 = HEAP32[$30>>2]|0; //@line 178 "./src/cpp/unrar/model.cpp"
  $32 = ($31|0)!=(0|0); //@line 178 "./src/cpp/unrar/model.cpp"
  if ($32) {
   label = 3;
  }
 }
 L3: do {
  if ((label|0) == 3) {
   $33 = $6; //@line 181 "./src/cpp/unrar/model.cpp"
   $34 = ($33|0)!=(0|0); //@line 181 "./src/cpp/unrar/model.cpp"
   if ($34) {
    $35 = $6; //@line 183 "./src/cpp/unrar/model.cpp"
    $10 = $35; //@line 183 "./src/cpp/unrar/model.cpp"
    $36 = $8; //@line 184 "./src/cpp/unrar/model.cpp"
    $37 = ((($36)) + 12|0); //@line 184 "./src/cpp/unrar/model.cpp"
    $38 = HEAP32[$37>>2]|0; //@line 184 "./src/cpp/unrar/model.cpp"
    $8 = $38; //@line 184 "./src/cpp/unrar/model.cpp"
    label = 9;
   }
   L7: while(1) {
    if ((label|0) == 9) {
     label = 0;
     $67 = $10; //@line 201 "./src/cpp/unrar/model.cpp"
     $68 = ((($67)) + 4|0); //@line 201 "./src/cpp/unrar/model.cpp"
     $69 = HEAP32[$68>>2]|0; //@line 201 "./src/cpp/unrar/model.cpp"
     $70 = $9; //@line 201 "./src/cpp/unrar/model.cpp"
     $71 = ($69|0)!=($70|0); //@line 201 "./src/cpp/unrar/model.cpp"
     $72 = $10;
     if ($71) {
      break;
     }
     $75 = $12; //@line 206 "./src/cpp/unrar/model.cpp"
     $76 = ((($75)) + 4|0); //@line 206 "./src/cpp/unrar/model.cpp"
     $12 = $76; //@line 206 "./src/cpp/unrar/model.cpp"
     HEAP32[$75>>2] = $72; //@line 206 "./src/cpp/unrar/model.cpp"
     $77 = $8; //@line 207 "./src/cpp/unrar/model.cpp"
     $78 = ((($77)) + 12|0); //@line 207 "./src/cpp/unrar/model.cpp"
     $79 = HEAP32[$78>>2]|0; //@line 207 "./src/cpp/unrar/model.cpp"
     $80 = ($79|0)!=(0|0); //@line 207 "./src/cpp/unrar/model.cpp"
     if (!($80)) {
      break L3;
     }
    }
    $39 = $8; //@line 189 "./src/cpp/unrar/model.cpp"
    $40 = ((($39)) + 12|0); //@line 189 "./src/cpp/unrar/model.cpp"
    $41 = HEAP32[$40>>2]|0; //@line 189 "./src/cpp/unrar/model.cpp"
    $8 = $41; //@line 189 "./src/cpp/unrar/model.cpp"
    $42 = $8; //@line 190 "./src/cpp/unrar/model.cpp"
    $43 = HEAP16[$42>>1]|0; //@line 190 "./src/cpp/unrar/model.cpp"
    $44 = $43&65535; //@line 190 "./src/cpp/unrar/model.cpp"
    $45 = ($44|0)!=(1); //@line 190 "./src/cpp/unrar/model.cpp"
    $46 = $8;
    $47 = ((($46)) + 4|0);
    if (!($45)) {
     $10 = $47; //@line 199 "./src/cpp/unrar/model.cpp"
     label = 9;
     continue;
    }
    $48 = ((($47)) + 4|0); //@line 192 "./src/cpp/unrar/model.cpp"
    $49 = HEAP32[$48>>2]|0; //@line 192 "./src/cpp/unrar/model.cpp"
    $10 = $49; //@line 192 "./src/cpp/unrar/model.cpp"
    $50 = HEAP8[$49>>0]|0; //@line 192 "./src/cpp/unrar/model.cpp"
    $51 = $50&255; //@line 192 "./src/cpp/unrar/model.cpp"
    $52 = ((($16)) + 1620|0); //@line 192 "./src/cpp/unrar/model.cpp"
    $53 = HEAP32[$52>>2]|0; //@line 192 "./src/cpp/unrar/model.cpp"
    $54 = HEAP8[$53>>0]|0; //@line 192 "./src/cpp/unrar/model.cpp"
    $55 = $54&255; //@line 192 "./src/cpp/unrar/model.cpp"
    $56 = ($51|0)!=($55|0); //@line 192 "./src/cpp/unrar/model.cpp"
    if (!($56)) {
     label = 9;
     continue;
    }
    while(1) {
     $57 = $10; //@line 195 "./src/cpp/unrar/model.cpp"
     $58 = ((($57)) + 8|0); //@line 195 "./src/cpp/unrar/model.cpp"
     $10 = $58; //@line 195 "./src/cpp/unrar/model.cpp"
     $59 = $10; //@line 196 "./src/cpp/unrar/model.cpp"
     $60 = HEAP8[$59>>0]|0; //@line 196 "./src/cpp/unrar/model.cpp"
     $61 = $60&255; //@line 196 "./src/cpp/unrar/model.cpp"
     $62 = ((($16)) + 1620|0); //@line 196 "./src/cpp/unrar/model.cpp"
     $63 = HEAP32[$62>>2]|0; //@line 196 "./src/cpp/unrar/model.cpp"
     $64 = HEAP8[$63>>0]|0; //@line 196 "./src/cpp/unrar/model.cpp"
     $65 = $64&255; //@line 196 "./src/cpp/unrar/model.cpp"
     $66 = ($61|0)!=($65|0); //@line 196 "./src/cpp/unrar/model.cpp"
     if (!($66)) {
      label = 9;
      continue L7;
     }
    }
   }
   $73 = ((($72)) + 4|0); //@line 203 "./src/cpp/unrar/model.cpp"
   $74 = HEAP32[$73>>2]|0; //@line 203 "./src/cpp/unrar/model.cpp"
   $8 = $74; //@line 203 "./src/cpp/unrar/model.cpp"
  }
 } while(0);
 $81 = $12; //@line 209 "./src/cpp/unrar/model.cpp"
 $82 = ($81|0)==($11|0); //@line 209 "./src/cpp/unrar/model.cpp"
 if ($82) {
  $83 = $8; //@line 210 "./src/cpp/unrar/model.cpp"
  $3 = $83; //@line 210 "./src/cpp/unrar/model.cpp"
  $164 = $3; //@line 235 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($164|0); //@line 235 "./src/cpp/unrar/model.cpp"
 }
 $84 = $9; //@line 211 "./src/cpp/unrar/model.cpp"
 $85 = HEAP8[$84>>0]|0; //@line 211 "./src/cpp/unrar/model.cpp"
 HEAP8[$7>>0] = $85; //@line 211 "./src/cpp/unrar/model.cpp"
 $86 = $9; //@line 212 "./src/cpp/unrar/model.cpp"
 $87 = ((($86)) + 1|0); //@line 212 "./src/cpp/unrar/model.cpp"
 $88 = ((($7)) + 4|0); //@line 212 "./src/cpp/unrar/model.cpp"
 HEAP32[$88>>2] = $87; //@line 212 "./src/cpp/unrar/model.cpp"
 $89 = $8; //@line 213 "./src/cpp/unrar/model.cpp"
 $90 = HEAP16[$89>>1]|0; //@line 213 "./src/cpp/unrar/model.cpp"
 $91 = $90&65535; //@line 213 "./src/cpp/unrar/model.cpp"
 $92 = ($91|0)!=(1); //@line 213 "./src/cpp/unrar/model.cpp"
 $93 = $8;
 if ($92) {
  $94 = ((($16)) + 19088|0); //@line 215 "./src/cpp/unrar/model.cpp"
  $95 = ((($94)) + 336|0); //@line 215 "./src/cpp/unrar/model.cpp"
  $96 = HEAP32[$95>>2]|0; //@line 215 "./src/cpp/unrar/model.cpp"
  $97 = ($93>>>0)<=($96>>>0); //@line 215 "./src/cpp/unrar/model.cpp"
  if ($97) {
   $3 = 0; //@line 216 "./src/cpp/unrar/model.cpp"
   $164 = $3; //@line 235 "./src/cpp/unrar/model.cpp"
   STACKTOP = sp;return ($164|0); //@line 235 "./src/cpp/unrar/model.cpp"
  }
  $98 = $8; //@line 217 "./src/cpp/unrar/model.cpp"
  $99 = ((($98)) + 4|0); //@line 217 "./src/cpp/unrar/model.cpp"
  $100 = ((($99)) + 4|0); //@line 217 "./src/cpp/unrar/model.cpp"
  $101 = HEAP32[$100>>2]|0; //@line 217 "./src/cpp/unrar/model.cpp"
  $10 = $101; //@line 217 "./src/cpp/unrar/model.cpp"
  $102 = HEAP8[$101>>0]|0; //@line 217 "./src/cpp/unrar/model.cpp"
  $103 = $102&255; //@line 217 "./src/cpp/unrar/model.cpp"
  $104 = HEAP8[$7>>0]|0; //@line 217 "./src/cpp/unrar/model.cpp"
  $105 = $104&255; //@line 217 "./src/cpp/unrar/model.cpp"
  $106 = ($103|0)!=($105|0); //@line 217 "./src/cpp/unrar/model.cpp"
  if ($106) {
   while(1) {
    $107 = $10; //@line 220 "./src/cpp/unrar/model.cpp"
    $108 = ((($107)) + 8|0); //@line 220 "./src/cpp/unrar/model.cpp"
    $10 = $108; //@line 220 "./src/cpp/unrar/model.cpp"
    $109 = $10; //@line 221 "./src/cpp/unrar/model.cpp"
    $110 = HEAP8[$109>>0]|0; //@line 221 "./src/cpp/unrar/model.cpp"
    $111 = $110&255; //@line 221 "./src/cpp/unrar/model.cpp"
    $112 = HEAP8[$7>>0]|0; //@line 221 "./src/cpp/unrar/model.cpp"
    $113 = $112&255; //@line 221 "./src/cpp/unrar/model.cpp"
    $114 = ($111|0)!=($113|0); //@line 221 "./src/cpp/unrar/model.cpp"
    if (!($114)) {
     break;
    }
   }
  }
  $115 = $10; //@line 222 "./src/cpp/unrar/model.cpp"
  $116 = ((($115)) + 1|0); //@line 222 "./src/cpp/unrar/model.cpp"
  $117 = HEAP8[$116>>0]|0; //@line 222 "./src/cpp/unrar/model.cpp"
  $118 = $117&255; //@line 222 "./src/cpp/unrar/model.cpp"
  $119 = (($118) - 1)|0; //@line 222 "./src/cpp/unrar/model.cpp"
  $13 = $119; //@line 222 "./src/cpp/unrar/model.cpp"
  $120 = $8; //@line 223 "./src/cpp/unrar/model.cpp"
  $121 = ((($120)) + 4|0); //@line 223 "./src/cpp/unrar/model.cpp"
  $122 = HEAP16[$121>>1]|0; //@line 223 "./src/cpp/unrar/model.cpp"
  $123 = $122&65535; //@line 223 "./src/cpp/unrar/model.cpp"
  $124 = $8; //@line 223 "./src/cpp/unrar/model.cpp"
  $125 = HEAP16[$124>>1]|0; //@line 223 "./src/cpp/unrar/model.cpp"
  $126 = $125&65535; //@line 223 "./src/cpp/unrar/model.cpp"
  $127 = (($123) - ($126))|0; //@line 223 "./src/cpp/unrar/model.cpp"
  $128 = $13; //@line 223 "./src/cpp/unrar/model.cpp"
  $129 = (($127) - ($128))|0; //@line 223 "./src/cpp/unrar/model.cpp"
  $14 = $129; //@line 223 "./src/cpp/unrar/model.cpp"
  $130 = $13; //@line 224 "./src/cpp/unrar/model.cpp"
  $131 = $130<<1; //@line 224 "./src/cpp/unrar/model.cpp"
  $132 = $14; //@line 224 "./src/cpp/unrar/model.cpp"
  $133 = ($131>>>0)<=($132>>>0); //@line 224 "./src/cpp/unrar/model.cpp"
  $134 = $13;
  if ($133) {
   $135 = ($134*5)|0; //@line 224 "./src/cpp/unrar/model.cpp"
   $136 = $14; //@line 224 "./src/cpp/unrar/model.cpp"
   $137 = ($135>>>0)>($136>>>0); //@line 224 "./src/cpp/unrar/model.cpp"
   $138 = $137&1; //@line 224 "./src/cpp/unrar/model.cpp"
   $148 = $138;
  } else {
   $139 = $134<<1; //@line 224 "./src/cpp/unrar/model.cpp"
   $140 = $14; //@line 224 "./src/cpp/unrar/model.cpp"
   $141 = ($140*3)|0; //@line 224 "./src/cpp/unrar/model.cpp"
   $142 = (($139) + ($141))|0; //@line 224 "./src/cpp/unrar/model.cpp"
   $143 = (($142) - 1)|0; //@line 224 "./src/cpp/unrar/model.cpp"
   $144 = $14; //@line 224 "./src/cpp/unrar/model.cpp"
   $145 = $144<<1; //@line 224 "./src/cpp/unrar/model.cpp"
   $146 = (($143>>>0) / ($145>>>0))&-1; //@line 224 "./src/cpp/unrar/model.cpp"
   $148 = $146;
  }
  $147 = (1 + ($148))|0; //@line 224 "./src/cpp/unrar/model.cpp"
  $149 = $147&255; //@line 224 "./src/cpp/unrar/model.cpp"
  $$sink = $149;
 } else {
  $150 = ((($93)) + 4|0); //@line 227 "./src/cpp/unrar/model.cpp"
  $151 = ((($150)) + 1|0); //@line 227 "./src/cpp/unrar/model.cpp"
  $152 = HEAP8[$151>>0]|0; //@line 227 "./src/cpp/unrar/model.cpp"
  $$sink = $152;
 }
 $153 = ((($7)) + 1|0);
 HEAP8[$153>>0] = $$sink;
 while(1) {
  $154 = $8; //@line 230 "./src/cpp/unrar/model.cpp"
  $155 = $12; //@line 230 "./src/cpp/unrar/model.cpp"
  $156 = ((($155)) + -4|0); //@line 230 "./src/cpp/unrar/model.cpp"
  $12 = $156; //@line 230 "./src/cpp/unrar/model.cpp"
  $157 = HEAP32[$156>>2]|0; //@line 230 "./src/cpp/unrar/model.cpp"
  $158 = (__ZN14RARPPM_CONTEXT11createChildEP8ModelPPMP12RARPPM_STATERS2_($154,$16,$157,$7)|0); //@line 230 "./src/cpp/unrar/model.cpp"
  $8 = $158; //@line 230 "./src/cpp/unrar/model.cpp"
  $159 = $8; //@line 231 "./src/cpp/unrar/model.cpp"
  $160 = ($159|0)!=(0|0); //@line 231 "./src/cpp/unrar/model.cpp"
  if (!($160)) {
   label = 26;
   break;
  }
  $161 = $12; //@line 233 "./src/cpp/unrar/model.cpp"
  $162 = ($161|0)!=($11|0); //@line 233 "./src/cpp/unrar/model.cpp"
  if (!($162)) {
   label = 28;
   break;
  }
 }
 if ((label|0) == 26) {
  $3 = 0; //@line 232 "./src/cpp/unrar/model.cpp"
  $164 = $3; //@line 235 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($164|0); //@line 235 "./src/cpp/unrar/model.cpp"
 }
 else if ((label|0) == 28) {
  $163 = $8; //@line 234 "./src/cpp/unrar/model.cpp"
  $3 = $163; //@line 234 "./src/cpp/unrar/model.cpp"
  $164 = $3; //@line 235 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($164|0); //@line 235 "./src/cpp/unrar/model.cpp"
 }
 return (0)|0;
}
function __ZN12SubAllocator11ExpandUnitsEPvi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $10 = $4;
 $11 = ((($10)) + 42|0); //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $12 = $6; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $13 = (($12) - 1)|0; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $14 = (($11) + ($13)|0); //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $15 = HEAP8[$14>>0]|0; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $16 = $15&255; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $7 = $16; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $17 = ((($10)) + 42|0); //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $18 = $6; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $19 = (($18) - 1)|0; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $20 = (($19) + 1)|0; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $21 = (($17) + ($20)|0); //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $22 = HEAP8[$21>>0]|0; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $23 = $22&255; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $8 = $23; //@line 259 "./src/cpp/unrar/suballoc.cpp"
 $24 = $7; //@line 260 "./src/cpp/unrar/suballoc.cpp"
 $25 = $8; //@line 260 "./src/cpp/unrar/suballoc.cpp"
 $26 = ($24|0)==($25|0); //@line 260 "./src/cpp/unrar/suballoc.cpp"
 if ($26) {
  $27 = $5; //@line 261 "./src/cpp/unrar/suballoc.cpp"
  $3 = $27; //@line 261 "./src/cpp/unrar/suballoc.cpp"
  $40 = $3; //@line 269 "./src/cpp/unrar/suballoc.cpp"
  STACKTOP = sp;return ($40|0); //@line 269 "./src/cpp/unrar/suballoc.cpp"
 }
 $28 = $6; //@line 262 "./src/cpp/unrar/suballoc.cpp"
 $29 = (($28) + 1)|0; //@line 262 "./src/cpp/unrar/suballoc.cpp"
 $30 = (__ZN12SubAllocator10AllocUnitsEi($10,$29)|0); //@line 262 "./src/cpp/unrar/suballoc.cpp"
 $9 = $30; //@line 262 "./src/cpp/unrar/suballoc.cpp"
 $31 = $9; //@line 263 "./src/cpp/unrar/suballoc.cpp"
 $32 = ($31|0)!=(0|0); //@line 263 "./src/cpp/unrar/suballoc.cpp"
 if ($32) {
  $33 = $9; //@line 265 "./src/cpp/unrar/suballoc.cpp"
  $34 = $5; //@line 265 "./src/cpp/unrar/suballoc.cpp"
  $35 = $6; //@line 265 "./src/cpp/unrar/suballoc.cpp"
  $36 = (__ZN12SubAllocator3U2BEi($10,$35)|0); //@line 265 "./src/cpp/unrar/suballoc.cpp"
  _memcpy(($33|0),($34|0),($36|0))|0; //@line 265 "./src/cpp/unrar/suballoc.cpp"
  $37 = $5; //@line 266 "./src/cpp/unrar/suballoc.cpp"
  $38 = $7; //@line 266 "./src/cpp/unrar/suballoc.cpp"
  __ZN12SubAllocator10InsertNodeEPvi($10,$37,$38); //@line 266 "./src/cpp/unrar/suballoc.cpp"
 }
 $39 = $9; //@line 268 "./src/cpp/unrar/suballoc.cpp"
 $3 = $39; //@line 268 "./src/cpp/unrar/suballoc.cpp"
 $40 = $3; //@line 269 "./src/cpp/unrar/suballoc.cpp"
 STACKTOP = sp;return ($40|0); //@line 269 "./src/cpp/unrar/suballoc.cpp"
}
function __ZN14RARPPM_CONTEXT11createChildEP8ModelPPMP12RARPPM_STATERS2_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4;
 $10 = $5; //@line 18 "./src/cpp/unrar/model.cpp"
 $11 = ((($10)) + 19088|0); //@line 18 "./src/cpp/unrar/model.cpp"
 $12 = (__ZN12SubAllocator12AllocContextEv($11)|0); //@line 18 "./src/cpp/unrar/model.cpp"
 $8 = $12; //@line 18 "./src/cpp/unrar/model.cpp"
 $13 = $8; //@line 19 "./src/cpp/unrar/model.cpp"
 $14 = ($13|0)!=(0|0); //@line 19 "./src/cpp/unrar/model.cpp"
 if (!($14)) {
  $24 = $8; //@line 26 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($24|0); //@line 26 "./src/cpp/unrar/model.cpp"
 }
 $15 = $8; //@line 21 "./src/cpp/unrar/model.cpp"
 HEAP16[$15>>1] = 1; //@line 21 "./src/cpp/unrar/model.cpp"
 $16 = $7; //@line 22 "./src/cpp/unrar/model.cpp"
 $17 = $8; //@line 22 "./src/cpp/unrar/model.cpp"
 $18 = ((($17)) + 4|0); //@line 22 "./src/cpp/unrar/model.cpp"
 ;HEAP32[$18>>2]=HEAP32[$16>>2]|0;HEAP32[$18+4>>2]=HEAP32[$16+4>>2]|0; //@line 22 "./src/cpp/unrar/model.cpp"
 $19 = $8; //@line 23 "./src/cpp/unrar/model.cpp"
 $20 = ((($19)) + 12|0); //@line 23 "./src/cpp/unrar/model.cpp"
 HEAP32[$20>>2] = $9; //@line 23 "./src/cpp/unrar/model.cpp"
 $21 = $8; //@line 24 "./src/cpp/unrar/model.cpp"
 $22 = $6; //@line 24 "./src/cpp/unrar/model.cpp"
 $23 = ((($22)) + 4|0); //@line 24 "./src/cpp/unrar/model.cpp"
 HEAP32[$23>>2] = $21; //@line 24 "./src/cpp/unrar/model.cpp"
 $24 = $8; //@line 26 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return ($24|0); //@line 26 "./src/cpp/unrar/model.cpp"
}
function __ZN14RARPPM_CONTEXT12makeEscFreq2EP8ModelPPMi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $$sink4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = HEAP16[$7>>1]|0; //@line 463 "./src/cpp/unrar/model.cpp"
 $9 = $8&65535; //@line 463 "./src/cpp/unrar/model.cpp"
 $10 = ($9|0)!=(256); //@line 463 "./src/cpp/unrar/model.cpp"
 $11 = $4;
 if ($10) {
  $12 = ((($11)) + 2|0); //@line 465 "./src/cpp/unrar/model.cpp"
  $13 = $4; //@line 465 "./src/cpp/unrar/model.cpp"
  $14 = ((($13)) + 1904|0); //@line 465 "./src/cpp/unrar/model.cpp"
  $15 = $5; //@line 465 "./src/cpp/unrar/model.cpp"
  $16 = (($15) - 1)|0; //@line 465 "./src/cpp/unrar/model.cpp"
  $17 = (($14) + ($16)|0); //@line 465 "./src/cpp/unrar/model.cpp"
  $18 = HEAP8[$17>>0]|0; //@line 465 "./src/cpp/unrar/model.cpp"
  $19 = $18&255; //@line 465 "./src/cpp/unrar/model.cpp"
  $20 = (($12) + ($19<<6)|0); //@line 465 "./src/cpp/unrar/model.cpp"
  $21 = $5; //@line 466 "./src/cpp/unrar/model.cpp"
  $22 = ((($7)) + 12|0); //@line 466 "./src/cpp/unrar/model.cpp"
  $23 = HEAP32[$22>>2]|0; //@line 466 "./src/cpp/unrar/model.cpp"
  $24 = HEAP16[$23>>1]|0; //@line 466 "./src/cpp/unrar/model.cpp"
  $25 = $24&65535; //@line 466 "./src/cpp/unrar/model.cpp"
  $26 = HEAP16[$7>>1]|0; //@line 466 "./src/cpp/unrar/model.cpp"
  $27 = $26&65535; //@line 466 "./src/cpp/unrar/model.cpp"
  $28 = (($25) - ($27))|0; //@line 466 "./src/cpp/unrar/model.cpp"
  $29 = ($21|0)<($28|0); //@line 466 "./src/cpp/unrar/model.cpp"
  $30 = $29&1; //@line 466 "./src/cpp/unrar/model.cpp"
  $31 = (($20) + ($30<<2)|0); //@line 465 "./src/cpp/unrar/model.cpp"
  $32 = ((($7)) + 4|0); //@line 467 "./src/cpp/unrar/model.cpp"
  $33 = HEAP16[$32>>1]|0; //@line 467 "./src/cpp/unrar/model.cpp"
  $34 = $33&65535; //@line 467 "./src/cpp/unrar/model.cpp"
  $35 = HEAP16[$7>>1]|0; //@line 467 "./src/cpp/unrar/model.cpp"
  $36 = $35&65535; //@line 467 "./src/cpp/unrar/model.cpp"
  $37 = ($36*11)|0; //@line 467 "./src/cpp/unrar/model.cpp"
  $38 = ($34|0)<($37|0); //@line 467 "./src/cpp/unrar/model.cpp"
  $39 = $38&1; //@line 467 "./src/cpp/unrar/model.cpp"
  $40 = $39<<1; //@line 467 "./src/cpp/unrar/model.cpp"
  $41 = (($31) + ($40<<2)|0); //@line 466 "./src/cpp/unrar/model.cpp"
  $42 = $4; //@line 467 "./src/cpp/unrar/model.cpp"
  $43 = ((($42)) + 1624|0); //@line 467 "./src/cpp/unrar/model.cpp"
  $44 = HEAP32[$43>>2]|0; //@line 467 "./src/cpp/unrar/model.cpp"
  $45 = $5; //@line 467 "./src/cpp/unrar/model.cpp"
  $46 = ($44|0)>($45|0); //@line 467 "./src/cpp/unrar/model.cpp"
  $47 = $46&1; //@line 467 "./src/cpp/unrar/model.cpp"
  $48 = $47<<2; //@line 467 "./src/cpp/unrar/model.cpp"
  $49 = (($41) + ($48<<2)|0); //@line 467 "./src/cpp/unrar/model.cpp"
  $50 = $4; //@line 468 "./src/cpp/unrar/model.cpp"
  $51 = ((($50)) + 2674|0); //@line 468 "./src/cpp/unrar/model.cpp"
  $52 = HEAP8[$51>>0]|0; //@line 468 "./src/cpp/unrar/model.cpp"
  $53 = $52&255; //@line 468 "./src/cpp/unrar/model.cpp"
  $54 = (($49) + ($53<<2)|0); //@line 467 "./src/cpp/unrar/model.cpp"
  $6 = $54; //@line 465 "./src/cpp/unrar/model.cpp"
  $55 = $6; //@line 469 "./src/cpp/unrar/model.cpp"
  $56 = (__ZN19RARPPM_SEE2_CONTEXT7getMeanEv($55)|0); //@line 469 "./src/cpp/unrar/model.cpp"
  $57 = $4; //@line 469 "./src/cpp/unrar/model.cpp"
  $$sink = $56;$$sink4 = $57;
  $60 = ((($$sink4)) + 19060|0);
  $61 = ((($60)) + 12|0);
  $62 = ((($61)) + 8|0);
  HEAP32[$62>>2] = $$sink;
  $63 = $6; //@line 476 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($63|0); //@line 476 "./src/cpp/unrar/model.cpp"
 } else {
  $58 = ((($11)) + 1602|0); //@line 473 "./src/cpp/unrar/model.cpp"
  $6 = $58; //@line 473 "./src/cpp/unrar/model.cpp"
  $59 = $4; //@line 474 "./src/cpp/unrar/model.cpp"
  $$sink = 1;$$sink4 = $59;
  $60 = ((($$sink4)) + 19060|0);
  $61 = ((($60)) + 12|0);
  $62 = ((($61)) + 8|0);
  HEAP32[$62>>2] = $$sink;
  $63 = $6; //@line 476 "./src/cpp/unrar/model.cpp"
  STACKTOP = sp;return ($63|0); //@line 476 "./src/cpp/unrar/model.cpp"
 }
 return (0)|0;
}
function __ZN10RangeCoder15GetCurrentCountEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 34 "./src/cpp/unrar/coder.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 34 "./src/cpp/unrar/coder.cpp"
 $5 = HEAP32[$2>>2]|0; //@line 34 "./src/cpp/unrar/coder.cpp"
 $6 = (($4) - ($5))|0; //@line 34 "./src/cpp/unrar/coder.cpp"
 $7 = ((($2)) + 12|0); //@line 34 "./src/cpp/unrar/coder.cpp"
 $8 = ((($7)) + 8|0); //@line 34 "./src/cpp/unrar/coder.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 34 "./src/cpp/unrar/coder.cpp"
 $10 = ((($2)) + 8|0); //@line 34 "./src/cpp/unrar/coder.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 34 "./src/cpp/unrar/coder.cpp"
 $12 = (($11>>>0) / ($9>>>0))&-1; //@line 34 "./src/cpp/unrar/coder.cpp"
 HEAP32[$10>>2] = $12; //@line 34 "./src/cpp/unrar/coder.cpp"
 $13 = (($6>>>0) / ($12>>>0))&-1; //@line 34 "./src/cpp/unrar/coder.cpp"
 STACKTOP = sp;return ($13|0); //@line 34 "./src/cpp/unrar/coder.cpp"
}
function __ZN19RARPPM_SEE2_CONTEXT6updateEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 2|0); //@line 34 "./src/cpp/unrar/model.hpp"
 $4 = HEAP8[$3>>0]|0; //@line 34 "./src/cpp/unrar/model.hpp"
 $5 = $4&255; //@line 34 "./src/cpp/unrar/model.hpp"
 $6 = ($5|0)<(7); //@line 34 "./src/cpp/unrar/model.hpp"
 if (!($6)) {
  STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/model.hpp"
 }
 $7 = ((($2)) + 3|0); //@line 34 "./src/cpp/unrar/model.hpp"
 $8 = HEAP8[$7>>0]|0; //@line 34 "./src/cpp/unrar/model.hpp"
 $9 = (($8) + -1)<<24>>24; //@line 34 "./src/cpp/unrar/model.hpp"
 HEAP8[$7>>0] = $9; //@line 34 "./src/cpp/unrar/model.hpp"
 $10 = $9&255; //@line 34 "./src/cpp/unrar/model.hpp"
 $11 = ($10|0)==(0); //@line 34 "./src/cpp/unrar/model.hpp"
 if (!($11)) {
  STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/model.hpp"
 }
 $12 = HEAP16[$2>>1]|0; //@line 36 "./src/cpp/unrar/model.hpp"
 $13 = $12&65535; //@line 36 "./src/cpp/unrar/model.hpp"
 $14 = HEAP16[$2>>1]|0; //@line 36 "./src/cpp/unrar/model.hpp"
 $15 = $14&65535; //@line 36 "./src/cpp/unrar/model.hpp"
 $16 = (($15) + ($13))|0; //@line 36 "./src/cpp/unrar/model.hpp"
 $17 = $16&65535; //@line 36 "./src/cpp/unrar/model.hpp"
 HEAP16[$2>>1] = $17; //@line 36 "./src/cpp/unrar/model.hpp"
 $18 = ((($2)) + 2|0); //@line 37 "./src/cpp/unrar/model.hpp"
 $19 = HEAP8[$18>>0]|0; //@line 37 "./src/cpp/unrar/model.hpp"
 $20 = (($19) + 1)<<24>>24; //@line 37 "./src/cpp/unrar/model.hpp"
 HEAP8[$18>>0] = $20; //@line 37 "./src/cpp/unrar/model.hpp"
 $21 = $19&255; //@line 37 "./src/cpp/unrar/model.hpp"
 $22 = 3 << $21; //@line 37 "./src/cpp/unrar/model.hpp"
 $23 = $22&255; //@line 37 "./src/cpp/unrar/model.hpp"
 $24 = ((($2)) + 3|0); //@line 37 "./src/cpp/unrar/model.hpp"
 HEAP8[$24>>0] = $23; //@line 37 "./src/cpp/unrar/model.hpp"
 STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/model.hpp"
}
function __ZN14RARPPM_CONTEXT7update2EP8ModelPPMP12RARPPM_STATE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5; //@line 451 "./src/cpp/unrar/model.cpp"
 $8 = $4; //@line 451 "./src/cpp/unrar/model.cpp"
 $9 = ((($8)) + 1620|0); //@line 451 "./src/cpp/unrar/model.cpp"
 HEAP32[$9>>2] = $7; //@line 451 "./src/cpp/unrar/model.cpp"
 $10 = ((($7)) + 1|0); //@line 451 "./src/cpp/unrar/model.cpp"
 $11 = HEAP8[$10>>0]|0; //@line 451 "./src/cpp/unrar/model.cpp"
 $12 = $11&255; //@line 451 "./src/cpp/unrar/model.cpp"
 $13 = (($12) + 4)|0; //@line 451 "./src/cpp/unrar/model.cpp"
 $14 = $13&255; //@line 451 "./src/cpp/unrar/model.cpp"
 HEAP8[$10>>0] = $14; //@line 451 "./src/cpp/unrar/model.cpp"
 $15 = ((($6)) + 4|0); //@line 452 "./src/cpp/unrar/model.cpp"
 $16 = HEAP16[$15>>1]|0; //@line 452 "./src/cpp/unrar/model.cpp"
 $17 = $16&65535; //@line 452 "./src/cpp/unrar/model.cpp"
 $18 = (($17) + 4)|0; //@line 452 "./src/cpp/unrar/model.cpp"
 $19 = $18&65535; //@line 452 "./src/cpp/unrar/model.cpp"
 HEAP16[$15>>1] = $19; //@line 452 "./src/cpp/unrar/model.cpp"
 $20 = $5; //@line 453 "./src/cpp/unrar/model.cpp"
 $21 = ((($20)) + 1|0); //@line 453 "./src/cpp/unrar/model.cpp"
 $22 = HEAP8[$21>>0]|0; //@line 453 "./src/cpp/unrar/model.cpp"
 $23 = $22&255; //@line 453 "./src/cpp/unrar/model.cpp"
 $24 = ($23|0)>(124); //@line 453 "./src/cpp/unrar/model.cpp"
 if ($24) {
  $25 = $4; //@line 454 "./src/cpp/unrar/model.cpp"
  __ZN14RARPPM_CONTEXT7rescaleEP8ModelPPM($6,$25); //@line 454 "./src/cpp/unrar/model.cpp"
 }
 $26 = $4; //@line 455 "./src/cpp/unrar/model.cpp"
 $27 = ((($26)) + 2672|0); //@line 455 "./src/cpp/unrar/model.cpp"
 $28 = HEAP8[$27>>0]|0; //@line 455 "./src/cpp/unrar/model.cpp"
 $29 = (($28) + 1)<<24>>24; //@line 455 "./src/cpp/unrar/model.cpp"
 HEAP8[$27>>0] = $29; //@line 455 "./src/cpp/unrar/model.cpp"
 $30 = $4; //@line 456 "./src/cpp/unrar/model.cpp"
 $31 = ((($30)) + 1644|0); //@line 456 "./src/cpp/unrar/model.cpp"
 $32 = HEAP32[$31>>2]|0; //@line 456 "./src/cpp/unrar/model.cpp"
 $33 = $4; //@line 456 "./src/cpp/unrar/model.cpp"
 $34 = ((($33)) + 1640|0); //@line 456 "./src/cpp/unrar/model.cpp"
 HEAP32[$34>>2] = $32; //@line 456 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return; //@line 457 "./src/cpp/unrar/model.cpp"
}
function __ZN19RARPPM_SEE2_CONTEXT7getMeanEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = HEAP16[$3>>1]|0; //@line 28 "./src/cpp/unrar/model.hpp"
 $5 = $4&65535; //@line 28 "./src/cpp/unrar/model.hpp"
 $6 = ((($3)) + 2|0); //@line 28 "./src/cpp/unrar/model.hpp"
 $7 = HEAP8[$6>>0]|0; //@line 28 "./src/cpp/unrar/model.hpp"
 $8 = $7&255; //@line 28 "./src/cpp/unrar/model.hpp"
 $9 = $5 >> $8; //@line 28 "./src/cpp/unrar/model.hpp"
 $2 = $9; //@line 28 "./src/cpp/unrar/model.hpp"
 $10 = $2; //@line 29 "./src/cpp/unrar/model.hpp"
 $11 = HEAP16[$3>>1]|0; //@line 29 "./src/cpp/unrar/model.hpp"
 $12 = $11&65535; //@line 29 "./src/cpp/unrar/model.hpp"
 $13 = (($12) - ($10))|0; //@line 29 "./src/cpp/unrar/model.hpp"
 $14 = $13&65535; //@line 29 "./src/cpp/unrar/model.hpp"
 HEAP16[$3>>1] = $14; //@line 29 "./src/cpp/unrar/model.hpp"
 $15 = $2; //@line 30 "./src/cpp/unrar/model.hpp"
 $16 = $2; //@line 30 "./src/cpp/unrar/model.hpp"
 $17 = ($16|0)==(0); //@line 30 "./src/cpp/unrar/model.hpp"
 $18 = $17&1; //@line 30 "./src/cpp/unrar/model.hpp"
 $19 = (($15) + ($18))|0; //@line 30 "./src/cpp/unrar/model.hpp"
 STACKTOP = sp;return ($19|0); //@line 30 "./src/cpp/unrar/model.hpp"
}
function __ZN10RangeCoder20GetCurrentShiftCountEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 4|0); //@line 40 "./src/cpp/unrar/coder.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 40 "./src/cpp/unrar/coder.cpp"
 $7 = HEAP32[$4>>2]|0; //@line 40 "./src/cpp/unrar/coder.cpp"
 $8 = (($6) - ($7))|0; //@line 40 "./src/cpp/unrar/coder.cpp"
 $9 = $3; //@line 40 "./src/cpp/unrar/coder.cpp"
 $10 = ((($4)) + 8|0); //@line 40 "./src/cpp/unrar/coder.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 40 "./src/cpp/unrar/coder.cpp"
 $12 = $11 >>> $9; //@line 40 "./src/cpp/unrar/coder.cpp"
 HEAP32[$10>>2] = $12; //@line 40 "./src/cpp/unrar/coder.cpp"
 $13 = (($8>>>0) / ($12>>>0))&-1; //@line 40 "./src/cpp/unrar/coder.cpp"
 STACKTOP = sp;return ($13|0); //@line 40 "./src/cpp/unrar/coder.cpp"
}
function __ZN14RARPPM_CONTEXT7update1EP8ModelPPMP12RARPPM_STATE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5; //@line 390 "./src/cpp/unrar/model.cpp"
 $8 = $4; //@line 390 "./src/cpp/unrar/model.cpp"
 $9 = ((($8)) + 1620|0); //@line 390 "./src/cpp/unrar/model.cpp"
 HEAP32[$9>>2] = $7; //@line 390 "./src/cpp/unrar/model.cpp"
 $10 = ((($7)) + 1|0); //@line 390 "./src/cpp/unrar/model.cpp"
 $11 = HEAP8[$10>>0]|0; //@line 390 "./src/cpp/unrar/model.cpp"
 $12 = $11&255; //@line 390 "./src/cpp/unrar/model.cpp"
 $13 = (($12) + 4)|0; //@line 390 "./src/cpp/unrar/model.cpp"
 $14 = $13&255; //@line 390 "./src/cpp/unrar/model.cpp"
 HEAP8[$10>>0] = $14; //@line 390 "./src/cpp/unrar/model.cpp"
 $15 = ((($6)) + 4|0); //@line 391 "./src/cpp/unrar/model.cpp"
 $16 = HEAP16[$15>>1]|0; //@line 391 "./src/cpp/unrar/model.cpp"
 $17 = $16&65535; //@line 391 "./src/cpp/unrar/model.cpp"
 $18 = (($17) + 4)|0; //@line 391 "./src/cpp/unrar/model.cpp"
 $19 = $18&65535; //@line 391 "./src/cpp/unrar/model.cpp"
 HEAP16[$15>>1] = $19; //@line 391 "./src/cpp/unrar/model.cpp"
 $20 = $5; //@line 392 "./src/cpp/unrar/model.cpp"
 $21 = ((($20)) + 1|0); //@line 392 "./src/cpp/unrar/model.cpp"
 $22 = HEAP8[$21>>0]|0; //@line 392 "./src/cpp/unrar/model.cpp"
 $23 = $22&255; //@line 392 "./src/cpp/unrar/model.cpp"
 $24 = $5; //@line 392 "./src/cpp/unrar/model.cpp"
 $25 = ((($24)) + -8|0); //@line 392 "./src/cpp/unrar/model.cpp"
 $26 = ((($25)) + 1|0); //@line 392 "./src/cpp/unrar/model.cpp"
 $27 = HEAP8[$26>>0]|0; //@line 392 "./src/cpp/unrar/model.cpp"
 $28 = $27&255; //@line 392 "./src/cpp/unrar/model.cpp"
 $29 = ($23|0)>($28|0); //@line 392 "./src/cpp/unrar/model.cpp"
 if (!($29)) {
  STACKTOP = sp;return; //@line 399 "./src/cpp/unrar/model.cpp"
 }
 $30 = $5; //@line 394 "./src/cpp/unrar/model.cpp"
 $31 = $5; //@line 394 "./src/cpp/unrar/model.cpp"
 $32 = ((($31)) + -8|0); //@line 394 "./src/cpp/unrar/model.cpp"
 __Z10_PPMD_SWAPI12RARPPM_STATEEvRT_S2_($30,$32); //@line 394 "./src/cpp/unrar/model.cpp"
 $33 = $5; //@line 395 "./src/cpp/unrar/model.cpp"
 $34 = ((($33)) + -8|0); //@line 395 "./src/cpp/unrar/model.cpp"
 $5 = $34; //@line 395 "./src/cpp/unrar/model.cpp"
 $35 = $4; //@line 395 "./src/cpp/unrar/model.cpp"
 $36 = ((($35)) + 1620|0); //@line 395 "./src/cpp/unrar/model.cpp"
 HEAP32[$36>>2] = $34; //@line 395 "./src/cpp/unrar/model.cpp"
 $37 = $5; //@line 396 "./src/cpp/unrar/model.cpp"
 $38 = ((($37)) + 1|0); //@line 396 "./src/cpp/unrar/model.cpp"
 $39 = HEAP8[$38>>0]|0; //@line 396 "./src/cpp/unrar/model.cpp"
 $40 = $39&255; //@line 396 "./src/cpp/unrar/model.cpp"
 $41 = ($40|0)>(124); //@line 396 "./src/cpp/unrar/model.cpp"
 if (!($41)) {
  STACKTOP = sp;return; //@line 399 "./src/cpp/unrar/model.cpp"
 }
 $42 = $4; //@line 397 "./src/cpp/unrar/model.cpp"
 __ZN14RARPPM_CONTEXT7rescaleEP8ModelPPM($6,$42); //@line 397 "./src/cpp/unrar/model.cpp"
 STACKTOP = sp;return; //@line 399 "./src/cpp/unrar/model.cpp"
}
function __ZN6Unpack8Unpack15Eb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $1&1;
 $3 = $4;
 $5 = $2;
 $6 = $3; //@line 42 "./src/cpp/unrar/unpack15.cpp"
 $7 = $6&1; //@line 42 "./src/cpp/unrar/unpack15.cpp"
 __ZN6Unpack11UnpInitDataEb($5,$7); //@line 42 "./src/cpp/unrar/unpack15.cpp"
 $8 = $3; //@line 43 "./src/cpp/unrar/unpack15.cpp"
 $9 = $8&1; //@line 43 "./src/cpp/unrar/unpack15.cpp"
 $10 = $9&1; //@line 43 "./src/cpp/unrar/unpack15.cpp"
 __ZN6Unpack13UnpInitData15Ei($5,$10); //@line 43 "./src/cpp/unrar/unpack15.cpp"
 (__ZN6Unpack10UnpReadBufEv($5)|0); //@line 44 "./src/cpp/unrar/unpack15.cpp"
 $11 = $3; //@line 45 "./src/cpp/unrar/unpack15.cpp"
 $12 = $11&1; //@line 45 "./src/cpp/unrar/unpack15.cpp"
 if ($12) {
  $13 = ((($5)) + 100|0); //@line 51 "./src/cpp/unrar/unpack15.cpp"
  $14 = HEAP32[$13>>2]|0; //@line 51 "./src/cpp/unrar/unpack15.cpp"
  $$sink = $14;
 } else {
  __ZN6Unpack8InitHuffEv($5); //@line 47 "./src/cpp/unrar/unpack15.cpp"
  $$sink = 0;
 }
 $15 = ((($5)) + 96|0);
 HEAP32[$15>>2] = $$sink;
 $16 = ((($5)) + 19504|0); //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $17 = $16; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $18 = $17; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $19 = HEAP32[$18>>2]|0; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $20 = (($17) + 4)|0; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $21 = $20; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $23 = (_i64Add(($19|0),($22|0),-1,-1)|0); //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $24 = tempRet0; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $25 = $16; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $26 = $25; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$26>>2] = $23; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $27 = (($25) + 4)|0; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $28 = $27; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$28>>2] = $24; //@line 52 "./src/cpp/unrar/unpack15.cpp"
 $29 = ((($5)) + 19504|0); //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $30 = $29; //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $31 = $30; //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $32 = HEAP32[$31>>2]|0; //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $33 = (($30) + 4)|0; //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $34 = $33; //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $36 = ($35|0)>(0); //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $37 = ($32>>>0)>=(0); //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $38 = ($35|0)==(0); //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $39 = $38 & $37; //@line 53 "./src/cpp/unrar/unpack15.cpp"
 $40 = $36 | $39; //@line 53 "./src/cpp/unrar/unpack15.cpp"
 if ($40) {
  __ZN6Unpack11GetFlagsBufEv($5); //@line 55 "./src/cpp/unrar/unpack15.cpp"
  $41 = ((($5)) + 22388|0); //@line 56 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$41>>2] = 8; //@line 56 "./src/cpp/unrar/unpack15.cpp"
 }
 while(1) {
  $42 = ((($5)) + 19504|0); //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $43 = $42; //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $44 = $43; //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $45 = HEAP32[$44>>2]|0; //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $46 = (($43) + 4)|0; //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $47 = $46; //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $48 = HEAP32[$47>>2]|0; //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $49 = ($48|0)>(0); //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $50 = ($45>>>0)>=(0); //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $51 = ($48|0)==(0); //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $52 = $51 & $50; //@line 59 "./src/cpp/unrar/unpack15.cpp"
  $53 = $49 | $52; //@line 59 "./src/cpp/unrar/unpack15.cpp"
  if (!($53)) {
   label = 27;
   break;
  }
  $54 = ((($5)) + 59088|0); //@line 61 "./src/cpp/unrar/unpack15.cpp"
  $55 = HEAP32[$54>>2]|0; //@line 61 "./src/cpp/unrar/unpack15.cpp"
  $56 = ((($5)) + 96|0); //@line 61 "./src/cpp/unrar/unpack15.cpp"
  $57 = HEAP32[$56>>2]|0; //@line 61 "./src/cpp/unrar/unpack15.cpp"
  $58 = $57 & $55; //@line 61 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$56>>2] = $58; //@line 61 "./src/cpp/unrar/unpack15.cpp"
  $59 = ((($5)) + 4|0); //@line 63 "./src/cpp/unrar/unpack15.cpp"
  $60 = HEAP32[$59>>2]|0; //@line 63 "./src/cpp/unrar/unpack15.cpp"
  $61 = ((($5)) + 104|0); //@line 63 "./src/cpp/unrar/unpack15.cpp"
  $62 = HEAP32[$61>>2]|0; //@line 63 "./src/cpp/unrar/unpack15.cpp"
  $63 = (($62) - 30)|0; //@line 63 "./src/cpp/unrar/unpack15.cpp"
  $64 = ($60|0)>($63|0); //@line 63 "./src/cpp/unrar/unpack15.cpp"
  if ($64) {
   $65 = (__ZN6Unpack10UnpReadBufEv($5)|0); //@line 63 "./src/cpp/unrar/unpack15.cpp"
   if (!($65)) {
    label = 27;
    break;
   }
  }
  $66 = ((($5)) + 100|0); //@line 65 "./src/cpp/unrar/unpack15.cpp"
  $67 = HEAP32[$66>>2]|0; //@line 65 "./src/cpp/unrar/unpack15.cpp"
  $68 = ((($5)) + 96|0); //@line 65 "./src/cpp/unrar/unpack15.cpp"
  $69 = HEAP32[$68>>2]|0; //@line 65 "./src/cpp/unrar/unpack15.cpp"
  $70 = (($67) - ($69))|0; //@line 65 "./src/cpp/unrar/unpack15.cpp"
  $71 = ((($5)) + 59088|0); //@line 65 "./src/cpp/unrar/unpack15.cpp"
  $72 = HEAP32[$71>>2]|0; //@line 65 "./src/cpp/unrar/unpack15.cpp"
  $73 = $70 & $72; //@line 65 "./src/cpp/unrar/unpack15.cpp"
  $74 = ($73>>>0)<(270); //@line 65 "./src/cpp/unrar/unpack15.cpp"
  if ($74) {
   $75 = ((($5)) + 100|0); //@line 65 "./src/cpp/unrar/unpack15.cpp"
   $76 = HEAP32[$75>>2]|0; //@line 65 "./src/cpp/unrar/unpack15.cpp"
   $77 = ((($5)) + 96|0); //@line 65 "./src/cpp/unrar/unpack15.cpp"
   $78 = HEAP32[$77>>2]|0; //@line 65 "./src/cpp/unrar/unpack15.cpp"
   $79 = ($76|0)!=($78|0); //@line 65 "./src/cpp/unrar/unpack15.cpp"
   if ($79) {
    __ZN6Unpack13UnpWriteBuf20Ev($5); //@line 66 "./src/cpp/unrar/unpack15.cpp"
   }
  }
  $80 = ((($5)) + 22380|0); //@line 67 "./src/cpp/unrar/unpack15.cpp"
  $81 = HEAP32[$80>>2]|0; //@line 67 "./src/cpp/unrar/unpack15.cpp"
  $82 = ($81|0)!=(0); //@line 67 "./src/cpp/unrar/unpack15.cpp"
  if ($82) {
   __ZN6Unpack10HuffDecodeEv($5); //@line 69 "./src/cpp/unrar/unpack15.cpp"
   continue;
  }
  $83 = ((($5)) + 22388|0); //@line 73 "./src/cpp/unrar/unpack15.cpp"
  $84 = HEAP32[$83>>2]|0; //@line 73 "./src/cpp/unrar/unpack15.cpp"
  $85 = (($84) + -1)|0; //@line 73 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$83>>2] = $85; //@line 73 "./src/cpp/unrar/unpack15.cpp"
  $86 = ($85|0)<(0); //@line 73 "./src/cpp/unrar/unpack15.cpp"
  if ($86) {
   __ZN6Unpack11GetFlagsBufEv($5); //@line 75 "./src/cpp/unrar/unpack15.cpp"
   $87 = ((($5)) + 22388|0); //@line 76 "./src/cpp/unrar/unpack15.cpp"
   HEAP32[$87>>2] = 7; //@line 76 "./src/cpp/unrar/unpack15.cpp"
  }
  $88 = ((($5)) + 22348|0); //@line 79 "./src/cpp/unrar/unpack15.cpp"
  $89 = HEAP32[$88>>2]|0; //@line 79 "./src/cpp/unrar/unpack15.cpp"
  $90 = $89 & 128; //@line 79 "./src/cpp/unrar/unpack15.cpp"
  $91 = ($90|0)!=(0); //@line 79 "./src/cpp/unrar/unpack15.cpp"
  $92 = ((($5)) + 22348|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = $93 << 1;
  HEAP32[$92>>2] = $94;
  if ($91) {
   $95 = ((($5)) + 22396|0); //@line 82 "./src/cpp/unrar/unpack15.cpp"
   $96 = HEAP32[$95>>2]|0; //@line 82 "./src/cpp/unrar/unpack15.cpp"
   $97 = ((($5)) + 22392|0); //@line 82 "./src/cpp/unrar/unpack15.cpp"
   $98 = HEAP32[$97>>2]|0; //@line 82 "./src/cpp/unrar/unpack15.cpp"
   $99 = ($96>>>0)>($98>>>0); //@line 82 "./src/cpp/unrar/unpack15.cpp"
   if ($99) {
    __ZN6Unpack6LongLZEv($5); //@line 83 "./src/cpp/unrar/unpack15.cpp"
    continue;
   } else {
    __ZN6Unpack10HuffDecodeEv($5); //@line 85 "./src/cpp/unrar/unpack15.cpp"
    continue;
   }
  }
  $100 = ((($5)) + 22388|0); //@line 90 "./src/cpp/unrar/unpack15.cpp"
  $101 = HEAP32[$100>>2]|0; //@line 90 "./src/cpp/unrar/unpack15.cpp"
  $102 = (($101) + -1)|0; //@line 90 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$100>>2] = $102; //@line 90 "./src/cpp/unrar/unpack15.cpp"
  $103 = ($102|0)<(0); //@line 90 "./src/cpp/unrar/unpack15.cpp"
  if ($103) {
   __ZN6Unpack11GetFlagsBufEv($5); //@line 92 "./src/cpp/unrar/unpack15.cpp"
   $104 = ((($5)) + 22388|0); //@line 93 "./src/cpp/unrar/unpack15.cpp"
   HEAP32[$104>>2] = 7; //@line 93 "./src/cpp/unrar/unpack15.cpp"
  }
  $105 = ((($5)) + 22348|0); //@line 95 "./src/cpp/unrar/unpack15.cpp"
  $106 = HEAP32[$105>>2]|0; //@line 95 "./src/cpp/unrar/unpack15.cpp"
  $107 = $106 & 128; //@line 95 "./src/cpp/unrar/unpack15.cpp"
  $108 = ($107|0)!=(0); //@line 95 "./src/cpp/unrar/unpack15.cpp"
  $109 = ((($5)) + 22348|0);
  $110 = HEAP32[$109>>2]|0;
  $111 = $110 << 1;
  HEAP32[$109>>2] = $111;
  if (!($108)) {
   __ZN6Unpack7ShortLZEv($5); //@line 106 "./src/cpp/unrar/unpack15.cpp"
   continue;
  }
  $112 = ((($5)) + 22396|0); //@line 98 "./src/cpp/unrar/unpack15.cpp"
  $113 = HEAP32[$112>>2]|0; //@line 98 "./src/cpp/unrar/unpack15.cpp"
  $114 = ((($5)) + 22392|0); //@line 98 "./src/cpp/unrar/unpack15.cpp"
  $115 = HEAP32[$114>>2]|0; //@line 98 "./src/cpp/unrar/unpack15.cpp"
  $116 = ($113>>>0)>($115>>>0); //@line 98 "./src/cpp/unrar/unpack15.cpp"
  if ($116) {
   __ZN6Unpack10HuffDecodeEv($5); //@line 99 "./src/cpp/unrar/unpack15.cpp"
   continue;
  } else {
   __ZN6Unpack6LongLZEv($5); //@line 101 "./src/cpp/unrar/unpack15.cpp"
   continue;
  }
 }
 if ((label|0) == 27) {
  __ZN6Unpack13UnpWriteBuf20Ev($5); //@line 110 "./src/cpp/unrar/unpack15.cpp"
  STACKTOP = sp;return; //@line 111 "./src/cpp/unrar/unpack15.cpp"
 }
}
function __ZN6Unpack11UnpInitDataEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $1&1;
 $3 = $4;
 $5 = $2;
 $6 = $3; //@line 184 "./src/cpp/unrar/unpack.cpp"
 $7 = $6&1; //@line 184 "./src/cpp/unrar/unpack.cpp"
 if (!($7)) {
  $8 = ((($5)) + 68|0); //@line 186 "./src/cpp/unrar/unpack.cpp"
  ;HEAP32[$8>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;HEAP32[$8+12>>2]=0|0; //@line 186 "./src/cpp/unrar/unpack.cpp"
  $9 = ((($5)) + 84|0); //@line 187 "./src/cpp/unrar/unpack.cpp"
  HEAP32[$9>>2] = 0; //@line 187 "./src/cpp/unrar/unpack.cpp"
  $10 = ((($5)) + 88|0); //@line 188 "./src/cpp/unrar/unpack.cpp"
  HEAP32[$10>>2] = 0; //@line 188 "./src/cpp/unrar/unpack.cpp"
  $11 = ((($5)) + 92|0); //@line 188 "./src/cpp/unrar/unpack.cpp"
  HEAP32[$11>>2] = 0; //@line 188 "./src/cpp/unrar/unpack.cpp"
  $12 = ((($5)) + 132|0); //@line 190 "./src/cpp/unrar/unpack.cpp"
  _memset(($12|0),0,19100)|0; //@line 190 "./src/cpp/unrar/unpack.cpp"
  $13 = ((($5)) + 100|0); //@line 191 "./src/cpp/unrar/unpack.cpp"
  HEAP32[$13>>2] = 0; //@line 191 "./src/cpp/unrar/unpack.cpp"
  $14 = ((($5)) + 96|0); //@line 191 "./src/cpp/unrar/unpack.cpp"
  HEAP32[$14>>2] = 0; //@line 191 "./src/cpp/unrar/unpack.cpp"
  $15 = ((($5)) + 59084|0); //@line 192 "./src/cpp/unrar/unpack.cpp"
  $16 = HEAP32[$15>>2]|0; //@line 192 "./src/cpp/unrar/unpack.cpp"
  $17 = ($16>>>0)<(4194304); //@line 192 "./src/cpp/unrar/unpack.cpp"
  if ($17) {
   $18 = ((($5)) + 59084|0); //@line 192 "./src/cpp/unrar/unpack.cpp"
   $19 = HEAP32[$18>>2]|0; //@line 192 "./src/cpp/unrar/unpack.cpp"
   $23 = $19;
  } else {
   $23 = 4194304;
  }
  $20 = ((($5)) + 59088|0); //@line 192 "./src/cpp/unrar/unpack.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 192 "./src/cpp/unrar/unpack.cpp"
  $22 = $23 & $21; //@line 192 "./src/cpp/unrar/unpack.cpp"
  $24 = ((($5)) + 19232|0); //@line 192 "./src/cpp/unrar/unpack.cpp"
  HEAP32[$24>>2] = $22; //@line 192 "./src/cpp/unrar/unpack.cpp"
 }
 __ZN6Unpack11InitFiltersEv($5); //@line 196 "./src/cpp/unrar/unpack.cpp"
 $25 = ((($5)) + 4|0); //@line 198 "./src/cpp/unrar/unpack.cpp"
 __ZN8BitInput12InitBitInputEv($25); //@line 198 "./src/cpp/unrar/unpack.cpp"
 $26 = ((($5)) + 19520|0); //@line 199 "./src/cpp/unrar/unpack.cpp"
 $27 = $26; //@line 199 "./src/cpp/unrar/unpack.cpp"
 $28 = $27; //@line 199 "./src/cpp/unrar/unpack.cpp"
 HEAP32[$28>>2] = 0; //@line 199 "./src/cpp/unrar/unpack.cpp"
 $29 = (($27) + 4)|0; //@line 199 "./src/cpp/unrar/unpack.cpp"
 $30 = $29; //@line 199 "./src/cpp/unrar/unpack.cpp"
 HEAP32[$30>>2] = 0; //@line 199 "./src/cpp/unrar/unpack.cpp"
 $31 = ((($5)) + 104|0); //@line 200 "./src/cpp/unrar/unpack.cpp"
 HEAP32[$31>>2] = 0; //@line 200 "./src/cpp/unrar/unpack.cpp"
 $32 = ((($5)) + 108|0); //@line 201 "./src/cpp/unrar/unpack.cpp"
 HEAP32[$32>>2] = 0; //@line 201 "./src/cpp/unrar/unpack.cpp"
 $33 = ((($5)) + 112|0); //@line 203 "./src/cpp/unrar/unpack.cpp"
 ;HEAP32[$33>>2]=0|0;HEAP32[$33+4>>2]=0|0;HEAP32[$33+8>>2]=0|0;HEAP32[$33+12>>2]=0|0;HEAP32[$33+16>>2]=0|0; //@line 203 "./src/cpp/unrar/unpack.cpp"
 $34 = ((($5)) + 112|0); //@line 204 "./src/cpp/unrar/unpack.cpp"
 HEAP32[$34>>2] = -1; //@line 204 "./src/cpp/unrar/unpack.cpp"
 $35 = $3; //@line 206 "./src/cpp/unrar/unpack.cpp"
 $36 = $35&1; //@line 206 "./src/cpp/unrar/unpack.cpp"
 $37 = $36&1; //@line 206 "./src/cpp/unrar/unpack.cpp"
 __ZN6Unpack13UnpInitData20Ei($5,$37); //@line 206 "./src/cpp/unrar/unpack.cpp"
 $38 = $3; //@line 208 "./src/cpp/unrar/unpack.cpp"
 $39 = $38&1; //@line 208 "./src/cpp/unrar/unpack.cpp"
 __ZN6Unpack13UnpInitData30Eb($5,$39); //@line 208 "./src/cpp/unrar/unpack.cpp"
 STACKTOP = sp;return; //@line 209 "./src/cpp/unrar/unpack.cpp"
}
function __ZN6Unpack13UnpInitData15Ei($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 429 "./src/cpp/unrar/unpack15.cpp"
 $6 = ($5|0)!=(0); //@line 429 "./src/cpp/unrar/unpack15.cpp"
 if (!($6)) {
  $7 = ((($4)) + 22372|0); //@line 431 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$7>>2] = 0; //@line 431 "./src/cpp/unrar/unpack15.cpp"
  $8 = ((($4)) + 22376|0); //@line 431 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$8>>2] = 0; //@line 431 "./src/cpp/unrar/unpack15.cpp"
  $9 = ((($4)) + 22368|0); //@line 431 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$9>>2] = 0; //@line 431 "./src/cpp/unrar/unpack15.cpp"
  $10 = ((($4)) + 22364|0); //@line 431 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$10>>2] = 0; //@line 431 "./src/cpp/unrar/unpack15.cpp"
  $11 = ((($4)) + 22360|0); //@line 431 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$11>>2] = 0; //@line 431 "./src/cpp/unrar/unpack15.cpp"
  $12 = ((($4)) + 22356|0); //@line 431 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$12>>2] = 0; //@line 431 "./src/cpp/unrar/unpack15.cpp"
  $13 = ((($4)) + 22352|0); //@line 432 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$13>>2] = 13568; //@line 432 "./src/cpp/unrar/unpack15.cpp"
  $14 = ((($4)) + 22400|0); //@line 433 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$14>>2] = 8193; //@line 433 "./src/cpp/unrar/unpack15.cpp"
  $15 = ((($4)) + 22396|0); //@line 434 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$15>>2] = 128; //@line 434 "./src/cpp/unrar/unpack15.cpp"
  $16 = ((($4)) + 22392|0); //@line 434 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$16>>2] = 128; //@line 434 "./src/cpp/unrar/unpack15.cpp"
 }
 $17 = ((($4)) + 22388|0); //@line 436 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$17>>2] = 0; //@line 436 "./src/cpp/unrar/unpack15.cpp"
 $18 = ((($4)) + 22348|0); //@line 437 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$18>>2] = 0; //@line 437 "./src/cpp/unrar/unpack15.cpp"
 $19 = ((($4)) + 22380|0); //@line 438 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$19>>2] = 0; //@line 438 "./src/cpp/unrar/unpack15.cpp"
 $20 = ((($4)) + 22384|0); //@line 439 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$20>>2] = 0; //@line 439 "./src/cpp/unrar/unpack15.cpp"
 $21 = ((($4)) + 104|0); //@line 440 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$21>>2] = 0; //@line 440 "./src/cpp/unrar/unpack15.cpp"
 STACKTOP = sp;return; //@line 441 "./src/cpp/unrar/unpack15.cpp"
}
function __ZN6Unpack8InitHuffEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $2 = 0; //@line 446 "./src/cpp/unrar/unpack15.cpp"
 while(1) {
  $4 = $2; //@line 446 "./src/cpp/unrar/unpack15.cpp"
  $5 = ($4>>>0)<(256); //@line 446 "./src/cpp/unrar/unpack15.cpp"
  if (!($5)) {
   break;
  }
  $6 = $2; //@line 448 "./src/cpp/unrar/unpack15.cpp"
  $7 = $6 << 8; //@line 448 "./src/cpp/unrar/unpack15.cpp"
  $8 = $7&65535; //@line 448 "./src/cpp/unrar/unpack15.cpp"
  $9 = ((($3)) + 20554|0); //@line 448 "./src/cpp/unrar/unpack15.cpp"
  $10 = $2; //@line 448 "./src/cpp/unrar/unpack15.cpp"
  $11 = (($9) + ($10<<1)|0); //@line 448 "./src/cpp/unrar/unpack15.cpp"
  HEAP16[$11>>1] = $8; //@line 448 "./src/cpp/unrar/unpack15.cpp"
  $12 = ((($3)) + 19530|0); //@line 448 "./src/cpp/unrar/unpack15.cpp"
  $13 = $2; //@line 448 "./src/cpp/unrar/unpack15.cpp"
  $14 = (($12) + ($13<<1)|0); //@line 448 "./src/cpp/unrar/unpack15.cpp"
  HEAP16[$14>>1] = $8; //@line 448 "./src/cpp/unrar/unpack15.cpp"
  $15 = $2; //@line 449 "./src/cpp/unrar/unpack15.cpp"
  $16 = $15&65535; //@line 449 "./src/cpp/unrar/unpack15.cpp"
  $17 = ((($3)) + 20042|0); //@line 449 "./src/cpp/unrar/unpack15.cpp"
  $18 = $2; //@line 449 "./src/cpp/unrar/unpack15.cpp"
  $19 = (($17) + ($18<<1)|0); //@line 449 "./src/cpp/unrar/unpack15.cpp"
  HEAP16[$19>>1] = $16; //@line 449 "./src/cpp/unrar/unpack15.cpp"
  $20 = $2; //@line 450 "./src/cpp/unrar/unpack15.cpp"
  $21 = $20 ^ -1; //@line 450 "./src/cpp/unrar/unpack15.cpp"
  $22 = (($21) + 1)|0; //@line 450 "./src/cpp/unrar/unpack15.cpp"
  $23 = $22 & 255; //@line 450 "./src/cpp/unrar/unpack15.cpp"
  $24 = $23 << 8; //@line 450 "./src/cpp/unrar/unpack15.cpp"
  $25 = $24&65535; //@line 450 "./src/cpp/unrar/unpack15.cpp"
  $26 = ((($3)) + 21066|0); //@line 450 "./src/cpp/unrar/unpack15.cpp"
  $27 = $2; //@line 450 "./src/cpp/unrar/unpack15.cpp"
  $28 = (($26) + ($27<<1)|0); //@line 450 "./src/cpp/unrar/unpack15.cpp"
  HEAP16[$28>>1] = $25; //@line 450 "./src/cpp/unrar/unpack15.cpp"
  $29 = $2; //@line 446 "./src/cpp/unrar/unpack15.cpp"
  $30 = (($29) + 1)|0; //@line 446 "./src/cpp/unrar/unpack15.cpp"
  $2 = $30; //@line 446 "./src/cpp/unrar/unpack15.cpp"
 }
 $31 = ((($3)) + 21578|0); //@line 452 "./src/cpp/unrar/unpack15.cpp"
 _memset(($31|0),0,256)|0; //@line 452 "./src/cpp/unrar/unpack15.cpp"
 $32 = ((($3)) + 21834|0); //@line 453 "./src/cpp/unrar/unpack15.cpp"
 _memset(($32|0),0,256)|0; //@line 453 "./src/cpp/unrar/unpack15.cpp"
 $33 = ((($3)) + 22090|0); //@line 454 "./src/cpp/unrar/unpack15.cpp"
 _memset(($33|0),0,256)|0; //@line 454 "./src/cpp/unrar/unpack15.cpp"
 $34 = ((($3)) + 20554|0); //@line 455 "./src/cpp/unrar/unpack15.cpp"
 $35 = ((($3)) + 21834|0); //@line 455 "./src/cpp/unrar/unpack15.cpp"
 __ZN6Unpack8CorrHuffEPtPh($3,$34,$35); //@line 455 "./src/cpp/unrar/unpack15.cpp"
 STACKTOP = sp;return; //@line 456 "./src/cpp/unrar/unpack15.cpp"
}
function __ZN6Unpack11GetFlagsBufEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $5 = $1;
 $6 = ((($5)) + 4|0); //@line 402 "./src/cpp/unrar/unpack15.cpp"
 $7 = (__ZN8BitInput8fgetbitsEv($6)|0); //@line 402 "./src/cpp/unrar/unpack15.cpp"
 $8 = (__ZN6Unpack9DecodeNumEjjPjS0_($5,$7,5,1864,1896)|0); //@line 402 "./src/cpp/unrar/unpack15.cpp"
 $4 = $8; //@line 402 "./src/cpp/unrar/unpack15.cpp"
 $9 = $4; //@line 409 "./src/cpp/unrar/unpack15.cpp"
 $10 = ($9>>>0)>=(256); //@line 409 "./src/cpp/unrar/unpack15.cpp"
 if ($10) {
  STACKTOP = sp;return; //@line 424 "./src/cpp/unrar/unpack15.cpp"
 }
 while(1) {
  $11 = ((($5)) + 21066|0); //@line 414 "./src/cpp/unrar/unpack15.cpp"
  $12 = $4; //@line 414 "./src/cpp/unrar/unpack15.cpp"
  $13 = (($11) + ($12<<1)|0); //@line 414 "./src/cpp/unrar/unpack15.cpp"
  $14 = HEAP16[$13>>1]|0; //@line 414 "./src/cpp/unrar/unpack15.cpp"
  $15 = $14&65535; //@line 414 "./src/cpp/unrar/unpack15.cpp"
  $2 = $15; //@line 414 "./src/cpp/unrar/unpack15.cpp"
  $16 = $2; //@line 415 "./src/cpp/unrar/unpack15.cpp"
  $17 = $16 >>> 8; //@line 415 "./src/cpp/unrar/unpack15.cpp"
  $18 = ((($5)) + 22348|0); //@line 415 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$18>>2] = $17; //@line 415 "./src/cpp/unrar/unpack15.cpp"
  $19 = ((($5)) + 22090|0); //@line 416 "./src/cpp/unrar/unpack15.cpp"
  $20 = $2; //@line 416 "./src/cpp/unrar/unpack15.cpp"
  $21 = (($20) + 1)|0; //@line 416 "./src/cpp/unrar/unpack15.cpp"
  $2 = $21; //@line 416 "./src/cpp/unrar/unpack15.cpp"
  $22 = $20 & 255; //@line 416 "./src/cpp/unrar/unpack15.cpp"
  $23 = (($19) + ($22)|0); //@line 416 "./src/cpp/unrar/unpack15.cpp"
  $24 = HEAP8[$23>>0]|0; //@line 416 "./src/cpp/unrar/unpack15.cpp"
  $25 = (($24) + 1)<<24>>24; //@line 416 "./src/cpp/unrar/unpack15.cpp"
  HEAP8[$23>>0] = $25; //@line 416 "./src/cpp/unrar/unpack15.cpp"
  $26 = $24&255; //@line 416 "./src/cpp/unrar/unpack15.cpp"
  $3 = $26; //@line 416 "./src/cpp/unrar/unpack15.cpp"
  $27 = $2; //@line 417 "./src/cpp/unrar/unpack15.cpp"
  $28 = $27 & 255; //@line 417 "./src/cpp/unrar/unpack15.cpp"
  $29 = ($28|0)!=(0); //@line 417 "./src/cpp/unrar/unpack15.cpp"
  $30 = ((($5)) + 21066|0);
  if ($29) {
   break;
  }
  $31 = ((($5)) + 22090|0); //@line 419 "./src/cpp/unrar/unpack15.cpp"
  __ZN6Unpack8CorrHuffEPtPh($5,$30,$31); //@line 419 "./src/cpp/unrar/unpack15.cpp"
 }
 $32 = $3; //@line 422 "./src/cpp/unrar/unpack15.cpp"
 $33 = (($30) + ($32<<1)|0); //@line 422 "./src/cpp/unrar/unpack15.cpp"
 $34 = HEAP16[$33>>1]|0; //@line 422 "./src/cpp/unrar/unpack15.cpp"
 $35 = ((($5)) + 21066|0); //@line 422 "./src/cpp/unrar/unpack15.cpp"
 $36 = $4; //@line 422 "./src/cpp/unrar/unpack15.cpp"
 $37 = (($35) + ($36<<1)|0); //@line 422 "./src/cpp/unrar/unpack15.cpp"
 HEAP16[$37>>1] = $34; //@line 422 "./src/cpp/unrar/unpack15.cpp"
 $38 = $2; //@line 423 "./src/cpp/unrar/unpack15.cpp"
 $39 = $38&65535; //@line 423 "./src/cpp/unrar/unpack15.cpp"
 $40 = ((($5)) + 21066|0); //@line 423 "./src/cpp/unrar/unpack15.cpp"
 $41 = $3; //@line 423 "./src/cpp/unrar/unpack15.cpp"
 $42 = (($40) + ($41<<1)|0); //@line 423 "./src/cpp/unrar/unpack15.cpp"
 HEAP16[$42>>1] = $39; //@line 423 "./src/cpp/unrar/unpack15.cpp"
 STACKTOP = sp;return; //@line 424 "./src/cpp/unrar/unpack15.cpp"
}
function __ZN6Unpack13UnpWriteBuf20Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 96|0); //@line 152 "./src/cpp/unrar/unpack20.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 152 "./src/cpp/unrar/unpack20.cpp"
 $5 = ((($2)) + 100|0); //@line 152 "./src/cpp/unrar/unpack20.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 152 "./src/cpp/unrar/unpack20.cpp"
 $7 = ($4|0)!=($6|0); //@line 152 "./src/cpp/unrar/unpack20.cpp"
 if ($7) {
  $8 = ((($2)) + 19514|0); //@line 153 "./src/cpp/unrar/unpack20.cpp"
  HEAP8[$8>>0] = 1; //@line 153 "./src/cpp/unrar/unpack20.cpp"
 }
 $9 = ((($2)) + 96|0); //@line 154 "./src/cpp/unrar/unpack20.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 154 "./src/cpp/unrar/unpack20.cpp"
 $11 = ((($2)) + 100|0); //@line 154 "./src/cpp/unrar/unpack20.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 154 "./src/cpp/unrar/unpack20.cpp"
 $13 = ($10>>>0)<($12>>>0); //@line 154 "./src/cpp/unrar/unpack20.cpp"
 $14 = HEAP32[$2>>2]|0;
 $15 = ((($2)) + 19236|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($2)) + 100|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (($16) + ($18)|0);
 if ($13) {
  $20 = ((($2)) + 100|0); //@line 156 "./src/cpp/unrar/unpack20.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 156 "./src/cpp/unrar/unpack20.cpp"
  $22 = (0 - ($21))|0; //@line 156 "./src/cpp/unrar/unpack20.cpp"
  $23 = ((($2)) + 59088|0); //@line 156 "./src/cpp/unrar/unpack20.cpp"
  $24 = HEAP32[$23>>2]|0; //@line 156 "./src/cpp/unrar/unpack20.cpp"
  $25 = $22 & $24; //@line 156 "./src/cpp/unrar/unpack20.cpp"
  __ZN11ComprDataIO8UnpWriteEPhj($14,$19,$25); //@line 156 "./src/cpp/unrar/unpack20.cpp"
  $26 = HEAP32[$2>>2]|0; //@line 157 "./src/cpp/unrar/unpack20.cpp"
  $27 = ((($2)) + 19236|0); //@line 157 "./src/cpp/unrar/unpack20.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 157 "./src/cpp/unrar/unpack20.cpp"
  $29 = ((($2)) + 96|0); //@line 157 "./src/cpp/unrar/unpack20.cpp"
  $30 = HEAP32[$29>>2]|0; //@line 157 "./src/cpp/unrar/unpack20.cpp"
  __ZN11ComprDataIO8UnpWriteEPhj($26,$28,$30); //@line 157 "./src/cpp/unrar/unpack20.cpp"
  $31 = ((($2)) + 19513|0); //@line 158 "./src/cpp/unrar/unpack20.cpp"
  HEAP8[$31>>0] = 1; //@line 158 "./src/cpp/unrar/unpack20.cpp"
  $37 = ((($2)) + 96|0); //@line 162 "./src/cpp/unrar/unpack20.cpp"
  $38 = HEAP32[$37>>2]|0; //@line 162 "./src/cpp/unrar/unpack20.cpp"
  $39 = ((($2)) + 100|0); //@line 162 "./src/cpp/unrar/unpack20.cpp"
  HEAP32[$39>>2] = $38; //@line 162 "./src/cpp/unrar/unpack20.cpp"
  STACKTOP = sp;return; //@line 163 "./src/cpp/unrar/unpack20.cpp"
 } else {
  $32 = ((($2)) + 96|0); //@line 161 "./src/cpp/unrar/unpack20.cpp"
  $33 = HEAP32[$32>>2]|0; //@line 161 "./src/cpp/unrar/unpack20.cpp"
  $34 = ((($2)) + 100|0); //@line 161 "./src/cpp/unrar/unpack20.cpp"
  $35 = HEAP32[$34>>2]|0; //@line 161 "./src/cpp/unrar/unpack20.cpp"
  $36 = (($33) - ($35))|0; //@line 161 "./src/cpp/unrar/unpack20.cpp"
  __ZN11ComprDataIO8UnpWriteEPhj($14,$19,$36); //@line 161 "./src/cpp/unrar/unpack20.cpp"
  $37 = ((($2)) + 96|0); //@line 162 "./src/cpp/unrar/unpack20.cpp"
  $38 = HEAP32[$37>>2]|0; //@line 162 "./src/cpp/unrar/unpack20.cpp"
  $39 = ((($2)) + 100|0); //@line 162 "./src/cpp/unrar/unpack20.cpp"
  HEAP32[$39>>2] = $38; //@line 162 "./src/cpp/unrar/unpack20.cpp"
  STACKTOP = sp;return; //@line 163 "./src/cpp/unrar/unpack20.cpp"
 }
}
function __ZN6Unpack10HuffDecodeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $8 = $1;
 $9 = ((($8)) + 4|0); //@line 328 "./src/cpp/unrar/unpack15.cpp"
 $10 = (__ZN8BitInput8fgetbitsEv($9)|0); //@line 328 "./src/cpp/unrar/unpack15.cpp"
 $7 = $10; //@line 328 "./src/cpp/unrar/unpack15.cpp"
 $11 = ((($8)) + 22352|0); //@line 330 "./src/cpp/unrar/unpack15.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 330 "./src/cpp/unrar/unpack15.cpp"
 $13 = ($12>>>0)>(30207); //@line 330 "./src/cpp/unrar/unpack15.cpp"
 do {
  if ($13) {
   $14 = $7; //@line 331 "./src/cpp/unrar/unpack15.cpp"
   $15 = (__ZN6Unpack9DecodeNumEjjPjS0_($8,$14,8,2120,2144)|0); //@line 331 "./src/cpp/unrar/unpack15.cpp"
   $6 = $15; //@line 331 "./src/cpp/unrar/unpack15.cpp"
  } else {
   $16 = ((($8)) + 22352|0); //@line 333 "./src/cpp/unrar/unpack15.cpp"
   $17 = HEAP32[$16>>2]|0; //@line 333 "./src/cpp/unrar/unpack15.cpp"
   $18 = ($17>>>0)>(24063); //@line 333 "./src/cpp/unrar/unpack15.cpp"
   if ($18) {
    $19 = $7; //@line 334 "./src/cpp/unrar/unpack15.cpp"
    $20 = (__ZN6Unpack9DecodeNumEjjPjS0_($8,$19,6,2196,2224)|0); //@line 334 "./src/cpp/unrar/unpack15.cpp"
    $6 = $20; //@line 334 "./src/cpp/unrar/unpack15.cpp"
    break;
   }
   $21 = ((($8)) + 22352|0); //@line 336 "./src/cpp/unrar/unpack15.cpp"
   $22 = HEAP32[$21>>2]|0; //@line 336 "./src/cpp/unrar/unpack15.cpp"
   $23 = ($22>>>0)>(13823); //@line 336 "./src/cpp/unrar/unpack15.cpp"
   if ($23) {
    $24 = $7; //@line 337 "./src/cpp/unrar/unpack15.cpp"
    $25 = (__ZN6Unpack9DecodeNumEjjPjS0_($8,$24,5,1864,1896)|0); //@line 337 "./src/cpp/unrar/unpack15.cpp"
    $6 = $25; //@line 337 "./src/cpp/unrar/unpack15.cpp"
    break;
   }
   $26 = ((($8)) + 22352|0); //@line 339 "./src/cpp/unrar/unpack15.cpp"
   $27 = HEAP32[$26>>2]|0; //@line 339 "./src/cpp/unrar/unpack15.cpp"
   $28 = ($27>>>0)>(3583); //@line 339 "./src/cpp/unrar/unpack15.cpp"
   $29 = $7;
   if ($28) {
    $30 = (__ZN6Unpack9DecodeNumEjjPjS0_($8,$29,5,1948,1980)|0); //@line 340 "./src/cpp/unrar/unpack15.cpp"
    $6 = $30; //@line 340 "./src/cpp/unrar/unpack15.cpp"
    break;
   } else {
    $31 = (__ZN6Unpack9DecodeNumEjjPjS0_($8,$29,4,2032,2068)|0); //@line 342 "./src/cpp/unrar/unpack15.cpp"
    $6 = $31; //@line 342 "./src/cpp/unrar/unpack15.cpp"
    break;
   }
  }
 } while(0);
 $32 = $6; //@line 343 "./src/cpp/unrar/unpack15.cpp"
 $33 = $32 & 255; //@line 343 "./src/cpp/unrar/unpack15.cpp"
 $6 = $33; //@line 343 "./src/cpp/unrar/unpack15.cpp"
 $34 = ((($8)) + 22380|0); //@line 344 "./src/cpp/unrar/unpack15.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 344 "./src/cpp/unrar/unpack15.cpp"
 $36 = ($35|0)!=(0); //@line 344 "./src/cpp/unrar/unpack15.cpp"
 if ($36) {
  $37 = $6; //@line 346 "./src/cpp/unrar/unpack15.cpp"
  $38 = ($37|0)==(0); //@line 346 "./src/cpp/unrar/unpack15.cpp"
  $39 = $7; //@line 346 "./src/cpp/unrar/unpack15.cpp"
  $40 = ($39>>>0)>(4095); //@line 346 "./src/cpp/unrar/unpack15.cpp"
  $or$cond = $38 & $40; //@line 346 "./src/cpp/unrar/unpack15.cpp"
  if ($or$cond) {
   $6 = 256; //@line 347 "./src/cpp/unrar/unpack15.cpp"
  }
  $41 = $6; //@line 348 "./src/cpp/unrar/unpack15.cpp"
  $42 = (($41) + -1)|0; //@line 348 "./src/cpp/unrar/unpack15.cpp"
  $6 = $42; //@line 348 "./src/cpp/unrar/unpack15.cpp"
  $43 = ($42|0)==(-1); //@line 348 "./src/cpp/unrar/unpack15.cpp"
  if ($43) {
   $44 = ((($8)) + 4|0); //@line 350 "./src/cpp/unrar/unpack15.cpp"
   $45 = (__ZN8BitInput8fgetbitsEv($44)|0); //@line 350 "./src/cpp/unrar/unpack15.cpp"
   $7 = $45; //@line 350 "./src/cpp/unrar/unpack15.cpp"
   $46 = ((($8)) + 4|0); //@line 351 "./src/cpp/unrar/unpack15.cpp"
   __ZN8BitInput8faddbitsEj($46,1); //@line 351 "./src/cpp/unrar/unpack15.cpp"
   $47 = $7; //@line 352 "./src/cpp/unrar/unpack15.cpp"
   $48 = $47 & 32768; //@line 352 "./src/cpp/unrar/unpack15.cpp"
   $49 = ($48|0)!=(0); //@line 352 "./src/cpp/unrar/unpack15.cpp"
   if ($49) {
    $50 = ((($8)) + 22380|0); //@line 354 "./src/cpp/unrar/unpack15.cpp"
    HEAP32[$50>>2] = 0; //@line 354 "./src/cpp/unrar/unpack15.cpp"
    $51 = ((($8)) + 22376|0); //@line 354 "./src/cpp/unrar/unpack15.cpp"
    HEAP32[$51>>2] = 0; //@line 354 "./src/cpp/unrar/unpack15.cpp"
    STACKTOP = sp;return; //@line 396 "./src/cpp/unrar/unpack15.cpp"
   } else {
    $52 = $7; //@line 359 "./src/cpp/unrar/unpack15.cpp"
    $53 = $52 & 16384; //@line 359 "./src/cpp/unrar/unpack15.cpp"
    $54 = ($53|0)!=(0); //@line 359 "./src/cpp/unrar/unpack15.cpp"
    $55 = $54 ? 4 : 3; //@line 359 "./src/cpp/unrar/unpack15.cpp"
    $4 = $55; //@line 359 "./src/cpp/unrar/unpack15.cpp"
    $56 = ((($8)) + 4|0); //@line 360 "./src/cpp/unrar/unpack15.cpp"
    __ZN8BitInput8faddbitsEj($56,1); //@line 360 "./src/cpp/unrar/unpack15.cpp"
    $57 = ((($8)) + 4|0); //@line 361 "./src/cpp/unrar/unpack15.cpp"
    $58 = (__ZN8BitInput8fgetbitsEv($57)|0); //@line 361 "./src/cpp/unrar/unpack15.cpp"
    $59 = (__ZN6Unpack9DecodeNumEjjPjS0_($8,$58,5,1864,1896)|0); //@line 361 "./src/cpp/unrar/unpack15.cpp"
    $5 = $59; //@line 361 "./src/cpp/unrar/unpack15.cpp"
    $60 = $5; //@line 362 "./src/cpp/unrar/unpack15.cpp"
    $61 = $60 << 5; //@line 362 "./src/cpp/unrar/unpack15.cpp"
    $62 = ((($8)) + 4|0); //@line 362 "./src/cpp/unrar/unpack15.cpp"
    $63 = (__ZN8BitInput8fgetbitsEv($62)|0); //@line 362 "./src/cpp/unrar/unpack15.cpp"
    $64 = $63 >>> 11; //@line 362 "./src/cpp/unrar/unpack15.cpp"
    $65 = $61 | $64; //@line 362 "./src/cpp/unrar/unpack15.cpp"
    $5 = $65; //@line 362 "./src/cpp/unrar/unpack15.cpp"
    $66 = ((($8)) + 4|0); //@line 363 "./src/cpp/unrar/unpack15.cpp"
    __ZN8BitInput8faddbitsEj($66,5); //@line 363 "./src/cpp/unrar/unpack15.cpp"
    $67 = $5; //@line 364 "./src/cpp/unrar/unpack15.cpp"
    $68 = $4; //@line 364 "./src/cpp/unrar/unpack15.cpp"
    __ZN6Unpack12CopyString15Ejj($8,$67,$68); //@line 364 "./src/cpp/unrar/unpack15.cpp"
    STACKTOP = sp;return; //@line 396 "./src/cpp/unrar/unpack15.cpp"
   }
  }
 } else {
  $69 = ((($8)) + 22376|0); //@line 370 "./src/cpp/unrar/unpack15.cpp"
  $70 = HEAP32[$69>>2]|0; //@line 370 "./src/cpp/unrar/unpack15.cpp"
  $71 = (($70) + 1)|0; //@line 370 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$69>>2] = $71; //@line 370 "./src/cpp/unrar/unpack15.cpp"
  $72 = ($70|0)>=(16); //@line 370 "./src/cpp/unrar/unpack15.cpp"
  if ($72) {
   $73 = ((($8)) + 22388|0); //@line 370 "./src/cpp/unrar/unpack15.cpp"
   $74 = HEAP32[$73>>2]|0; //@line 370 "./src/cpp/unrar/unpack15.cpp"
   $75 = ($74|0)==(0); //@line 370 "./src/cpp/unrar/unpack15.cpp"
   if ($75) {
    $76 = ((($8)) + 22380|0); //@line 371 "./src/cpp/unrar/unpack15.cpp"
    HEAP32[$76>>2] = 1; //@line 371 "./src/cpp/unrar/unpack15.cpp"
   }
  }
 }
 $77 = $6; //@line 372 "./src/cpp/unrar/unpack15.cpp"
 $78 = ((($8)) + 22352|0); //@line 372 "./src/cpp/unrar/unpack15.cpp"
 $79 = HEAP32[$78>>2]|0; //@line 372 "./src/cpp/unrar/unpack15.cpp"
 $80 = (($79) + ($77))|0; //@line 372 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$78>>2] = $80; //@line 372 "./src/cpp/unrar/unpack15.cpp"
 $81 = ((($8)) + 22352|0); //@line 373 "./src/cpp/unrar/unpack15.cpp"
 $82 = HEAP32[$81>>2]|0; //@line 373 "./src/cpp/unrar/unpack15.cpp"
 $83 = $82 >>> 8; //@line 373 "./src/cpp/unrar/unpack15.cpp"
 $84 = ((($8)) + 22352|0); //@line 373 "./src/cpp/unrar/unpack15.cpp"
 $85 = HEAP32[$84>>2]|0; //@line 373 "./src/cpp/unrar/unpack15.cpp"
 $86 = (($85) - ($83))|0; //@line 373 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$84>>2] = $86; //@line 373 "./src/cpp/unrar/unpack15.cpp"
 $87 = ((($8)) + 22392|0); //@line 374 "./src/cpp/unrar/unpack15.cpp"
 $88 = HEAP32[$87>>2]|0; //@line 374 "./src/cpp/unrar/unpack15.cpp"
 $89 = (($88) + 16)|0; //@line 374 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$87>>2] = $89; //@line 374 "./src/cpp/unrar/unpack15.cpp"
 $90 = ((($8)) + 22392|0); //@line 375 "./src/cpp/unrar/unpack15.cpp"
 $91 = HEAP32[$90>>2]|0; //@line 375 "./src/cpp/unrar/unpack15.cpp"
 $92 = ($91>>>0)>(255); //@line 375 "./src/cpp/unrar/unpack15.cpp"
 if ($92) {
  $93 = ((($8)) + 22392|0); //@line 377 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$93>>2] = 144; //@line 377 "./src/cpp/unrar/unpack15.cpp"
  $94 = ((($8)) + 22396|0); //@line 378 "./src/cpp/unrar/unpack15.cpp"
  $95 = HEAP32[$94>>2]|0; //@line 378 "./src/cpp/unrar/unpack15.cpp"
  $96 = $95 >>> 1; //@line 378 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$94>>2] = $96; //@line 378 "./src/cpp/unrar/unpack15.cpp"
 }
 $97 = ((($8)) + 19530|0); //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $98 = $6; //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $99 = (($97) + ($98<<1)|0); //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $100 = HEAP16[$99>>1]|0; //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $101 = $100&65535; //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $102 = $101 >> 8; //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $103 = $102&255; //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $104 = ((($8)) + 19236|0); //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $105 = HEAP32[$104>>2]|0; //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $106 = ((($8)) + 96|0); //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $107 = HEAP32[$106>>2]|0; //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $108 = (($107) + 1)|0; //@line 381 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$106>>2] = $108; //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $109 = (($105) + ($107)|0); //@line 381 "./src/cpp/unrar/unpack15.cpp"
 HEAP8[$109>>0] = $103; //@line 381 "./src/cpp/unrar/unpack15.cpp"
 $110 = ((($8)) + 19504|0); //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $111 = $110; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $112 = $111; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $113 = HEAP32[$112>>2]|0; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $114 = (($111) + 4)|0; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $115 = $114; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $116 = HEAP32[$115>>2]|0; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $117 = (_i64Add(($113|0),($116|0),-1,-1)|0); //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $118 = tempRet0; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $119 = $110; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $120 = $119; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$120>>2] = $117; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $121 = (($119) + 4)|0; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 $122 = $121; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$122>>2] = $118; //@line 382 "./src/cpp/unrar/unpack15.cpp"
 while(1) {
  $123 = ((($8)) + 19530|0); //@line 386 "./src/cpp/unrar/unpack15.cpp"
  $124 = $6; //@line 386 "./src/cpp/unrar/unpack15.cpp"
  $125 = (($123) + ($124<<1)|0); //@line 386 "./src/cpp/unrar/unpack15.cpp"
  $126 = HEAP16[$125>>1]|0; //@line 386 "./src/cpp/unrar/unpack15.cpp"
  $127 = $126&65535; //@line 386 "./src/cpp/unrar/unpack15.cpp"
  $2 = $127; //@line 386 "./src/cpp/unrar/unpack15.cpp"
  $128 = ((($8)) + 21578|0); //@line 387 "./src/cpp/unrar/unpack15.cpp"
  $129 = $2; //@line 387 "./src/cpp/unrar/unpack15.cpp"
  $130 = (($129) + 1)|0; //@line 387 "./src/cpp/unrar/unpack15.cpp"
  $2 = $130; //@line 387 "./src/cpp/unrar/unpack15.cpp"
  $131 = $129 & 255; //@line 387 "./src/cpp/unrar/unpack15.cpp"
  $132 = (($128) + ($131)|0); //@line 387 "./src/cpp/unrar/unpack15.cpp"
  $133 = HEAP8[$132>>0]|0; //@line 387 "./src/cpp/unrar/unpack15.cpp"
  $134 = (($133) + 1)<<24>>24; //@line 387 "./src/cpp/unrar/unpack15.cpp"
  HEAP8[$132>>0] = $134; //@line 387 "./src/cpp/unrar/unpack15.cpp"
  $135 = $133&255; //@line 387 "./src/cpp/unrar/unpack15.cpp"
  $3 = $135; //@line 387 "./src/cpp/unrar/unpack15.cpp"
  $136 = $2; //@line 388 "./src/cpp/unrar/unpack15.cpp"
  $137 = $136 & 255; //@line 388 "./src/cpp/unrar/unpack15.cpp"
  $138 = ($137>>>0)>(161); //@line 388 "./src/cpp/unrar/unpack15.cpp"
  $139 = ((($8)) + 19530|0);
  if (!($138)) {
   break;
  }
  $140 = ((($8)) + 21578|0); //@line 389 "./src/cpp/unrar/unpack15.cpp"
  __ZN6Unpack8CorrHuffEPtPh($8,$139,$140); //@line 389 "./src/cpp/unrar/unpack15.cpp"
 }
 $141 = $3; //@line 394 "./src/cpp/unrar/unpack15.cpp"
 $142 = (($139) + ($141<<1)|0); //@line 394 "./src/cpp/unrar/unpack15.cpp"
 $143 = HEAP16[$142>>1]|0; //@line 394 "./src/cpp/unrar/unpack15.cpp"
 $144 = ((($8)) + 19530|0); //@line 394 "./src/cpp/unrar/unpack15.cpp"
 $145 = $6; //@line 394 "./src/cpp/unrar/unpack15.cpp"
 $146 = (($144) + ($145<<1)|0); //@line 394 "./src/cpp/unrar/unpack15.cpp"
 HEAP16[$146>>1] = $143; //@line 394 "./src/cpp/unrar/unpack15.cpp"
 $147 = $2; //@line 395 "./src/cpp/unrar/unpack15.cpp"
 $148 = $147&65535; //@line 395 "./src/cpp/unrar/unpack15.cpp"
 $149 = ((($8)) + 19530|0); //@line 395 "./src/cpp/unrar/unpack15.cpp"
 $150 = $3; //@line 395 "./src/cpp/unrar/unpack15.cpp"
 $151 = (($149) + ($150<<1)|0); //@line 395 "./src/cpp/unrar/unpack15.cpp"
 HEAP16[$151>>1] = $148; //@line 395 "./src/cpp/unrar/unpack15.cpp"
 STACKTOP = sp;return; //@line 396 "./src/cpp/unrar/unpack15.cpp"
}
function __ZN6Unpack6LongLZEv($0) {
 $0 = $0|0;
 var $$sink = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $9 = $1;
 $10 = ((($9)) + 22376|0); //@line 236 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$10>>2] = 0; //@line 236 "./src/cpp/unrar/unpack15.cpp"
 $11 = ((($9)) + 22396|0); //@line 237 "./src/cpp/unrar/unpack15.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 237 "./src/cpp/unrar/unpack15.cpp"
 $13 = (($12) + 16)|0; //@line 237 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$11>>2] = $13; //@line 237 "./src/cpp/unrar/unpack15.cpp"
 $14 = ((($9)) + 22396|0); //@line 238 "./src/cpp/unrar/unpack15.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 238 "./src/cpp/unrar/unpack15.cpp"
 $16 = ($15>>>0)>(255); //@line 238 "./src/cpp/unrar/unpack15.cpp"
 if ($16) {
  $17 = ((($9)) + 22396|0); //@line 240 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$17>>2] = 144; //@line 240 "./src/cpp/unrar/unpack15.cpp"
  $18 = ((($9)) + 22392|0); //@line 241 "./src/cpp/unrar/unpack15.cpp"
  $19 = HEAP32[$18>>2]|0; //@line 241 "./src/cpp/unrar/unpack15.cpp"
  $20 = $19 >>> 1; //@line 241 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$18>>2] = $20; //@line 241 "./src/cpp/unrar/unpack15.cpp"
 }
 $21 = ((($9)) + 22364|0); //@line 243 "./src/cpp/unrar/unpack15.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 243 "./src/cpp/unrar/unpack15.cpp"
 $6 = $22; //@line 243 "./src/cpp/unrar/unpack15.cpp"
 $23 = ((($9)) + 4|0); //@line 245 "./src/cpp/unrar/unpack15.cpp"
 $24 = (__ZN8BitInput8fgetbitsEv($23)|0); //@line 245 "./src/cpp/unrar/unpack15.cpp"
 $8 = $24; //@line 245 "./src/cpp/unrar/unpack15.cpp"
 $25 = ((($9)) + 22364|0); //@line 246 "./src/cpp/unrar/unpack15.cpp"
 $26 = HEAP32[$25>>2]|0; //@line 246 "./src/cpp/unrar/unpack15.cpp"
 $27 = ($26>>>0)>=(122); //@line 246 "./src/cpp/unrar/unpack15.cpp"
 do {
  if ($27) {
   $28 = $8; //@line 247 "./src/cpp/unrar/unpack15.cpp"
   $29 = (__ZN6Unpack9DecodeNumEjjPjS0_($9,$28,3,1676,1716)|0); //@line 247 "./src/cpp/unrar/unpack15.cpp"
   $2 = $29; //@line 247 "./src/cpp/unrar/unpack15.cpp"
  } else {
   $30 = ((($9)) + 22364|0); //@line 249 "./src/cpp/unrar/unpack15.cpp"
   $31 = HEAP32[$30>>2]|0; //@line 249 "./src/cpp/unrar/unpack15.cpp"
   $32 = ($31>>>0)>=(64); //@line 249 "./src/cpp/unrar/unpack15.cpp"
   $33 = $8;
   if ($32) {
    $34 = (__ZN6Unpack9DecodeNumEjjPjS0_($9,$33,2,1768,1812)|0); //@line 250 "./src/cpp/unrar/unpack15.cpp"
    $2 = $34; //@line 250 "./src/cpp/unrar/unpack15.cpp"
    break;
   }
   $35 = ($33>>>0)<(256); //@line 252 "./src/cpp/unrar/unpack15.cpp"
   if ($35) {
    $36 = $8; //@line 254 "./src/cpp/unrar/unpack15.cpp"
    $2 = $36; //@line 254 "./src/cpp/unrar/unpack15.cpp"
    $37 = ((($9)) + 4|0); //@line 255 "./src/cpp/unrar/unpack15.cpp"
    __ZN8BitInput8faddbitsEj($37,16); //@line 255 "./src/cpp/unrar/unpack15.cpp"
    break;
   }
   $2 = 0; //@line 259 "./src/cpp/unrar/unpack15.cpp"
   while(1) {
    $38 = $8; //@line 259 "./src/cpp/unrar/unpack15.cpp"
    $39 = $2; //@line 259 "./src/cpp/unrar/unpack15.cpp"
    $40 = $38 << $39; //@line 259 "./src/cpp/unrar/unpack15.cpp"
    $41 = $40 & 32768; //@line 259 "./src/cpp/unrar/unpack15.cpp"
    $42 = ($41|0)==(0); //@line 259 "./src/cpp/unrar/unpack15.cpp"
    if (!($42)) {
     break;
    }
    $43 = $2; //@line 259 "./src/cpp/unrar/unpack15.cpp"
    $44 = (($43) + 1)|0; //@line 259 "./src/cpp/unrar/unpack15.cpp"
    $2 = $44; //@line 259 "./src/cpp/unrar/unpack15.cpp"
   }
   $45 = ((($9)) + 4|0); //@line 261 "./src/cpp/unrar/unpack15.cpp"
   $46 = $2; //@line 261 "./src/cpp/unrar/unpack15.cpp"
   $47 = (($46) + 1)|0; //@line 261 "./src/cpp/unrar/unpack15.cpp"
   __ZN8BitInput8faddbitsEj($45,$47); //@line 261 "./src/cpp/unrar/unpack15.cpp"
  }
 } while(0);
 $48 = $2; //@line 264 "./src/cpp/unrar/unpack15.cpp"
 $49 = ((($9)) + 22364|0); //@line 264 "./src/cpp/unrar/unpack15.cpp"
 $50 = HEAP32[$49>>2]|0; //@line 264 "./src/cpp/unrar/unpack15.cpp"
 $51 = (($50) + ($48))|0; //@line 264 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$49>>2] = $51; //@line 264 "./src/cpp/unrar/unpack15.cpp"
 $52 = ((($9)) + 22364|0); //@line 265 "./src/cpp/unrar/unpack15.cpp"
 $53 = HEAP32[$52>>2]|0; //@line 265 "./src/cpp/unrar/unpack15.cpp"
 $54 = $53 >>> 5; //@line 265 "./src/cpp/unrar/unpack15.cpp"
 $55 = ((($9)) + 22364|0); //@line 265 "./src/cpp/unrar/unpack15.cpp"
 $56 = HEAP32[$55>>2]|0; //@line 265 "./src/cpp/unrar/unpack15.cpp"
 $57 = (($56) - ($54))|0; //@line 265 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$55>>2] = $57; //@line 265 "./src/cpp/unrar/unpack15.cpp"
 $58 = ((($9)) + 4|0); //@line 267 "./src/cpp/unrar/unpack15.cpp"
 $59 = (__ZN8BitInput8fgetbitsEv($58)|0); //@line 267 "./src/cpp/unrar/unpack15.cpp"
 $8 = $59; //@line 267 "./src/cpp/unrar/unpack15.cpp"
 $60 = ((($9)) + 22356|0); //@line 268 "./src/cpp/unrar/unpack15.cpp"
 $61 = HEAP32[$60>>2]|0; //@line 268 "./src/cpp/unrar/unpack15.cpp"
 $62 = ($61>>>0)>(10495); //@line 268 "./src/cpp/unrar/unpack15.cpp"
 do {
  if ($62) {
   $63 = $8; //@line 269 "./src/cpp/unrar/unpack15.cpp"
   $64 = (__ZN6Unpack9DecodeNumEjjPjS0_($9,$63,5,1864,1896)|0); //@line 269 "./src/cpp/unrar/unpack15.cpp"
   $4 = $64; //@line 269 "./src/cpp/unrar/unpack15.cpp"
  } else {
   $65 = ((($9)) + 22356|0); //@line 271 "./src/cpp/unrar/unpack15.cpp"
   $66 = HEAP32[$65>>2]|0; //@line 271 "./src/cpp/unrar/unpack15.cpp"
   $67 = ($66>>>0)>(1791); //@line 271 "./src/cpp/unrar/unpack15.cpp"
   $68 = $8;
   if ($67) {
    $69 = (__ZN6Unpack9DecodeNumEjjPjS0_($9,$68,5,1948,1980)|0); //@line 272 "./src/cpp/unrar/unpack15.cpp"
    $4 = $69; //@line 272 "./src/cpp/unrar/unpack15.cpp"
    break;
   } else {
    $70 = (__ZN6Unpack9DecodeNumEjjPjS0_($9,$68,4,2032,2068)|0); //@line 274 "./src/cpp/unrar/unpack15.cpp"
    $4 = $70; //@line 274 "./src/cpp/unrar/unpack15.cpp"
    break;
   }
  }
 } while(0);
 $71 = $4; //@line 276 "./src/cpp/unrar/unpack15.cpp"
 $72 = ((($9)) + 22356|0); //@line 276 "./src/cpp/unrar/unpack15.cpp"
 $73 = HEAP32[$72>>2]|0; //@line 276 "./src/cpp/unrar/unpack15.cpp"
 $74 = (($73) + ($71))|0; //@line 276 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$72>>2] = $74; //@line 276 "./src/cpp/unrar/unpack15.cpp"
 $75 = ((($9)) + 22356|0); //@line 277 "./src/cpp/unrar/unpack15.cpp"
 $76 = HEAP32[$75>>2]|0; //@line 277 "./src/cpp/unrar/unpack15.cpp"
 $77 = $76 >>> 8; //@line 277 "./src/cpp/unrar/unpack15.cpp"
 $78 = ((($9)) + 22356|0); //@line 277 "./src/cpp/unrar/unpack15.cpp"
 $79 = HEAP32[$78>>2]|0; //@line 277 "./src/cpp/unrar/unpack15.cpp"
 $80 = (($79) - ($77))|0; //@line 277 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$78>>2] = $80; //@line 277 "./src/cpp/unrar/unpack15.cpp"
 while(1) {
  $81 = ((($9)) + 20554|0); //@line 280 "./src/cpp/unrar/unpack15.cpp"
  $82 = $4; //@line 280 "./src/cpp/unrar/unpack15.cpp"
  $83 = $82 & 255; //@line 280 "./src/cpp/unrar/unpack15.cpp"
  $84 = (($81) + ($83<<1)|0); //@line 280 "./src/cpp/unrar/unpack15.cpp"
  $85 = HEAP16[$84>>1]|0; //@line 280 "./src/cpp/unrar/unpack15.cpp"
  $86 = $85&65535; //@line 280 "./src/cpp/unrar/unpack15.cpp"
  $3 = $86; //@line 280 "./src/cpp/unrar/unpack15.cpp"
  $87 = ((($9)) + 21834|0); //@line 281 "./src/cpp/unrar/unpack15.cpp"
  $88 = $3; //@line 281 "./src/cpp/unrar/unpack15.cpp"
  $89 = (($88) + 1)|0; //@line 281 "./src/cpp/unrar/unpack15.cpp"
  $3 = $89; //@line 281 "./src/cpp/unrar/unpack15.cpp"
  $90 = $88 & 255; //@line 281 "./src/cpp/unrar/unpack15.cpp"
  $91 = (($87) + ($90)|0); //@line 281 "./src/cpp/unrar/unpack15.cpp"
  $92 = HEAP8[$91>>0]|0; //@line 281 "./src/cpp/unrar/unpack15.cpp"
  $93 = (($92) + 1)<<24>>24; //@line 281 "./src/cpp/unrar/unpack15.cpp"
  HEAP8[$91>>0] = $93; //@line 281 "./src/cpp/unrar/unpack15.cpp"
  $94 = $92&255; //@line 281 "./src/cpp/unrar/unpack15.cpp"
  $5 = $94; //@line 281 "./src/cpp/unrar/unpack15.cpp"
  $95 = $3; //@line 282 "./src/cpp/unrar/unpack15.cpp"
  $96 = $95 & 255; //@line 282 "./src/cpp/unrar/unpack15.cpp"
  $97 = ($96|0)!=(0); //@line 282 "./src/cpp/unrar/unpack15.cpp"
  $98 = ((($9)) + 20554|0);
  if ($97) {
   break;
  }
  $99 = ((($9)) + 21834|0); //@line 283 "./src/cpp/unrar/unpack15.cpp"
  __ZN6Unpack8CorrHuffEPtPh($9,$98,$99); //@line 283 "./src/cpp/unrar/unpack15.cpp"
 }
 $100 = $5; //@line 288 "./src/cpp/unrar/unpack15.cpp"
 $101 = (($98) + ($100<<1)|0); //@line 288 "./src/cpp/unrar/unpack15.cpp"
 $102 = HEAP16[$101>>1]|0; //@line 288 "./src/cpp/unrar/unpack15.cpp"
 $103 = ((($9)) + 20554|0); //@line 288 "./src/cpp/unrar/unpack15.cpp"
 $104 = $4; //@line 288 "./src/cpp/unrar/unpack15.cpp"
 $105 = (($103) + ($104<<1)|0); //@line 288 "./src/cpp/unrar/unpack15.cpp"
 HEAP16[$105>>1] = $102; //@line 288 "./src/cpp/unrar/unpack15.cpp"
 $106 = $3; //@line 289 "./src/cpp/unrar/unpack15.cpp"
 $107 = $106&65535; //@line 289 "./src/cpp/unrar/unpack15.cpp"
 $108 = ((($9)) + 20554|0); //@line 289 "./src/cpp/unrar/unpack15.cpp"
 $109 = $5; //@line 289 "./src/cpp/unrar/unpack15.cpp"
 $110 = (($108) + ($109<<1)|0); //@line 289 "./src/cpp/unrar/unpack15.cpp"
 HEAP16[$110>>1] = $107; //@line 289 "./src/cpp/unrar/unpack15.cpp"
 $111 = $3; //@line 291 "./src/cpp/unrar/unpack15.cpp"
 $112 = $111 & 65280; //@line 291 "./src/cpp/unrar/unpack15.cpp"
 $113 = ((($9)) + 4|0); //@line 291 "./src/cpp/unrar/unpack15.cpp"
 $114 = (__ZN8BitInput8fgetbitsEv($113)|0); //@line 291 "./src/cpp/unrar/unpack15.cpp"
 $115 = $114 >>> 8; //@line 291 "./src/cpp/unrar/unpack15.cpp"
 $116 = $112 | $115; //@line 291 "./src/cpp/unrar/unpack15.cpp"
 $117 = $116 >>> 1; //@line 291 "./src/cpp/unrar/unpack15.cpp"
 $3 = $117; //@line 291 "./src/cpp/unrar/unpack15.cpp"
 $118 = ((($9)) + 4|0); //@line 292 "./src/cpp/unrar/unpack15.cpp"
 __ZN8BitInput8faddbitsEj($118,7); //@line 292 "./src/cpp/unrar/unpack15.cpp"
 $119 = ((($9)) + 22368|0); //@line 294 "./src/cpp/unrar/unpack15.cpp"
 $120 = HEAP32[$119>>2]|0; //@line 294 "./src/cpp/unrar/unpack15.cpp"
 $7 = $120; //@line 294 "./src/cpp/unrar/unpack15.cpp"
 $121 = $2; //@line 295 "./src/cpp/unrar/unpack15.cpp"
 $122 = ($121|0)!=(1); //@line 295 "./src/cpp/unrar/unpack15.cpp"
 $123 = $2; //@line 295 "./src/cpp/unrar/unpack15.cpp"
 $124 = ($123|0)!=(4); //@line 295 "./src/cpp/unrar/unpack15.cpp"
 $or$cond = $122 & $124; //@line 295 "./src/cpp/unrar/unpack15.cpp"
 do {
  if ($or$cond) {
   $125 = $2; //@line 296 "./src/cpp/unrar/unpack15.cpp"
   $126 = ($125|0)==(0); //@line 296 "./src/cpp/unrar/unpack15.cpp"
   if ($126) {
    $127 = $3; //@line 296 "./src/cpp/unrar/unpack15.cpp"
    $128 = ((($9)) + 22400|0); //@line 296 "./src/cpp/unrar/unpack15.cpp"
    $129 = HEAP32[$128>>2]|0; //@line 296 "./src/cpp/unrar/unpack15.cpp"
    $130 = ($127>>>0)<=($129>>>0); //@line 296 "./src/cpp/unrar/unpack15.cpp"
    if ($130) {
     $131 = ((($9)) + 22368|0); //@line 298 "./src/cpp/unrar/unpack15.cpp"
     $132 = HEAP32[$131>>2]|0; //@line 298 "./src/cpp/unrar/unpack15.cpp"
     $133 = (($132) + 1)|0; //@line 298 "./src/cpp/unrar/unpack15.cpp"
     HEAP32[$131>>2] = $133; //@line 298 "./src/cpp/unrar/unpack15.cpp"
     $134 = ((($9)) + 22368|0); //@line 299 "./src/cpp/unrar/unpack15.cpp"
     $135 = HEAP32[$134>>2]|0; //@line 299 "./src/cpp/unrar/unpack15.cpp"
     $136 = $135 >>> 8; //@line 299 "./src/cpp/unrar/unpack15.cpp"
     $137 = ((($9)) + 22368|0); //@line 299 "./src/cpp/unrar/unpack15.cpp"
     $138 = HEAP32[$137>>2]|0; //@line 299 "./src/cpp/unrar/unpack15.cpp"
     $139 = (($138) - ($136))|0; //@line 299 "./src/cpp/unrar/unpack15.cpp"
     HEAP32[$137>>2] = $139; //@line 299 "./src/cpp/unrar/unpack15.cpp"
     break;
    }
   }
   $140 = ((($9)) + 22368|0); //@line 302 "./src/cpp/unrar/unpack15.cpp"
   $141 = HEAP32[$140>>2]|0; //@line 302 "./src/cpp/unrar/unpack15.cpp"
   $142 = ($141>>>0)>(0); //@line 302 "./src/cpp/unrar/unpack15.cpp"
   if ($142) {
    $143 = ((($9)) + 22368|0); //@line 303 "./src/cpp/unrar/unpack15.cpp"
    $144 = HEAP32[$143>>2]|0; //@line 303 "./src/cpp/unrar/unpack15.cpp"
    $145 = (($144) + -1)|0; //@line 303 "./src/cpp/unrar/unpack15.cpp"
    HEAP32[$143>>2] = $145; //@line 303 "./src/cpp/unrar/unpack15.cpp"
   }
  }
 } while(0);
 $146 = $2; //@line 304 "./src/cpp/unrar/unpack15.cpp"
 $147 = (($146) + 3)|0; //@line 304 "./src/cpp/unrar/unpack15.cpp"
 $2 = $147; //@line 304 "./src/cpp/unrar/unpack15.cpp"
 $148 = $3; //@line 305 "./src/cpp/unrar/unpack15.cpp"
 $149 = ((($9)) + 22400|0); //@line 305 "./src/cpp/unrar/unpack15.cpp"
 $150 = HEAP32[$149>>2]|0; //@line 305 "./src/cpp/unrar/unpack15.cpp"
 $151 = ($148>>>0)>=($150>>>0); //@line 305 "./src/cpp/unrar/unpack15.cpp"
 if ($151) {
  $152 = $2; //@line 306 "./src/cpp/unrar/unpack15.cpp"
  $153 = (($152) + 1)|0; //@line 306 "./src/cpp/unrar/unpack15.cpp"
  $2 = $153; //@line 306 "./src/cpp/unrar/unpack15.cpp"
 }
 $154 = $3; //@line 307 "./src/cpp/unrar/unpack15.cpp"
 $155 = ($154>>>0)<=(256); //@line 307 "./src/cpp/unrar/unpack15.cpp"
 if ($155) {
  $156 = $2; //@line 308 "./src/cpp/unrar/unpack15.cpp"
  $157 = (($156) + 8)|0; //@line 308 "./src/cpp/unrar/unpack15.cpp"
  $2 = $157; //@line 308 "./src/cpp/unrar/unpack15.cpp"
 }
 $158 = $7; //@line 309 "./src/cpp/unrar/unpack15.cpp"
 $159 = ($158>>>0)>(176); //@line 309 "./src/cpp/unrar/unpack15.cpp"
 if (!($159)) {
  $160 = ((($9)) + 22352|0); //@line 309 "./src/cpp/unrar/unpack15.cpp"
  $161 = HEAP32[$160>>2]|0; //@line 309 "./src/cpp/unrar/unpack15.cpp"
  $162 = ($161>>>0)>=(10752); //@line 309 "./src/cpp/unrar/unpack15.cpp"
  $163 = $6; //@line 309 "./src/cpp/unrar/unpack15.cpp"
  $164 = ($163>>>0)<(64); //@line 309 "./src/cpp/unrar/unpack15.cpp"
  $or$cond3 = $162 & $164; //@line 309 "./src/cpp/unrar/unpack15.cpp"
  if (!($or$cond3)) {
   $$sink = 8193;
   $165 = ((($9)) + 22400|0);
   HEAP32[$165>>2] = $$sink;
   $166 = $3; //@line 313 "./src/cpp/unrar/unpack15.cpp"
   $167 = ((($9)) + 68|0); //@line 313 "./src/cpp/unrar/unpack15.cpp"
   $168 = ((($9)) + 84|0); //@line 313 "./src/cpp/unrar/unpack15.cpp"
   $169 = HEAP32[$168>>2]|0; //@line 313 "./src/cpp/unrar/unpack15.cpp"
   $170 = (($169) + 1)|0; //@line 313 "./src/cpp/unrar/unpack15.cpp"
   HEAP32[$168>>2] = $170; //@line 313 "./src/cpp/unrar/unpack15.cpp"
   $171 = (($167) + ($169<<2)|0); //@line 313 "./src/cpp/unrar/unpack15.cpp"
   HEAP32[$171>>2] = $166; //@line 313 "./src/cpp/unrar/unpack15.cpp"
   $172 = ((($9)) + 84|0); //@line 314 "./src/cpp/unrar/unpack15.cpp"
   $173 = HEAP32[$172>>2]|0; //@line 314 "./src/cpp/unrar/unpack15.cpp"
   $174 = $173 & 3; //@line 314 "./src/cpp/unrar/unpack15.cpp"
   $175 = ((($9)) + 84|0); //@line 314 "./src/cpp/unrar/unpack15.cpp"
   HEAP32[$175>>2] = $174; //@line 314 "./src/cpp/unrar/unpack15.cpp"
   $176 = $2; //@line 315 "./src/cpp/unrar/unpack15.cpp"
   $177 = ((($9)) + 88|0); //@line 315 "./src/cpp/unrar/unpack15.cpp"
   HEAP32[$177>>2] = $176; //@line 315 "./src/cpp/unrar/unpack15.cpp"
   $178 = $3; //@line 316 "./src/cpp/unrar/unpack15.cpp"
   $179 = ((($9)) + 92|0); //@line 316 "./src/cpp/unrar/unpack15.cpp"
   HEAP32[$179>>2] = $178; //@line 316 "./src/cpp/unrar/unpack15.cpp"
   $180 = $3; //@line 317 "./src/cpp/unrar/unpack15.cpp"
   $181 = $2; //@line 317 "./src/cpp/unrar/unpack15.cpp"
   __ZN6Unpack12CopyString15Ejj($9,$180,$181); //@line 317 "./src/cpp/unrar/unpack15.cpp"
   STACKTOP = sp;return; //@line 318 "./src/cpp/unrar/unpack15.cpp"
  }
 }
 $$sink = 32512;
 $165 = ((($9)) + 22400|0);
 HEAP32[$165>>2] = $$sink;
 $166 = $3; //@line 313 "./src/cpp/unrar/unpack15.cpp"
 $167 = ((($9)) + 68|0); //@line 313 "./src/cpp/unrar/unpack15.cpp"
 $168 = ((($9)) + 84|0); //@line 313 "./src/cpp/unrar/unpack15.cpp"
 $169 = HEAP32[$168>>2]|0; //@line 313 "./src/cpp/unrar/unpack15.cpp"
 $170 = (($169) + 1)|0; //@line 313 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$168>>2] = $170; //@line 313 "./src/cpp/unrar/unpack15.cpp"
 $171 = (($167) + ($169<<2)|0); //@line 313 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$171>>2] = $166; //@line 313 "./src/cpp/unrar/unpack15.cpp"
 $172 = ((($9)) + 84|0); //@line 314 "./src/cpp/unrar/unpack15.cpp"
 $173 = HEAP32[$172>>2]|0; //@line 314 "./src/cpp/unrar/unpack15.cpp"
 $174 = $173 & 3; //@line 314 "./src/cpp/unrar/unpack15.cpp"
 $175 = ((($9)) + 84|0); //@line 314 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$175>>2] = $174; //@line 314 "./src/cpp/unrar/unpack15.cpp"
 $176 = $2; //@line 315 "./src/cpp/unrar/unpack15.cpp"
 $177 = ((($9)) + 88|0); //@line 315 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$177>>2] = $176; //@line 315 "./src/cpp/unrar/unpack15.cpp"
 $178 = $3; //@line 316 "./src/cpp/unrar/unpack15.cpp"
 $179 = ((($9)) + 92|0); //@line 316 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$179>>2] = $178; //@line 316 "./src/cpp/unrar/unpack15.cpp"
 $180 = $3; //@line 317 "./src/cpp/unrar/unpack15.cpp"
 $181 = $2; //@line 317 "./src/cpp/unrar/unpack15.cpp"
 __ZN6Unpack12CopyString15Ejj($9,$180,$181); //@line 317 "./src/cpp/unrar/unpack15.cpp"
 STACKTOP = sp;return; //@line 318 "./src/cpp/unrar/unpack15.cpp"
}
function __ZN6Unpack7ShortLZEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $8 = $1;
 $9 = ((($8)) + 22376|0); //@line 131 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$9>>2] = 0; //@line 131 "./src/cpp/unrar/unpack15.cpp"
 $10 = ((($8)) + 4|0); //@line 133 "./src/cpp/unrar/unpack15.cpp"
 $11 = (__ZN8BitInput8fgetbitsEv($10)|0); //@line 133 "./src/cpp/unrar/unpack15.cpp"
 $7 = $11; //@line 133 "./src/cpp/unrar/unpack15.cpp"
 $12 = ((($8)) + 22384|0); //@line 134 "./src/cpp/unrar/unpack15.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 134 "./src/cpp/unrar/unpack15.cpp"
 $14 = ($13|0)==(2); //@line 134 "./src/cpp/unrar/unpack15.cpp"
 do {
  if ($14) {
   $15 = ((($8)) + 4|0); //@line 136 "./src/cpp/unrar/unpack15.cpp"
   __ZN8BitInput8faddbitsEj($15,1); //@line 136 "./src/cpp/unrar/unpack15.cpp"
   $16 = $7; //@line 137 "./src/cpp/unrar/unpack15.cpp"
   $17 = ($16>>>0)>=(32768); //@line 137 "./src/cpp/unrar/unpack15.cpp"
   if (!($17)) {
    $22 = $7; //@line 142 "./src/cpp/unrar/unpack15.cpp"
    $23 = $22 << 1; //@line 142 "./src/cpp/unrar/unpack15.cpp"
    $7 = $23; //@line 142 "./src/cpp/unrar/unpack15.cpp"
    $24 = ((($8)) + 22384|0); //@line 143 "./src/cpp/unrar/unpack15.cpp"
    HEAP32[$24>>2] = 0; //@line 143 "./src/cpp/unrar/unpack15.cpp"
    break;
   }
   $18 = ((($8)) + 92|0); //@line 139 "./src/cpp/unrar/unpack15.cpp"
   $19 = HEAP32[$18>>2]|0; //@line 139 "./src/cpp/unrar/unpack15.cpp"
   $20 = ((($8)) + 88|0); //@line 139 "./src/cpp/unrar/unpack15.cpp"
   $21 = HEAP32[$20>>2]|0; //@line 139 "./src/cpp/unrar/unpack15.cpp"
   __ZN6Unpack12CopyString15Ejj($8,$19,$21); //@line 139 "./src/cpp/unrar/unpack15.cpp"
   STACKTOP = sp;return; //@line 226 "./src/cpp/unrar/unpack15.cpp"
  }
 } while(0);
 $25 = $7; //@line 146 "./src/cpp/unrar/unpack15.cpp"
 $26 = $25 >>> 8; //@line 146 "./src/cpp/unrar/unpack15.cpp"
 $7 = $26; //@line 146 "./src/cpp/unrar/unpack15.cpp"
 $27 = ((($8)) + 22360|0); //@line 151 "./src/cpp/unrar/unpack15.cpp"
 $28 = HEAP32[$27>>2]|0; //@line 151 "./src/cpp/unrar/unpack15.cpp"
 $29 = ($28>>>0)<(37); //@line 151 "./src/cpp/unrar/unpack15.cpp"
 $2 = 0;
 if ($29) {
  while(1) {
   $30 = $7; //@line 154 "./src/cpp/unrar/unpack15.cpp"
   $31 = $2; //@line 154 "./src/cpp/unrar/unpack15.cpp"
   $32 = (1428 + ($31<<2)|0); //@line 154 "./src/cpp/unrar/unpack15.cpp"
   $33 = HEAP32[$32>>2]|0; //@line 154 "./src/cpp/unrar/unpack15.cpp"
   $34 = $30 ^ $33; //@line 154 "./src/cpp/unrar/unpack15.cpp"
   $35 = $2; //@line 154 "./src/cpp/unrar/unpack15.cpp"
   $36 = ($35|0)==(1); //@line 154 "./src/cpp/unrar/unpack15.cpp"
   if ($36) {
    $37 = ((($8)) + 22372|0); //@line 154 "./src/cpp/unrar/unpack15.cpp"
    $38 = HEAP32[$37>>2]|0; //@line 154 "./src/cpp/unrar/unpack15.cpp"
    $39 = (($38) + 3)|0; //@line 154 "./src/cpp/unrar/unpack15.cpp"
    $44 = $39;
   } else {
    $40 = $2; //@line 154 "./src/cpp/unrar/unpack15.cpp"
    $41 = (1488 + ($40<<2)|0); //@line 154 "./src/cpp/unrar/unpack15.cpp"
    $42 = HEAP32[$41>>2]|0; //@line 154 "./src/cpp/unrar/unpack15.cpp"
    $44 = $42;
   }
   $43 = 255 >> $44; //@line 154 "./src/cpp/unrar/unpack15.cpp"
   $45 = $43 ^ -1; //@line 154 "./src/cpp/unrar/unpack15.cpp"
   $46 = $34 & $45; //@line 154 "./src/cpp/unrar/unpack15.cpp"
   $47 = ($46|0)==(0); //@line 154 "./src/cpp/unrar/unpack15.cpp"
   if ($47) {
    break;
   }
   $48 = $2; //@line 153 "./src/cpp/unrar/unpack15.cpp"
   $49 = (($48) + 1)|0; //@line 153 "./src/cpp/unrar/unpack15.cpp"
   $2 = $49; //@line 153 "./src/cpp/unrar/unpack15.cpp"
  }
  $50 = ((($8)) + 4|0); //@line 156 "./src/cpp/unrar/unpack15.cpp"
  $51 = $2; //@line 156 "./src/cpp/unrar/unpack15.cpp"
  $52 = ($51|0)==(1); //@line 156 "./src/cpp/unrar/unpack15.cpp"
  if ($52) {
   $53 = ((($8)) + 22372|0); //@line 156 "./src/cpp/unrar/unpack15.cpp"
   $54 = HEAP32[$53>>2]|0; //@line 156 "./src/cpp/unrar/unpack15.cpp"
   $55 = (($54) + 3)|0; //@line 156 "./src/cpp/unrar/unpack15.cpp"
   $59 = $55;
  } else {
   $56 = $2; //@line 156 "./src/cpp/unrar/unpack15.cpp"
   $57 = (1488 + ($56<<2)|0); //@line 156 "./src/cpp/unrar/unpack15.cpp"
   $58 = HEAP32[$57>>2]|0; //@line 156 "./src/cpp/unrar/unpack15.cpp"
   $59 = $58;
  }
  __ZN8BitInput8faddbitsEj($50,$59); //@line 156 "./src/cpp/unrar/unpack15.cpp"
 } else {
  while(1) {
   $60 = $7; //@line 161 "./src/cpp/unrar/unpack15.cpp"
   $61 = $2; //@line 161 "./src/cpp/unrar/unpack15.cpp"
   $62 = (1552 + ($61<<2)|0); //@line 161 "./src/cpp/unrar/unpack15.cpp"
   $63 = HEAP32[$62>>2]|0; //@line 161 "./src/cpp/unrar/unpack15.cpp"
   $64 = $60 ^ $63; //@line 161 "./src/cpp/unrar/unpack15.cpp"
   $65 = $2; //@line 161 "./src/cpp/unrar/unpack15.cpp"
   $66 = ($65|0)==(3); //@line 161 "./src/cpp/unrar/unpack15.cpp"
   if ($66) {
    $67 = ((($8)) + 22372|0); //@line 161 "./src/cpp/unrar/unpack15.cpp"
    $68 = HEAP32[$67>>2]|0; //@line 161 "./src/cpp/unrar/unpack15.cpp"
    $69 = (($68) + 3)|0; //@line 161 "./src/cpp/unrar/unpack15.cpp"
    $74 = $69;
   } else {
    $70 = $2; //@line 161 "./src/cpp/unrar/unpack15.cpp"
    $71 = (1612 + ($70<<2)|0); //@line 161 "./src/cpp/unrar/unpack15.cpp"
    $72 = HEAP32[$71>>2]|0; //@line 161 "./src/cpp/unrar/unpack15.cpp"
    $74 = $72;
   }
   $73 = 255 >> $74; //@line 161 "./src/cpp/unrar/unpack15.cpp"
   $75 = $73 ^ -1; //@line 161 "./src/cpp/unrar/unpack15.cpp"
   $76 = $64 & $75; //@line 161 "./src/cpp/unrar/unpack15.cpp"
   $77 = ($76|0)==(0); //@line 161 "./src/cpp/unrar/unpack15.cpp"
   if ($77) {
    break;
   }
   $78 = $2; //@line 160 "./src/cpp/unrar/unpack15.cpp"
   $79 = (($78) + 1)|0; //@line 160 "./src/cpp/unrar/unpack15.cpp"
   $2 = $79; //@line 160 "./src/cpp/unrar/unpack15.cpp"
  }
  $80 = ((($8)) + 4|0); //@line 163 "./src/cpp/unrar/unpack15.cpp"
  $81 = $2; //@line 163 "./src/cpp/unrar/unpack15.cpp"
  $82 = ($81|0)==(3); //@line 163 "./src/cpp/unrar/unpack15.cpp"
  if ($82) {
   $83 = ((($8)) + 22372|0); //@line 163 "./src/cpp/unrar/unpack15.cpp"
   $84 = HEAP32[$83>>2]|0; //@line 163 "./src/cpp/unrar/unpack15.cpp"
   $85 = (($84) + 3)|0; //@line 163 "./src/cpp/unrar/unpack15.cpp"
   $89 = $85;
  } else {
   $86 = $2; //@line 163 "./src/cpp/unrar/unpack15.cpp"
   $87 = (1612 + ($86<<2)|0); //@line 163 "./src/cpp/unrar/unpack15.cpp"
   $88 = HEAP32[$87>>2]|0; //@line 163 "./src/cpp/unrar/unpack15.cpp"
   $89 = $88;
  }
  __ZN8BitInput8faddbitsEj($80,$89); //@line 163 "./src/cpp/unrar/unpack15.cpp"
 }
 $90 = $2; //@line 166 "./src/cpp/unrar/unpack15.cpp"
 $91 = ($90>>>0)>=(9); //@line 166 "./src/cpp/unrar/unpack15.cpp"
 if (!($91)) {
  $166 = ((($8)) + 22384|0); //@line 208 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$166>>2] = 0; //@line 208 "./src/cpp/unrar/unpack15.cpp"
  $167 = $2; //@line 209 "./src/cpp/unrar/unpack15.cpp"
  $168 = ((($8)) + 22360|0); //@line 209 "./src/cpp/unrar/unpack15.cpp"
  $169 = HEAP32[$168>>2]|0; //@line 209 "./src/cpp/unrar/unpack15.cpp"
  $170 = (($169) + ($167))|0; //@line 209 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$168>>2] = $170; //@line 209 "./src/cpp/unrar/unpack15.cpp"
  $171 = ((($8)) + 22360|0); //@line 210 "./src/cpp/unrar/unpack15.cpp"
  $172 = HEAP32[$171>>2]|0; //@line 210 "./src/cpp/unrar/unpack15.cpp"
  $173 = $172 >>> 4; //@line 210 "./src/cpp/unrar/unpack15.cpp"
  $174 = ((($8)) + 22360|0); //@line 210 "./src/cpp/unrar/unpack15.cpp"
  $175 = HEAP32[$174>>2]|0; //@line 210 "./src/cpp/unrar/unpack15.cpp"
  $176 = (($175) - ($173))|0; //@line 210 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$174>>2] = $176; //@line 210 "./src/cpp/unrar/unpack15.cpp"
  $177 = ((($8)) + 4|0); //@line 212 "./src/cpp/unrar/unpack15.cpp"
  $178 = (__ZN8BitInput8fgetbitsEv($177)|0); //@line 212 "./src/cpp/unrar/unpack15.cpp"
  $179 = (__ZN6Unpack9DecodeNumEjjPjS0_($8,$178,5,1864,1896)|0); //@line 212 "./src/cpp/unrar/unpack15.cpp"
  $180 = $179 & 255; //@line 212 "./src/cpp/unrar/unpack15.cpp"
  $6 = $180; //@line 212 "./src/cpp/unrar/unpack15.cpp"
  $181 = ((($8)) + 20042|0); //@line 213 "./src/cpp/unrar/unpack15.cpp"
  $182 = $6; //@line 213 "./src/cpp/unrar/unpack15.cpp"
  $183 = (($181) + ($182<<1)|0); //@line 213 "./src/cpp/unrar/unpack15.cpp"
  $184 = HEAP16[$183>>1]|0; //@line 213 "./src/cpp/unrar/unpack15.cpp"
  $185 = $184&65535; //@line 213 "./src/cpp/unrar/unpack15.cpp"
  $5 = $185; //@line 213 "./src/cpp/unrar/unpack15.cpp"
  $186 = $6; //@line 214 "./src/cpp/unrar/unpack15.cpp"
  $187 = (($186) + -1)|0; //@line 214 "./src/cpp/unrar/unpack15.cpp"
  $6 = $187; //@line 214 "./src/cpp/unrar/unpack15.cpp"
  $188 = ($187|0)!=(-1); //@line 214 "./src/cpp/unrar/unpack15.cpp"
  if ($188) {
   $189 = ((($8)) + 20042|0); //@line 216 "./src/cpp/unrar/unpack15.cpp"
   $190 = $6; //@line 216 "./src/cpp/unrar/unpack15.cpp"
   $191 = (($189) + ($190<<1)|0); //@line 216 "./src/cpp/unrar/unpack15.cpp"
   $192 = HEAP16[$191>>1]|0; //@line 216 "./src/cpp/unrar/unpack15.cpp"
   $193 = $192&65535; //@line 216 "./src/cpp/unrar/unpack15.cpp"
   $4 = $193; //@line 216 "./src/cpp/unrar/unpack15.cpp"
   $194 = $4; //@line 217 "./src/cpp/unrar/unpack15.cpp"
   $195 = $194&65535; //@line 217 "./src/cpp/unrar/unpack15.cpp"
   $196 = ((($8)) + 20042|0); //@line 217 "./src/cpp/unrar/unpack15.cpp"
   $197 = $6; //@line 217 "./src/cpp/unrar/unpack15.cpp"
   $198 = (($197) + 1)|0; //@line 217 "./src/cpp/unrar/unpack15.cpp"
   $199 = (($196) + ($198<<1)|0); //@line 217 "./src/cpp/unrar/unpack15.cpp"
   HEAP16[$199>>1] = $195; //@line 217 "./src/cpp/unrar/unpack15.cpp"
   $200 = $5; //@line 218 "./src/cpp/unrar/unpack15.cpp"
   $201 = $200&65535; //@line 218 "./src/cpp/unrar/unpack15.cpp"
   $202 = ((($8)) + 20042|0); //@line 218 "./src/cpp/unrar/unpack15.cpp"
   $203 = $6; //@line 218 "./src/cpp/unrar/unpack15.cpp"
   $204 = (($202) + ($203<<1)|0); //@line 218 "./src/cpp/unrar/unpack15.cpp"
   HEAP16[$204>>1] = $201; //@line 218 "./src/cpp/unrar/unpack15.cpp"
  }
  $205 = $2; //@line 220 "./src/cpp/unrar/unpack15.cpp"
  $206 = (($205) + 2)|0; //@line 220 "./src/cpp/unrar/unpack15.cpp"
  $2 = $206; //@line 220 "./src/cpp/unrar/unpack15.cpp"
  $207 = $5; //@line 221 "./src/cpp/unrar/unpack15.cpp"
  $208 = (($207) + 1)|0; //@line 221 "./src/cpp/unrar/unpack15.cpp"
  $5 = $208; //@line 221 "./src/cpp/unrar/unpack15.cpp"
  $209 = ((($8)) + 68|0); //@line 221 "./src/cpp/unrar/unpack15.cpp"
  $210 = ((($8)) + 84|0); //@line 221 "./src/cpp/unrar/unpack15.cpp"
  $211 = HEAP32[$210>>2]|0; //@line 221 "./src/cpp/unrar/unpack15.cpp"
  $212 = (($211) + 1)|0; //@line 221 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$210>>2] = $212; //@line 221 "./src/cpp/unrar/unpack15.cpp"
  $213 = (($209) + ($211<<2)|0); //@line 221 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$213>>2] = $208; //@line 221 "./src/cpp/unrar/unpack15.cpp"
  $214 = ((($8)) + 84|0); //@line 222 "./src/cpp/unrar/unpack15.cpp"
  $215 = HEAP32[$214>>2]|0; //@line 222 "./src/cpp/unrar/unpack15.cpp"
  $216 = $215 & 3; //@line 222 "./src/cpp/unrar/unpack15.cpp"
  $217 = ((($8)) + 84|0); //@line 222 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$217>>2] = $216; //@line 222 "./src/cpp/unrar/unpack15.cpp"
  $218 = $2; //@line 223 "./src/cpp/unrar/unpack15.cpp"
  $219 = ((($8)) + 88|0); //@line 223 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$219>>2] = $218; //@line 223 "./src/cpp/unrar/unpack15.cpp"
  $220 = $5; //@line 224 "./src/cpp/unrar/unpack15.cpp"
  $221 = ((($8)) + 92|0); //@line 224 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$221>>2] = $220; //@line 224 "./src/cpp/unrar/unpack15.cpp"
  $222 = $5; //@line 225 "./src/cpp/unrar/unpack15.cpp"
  $223 = $2; //@line 225 "./src/cpp/unrar/unpack15.cpp"
  __ZN6Unpack12CopyString15Ejj($8,$222,$223); //@line 225 "./src/cpp/unrar/unpack15.cpp"
  STACKTOP = sp;return; //@line 226 "./src/cpp/unrar/unpack15.cpp"
 }
 $92 = $2; //@line 168 "./src/cpp/unrar/unpack15.cpp"
 $93 = ($92|0)==(9); //@line 168 "./src/cpp/unrar/unpack15.cpp"
 if ($93) {
  $94 = ((($8)) + 22384|0); //@line 170 "./src/cpp/unrar/unpack15.cpp"
  $95 = HEAP32[$94>>2]|0; //@line 170 "./src/cpp/unrar/unpack15.cpp"
  $96 = (($95) + 1)|0; //@line 170 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$94>>2] = $96; //@line 170 "./src/cpp/unrar/unpack15.cpp"
  $97 = ((($8)) + 92|0); //@line 171 "./src/cpp/unrar/unpack15.cpp"
  $98 = HEAP32[$97>>2]|0; //@line 171 "./src/cpp/unrar/unpack15.cpp"
  $99 = ((($8)) + 88|0); //@line 171 "./src/cpp/unrar/unpack15.cpp"
  $100 = HEAP32[$99>>2]|0; //@line 171 "./src/cpp/unrar/unpack15.cpp"
  __ZN6Unpack12CopyString15Ejj($8,$98,$100); //@line 171 "./src/cpp/unrar/unpack15.cpp"
  STACKTOP = sp;return; //@line 226 "./src/cpp/unrar/unpack15.cpp"
 }
 $101 = $2; //@line 174 "./src/cpp/unrar/unpack15.cpp"
 $102 = ($101|0)==(14); //@line 174 "./src/cpp/unrar/unpack15.cpp"
 $103 = ((($8)) + 22384|0);
 HEAP32[$103>>2] = 0;
 if ($102) {
  $104 = ((($8)) + 4|0); //@line 177 "./src/cpp/unrar/unpack15.cpp"
  $105 = (__ZN8BitInput8fgetbitsEv($104)|0); //@line 177 "./src/cpp/unrar/unpack15.cpp"
  $106 = (__ZN6Unpack9DecodeNumEjjPjS0_($8,$105,3,1676,1716)|0); //@line 177 "./src/cpp/unrar/unpack15.cpp"
  $107 = (($106) + 5)|0; //@line 177 "./src/cpp/unrar/unpack15.cpp"
  $2 = $107; //@line 177 "./src/cpp/unrar/unpack15.cpp"
  $108 = ((($8)) + 4|0); //@line 178 "./src/cpp/unrar/unpack15.cpp"
  $109 = (__ZN8BitInput8fgetbitsEv($108)|0); //@line 178 "./src/cpp/unrar/unpack15.cpp"
  $110 = $109 >>> 1; //@line 178 "./src/cpp/unrar/unpack15.cpp"
  $111 = $110 | 32768; //@line 178 "./src/cpp/unrar/unpack15.cpp"
  $5 = $111; //@line 178 "./src/cpp/unrar/unpack15.cpp"
  $112 = ((($8)) + 4|0); //@line 179 "./src/cpp/unrar/unpack15.cpp"
  __ZN8BitInput8faddbitsEj($112,15); //@line 179 "./src/cpp/unrar/unpack15.cpp"
  $113 = $2; //@line 180 "./src/cpp/unrar/unpack15.cpp"
  $114 = ((($8)) + 88|0); //@line 180 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$114>>2] = $113; //@line 180 "./src/cpp/unrar/unpack15.cpp"
  $115 = $5; //@line 181 "./src/cpp/unrar/unpack15.cpp"
  $116 = ((($8)) + 92|0); //@line 181 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$116>>2] = $115; //@line 181 "./src/cpp/unrar/unpack15.cpp"
  $117 = $5; //@line 182 "./src/cpp/unrar/unpack15.cpp"
  $118 = $2; //@line 182 "./src/cpp/unrar/unpack15.cpp"
  __ZN6Unpack12CopyString15Ejj($8,$117,$118); //@line 182 "./src/cpp/unrar/unpack15.cpp"
  STACKTOP = sp;return; //@line 226 "./src/cpp/unrar/unpack15.cpp"
 }
 $119 = $2; //@line 187 "./src/cpp/unrar/unpack15.cpp"
 $3 = $119; //@line 187 "./src/cpp/unrar/unpack15.cpp"
 $120 = ((($8)) + 68|0); //@line 188 "./src/cpp/unrar/unpack15.cpp"
 $121 = ((($8)) + 84|0); //@line 188 "./src/cpp/unrar/unpack15.cpp"
 $122 = HEAP32[$121>>2]|0; //@line 188 "./src/cpp/unrar/unpack15.cpp"
 $123 = $2; //@line 188 "./src/cpp/unrar/unpack15.cpp"
 $124 = (($123) - 9)|0; //@line 188 "./src/cpp/unrar/unpack15.cpp"
 $125 = (($122) - ($124))|0; //@line 188 "./src/cpp/unrar/unpack15.cpp"
 $126 = $125 & 3; //@line 188 "./src/cpp/unrar/unpack15.cpp"
 $127 = (($120) + ($126<<2)|0); //@line 188 "./src/cpp/unrar/unpack15.cpp"
 $128 = HEAP32[$127>>2]|0; //@line 188 "./src/cpp/unrar/unpack15.cpp"
 $5 = $128; //@line 188 "./src/cpp/unrar/unpack15.cpp"
 $129 = ((($8)) + 4|0); //@line 189 "./src/cpp/unrar/unpack15.cpp"
 $130 = (__ZN8BitInput8fgetbitsEv($129)|0); //@line 189 "./src/cpp/unrar/unpack15.cpp"
 $131 = (__ZN6Unpack9DecodeNumEjjPjS0_($8,$130,2,1768,1812)|0); //@line 189 "./src/cpp/unrar/unpack15.cpp"
 $132 = (($131) + 2)|0; //@line 189 "./src/cpp/unrar/unpack15.cpp"
 $2 = $132; //@line 189 "./src/cpp/unrar/unpack15.cpp"
 $133 = $2; //@line 190 "./src/cpp/unrar/unpack15.cpp"
 $134 = ($133|0)==(257); //@line 190 "./src/cpp/unrar/unpack15.cpp"
 $135 = $3; //@line 190 "./src/cpp/unrar/unpack15.cpp"
 $136 = ($135|0)==(10); //@line 190 "./src/cpp/unrar/unpack15.cpp"
 $or$cond = $134 & $136; //@line 190 "./src/cpp/unrar/unpack15.cpp"
 if ($or$cond) {
  $137 = ((($8)) + 22372|0); //@line 192 "./src/cpp/unrar/unpack15.cpp"
  $138 = HEAP32[$137>>2]|0; //@line 192 "./src/cpp/unrar/unpack15.cpp"
  $139 = $138 ^ 1; //@line 192 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$137>>2] = $139; //@line 192 "./src/cpp/unrar/unpack15.cpp"
  STACKTOP = sp;return; //@line 226 "./src/cpp/unrar/unpack15.cpp"
 }
 $140 = $5; //@line 195 "./src/cpp/unrar/unpack15.cpp"
 $141 = ($140>>>0)>(256); //@line 195 "./src/cpp/unrar/unpack15.cpp"
 if ($141) {
  $142 = $2; //@line 196 "./src/cpp/unrar/unpack15.cpp"
  $143 = (($142) + 1)|0; //@line 196 "./src/cpp/unrar/unpack15.cpp"
  $2 = $143; //@line 196 "./src/cpp/unrar/unpack15.cpp"
 }
 $144 = $5; //@line 197 "./src/cpp/unrar/unpack15.cpp"
 $145 = ((($8)) + 22400|0); //@line 197 "./src/cpp/unrar/unpack15.cpp"
 $146 = HEAP32[$145>>2]|0; //@line 197 "./src/cpp/unrar/unpack15.cpp"
 $147 = ($144>>>0)>=($146>>>0); //@line 197 "./src/cpp/unrar/unpack15.cpp"
 if ($147) {
  $148 = $2; //@line 198 "./src/cpp/unrar/unpack15.cpp"
  $149 = (($148) + 1)|0; //@line 198 "./src/cpp/unrar/unpack15.cpp"
  $2 = $149; //@line 198 "./src/cpp/unrar/unpack15.cpp"
 }
 $150 = $5; //@line 200 "./src/cpp/unrar/unpack15.cpp"
 $151 = ((($8)) + 68|0); //@line 200 "./src/cpp/unrar/unpack15.cpp"
 $152 = ((($8)) + 84|0); //@line 200 "./src/cpp/unrar/unpack15.cpp"
 $153 = HEAP32[$152>>2]|0; //@line 200 "./src/cpp/unrar/unpack15.cpp"
 $154 = (($153) + 1)|0; //@line 200 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$152>>2] = $154; //@line 200 "./src/cpp/unrar/unpack15.cpp"
 $155 = (($151) + ($153<<2)|0); //@line 200 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$155>>2] = $150; //@line 200 "./src/cpp/unrar/unpack15.cpp"
 $156 = ((($8)) + 84|0); //@line 201 "./src/cpp/unrar/unpack15.cpp"
 $157 = HEAP32[$156>>2]|0; //@line 201 "./src/cpp/unrar/unpack15.cpp"
 $158 = $157 & 3; //@line 201 "./src/cpp/unrar/unpack15.cpp"
 $159 = ((($8)) + 84|0); //@line 201 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$159>>2] = $158; //@line 201 "./src/cpp/unrar/unpack15.cpp"
 $160 = $2; //@line 202 "./src/cpp/unrar/unpack15.cpp"
 $161 = ((($8)) + 88|0); //@line 202 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$161>>2] = $160; //@line 202 "./src/cpp/unrar/unpack15.cpp"
 $162 = $5; //@line 203 "./src/cpp/unrar/unpack15.cpp"
 $163 = ((($8)) + 92|0); //@line 203 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$163>>2] = $162; //@line 203 "./src/cpp/unrar/unpack15.cpp"
 $164 = $5; //@line 204 "./src/cpp/unrar/unpack15.cpp"
 $165 = $2; //@line 204 "./src/cpp/unrar/unpack15.cpp"
 __ZN6Unpack12CopyString15Ejj($8,$164,$165); //@line 204 "./src/cpp/unrar/unpack15.cpp"
 STACKTOP = sp;return; //@line 226 "./src/cpp/unrar/unpack15.cpp"
}
function __ZN6Unpack12CopyString15Ejj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $8 = ((($6)) + 19504|0); //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $9 = $8; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $10 = $9; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $12 = (($9) + 4)|0; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $13 = $12; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $15 = (_i64Subtract(($11|0),($14|0),($7|0),0)|0); //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $16 = tempRet0; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $17 = $8; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $18 = $17; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$18>>2] = $15; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $19 = (($17) + 4)|0; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 $20 = $19; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 HEAP32[$20>>2] = $16; //@line 473 "./src/cpp/unrar/unpack15.cpp"
 while(1) {
  $21 = $5; //@line 474 "./src/cpp/unrar/unpack15.cpp"
  $22 = (($21) + -1)|0; //@line 474 "./src/cpp/unrar/unpack15.cpp"
  $5 = $22; //@line 474 "./src/cpp/unrar/unpack15.cpp"
  $23 = ($21|0)!=(0); //@line 474 "./src/cpp/unrar/unpack15.cpp"
  if (!($23)) {
   break;
  }
  $24 = ((($6)) + 19236|0); //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $25 = HEAP32[$24>>2]|0; //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $26 = ((($6)) + 96|0); //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $27 = HEAP32[$26>>2]|0; //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $28 = $4; //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $29 = (($27) - ($28))|0; //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $30 = ((($6)) + 59088|0); //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $31 = HEAP32[$30>>2]|0; //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $32 = $29 & $31; //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $33 = (($25) + ($32)|0); //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $34 = HEAP8[$33>>0]|0; //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $35 = ((($6)) + 19236|0); //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $36 = HEAP32[$35>>2]|0; //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $37 = ((($6)) + 96|0); //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $38 = HEAP32[$37>>2]|0; //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $39 = (($36) + ($38)|0); //@line 476 "./src/cpp/unrar/unpack15.cpp"
  HEAP8[$39>>0] = $34; //@line 476 "./src/cpp/unrar/unpack15.cpp"
  $40 = ((($6)) + 96|0); //@line 477 "./src/cpp/unrar/unpack15.cpp"
  $41 = HEAP32[$40>>2]|0; //@line 477 "./src/cpp/unrar/unpack15.cpp"
  $42 = (($41) + 1)|0; //@line 477 "./src/cpp/unrar/unpack15.cpp"
  $43 = ((($6)) + 59088|0); //@line 477 "./src/cpp/unrar/unpack15.cpp"
  $44 = HEAP32[$43>>2]|0; //@line 477 "./src/cpp/unrar/unpack15.cpp"
  $45 = $42 & $44; //@line 477 "./src/cpp/unrar/unpack15.cpp"
  $46 = ((($6)) + 96|0); //@line 477 "./src/cpp/unrar/unpack15.cpp"
  HEAP32[$46>>2] = $45; //@line 477 "./src/cpp/unrar/unpack15.cpp"
 }
 STACKTOP = sp;return; //@line 479 "./src/cpp/unrar/unpack15.cpp"
}
function __ZN6Unpack9DecodeNumEjjPjS0_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $11 = $5;
 $12 = $6; //@line 485 "./src/cpp/unrar/unpack15.cpp"
 $13 = $12 & 65520; //@line 485 "./src/cpp/unrar/unpack15.cpp"
 $6 = $13; //@line 485 "./src/cpp/unrar/unpack15.cpp"
 $10 = 0; //@line 485 "./src/cpp/unrar/unpack15.cpp"
 while(1) {
  $14 = $8; //@line 485 "./src/cpp/unrar/unpack15.cpp"
  $15 = $10; //@line 485 "./src/cpp/unrar/unpack15.cpp"
  $16 = (($14) + ($15<<2)|0); //@line 485 "./src/cpp/unrar/unpack15.cpp"
  $17 = HEAP32[$16>>2]|0; //@line 485 "./src/cpp/unrar/unpack15.cpp"
  $18 = $6; //@line 485 "./src/cpp/unrar/unpack15.cpp"
  $19 = ($17>>>0)<=($18>>>0); //@line 485 "./src/cpp/unrar/unpack15.cpp"
  if (!($19)) {
   break;
  }
  $20 = $7; //@line 486 "./src/cpp/unrar/unpack15.cpp"
  $21 = (($20) + 1)|0; //@line 486 "./src/cpp/unrar/unpack15.cpp"
  $7 = $21; //@line 486 "./src/cpp/unrar/unpack15.cpp"
  $22 = $10; //@line 485 "./src/cpp/unrar/unpack15.cpp"
  $23 = (($22) + 1)|0; //@line 485 "./src/cpp/unrar/unpack15.cpp"
  $10 = $23; //@line 485 "./src/cpp/unrar/unpack15.cpp"
 }
 $24 = ((($11)) + 4|0); //@line 487 "./src/cpp/unrar/unpack15.cpp"
 $25 = $7; //@line 487 "./src/cpp/unrar/unpack15.cpp"
 __ZN8BitInput8faddbitsEj($24,$25); //@line 487 "./src/cpp/unrar/unpack15.cpp"
 $26 = $6; //@line 488 "./src/cpp/unrar/unpack15.cpp"
 $27 = $10; //@line 488 "./src/cpp/unrar/unpack15.cpp"
 $28 = ($27|0)!=(0); //@line 488 "./src/cpp/unrar/unpack15.cpp"
 if ($28) {
  $29 = $8; //@line 488 "./src/cpp/unrar/unpack15.cpp"
  $30 = $10; //@line 488 "./src/cpp/unrar/unpack15.cpp"
  $31 = (($30) - 1)|0; //@line 488 "./src/cpp/unrar/unpack15.cpp"
  $32 = (($29) + ($31<<2)|0); //@line 488 "./src/cpp/unrar/unpack15.cpp"
  $33 = HEAP32[$32>>2]|0; //@line 488 "./src/cpp/unrar/unpack15.cpp"
  $35 = $33;
 } else {
  $35 = 0;
 }
 $34 = (($26) - ($35))|0; //@line 488 "./src/cpp/unrar/unpack15.cpp"
 $36 = $7; //@line 488 "./src/cpp/unrar/unpack15.cpp"
 $37 = (16 - ($36))|0; //@line 488 "./src/cpp/unrar/unpack15.cpp"
 $38 = $34 >>> $37; //@line 488 "./src/cpp/unrar/unpack15.cpp"
 $39 = $9; //@line 488 "./src/cpp/unrar/unpack15.cpp"
 $40 = $7; //@line 488 "./src/cpp/unrar/unpack15.cpp"
 $41 = (($39) + ($40<<2)|0); //@line 488 "./src/cpp/unrar/unpack15.cpp"
 $42 = HEAP32[$41>>2]|0; //@line 488 "./src/cpp/unrar/unpack15.cpp"
 $43 = (($38) + ($42))|0; //@line 488 "./src/cpp/unrar/unpack15.cpp"
 STACKTOP = sp;return ($43|0); //@line 488 "./src/cpp/unrar/unpack15.cpp"
}
function __ZN6Unpack8CorrHuffEPtPh($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 7; //@line 462 "./src/cpp/unrar/unpack15.cpp"
 while(1) {
  $8 = $6; //@line 462 "./src/cpp/unrar/unpack15.cpp"
  $9 = ($8|0)>=(0); //@line 462 "./src/cpp/unrar/unpack15.cpp"
  if (!($9)) {
   break;
  }
  $7 = 0; //@line 463 "./src/cpp/unrar/unpack15.cpp"
  while(1) {
   $10 = $7; //@line 463 "./src/cpp/unrar/unpack15.cpp"
   $11 = ($10|0)<(32); //@line 463 "./src/cpp/unrar/unpack15.cpp"
   if (!($11)) {
    break;
   }
   $12 = $4; //@line 464 "./src/cpp/unrar/unpack15.cpp"
   $13 = HEAP16[$12>>1]|0; //@line 464 "./src/cpp/unrar/unpack15.cpp"
   $14 = $13&65535; //@line 464 "./src/cpp/unrar/unpack15.cpp"
   $15 = $14 & -256; //@line 464 "./src/cpp/unrar/unpack15.cpp"
   $16 = $6; //@line 464 "./src/cpp/unrar/unpack15.cpp"
   $17 = $15 | $16; //@line 464 "./src/cpp/unrar/unpack15.cpp"
   $18 = $17&65535; //@line 464 "./src/cpp/unrar/unpack15.cpp"
   $19 = $4; //@line 464 "./src/cpp/unrar/unpack15.cpp"
   HEAP16[$19>>1] = $18; //@line 464 "./src/cpp/unrar/unpack15.cpp"
   $20 = $7; //@line 463 "./src/cpp/unrar/unpack15.cpp"
   $21 = (($20) + 1)|0; //@line 463 "./src/cpp/unrar/unpack15.cpp"
   $7 = $21; //@line 463 "./src/cpp/unrar/unpack15.cpp"
   $22 = $4; //@line 463 "./src/cpp/unrar/unpack15.cpp"
   $23 = ((($22)) + 2|0); //@line 463 "./src/cpp/unrar/unpack15.cpp"
   $4 = $23; //@line 463 "./src/cpp/unrar/unpack15.cpp"
  }
  $24 = $6; //@line 462 "./src/cpp/unrar/unpack15.cpp"
  $25 = (($24) + -1)|0; //@line 462 "./src/cpp/unrar/unpack15.cpp"
  $6 = $25; //@line 462 "./src/cpp/unrar/unpack15.cpp"
 }
 $26 = $5; //@line 465 "./src/cpp/unrar/unpack15.cpp"
 _memset(($26|0),0,256)|0; //@line 465 "./src/cpp/unrar/unpack15.cpp"
 $6 = 6; //@line 466 "./src/cpp/unrar/unpack15.cpp"
 while(1) {
  $27 = $6; //@line 466 "./src/cpp/unrar/unpack15.cpp"
  $28 = ($27|0)>=(0); //@line 466 "./src/cpp/unrar/unpack15.cpp"
  if (!($28)) {
   break;
  }
  $29 = $6; //@line 467 "./src/cpp/unrar/unpack15.cpp"
  $30 = (7 - ($29))|0; //@line 467 "./src/cpp/unrar/unpack15.cpp"
  $31 = $30<<5; //@line 467 "./src/cpp/unrar/unpack15.cpp"
  $32 = $31&255; //@line 467 "./src/cpp/unrar/unpack15.cpp"
  $33 = $5; //@line 467 "./src/cpp/unrar/unpack15.cpp"
  $34 = $6; //@line 467 "./src/cpp/unrar/unpack15.cpp"
  $35 = (($33) + ($34)|0); //@line 467 "./src/cpp/unrar/unpack15.cpp"
  HEAP8[$35>>0] = $32; //@line 467 "./src/cpp/unrar/unpack15.cpp"
  $36 = $6; //@line 466 "./src/cpp/unrar/unpack15.cpp"
  $37 = (($36) + -1)|0; //@line 466 "./src/cpp/unrar/unpack15.cpp"
  $6 = $37; //@line 466 "./src/cpp/unrar/unpack15.cpp"
 }
 STACKTOP = sp;return; //@line 468 "./src/cpp/unrar/unpack15.cpp"
}
function __ZN6Unpack11InitFiltersEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 52|0); //@line 652 "./src/cpp/unrar/unpack50.cpp"
 __ZN5ArrayI12UnpackFilterE9SoftResetEv($3); //@line 652 "./src/cpp/unrar/unpack50.cpp"
 STACKTOP = sp;return; //@line 653 "./src/cpp/unrar/unpack50.cpp"
}
function __ZN6Unpack13UnpInitData20Ei($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 270 "./src/cpp/unrar/unpack20.cpp"
 $6 = ($5|0)!=(0); //@line 270 "./src/cpp/unrar/unpack20.cpp"
 if ($6) {
  STACKTOP = sp;return; //@line 279 "./src/cpp/unrar/unpack20.cpp"
 }
 $7 = ((($4)) + 38720|0); //@line 272 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$7>>2] = 0; //@line 272 "./src/cpp/unrar/unpack20.cpp"
 $8 = ((($4)) + 38724|0); //@line 272 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$8>>2] = 0; //@line 272 "./src/cpp/unrar/unpack20.cpp"
 $9 = ((($4)) + 38712|0); //@line 272 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$9>>2] = 0; //@line 272 "./src/cpp/unrar/unpack20.cpp"
 $10 = ((($4)) + 38716|0); //@line 273 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$10>>2] = 1; //@line 273 "./src/cpp/unrar/unpack20.cpp"
 $11 = ((($4)) + 38728|0); //@line 275 "./src/cpp/unrar/unpack20.cpp"
 _memset(($11|0),0,368)|0; //@line 275 "./src/cpp/unrar/unpack20.cpp"
 $12 = ((($4)) + 37684|0); //@line 276 "./src/cpp/unrar/unpack20.cpp"
 _memset(($12|0),0,1028)|0; //@line 276 "./src/cpp/unrar/unpack20.cpp"
 $13 = ((($4)) + 22404|0); //@line 277 "./src/cpp/unrar/unpack20.cpp"
 _memset(($13|0),0,15280)|0; //@line 277 "./src/cpp/unrar/unpack20.cpp"
 STACKTOP = sp;return; //@line 279 "./src/cpp/unrar/unpack20.cpp"
}
function __ZN6Unpack13UnpInitData30Eb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $1&1;
 $3 = $4;
 $5 = $2;
 $6 = $3; //@line 819 "./src/cpp/unrar/unpack30.cpp"
 $7 = $6&1; //@line 819 "./src/cpp/unrar/unpack30.cpp"
 if (!($7)) {
  $8 = ((($5)) + 58956|0); //@line 821 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$8>>0] = 0; //@line 821 "./src/cpp/unrar/unpack30.cpp"
  $9 = ((($5)) + 58548|0); //@line 822 "./src/cpp/unrar/unpack30.cpp"
  _memset(($9|0),0,404)|0; //@line 822 "./src/cpp/unrar/unpack30.cpp"
  $10 = ((($5)) + 58544|0); //@line 823 "./src/cpp/unrar/unpack30.cpp"
  HEAP32[$10>>2] = 2; //@line 823 "./src/cpp/unrar/unpack30.cpp"
  $11 = ((($5)) + 58952|0); //@line 824 "./src/cpp/unrar/unpack30.cpp"
  HEAP32[$11>>2] = 0; //@line 824 "./src/cpp/unrar/unpack30.cpp"
 }
 $12 = $3; //@line 826 "./src/cpp/unrar/unpack30.cpp"
 $13 = $12&1; //@line 826 "./src/cpp/unrar/unpack30.cpp"
 __ZN6Unpack13InitFilters30Eb($5,$13); //@line 826 "./src/cpp/unrar/unpack30.cpp"
 STACKTOP = sp;return; //@line 827 "./src/cpp/unrar/unpack30.cpp"
}
function __ZN6Unpack13InitFilters30Eb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $6 = $1&1;
 $3 = $6;
 $7 = $2;
 $8 = $3; //@line 832 "./src/cpp/unrar/unpack30.cpp"
 $9 = $8&1; //@line 832 "./src/cpp/unrar/unpack30.cpp"
 if (!($9)) {
  $10 = ((($7)) + 59064|0); //@line 834 "./src/cpp/unrar/unpack30.cpp"
  __ZN5ArrayIiE9SoftResetEv($10); //@line 834 "./src/cpp/unrar/unpack30.cpp"
  $11 = ((($7)) + 59080|0); //@line 835 "./src/cpp/unrar/unpack30.cpp"
  HEAP32[$11>>2] = 0; //@line 835 "./src/cpp/unrar/unpack30.cpp"
  $4 = 0; //@line 837 "./src/cpp/unrar/unpack30.cpp"
  while(1) {
   $12 = $4; //@line 837 "./src/cpp/unrar/unpack30.cpp"
   $13 = ((($7)) + 59032|0); //@line 837 "./src/cpp/unrar/unpack30.cpp"
   $14 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($13)|0); //@line 837 "./src/cpp/unrar/unpack30.cpp"
   $15 = ($12>>>0)<($14>>>0); //@line 837 "./src/cpp/unrar/unpack30.cpp"
   $16 = ((($7)) + 59032|0);
   if (!($15)) {
    break;
   }
   $17 = $4; //@line 838 "./src/cpp/unrar/unpack30.cpp"
   $18 = (__ZNK5ArrayIP14UnpackFilter30EixEj($16,$17)|0); //@line 838 "./src/cpp/unrar/unpack30.cpp"
   $19 = HEAP32[$18>>2]|0; //@line 838 "./src/cpp/unrar/unpack30.cpp"
   $20 = ($19|0)==(0|0); //@line 838 "./src/cpp/unrar/unpack30.cpp"
   if (!($20)) {
    __ZN14UnpackFilter30D2Ev($19); //@line 838 "./src/cpp/unrar/unpack30.cpp"
    __ZdlPv($19); //@line 838 "./src/cpp/unrar/unpack30.cpp"
   }
   $21 = $4; //@line 837 "./src/cpp/unrar/unpack30.cpp"
   $22 = (($21) + 1)|0; //@line 837 "./src/cpp/unrar/unpack30.cpp"
   $4 = $22; //@line 837 "./src/cpp/unrar/unpack30.cpp"
  }
  __ZN5ArrayIP14UnpackFilter30E9SoftResetEv($16); //@line 839 "./src/cpp/unrar/unpack30.cpp"
 }
 $5 = 0; //@line 841 "./src/cpp/unrar/unpack30.cpp"
 while(1) {
  $23 = $5; //@line 841 "./src/cpp/unrar/unpack30.cpp"
  $24 = ((($7)) + 59048|0); //@line 841 "./src/cpp/unrar/unpack30.cpp"
  $25 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($24)|0); //@line 841 "./src/cpp/unrar/unpack30.cpp"
  $26 = ($23>>>0)<($25>>>0); //@line 841 "./src/cpp/unrar/unpack30.cpp"
  $27 = ((($7)) + 59048|0);
  if (!($26)) {
   break;
  }
  $28 = $5; //@line 842 "./src/cpp/unrar/unpack30.cpp"
  $29 = (__ZNK5ArrayIP14UnpackFilter30EixEj($27,$28)|0); //@line 842 "./src/cpp/unrar/unpack30.cpp"
  $30 = HEAP32[$29>>2]|0; //@line 842 "./src/cpp/unrar/unpack30.cpp"
  $31 = ($30|0)==(0|0); //@line 842 "./src/cpp/unrar/unpack30.cpp"
  if (!($31)) {
   __ZN14UnpackFilter30D2Ev($30); //@line 842 "./src/cpp/unrar/unpack30.cpp"
   __ZdlPv($30); //@line 842 "./src/cpp/unrar/unpack30.cpp"
  }
  $32 = $5; //@line 841 "./src/cpp/unrar/unpack30.cpp"
  $33 = (($32) + 1)|0; //@line 841 "./src/cpp/unrar/unpack30.cpp"
  $5 = $33; //@line 841 "./src/cpp/unrar/unpack30.cpp"
 }
 __ZN5ArrayIP14UnpackFilter30E9SoftResetEv($27); //@line 843 "./src/cpp/unrar/unpack30.cpp"
 STACKTOP = sp;return; //@line 844 "./src/cpp/unrar/unpack30.cpp"
}
function __ZN5ArrayIiE9SoftResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 138 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 138 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 139 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIP14UnpackFilter30E4SizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 86 "./src/cpp/unrar/array.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 86 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($4|0); //@line 86 "./src/cpp/unrar/array.hpp"
}
function __ZNK5ArrayIP14UnpackFilter30EixEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 74 "./src/cpp/unrar/array.hpp"
 $6 = $3; //@line 74 "./src/cpp/unrar/array.hpp"
 $7 = (($5) + ($6<<2)|0); //@line 74 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($7|0); //@line 74 "./src/cpp/unrar/array.hpp"
}
function __ZN14UnpackFilter30D2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0); //@line 146 "./src/cpp/unrar/unpack.hpp"
 __ZN18VM_PreparedProgramD2Ev($3); //@line 146 "./src/cpp/unrar/unpack.hpp"
 STACKTOP = sp;return; //@line 146 "./src/cpp/unrar/unpack.hpp"
}
function __ZN5ArrayIP14UnpackFilter30E9SoftResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 138 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 138 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 139 "./src/cpp/unrar/array.hpp"
}
function __ZN18VM_PreparedProgramD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 40|0); //@line 56 "./src/cpp/unrar/rarvm.hpp"
 __ZN5ArrayIhED2Ev($3); //@line 56 "./src/cpp/unrar/rarvm.hpp"
 $4 = ((($2)) + 24|0); //@line 56 "./src/cpp/unrar/rarvm.hpp"
 __ZN5ArrayIhED2Ev($4); //@line 56 "./src/cpp/unrar/rarvm.hpp"
 __ZN5ArrayI18VM_PreparedCommandED2Ev($2); //@line 56 "./src/cpp/unrar/rarvm.hpp"
 STACKTOP = sp;return; //@line 56 "./src/cpp/unrar/rarvm.hpp"
}
function __ZN5ArrayI18VM_PreparedCommandED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 67 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 67 "./src/cpp/unrar/array.hpp"
 if (!($4)) {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
 $5 = HEAP32[$2>>2]|0; //@line 68 "./src/cpp/unrar/array.hpp"
 __THREW__ = 0;
 invoke_vi(70,($5|0)); //@line 68 "./src/cpp/unrar/array.hpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_3(0|0)|0;
  $9 = tempRet0;
  ___clang_call_terminate($8); //@line 68 "./src/cpp/unrar/array.hpp"
  // unreachable; //@line 68 "./src/cpp/unrar/array.hpp"
 } else {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
}
function __ZN5ArrayI12UnpackFilterE9SoftResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 138 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 138 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 139 "./src/cpp/unrar/array.hpp"
}
function __ZN6Unpack12CopyString20Ejj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5; //@line 5 "./src/cpp/unrar/unpack20.cpp"
 $8 = ((($6)) + 68|0); //@line 5 "./src/cpp/unrar/unpack20.cpp"
 $9 = ((($6)) + 84|0); //@line 5 "./src/cpp/unrar/unpack20.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 5 "./src/cpp/unrar/unpack20.cpp"
 $11 = (($10) + 1)|0; //@line 5 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$9>>2] = $11; //@line 5 "./src/cpp/unrar/unpack20.cpp"
 $12 = $10 & 3; //@line 5 "./src/cpp/unrar/unpack20.cpp"
 $13 = (($8) + ($12<<2)|0); //@line 5 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$13>>2] = $7; //@line 5 "./src/cpp/unrar/unpack20.cpp"
 $14 = ((($6)) + 92|0); //@line 5 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$14>>2] = $7; //@line 5 "./src/cpp/unrar/unpack20.cpp"
 $15 = $4; //@line 6 "./src/cpp/unrar/unpack20.cpp"
 $16 = ((($6)) + 88|0); //@line 6 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$16>>2] = $15; //@line 6 "./src/cpp/unrar/unpack20.cpp"
 $17 = $4; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $18 = ((($6)) + 19504|0); //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $19 = $18; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $20 = $19; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $21 = HEAP32[$20>>2]|0; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $22 = (($19) + 4)|0; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $23 = $22; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $24 = HEAP32[$23>>2]|0; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $25 = (_i64Subtract(($21|0),($24|0),($17|0),0)|0); //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $26 = tempRet0; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $27 = $18; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $28 = $27; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$28>>2] = $25; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $29 = (($27) + 4)|0; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $30 = $29; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$30>>2] = $26; //@line 7 "./src/cpp/unrar/unpack20.cpp"
 $31 = $4; //@line 8 "./src/cpp/unrar/unpack20.cpp"
 $32 = $5; //@line 8 "./src/cpp/unrar/unpack20.cpp"
 __ZN6Unpack10CopyStringEjj($6,$31,$32); //@line 8 "./src/cpp/unrar/unpack20.cpp"
 STACKTOP = sp;return; //@line 9 "./src/cpp/unrar/unpack20.cpp"
}
function __ZN6Unpack10CopyStringEjj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3;
 $10 = ((($9)) + 96|0); //@line 15 "./src/cpp/unrar/unpackinline.cpp"
 $11 = HEAP32[$10>>2]|0; //@line 15 "./src/cpp/unrar/unpackinline.cpp"
 $12 = $5; //@line 15 "./src/cpp/unrar/unpackinline.cpp"
 $13 = (($11) - ($12))|0; //@line 15 "./src/cpp/unrar/unpackinline.cpp"
 $6 = $13; //@line 15 "./src/cpp/unrar/unpackinline.cpp"
 $14 = $6; //@line 16 "./src/cpp/unrar/unpackinline.cpp"
 $15 = ((($9)) + 59084|0); //@line 16 "./src/cpp/unrar/unpackinline.cpp"
 $16 = HEAP32[$15>>2]|0; //@line 16 "./src/cpp/unrar/unpackinline.cpp"
 $17 = (($16) - 4097)|0; //@line 16 "./src/cpp/unrar/unpackinline.cpp"
 $18 = ($14>>>0)<($17>>>0); //@line 16 "./src/cpp/unrar/unpackinline.cpp"
 if ($18) {
  $19 = ((($9)) + 96|0); //@line 16 "./src/cpp/unrar/unpackinline.cpp"
  $20 = HEAP32[$19>>2]|0; //@line 16 "./src/cpp/unrar/unpackinline.cpp"
  $21 = ((($9)) + 59084|0); //@line 16 "./src/cpp/unrar/unpackinline.cpp"
  $22 = HEAP32[$21>>2]|0; //@line 16 "./src/cpp/unrar/unpackinline.cpp"
  $23 = (($22) - 4097)|0; //@line 16 "./src/cpp/unrar/unpackinline.cpp"
  $24 = ($20>>>0)<($23>>>0); //@line 16 "./src/cpp/unrar/unpackinline.cpp"
  if ($24) {
   $25 = ((($9)) + 19236|0); //@line 21 "./src/cpp/unrar/unpackinline.cpp"
   $26 = HEAP32[$25>>2]|0; //@line 21 "./src/cpp/unrar/unpackinline.cpp"
   $27 = $6; //@line 21 "./src/cpp/unrar/unpackinline.cpp"
   $28 = (($26) + ($27)|0); //@line 21 "./src/cpp/unrar/unpackinline.cpp"
   $7 = $28; //@line 21 "./src/cpp/unrar/unpackinline.cpp"
   $29 = ((($9)) + 19236|0); //@line 22 "./src/cpp/unrar/unpackinline.cpp"
   $30 = HEAP32[$29>>2]|0; //@line 22 "./src/cpp/unrar/unpackinline.cpp"
   $31 = ((($9)) + 96|0); //@line 22 "./src/cpp/unrar/unpackinline.cpp"
   $32 = HEAP32[$31>>2]|0; //@line 22 "./src/cpp/unrar/unpackinline.cpp"
   $33 = (($30) + ($32)|0); //@line 22 "./src/cpp/unrar/unpackinline.cpp"
   $8 = $33; //@line 22 "./src/cpp/unrar/unpackinline.cpp"
   $34 = $4; //@line 23 "./src/cpp/unrar/unpackinline.cpp"
   $35 = ((($9)) + 96|0); //@line 23 "./src/cpp/unrar/unpackinline.cpp"
   $36 = HEAP32[$35>>2]|0; //@line 23 "./src/cpp/unrar/unpackinline.cpp"
   $37 = (($36) + ($34))|0; //@line 23 "./src/cpp/unrar/unpackinline.cpp"
   HEAP32[$35>>2] = $37; //@line 23 "./src/cpp/unrar/unpackinline.cpp"
   while(1) {
    $38 = $4; //@line 28 "./src/cpp/unrar/unpackinline.cpp"
    $39 = ($38>>>0)>=(8); //@line 28 "./src/cpp/unrar/unpackinline.cpp"
    if (!($39)) {
     break;
    }
    $40 = $7; //@line 30 "./src/cpp/unrar/unpackinline.cpp"
    $41 = HEAP8[$40>>0]|0; //@line 30 "./src/cpp/unrar/unpackinline.cpp"
    $42 = $8; //@line 30 "./src/cpp/unrar/unpackinline.cpp"
    HEAP8[$42>>0] = $41; //@line 30 "./src/cpp/unrar/unpackinline.cpp"
    $43 = $7; //@line 31 "./src/cpp/unrar/unpackinline.cpp"
    $44 = ((($43)) + 1|0); //@line 31 "./src/cpp/unrar/unpackinline.cpp"
    $45 = HEAP8[$44>>0]|0; //@line 31 "./src/cpp/unrar/unpackinline.cpp"
    $46 = $8; //@line 31 "./src/cpp/unrar/unpackinline.cpp"
    $47 = ((($46)) + 1|0); //@line 31 "./src/cpp/unrar/unpackinline.cpp"
    HEAP8[$47>>0] = $45; //@line 31 "./src/cpp/unrar/unpackinline.cpp"
    $48 = $7; //@line 32 "./src/cpp/unrar/unpackinline.cpp"
    $49 = ((($48)) + 2|0); //@line 32 "./src/cpp/unrar/unpackinline.cpp"
    $50 = HEAP8[$49>>0]|0; //@line 32 "./src/cpp/unrar/unpackinline.cpp"
    $51 = $8; //@line 32 "./src/cpp/unrar/unpackinline.cpp"
    $52 = ((($51)) + 2|0); //@line 32 "./src/cpp/unrar/unpackinline.cpp"
    HEAP8[$52>>0] = $50; //@line 32 "./src/cpp/unrar/unpackinline.cpp"
    $53 = $7; //@line 33 "./src/cpp/unrar/unpackinline.cpp"
    $54 = ((($53)) + 3|0); //@line 33 "./src/cpp/unrar/unpackinline.cpp"
    $55 = HEAP8[$54>>0]|0; //@line 33 "./src/cpp/unrar/unpackinline.cpp"
    $56 = $8; //@line 33 "./src/cpp/unrar/unpackinline.cpp"
    $57 = ((($56)) + 3|0); //@line 33 "./src/cpp/unrar/unpackinline.cpp"
    HEAP8[$57>>0] = $55; //@line 33 "./src/cpp/unrar/unpackinline.cpp"
    $58 = $7; //@line 34 "./src/cpp/unrar/unpackinline.cpp"
    $59 = ((($58)) + 4|0); //@line 34 "./src/cpp/unrar/unpackinline.cpp"
    $60 = HEAP8[$59>>0]|0; //@line 34 "./src/cpp/unrar/unpackinline.cpp"
    $61 = $8; //@line 34 "./src/cpp/unrar/unpackinline.cpp"
    $62 = ((($61)) + 4|0); //@line 34 "./src/cpp/unrar/unpackinline.cpp"
    HEAP8[$62>>0] = $60; //@line 34 "./src/cpp/unrar/unpackinline.cpp"
    $63 = $7; //@line 35 "./src/cpp/unrar/unpackinline.cpp"
    $64 = ((($63)) + 5|0); //@line 35 "./src/cpp/unrar/unpackinline.cpp"
    $65 = HEAP8[$64>>0]|0; //@line 35 "./src/cpp/unrar/unpackinline.cpp"
    $66 = $8; //@line 35 "./src/cpp/unrar/unpackinline.cpp"
    $67 = ((($66)) + 5|0); //@line 35 "./src/cpp/unrar/unpackinline.cpp"
    HEAP8[$67>>0] = $65; //@line 35 "./src/cpp/unrar/unpackinline.cpp"
    $68 = $7; //@line 36 "./src/cpp/unrar/unpackinline.cpp"
    $69 = ((($68)) + 6|0); //@line 36 "./src/cpp/unrar/unpackinline.cpp"
    $70 = HEAP8[$69>>0]|0; //@line 36 "./src/cpp/unrar/unpackinline.cpp"
    $71 = $8; //@line 36 "./src/cpp/unrar/unpackinline.cpp"
    $72 = ((($71)) + 6|0); //@line 36 "./src/cpp/unrar/unpackinline.cpp"
    HEAP8[$72>>0] = $70; //@line 36 "./src/cpp/unrar/unpackinline.cpp"
    $73 = $7; //@line 37 "./src/cpp/unrar/unpackinline.cpp"
    $74 = ((($73)) + 7|0); //@line 37 "./src/cpp/unrar/unpackinline.cpp"
    $75 = HEAP8[$74>>0]|0; //@line 37 "./src/cpp/unrar/unpackinline.cpp"
    $76 = $8; //@line 37 "./src/cpp/unrar/unpackinline.cpp"
    $77 = ((($76)) + 7|0); //@line 37 "./src/cpp/unrar/unpackinline.cpp"
    HEAP8[$77>>0] = $75; //@line 37 "./src/cpp/unrar/unpackinline.cpp"
    $78 = $7; //@line 39 "./src/cpp/unrar/unpackinline.cpp"
    $79 = ((($78)) + 8|0); //@line 39 "./src/cpp/unrar/unpackinline.cpp"
    $7 = $79; //@line 39 "./src/cpp/unrar/unpackinline.cpp"
    $80 = $8; //@line 40 "./src/cpp/unrar/unpackinline.cpp"
    $81 = ((($80)) + 8|0); //@line 40 "./src/cpp/unrar/unpackinline.cpp"
    $8 = $81; //@line 40 "./src/cpp/unrar/unpackinline.cpp"
    $82 = $4; //@line 41 "./src/cpp/unrar/unpackinline.cpp"
    $83 = (($82) - 8)|0; //@line 41 "./src/cpp/unrar/unpackinline.cpp"
    $4 = $83; //@line 41 "./src/cpp/unrar/unpackinline.cpp"
   }
   $84 = $4; //@line 63 "./src/cpp/unrar/unpackinline.cpp"
   $85 = ($84>>>0)>(0); //@line 63 "./src/cpp/unrar/unpackinline.cpp"
   if (!($85)) {
    STACKTOP = sp;return; //@line 79 "./src/cpp/unrar/unpackinline.cpp"
   }
   $86 = $7; //@line 63 "./src/cpp/unrar/unpackinline.cpp"
   $87 = HEAP8[$86>>0]|0; //@line 63 "./src/cpp/unrar/unpackinline.cpp"
   $88 = $8; //@line 63 "./src/cpp/unrar/unpackinline.cpp"
   HEAP8[$88>>0] = $87; //@line 63 "./src/cpp/unrar/unpackinline.cpp"
   $89 = $4; //@line 64 "./src/cpp/unrar/unpackinline.cpp"
   $90 = ($89>>>0)>(1); //@line 64 "./src/cpp/unrar/unpackinline.cpp"
   if (!($90)) {
    STACKTOP = sp;return; //@line 79 "./src/cpp/unrar/unpackinline.cpp"
   }
   $91 = $7; //@line 64 "./src/cpp/unrar/unpackinline.cpp"
   $92 = ((($91)) + 1|0); //@line 64 "./src/cpp/unrar/unpackinline.cpp"
   $93 = HEAP8[$92>>0]|0; //@line 64 "./src/cpp/unrar/unpackinline.cpp"
   $94 = $8; //@line 64 "./src/cpp/unrar/unpackinline.cpp"
   $95 = ((($94)) + 1|0); //@line 64 "./src/cpp/unrar/unpackinline.cpp"
   HEAP8[$95>>0] = $93; //@line 64 "./src/cpp/unrar/unpackinline.cpp"
   $96 = $4; //@line 65 "./src/cpp/unrar/unpackinline.cpp"
   $97 = ($96>>>0)>(2); //@line 65 "./src/cpp/unrar/unpackinline.cpp"
   if (!($97)) {
    STACKTOP = sp;return; //@line 79 "./src/cpp/unrar/unpackinline.cpp"
   }
   $98 = $7; //@line 65 "./src/cpp/unrar/unpackinline.cpp"
   $99 = ((($98)) + 2|0); //@line 65 "./src/cpp/unrar/unpackinline.cpp"
   $100 = HEAP8[$99>>0]|0; //@line 65 "./src/cpp/unrar/unpackinline.cpp"
   $101 = $8; //@line 65 "./src/cpp/unrar/unpackinline.cpp"
   $102 = ((($101)) + 2|0); //@line 65 "./src/cpp/unrar/unpackinline.cpp"
   HEAP8[$102>>0] = $100; //@line 65 "./src/cpp/unrar/unpackinline.cpp"
   $103 = $4; //@line 66 "./src/cpp/unrar/unpackinline.cpp"
   $104 = ($103>>>0)>(3); //@line 66 "./src/cpp/unrar/unpackinline.cpp"
   if (!($104)) {
    STACKTOP = sp;return; //@line 79 "./src/cpp/unrar/unpackinline.cpp"
   }
   $105 = $7; //@line 66 "./src/cpp/unrar/unpackinline.cpp"
   $106 = ((($105)) + 3|0); //@line 66 "./src/cpp/unrar/unpackinline.cpp"
   $107 = HEAP8[$106>>0]|0; //@line 66 "./src/cpp/unrar/unpackinline.cpp"
   $108 = $8; //@line 66 "./src/cpp/unrar/unpackinline.cpp"
   $109 = ((($108)) + 3|0); //@line 66 "./src/cpp/unrar/unpackinline.cpp"
   HEAP8[$109>>0] = $107; //@line 66 "./src/cpp/unrar/unpackinline.cpp"
   $110 = $4; //@line 67 "./src/cpp/unrar/unpackinline.cpp"
   $111 = ($110>>>0)>(4); //@line 67 "./src/cpp/unrar/unpackinline.cpp"
   if (!($111)) {
    STACKTOP = sp;return; //@line 79 "./src/cpp/unrar/unpackinline.cpp"
   }
   $112 = $7; //@line 67 "./src/cpp/unrar/unpackinline.cpp"
   $113 = ((($112)) + 4|0); //@line 67 "./src/cpp/unrar/unpackinline.cpp"
   $114 = HEAP8[$113>>0]|0; //@line 67 "./src/cpp/unrar/unpackinline.cpp"
   $115 = $8; //@line 67 "./src/cpp/unrar/unpackinline.cpp"
   $116 = ((($115)) + 4|0); //@line 67 "./src/cpp/unrar/unpackinline.cpp"
   HEAP8[$116>>0] = $114; //@line 67 "./src/cpp/unrar/unpackinline.cpp"
   $117 = $4; //@line 68 "./src/cpp/unrar/unpackinline.cpp"
   $118 = ($117>>>0)>(5); //@line 68 "./src/cpp/unrar/unpackinline.cpp"
   if (!($118)) {
    STACKTOP = sp;return; //@line 79 "./src/cpp/unrar/unpackinline.cpp"
   }
   $119 = $7; //@line 68 "./src/cpp/unrar/unpackinline.cpp"
   $120 = ((($119)) + 5|0); //@line 68 "./src/cpp/unrar/unpackinline.cpp"
   $121 = HEAP8[$120>>0]|0; //@line 68 "./src/cpp/unrar/unpackinline.cpp"
   $122 = $8; //@line 68 "./src/cpp/unrar/unpackinline.cpp"
   $123 = ((($122)) + 5|0); //@line 68 "./src/cpp/unrar/unpackinline.cpp"
   HEAP8[$123>>0] = $121; //@line 68 "./src/cpp/unrar/unpackinline.cpp"
   $124 = $4; //@line 69 "./src/cpp/unrar/unpackinline.cpp"
   $125 = ($124>>>0)>(6); //@line 69 "./src/cpp/unrar/unpackinline.cpp"
   if (!($125)) {
    STACKTOP = sp;return; //@line 79 "./src/cpp/unrar/unpackinline.cpp"
   }
   $126 = $7; //@line 69 "./src/cpp/unrar/unpackinline.cpp"
   $127 = ((($126)) + 6|0); //@line 69 "./src/cpp/unrar/unpackinline.cpp"
   $128 = HEAP8[$127>>0]|0; //@line 69 "./src/cpp/unrar/unpackinline.cpp"
   $129 = $8; //@line 69 "./src/cpp/unrar/unpackinline.cpp"
   $130 = ((($129)) + 6|0); //@line 69 "./src/cpp/unrar/unpackinline.cpp"
   HEAP8[$130>>0] = $128; //@line 69 "./src/cpp/unrar/unpackinline.cpp"
   STACKTOP = sp;return; //@line 79 "./src/cpp/unrar/unpackinline.cpp"
  }
 }
 while(1) {
  $131 = $4; //@line 72 "./src/cpp/unrar/unpackinline.cpp"
  $132 = (($131) + -1)|0; //@line 72 "./src/cpp/unrar/unpackinline.cpp"
  $4 = $132; //@line 72 "./src/cpp/unrar/unpackinline.cpp"
  $133 = ($131>>>0)>(0); //@line 72 "./src/cpp/unrar/unpackinline.cpp"
  if (!($133)) {
   break;
  }
  $134 = ((($9)) + 19236|0); //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $135 = HEAP32[$134>>2]|0; //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $136 = $6; //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $137 = (($136) + 1)|0; //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $6 = $137; //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $138 = ((($9)) + 59088|0); //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $139 = HEAP32[$138>>2]|0; //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $140 = $136 & $139; //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $141 = (($135) + ($140)|0); //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $142 = HEAP8[$141>>0]|0; //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $143 = ((($9)) + 19236|0); //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $144 = HEAP32[$143>>2]|0; //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $145 = ((($9)) + 96|0); //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $146 = HEAP32[$145>>2]|0; //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $147 = (($144) + ($146)|0); //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  HEAP8[$147>>0] = $142; //@line 74 "./src/cpp/unrar/unpackinline.cpp"
  $148 = ((($9)) + 96|0); //@line 77 "./src/cpp/unrar/unpackinline.cpp"
  $149 = HEAP32[$148>>2]|0; //@line 77 "./src/cpp/unrar/unpackinline.cpp"
  $150 = (($149) + 1)|0; //@line 77 "./src/cpp/unrar/unpackinline.cpp"
  $151 = ((($9)) + 59088|0); //@line 77 "./src/cpp/unrar/unpackinline.cpp"
  $152 = HEAP32[$151>>2]|0; //@line 77 "./src/cpp/unrar/unpackinline.cpp"
  $153 = $150 & $152; //@line 77 "./src/cpp/unrar/unpackinline.cpp"
  $154 = ((($9)) + 96|0); //@line 77 "./src/cpp/unrar/unpackinline.cpp"
  HEAP32[$154>>2] = $153; //@line 77 "./src/cpp/unrar/unpackinline.cpp"
 }
 STACKTOP = sp;return; //@line 79 "./src/cpp/unrar/unpackinline.cpp"
}
function __ZN6Unpack8Unpack20Eb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = $0;
 $14 = $1&1;
 $3 = $14;
 $15 = $2;
 $16 = ((($15)) + 19512|0); //@line 22 "./src/cpp/unrar/unpack20.cpp"
 $17 = HEAP8[$16>>0]|0; //@line 22 "./src/cpp/unrar/unpack20.cpp"
 $18 = $17&1; //@line 22 "./src/cpp/unrar/unpack20.cpp"
 if ($18) {
  $19 = ((($15)) + 100|0); //@line 23 "./src/cpp/unrar/unpack20.cpp"
  $20 = HEAP32[$19>>2]|0; //@line 23 "./src/cpp/unrar/unpack20.cpp"
  $21 = ((($15)) + 96|0); //@line 23 "./src/cpp/unrar/unpack20.cpp"
  HEAP32[$21>>2] = $20; //@line 23 "./src/cpp/unrar/unpack20.cpp"
 } else {
  $22 = $3; //@line 26 "./src/cpp/unrar/unpack20.cpp"
  $23 = $22&1; //@line 26 "./src/cpp/unrar/unpack20.cpp"
  __ZN6Unpack11UnpInitDataEb($15,$23); //@line 26 "./src/cpp/unrar/unpack20.cpp"
  $24 = (__ZN6Unpack10UnpReadBufEv($15)|0); //@line 27 "./src/cpp/unrar/unpack20.cpp"
  if (!($24)) {
   STACKTOP = sp;return; //@line 147 "./src/cpp/unrar/unpack20.cpp"
  }
  $25 = $3; //@line 29 "./src/cpp/unrar/unpack20.cpp"
  $26 = $25&1; //@line 29 "./src/cpp/unrar/unpack20.cpp"
  if (!($26)) {
   $27 = (__ZN6Unpack12ReadTables20Ev($15)|0); //@line 30 "./src/cpp/unrar/unpack20.cpp"
   if (!($27)) {
    STACKTOP = sp;return; //@line 147 "./src/cpp/unrar/unpack20.cpp"
   }
  }
  $28 = ((($15)) + 19504|0); //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $29 = $28; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $30 = $29; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $31 = HEAP32[$30>>2]|0; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $32 = (($29) + 4)|0; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $33 = $32; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $35 = (_i64Add(($31|0),($34|0),-1,-1)|0); //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $36 = tempRet0; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $37 = $28; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $38 = $37; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  HEAP32[$38>>2] = $35; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $39 = (($37) + 4)|0; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  $40 = $39; //@line 32 "./src/cpp/unrar/unpack20.cpp"
  HEAP32[$40>>2] = $36; //@line 32 "./src/cpp/unrar/unpack20.cpp"
 }
 while(1) {
  $41 = ((($15)) + 19504|0); //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $42 = $41; //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $43 = $42; //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $44 = HEAP32[$43>>2]|0; //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $45 = (($42) + 4)|0; //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $46 = $45; //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $47 = HEAP32[$46>>2]|0; //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $48 = ($47|0)>(0); //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $49 = ($44>>>0)>=(0); //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $50 = ($47|0)==(0); //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $51 = $50 & $49; //@line 35 "./src/cpp/unrar/unpack20.cpp"
  $52 = $48 | $51; //@line 35 "./src/cpp/unrar/unpack20.cpp"
  if (!($52)) {
   break;
  }
  $53 = ((($15)) + 59088|0); //@line 37 "./src/cpp/unrar/unpack20.cpp"
  $54 = HEAP32[$53>>2]|0; //@line 37 "./src/cpp/unrar/unpack20.cpp"
  $55 = ((($15)) + 96|0); //@line 37 "./src/cpp/unrar/unpack20.cpp"
  $56 = HEAP32[$55>>2]|0; //@line 37 "./src/cpp/unrar/unpack20.cpp"
  $57 = $56 & $54; //@line 37 "./src/cpp/unrar/unpack20.cpp"
  HEAP32[$55>>2] = $57; //@line 37 "./src/cpp/unrar/unpack20.cpp"
  $58 = ((($15)) + 4|0); //@line 39 "./src/cpp/unrar/unpack20.cpp"
  $59 = HEAP32[$58>>2]|0; //@line 39 "./src/cpp/unrar/unpack20.cpp"
  $60 = ((($15)) + 104|0); //@line 39 "./src/cpp/unrar/unpack20.cpp"
  $61 = HEAP32[$60>>2]|0; //@line 39 "./src/cpp/unrar/unpack20.cpp"
  $62 = (($61) - 30)|0; //@line 39 "./src/cpp/unrar/unpack20.cpp"
  $63 = ($59|0)>($62|0); //@line 39 "./src/cpp/unrar/unpack20.cpp"
  if ($63) {
   $64 = (__ZN6Unpack10UnpReadBufEv($15)|0); //@line 40 "./src/cpp/unrar/unpack20.cpp"
   if (!($64)) {
    break;
   }
  }
  $65 = ((($15)) + 100|0); //@line 42 "./src/cpp/unrar/unpack20.cpp"
  $66 = HEAP32[$65>>2]|0; //@line 42 "./src/cpp/unrar/unpack20.cpp"
  $67 = ((($15)) + 96|0); //@line 42 "./src/cpp/unrar/unpack20.cpp"
  $68 = HEAP32[$67>>2]|0; //@line 42 "./src/cpp/unrar/unpack20.cpp"
  $69 = (($66) - ($68))|0; //@line 42 "./src/cpp/unrar/unpack20.cpp"
  $70 = ((($15)) + 59088|0); //@line 42 "./src/cpp/unrar/unpack20.cpp"
  $71 = HEAP32[$70>>2]|0; //@line 42 "./src/cpp/unrar/unpack20.cpp"
  $72 = $69 & $71; //@line 42 "./src/cpp/unrar/unpack20.cpp"
  $73 = ($72>>>0)<(270); //@line 42 "./src/cpp/unrar/unpack20.cpp"
  if ($73) {
   $74 = ((($15)) + 100|0); //@line 42 "./src/cpp/unrar/unpack20.cpp"
   $75 = HEAP32[$74>>2]|0; //@line 42 "./src/cpp/unrar/unpack20.cpp"
   $76 = ((($15)) + 96|0); //@line 42 "./src/cpp/unrar/unpack20.cpp"
   $77 = HEAP32[$76>>2]|0; //@line 42 "./src/cpp/unrar/unpack20.cpp"
   $78 = ($75|0)!=($77|0); //@line 42 "./src/cpp/unrar/unpack20.cpp"
   if ($78) {
    __ZN6Unpack13UnpWriteBuf20Ev($15); //@line 44 "./src/cpp/unrar/unpack20.cpp"
    $79 = ((($15)) + 19512|0); //@line 45 "./src/cpp/unrar/unpack20.cpp"
    $80 = HEAP8[$79>>0]|0; //@line 45 "./src/cpp/unrar/unpack20.cpp"
    $81 = $80&1; //@line 45 "./src/cpp/unrar/unpack20.cpp"
    if ($81) {
     label = 47;
     break;
    }
   }
  }
  $82 = ((($15)) + 38712|0); //@line 48 "./src/cpp/unrar/unpack20.cpp"
  $83 = HEAP32[$82>>2]|0; //@line 48 "./src/cpp/unrar/unpack20.cpp"
  $84 = ($83|0)!=(0); //@line 48 "./src/cpp/unrar/unpack20.cpp"
  $85 = ((($15)) + 4|0);
  if ($84) {
   $86 = ((($15)) + 22404|0); //@line 50 "./src/cpp/unrar/unpack20.cpp"
   $87 = ((($15)) + 38720|0); //@line 50 "./src/cpp/unrar/unpack20.cpp"
   $88 = HEAP32[$87>>2]|0; //@line 50 "./src/cpp/unrar/unpack20.cpp"
   $89 = (($86) + (($88*3820)|0)|0); //@line 50 "./src/cpp/unrar/unpack20.cpp"
   $90 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($15,$85,$89)|0); //@line 50 "./src/cpp/unrar/unpack20.cpp"
   $5 = $90; //@line 50 "./src/cpp/unrar/unpack20.cpp"
   $91 = $5; //@line 52 "./src/cpp/unrar/unpack20.cpp"
   $92 = ($91|0)==(256); //@line 52 "./src/cpp/unrar/unpack20.cpp"
   if ($92) {
    $93 = (__ZN6Unpack12ReadTables20Ev($15)|0); //@line 54 "./src/cpp/unrar/unpack20.cpp"
    if ($93) {
     continue;
    } else {
     break;
    }
   }
   $94 = $5; //@line 58 "./src/cpp/unrar/unpack20.cpp"
   $95 = (__ZN6Unpack11DecodeAudioEi($15,$94)|0); //@line 58 "./src/cpp/unrar/unpack20.cpp"
   $96 = ((($15)) + 19236|0); //@line 58 "./src/cpp/unrar/unpack20.cpp"
   $97 = HEAP32[$96>>2]|0; //@line 58 "./src/cpp/unrar/unpack20.cpp"
   $98 = ((($15)) + 96|0); //@line 58 "./src/cpp/unrar/unpack20.cpp"
   $99 = HEAP32[$98>>2]|0; //@line 58 "./src/cpp/unrar/unpack20.cpp"
   $100 = (($99) + 1)|0; //@line 58 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$98>>2] = $100; //@line 58 "./src/cpp/unrar/unpack20.cpp"
   $101 = (($97) + ($99)|0); //@line 58 "./src/cpp/unrar/unpack20.cpp"
   HEAP8[$101>>0] = $95; //@line 58 "./src/cpp/unrar/unpack20.cpp"
   $102 = ((($15)) + 38720|0); //@line 59 "./src/cpp/unrar/unpack20.cpp"
   $103 = HEAP32[$102>>2]|0; //@line 59 "./src/cpp/unrar/unpack20.cpp"
   $104 = (($103) + 1)|0; //@line 59 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$102>>2] = $104; //@line 59 "./src/cpp/unrar/unpack20.cpp"
   $105 = ((($15)) + 38716|0); //@line 59 "./src/cpp/unrar/unpack20.cpp"
   $106 = HEAP32[$105>>2]|0; //@line 59 "./src/cpp/unrar/unpack20.cpp"
   $107 = ($104|0)==($106|0); //@line 59 "./src/cpp/unrar/unpack20.cpp"
   if ($107) {
    $108 = ((($15)) + 38720|0); //@line 60 "./src/cpp/unrar/unpack20.cpp"
    HEAP32[$108>>2] = 0; //@line 60 "./src/cpp/unrar/unpack20.cpp"
   }
   $109 = ((($15)) + 19504|0); //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $110 = $109; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $111 = $110; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $112 = HEAP32[$111>>2]|0; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $113 = (($110) + 4)|0; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $114 = $113; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $115 = HEAP32[$114>>2]|0; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $116 = (_i64Add(($112|0),($115|0),-1,-1)|0); //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $117 = tempRet0; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $118 = $109; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $119 = $118; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$119>>2] = $116; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $120 = (($118) + 4)|0; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   $121 = $120; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$121>>2] = $117; //@line 61 "./src/cpp/unrar/unpack20.cpp"
   continue;
  }
  $122 = ((($15)) + 132|0); //@line 65 "./src/cpp/unrar/unpack20.cpp"
  $123 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($15,$85,$122)|0); //@line 65 "./src/cpp/unrar/unpack20.cpp"
  $6 = $123; //@line 65 "./src/cpp/unrar/unpack20.cpp"
  $124 = $6; //@line 66 "./src/cpp/unrar/unpack20.cpp"
  $125 = ($124|0)<(256); //@line 66 "./src/cpp/unrar/unpack20.cpp"
  $126 = $6;
  if ($125) {
   $127 = $126&255; //@line 68 "./src/cpp/unrar/unpack20.cpp"
   $128 = ((($15)) + 19236|0); //@line 68 "./src/cpp/unrar/unpack20.cpp"
   $129 = HEAP32[$128>>2]|0; //@line 68 "./src/cpp/unrar/unpack20.cpp"
   $130 = ((($15)) + 96|0); //@line 68 "./src/cpp/unrar/unpack20.cpp"
   $131 = HEAP32[$130>>2]|0; //@line 68 "./src/cpp/unrar/unpack20.cpp"
   $132 = (($131) + 1)|0; //@line 68 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$130>>2] = $132; //@line 68 "./src/cpp/unrar/unpack20.cpp"
   $133 = (($129) + ($131)|0); //@line 68 "./src/cpp/unrar/unpack20.cpp"
   HEAP8[$133>>0] = $127; //@line 68 "./src/cpp/unrar/unpack20.cpp"
   $134 = ((($15)) + 19504|0); //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $135 = $134; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $136 = $135; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $137 = HEAP32[$136>>2]|0; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $138 = (($135) + 4)|0; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $139 = $138; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $140 = HEAP32[$139>>2]|0; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $141 = (_i64Add(($137|0),($140|0),-1,-1)|0); //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $142 = tempRet0; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $143 = $134; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $144 = $143; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$144>>2] = $141; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $145 = (($143) + 4)|0; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   $146 = $145; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$146>>2] = $142; //@line 69 "./src/cpp/unrar/unpack20.cpp"
   continue;
  }
  $147 = ($126|0)>(269); //@line 72 "./src/cpp/unrar/unpack20.cpp"
  $148 = $6;
  if ($147) {
   $149 = (($148) - 270)|0; //@line 74 "./src/cpp/unrar/unpack20.cpp"
   $6 = $149; //@line 74 "./src/cpp/unrar/unpack20.cpp"
   $150 = (5417 + ($149)|0); //@line 74 "./src/cpp/unrar/unpack20.cpp"
   $151 = HEAP8[$150>>0]|0; //@line 74 "./src/cpp/unrar/unpack20.cpp"
   $152 = $151&255; //@line 74 "./src/cpp/unrar/unpack20.cpp"
   $153 = (($152) + 3)|0; //@line 74 "./src/cpp/unrar/unpack20.cpp"
   $7 = $153; //@line 74 "./src/cpp/unrar/unpack20.cpp"
   $154 = $6; //@line 75 "./src/cpp/unrar/unpack20.cpp"
   $155 = (5445 + ($154)|0); //@line 75 "./src/cpp/unrar/unpack20.cpp"
   $156 = HEAP8[$155>>0]|0; //@line 75 "./src/cpp/unrar/unpack20.cpp"
   $157 = $156&255; //@line 75 "./src/cpp/unrar/unpack20.cpp"
   $4 = $157; //@line 75 "./src/cpp/unrar/unpack20.cpp"
   $158 = ($157>>>0)>(0); //@line 75 "./src/cpp/unrar/unpack20.cpp"
   if ($158) {
    $159 = ((($15)) + 4|0); //@line 77 "./src/cpp/unrar/unpack20.cpp"
    $160 = (__ZN8BitInput7getbitsEv($159)|0); //@line 77 "./src/cpp/unrar/unpack20.cpp"
    $161 = $4; //@line 77 "./src/cpp/unrar/unpack20.cpp"
    $162 = (16 - ($161))|0; //@line 77 "./src/cpp/unrar/unpack20.cpp"
    $163 = $160 >>> $162; //@line 77 "./src/cpp/unrar/unpack20.cpp"
    $164 = $7; //@line 77 "./src/cpp/unrar/unpack20.cpp"
    $165 = (($164) + ($163))|0; //@line 77 "./src/cpp/unrar/unpack20.cpp"
    $7 = $165; //@line 77 "./src/cpp/unrar/unpack20.cpp"
    $166 = ((($15)) + 4|0); //@line 78 "./src/cpp/unrar/unpack20.cpp"
    $167 = $4; //@line 78 "./src/cpp/unrar/unpack20.cpp"
    __ZN8BitInput7addbitsEj($166,$167); //@line 78 "./src/cpp/unrar/unpack20.cpp"
   }
   $168 = ((($15)) + 4|0); //@line 81 "./src/cpp/unrar/unpack20.cpp"
   $169 = ((($15)) + 132|0); //@line 81 "./src/cpp/unrar/unpack20.cpp"
   $170 = ((($169)) + 3820|0); //@line 81 "./src/cpp/unrar/unpack20.cpp"
   $171 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($15,$168,$170)|0); //@line 81 "./src/cpp/unrar/unpack20.cpp"
   $8 = $171; //@line 81 "./src/cpp/unrar/unpack20.cpp"
   $172 = $8; //@line 82 "./src/cpp/unrar/unpack20.cpp"
   $173 = (2276 + ($172<<2)|0); //@line 82 "./src/cpp/unrar/unpack20.cpp"
   $174 = HEAP32[$173>>2]|0; //@line 82 "./src/cpp/unrar/unpack20.cpp"
   $175 = (($174) + 1)|0; //@line 82 "./src/cpp/unrar/unpack20.cpp"
   $9 = $175; //@line 82 "./src/cpp/unrar/unpack20.cpp"
   $176 = $8; //@line 83 "./src/cpp/unrar/unpack20.cpp"
   $177 = (5369 + ($176)|0); //@line 83 "./src/cpp/unrar/unpack20.cpp"
   $178 = HEAP8[$177>>0]|0; //@line 83 "./src/cpp/unrar/unpack20.cpp"
   $179 = $178&255; //@line 83 "./src/cpp/unrar/unpack20.cpp"
   $4 = $179; //@line 83 "./src/cpp/unrar/unpack20.cpp"
   $180 = ($179>>>0)>(0); //@line 83 "./src/cpp/unrar/unpack20.cpp"
   if ($180) {
    $181 = ((($15)) + 4|0); //@line 85 "./src/cpp/unrar/unpack20.cpp"
    $182 = (__ZN8BitInput7getbitsEv($181)|0); //@line 85 "./src/cpp/unrar/unpack20.cpp"
    $183 = $4; //@line 85 "./src/cpp/unrar/unpack20.cpp"
    $184 = (16 - ($183))|0; //@line 85 "./src/cpp/unrar/unpack20.cpp"
    $185 = $182 >>> $184; //@line 85 "./src/cpp/unrar/unpack20.cpp"
    $186 = $9; //@line 85 "./src/cpp/unrar/unpack20.cpp"
    $187 = (($186) + ($185))|0; //@line 85 "./src/cpp/unrar/unpack20.cpp"
    $9 = $187; //@line 85 "./src/cpp/unrar/unpack20.cpp"
    $188 = ((($15)) + 4|0); //@line 86 "./src/cpp/unrar/unpack20.cpp"
    $189 = $4; //@line 86 "./src/cpp/unrar/unpack20.cpp"
    __ZN8BitInput7addbitsEj($188,$189); //@line 86 "./src/cpp/unrar/unpack20.cpp"
   }
   $190 = $9; //@line 89 "./src/cpp/unrar/unpack20.cpp"
   $191 = ($190>>>0)>=(8192); //@line 89 "./src/cpp/unrar/unpack20.cpp"
   if ($191) {
    $192 = $7; //@line 91 "./src/cpp/unrar/unpack20.cpp"
    $193 = (($192) + 1)|0; //@line 91 "./src/cpp/unrar/unpack20.cpp"
    $7 = $193; //@line 91 "./src/cpp/unrar/unpack20.cpp"
    $194 = $9; //@line 92 "./src/cpp/unrar/unpack20.cpp"
    $195 = ($194>>>0)>=(262144); //@line 92 "./src/cpp/unrar/unpack20.cpp"
    if ($195) {
     $196 = $7; //@line 93 "./src/cpp/unrar/unpack20.cpp"
     $197 = (($196) + 1)|0; //@line 93 "./src/cpp/unrar/unpack20.cpp"
     $7 = $197; //@line 93 "./src/cpp/unrar/unpack20.cpp"
    }
   }
   $198 = $7; //@line 96 "./src/cpp/unrar/unpack20.cpp"
   $199 = $9; //@line 96 "./src/cpp/unrar/unpack20.cpp"
   __ZN6Unpack12CopyString20Ejj($15,$198,$199); //@line 96 "./src/cpp/unrar/unpack20.cpp"
   continue;
  }
  $200 = ($148|0)==(269); //@line 99 "./src/cpp/unrar/unpack20.cpp"
  if ($200) {
   $201 = (__ZN6Unpack12ReadTables20Ev($15)|0); //@line 101 "./src/cpp/unrar/unpack20.cpp"
   if ($201) {
    continue;
   } else {
    break;
   }
  }
  $202 = $6; //@line 105 "./src/cpp/unrar/unpack20.cpp"
  $203 = ($202|0)==(256); //@line 105 "./src/cpp/unrar/unpack20.cpp"
  if ($203) {
   $204 = ((($15)) + 88|0); //@line 107 "./src/cpp/unrar/unpack20.cpp"
   $205 = HEAP32[$204>>2]|0; //@line 107 "./src/cpp/unrar/unpack20.cpp"
   $206 = ((($15)) + 92|0); //@line 107 "./src/cpp/unrar/unpack20.cpp"
   $207 = HEAP32[$206>>2]|0; //@line 107 "./src/cpp/unrar/unpack20.cpp"
   __ZN6Unpack12CopyString20Ejj($15,$205,$207); //@line 107 "./src/cpp/unrar/unpack20.cpp"
   continue;
  }
  $208 = $6; //@line 110 "./src/cpp/unrar/unpack20.cpp"
  $209 = ($208|0)<(261); //@line 110 "./src/cpp/unrar/unpack20.cpp"
  if (!($209)) {
   $256 = $6; //@line 133 "./src/cpp/unrar/unpack20.cpp"
   $257 = ($256|0)<(270); //@line 133 "./src/cpp/unrar/unpack20.cpp"
   if (!($257)) {
    continue;
   }
   $258 = $6; //@line 135 "./src/cpp/unrar/unpack20.cpp"
   $259 = (($258) - 261)|0; //@line 135 "./src/cpp/unrar/unpack20.cpp"
   $6 = $259; //@line 135 "./src/cpp/unrar/unpack20.cpp"
   $260 = (5473 + ($259)|0); //@line 135 "./src/cpp/unrar/unpack20.cpp"
   $261 = HEAP8[$260>>0]|0; //@line 135 "./src/cpp/unrar/unpack20.cpp"
   $262 = $261&255; //@line 135 "./src/cpp/unrar/unpack20.cpp"
   $263 = (($262) + 1)|0; //@line 135 "./src/cpp/unrar/unpack20.cpp"
   $13 = $263; //@line 135 "./src/cpp/unrar/unpack20.cpp"
   $264 = $6; //@line 136 "./src/cpp/unrar/unpack20.cpp"
   $265 = (5481 + ($264)|0); //@line 136 "./src/cpp/unrar/unpack20.cpp"
   $266 = HEAP8[$265>>0]|0; //@line 136 "./src/cpp/unrar/unpack20.cpp"
   $267 = $266&255; //@line 136 "./src/cpp/unrar/unpack20.cpp"
   $4 = $267; //@line 136 "./src/cpp/unrar/unpack20.cpp"
   $268 = ($267>>>0)>(0); //@line 136 "./src/cpp/unrar/unpack20.cpp"
   if ($268) {
    $269 = ((($15)) + 4|0); //@line 138 "./src/cpp/unrar/unpack20.cpp"
    $270 = (__ZN8BitInput7getbitsEv($269)|0); //@line 138 "./src/cpp/unrar/unpack20.cpp"
    $271 = $4; //@line 138 "./src/cpp/unrar/unpack20.cpp"
    $272 = (16 - ($271))|0; //@line 138 "./src/cpp/unrar/unpack20.cpp"
    $273 = $270 >>> $272; //@line 138 "./src/cpp/unrar/unpack20.cpp"
    $274 = $13; //@line 138 "./src/cpp/unrar/unpack20.cpp"
    $275 = (($274) + ($273))|0; //@line 138 "./src/cpp/unrar/unpack20.cpp"
    $13 = $275; //@line 138 "./src/cpp/unrar/unpack20.cpp"
    $276 = ((($15)) + 4|0); //@line 139 "./src/cpp/unrar/unpack20.cpp"
    $277 = $4; //@line 139 "./src/cpp/unrar/unpack20.cpp"
    __ZN8BitInput7addbitsEj($276,$277); //@line 139 "./src/cpp/unrar/unpack20.cpp"
   }
   $278 = $13; //@line 141 "./src/cpp/unrar/unpack20.cpp"
   __ZN6Unpack12CopyString20Ejj($15,2,$278); //@line 141 "./src/cpp/unrar/unpack20.cpp"
   continue;
  }
  $210 = ((($15)) + 68|0); //@line 112 "./src/cpp/unrar/unpack20.cpp"
  $211 = ((($15)) + 84|0); //@line 112 "./src/cpp/unrar/unpack20.cpp"
  $212 = HEAP32[$211>>2]|0; //@line 112 "./src/cpp/unrar/unpack20.cpp"
  $213 = $6; //@line 112 "./src/cpp/unrar/unpack20.cpp"
  $214 = (($213) - 256)|0; //@line 112 "./src/cpp/unrar/unpack20.cpp"
  $215 = (($212) - ($214))|0; //@line 112 "./src/cpp/unrar/unpack20.cpp"
  $216 = $215 & 3; //@line 112 "./src/cpp/unrar/unpack20.cpp"
  $217 = (($210) + ($216<<2)|0); //@line 112 "./src/cpp/unrar/unpack20.cpp"
  $218 = HEAP32[$217>>2]|0; //@line 112 "./src/cpp/unrar/unpack20.cpp"
  $10 = $218; //@line 112 "./src/cpp/unrar/unpack20.cpp"
  $219 = ((($15)) + 4|0); //@line 113 "./src/cpp/unrar/unpack20.cpp"
  $220 = ((($15)) + 132|0); //@line 113 "./src/cpp/unrar/unpack20.cpp"
  $221 = ((($220)) + 11460|0); //@line 113 "./src/cpp/unrar/unpack20.cpp"
  $222 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($15,$219,$221)|0); //@line 113 "./src/cpp/unrar/unpack20.cpp"
  $11 = $222; //@line 113 "./src/cpp/unrar/unpack20.cpp"
  $223 = $11; //@line 114 "./src/cpp/unrar/unpack20.cpp"
  $224 = (5417 + ($223)|0); //@line 114 "./src/cpp/unrar/unpack20.cpp"
  $225 = HEAP8[$224>>0]|0; //@line 114 "./src/cpp/unrar/unpack20.cpp"
  $226 = $225&255; //@line 114 "./src/cpp/unrar/unpack20.cpp"
  $227 = (($226) + 2)|0; //@line 114 "./src/cpp/unrar/unpack20.cpp"
  $12 = $227; //@line 114 "./src/cpp/unrar/unpack20.cpp"
  $228 = $11; //@line 115 "./src/cpp/unrar/unpack20.cpp"
  $229 = (5445 + ($228)|0); //@line 115 "./src/cpp/unrar/unpack20.cpp"
  $230 = HEAP8[$229>>0]|0; //@line 115 "./src/cpp/unrar/unpack20.cpp"
  $231 = $230&255; //@line 115 "./src/cpp/unrar/unpack20.cpp"
  $4 = $231; //@line 115 "./src/cpp/unrar/unpack20.cpp"
  $232 = ($231>>>0)>(0); //@line 115 "./src/cpp/unrar/unpack20.cpp"
  if ($232) {
   $233 = ((($15)) + 4|0); //@line 117 "./src/cpp/unrar/unpack20.cpp"
   $234 = (__ZN8BitInput7getbitsEv($233)|0); //@line 117 "./src/cpp/unrar/unpack20.cpp"
   $235 = $4; //@line 117 "./src/cpp/unrar/unpack20.cpp"
   $236 = (16 - ($235))|0; //@line 117 "./src/cpp/unrar/unpack20.cpp"
   $237 = $234 >>> $236; //@line 117 "./src/cpp/unrar/unpack20.cpp"
   $238 = $12; //@line 117 "./src/cpp/unrar/unpack20.cpp"
   $239 = (($238) + ($237))|0; //@line 117 "./src/cpp/unrar/unpack20.cpp"
   $12 = $239; //@line 117 "./src/cpp/unrar/unpack20.cpp"
   $240 = ((($15)) + 4|0); //@line 118 "./src/cpp/unrar/unpack20.cpp"
   $241 = $4; //@line 118 "./src/cpp/unrar/unpack20.cpp"
   __ZN8BitInput7addbitsEj($240,$241); //@line 118 "./src/cpp/unrar/unpack20.cpp"
  }
  $242 = $10; //@line 120 "./src/cpp/unrar/unpack20.cpp"
  $243 = ($242>>>0)>=(257); //@line 120 "./src/cpp/unrar/unpack20.cpp"
  if ($243) {
   $244 = $12; //@line 122 "./src/cpp/unrar/unpack20.cpp"
   $245 = (($244) + 1)|0; //@line 122 "./src/cpp/unrar/unpack20.cpp"
   $12 = $245; //@line 122 "./src/cpp/unrar/unpack20.cpp"
   $246 = $10; //@line 123 "./src/cpp/unrar/unpack20.cpp"
   $247 = ($246>>>0)>=(8192); //@line 123 "./src/cpp/unrar/unpack20.cpp"
   if ($247) {
    $248 = $12; //@line 125 "./src/cpp/unrar/unpack20.cpp"
    $249 = (($248) + 1)|0; //@line 125 "./src/cpp/unrar/unpack20.cpp"
    $12 = $249; //@line 125 "./src/cpp/unrar/unpack20.cpp"
    $250 = $10; //@line 126 "./src/cpp/unrar/unpack20.cpp"
    $251 = ($250>>>0)>=(262144); //@line 126 "./src/cpp/unrar/unpack20.cpp"
    if ($251) {
     $252 = $12; //@line 127 "./src/cpp/unrar/unpack20.cpp"
     $253 = (($252) + 1)|0; //@line 127 "./src/cpp/unrar/unpack20.cpp"
     $12 = $253; //@line 127 "./src/cpp/unrar/unpack20.cpp"
    }
   }
  }
  $254 = $12; //@line 130 "./src/cpp/unrar/unpack20.cpp"
  $255 = $10; //@line 130 "./src/cpp/unrar/unpack20.cpp"
  __ZN6Unpack12CopyString20Ejj($15,$254,$255); //@line 130 "./src/cpp/unrar/unpack20.cpp"
 }
 if ((label|0) == 47) {
  STACKTOP = sp;return; //@line 147 "./src/cpp/unrar/unpack20.cpp"
 }
 __ZN6Unpack14ReadLastTablesEv($15); //@line 145 "./src/cpp/unrar/unpack20.cpp"
 __ZN6Unpack13UnpWriteBuf20Ev($15); //@line 146 "./src/cpp/unrar/unpack20.cpp"
 STACKTOP = sp;return; //@line 147 "./src/cpp/unrar/unpack20.cpp"
}
function __ZN6Unpack12ReadTables20Ev($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val3 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1072|0);
 $1 = sp + 1071|0;
 $3 = sp + 1052|0;
 $4 = sp + 24|0;
 $2 = $0;
 $10 = $2;
 $11 = ((($10)) + 4|0); //@line 171 "./src/cpp/unrar/unpack20.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 171 "./src/cpp/unrar/unpack20.cpp"
 $13 = ((($10)) + 104|0); //@line 171 "./src/cpp/unrar/unpack20.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 171 "./src/cpp/unrar/unpack20.cpp"
 $15 = (($14) - 25)|0; //@line 171 "./src/cpp/unrar/unpack20.cpp"
 $16 = ($12|0)>($15|0); //@line 171 "./src/cpp/unrar/unpack20.cpp"
 if ($16) {
  $17 = (__ZN6Unpack10UnpReadBufEv($10)|0); //@line 172 "./src/cpp/unrar/unpack20.cpp"
  if (!($17)) {
   $$expand_i1_val = 0; //@line 173 "./src/cpp/unrar/unpack20.cpp"
   HEAP8[$1>>0] = $$expand_i1_val; //@line 173 "./src/cpp/unrar/unpack20.cpp"
   $$pre_trunc = HEAP8[$1>>0]|0; //@line 251 "./src/cpp/unrar/unpack20.cpp"
   $153 = $$pre_trunc&1; //@line 251 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($153|0); //@line 251 "./src/cpp/unrar/unpack20.cpp"
  }
 }
 $18 = ((($10)) + 4|0); //@line 174 "./src/cpp/unrar/unpack20.cpp"
 $19 = (__ZN8BitInput7getbitsEv($18)|0); //@line 174 "./src/cpp/unrar/unpack20.cpp"
 $8 = $19; //@line 174 "./src/cpp/unrar/unpack20.cpp"
 $20 = $8; //@line 175 "./src/cpp/unrar/unpack20.cpp"
 $21 = $20 & 32768; //@line 175 "./src/cpp/unrar/unpack20.cpp"
 $22 = ((($10)) + 38712|0); //@line 175 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$22>>2] = $21; //@line 175 "./src/cpp/unrar/unpack20.cpp"
 $23 = $8; //@line 177 "./src/cpp/unrar/unpack20.cpp"
 $24 = $23 & 16384; //@line 177 "./src/cpp/unrar/unpack20.cpp"
 $25 = ($24|0)!=(0); //@line 177 "./src/cpp/unrar/unpack20.cpp"
 if (!($25)) {
  $26 = ((($10)) + 37684|0); //@line 178 "./src/cpp/unrar/unpack20.cpp"
  _memset(($26|0),0,1028)|0; //@line 178 "./src/cpp/unrar/unpack20.cpp"
 }
 $27 = ((($10)) + 4|0); //@line 179 "./src/cpp/unrar/unpack20.cpp"
 __ZN8BitInput7addbitsEj($27,2); //@line 179 "./src/cpp/unrar/unpack20.cpp"
 $28 = ((($10)) + 38712|0); //@line 181 "./src/cpp/unrar/unpack20.cpp"
 $29 = HEAP32[$28>>2]|0; //@line 181 "./src/cpp/unrar/unpack20.cpp"
 $30 = ($29|0)!=(0); //@line 181 "./src/cpp/unrar/unpack20.cpp"
 if ($30) {
  $31 = $8; //@line 183 "./src/cpp/unrar/unpack20.cpp"
  $32 = $31 >>> 12; //@line 183 "./src/cpp/unrar/unpack20.cpp"
  $33 = $32 & 3; //@line 183 "./src/cpp/unrar/unpack20.cpp"
  $34 = (($33) + 1)|0; //@line 183 "./src/cpp/unrar/unpack20.cpp"
  $35 = ((($10)) + 38716|0); //@line 183 "./src/cpp/unrar/unpack20.cpp"
  HEAP32[$35>>2] = $34; //@line 183 "./src/cpp/unrar/unpack20.cpp"
  $36 = ((($10)) + 38720|0); //@line 184 "./src/cpp/unrar/unpack20.cpp"
  $37 = HEAP32[$36>>2]|0; //@line 184 "./src/cpp/unrar/unpack20.cpp"
  $38 = ((($10)) + 38716|0); //@line 184 "./src/cpp/unrar/unpack20.cpp"
  $39 = HEAP32[$38>>2]|0; //@line 184 "./src/cpp/unrar/unpack20.cpp"
  $40 = ($37|0)>=($39|0); //@line 184 "./src/cpp/unrar/unpack20.cpp"
  if ($40) {
   $41 = ((($10)) + 38720|0); //@line 185 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$41>>2] = 0; //@line 185 "./src/cpp/unrar/unpack20.cpp"
  }
  $42 = ((($10)) + 4|0); //@line 186 "./src/cpp/unrar/unpack20.cpp"
  __ZN8BitInput7addbitsEj($42,2); //@line 186 "./src/cpp/unrar/unpack20.cpp"
  $43 = ((($10)) + 38716|0); //@line 187 "./src/cpp/unrar/unpack20.cpp"
  $44 = HEAP32[$43>>2]|0; //@line 187 "./src/cpp/unrar/unpack20.cpp"
  $45 = ($44*257)|0; //@line 187 "./src/cpp/unrar/unpack20.cpp"
  $5 = $45; //@line 187 "./src/cpp/unrar/unpack20.cpp"
 } else {
  $5 = 374; //@line 190 "./src/cpp/unrar/unpack20.cpp"
 }
 $7 = 0; //@line 192 "./src/cpp/unrar/unpack20.cpp"
 while(1) {
  $46 = $7; //@line 192 "./src/cpp/unrar/unpack20.cpp"
  $47 = ($46>>>0)<(19); //@line 192 "./src/cpp/unrar/unpack20.cpp"
  if (!($47)) {
   break;
  }
  $48 = ((($10)) + 4|0); //@line 194 "./src/cpp/unrar/unpack20.cpp"
  $49 = (__ZN8BitInput7getbitsEv($48)|0); //@line 194 "./src/cpp/unrar/unpack20.cpp"
  $50 = $49 >>> 12; //@line 194 "./src/cpp/unrar/unpack20.cpp"
  $51 = $50&255; //@line 194 "./src/cpp/unrar/unpack20.cpp"
  $52 = $7; //@line 194 "./src/cpp/unrar/unpack20.cpp"
  $53 = (($3) + ($52)|0); //@line 194 "./src/cpp/unrar/unpack20.cpp"
  HEAP8[$53>>0] = $51; //@line 194 "./src/cpp/unrar/unpack20.cpp"
  $54 = ((($10)) + 4|0); //@line 195 "./src/cpp/unrar/unpack20.cpp"
  __ZN8BitInput7addbitsEj($54,4); //@line 195 "./src/cpp/unrar/unpack20.cpp"
  $55 = $7; //@line 192 "./src/cpp/unrar/unpack20.cpp"
  $56 = (($55) + 1)|0; //@line 192 "./src/cpp/unrar/unpack20.cpp"
  $7 = $56; //@line 192 "./src/cpp/unrar/unpack20.cpp"
 }
 $57 = ((($10)) + 132|0); //@line 197 "./src/cpp/unrar/unpack20.cpp"
 $58 = ((($57)) + 15280|0); //@line 197 "./src/cpp/unrar/unpack20.cpp"
 __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($10,$3,$58,19); //@line 197 "./src/cpp/unrar/unpack20.cpp"
 $7 = 0; //@line 198 "./src/cpp/unrar/unpack20.cpp"
 L20: while(1) {
  $59 = $7; //@line 199 "./src/cpp/unrar/unpack20.cpp"
  $60 = $5; //@line 199 "./src/cpp/unrar/unpack20.cpp"
  $61 = ($59|0)<($60|0); //@line 199 "./src/cpp/unrar/unpack20.cpp"
  $62 = ((($10)) + 4|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = ((($10)) + 104|0);
  $65 = HEAP32[$64>>2]|0;
  if (!($61)) {
   break;
  }
  $66 = (($65) - 5)|0; //@line 201 "./src/cpp/unrar/unpack20.cpp"
  $67 = ($63|0)>($66|0); //@line 201 "./src/cpp/unrar/unpack20.cpp"
  if ($67) {
   $68 = (__ZN6Unpack10UnpReadBufEv($10)|0); //@line 202 "./src/cpp/unrar/unpack20.cpp"
   if (!($68)) {
    label = 18;
    break;
   }
  }
  $69 = ((($10)) + 4|0); //@line 204 "./src/cpp/unrar/unpack20.cpp"
  $70 = ((($10)) + 132|0); //@line 204 "./src/cpp/unrar/unpack20.cpp"
  $71 = ((($70)) + 15280|0); //@line 204 "./src/cpp/unrar/unpack20.cpp"
  $72 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($10,$69,$71)|0); //@line 204 "./src/cpp/unrar/unpack20.cpp"
  $9 = $72; //@line 204 "./src/cpp/unrar/unpack20.cpp"
  $73 = $9; //@line 205 "./src/cpp/unrar/unpack20.cpp"
  $74 = ($73|0)<(16); //@line 205 "./src/cpp/unrar/unpack20.cpp"
  $75 = $9;
  if ($74) {
   $76 = ((($10)) + 37684|0); //@line 207 "./src/cpp/unrar/unpack20.cpp"
   $77 = $7; //@line 207 "./src/cpp/unrar/unpack20.cpp"
   $78 = (($76) + ($77)|0); //@line 207 "./src/cpp/unrar/unpack20.cpp"
   $79 = HEAP8[$78>>0]|0; //@line 207 "./src/cpp/unrar/unpack20.cpp"
   $80 = $79&255; //@line 207 "./src/cpp/unrar/unpack20.cpp"
   $81 = (($75) + ($80))|0; //@line 207 "./src/cpp/unrar/unpack20.cpp"
   $82 = $81 & 15; //@line 207 "./src/cpp/unrar/unpack20.cpp"
   $83 = $82&255; //@line 207 "./src/cpp/unrar/unpack20.cpp"
   $84 = $7; //@line 207 "./src/cpp/unrar/unpack20.cpp"
   $85 = (($4) + ($84)|0); //@line 207 "./src/cpp/unrar/unpack20.cpp"
   HEAP8[$85>>0] = $83; //@line 207 "./src/cpp/unrar/unpack20.cpp"
   $86 = $7; //@line 208 "./src/cpp/unrar/unpack20.cpp"
   $87 = (($86) + 1)|0; //@line 208 "./src/cpp/unrar/unpack20.cpp"
   $7 = $87; //@line 208 "./src/cpp/unrar/unpack20.cpp"
   continue;
  }
  $88 = ($75|0)==(16); //@line 211 "./src/cpp/unrar/unpack20.cpp"
  if ($88) {
   $89 = ((($10)) + 4|0); //@line 213 "./src/cpp/unrar/unpack20.cpp"
   $90 = (__ZN8BitInput7getbitsEv($89)|0); //@line 213 "./src/cpp/unrar/unpack20.cpp"
   $91 = $90 >>> 14; //@line 213 "./src/cpp/unrar/unpack20.cpp"
   $92 = (($91) + 3)|0; //@line 213 "./src/cpp/unrar/unpack20.cpp"
   $6 = $92; //@line 213 "./src/cpp/unrar/unpack20.cpp"
   $93 = ((($10)) + 4|0); //@line 214 "./src/cpp/unrar/unpack20.cpp"
   __ZN8BitInput7addbitsEj($93,2); //@line 214 "./src/cpp/unrar/unpack20.cpp"
   $94 = $7; //@line 215 "./src/cpp/unrar/unpack20.cpp"
   $95 = ($94|0)>(0); //@line 215 "./src/cpp/unrar/unpack20.cpp"
   if (!($95)) {
    continue;
   }
   while(1) {
    $96 = $6; //@line 216 "./src/cpp/unrar/unpack20.cpp"
    $97 = (($96) + -1)|0; //@line 216 "./src/cpp/unrar/unpack20.cpp"
    $6 = $97; //@line 216 "./src/cpp/unrar/unpack20.cpp"
    $98 = ($96|0)>(0); //@line 216 "./src/cpp/unrar/unpack20.cpp"
    if (!($98)) {
     continue L20;
    }
    $99 = $7; //@line 216 "./src/cpp/unrar/unpack20.cpp"
    $100 = $5; //@line 216 "./src/cpp/unrar/unpack20.cpp"
    $101 = ($99|0)<($100|0); //@line 216 "./src/cpp/unrar/unpack20.cpp"
    if (!($101)) {
     continue L20;
    }
    $102 = $7; //@line 218 "./src/cpp/unrar/unpack20.cpp"
    $103 = (($102) - 1)|0; //@line 218 "./src/cpp/unrar/unpack20.cpp"
    $104 = (($4) + ($103)|0); //@line 218 "./src/cpp/unrar/unpack20.cpp"
    $105 = HEAP8[$104>>0]|0; //@line 218 "./src/cpp/unrar/unpack20.cpp"
    $106 = $7; //@line 218 "./src/cpp/unrar/unpack20.cpp"
    $107 = (($4) + ($106)|0); //@line 218 "./src/cpp/unrar/unpack20.cpp"
    HEAP8[$107>>0] = $105; //@line 218 "./src/cpp/unrar/unpack20.cpp"
    $108 = $7; //@line 219 "./src/cpp/unrar/unpack20.cpp"
    $109 = (($108) + 1)|0; //@line 219 "./src/cpp/unrar/unpack20.cpp"
    $7 = $109; //@line 219 "./src/cpp/unrar/unpack20.cpp"
   }
  }
  $110 = $9; //@line 224 "./src/cpp/unrar/unpack20.cpp"
  $111 = ($110|0)==(17); //@line 224 "./src/cpp/unrar/unpack20.cpp"
  $112 = ((($10)) + 4|0);
  $113 = (__ZN8BitInput7getbitsEv($112)|0); //@line 226 "./src/cpp/unrar/unpack20.cpp"
  if ($111) {
   $114 = $113 >>> 13; //@line 226 "./src/cpp/unrar/unpack20.cpp"
   $115 = (($114) + 3)|0; //@line 226 "./src/cpp/unrar/unpack20.cpp"
   $6 = $115; //@line 226 "./src/cpp/unrar/unpack20.cpp"
   $116 = ((($10)) + 4|0); //@line 227 "./src/cpp/unrar/unpack20.cpp"
   __ZN8BitInput7addbitsEj($116,3); //@line 227 "./src/cpp/unrar/unpack20.cpp"
  } else {
   $117 = $113 >>> 9; //@line 231 "./src/cpp/unrar/unpack20.cpp"
   $118 = (($117) + 11)|0; //@line 231 "./src/cpp/unrar/unpack20.cpp"
   $6 = $118; //@line 231 "./src/cpp/unrar/unpack20.cpp"
   $119 = ((($10)) + 4|0); //@line 232 "./src/cpp/unrar/unpack20.cpp"
   __ZN8BitInput7addbitsEj($119,7); //@line 232 "./src/cpp/unrar/unpack20.cpp"
  }
  while(1) {
   $120 = $6; //@line 234 "./src/cpp/unrar/unpack20.cpp"
   $121 = (($120) + -1)|0; //@line 234 "./src/cpp/unrar/unpack20.cpp"
   $6 = $121; //@line 234 "./src/cpp/unrar/unpack20.cpp"
   $122 = ($120|0)>(0); //@line 234 "./src/cpp/unrar/unpack20.cpp"
   if (!($122)) {
    continue L20;
   }
   $123 = $7; //@line 234 "./src/cpp/unrar/unpack20.cpp"
   $124 = $5; //@line 234 "./src/cpp/unrar/unpack20.cpp"
   $125 = ($123|0)<($124|0); //@line 234 "./src/cpp/unrar/unpack20.cpp"
   if (!($125)) {
    continue L20;
   }
   $126 = $7; //@line 235 "./src/cpp/unrar/unpack20.cpp"
   $127 = (($126) + 1)|0; //@line 235 "./src/cpp/unrar/unpack20.cpp"
   $7 = $127; //@line 235 "./src/cpp/unrar/unpack20.cpp"
   $128 = (($4) + ($126)|0); //@line 235 "./src/cpp/unrar/unpack20.cpp"
   HEAP8[$128>>0] = 0; //@line 235 "./src/cpp/unrar/unpack20.cpp"
  }
 }
 if ((label|0) == 18) {
  $$expand_i1_val3 = 0; //@line 203 "./src/cpp/unrar/unpack20.cpp"
  HEAP8[$1>>0] = $$expand_i1_val3; //@line 203 "./src/cpp/unrar/unpack20.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 251 "./src/cpp/unrar/unpack20.cpp"
  $153 = $$pre_trunc&1; //@line 251 "./src/cpp/unrar/unpack20.cpp"
  STACKTOP = sp;return ($153|0); //@line 251 "./src/cpp/unrar/unpack20.cpp"
 }
 $129 = ($63|0)>($65|0); //@line 238 "./src/cpp/unrar/unpack20.cpp"
 if ($129) {
  $$expand_i1_val5 = 1; //@line 239 "./src/cpp/unrar/unpack20.cpp"
  HEAP8[$1>>0] = $$expand_i1_val5; //@line 239 "./src/cpp/unrar/unpack20.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 251 "./src/cpp/unrar/unpack20.cpp"
  $153 = $$pre_trunc&1; //@line 251 "./src/cpp/unrar/unpack20.cpp"
  STACKTOP = sp;return ($153|0); //@line 251 "./src/cpp/unrar/unpack20.cpp"
 }
 $130 = ((($10)) + 38712|0); //@line 240 "./src/cpp/unrar/unpack20.cpp"
 $131 = HEAP32[$130>>2]|0; //@line 240 "./src/cpp/unrar/unpack20.cpp"
 $132 = ($131|0)!=(0); //@line 240 "./src/cpp/unrar/unpack20.cpp"
 L51: do {
  if ($132) {
   $7 = 0; //@line 241 "./src/cpp/unrar/unpack20.cpp"
   while(1) {
    $133 = $7; //@line 241 "./src/cpp/unrar/unpack20.cpp"
    $134 = ((($10)) + 38716|0); //@line 241 "./src/cpp/unrar/unpack20.cpp"
    $135 = HEAP32[$134>>2]|0; //@line 241 "./src/cpp/unrar/unpack20.cpp"
    $136 = ($133|0)<($135|0); //@line 241 "./src/cpp/unrar/unpack20.cpp"
    if (!($136)) {
     break L51;
    }
    $137 = $7; //@line 242 "./src/cpp/unrar/unpack20.cpp"
    $138 = ($137*257)|0; //@line 242 "./src/cpp/unrar/unpack20.cpp"
    $139 = (($4) + ($138)|0); //@line 242 "./src/cpp/unrar/unpack20.cpp"
    $140 = ((($10)) + 22404|0); //@line 242 "./src/cpp/unrar/unpack20.cpp"
    $141 = $7; //@line 242 "./src/cpp/unrar/unpack20.cpp"
    $142 = (($140) + (($141*3820)|0)|0); //@line 242 "./src/cpp/unrar/unpack20.cpp"
    __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($10,$139,$142,257); //@line 242 "./src/cpp/unrar/unpack20.cpp"
    $143 = $7; //@line 241 "./src/cpp/unrar/unpack20.cpp"
    $144 = (($143) + 1)|0; //@line 241 "./src/cpp/unrar/unpack20.cpp"
    $7 = $144; //@line 241 "./src/cpp/unrar/unpack20.cpp"
   }
  } else {
   $145 = ((($10)) + 132|0); //@line 245 "./src/cpp/unrar/unpack20.cpp"
   __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($10,$4,$145,298); //@line 245 "./src/cpp/unrar/unpack20.cpp"
   $146 = ((($4)) + 298|0); //@line 246 "./src/cpp/unrar/unpack20.cpp"
   $147 = ((($10)) + 132|0); //@line 246 "./src/cpp/unrar/unpack20.cpp"
   $148 = ((($147)) + 3820|0); //@line 246 "./src/cpp/unrar/unpack20.cpp"
   __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($10,$146,$148,48); //@line 246 "./src/cpp/unrar/unpack20.cpp"
   $149 = ((($4)) + 346|0); //@line 247 "./src/cpp/unrar/unpack20.cpp"
   $150 = ((($10)) + 132|0); //@line 247 "./src/cpp/unrar/unpack20.cpp"
   $151 = ((($150)) + 11460|0); //@line 247 "./src/cpp/unrar/unpack20.cpp"
   __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($10,$149,$151,28); //@line 247 "./src/cpp/unrar/unpack20.cpp"
  }
 } while(0);
 $152 = ((($10)) + 37684|0); //@line 249 "./src/cpp/unrar/unpack20.cpp"
 _memcpy(($152|0),($4|0),1028)|0; //@line 249 "./src/cpp/unrar/unpack20.cpp"
 $$expand_i1_val7 = 1; //@line 250 "./src/cpp/unrar/unpack20.cpp"
 HEAP8[$1>>0] = $$expand_i1_val7; //@line 250 "./src/cpp/unrar/unpack20.cpp"
 $$pre_trunc = HEAP8[$1>>0]|0; //@line 251 "./src/cpp/unrar/unpack20.cpp"
 $153 = $$pre_trunc&1; //@line 251 "./src/cpp/unrar/unpack20.cpp"
 STACKTOP = sp;return ($153|0); //@line 251 "./src/cpp/unrar/unpack20.cpp"
}
function __ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $13 = $5; //@line 85 "./src/cpp/unrar/unpackinline.cpp"
 $14 = (__ZN8BitInput7getbitsEv($13)|0); //@line 85 "./src/cpp/unrar/unpackinline.cpp"
 $15 = $14 & 65534; //@line 85 "./src/cpp/unrar/unpackinline.cpp"
 $7 = $15; //@line 85 "./src/cpp/unrar/unpackinline.cpp"
 $16 = $7; //@line 87 "./src/cpp/unrar/unpackinline.cpp"
 $17 = $6; //@line 87 "./src/cpp/unrar/unpackinline.cpp"
 $18 = ((($17)) + 4|0); //@line 87 "./src/cpp/unrar/unpackinline.cpp"
 $19 = $6; //@line 87 "./src/cpp/unrar/unpackinline.cpp"
 $20 = ((($19)) + 132|0); //@line 87 "./src/cpp/unrar/unpackinline.cpp"
 $21 = HEAP32[$20>>2]|0; //@line 87 "./src/cpp/unrar/unpackinline.cpp"
 $22 = (($18) + ($21<<2)|0); //@line 87 "./src/cpp/unrar/unpackinline.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 87 "./src/cpp/unrar/unpackinline.cpp"
 $24 = ($16>>>0)<($23>>>0); //@line 87 "./src/cpp/unrar/unpackinline.cpp"
 if ($24) {
  $25 = $7; //@line 89 "./src/cpp/unrar/unpackinline.cpp"
  $26 = $6; //@line 89 "./src/cpp/unrar/unpackinline.cpp"
  $27 = ((($26)) + 132|0); //@line 89 "./src/cpp/unrar/unpackinline.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 89 "./src/cpp/unrar/unpackinline.cpp"
  $29 = (16 - ($28))|0; //@line 89 "./src/cpp/unrar/unpackinline.cpp"
  $30 = $25 >>> $29; //@line 89 "./src/cpp/unrar/unpackinline.cpp"
  $8 = $30; //@line 89 "./src/cpp/unrar/unpackinline.cpp"
  $31 = $5; //@line 90 "./src/cpp/unrar/unpackinline.cpp"
  $32 = $6; //@line 90 "./src/cpp/unrar/unpackinline.cpp"
  $33 = ((($32)) + 136|0); //@line 90 "./src/cpp/unrar/unpackinline.cpp"
  $34 = $8; //@line 90 "./src/cpp/unrar/unpackinline.cpp"
  $35 = (($33) + ($34)|0); //@line 90 "./src/cpp/unrar/unpackinline.cpp"
  $36 = HEAP8[$35>>0]|0; //@line 90 "./src/cpp/unrar/unpackinline.cpp"
  $37 = $36&255; //@line 90 "./src/cpp/unrar/unpackinline.cpp"
  __ZN8BitInput7addbitsEj($31,$37); //@line 90 "./src/cpp/unrar/unpackinline.cpp"
  $38 = $6; //@line 91 "./src/cpp/unrar/unpackinline.cpp"
  $39 = ((($38)) + 1160|0); //@line 91 "./src/cpp/unrar/unpackinline.cpp"
  $40 = $8; //@line 91 "./src/cpp/unrar/unpackinline.cpp"
  $41 = (($39) + ($40<<1)|0); //@line 91 "./src/cpp/unrar/unpackinline.cpp"
  $42 = HEAP16[$41>>1]|0; //@line 91 "./src/cpp/unrar/unpackinline.cpp"
  $43 = $42&65535; //@line 91 "./src/cpp/unrar/unpackinline.cpp"
  $3 = $43; //@line 91 "./src/cpp/unrar/unpackinline.cpp"
  $90 = $3; //@line 124 "./src/cpp/unrar/unpackinline.cpp"
  STACKTOP = sp;return ($90|0); //@line 124 "./src/cpp/unrar/unpackinline.cpp"
 }
 $9 = 15; //@line 95 "./src/cpp/unrar/unpackinline.cpp"
 $44 = $6; //@line 96 "./src/cpp/unrar/unpackinline.cpp"
 $45 = ((($44)) + 132|0); //@line 96 "./src/cpp/unrar/unpackinline.cpp"
 $46 = HEAP32[$45>>2]|0; //@line 96 "./src/cpp/unrar/unpackinline.cpp"
 $47 = (($46) + 1)|0; //@line 96 "./src/cpp/unrar/unpackinline.cpp"
 $10 = $47; //@line 96 "./src/cpp/unrar/unpackinline.cpp"
 while(1) {
  $48 = $10; //@line 96 "./src/cpp/unrar/unpackinline.cpp"
  $49 = ($48>>>0)<(15); //@line 96 "./src/cpp/unrar/unpackinline.cpp"
  if (!($49)) {
   break;
  }
  $50 = $7; //@line 97 "./src/cpp/unrar/unpackinline.cpp"
  $51 = $6; //@line 97 "./src/cpp/unrar/unpackinline.cpp"
  $52 = ((($51)) + 4|0); //@line 97 "./src/cpp/unrar/unpackinline.cpp"
  $53 = $10; //@line 97 "./src/cpp/unrar/unpackinline.cpp"
  $54 = (($52) + ($53<<2)|0); //@line 97 "./src/cpp/unrar/unpackinline.cpp"
  $55 = HEAP32[$54>>2]|0; //@line 97 "./src/cpp/unrar/unpackinline.cpp"
  $56 = ($50>>>0)<($55>>>0); //@line 97 "./src/cpp/unrar/unpackinline.cpp"
  $57 = $10;
  if ($56) {
   label = 6;
   break;
  }
  $58 = (($57) + 1)|0; //@line 96 "./src/cpp/unrar/unpackinline.cpp"
  $10 = $58; //@line 96 "./src/cpp/unrar/unpackinline.cpp"
 }
 if ((label|0) == 6) {
  $9 = $57; //@line 99 "./src/cpp/unrar/unpackinline.cpp"
 }
 $59 = $5; //@line 103 "./src/cpp/unrar/unpackinline.cpp"
 $60 = $9; //@line 103 "./src/cpp/unrar/unpackinline.cpp"
 __ZN8BitInput7addbitsEj($59,$60); //@line 103 "./src/cpp/unrar/unpackinline.cpp"
 $61 = $7; //@line 106 "./src/cpp/unrar/unpackinline.cpp"
 $62 = $6; //@line 106 "./src/cpp/unrar/unpackinline.cpp"
 $63 = ((($62)) + 4|0); //@line 106 "./src/cpp/unrar/unpackinline.cpp"
 $64 = $9; //@line 106 "./src/cpp/unrar/unpackinline.cpp"
 $65 = (($64) - 1)|0; //@line 106 "./src/cpp/unrar/unpackinline.cpp"
 $66 = (($63) + ($65<<2)|0); //@line 106 "./src/cpp/unrar/unpackinline.cpp"
 $67 = HEAP32[$66>>2]|0; //@line 106 "./src/cpp/unrar/unpackinline.cpp"
 $68 = (($61) - ($67))|0; //@line 106 "./src/cpp/unrar/unpackinline.cpp"
 $11 = $68; //@line 106 "./src/cpp/unrar/unpackinline.cpp"
 $69 = $9; //@line 110 "./src/cpp/unrar/unpackinline.cpp"
 $70 = (16 - ($69))|0; //@line 110 "./src/cpp/unrar/unpackinline.cpp"
 $71 = $11; //@line 110 "./src/cpp/unrar/unpackinline.cpp"
 $72 = $71 >>> $70; //@line 110 "./src/cpp/unrar/unpackinline.cpp"
 $11 = $72; //@line 110 "./src/cpp/unrar/unpackinline.cpp"
 $73 = $6; //@line 115 "./src/cpp/unrar/unpackinline.cpp"
 $74 = ((($73)) + 68|0); //@line 115 "./src/cpp/unrar/unpackinline.cpp"
 $75 = $9; //@line 115 "./src/cpp/unrar/unpackinline.cpp"
 $76 = (($74) + ($75<<2)|0); //@line 115 "./src/cpp/unrar/unpackinline.cpp"
 $77 = HEAP32[$76>>2]|0; //@line 115 "./src/cpp/unrar/unpackinline.cpp"
 $78 = $11; //@line 115 "./src/cpp/unrar/unpackinline.cpp"
 $79 = (($77) + ($78))|0; //@line 115 "./src/cpp/unrar/unpackinline.cpp"
 $12 = $79; //@line 115 "./src/cpp/unrar/unpackinline.cpp"
 $80 = $12; //@line 118 "./src/cpp/unrar/unpackinline.cpp"
 $81 = $6; //@line 118 "./src/cpp/unrar/unpackinline.cpp"
 $82 = HEAP32[$81>>2]|0; //@line 118 "./src/cpp/unrar/unpackinline.cpp"
 $83 = ($80>>>0)>=($82>>>0); //@line 118 "./src/cpp/unrar/unpackinline.cpp"
 $$ = $83 ? 0 : $79; //@line 118 "./src/cpp/unrar/unpackinline.cpp"
 $12 = $$;
 $84 = $6; //@line 123 "./src/cpp/unrar/unpackinline.cpp"
 $85 = ((($84)) + 3208|0); //@line 123 "./src/cpp/unrar/unpackinline.cpp"
 $86 = $12; //@line 123 "./src/cpp/unrar/unpackinline.cpp"
 $87 = (($85) + ($86<<1)|0); //@line 123 "./src/cpp/unrar/unpackinline.cpp"
 $88 = HEAP16[$87>>1]|0; //@line 123 "./src/cpp/unrar/unpackinline.cpp"
 $89 = $88&65535; //@line 123 "./src/cpp/unrar/unpackinline.cpp"
 $3 = $89; //@line 123 "./src/cpp/unrar/unpackinline.cpp"
 $90 = $3; //@line 124 "./src/cpp/unrar/unpackinline.cpp"
 STACKTOP = sp;return ($90|0); //@line 124 "./src/cpp/unrar/unpackinline.cpp"
}
function __ZN6Unpack11DecodeAudioEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = $0;
 $3 = $1;
 $11 = $2;
 $12 = ((($11)) + 38728|0); //@line 284 "./src/cpp/unrar/unpack20.cpp"
 $13 = ((($11)) + 38720|0); //@line 284 "./src/cpp/unrar/unpack20.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 284 "./src/cpp/unrar/unpack20.cpp"
 $15 = (($12) + (($14*92)|0)|0); //@line 284 "./src/cpp/unrar/unpack20.cpp"
 $4 = $15; //@line 284 "./src/cpp/unrar/unpack20.cpp"
 $16 = $4; //@line 285 "./src/cpp/unrar/unpack20.cpp"
 $17 = ((($16)) + 84|0); //@line 285 "./src/cpp/unrar/unpack20.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 285 "./src/cpp/unrar/unpack20.cpp"
 $19 = (($18) + 1)|0; //@line 285 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$17>>2] = $19; //@line 285 "./src/cpp/unrar/unpack20.cpp"
 $20 = $4; //@line 286 "./src/cpp/unrar/unpack20.cpp"
 $21 = ((($20)) + 28|0); //@line 286 "./src/cpp/unrar/unpack20.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 286 "./src/cpp/unrar/unpack20.cpp"
 $23 = $4; //@line 286 "./src/cpp/unrar/unpack20.cpp"
 $24 = ((($23)) + 32|0); //@line 286 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$24>>2] = $22; //@line 286 "./src/cpp/unrar/unpack20.cpp"
 $25 = $4; //@line 287 "./src/cpp/unrar/unpack20.cpp"
 $26 = ((($25)) + 24|0); //@line 287 "./src/cpp/unrar/unpack20.cpp"
 $27 = HEAP32[$26>>2]|0; //@line 287 "./src/cpp/unrar/unpack20.cpp"
 $28 = $4; //@line 287 "./src/cpp/unrar/unpack20.cpp"
 $29 = ((($28)) + 28|0); //@line 287 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$29>>2] = $27; //@line 287 "./src/cpp/unrar/unpack20.cpp"
 $30 = $4; //@line 288 "./src/cpp/unrar/unpack20.cpp"
 $31 = ((($30)) + 36|0); //@line 288 "./src/cpp/unrar/unpack20.cpp"
 $32 = HEAP32[$31>>2]|0; //@line 288 "./src/cpp/unrar/unpack20.cpp"
 $33 = $4; //@line 288 "./src/cpp/unrar/unpack20.cpp"
 $34 = ((($33)) + 20|0); //@line 288 "./src/cpp/unrar/unpack20.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 288 "./src/cpp/unrar/unpack20.cpp"
 $36 = (($32) - ($35))|0; //@line 288 "./src/cpp/unrar/unpack20.cpp"
 $37 = $4; //@line 288 "./src/cpp/unrar/unpack20.cpp"
 $38 = ((($37)) + 24|0); //@line 288 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$38>>2] = $36; //@line 288 "./src/cpp/unrar/unpack20.cpp"
 $39 = $4; //@line 289 "./src/cpp/unrar/unpack20.cpp"
 $40 = ((($39)) + 36|0); //@line 289 "./src/cpp/unrar/unpack20.cpp"
 $41 = HEAP32[$40>>2]|0; //@line 289 "./src/cpp/unrar/unpack20.cpp"
 $42 = $4; //@line 289 "./src/cpp/unrar/unpack20.cpp"
 $43 = ((($42)) + 20|0); //@line 289 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$43>>2] = $41; //@line 289 "./src/cpp/unrar/unpack20.cpp"
 $44 = $4; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $45 = ((($44)) + 88|0); //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $46 = HEAP32[$45>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $47 = $46<<3; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $48 = $4; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $49 = HEAP32[$48>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $50 = $4; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $51 = ((($50)) + 20|0); //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $52 = HEAP32[$51>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $53 = Math_imul($49, $52)|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $54 = (($47) + ($53))|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $55 = $4; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $56 = ((($55)) + 4|0); //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $57 = HEAP32[$56>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $58 = $4; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $59 = ((($58)) + 24|0); //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $60 = HEAP32[$59>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $61 = Math_imul($57, $60)|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $62 = (($54) + ($61))|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $63 = $4; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $64 = ((($63)) + 8|0); //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $65 = HEAP32[$64>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $66 = $4; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $67 = ((($66)) + 28|0); //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $68 = HEAP32[$67>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $69 = Math_imul($65, $68)|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $70 = (($62) + ($69))|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $71 = $4; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $72 = ((($71)) + 12|0); //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $73 = HEAP32[$72>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $74 = $4; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $75 = ((($74)) + 32|0); //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $76 = HEAP32[$75>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $77 = Math_imul($73, $76)|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $78 = (($70) + ($77))|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $79 = $4; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $80 = ((($79)) + 16|0); //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $81 = HEAP32[$80>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $82 = ((($11)) + 38724|0); //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $83 = HEAP32[$82>>2]|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $84 = Math_imul($81, $83)|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $85 = (($78) + ($84))|0; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $5 = $85; //@line 290 "./src/cpp/unrar/unpack20.cpp"
 $86 = $5; //@line 291 "./src/cpp/unrar/unpack20.cpp"
 $87 = $86 >> 3; //@line 291 "./src/cpp/unrar/unpack20.cpp"
 $88 = $87 & 255; //@line 291 "./src/cpp/unrar/unpack20.cpp"
 $5 = $88; //@line 291 "./src/cpp/unrar/unpack20.cpp"
 $89 = $5; //@line 293 "./src/cpp/unrar/unpack20.cpp"
 $90 = $3; //@line 293 "./src/cpp/unrar/unpack20.cpp"
 $91 = (($89) - ($90))|0; //@line 293 "./src/cpp/unrar/unpack20.cpp"
 $6 = $91; //@line 293 "./src/cpp/unrar/unpack20.cpp"
 $92 = $3; //@line 295 "./src/cpp/unrar/unpack20.cpp"
 $93 = $92&255; //@line 295 "./src/cpp/unrar/unpack20.cpp"
 $94 = $93 << 24 >> 24; //@line 295 "./src/cpp/unrar/unpack20.cpp"
 $95 = $94 << 3; //@line 295 "./src/cpp/unrar/unpack20.cpp"
 $7 = $95; //@line 295 "./src/cpp/unrar/unpack20.cpp"
 $96 = $7; //@line 297 "./src/cpp/unrar/unpack20.cpp"
 $97 = (Math_abs(($96|0))|0); //@line 297 "./src/cpp/unrar/unpack20.cpp"
 $98 = $4; //@line 297 "./src/cpp/unrar/unpack20.cpp"
 $99 = ((($98)) + 40|0); //@line 297 "./src/cpp/unrar/unpack20.cpp"
 $100 = HEAP32[$99>>2]|0; //@line 297 "./src/cpp/unrar/unpack20.cpp"
 $101 = (($100) + ($97))|0; //@line 297 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$99>>2] = $101; //@line 297 "./src/cpp/unrar/unpack20.cpp"
 $102 = $7; //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $103 = $4; //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $104 = ((($103)) + 20|0); //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $105 = HEAP32[$104>>2]|0; //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $106 = (($102) - ($105))|0; //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $107 = (Math_abs(($106|0))|0); //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $108 = $4; //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $109 = ((($108)) + 40|0); //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $110 = ((($109)) + 4|0); //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $111 = HEAP32[$110>>2]|0; //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $112 = (($111) + ($107))|0; //@line 298 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$110>>2] = $112; //@line 298 "./src/cpp/unrar/unpack20.cpp"
 $113 = $7; //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $114 = $4; //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $115 = ((($114)) + 20|0); //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $116 = HEAP32[$115>>2]|0; //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $117 = (($113) + ($116))|0; //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $118 = (Math_abs(($117|0))|0); //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $119 = $4; //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $120 = ((($119)) + 40|0); //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $121 = ((($120)) + 8|0); //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $122 = HEAP32[$121>>2]|0; //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $123 = (($122) + ($118))|0; //@line 299 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$121>>2] = $123; //@line 299 "./src/cpp/unrar/unpack20.cpp"
 $124 = $7; //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $125 = $4; //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $126 = ((($125)) + 24|0); //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $127 = HEAP32[$126>>2]|0; //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $128 = (($124) - ($127))|0; //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $129 = (Math_abs(($128|0))|0); //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $130 = $4; //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $131 = ((($130)) + 40|0); //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $132 = ((($131)) + 12|0); //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $133 = HEAP32[$132>>2]|0; //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $134 = (($133) + ($129))|0; //@line 300 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$132>>2] = $134; //@line 300 "./src/cpp/unrar/unpack20.cpp"
 $135 = $7; //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $136 = $4; //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $137 = ((($136)) + 24|0); //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $138 = HEAP32[$137>>2]|0; //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $139 = (($135) + ($138))|0; //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $140 = (Math_abs(($139|0))|0); //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $141 = $4; //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $142 = ((($141)) + 40|0); //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $143 = ((($142)) + 16|0); //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $144 = HEAP32[$143>>2]|0; //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $145 = (($144) + ($140))|0; //@line 301 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$143>>2] = $145; //@line 301 "./src/cpp/unrar/unpack20.cpp"
 $146 = $7; //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $147 = $4; //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $148 = ((($147)) + 28|0); //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $149 = HEAP32[$148>>2]|0; //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $150 = (($146) - ($149))|0; //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $151 = (Math_abs(($150|0))|0); //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $152 = $4; //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $153 = ((($152)) + 40|0); //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $154 = ((($153)) + 20|0); //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $155 = HEAP32[$154>>2]|0; //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $156 = (($155) + ($151))|0; //@line 302 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$154>>2] = $156; //@line 302 "./src/cpp/unrar/unpack20.cpp"
 $157 = $7; //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $158 = $4; //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $159 = ((($158)) + 28|0); //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $160 = HEAP32[$159>>2]|0; //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $161 = (($157) + ($160))|0; //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $162 = (Math_abs(($161|0))|0); //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $163 = $4; //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $164 = ((($163)) + 40|0); //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $165 = ((($164)) + 24|0); //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $166 = HEAP32[$165>>2]|0; //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $167 = (($166) + ($162))|0; //@line 303 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$165>>2] = $167; //@line 303 "./src/cpp/unrar/unpack20.cpp"
 $168 = $7; //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $169 = $4; //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $170 = ((($169)) + 32|0); //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $171 = HEAP32[$170>>2]|0; //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $172 = (($168) - ($171))|0; //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $173 = (Math_abs(($172|0))|0); //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $174 = $4; //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $175 = ((($174)) + 40|0); //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $176 = ((($175)) + 28|0); //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $177 = HEAP32[$176>>2]|0; //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $178 = (($177) + ($173))|0; //@line 304 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$176>>2] = $178; //@line 304 "./src/cpp/unrar/unpack20.cpp"
 $179 = $7; //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $180 = $4; //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $181 = ((($180)) + 32|0); //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $182 = HEAP32[$181>>2]|0; //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $183 = (($179) + ($182))|0; //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $184 = (Math_abs(($183|0))|0); //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $185 = $4; //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $186 = ((($185)) + 40|0); //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $187 = ((($186)) + 32|0); //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $188 = HEAP32[$187>>2]|0; //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $189 = (($188) + ($184))|0; //@line 305 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$187>>2] = $189; //@line 305 "./src/cpp/unrar/unpack20.cpp"
 $190 = $7; //@line 306 "./src/cpp/unrar/unpack20.cpp"
 $191 = ((($11)) + 38724|0); //@line 306 "./src/cpp/unrar/unpack20.cpp"
 $192 = HEAP32[$191>>2]|0; //@line 306 "./src/cpp/unrar/unpack20.cpp"
 $193 = (($190) - ($192))|0; //@line 306 "./src/cpp/unrar/unpack20.cpp"
 $194 = (Math_abs(($193|0))|0); //@line 306 "./src/cpp/unrar/unpack20.cpp"
 $195 = $4; //@line 306 "./src/cpp/unrar/unpack20.cpp"
 $196 = ((($195)) + 40|0); //@line 306 "./src/cpp/unrar/unpack20.cpp"
 $197 = ((($196)) + 36|0); //@line 306 "./src/cpp/unrar/unpack20.cpp"
 $198 = HEAP32[$197>>2]|0; //@line 306 "./src/cpp/unrar/unpack20.cpp"
 $199 = (($198) + ($194))|0; //@line 306 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$197>>2] = $199; //@line 306 "./src/cpp/unrar/unpack20.cpp"
 $200 = $7; //@line 307 "./src/cpp/unrar/unpack20.cpp"
 $201 = ((($11)) + 38724|0); //@line 307 "./src/cpp/unrar/unpack20.cpp"
 $202 = HEAP32[$201>>2]|0; //@line 307 "./src/cpp/unrar/unpack20.cpp"
 $203 = (($200) + ($202))|0; //@line 307 "./src/cpp/unrar/unpack20.cpp"
 $204 = (Math_abs(($203|0))|0); //@line 307 "./src/cpp/unrar/unpack20.cpp"
 $205 = $4; //@line 307 "./src/cpp/unrar/unpack20.cpp"
 $206 = ((($205)) + 40|0); //@line 307 "./src/cpp/unrar/unpack20.cpp"
 $207 = ((($206)) + 40|0); //@line 307 "./src/cpp/unrar/unpack20.cpp"
 $208 = HEAP32[$207>>2]|0; //@line 307 "./src/cpp/unrar/unpack20.cpp"
 $209 = (($208) + ($204))|0; //@line 307 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$207>>2] = $209; //@line 307 "./src/cpp/unrar/unpack20.cpp"
 $210 = $6; //@line 309 "./src/cpp/unrar/unpack20.cpp"
 $211 = $4; //@line 309 "./src/cpp/unrar/unpack20.cpp"
 $212 = ((($211)) + 88|0); //@line 309 "./src/cpp/unrar/unpack20.cpp"
 $213 = HEAP32[$212>>2]|0; //@line 309 "./src/cpp/unrar/unpack20.cpp"
 $214 = (($210) - ($213))|0; //@line 309 "./src/cpp/unrar/unpack20.cpp"
 $215 = $214&255; //@line 309 "./src/cpp/unrar/unpack20.cpp"
 $216 = $215 << 24 >> 24; //@line 309 "./src/cpp/unrar/unpack20.cpp"
 $217 = $4; //@line 309 "./src/cpp/unrar/unpack20.cpp"
 $218 = ((($217)) + 36|0); //@line 309 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$218>>2] = $216; //@line 309 "./src/cpp/unrar/unpack20.cpp"
 $219 = ((($11)) + 38724|0); //@line 309 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$219>>2] = $216; //@line 309 "./src/cpp/unrar/unpack20.cpp"
 $220 = $6; //@line 310 "./src/cpp/unrar/unpack20.cpp"
 $221 = $4; //@line 310 "./src/cpp/unrar/unpack20.cpp"
 $222 = ((($221)) + 88|0); //@line 310 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$222>>2] = $220; //@line 310 "./src/cpp/unrar/unpack20.cpp"
 $223 = $4; //@line 312 "./src/cpp/unrar/unpack20.cpp"
 $224 = ((($223)) + 84|0); //@line 312 "./src/cpp/unrar/unpack20.cpp"
 $225 = HEAP32[$224>>2]|0; //@line 312 "./src/cpp/unrar/unpack20.cpp"
 $226 = $225 & 31; //@line 312 "./src/cpp/unrar/unpack20.cpp"
 $227 = ($226|0)==(0); //@line 312 "./src/cpp/unrar/unpack20.cpp"
 if (!($227)) {
  $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
  $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
  STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
 }
 $228 = $4; //@line 314 "./src/cpp/unrar/unpack20.cpp"
 $229 = ((($228)) + 40|0); //@line 314 "./src/cpp/unrar/unpack20.cpp"
 $230 = HEAP32[$229>>2]|0; //@line 314 "./src/cpp/unrar/unpack20.cpp"
 $8 = $230; //@line 314 "./src/cpp/unrar/unpack20.cpp"
 $9 = 0; //@line 314 "./src/cpp/unrar/unpack20.cpp"
 $231 = $4; //@line 315 "./src/cpp/unrar/unpack20.cpp"
 $232 = ((($231)) + 40|0); //@line 315 "./src/cpp/unrar/unpack20.cpp"
 HEAP32[$232>>2] = 0; //@line 315 "./src/cpp/unrar/unpack20.cpp"
 $10 = 1; //@line 316 "./src/cpp/unrar/unpack20.cpp"
 while(1) {
  $233 = $10; //@line 316 "./src/cpp/unrar/unpack20.cpp"
  $234 = ($233>>>0)<(11); //@line 316 "./src/cpp/unrar/unpack20.cpp"
  if (!($234)) {
   break;
  }
  $235 = $4; //@line 318 "./src/cpp/unrar/unpack20.cpp"
  $236 = ((($235)) + 40|0); //@line 318 "./src/cpp/unrar/unpack20.cpp"
  $237 = $10; //@line 318 "./src/cpp/unrar/unpack20.cpp"
  $238 = (($236) + ($237<<2)|0); //@line 318 "./src/cpp/unrar/unpack20.cpp"
  $239 = HEAP32[$238>>2]|0; //@line 318 "./src/cpp/unrar/unpack20.cpp"
  $240 = $8; //@line 318 "./src/cpp/unrar/unpack20.cpp"
  $241 = ($239>>>0)<($240>>>0); //@line 318 "./src/cpp/unrar/unpack20.cpp"
  if ($241) {
   $242 = $4; //@line 320 "./src/cpp/unrar/unpack20.cpp"
   $243 = ((($242)) + 40|0); //@line 320 "./src/cpp/unrar/unpack20.cpp"
   $244 = $10; //@line 320 "./src/cpp/unrar/unpack20.cpp"
   $245 = (($243) + ($244<<2)|0); //@line 320 "./src/cpp/unrar/unpack20.cpp"
   $246 = HEAP32[$245>>2]|0; //@line 320 "./src/cpp/unrar/unpack20.cpp"
   $8 = $246; //@line 320 "./src/cpp/unrar/unpack20.cpp"
   $247 = $10; //@line 321 "./src/cpp/unrar/unpack20.cpp"
   $9 = $247; //@line 321 "./src/cpp/unrar/unpack20.cpp"
  }
  $248 = $4; //@line 323 "./src/cpp/unrar/unpack20.cpp"
  $249 = ((($248)) + 40|0); //@line 323 "./src/cpp/unrar/unpack20.cpp"
  $250 = $10; //@line 323 "./src/cpp/unrar/unpack20.cpp"
  $251 = (($249) + ($250<<2)|0); //@line 323 "./src/cpp/unrar/unpack20.cpp"
  HEAP32[$251>>2] = 0; //@line 323 "./src/cpp/unrar/unpack20.cpp"
  $252 = $10; //@line 316 "./src/cpp/unrar/unpack20.cpp"
  $253 = (($252) + 1)|0; //@line 316 "./src/cpp/unrar/unpack20.cpp"
  $10 = $253; //@line 316 "./src/cpp/unrar/unpack20.cpp"
 }
 $254 = $9; //@line 325 "./src/cpp/unrar/unpack20.cpp"
 do {
  switch ($254|0) {
  case 1:  {
   $255 = $4; //@line 328 "./src/cpp/unrar/unpack20.cpp"
   $256 = HEAP32[$255>>2]|0; //@line 328 "./src/cpp/unrar/unpack20.cpp"
   $257 = ($256|0)>=(-16); //@line 328 "./src/cpp/unrar/unpack20.cpp"
   if (!($257)) {
    $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   }
   $258 = $4; //@line 329 "./src/cpp/unrar/unpack20.cpp"
   $259 = HEAP32[$258>>2]|0; //@line 329 "./src/cpp/unrar/unpack20.cpp"
   $260 = (($259) + -1)|0; //@line 329 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$258>>2] = $260; //@line 329 "./src/cpp/unrar/unpack20.cpp"
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   break;
  }
  case 2:  {
   $261 = $4; //@line 332 "./src/cpp/unrar/unpack20.cpp"
   $262 = HEAP32[$261>>2]|0; //@line 332 "./src/cpp/unrar/unpack20.cpp"
   $263 = ($262|0)<(16); //@line 332 "./src/cpp/unrar/unpack20.cpp"
   if (!($263)) {
    $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   }
   $264 = $4; //@line 333 "./src/cpp/unrar/unpack20.cpp"
   $265 = HEAP32[$264>>2]|0; //@line 333 "./src/cpp/unrar/unpack20.cpp"
   $266 = (($265) + 1)|0; //@line 333 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$264>>2] = $266; //@line 333 "./src/cpp/unrar/unpack20.cpp"
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   break;
  }
  case 3:  {
   $267 = $4; //@line 336 "./src/cpp/unrar/unpack20.cpp"
   $268 = ((($267)) + 4|0); //@line 336 "./src/cpp/unrar/unpack20.cpp"
   $269 = HEAP32[$268>>2]|0; //@line 336 "./src/cpp/unrar/unpack20.cpp"
   $270 = ($269|0)>=(-16); //@line 336 "./src/cpp/unrar/unpack20.cpp"
   if (!($270)) {
    $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   }
   $271 = $4; //@line 337 "./src/cpp/unrar/unpack20.cpp"
   $272 = ((($271)) + 4|0); //@line 337 "./src/cpp/unrar/unpack20.cpp"
   $273 = HEAP32[$272>>2]|0; //@line 337 "./src/cpp/unrar/unpack20.cpp"
   $274 = (($273) + -1)|0; //@line 337 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$272>>2] = $274; //@line 337 "./src/cpp/unrar/unpack20.cpp"
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   break;
  }
  case 4:  {
   $275 = $4; //@line 340 "./src/cpp/unrar/unpack20.cpp"
   $276 = ((($275)) + 4|0); //@line 340 "./src/cpp/unrar/unpack20.cpp"
   $277 = HEAP32[$276>>2]|0; //@line 340 "./src/cpp/unrar/unpack20.cpp"
   $278 = ($277|0)<(16); //@line 340 "./src/cpp/unrar/unpack20.cpp"
   if (!($278)) {
    $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   }
   $279 = $4; //@line 341 "./src/cpp/unrar/unpack20.cpp"
   $280 = ((($279)) + 4|0); //@line 341 "./src/cpp/unrar/unpack20.cpp"
   $281 = HEAP32[$280>>2]|0; //@line 341 "./src/cpp/unrar/unpack20.cpp"
   $282 = (($281) + 1)|0; //@line 341 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$280>>2] = $282; //@line 341 "./src/cpp/unrar/unpack20.cpp"
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   break;
  }
  case 5:  {
   $283 = $4; //@line 344 "./src/cpp/unrar/unpack20.cpp"
   $284 = ((($283)) + 8|0); //@line 344 "./src/cpp/unrar/unpack20.cpp"
   $285 = HEAP32[$284>>2]|0; //@line 344 "./src/cpp/unrar/unpack20.cpp"
   $286 = ($285|0)>=(-16); //@line 344 "./src/cpp/unrar/unpack20.cpp"
   if (!($286)) {
    $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   }
   $287 = $4; //@line 345 "./src/cpp/unrar/unpack20.cpp"
   $288 = ((($287)) + 8|0); //@line 345 "./src/cpp/unrar/unpack20.cpp"
   $289 = HEAP32[$288>>2]|0; //@line 345 "./src/cpp/unrar/unpack20.cpp"
   $290 = (($289) + -1)|0; //@line 345 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$288>>2] = $290; //@line 345 "./src/cpp/unrar/unpack20.cpp"
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   break;
  }
  case 6:  {
   $291 = $4; //@line 348 "./src/cpp/unrar/unpack20.cpp"
   $292 = ((($291)) + 8|0); //@line 348 "./src/cpp/unrar/unpack20.cpp"
   $293 = HEAP32[$292>>2]|0; //@line 348 "./src/cpp/unrar/unpack20.cpp"
   $294 = ($293|0)<(16); //@line 348 "./src/cpp/unrar/unpack20.cpp"
   if (!($294)) {
    $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   }
   $295 = $4; //@line 349 "./src/cpp/unrar/unpack20.cpp"
   $296 = ((($295)) + 8|0); //@line 349 "./src/cpp/unrar/unpack20.cpp"
   $297 = HEAP32[$296>>2]|0; //@line 349 "./src/cpp/unrar/unpack20.cpp"
   $298 = (($297) + 1)|0; //@line 349 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$296>>2] = $298; //@line 349 "./src/cpp/unrar/unpack20.cpp"
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   break;
  }
  case 7:  {
   $299 = $4; //@line 352 "./src/cpp/unrar/unpack20.cpp"
   $300 = ((($299)) + 12|0); //@line 352 "./src/cpp/unrar/unpack20.cpp"
   $301 = HEAP32[$300>>2]|0; //@line 352 "./src/cpp/unrar/unpack20.cpp"
   $302 = ($301|0)>=(-16); //@line 352 "./src/cpp/unrar/unpack20.cpp"
   if (!($302)) {
    $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   }
   $303 = $4; //@line 353 "./src/cpp/unrar/unpack20.cpp"
   $304 = ((($303)) + 12|0); //@line 353 "./src/cpp/unrar/unpack20.cpp"
   $305 = HEAP32[$304>>2]|0; //@line 353 "./src/cpp/unrar/unpack20.cpp"
   $306 = (($305) + -1)|0; //@line 353 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$304>>2] = $306; //@line 353 "./src/cpp/unrar/unpack20.cpp"
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   break;
  }
  case 8:  {
   $307 = $4; //@line 356 "./src/cpp/unrar/unpack20.cpp"
   $308 = ((($307)) + 12|0); //@line 356 "./src/cpp/unrar/unpack20.cpp"
   $309 = HEAP32[$308>>2]|0; //@line 356 "./src/cpp/unrar/unpack20.cpp"
   $310 = ($309|0)<(16); //@line 356 "./src/cpp/unrar/unpack20.cpp"
   if (!($310)) {
    $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   }
   $311 = $4; //@line 357 "./src/cpp/unrar/unpack20.cpp"
   $312 = ((($311)) + 12|0); //@line 357 "./src/cpp/unrar/unpack20.cpp"
   $313 = HEAP32[$312>>2]|0; //@line 357 "./src/cpp/unrar/unpack20.cpp"
   $314 = (($313) + 1)|0; //@line 357 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$312>>2] = $314; //@line 357 "./src/cpp/unrar/unpack20.cpp"
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   break;
  }
  case 9:  {
   $315 = $4; //@line 360 "./src/cpp/unrar/unpack20.cpp"
   $316 = ((($315)) + 16|0); //@line 360 "./src/cpp/unrar/unpack20.cpp"
   $317 = HEAP32[$316>>2]|0; //@line 360 "./src/cpp/unrar/unpack20.cpp"
   $318 = ($317|0)>=(-16); //@line 360 "./src/cpp/unrar/unpack20.cpp"
   if (!($318)) {
    $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   }
   $319 = $4; //@line 361 "./src/cpp/unrar/unpack20.cpp"
   $320 = ((($319)) + 16|0); //@line 361 "./src/cpp/unrar/unpack20.cpp"
   $321 = HEAP32[$320>>2]|0; //@line 361 "./src/cpp/unrar/unpack20.cpp"
   $322 = (($321) + -1)|0; //@line 361 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$320>>2] = $322; //@line 361 "./src/cpp/unrar/unpack20.cpp"
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   break;
  }
  case 10:  {
   $323 = $4; //@line 364 "./src/cpp/unrar/unpack20.cpp"
   $324 = ((($323)) + 16|0); //@line 364 "./src/cpp/unrar/unpack20.cpp"
   $325 = HEAP32[$324>>2]|0; //@line 364 "./src/cpp/unrar/unpack20.cpp"
   $326 = ($325|0)<(16); //@line 364 "./src/cpp/unrar/unpack20.cpp"
   if (!($326)) {
    $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
    STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   }
   $327 = $4; //@line 365 "./src/cpp/unrar/unpack20.cpp"
   $328 = ((($327)) + 16|0); //@line 365 "./src/cpp/unrar/unpack20.cpp"
   $329 = HEAP32[$328>>2]|0; //@line 365 "./src/cpp/unrar/unpack20.cpp"
   $330 = (($329) + 1)|0; //@line 365 "./src/cpp/unrar/unpack20.cpp"
   HEAP32[$328>>2] = $330; //@line 365 "./src/cpp/unrar/unpack20.cpp"
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
   break;
  }
  default: {
   $331 = $6; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   $332 = $331&255; //@line 369 "./src/cpp/unrar/unpack20.cpp"
   STACKTOP = sp;return ($332|0); //@line 369 "./src/cpp/unrar/unpack20.cpp"
  }
  }
 } while(0);
 return (0)|0;
}
function __ZN6Unpack14ReadLastTablesEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 104|0); //@line 256 "./src/cpp/unrar/unpack20.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 256 "./src/cpp/unrar/unpack20.cpp"
 $5 = ((($2)) + 4|0); //@line 256 "./src/cpp/unrar/unpack20.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 256 "./src/cpp/unrar/unpack20.cpp"
 $7 = (($6) + 5)|0; //@line 256 "./src/cpp/unrar/unpack20.cpp"
 $8 = ($4|0)>=($7|0); //@line 256 "./src/cpp/unrar/unpack20.cpp"
 if (!($8)) {
  STACKTOP = sp;return; //@line 265 "./src/cpp/unrar/unpack20.cpp"
 }
 $9 = ((($2)) + 38712|0); //@line 257 "./src/cpp/unrar/unpack20.cpp"
 $10 = HEAP32[$9>>2]|0; //@line 257 "./src/cpp/unrar/unpack20.cpp"
 $11 = ($10|0)!=(0); //@line 257 "./src/cpp/unrar/unpack20.cpp"
 $12 = ((($2)) + 4|0);
 if ($11) {
  $13 = ((($2)) + 22404|0); //@line 259 "./src/cpp/unrar/unpack20.cpp"
  $14 = ((($2)) + 38720|0); //@line 259 "./src/cpp/unrar/unpack20.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 259 "./src/cpp/unrar/unpack20.cpp"
  $16 = (($13) + (($15*3820)|0)|0); //@line 259 "./src/cpp/unrar/unpack20.cpp"
  $17 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($2,$12,$16)|0); //@line 259 "./src/cpp/unrar/unpack20.cpp"
  $18 = ($17|0)==(256); //@line 259 "./src/cpp/unrar/unpack20.cpp"
  if (!($18)) {
   STACKTOP = sp;return; //@line 265 "./src/cpp/unrar/unpack20.cpp"
  }
  (__ZN6Unpack12ReadTables20Ev($2)|0); //@line 260 "./src/cpp/unrar/unpack20.cpp"
  STACKTOP = sp;return; //@line 265 "./src/cpp/unrar/unpack20.cpp"
 } else {
  $19 = ((($2)) + 132|0); //@line 263 "./src/cpp/unrar/unpack20.cpp"
  $20 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($2,$12,$19)|0); //@line 263 "./src/cpp/unrar/unpack20.cpp"
  $21 = ($20|0)==(269); //@line 263 "./src/cpp/unrar/unpack20.cpp"
  if (!($21)) {
   STACKTOP = sp;return; //@line 265 "./src/cpp/unrar/unpack20.cpp"
  }
  (__ZN6Unpack12ReadTables20Ev($2)|0); //@line 264 "./src/cpp/unrar/unpack20.cpp"
  STACKTOP = sp;return; //@line 265 "./src/cpp/unrar/unpack20.cpp"
 }
}
function __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$sink = 0, $$sink2 = 0, $$sink3 = 0, $$sink4 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $8 = sp + 112|0;
 $13 = sp + 32|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $23 = $7; //@line 218 "./src/cpp/unrar/unpack.cpp"
 $24 = $6; //@line 218 "./src/cpp/unrar/unpack.cpp"
 HEAP32[$24>>2] = $23; //@line 218 "./src/cpp/unrar/unpack.cpp"
 dest=$8; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 222 "./src/cpp/unrar/unpack.cpp"
 $9 = 0; //@line 223 "./src/cpp/unrar/unpack.cpp"
 while(1) {
  $25 = $9; //@line 223 "./src/cpp/unrar/unpack.cpp"
  $26 = $7; //@line 223 "./src/cpp/unrar/unpack.cpp"
  $27 = ($25>>>0)<($26>>>0); //@line 223 "./src/cpp/unrar/unpack.cpp"
  if (!($27)) {
   break;
  }
  $28 = $5; //@line 224 "./src/cpp/unrar/unpack.cpp"
  $29 = $9; //@line 224 "./src/cpp/unrar/unpack.cpp"
  $30 = (($28) + ($29)|0); //@line 224 "./src/cpp/unrar/unpack.cpp"
  $31 = HEAP8[$30>>0]|0; //@line 224 "./src/cpp/unrar/unpack.cpp"
  $32 = $31&255; //@line 224 "./src/cpp/unrar/unpack.cpp"
  $33 = $32 & 15; //@line 224 "./src/cpp/unrar/unpack.cpp"
  $34 = (($8) + ($33<<2)|0); //@line 224 "./src/cpp/unrar/unpack.cpp"
  $35 = HEAP32[$34>>2]|0; //@line 224 "./src/cpp/unrar/unpack.cpp"
  $36 = (($35) + 1)|0; //@line 224 "./src/cpp/unrar/unpack.cpp"
  HEAP32[$34>>2] = $36; //@line 224 "./src/cpp/unrar/unpack.cpp"
  $37 = $9; //@line 223 "./src/cpp/unrar/unpack.cpp"
  $38 = (($37) + 1)|0; //@line 223 "./src/cpp/unrar/unpack.cpp"
  $9 = $38; //@line 223 "./src/cpp/unrar/unpack.cpp"
 }
 HEAP32[$8>>2] = 0; //@line 227 "./src/cpp/unrar/unpack.cpp"
 $39 = $6; //@line 230 "./src/cpp/unrar/unpack.cpp"
 $40 = ((($39)) + 3208|0); //@line 230 "./src/cpp/unrar/unpack.cpp"
 $41 = $7; //@line 230 "./src/cpp/unrar/unpack.cpp"
 $42 = $41<<1; //@line 230 "./src/cpp/unrar/unpack.cpp"
 _memset(($40|0),0,($42|0))|0; //@line 230 "./src/cpp/unrar/unpack.cpp"
 $43 = $6; //@line 233 "./src/cpp/unrar/unpack.cpp"
 $44 = ((($43)) + 68|0); //@line 233 "./src/cpp/unrar/unpack.cpp"
 HEAP32[$44>>2] = 0; //@line 233 "./src/cpp/unrar/unpack.cpp"
 $45 = $6; //@line 236 "./src/cpp/unrar/unpack.cpp"
 $46 = ((($45)) + 4|0); //@line 236 "./src/cpp/unrar/unpack.cpp"
 HEAP32[$46>>2] = 0; //@line 236 "./src/cpp/unrar/unpack.cpp"
 $10 = 0; //@line 239 "./src/cpp/unrar/unpack.cpp"
 $11 = 1; //@line 241 "./src/cpp/unrar/unpack.cpp"
 while(1) {
  $47 = $11; //@line 241 "./src/cpp/unrar/unpack.cpp"
  $48 = ($47>>>0)<(16); //@line 241 "./src/cpp/unrar/unpack.cpp"
  if (!($48)) {
   break;
  }
  $49 = $11; //@line 244 "./src/cpp/unrar/unpack.cpp"
  $50 = (($8) + ($49<<2)|0); //@line 244 "./src/cpp/unrar/unpack.cpp"
  $51 = HEAP32[$50>>2]|0; //@line 244 "./src/cpp/unrar/unpack.cpp"
  $52 = $10; //@line 244 "./src/cpp/unrar/unpack.cpp"
  $53 = (($52) + ($51))|0; //@line 244 "./src/cpp/unrar/unpack.cpp"
  $10 = $53; //@line 244 "./src/cpp/unrar/unpack.cpp"
  $54 = $10; //@line 247 "./src/cpp/unrar/unpack.cpp"
  $55 = $11; //@line 247 "./src/cpp/unrar/unpack.cpp"
  $56 = (16 - ($55))|0; //@line 247 "./src/cpp/unrar/unpack.cpp"
  $57 = $54 << $56; //@line 247 "./src/cpp/unrar/unpack.cpp"
  $12 = $57; //@line 247 "./src/cpp/unrar/unpack.cpp"
  $58 = $10; //@line 250 "./src/cpp/unrar/unpack.cpp"
  $59 = $58<<1; //@line 250 "./src/cpp/unrar/unpack.cpp"
  $10 = $59; //@line 250 "./src/cpp/unrar/unpack.cpp"
  $60 = $12; //@line 253 "./src/cpp/unrar/unpack.cpp"
  $61 = $6; //@line 253 "./src/cpp/unrar/unpack.cpp"
  $62 = ((($61)) + 4|0); //@line 253 "./src/cpp/unrar/unpack.cpp"
  $63 = $11; //@line 253 "./src/cpp/unrar/unpack.cpp"
  $64 = (($62) + ($63<<2)|0); //@line 253 "./src/cpp/unrar/unpack.cpp"
  HEAP32[$64>>2] = $60; //@line 253 "./src/cpp/unrar/unpack.cpp"
  $65 = $6; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $66 = ((($65)) + 68|0); //@line 257 "./src/cpp/unrar/unpack.cpp"
  $67 = $11; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $68 = (($67) - 1)|0; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $69 = (($66) + ($68<<2)|0); //@line 257 "./src/cpp/unrar/unpack.cpp"
  $70 = HEAP32[$69>>2]|0; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $71 = $11; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $72 = (($71) - 1)|0; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $73 = (($8) + ($72<<2)|0); //@line 257 "./src/cpp/unrar/unpack.cpp"
  $74 = HEAP32[$73>>2]|0; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $75 = (($70) + ($74))|0; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $76 = $6; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $77 = ((($76)) + 68|0); //@line 257 "./src/cpp/unrar/unpack.cpp"
  $78 = $11; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $79 = (($77) + ($78<<2)|0); //@line 257 "./src/cpp/unrar/unpack.cpp"
  HEAP32[$79>>2] = $75; //@line 257 "./src/cpp/unrar/unpack.cpp"
  $80 = $11; //@line 241 "./src/cpp/unrar/unpack.cpp"
  $81 = (($80) + 1)|0; //@line 241 "./src/cpp/unrar/unpack.cpp"
  $11 = $81; //@line 241 "./src/cpp/unrar/unpack.cpp"
 }
 $82 = $6; //@line 263 "./src/cpp/unrar/unpack.cpp"
 $83 = ((($82)) + 68|0); //@line 263 "./src/cpp/unrar/unpack.cpp"
 dest=$13; src=$83; stop=dest+64|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0)); //@line 263 "./src/cpp/unrar/unpack.cpp"
 $14 = 0; //@line 267 "./src/cpp/unrar/unpack.cpp"
 while(1) {
  $84 = $14; //@line 267 "./src/cpp/unrar/unpack.cpp"
  $85 = $7; //@line 267 "./src/cpp/unrar/unpack.cpp"
  $86 = ($84>>>0)<($85>>>0); //@line 267 "./src/cpp/unrar/unpack.cpp"
  if (!($86)) {
   break;
  }
  $87 = $5; //@line 270 "./src/cpp/unrar/unpack.cpp"
  $88 = $14; //@line 270 "./src/cpp/unrar/unpack.cpp"
  $89 = (($87) + ($88)|0); //@line 270 "./src/cpp/unrar/unpack.cpp"
  $90 = HEAP8[$89>>0]|0; //@line 270 "./src/cpp/unrar/unpack.cpp"
  $91 = $90&255; //@line 270 "./src/cpp/unrar/unpack.cpp"
  $92 = $91 & 15; //@line 270 "./src/cpp/unrar/unpack.cpp"
  $93 = $92&255; //@line 270 "./src/cpp/unrar/unpack.cpp"
  $15 = $93; //@line 270 "./src/cpp/unrar/unpack.cpp"
  $94 = $15; //@line 272 "./src/cpp/unrar/unpack.cpp"
  $95 = $94&255; //@line 272 "./src/cpp/unrar/unpack.cpp"
  $96 = ($95|0)!=(0); //@line 272 "./src/cpp/unrar/unpack.cpp"
  if ($96) {
   $97 = $15; //@line 275 "./src/cpp/unrar/unpack.cpp"
   $98 = $97&255; //@line 275 "./src/cpp/unrar/unpack.cpp"
   $99 = (($13) + ($98<<2)|0); //@line 275 "./src/cpp/unrar/unpack.cpp"
   $100 = HEAP32[$99>>2]|0; //@line 275 "./src/cpp/unrar/unpack.cpp"
   $16 = $100; //@line 275 "./src/cpp/unrar/unpack.cpp"
   $101 = $14; //@line 279 "./src/cpp/unrar/unpack.cpp"
   $102 = $101&65535; //@line 279 "./src/cpp/unrar/unpack.cpp"
   $103 = $6; //@line 279 "./src/cpp/unrar/unpack.cpp"
   $104 = ((($103)) + 3208|0); //@line 279 "./src/cpp/unrar/unpack.cpp"
   $105 = $16; //@line 279 "./src/cpp/unrar/unpack.cpp"
   $106 = (($104) + ($105<<1)|0); //@line 279 "./src/cpp/unrar/unpack.cpp"
   HEAP16[$106>>1] = $102; //@line 279 "./src/cpp/unrar/unpack.cpp"
   $107 = $15; //@line 284 "./src/cpp/unrar/unpack.cpp"
   $108 = $107&255; //@line 284 "./src/cpp/unrar/unpack.cpp"
   $109 = (($13) + ($108<<2)|0); //@line 284 "./src/cpp/unrar/unpack.cpp"
   $110 = HEAP32[$109>>2]|0; //@line 284 "./src/cpp/unrar/unpack.cpp"
   $111 = (($110) + 1)|0; //@line 284 "./src/cpp/unrar/unpack.cpp"
   HEAP32[$109>>2] = $111; //@line 284 "./src/cpp/unrar/unpack.cpp"
  }
  $112 = $14; //@line 267 "./src/cpp/unrar/unpack.cpp"
  $113 = (($112) + 1)|0; //@line 267 "./src/cpp/unrar/unpack.cpp"
  $14 = $113; //@line 267 "./src/cpp/unrar/unpack.cpp"
 }
 $114 = $7; //@line 292 "./src/cpp/unrar/unpack.cpp"
 switch ($114|0) {
 case 299: case 298: case 306:  {
  $115 = $6; //@line 297 "./src/cpp/unrar/unpack.cpp"
  $$sink = 10;$$sink2 = $115;
  break;
 }
 default: {
  $116 = $6; //@line 300 "./src/cpp/unrar/unpack.cpp"
  $$sink = 7;$$sink2 = $116;
 }
 }
 $117 = ((($$sink2)) + 132|0);
 HEAP32[$117>>2] = $$sink;
 $118 = $6; //@line 305 "./src/cpp/unrar/unpack.cpp"
 $119 = ((($118)) + 132|0); //@line 305 "./src/cpp/unrar/unpack.cpp"
 $120 = HEAP32[$119>>2]|0; //@line 305 "./src/cpp/unrar/unpack.cpp"
 $121 = 1 << $120; //@line 305 "./src/cpp/unrar/unpack.cpp"
 $17 = $121; //@line 305 "./src/cpp/unrar/unpack.cpp"
 $18 = 1; //@line 310 "./src/cpp/unrar/unpack.cpp"
 $19 = 0; //@line 313 "./src/cpp/unrar/unpack.cpp"
 while(1) {
  $122 = $19; //@line 313 "./src/cpp/unrar/unpack.cpp"
  $123 = $17; //@line 313 "./src/cpp/unrar/unpack.cpp"
  $124 = ($122>>>0)<($123>>>0); //@line 313 "./src/cpp/unrar/unpack.cpp"
  if (!($124)) {
   break;
  }
  $125 = $19; //@line 316 "./src/cpp/unrar/unpack.cpp"
  $126 = $6; //@line 316 "./src/cpp/unrar/unpack.cpp"
  $127 = ((($126)) + 132|0); //@line 316 "./src/cpp/unrar/unpack.cpp"
  $128 = HEAP32[$127>>2]|0; //@line 316 "./src/cpp/unrar/unpack.cpp"
  $129 = (16 - ($128))|0; //@line 316 "./src/cpp/unrar/unpack.cpp"
  $130 = $125 << $129; //@line 316 "./src/cpp/unrar/unpack.cpp"
  $20 = $130; //@line 316 "./src/cpp/unrar/unpack.cpp"
  while(1) {
   $131 = $18; //@line 322 "./src/cpp/unrar/unpack.cpp"
   $132 = ($131>>>0)<(16); //@line 322 "./src/cpp/unrar/unpack.cpp"
   if ($132) {
    $133 = $20; //@line 322 "./src/cpp/unrar/unpack.cpp"
    $134 = $6; //@line 322 "./src/cpp/unrar/unpack.cpp"
    $135 = ((($134)) + 4|0); //@line 322 "./src/cpp/unrar/unpack.cpp"
    $136 = $18; //@line 322 "./src/cpp/unrar/unpack.cpp"
    $137 = (($135) + ($136<<2)|0); //@line 322 "./src/cpp/unrar/unpack.cpp"
    $138 = HEAP32[$137>>2]|0; //@line 322 "./src/cpp/unrar/unpack.cpp"
    $139 = ($133>>>0)>=($138>>>0); //@line 322 "./src/cpp/unrar/unpack.cpp"
    $183 = $139;
   } else {
    $183 = 0;
   }
   $140 = $18;
   if (!($183)) {
    break;
   }
   $141 = (($140) + 1)|0; //@line 323 "./src/cpp/unrar/unpack.cpp"
   $18 = $141; //@line 323 "./src/cpp/unrar/unpack.cpp"
  }
  $142 = $140&255; //@line 326 "./src/cpp/unrar/unpack.cpp"
  $143 = $6; //@line 326 "./src/cpp/unrar/unpack.cpp"
  $144 = ((($143)) + 136|0); //@line 326 "./src/cpp/unrar/unpack.cpp"
  $145 = $19; //@line 326 "./src/cpp/unrar/unpack.cpp"
  $146 = (($144) + ($145)|0); //@line 326 "./src/cpp/unrar/unpack.cpp"
  HEAP8[$146>>0] = $142; //@line 326 "./src/cpp/unrar/unpack.cpp"
  $147 = $20; //@line 332 "./src/cpp/unrar/unpack.cpp"
  $148 = $6; //@line 332 "./src/cpp/unrar/unpack.cpp"
  $149 = ((($148)) + 4|0); //@line 332 "./src/cpp/unrar/unpack.cpp"
  $150 = $18; //@line 332 "./src/cpp/unrar/unpack.cpp"
  $151 = (($150) - 1)|0; //@line 332 "./src/cpp/unrar/unpack.cpp"
  $152 = (($149) + ($151<<2)|0); //@line 332 "./src/cpp/unrar/unpack.cpp"
  $153 = HEAP32[$152>>2]|0; //@line 332 "./src/cpp/unrar/unpack.cpp"
  $154 = (($147) - ($153))|0; //@line 332 "./src/cpp/unrar/unpack.cpp"
  $21 = $154; //@line 332 "./src/cpp/unrar/unpack.cpp"
  $155 = $18; //@line 335 "./src/cpp/unrar/unpack.cpp"
  $156 = (16 - ($155))|0; //@line 335 "./src/cpp/unrar/unpack.cpp"
  $157 = $21; //@line 335 "./src/cpp/unrar/unpack.cpp"
  $158 = $157 >>> $156; //@line 335 "./src/cpp/unrar/unpack.cpp"
  $21 = $158; //@line 335 "./src/cpp/unrar/unpack.cpp"
  $159 = $6; //@line 340 "./src/cpp/unrar/unpack.cpp"
  $160 = ((($159)) + 68|0); //@line 340 "./src/cpp/unrar/unpack.cpp"
  $161 = $18; //@line 340 "./src/cpp/unrar/unpack.cpp"
  $162 = (($160) + ($161<<2)|0); //@line 340 "./src/cpp/unrar/unpack.cpp"
  $163 = HEAP32[$162>>2]|0; //@line 340 "./src/cpp/unrar/unpack.cpp"
  $164 = $21; //@line 340 "./src/cpp/unrar/unpack.cpp"
  $165 = (($163) + ($164))|0; //@line 340 "./src/cpp/unrar/unpack.cpp"
  $22 = $165; //@line 340 "./src/cpp/unrar/unpack.cpp"
  $166 = $22; //@line 342 "./src/cpp/unrar/unpack.cpp"
  $167 = $7; //@line 342 "./src/cpp/unrar/unpack.cpp"
  $168 = ($166>>>0)<($167>>>0); //@line 342 "./src/cpp/unrar/unpack.cpp"
  $169 = $6;
  if ($168) {
   $170 = ((($169)) + 3208|0); //@line 345 "./src/cpp/unrar/unpack.cpp"
   $171 = $22; //@line 345 "./src/cpp/unrar/unpack.cpp"
   $172 = (($170) + ($171<<1)|0); //@line 345 "./src/cpp/unrar/unpack.cpp"
   $173 = HEAP16[$172>>1]|0; //@line 345 "./src/cpp/unrar/unpack.cpp"
   $174 = $6; //@line 345 "./src/cpp/unrar/unpack.cpp"
   $175 = ((($174)) + 1160|0); //@line 345 "./src/cpp/unrar/unpack.cpp"
   $176 = $19; //@line 345 "./src/cpp/unrar/unpack.cpp"
   $177 = (($175) + ($176<<1)|0); //@line 345 "./src/cpp/unrar/unpack.cpp"
   $$sink3 = $173;$$sink4 = $177;
  } else {
   $178 = ((($169)) + 1160|0); //@line 348 "./src/cpp/unrar/unpack.cpp"
   $179 = $19; //@line 348 "./src/cpp/unrar/unpack.cpp"
   $180 = (($178) + ($179<<1)|0); //@line 348 "./src/cpp/unrar/unpack.cpp"
   $$sink3 = 0;$$sink4 = $180;
  }
  HEAP16[$$sink4>>1] = $$sink3;
  $181 = $19; //@line 313 "./src/cpp/unrar/unpack.cpp"
  $182 = (($181) + 1)|0; //@line 313 "./src/cpp/unrar/unpack.cpp"
  $19 = $182; //@line 313 "./src/cpp/unrar/unpack.cpp"
 }
 STACKTOP = sp;return; //@line 350 "./src/cpp/unrar/unpack.cpp"
}
function __ZN6Unpack8Unpack29Eb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $2 = $0;
 $29 = $1&1;
 $3 = $29;
 $30 = $2;
 $31 = HEAP32[(55132)>>2]|0; //@line 27 "./src/cpp/unrar/unpack30.cpp"
 $32 = ($31|0)==(0); //@line 27 "./src/cpp/unrar/unpack30.cpp"
 L1: do {
  if ($32) {
   $5 = 0; //@line 29 "./src/cpp/unrar/unpack30.cpp"
   $6 = 0; //@line 29 "./src/cpp/unrar/unpack30.cpp"
   $7 = 0; //@line 29 "./src/cpp/unrar/unpack30.cpp"
   $8 = 0; //@line 30 "./src/cpp/unrar/unpack30.cpp"
   while(1) {
    $33 = $8; //@line 30 "./src/cpp/unrar/unpack30.cpp"
    $34 = ($33>>>0)<(19); //@line 30 "./src/cpp/unrar/unpack30.cpp"
    if (!($34)) {
     break L1;
    }
    $9 = 0; //@line 31 "./src/cpp/unrar/unpack30.cpp"
    while(1) {
     $35 = $9; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $36 = $8; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $37 = (2468 + ($36<<2)|0); //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $38 = HEAP32[$37>>2]|0; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $39 = ($35|0)<($38|0); //@line 31 "./src/cpp/unrar/unpack30.cpp"
     if (!($39)) {
      break;
     }
     $40 = $5; //@line 33 "./src/cpp/unrar/unpack30.cpp"
     $41 = $7; //@line 33 "./src/cpp/unrar/unpack30.cpp"
     $42 = (55128 + ($41<<2)|0); //@line 33 "./src/cpp/unrar/unpack30.cpp"
     HEAP32[$42>>2] = $40; //@line 33 "./src/cpp/unrar/unpack30.cpp"
     $43 = $6; //@line 34 "./src/cpp/unrar/unpack30.cpp"
     $44 = $43&255; //@line 34 "./src/cpp/unrar/unpack30.cpp"
     $45 = $7; //@line 34 "./src/cpp/unrar/unpack30.cpp"
     $46 = (64768 + ($45)|0); //@line 34 "./src/cpp/unrar/unpack30.cpp"
     HEAP8[$46>>0] = $44; //@line 34 "./src/cpp/unrar/unpack30.cpp"
     $47 = $9; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $48 = (($47) + 1)|0; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $9 = $48; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $49 = $7; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $50 = (($49) + 1)|0; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $7 = $50; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $51 = $6; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $52 = 1 << $51; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $53 = $5; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $54 = (($53) + ($52))|0; //@line 31 "./src/cpp/unrar/unpack30.cpp"
     $5 = $54; //@line 31 "./src/cpp/unrar/unpack30.cpp"
    }
    $55 = $8; //@line 30 "./src/cpp/unrar/unpack30.cpp"
    $56 = (($55) + 1)|0; //@line 30 "./src/cpp/unrar/unpack30.cpp"
    $8 = $56; //@line 30 "./src/cpp/unrar/unpack30.cpp"
    $57 = $6; //@line 30 "./src/cpp/unrar/unpack30.cpp"
    $58 = (($57) + 1)|0; //@line 30 "./src/cpp/unrar/unpack30.cpp"
    $6 = $58; //@line 30 "./src/cpp/unrar/unpack30.cpp"
   }
  }
 } while(0);
 $59 = ((($30)) + 19528|0); //@line 38 "./src/cpp/unrar/unpack30.cpp"
 HEAP8[$59>>0] = 1; //@line 38 "./src/cpp/unrar/unpack30.cpp"
 $60 = ((($30)) + 19512|0); //@line 40 "./src/cpp/unrar/unpack30.cpp"
 $61 = HEAP8[$60>>0]|0; //@line 40 "./src/cpp/unrar/unpack30.cpp"
 $62 = $61&1; //@line 40 "./src/cpp/unrar/unpack30.cpp"
 do {
  if (!($62)) {
   $63 = $3; //@line 42 "./src/cpp/unrar/unpack30.cpp"
   $64 = $63&1; //@line 42 "./src/cpp/unrar/unpack30.cpp"
   __ZN6Unpack11UnpInitDataEb($30,$64); //@line 42 "./src/cpp/unrar/unpack30.cpp"
   $65 = (__ZN6Unpack12UnpReadBuf30Ev($30)|0); //@line 43 "./src/cpp/unrar/unpack30.cpp"
   if (!($65)) {
    STACKTOP = sp;return; //@line 253 "./src/cpp/unrar/unpack30.cpp"
   }
   $66 = $3; //@line 45 "./src/cpp/unrar/unpack30.cpp"
   $67 = $66&1; //@line 45 "./src/cpp/unrar/unpack30.cpp"
   if ($67) {
    $68 = ((($30)) + 58956|0); //@line 45 "./src/cpp/unrar/unpack30.cpp"
    $69 = HEAP8[$68>>0]|0; //@line 45 "./src/cpp/unrar/unpack30.cpp"
    $70 = $69&1; //@line 45 "./src/cpp/unrar/unpack30.cpp"
    if ($70) {
     break;
    }
   }
   $71 = (__ZN6Unpack12ReadTables30Ev($30)|0); //@line 45 "./src/cpp/unrar/unpack30.cpp"
   if (!($71)) {
    STACKTOP = sp;return; //@line 253 "./src/cpp/unrar/unpack30.cpp"
   }
  }
 } while(0);
 L20: while(1) {
  $72 = ((($30)) + 59088|0); //@line 51 "./src/cpp/unrar/unpack30.cpp"
  $73 = HEAP32[$72>>2]|0; //@line 51 "./src/cpp/unrar/unpack30.cpp"
  $74 = ((($30)) + 96|0); //@line 51 "./src/cpp/unrar/unpack30.cpp"
  $75 = HEAP32[$74>>2]|0; //@line 51 "./src/cpp/unrar/unpack30.cpp"
  $76 = $75 & $73; //@line 51 "./src/cpp/unrar/unpack30.cpp"
  HEAP32[$74>>2] = $76; //@line 51 "./src/cpp/unrar/unpack30.cpp"
  $77 = ((($30)) + 4|0); //@line 53 "./src/cpp/unrar/unpack30.cpp"
  $78 = HEAP32[$77>>2]|0; //@line 53 "./src/cpp/unrar/unpack30.cpp"
  $79 = ((($30)) + 108|0); //@line 53 "./src/cpp/unrar/unpack30.cpp"
  $80 = HEAP32[$79>>2]|0; //@line 53 "./src/cpp/unrar/unpack30.cpp"
  $81 = ($78|0)>($80|0); //@line 53 "./src/cpp/unrar/unpack30.cpp"
  if ($81) {
   $82 = (__ZN6Unpack12UnpReadBuf30Ev($30)|0); //@line 55 "./src/cpp/unrar/unpack30.cpp"
   if (!($82)) {
    break;
   }
  }
  $83 = ((($30)) + 100|0); //@line 58 "./src/cpp/unrar/unpack30.cpp"
  $84 = HEAP32[$83>>2]|0; //@line 58 "./src/cpp/unrar/unpack30.cpp"
  $85 = ((($30)) + 96|0); //@line 58 "./src/cpp/unrar/unpack30.cpp"
  $86 = HEAP32[$85>>2]|0; //@line 58 "./src/cpp/unrar/unpack30.cpp"
  $87 = (($84) - ($86))|0; //@line 58 "./src/cpp/unrar/unpack30.cpp"
  $88 = ((($30)) + 59088|0); //@line 58 "./src/cpp/unrar/unpack30.cpp"
  $89 = HEAP32[$88>>2]|0; //@line 58 "./src/cpp/unrar/unpack30.cpp"
  $90 = $87 & $89; //@line 58 "./src/cpp/unrar/unpack30.cpp"
  $91 = ($90>>>0)<(260); //@line 58 "./src/cpp/unrar/unpack30.cpp"
  if ($91) {
   $92 = ((($30)) + 100|0); //@line 58 "./src/cpp/unrar/unpack30.cpp"
   $93 = HEAP32[$92>>2]|0; //@line 58 "./src/cpp/unrar/unpack30.cpp"
   $94 = ((($30)) + 96|0); //@line 58 "./src/cpp/unrar/unpack30.cpp"
   $95 = HEAP32[$94>>2]|0; //@line 58 "./src/cpp/unrar/unpack30.cpp"
   $96 = ($93|0)!=($95|0); //@line 58 "./src/cpp/unrar/unpack30.cpp"
   if ($96) {
    __ZN6Unpack13UnpWriteBuf30Ev($30); //@line 60 "./src/cpp/unrar/unpack30.cpp"
    $97 = ((($30)) + 19520|0); //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $98 = $97; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $99 = $98; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $100 = HEAP32[$99>>2]|0; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $101 = (($98) + 4)|0; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $102 = $101; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $103 = HEAP32[$102>>2]|0; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $104 = ((($30)) + 19504|0); //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $105 = $104; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $106 = $105; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $107 = HEAP32[$106>>2]|0; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $108 = (($105) + 4)|0; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $109 = $108; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $110 = HEAP32[$109>>2]|0; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $111 = ($103|0)>($110|0); //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $112 = ($100>>>0)>($107>>>0); //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $113 = ($103|0)==($110|0); //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $114 = $113 & $112; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    $115 = $111 | $114; //@line 61 "./src/cpp/unrar/unpack30.cpp"
    if ($115) {
     label = 83;
     break;
    }
    $116 = ((($30)) + 19512|0); //@line 63 "./src/cpp/unrar/unpack30.cpp"
    $117 = HEAP8[$116>>0]|0; //@line 63 "./src/cpp/unrar/unpack30.cpp"
    $118 = $117&1; //@line 63 "./src/cpp/unrar/unpack30.cpp"
    if ($118) {
     label = 19;
     break;
    }
   }
  }
  $120 = ((($30)) + 58952|0); //@line 69 "./src/cpp/unrar/unpack30.cpp"
  $121 = HEAP32[$120>>2]|0; //@line 69 "./src/cpp/unrar/unpack30.cpp"
  $122 = ($121|0)==(1); //@line 69 "./src/cpp/unrar/unpack30.cpp"
  if ($122) {
   $123 = ((($30)) + 39104|0); //@line 74 "./src/cpp/unrar/unpack30.cpp"
   $124 = (__ZN8ModelPPM10DecodeCharEv($123)|0); //@line 74 "./src/cpp/unrar/unpack30.cpp"
   $10 = $124; //@line 74 "./src/cpp/unrar/unpack30.cpp"
   $125 = $10; //@line 75 "./src/cpp/unrar/unpack30.cpp"
   $126 = ($125|0)==(-1); //@line 75 "./src/cpp/unrar/unpack30.cpp"
   if ($126) {
    label = 22;
    break;
   }
   $129 = $10; //@line 81 "./src/cpp/unrar/unpack30.cpp"
   $130 = ((($30)) + 58544|0); //@line 81 "./src/cpp/unrar/unpack30.cpp"
   $131 = HEAP32[$130>>2]|0; //@line 81 "./src/cpp/unrar/unpack30.cpp"
   $132 = ($129|0)==($131|0); //@line 81 "./src/cpp/unrar/unpack30.cpp"
   do {
    if ($132) {
     $133 = (__ZN6Unpack17SafePPMDecodeCharEv($30)|0); //@line 83 "./src/cpp/unrar/unpack30.cpp"
     $11 = $133; //@line 83 "./src/cpp/unrar/unpack30.cpp"
     $134 = $11; //@line 84 "./src/cpp/unrar/unpack30.cpp"
     $135 = ($134|0)==(0); //@line 84 "./src/cpp/unrar/unpack30.cpp"
     if ($135) {
      $136 = (__ZN6Unpack12ReadTables30Ev($30)|0); //@line 86 "./src/cpp/unrar/unpack30.cpp"
      if ($136) {
       continue L20;
      } else {
       break L20;
      }
     }
     $137 = $11; //@line 90 "./src/cpp/unrar/unpack30.cpp"
     $138 = ($137|0)==(-1); //@line 90 "./src/cpp/unrar/unpack30.cpp"
     $139 = $11; //@line 92 "./src/cpp/unrar/unpack30.cpp"
     $140 = ($139|0)==(2); //@line 92 "./src/cpp/unrar/unpack30.cpp"
     $or$cond = $138 | $140; //@line 90 "./src/cpp/unrar/unpack30.cpp"
     if ($or$cond) {
      break L20;
     }
     $141 = $11; //@line 94 "./src/cpp/unrar/unpack30.cpp"
     $142 = ($141|0)==(3); //@line 94 "./src/cpp/unrar/unpack30.cpp"
     if ($142) {
      $143 = (__ZN6Unpack13ReadVMCodePPMEv($30)|0); //@line 96 "./src/cpp/unrar/unpack30.cpp"
      if ($143) {
       continue L20;
      } else {
       break L20;
      }
     }
     $144 = $11; //@line 100 "./src/cpp/unrar/unpack30.cpp"
     $145 = ($144|0)==(4); //@line 100 "./src/cpp/unrar/unpack30.cpp"
     if (!($145)) {
      $173 = $11; //@line 121 "./src/cpp/unrar/unpack30.cpp"
      $174 = ($173|0)==(5); //@line 121 "./src/cpp/unrar/unpack30.cpp"
      if (!($174)) {
       break;
      }
      $175 = (__ZN6Unpack17SafePPMDecodeCharEv($30)|0); //@line 123 "./src/cpp/unrar/unpack30.cpp"
      $17 = $175; //@line 123 "./src/cpp/unrar/unpack30.cpp"
      $176 = $17; //@line 124 "./src/cpp/unrar/unpack30.cpp"
      $177 = ($176|0)==(-1); //@line 124 "./src/cpp/unrar/unpack30.cpp"
      if ($177) {
       break L20;
      }
      $178 = $17; //@line 126 "./src/cpp/unrar/unpack30.cpp"
      $179 = (($178) + 4)|0; //@line 126 "./src/cpp/unrar/unpack30.cpp"
      __ZN6Unpack10CopyStringEjj($30,$179,1); //@line 126 "./src/cpp/unrar/unpack30.cpp"
      continue L20;
     }
     $12 = 0; //@line 102 "./src/cpp/unrar/unpack30.cpp"
     $14 = 0; //@line 103 "./src/cpp/unrar/unpack30.cpp"
     $15 = 0; //@line 104 "./src/cpp/unrar/unpack30.cpp"
     while(1) {
      $146 = $15; //@line 104 "./src/cpp/unrar/unpack30.cpp"
      $147 = ($146|0)<(4); //@line 104 "./src/cpp/unrar/unpack30.cpp"
      if (!($147)) {
       break;
      }
      $148 = $14; //@line 104 "./src/cpp/unrar/unpack30.cpp"
      $149 = $148&1; //@line 104 "./src/cpp/unrar/unpack30.cpp"
      $150 = $149 ^ 1; //@line 104 "./src/cpp/unrar/unpack30.cpp"
      if (!($150)) {
       break;
      }
      $151 = (__ZN6Unpack17SafePPMDecodeCharEv($30)|0); //@line 106 "./src/cpp/unrar/unpack30.cpp"
      $16 = $151; //@line 106 "./src/cpp/unrar/unpack30.cpp"
      $152 = $16; //@line 107 "./src/cpp/unrar/unpack30.cpp"
      $153 = ($152|0)==(-1); //@line 107 "./src/cpp/unrar/unpack30.cpp"
      do {
       if ($153) {
        $14 = 1; //@line 108 "./src/cpp/unrar/unpack30.cpp"
       } else {
        $154 = $15; //@line 110 "./src/cpp/unrar/unpack30.cpp"
        $155 = ($154|0)==(3); //@line 110 "./src/cpp/unrar/unpack30.cpp"
        if ($155) {
         $156 = $16; //@line 111 "./src/cpp/unrar/unpack30.cpp"
         $157 = $156&255; //@line 111 "./src/cpp/unrar/unpack30.cpp"
         $158 = $157&255; //@line 111 "./src/cpp/unrar/unpack30.cpp"
         $13 = $158; //@line 111 "./src/cpp/unrar/unpack30.cpp"
         break;
        } else {
         $159 = $12; //@line 113 "./src/cpp/unrar/unpack30.cpp"
         $160 = $159 << 8; //@line 113 "./src/cpp/unrar/unpack30.cpp"
         $161 = $16; //@line 113 "./src/cpp/unrar/unpack30.cpp"
         $162 = $161&255; //@line 113 "./src/cpp/unrar/unpack30.cpp"
         $163 = $162&255; //@line 113 "./src/cpp/unrar/unpack30.cpp"
         $164 = (($160) + ($163))|0; //@line 113 "./src/cpp/unrar/unpack30.cpp"
         $12 = $164; //@line 113 "./src/cpp/unrar/unpack30.cpp"
         break;
        }
       }
      } while(0);
      $165 = $15; //@line 104 "./src/cpp/unrar/unpack30.cpp"
      $166 = (($165) + 1)|0; //@line 104 "./src/cpp/unrar/unpack30.cpp"
      $15 = $166; //@line 104 "./src/cpp/unrar/unpack30.cpp"
     }
     $167 = $14; //@line 115 "./src/cpp/unrar/unpack30.cpp"
     $168 = $167&1; //@line 115 "./src/cpp/unrar/unpack30.cpp"
     if ($168) {
      break L20;
     }
     $169 = $13; //@line 118 "./src/cpp/unrar/unpack30.cpp"
     $170 = (($169) + 32)|0; //@line 118 "./src/cpp/unrar/unpack30.cpp"
     $171 = $12; //@line 118 "./src/cpp/unrar/unpack30.cpp"
     $172 = (($171) + 2)|0; //@line 118 "./src/cpp/unrar/unpack30.cpp"
     __ZN6Unpack10CopyStringEjj($30,$170,$172); //@line 118 "./src/cpp/unrar/unpack30.cpp"
     continue L20;
    }
   } while(0);
   $180 = $10; //@line 132 "./src/cpp/unrar/unpack30.cpp"
   $181 = $180&255; //@line 132 "./src/cpp/unrar/unpack30.cpp"
   $182 = ((($30)) + 19236|0); //@line 132 "./src/cpp/unrar/unpack30.cpp"
   $183 = HEAP32[$182>>2]|0; //@line 132 "./src/cpp/unrar/unpack30.cpp"
   $184 = ((($30)) + 96|0); //@line 132 "./src/cpp/unrar/unpack30.cpp"
   $185 = HEAP32[$184>>2]|0; //@line 132 "./src/cpp/unrar/unpack30.cpp"
   $186 = (($185) + 1)|0; //@line 132 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$184>>2] = $186; //@line 132 "./src/cpp/unrar/unpack30.cpp"
   $187 = (($183) + ($185)|0); //@line 132 "./src/cpp/unrar/unpack30.cpp"
   HEAP8[$187>>0] = $181; //@line 132 "./src/cpp/unrar/unpack30.cpp"
   continue;
  }
  $188 = ((($30)) + 4|0); //@line 136 "./src/cpp/unrar/unpack30.cpp"
  $189 = ((($30)) + 132|0); //@line 136 "./src/cpp/unrar/unpack30.cpp"
  $190 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($30,$188,$189)|0); //@line 136 "./src/cpp/unrar/unpack30.cpp"
  $18 = $190; //@line 136 "./src/cpp/unrar/unpack30.cpp"
  $191 = $18; //@line 137 "./src/cpp/unrar/unpack30.cpp"
  $192 = ($191|0)<(256); //@line 137 "./src/cpp/unrar/unpack30.cpp"
  $193 = $18;
  if ($192) {
   $194 = $193&255; //@line 139 "./src/cpp/unrar/unpack30.cpp"
   $195 = ((($30)) + 19236|0); //@line 139 "./src/cpp/unrar/unpack30.cpp"
   $196 = HEAP32[$195>>2]|0; //@line 139 "./src/cpp/unrar/unpack30.cpp"
   $197 = ((($30)) + 96|0); //@line 139 "./src/cpp/unrar/unpack30.cpp"
   $198 = HEAP32[$197>>2]|0; //@line 139 "./src/cpp/unrar/unpack30.cpp"
   $199 = (($198) + 1)|0; //@line 139 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$197>>2] = $199; //@line 139 "./src/cpp/unrar/unpack30.cpp"
   $200 = (($196) + ($198)|0); //@line 139 "./src/cpp/unrar/unpack30.cpp"
   HEAP8[$200>>0] = $194; //@line 139 "./src/cpp/unrar/unpack30.cpp"
   continue;
  }
  $201 = ($193|0)>=(271); //@line 142 "./src/cpp/unrar/unpack30.cpp"
  $202 = $18;
  if ($201) {
   $203 = (($202) - 271)|0; //@line 144 "./src/cpp/unrar/unpack30.cpp"
   $18 = $203; //@line 144 "./src/cpp/unrar/unpack30.cpp"
   $204 = (5417 + ($203)|0); //@line 144 "./src/cpp/unrar/unpack30.cpp"
   $205 = HEAP8[$204>>0]|0; //@line 144 "./src/cpp/unrar/unpack30.cpp"
   $206 = $205&255; //@line 144 "./src/cpp/unrar/unpack30.cpp"
   $207 = (($206) + 3)|0; //@line 144 "./src/cpp/unrar/unpack30.cpp"
   $19 = $207; //@line 144 "./src/cpp/unrar/unpack30.cpp"
   $208 = $18; //@line 145 "./src/cpp/unrar/unpack30.cpp"
   $209 = (5445 + ($208)|0); //@line 145 "./src/cpp/unrar/unpack30.cpp"
   $210 = HEAP8[$209>>0]|0; //@line 145 "./src/cpp/unrar/unpack30.cpp"
   $211 = $210&255; //@line 145 "./src/cpp/unrar/unpack30.cpp"
   $4 = $211; //@line 145 "./src/cpp/unrar/unpack30.cpp"
   $212 = ($211>>>0)>(0); //@line 145 "./src/cpp/unrar/unpack30.cpp"
   if ($212) {
    $213 = ((($30)) + 4|0); //@line 147 "./src/cpp/unrar/unpack30.cpp"
    $214 = (__ZN8BitInput7getbitsEv($213)|0); //@line 147 "./src/cpp/unrar/unpack30.cpp"
    $215 = $4; //@line 147 "./src/cpp/unrar/unpack30.cpp"
    $216 = (16 - ($215))|0; //@line 147 "./src/cpp/unrar/unpack30.cpp"
    $217 = $214 >>> $216; //@line 147 "./src/cpp/unrar/unpack30.cpp"
    $218 = $19; //@line 147 "./src/cpp/unrar/unpack30.cpp"
    $219 = (($218) + ($217))|0; //@line 147 "./src/cpp/unrar/unpack30.cpp"
    $19 = $219; //@line 147 "./src/cpp/unrar/unpack30.cpp"
    $220 = ((($30)) + 4|0); //@line 148 "./src/cpp/unrar/unpack30.cpp"
    $221 = $4; //@line 148 "./src/cpp/unrar/unpack30.cpp"
    __ZN8BitInput7addbitsEj($220,$221); //@line 148 "./src/cpp/unrar/unpack30.cpp"
   }
   $222 = ((($30)) + 4|0); //@line 151 "./src/cpp/unrar/unpack30.cpp"
   $223 = ((($30)) + 132|0); //@line 151 "./src/cpp/unrar/unpack30.cpp"
   $224 = ((($223)) + 3820|0); //@line 151 "./src/cpp/unrar/unpack30.cpp"
   $225 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($30,$222,$224)|0); //@line 151 "./src/cpp/unrar/unpack30.cpp"
   $20 = $225; //@line 151 "./src/cpp/unrar/unpack30.cpp"
   $226 = $20; //@line 152 "./src/cpp/unrar/unpack30.cpp"
   $227 = (55128 + ($226<<2)|0); //@line 152 "./src/cpp/unrar/unpack30.cpp"
   $228 = HEAP32[$227>>2]|0; //@line 152 "./src/cpp/unrar/unpack30.cpp"
   $229 = (($228) + 1)|0; //@line 152 "./src/cpp/unrar/unpack30.cpp"
   $21 = $229; //@line 152 "./src/cpp/unrar/unpack30.cpp"
   $230 = $20; //@line 153 "./src/cpp/unrar/unpack30.cpp"
   $231 = (64768 + ($230)|0); //@line 153 "./src/cpp/unrar/unpack30.cpp"
   $232 = HEAP8[$231>>0]|0; //@line 153 "./src/cpp/unrar/unpack30.cpp"
   $233 = $232&255; //@line 153 "./src/cpp/unrar/unpack30.cpp"
   $4 = $233; //@line 153 "./src/cpp/unrar/unpack30.cpp"
   $234 = ($233>>>0)>(0); //@line 153 "./src/cpp/unrar/unpack30.cpp"
   do {
    if ($234) {
     $235 = $20; //@line 155 "./src/cpp/unrar/unpack30.cpp"
     $236 = ($235|0)>(9); //@line 155 "./src/cpp/unrar/unpack30.cpp"
     if (!($236)) {
      $276 = ((($30)) + 4|0); //@line 184 "./src/cpp/unrar/unpack30.cpp"
      $277 = (__ZN8BitInput7getbitsEv($276)|0); //@line 184 "./src/cpp/unrar/unpack30.cpp"
      $278 = $4; //@line 184 "./src/cpp/unrar/unpack30.cpp"
      $279 = (16 - ($278))|0; //@line 184 "./src/cpp/unrar/unpack30.cpp"
      $280 = $277 >>> $279; //@line 184 "./src/cpp/unrar/unpack30.cpp"
      $281 = $21; //@line 184 "./src/cpp/unrar/unpack30.cpp"
      $282 = (($281) + ($280))|0; //@line 184 "./src/cpp/unrar/unpack30.cpp"
      $21 = $282; //@line 184 "./src/cpp/unrar/unpack30.cpp"
      $283 = ((($30)) + 4|0); //@line 185 "./src/cpp/unrar/unpack30.cpp"
      $284 = $4; //@line 185 "./src/cpp/unrar/unpack30.cpp"
      __ZN8BitInput7addbitsEj($283,$284); //@line 185 "./src/cpp/unrar/unpack30.cpp"
      break;
     }
     $237 = $4; //@line 157 "./src/cpp/unrar/unpack30.cpp"
     $238 = ($237>>>0)>(4); //@line 157 "./src/cpp/unrar/unpack30.cpp"
     if ($238) {
      $239 = ((($30)) + 4|0); //@line 159 "./src/cpp/unrar/unpack30.cpp"
      $240 = (__ZN8BitInput7getbitsEv($239)|0); //@line 159 "./src/cpp/unrar/unpack30.cpp"
      $241 = $4; //@line 159 "./src/cpp/unrar/unpack30.cpp"
      $242 = (20 - ($241))|0; //@line 159 "./src/cpp/unrar/unpack30.cpp"
      $243 = $240 >>> $242; //@line 159 "./src/cpp/unrar/unpack30.cpp"
      $244 = $243 << 4; //@line 159 "./src/cpp/unrar/unpack30.cpp"
      $245 = $21; //@line 159 "./src/cpp/unrar/unpack30.cpp"
      $246 = (($245) + ($244))|0; //@line 159 "./src/cpp/unrar/unpack30.cpp"
      $21 = $246; //@line 159 "./src/cpp/unrar/unpack30.cpp"
      $247 = ((($30)) + 4|0); //@line 160 "./src/cpp/unrar/unpack30.cpp"
      $248 = $4; //@line 160 "./src/cpp/unrar/unpack30.cpp"
      $249 = (($248) - 4)|0; //@line 160 "./src/cpp/unrar/unpack30.cpp"
      __ZN8BitInput7addbitsEj($247,$249); //@line 160 "./src/cpp/unrar/unpack30.cpp"
     }
     $250 = ((($30)) + 39100|0); //@line 162 "./src/cpp/unrar/unpack30.cpp"
     $251 = HEAP32[$250>>2]|0; //@line 162 "./src/cpp/unrar/unpack30.cpp"
     $252 = ($251|0)>(0); //@line 162 "./src/cpp/unrar/unpack30.cpp"
     if ($252) {
      $253 = ((($30)) + 39100|0); //@line 164 "./src/cpp/unrar/unpack30.cpp"
      $254 = HEAP32[$253>>2]|0; //@line 164 "./src/cpp/unrar/unpack30.cpp"
      $255 = (($254) + -1)|0; //@line 164 "./src/cpp/unrar/unpack30.cpp"
      HEAP32[$253>>2] = $255; //@line 164 "./src/cpp/unrar/unpack30.cpp"
      $256 = ((($30)) + 39096|0); //@line 165 "./src/cpp/unrar/unpack30.cpp"
      $257 = HEAP32[$256>>2]|0; //@line 165 "./src/cpp/unrar/unpack30.cpp"
      $258 = $21; //@line 165 "./src/cpp/unrar/unpack30.cpp"
      $259 = (($258) + ($257))|0; //@line 165 "./src/cpp/unrar/unpack30.cpp"
      $21 = $259; //@line 165 "./src/cpp/unrar/unpack30.cpp"
      break;
     }
     $260 = ((($30)) + 4|0); //@line 169 "./src/cpp/unrar/unpack30.cpp"
     $261 = ((($30)) + 132|0); //@line 169 "./src/cpp/unrar/unpack30.cpp"
     $262 = ((($261)) + 7640|0); //@line 169 "./src/cpp/unrar/unpack30.cpp"
     $263 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($30,$260,$262)|0); //@line 169 "./src/cpp/unrar/unpack30.cpp"
     $22 = $263; //@line 169 "./src/cpp/unrar/unpack30.cpp"
     $264 = $22; //@line 170 "./src/cpp/unrar/unpack30.cpp"
     $265 = ($264|0)==(16); //@line 170 "./src/cpp/unrar/unpack30.cpp"
     if ($265) {
      $266 = ((($30)) + 39100|0); //@line 172 "./src/cpp/unrar/unpack30.cpp"
      HEAP32[$266>>2] = 15; //@line 172 "./src/cpp/unrar/unpack30.cpp"
      $267 = ((($30)) + 39096|0); //@line 173 "./src/cpp/unrar/unpack30.cpp"
      $268 = HEAP32[$267>>2]|0; //@line 173 "./src/cpp/unrar/unpack30.cpp"
      $269 = $21; //@line 173 "./src/cpp/unrar/unpack30.cpp"
      $270 = (($269) + ($268))|0; //@line 173 "./src/cpp/unrar/unpack30.cpp"
      $21 = $270; //@line 173 "./src/cpp/unrar/unpack30.cpp"
      break;
     } else {
      $271 = $22; //@line 177 "./src/cpp/unrar/unpack30.cpp"
      $272 = $21; //@line 177 "./src/cpp/unrar/unpack30.cpp"
      $273 = (($272) + ($271))|0; //@line 177 "./src/cpp/unrar/unpack30.cpp"
      $21 = $273; //@line 177 "./src/cpp/unrar/unpack30.cpp"
      $274 = $22; //@line 178 "./src/cpp/unrar/unpack30.cpp"
      $275 = ((($30)) + 39096|0); //@line 178 "./src/cpp/unrar/unpack30.cpp"
      HEAP32[$275>>2] = $274; //@line 178 "./src/cpp/unrar/unpack30.cpp"
      break;
     }
    }
   } while(0);
   $285 = $21; //@line 189 "./src/cpp/unrar/unpack30.cpp"
   $286 = ($285>>>0)>=(8192); //@line 189 "./src/cpp/unrar/unpack30.cpp"
   if ($286) {
    $287 = $19; //@line 191 "./src/cpp/unrar/unpack30.cpp"
    $288 = (($287) + 1)|0; //@line 191 "./src/cpp/unrar/unpack30.cpp"
    $19 = $288; //@line 191 "./src/cpp/unrar/unpack30.cpp"
    $289 = $21; //@line 192 "./src/cpp/unrar/unpack30.cpp"
    $290 = ($289>>>0)>=(262144); //@line 192 "./src/cpp/unrar/unpack30.cpp"
    if ($290) {
     $291 = $19; //@line 193 "./src/cpp/unrar/unpack30.cpp"
     $292 = (($291) + 1)|0; //@line 193 "./src/cpp/unrar/unpack30.cpp"
     $19 = $292; //@line 193 "./src/cpp/unrar/unpack30.cpp"
    }
   }
   $293 = $21; //@line 196 "./src/cpp/unrar/unpack30.cpp"
   __ZN6Unpack13InsertOldDistEj($30,$293); //@line 196 "./src/cpp/unrar/unpack30.cpp"
   $294 = $19; //@line 197 "./src/cpp/unrar/unpack30.cpp"
   $295 = ((($30)) + 88|0); //@line 197 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$295>>2] = $294; //@line 197 "./src/cpp/unrar/unpack30.cpp"
   $296 = $19; //@line 198 "./src/cpp/unrar/unpack30.cpp"
   $297 = $21; //@line 198 "./src/cpp/unrar/unpack30.cpp"
   __ZN6Unpack10CopyStringEjj($30,$296,$297); //@line 198 "./src/cpp/unrar/unpack30.cpp"
   continue;
  }
  $298 = ($202|0)==(256); //@line 201 "./src/cpp/unrar/unpack30.cpp"
  if ($298) {
   $299 = (__ZN6Unpack14ReadEndOfBlockEv($30)|0); //@line 203 "./src/cpp/unrar/unpack30.cpp"
   if ($299) {
    continue;
   } else {
    break;
   }
  }
  $300 = $18; //@line 207 "./src/cpp/unrar/unpack30.cpp"
  $301 = ($300|0)==(257); //@line 207 "./src/cpp/unrar/unpack30.cpp"
  if ($301) {
   $302 = (__ZN6Unpack10ReadVMCodeEv($30)|0); //@line 209 "./src/cpp/unrar/unpack30.cpp"
   if ($302) {
    continue;
   } else {
    break;
   }
  }
  $303 = $18; //@line 213 "./src/cpp/unrar/unpack30.cpp"
  $304 = ($303|0)==(258); //@line 213 "./src/cpp/unrar/unpack30.cpp"
  if ($304) {
   $305 = ((($30)) + 88|0); //@line 215 "./src/cpp/unrar/unpack30.cpp"
   $306 = HEAP32[$305>>2]|0; //@line 215 "./src/cpp/unrar/unpack30.cpp"
   $307 = ($306|0)!=(0); //@line 215 "./src/cpp/unrar/unpack30.cpp"
   if (!($307)) {
    continue;
   }
   $308 = ((($30)) + 88|0); //@line 216 "./src/cpp/unrar/unpack30.cpp"
   $309 = HEAP32[$308>>2]|0; //@line 216 "./src/cpp/unrar/unpack30.cpp"
   $310 = ((($30)) + 68|0); //@line 216 "./src/cpp/unrar/unpack30.cpp"
   $311 = HEAP32[$310>>2]|0; //@line 216 "./src/cpp/unrar/unpack30.cpp"
   __ZN6Unpack10CopyStringEjj($30,$309,$311); //@line 216 "./src/cpp/unrar/unpack30.cpp"
   continue;
  }
  $312 = $18; //@line 219 "./src/cpp/unrar/unpack30.cpp"
  $313 = ($312|0)<(263); //@line 219 "./src/cpp/unrar/unpack30.cpp"
  $314 = $18;
  if (!($313)) {
   $362 = ($314|0)<(272); //@line 238 "./src/cpp/unrar/unpack30.cpp"
   if (!($362)) {
    continue;
   }
   $363 = $18; //@line 240 "./src/cpp/unrar/unpack30.cpp"
   $364 = (($363) - 263)|0; //@line 240 "./src/cpp/unrar/unpack30.cpp"
   $18 = $364; //@line 240 "./src/cpp/unrar/unpack30.cpp"
   $365 = (5473 + ($364)|0); //@line 240 "./src/cpp/unrar/unpack30.cpp"
   $366 = HEAP8[$365>>0]|0; //@line 240 "./src/cpp/unrar/unpack30.cpp"
   $367 = $366&255; //@line 240 "./src/cpp/unrar/unpack30.cpp"
   $368 = (($367) + 1)|0; //@line 240 "./src/cpp/unrar/unpack30.cpp"
   $28 = $368; //@line 240 "./src/cpp/unrar/unpack30.cpp"
   $369 = $18; //@line 241 "./src/cpp/unrar/unpack30.cpp"
   $370 = (5481 + ($369)|0); //@line 241 "./src/cpp/unrar/unpack30.cpp"
   $371 = HEAP8[$370>>0]|0; //@line 241 "./src/cpp/unrar/unpack30.cpp"
   $372 = $371&255; //@line 241 "./src/cpp/unrar/unpack30.cpp"
   $4 = $372; //@line 241 "./src/cpp/unrar/unpack30.cpp"
   $373 = ($372>>>0)>(0); //@line 241 "./src/cpp/unrar/unpack30.cpp"
   if ($373) {
    $374 = ((($30)) + 4|0); //@line 243 "./src/cpp/unrar/unpack30.cpp"
    $375 = (__ZN8BitInput7getbitsEv($374)|0); //@line 243 "./src/cpp/unrar/unpack30.cpp"
    $376 = $4; //@line 243 "./src/cpp/unrar/unpack30.cpp"
    $377 = (16 - ($376))|0; //@line 243 "./src/cpp/unrar/unpack30.cpp"
    $378 = $375 >>> $377; //@line 243 "./src/cpp/unrar/unpack30.cpp"
    $379 = $28; //@line 243 "./src/cpp/unrar/unpack30.cpp"
    $380 = (($379) + ($378))|0; //@line 243 "./src/cpp/unrar/unpack30.cpp"
    $28 = $380; //@line 243 "./src/cpp/unrar/unpack30.cpp"
    $381 = ((($30)) + 4|0); //@line 244 "./src/cpp/unrar/unpack30.cpp"
    $382 = $4; //@line 244 "./src/cpp/unrar/unpack30.cpp"
    __ZN8BitInput7addbitsEj($381,$382); //@line 244 "./src/cpp/unrar/unpack30.cpp"
   }
   $383 = $28; //@line 246 "./src/cpp/unrar/unpack30.cpp"
   __ZN6Unpack13InsertOldDistEj($30,$383); //@line 246 "./src/cpp/unrar/unpack30.cpp"
   $384 = ((($30)) + 88|0); //@line 247 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$384>>2] = 2; //@line 247 "./src/cpp/unrar/unpack30.cpp"
   $385 = $28; //@line 248 "./src/cpp/unrar/unpack30.cpp"
   __ZN6Unpack10CopyStringEjj($30,2,$385); //@line 248 "./src/cpp/unrar/unpack30.cpp"
   continue;
  }
  $315 = (($314) - 259)|0; //@line 221 "./src/cpp/unrar/unpack30.cpp"
  $23 = $315; //@line 221 "./src/cpp/unrar/unpack30.cpp"
  $316 = ((($30)) + 68|0); //@line 222 "./src/cpp/unrar/unpack30.cpp"
  $317 = $23; //@line 222 "./src/cpp/unrar/unpack30.cpp"
  $318 = (($316) + ($317<<2)|0); //@line 222 "./src/cpp/unrar/unpack30.cpp"
  $319 = HEAP32[$318>>2]|0; //@line 222 "./src/cpp/unrar/unpack30.cpp"
  $24 = $319; //@line 222 "./src/cpp/unrar/unpack30.cpp"
  $320 = $23; //@line 223 "./src/cpp/unrar/unpack30.cpp"
  $25 = $320; //@line 223 "./src/cpp/unrar/unpack30.cpp"
  while(1) {
   $321 = $25; //@line 223 "./src/cpp/unrar/unpack30.cpp"
   $322 = ($321|0)>(0); //@line 223 "./src/cpp/unrar/unpack30.cpp"
   if (!($322)) {
    break;
   }
   $323 = ((($30)) + 68|0); //@line 224 "./src/cpp/unrar/unpack30.cpp"
   $324 = $25; //@line 224 "./src/cpp/unrar/unpack30.cpp"
   $325 = (($324) - 1)|0; //@line 224 "./src/cpp/unrar/unpack30.cpp"
   $326 = (($323) + ($325<<2)|0); //@line 224 "./src/cpp/unrar/unpack30.cpp"
   $327 = HEAP32[$326>>2]|0; //@line 224 "./src/cpp/unrar/unpack30.cpp"
   $328 = ((($30)) + 68|0); //@line 224 "./src/cpp/unrar/unpack30.cpp"
   $329 = $25; //@line 224 "./src/cpp/unrar/unpack30.cpp"
   $330 = (($328) + ($329<<2)|0); //@line 224 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$330>>2] = $327; //@line 224 "./src/cpp/unrar/unpack30.cpp"
   $331 = $25; //@line 223 "./src/cpp/unrar/unpack30.cpp"
   $332 = (($331) + -1)|0; //@line 223 "./src/cpp/unrar/unpack30.cpp"
   $25 = $332; //@line 223 "./src/cpp/unrar/unpack30.cpp"
  }
  $333 = $24; //@line 225 "./src/cpp/unrar/unpack30.cpp"
  $334 = ((($30)) + 68|0); //@line 225 "./src/cpp/unrar/unpack30.cpp"
  HEAP32[$334>>2] = $333; //@line 225 "./src/cpp/unrar/unpack30.cpp"
  $335 = ((($30)) + 4|0); //@line 227 "./src/cpp/unrar/unpack30.cpp"
  $336 = ((($30)) + 132|0); //@line 227 "./src/cpp/unrar/unpack30.cpp"
  $337 = ((($336)) + 11460|0); //@line 227 "./src/cpp/unrar/unpack30.cpp"
  $338 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($30,$335,$337)|0); //@line 227 "./src/cpp/unrar/unpack30.cpp"
  $26 = $338; //@line 227 "./src/cpp/unrar/unpack30.cpp"
  $339 = $26; //@line 228 "./src/cpp/unrar/unpack30.cpp"
  $340 = (5417 + ($339)|0); //@line 228 "./src/cpp/unrar/unpack30.cpp"
  $341 = HEAP8[$340>>0]|0; //@line 228 "./src/cpp/unrar/unpack30.cpp"
  $342 = $341&255; //@line 228 "./src/cpp/unrar/unpack30.cpp"
  $343 = (($342) + 2)|0; //@line 228 "./src/cpp/unrar/unpack30.cpp"
  $27 = $343; //@line 228 "./src/cpp/unrar/unpack30.cpp"
  $344 = $26; //@line 229 "./src/cpp/unrar/unpack30.cpp"
  $345 = (5445 + ($344)|0); //@line 229 "./src/cpp/unrar/unpack30.cpp"
  $346 = HEAP8[$345>>0]|0; //@line 229 "./src/cpp/unrar/unpack30.cpp"
  $347 = $346&255; //@line 229 "./src/cpp/unrar/unpack30.cpp"
  $4 = $347; //@line 229 "./src/cpp/unrar/unpack30.cpp"
  $348 = ($347>>>0)>(0); //@line 229 "./src/cpp/unrar/unpack30.cpp"
  if ($348) {
   $349 = ((($30)) + 4|0); //@line 231 "./src/cpp/unrar/unpack30.cpp"
   $350 = (__ZN8BitInput7getbitsEv($349)|0); //@line 231 "./src/cpp/unrar/unpack30.cpp"
   $351 = $4; //@line 231 "./src/cpp/unrar/unpack30.cpp"
   $352 = (16 - ($351))|0; //@line 231 "./src/cpp/unrar/unpack30.cpp"
   $353 = $350 >>> $352; //@line 231 "./src/cpp/unrar/unpack30.cpp"
   $354 = $27; //@line 231 "./src/cpp/unrar/unpack30.cpp"
   $355 = (($354) + ($353))|0; //@line 231 "./src/cpp/unrar/unpack30.cpp"
   $27 = $355; //@line 231 "./src/cpp/unrar/unpack30.cpp"
   $356 = ((($30)) + 4|0); //@line 232 "./src/cpp/unrar/unpack30.cpp"
   $357 = $4; //@line 232 "./src/cpp/unrar/unpack30.cpp"
   __ZN8BitInput7addbitsEj($356,$357); //@line 232 "./src/cpp/unrar/unpack30.cpp"
  }
  $358 = $27; //@line 234 "./src/cpp/unrar/unpack30.cpp"
  $359 = ((($30)) + 88|0); //@line 234 "./src/cpp/unrar/unpack30.cpp"
  HEAP32[$359>>2] = $358; //@line 234 "./src/cpp/unrar/unpack30.cpp"
  $360 = $27; //@line 235 "./src/cpp/unrar/unpack30.cpp"
  $361 = $24; //@line 235 "./src/cpp/unrar/unpack30.cpp"
  __ZN6Unpack10CopyStringEjj($30,$360,$361); //@line 235 "./src/cpp/unrar/unpack30.cpp"
 }
 if ((label|0) == 19) {
  $119 = ((($30)) + 19528|0); //@line 65 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$119>>0] = 0; //@line 65 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return; //@line 253 "./src/cpp/unrar/unpack30.cpp"
 }
 else if ((label|0) == 22) {
  $127 = ((($30)) + 39104|0); //@line 77 "./src/cpp/unrar/unpack30.cpp"
  __ZN8ModelPPM7CleanUpEv($127); //@line 77 "./src/cpp/unrar/unpack30.cpp"
  $128 = ((($30)) + 58952|0); //@line 78 "./src/cpp/unrar/unpack30.cpp"
  HEAP32[$128>>2] = 0; //@line 78 "./src/cpp/unrar/unpack30.cpp"
 }
 else if ((label|0) == 83) {
  STACKTOP = sp;return; //@line 253 "./src/cpp/unrar/unpack30.cpp"
 }
 __ZN6Unpack13UnpWriteBuf30Ev($30); //@line 252 "./src/cpp/unrar/unpack30.cpp"
 STACKTOP = sp;return; //@line 253 "./src/cpp/unrar/unpack30.cpp"
}
function __ZN6Unpack12UnpReadBuf30Ev($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 12|0;
 $2 = $0;
 $5 = $2;
 $6 = ((($5)) + 104|0); //@line 535 "./src/cpp/unrar/unpack30.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 535 "./src/cpp/unrar/unpack30.cpp"
 $8 = ((($5)) + 4|0); //@line 535 "./src/cpp/unrar/unpack30.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 535 "./src/cpp/unrar/unpack30.cpp"
 $10 = (($7) - ($9))|0; //@line 535 "./src/cpp/unrar/unpack30.cpp"
 $3 = $10; //@line 535 "./src/cpp/unrar/unpack30.cpp"
 $11 = $3; //@line 536 "./src/cpp/unrar/unpack30.cpp"
 $12 = ($11|0)<(0); //@line 536 "./src/cpp/unrar/unpack30.cpp"
 if ($12) {
  $$expand_i1_val = 0; //@line 537 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$1>>0] = $$expand_i1_val; //@line 537 "./src/cpp/unrar/unpack30.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 558 "./src/cpp/unrar/unpack30.cpp"
  $54 = $$pre_trunc&1; //@line 558 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return ($54|0); //@line 558 "./src/cpp/unrar/unpack30.cpp"
 }
 $13 = ((($5)) + 4|0); //@line 538 "./src/cpp/unrar/unpack30.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 538 "./src/cpp/unrar/unpack30.cpp"
 $15 = ($14|0)>(16384); //@line 538 "./src/cpp/unrar/unpack30.cpp"
 if ($15) {
  $16 = $3; //@line 546 "./src/cpp/unrar/unpack30.cpp"
  $17 = ($16|0)>(0); //@line 546 "./src/cpp/unrar/unpack30.cpp"
  if ($17) {
   $18 = ((($5)) + 4|0); //@line 547 "./src/cpp/unrar/unpack30.cpp"
   $19 = ((($18)) + 12|0); //@line 547 "./src/cpp/unrar/unpack30.cpp"
   $20 = HEAP32[$19>>2]|0; //@line 547 "./src/cpp/unrar/unpack30.cpp"
   $21 = ((($5)) + 4|0); //@line 547 "./src/cpp/unrar/unpack30.cpp"
   $22 = ((($21)) + 12|0); //@line 547 "./src/cpp/unrar/unpack30.cpp"
   $23 = HEAP32[$22>>2]|0; //@line 547 "./src/cpp/unrar/unpack30.cpp"
   $24 = ((($5)) + 4|0); //@line 547 "./src/cpp/unrar/unpack30.cpp"
   $25 = HEAP32[$24>>2]|0; //@line 547 "./src/cpp/unrar/unpack30.cpp"
   $26 = (($23) + ($25)|0); //@line 547 "./src/cpp/unrar/unpack30.cpp"
   $27 = $3; //@line 547 "./src/cpp/unrar/unpack30.cpp"
   _memmove(($20|0),($26|0),($27|0))|0; //@line 547 "./src/cpp/unrar/unpack30.cpp"
  }
  $28 = ((($5)) + 4|0); //@line 548 "./src/cpp/unrar/unpack30.cpp"
  HEAP32[$28>>2] = 0; //@line 548 "./src/cpp/unrar/unpack30.cpp"
  $29 = $3; //@line 549 "./src/cpp/unrar/unpack30.cpp"
  $30 = ((($5)) + 104|0); //@line 549 "./src/cpp/unrar/unpack30.cpp"
  HEAP32[$30>>2] = $29; //@line 549 "./src/cpp/unrar/unpack30.cpp"
 } else {
  $31 = ((($5)) + 104|0); //@line 552 "./src/cpp/unrar/unpack30.cpp"
  $32 = HEAP32[$31>>2]|0; //@line 552 "./src/cpp/unrar/unpack30.cpp"
  $3 = $32; //@line 552 "./src/cpp/unrar/unpack30.cpp"
 }
 $33 = HEAP32[$5>>2]|0; //@line 553 "./src/cpp/unrar/unpack30.cpp"
 $34 = ((($5)) + 4|0); //@line 553 "./src/cpp/unrar/unpack30.cpp"
 $35 = ((($34)) + 12|0); //@line 553 "./src/cpp/unrar/unpack30.cpp"
 $36 = HEAP32[$35>>2]|0; //@line 553 "./src/cpp/unrar/unpack30.cpp"
 $37 = $3; //@line 553 "./src/cpp/unrar/unpack30.cpp"
 $38 = (($36) + ($37)|0); //@line 553 "./src/cpp/unrar/unpack30.cpp"
 $39 = $3; //@line 553 "./src/cpp/unrar/unpack30.cpp"
 $40 = (32768 - ($39))|0; //@line 553 "./src/cpp/unrar/unpack30.cpp"
 $41 = (__ZN11ComprDataIO7UnpReadEPhj($33,$38,$40)|0); //@line 553 "./src/cpp/unrar/unpack30.cpp"
 $4 = $41; //@line 553 "./src/cpp/unrar/unpack30.cpp"
 $42 = $4; //@line 554 "./src/cpp/unrar/unpack30.cpp"
 $43 = ($42|0)>(0); //@line 554 "./src/cpp/unrar/unpack30.cpp"
 if ($43) {
  $44 = $4; //@line 555 "./src/cpp/unrar/unpack30.cpp"
  $45 = ((($5)) + 104|0); //@line 555 "./src/cpp/unrar/unpack30.cpp"
  $46 = HEAP32[$45>>2]|0; //@line 555 "./src/cpp/unrar/unpack30.cpp"
  $47 = (($46) + ($44))|0; //@line 555 "./src/cpp/unrar/unpack30.cpp"
  HEAP32[$45>>2] = $47; //@line 555 "./src/cpp/unrar/unpack30.cpp"
 }
 $48 = ((($5)) + 104|0); //@line 556 "./src/cpp/unrar/unpack30.cpp"
 $49 = HEAP32[$48>>2]|0; //@line 556 "./src/cpp/unrar/unpack30.cpp"
 $50 = (($49) - 30)|0; //@line 556 "./src/cpp/unrar/unpack30.cpp"
 $51 = ((($5)) + 108|0); //@line 556 "./src/cpp/unrar/unpack30.cpp"
 HEAP32[$51>>2] = $50; //@line 556 "./src/cpp/unrar/unpack30.cpp"
 $52 = $4; //@line 557 "./src/cpp/unrar/unpack30.cpp"
 $53 = ($52|0)!=(-1); //@line 557 "./src/cpp/unrar/unpack30.cpp"
 $$expand_i1_val2 = $53&1; //@line 557 "./src/cpp/unrar/unpack30.cpp"
 HEAP8[$1>>0] = $$expand_i1_val2; //@line 557 "./src/cpp/unrar/unpack30.cpp"
 $$pre_trunc = HEAP8[$1>>0]|0; //@line 558 "./src/cpp/unrar/unpack30.cpp"
 $54 = $$pre_trunc&1; //@line 558 "./src/cpp/unrar/unpack30.cpp"
 STACKTOP = sp;return ($54|0); //@line 558 "./src/cpp/unrar/unpack30.cpp"
}
function __ZN6Unpack12ReadTables30Ev($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$expand_i1_val8 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(480|0);
 $1 = sp + 464|0;
 $3 = sp + 444|0;
 $4 = sp + 40|0;
 $2 = $0;
 $14 = $2;
 $15 = ((($14)) + 4|0); //@line 713 "./src/cpp/unrar/unpack30.cpp"
 $16 = HEAP32[$15>>2]|0; //@line 713 "./src/cpp/unrar/unpack30.cpp"
 $17 = ((($14)) + 104|0); //@line 713 "./src/cpp/unrar/unpack30.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 713 "./src/cpp/unrar/unpack30.cpp"
 $19 = (($18) - 25)|0; //@line 713 "./src/cpp/unrar/unpack30.cpp"
 $20 = ($16|0)>($19|0); //@line 713 "./src/cpp/unrar/unpack30.cpp"
 if ($20) {
  $21 = (__ZN6Unpack12UnpReadBuf30Ev($14)|0); //@line 714 "./src/cpp/unrar/unpack30.cpp"
  if (!($21)) {
   $$expand_i1_val = 0; //@line 715 "./src/cpp/unrar/unpack30.cpp"
   HEAP8[$1>>0] = $$expand_i1_val; //@line 715 "./src/cpp/unrar/unpack30.cpp"
   $$pre_trunc = HEAP8[$1>>0]|0; //@line 814 "./src/cpp/unrar/unpack30.cpp"
   $174 = $$pre_trunc&1; //@line 814 "./src/cpp/unrar/unpack30.cpp"
   STACKTOP = sp;return ($174|0); //@line 814 "./src/cpp/unrar/unpack30.cpp"
  }
 }
 $22 = ((($14)) + 4|0); //@line 716 "./src/cpp/unrar/unpack30.cpp"
 $23 = ((($14)) + 4|0); //@line 716 "./src/cpp/unrar/unpack30.cpp"
 $24 = ((($23)) + 4|0); //@line 716 "./src/cpp/unrar/unpack30.cpp"
 $25 = HEAP32[$24>>2]|0; //@line 716 "./src/cpp/unrar/unpack30.cpp"
 $26 = (8 - ($25))|0; //@line 716 "./src/cpp/unrar/unpack30.cpp"
 $27 = $26 & 7; //@line 716 "./src/cpp/unrar/unpack30.cpp"
 __ZN8BitInput8faddbitsEj($22,$27); //@line 716 "./src/cpp/unrar/unpack30.cpp"
 $28 = ((($14)) + 4|0); //@line 717 "./src/cpp/unrar/unpack30.cpp"
 $29 = (__ZN8BitInput8fgetbitsEv($28)|0); //@line 717 "./src/cpp/unrar/unpack30.cpp"
 $5 = $29; //@line 717 "./src/cpp/unrar/unpack30.cpp"
 $30 = $5; //@line 718 "./src/cpp/unrar/unpack30.cpp"
 $31 = $30 & 32768; //@line 718 "./src/cpp/unrar/unpack30.cpp"
 $32 = ($31|0)!=(0); //@line 718 "./src/cpp/unrar/unpack30.cpp"
 $33 = ((($14)) + 58952|0);
 if ($32) {
  HEAP32[$33>>2] = 1; //@line 720 "./src/cpp/unrar/unpack30.cpp"
  $34 = ((($14)) + 39104|0); //@line 721 "./src/cpp/unrar/unpack30.cpp"
  $35 = ((($14)) + 58544|0); //@line 721 "./src/cpp/unrar/unpack30.cpp"
  $36 = (__ZN8ModelPPM10DecodeInitEP6UnpackRi($34,$14,$35)|0); //@line 721 "./src/cpp/unrar/unpack30.cpp"
  $$expand_i1_val2 = $36&1; //@line 721 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$1>>0] = $$expand_i1_val2; //@line 721 "./src/cpp/unrar/unpack30.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 814 "./src/cpp/unrar/unpack30.cpp"
  $174 = $$pre_trunc&1; //@line 814 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return ($174|0); //@line 814 "./src/cpp/unrar/unpack30.cpp"
 }
 HEAP32[$33>>2] = 0; //@line 723 "./src/cpp/unrar/unpack30.cpp"
 $37 = ((($14)) + 39096|0); //@line 725 "./src/cpp/unrar/unpack30.cpp"
 HEAP32[$37>>2] = 0; //@line 725 "./src/cpp/unrar/unpack30.cpp"
 $38 = ((($14)) + 39100|0); //@line 726 "./src/cpp/unrar/unpack30.cpp"
 HEAP32[$38>>2] = 0; //@line 726 "./src/cpp/unrar/unpack30.cpp"
 $39 = $5; //@line 728 "./src/cpp/unrar/unpack30.cpp"
 $40 = $39 & 16384; //@line 728 "./src/cpp/unrar/unpack30.cpp"
 $41 = ($40|0)!=(0); //@line 728 "./src/cpp/unrar/unpack30.cpp"
 if (!($41)) {
  $42 = ((($14)) + 58548|0); //@line 729 "./src/cpp/unrar/unpack30.cpp"
  _memset(($42|0),0,404)|0; //@line 729 "./src/cpp/unrar/unpack30.cpp"
 }
 $43 = ((($14)) + 4|0); //@line 730 "./src/cpp/unrar/unpack30.cpp"
 __ZN8BitInput8faddbitsEj($43,2); //@line 730 "./src/cpp/unrar/unpack30.cpp"
 $6 = 0; //@line 732 "./src/cpp/unrar/unpack30.cpp"
 while(1) {
  $44 = $6; //@line 732 "./src/cpp/unrar/unpack30.cpp"
  $45 = ($44>>>0)<(20); //@line 732 "./src/cpp/unrar/unpack30.cpp"
  if (!($45)) {
   break;
  }
  $46 = ((($14)) + 4|0); //@line 734 "./src/cpp/unrar/unpack30.cpp"
  $47 = (__ZN8BitInput8fgetbitsEv($46)|0); //@line 734 "./src/cpp/unrar/unpack30.cpp"
  $48 = $47 >>> 12; //@line 734 "./src/cpp/unrar/unpack30.cpp"
  $49 = $48&255; //@line 734 "./src/cpp/unrar/unpack30.cpp"
  $50 = $49&255; //@line 734 "./src/cpp/unrar/unpack30.cpp"
  $7 = $50; //@line 734 "./src/cpp/unrar/unpack30.cpp"
  $51 = ((($14)) + 4|0); //@line 735 "./src/cpp/unrar/unpack30.cpp"
  __ZN8BitInput8faddbitsEj($51,4); //@line 735 "./src/cpp/unrar/unpack30.cpp"
  $52 = $7; //@line 736 "./src/cpp/unrar/unpack30.cpp"
  $53 = ($52|0)==(15); //@line 736 "./src/cpp/unrar/unpack30.cpp"
  do {
   if ($53) {
    $54 = ((($14)) + 4|0); //@line 738 "./src/cpp/unrar/unpack30.cpp"
    $55 = (__ZN8BitInput8fgetbitsEv($54)|0); //@line 738 "./src/cpp/unrar/unpack30.cpp"
    $56 = $55 >>> 12; //@line 738 "./src/cpp/unrar/unpack30.cpp"
    $57 = $56&255; //@line 738 "./src/cpp/unrar/unpack30.cpp"
    $58 = $57&255; //@line 738 "./src/cpp/unrar/unpack30.cpp"
    $8 = $58; //@line 738 "./src/cpp/unrar/unpack30.cpp"
    $59 = ((($14)) + 4|0); //@line 739 "./src/cpp/unrar/unpack30.cpp"
    __ZN8BitInput8faddbitsEj($59,4); //@line 739 "./src/cpp/unrar/unpack30.cpp"
    $60 = $8; //@line 740 "./src/cpp/unrar/unpack30.cpp"
    $61 = ($60|0)==(0); //@line 740 "./src/cpp/unrar/unpack30.cpp"
    if ($61) {
     $62 = $6; //@line 741 "./src/cpp/unrar/unpack30.cpp"
     $63 = (($3) + ($62)|0); //@line 741 "./src/cpp/unrar/unpack30.cpp"
     HEAP8[$63>>0] = 15; //@line 741 "./src/cpp/unrar/unpack30.cpp"
     break;
    }
    $64 = $8; //@line 744 "./src/cpp/unrar/unpack30.cpp"
    $65 = (($64) + 2)|0; //@line 744 "./src/cpp/unrar/unpack30.cpp"
    $8 = $65; //@line 744 "./src/cpp/unrar/unpack30.cpp"
    while(1) {
     $66 = $8; //@line 745 "./src/cpp/unrar/unpack30.cpp"
     $67 = (($66) + -1)|0; //@line 745 "./src/cpp/unrar/unpack30.cpp"
     $8 = $67; //@line 745 "./src/cpp/unrar/unpack30.cpp"
     $68 = ($66|0)>(0); //@line 745 "./src/cpp/unrar/unpack30.cpp"
     $69 = $6; //@line 745 "./src/cpp/unrar/unpack30.cpp"
     $70 = ($69>>>0)<(20); //@line 745 "./src/cpp/unrar/unpack30.cpp"
     $71 = $68 ? $70 : 0; //@line 745 "./src/cpp/unrar/unpack30.cpp"
     $72 = $6;
     if (!($71)) {
      break;
     }
     $73 = (($72) + 1)|0; //@line 746 "./src/cpp/unrar/unpack30.cpp"
     $6 = $73; //@line 746 "./src/cpp/unrar/unpack30.cpp"
     $74 = (($3) + ($72)|0); //@line 746 "./src/cpp/unrar/unpack30.cpp"
     HEAP8[$74>>0] = 0; //@line 746 "./src/cpp/unrar/unpack30.cpp"
    }
    $75 = (($72) + -1)|0; //@line 747 "./src/cpp/unrar/unpack30.cpp"
    $6 = $75; //@line 747 "./src/cpp/unrar/unpack30.cpp"
   } else {
    $76 = $7; //@line 751 "./src/cpp/unrar/unpack30.cpp"
    $77 = $76&255; //@line 751 "./src/cpp/unrar/unpack30.cpp"
    $78 = $6; //@line 751 "./src/cpp/unrar/unpack30.cpp"
    $79 = (($3) + ($78)|0); //@line 751 "./src/cpp/unrar/unpack30.cpp"
    HEAP8[$79>>0] = $77; //@line 751 "./src/cpp/unrar/unpack30.cpp"
   }
  } while(0);
  $80 = $6; //@line 732 "./src/cpp/unrar/unpack30.cpp"
  $81 = (($80) + 1)|0; //@line 732 "./src/cpp/unrar/unpack30.cpp"
  $6 = $81; //@line 732 "./src/cpp/unrar/unpack30.cpp"
 }
 $82 = ((($14)) + 132|0); //@line 753 "./src/cpp/unrar/unpack30.cpp"
 $83 = ((($82)) + 15280|0); //@line 753 "./src/cpp/unrar/unpack30.cpp"
 __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($14,$3,$83,20); //@line 753 "./src/cpp/unrar/unpack30.cpp"
 $9 = 404; //@line 755 "./src/cpp/unrar/unpack30.cpp"
 $10 = 0; //@line 756 "./src/cpp/unrar/unpack30.cpp"
 L28: while(1) {
  $84 = $10; //@line 756 "./src/cpp/unrar/unpack30.cpp"
  $85 = ($84|0)<(404); //@line 756 "./src/cpp/unrar/unpack30.cpp"
  if (!($85)) {
   break;
  }
  $86 = ((($14)) + 4|0); //@line 758 "./src/cpp/unrar/unpack30.cpp"
  $87 = HEAP32[$86>>2]|0; //@line 758 "./src/cpp/unrar/unpack30.cpp"
  $88 = ((($14)) + 104|0); //@line 758 "./src/cpp/unrar/unpack30.cpp"
  $89 = HEAP32[$88>>2]|0; //@line 758 "./src/cpp/unrar/unpack30.cpp"
  $90 = (($89) - 5)|0; //@line 758 "./src/cpp/unrar/unpack30.cpp"
  $91 = ($87|0)>($90|0); //@line 758 "./src/cpp/unrar/unpack30.cpp"
  if ($91) {
   $92 = (__ZN6Unpack12UnpReadBuf30Ev($14)|0); //@line 759 "./src/cpp/unrar/unpack30.cpp"
   if (!($92)) {
    label = 23;
    break;
   }
  }
  $93 = ((($14)) + 4|0); //@line 761 "./src/cpp/unrar/unpack30.cpp"
  $94 = ((($14)) + 132|0); //@line 761 "./src/cpp/unrar/unpack30.cpp"
  $95 = ((($94)) + 15280|0); //@line 761 "./src/cpp/unrar/unpack30.cpp"
  $96 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($14,$93,$95)|0); //@line 761 "./src/cpp/unrar/unpack30.cpp"
  $11 = $96; //@line 761 "./src/cpp/unrar/unpack30.cpp"
  $97 = $11; //@line 762 "./src/cpp/unrar/unpack30.cpp"
  $98 = ($97|0)<(16); //@line 762 "./src/cpp/unrar/unpack30.cpp"
  $99 = $11;
  if ($98) {
   $100 = ((($14)) + 58548|0); //@line 764 "./src/cpp/unrar/unpack30.cpp"
   $101 = $10; //@line 764 "./src/cpp/unrar/unpack30.cpp"
   $102 = (($100) + ($101)|0); //@line 764 "./src/cpp/unrar/unpack30.cpp"
   $103 = HEAP8[$102>>0]|0; //@line 764 "./src/cpp/unrar/unpack30.cpp"
   $104 = $103&255; //@line 764 "./src/cpp/unrar/unpack30.cpp"
   $105 = (($99) + ($104))|0; //@line 764 "./src/cpp/unrar/unpack30.cpp"
   $106 = $105 & 15; //@line 764 "./src/cpp/unrar/unpack30.cpp"
   $107 = $106&255; //@line 764 "./src/cpp/unrar/unpack30.cpp"
   $108 = $10; //@line 764 "./src/cpp/unrar/unpack30.cpp"
   $109 = (($4) + ($108)|0); //@line 764 "./src/cpp/unrar/unpack30.cpp"
   HEAP8[$109>>0] = $107; //@line 764 "./src/cpp/unrar/unpack30.cpp"
   $110 = $10; //@line 765 "./src/cpp/unrar/unpack30.cpp"
   $111 = (($110) + 1)|0; //@line 765 "./src/cpp/unrar/unpack30.cpp"
   $10 = $111; //@line 765 "./src/cpp/unrar/unpack30.cpp"
   continue;
  }
  $112 = ($99|0)<(18); //@line 768 "./src/cpp/unrar/unpack30.cpp"
  $113 = $11;
  if (!($112)) {
   $139 = ($113|0)==(18); //@line 791 "./src/cpp/unrar/unpack30.cpp"
   $140 = ((($14)) + 4|0);
   $141 = (__ZN8BitInput8fgetbitsEv($140)|0); //@line 793 "./src/cpp/unrar/unpack30.cpp"
   if ($139) {
    $142 = $141 >>> 13; //@line 793 "./src/cpp/unrar/unpack30.cpp"
    $143 = (($142) + 3)|0; //@line 793 "./src/cpp/unrar/unpack30.cpp"
    $13 = $143; //@line 793 "./src/cpp/unrar/unpack30.cpp"
    $144 = ((($14)) + 4|0); //@line 794 "./src/cpp/unrar/unpack30.cpp"
    __ZN8BitInput8faddbitsEj($144,3); //@line 794 "./src/cpp/unrar/unpack30.cpp"
   } else {
    $145 = $141 >>> 9; //@line 798 "./src/cpp/unrar/unpack30.cpp"
    $146 = (($145) + 11)|0; //@line 798 "./src/cpp/unrar/unpack30.cpp"
    $13 = $146; //@line 798 "./src/cpp/unrar/unpack30.cpp"
    $147 = ((($14)) + 4|0); //@line 799 "./src/cpp/unrar/unpack30.cpp"
    __ZN8BitInput8faddbitsEj($147,7); //@line 799 "./src/cpp/unrar/unpack30.cpp"
   }
   while(1) {
    $148 = $13; //@line 801 "./src/cpp/unrar/unpack30.cpp"
    $149 = (($148) + -1)|0; //@line 801 "./src/cpp/unrar/unpack30.cpp"
    $13 = $149; //@line 801 "./src/cpp/unrar/unpack30.cpp"
    $150 = ($148|0)>(0); //@line 801 "./src/cpp/unrar/unpack30.cpp"
    $151 = $10; //@line 801 "./src/cpp/unrar/unpack30.cpp"
    $152 = ($151|0)<(404); //@line 801 "./src/cpp/unrar/unpack30.cpp"
    $153 = $150 ? $152 : 0; //@line 801 "./src/cpp/unrar/unpack30.cpp"
    if (!($153)) {
     continue L28;
    }
    $154 = $10; //@line 802 "./src/cpp/unrar/unpack30.cpp"
    $155 = (($154) + 1)|0; //@line 802 "./src/cpp/unrar/unpack30.cpp"
    $10 = $155; //@line 802 "./src/cpp/unrar/unpack30.cpp"
    $156 = (($4) + ($154)|0); //@line 802 "./src/cpp/unrar/unpack30.cpp"
    HEAP8[$156>>0] = 0; //@line 802 "./src/cpp/unrar/unpack30.cpp"
   }
  }
  $114 = ($113|0)==(16); //@line 771 "./src/cpp/unrar/unpack30.cpp"
  $115 = ((($14)) + 4|0);
  $116 = (__ZN8BitInput8fgetbitsEv($115)|0); //@line 773 "./src/cpp/unrar/unpack30.cpp"
  if ($114) {
   $117 = $116 >>> 13; //@line 773 "./src/cpp/unrar/unpack30.cpp"
   $118 = (($117) + 3)|0; //@line 773 "./src/cpp/unrar/unpack30.cpp"
   $12 = $118; //@line 773 "./src/cpp/unrar/unpack30.cpp"
   $119 = ((($14)) + 4|0); //@line 774 "./src/cpp/unrar/unpack30.cpp"
   __ZN8BitInput8faddbitsEj($119,3); //@line 774 "./src/cpp/unrar/unpack30.cpp"
  } else {
   $120 = $116 >>> 9; //@line 778 "./src/cpp/unrar/unpack30.cpp"
   $121 = (($120) + 11)|0; //@line 778 "./src/cpp/unrar/unpack30.cpp"
   $12 = $121; //@line 778 "./src/cpp/unrar/unpack30.cpp"
   $122 = ((($14)) + 4|0); //@line 779 "./src/cpp/unrar/unpack30.cpp"
   __ZN8BitInput8faddbitsEj($122,7); //@line 779 "./src/cpp/unrar/unpack30.cpp"
  }
  $123 = $10; //@line 781 "./src/cpp/unrar/unpack30.cpp"
  $124 = ($123|0)>(0); //@line 781 "./src/cpp/unrar/unpack30.cpp"
  if (!($124)) {
   continue;
  }
  while(1) {
   $125 = $12; //@line 782 "./src/cpp/unrar/unpack30.cpp"
   $126 = (($125) + -1)|0; //@line 782 "./src/cpp/unrar/unpack30.cpp"
   $12 = $126; //@line 782 "./src/cpp/unrar/unpack30.cpp"
   $127 = ($125|0)>(0); //@line 782 "./src/cpp/unrar/unpack30.cpp"
   $128 = $10; //@line 782 "./src/cpp/unrar/unpack30.cpp"
   $129 = ($128|0)<(404); //@line 782 "./src/cpp/unrar/unpack30.cpp"
   $130 = $127 ? $129 : 0; //@line 782 "./src/cpp/unrar/unpack30.cpp"
   if (!($130)) {
    continue L28;
   }
   $131 = $10; //@line 784 "./src/cpp/unrar/unpack30.cpp"
   $132 = (($131) - 1)|0; //@line 784 "./src/cpp/unrar/unpack30.cpp"
   $133 = (($4) + ($132)|0); //@line 784 "./src/cpp/unrar/unpack30.cpp"
   $134 = HEAP8[$133>>0]|0; //@line 784 "./src/cpp/unrar/unpack30.cpp"
   $135 = $10; //@line 784 "./src/cpp/unrar/unpack30.cpp"
   $136 = (($4) + ($135)|0); //@line 784 "./src/cpp/unrar/unpack30.cpp"
   HEAP8[$136>>0] = $134; //@line 784 "./src/cpp/unrar/unpack30.cpp"
   $137 = $10; //@line 785 "./src/cpp/unrar/unpack30.cpp"
   $138 = (($137) + 1)|0; //@line 785 "./src/cpp/unrar/unpack30.cpp"
   $10 = $138; //@line 785 "./src/cpp/unrar/unpack30.cpp"
  }
 }
 if ((label|0) == 23) {
  $$expand_i1_val4 = 0; //@line 760 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$1>>0] = $$expand_i1_val4; //@line 760 "./src/cpp/unrar/unpack30.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 814 "./src/cpp/unrar/unpack30.cpp"
  $174 = $$pre_trunc&1; //@line 814 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return ($174|0); //@line 814 "./src/cpp/unrar/unpack30.cpp"
 }
 $157 = ((($14)) + 58956|0); //@line 805 "./src/cpp/unrar/unpack30.cpp"
 HEAP8[$157>>0] = 1; //@line 805 "./src/cpp/unrar/unpack30.cpp"
 $158 = ((($14)) + 4|0); //@line 806 "./src/cpp/unrar/unpack30.cpp"
 $159 = HEAP32[$158>>2]|0; //@line 806 "./src/cpp/unrar/unpack30.cpp"
 $160 = ((($14)) + 104|0); //@line 806 "./src/cpp/unrar/unpack30.cpp"
 $161 = HEAP32[$160>>2]|0; //@line 806 "./src/cpp/unrar/unpack30.cpp"
 $162 = ($159|0)>($161|0); //@line 806 "./src/cpp/unrar/unpack30.cpp"
 if ($162) {
  $$expand_i1_val6 = 0; //@line 807 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$1>>0] = $$expand_i1_val6; //@line 807 "./src/cpp/unrar/unpack30.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 814 "./src/cpp/unrar/unpack30.cpp"
  $174 = $$pre_trunc&1; //@line 814 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return ($174|0); //@line 814 "./src/cpp/unrar/unpack30.cpp"
 } else {
  $163 = ((($14)) + 132|0); //@line 808 "./src/cpp/unrar/unpack30.cpp"
  __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($14,$4,$163,299); //@line 808 "./src/cpp/unrar/unpack30.cpp"
  $164 = ((($4)) + 299|0); //@line 809 "./src/cpp/unrar/unpack30.cpp"
  $165 = ((($14)) + 132|0); //@line 809 "./src/cpp/unrar/unpack30.cpp"
  $166 = ((($165)) + 3820|0); //@line 809 "./src/cpp/unrar/unpack30.cpp"
  __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($14,$164,$166,60); //@line 809 "./src/cpp/unrar/unpack30.cpp"
  $167 = ((($4)) + 359|0); //@line 810 "./src/cpp/unrar/unpack30.cpp"
  $168 = ((($14)) + 132|0); //@line 810 "./src/cpp/unrar/unpack30.cpp"
  $169 = ((($168)) + 7640|0); //@line 810 "./src/cpp/unrar/unpack30.cpp"
  __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($14,$167,$169,17); //@line 810 "./src/cpp/unrar/unpack30.cpp"
  $170 = ((($4)) + 376|0); //@line 811 "./src/cpp/unrar/unpack30.cpp"
  $171 = ((($14)) + 132|0); //@line 811 "./src/cpp/unrar/unpack30.cpp"
  $172 = ((($171)) + 11460|0); //@line 811 "./src/cpp/unrar/unpack30.cpp"
  __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($14,$170,$172,28); //@line 811 "./src/cpp/unrar/unpack30.cpp"
  $173 = ((($14)) + 58548|0); //@line 812 "./src/cpp/unrar/unpack30.cpp"
  _memcpy(($173|0),($4|0),404)|0; //@line 812 "./src/cpp/unrar/unpack30.cpp"
  $$expand_i1_val8 = 1; //@line 813 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$1>>0] = $$expand_i1_val8; //@line 813 "./src/cpp/unrar/unpack30.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 814 "./src/cpp/unrar/unpack30.cpp"
  $174 = $$pre_trunc&1; //@line 814 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return ($174|0); //@line 814 "./src/cpp/unrar/unpack30.cpp"
 }
 return (0)|0;
}
function __ZN6Unpack13UnpWriteBuf30Ev($0) {
 $0 = $0|0;
 var $$sink = 0, $$sink2 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $1 = $0;
 $19 = $1;
 $20 = ((($19)) + 100|0); //@line 563 "./src/cpp/unrar/unpack30.cpp"
 $21 = HEAP32[$20>>2]|0; //@line 563 "./src/cpp/unrar/unpack30.cpp"
 $2 = $21; //@line 563 "./src/cpp/unrar/unpack30.cpp"
 $22 = ((($19)) + 96|0); //@line 564 "./src/cpp/unrar/unpack30.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 564 "./src/cpp/unrar/unpack30.cpp"
 $24 = $2; //@line 564 "./src/cpp/unrar/unpack30.cpp"
 $25 = (($23) - ($24))|0; //@line 564 "./src/cpp/unrar/unpack30.cpp"
 $26 = ((($19)) + 59088|0); //@line 564 "./src/cpp/unrar/unpack30.cpp"
 $27 = HEAP32[$26>>2]|0; //@line 564 "./src/cpp/unrar/unpack30.cpp"
 $28 = $25 & $27; //@line 564 "./src/cpp/unrar/unpack30.cpp"
 $3 = $28; //@line 564 "./src/cpp/unrar/unpack30.cpp"
 $4 = 0; //@line 565 "./src/cpp/unrar/unpack30.cpp"
 L1: while(1) {
  $29 = $4; //@line 565 "./src/cpp/unrar/unpack30.cpp"
  $30 = ((($19)) + 59048|0); //@line 565 "./src/cpp/unrar/unpack30.cpp"
  $31 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($30)|0); //@line 565 "./src/cpp/unrar/unpack30.cpp"
  $32 = ($29>>>0)<($31>>>0); //@line 565 "./src/cpp/unrar/unpack30.cpp"
  if (!($32)) {
   label = 47;
   break;
  }
  $33 = ((($19)) + 59048|0); //@line 573 "./src/cpp/unrar/unpack30.cpp"
  $34 = $4; //@line 573 "./src/cpp/unrar/unpack30.cpp"
  $35 = (__ZNK5ArrayIP14UnpackFilter30EixEj($33,$34)|0); //@line 573 "./src/cpp/unrar/unpack30.cpp"
  $36 = HEAP32[$35>>2]|0; //@line 573 "./src/cpp/unrar/unpack30.cpp"
  $5 = $36; //@line 573 "./src/cpp/unrar/unpack30.cpp"
  $37 = $5; //@line 574 "./src/cpp/unrar/unpack30.cpp"
  $38 = ($37|0)==(0|0); //@line 574 "./src/cpp/unrar/unpack30.cpp"
  do {
   if (!($38)) {
    $39 = $5; //@line 576 "./src/cpp/unrar/unpack30.cpp"
    $40 = ((($39)) + 12|0); //@line 576 "./src/cpp/unrar/unpack30.cpp"
    $41 = HEAP8[$40>>0]|0; //@line 576 "./src/cpp/unrar/unpack30.cpp"
    $42 = $41&1; //@line 576 "./src/cpp/unrar/unpack30.cpp"
    $43 = $5;
    if ($42) {
     $44 = ((($43)) + 12|0); //@line 578 "./src/cpp/unrar/unpack30.cpp"
     HEAP8[$44>>0] = 0; //@line 578 "./src/cpp/unrar/unpack30.cpp"
     break;
    }
    $45 = HEAP32[$43>>2]|0; //@line 581 "./src/cpp/unrar/unpack30.cpp"
    $6 = $45; //@line 581 "./src/cpp/unrar/unpack30.cpp"
    $46 = $5; //@line 582 "./src/cpp/unrar/unpack30.cpp"
    $47 = ((($46)) + 4|0); //@line 582 "./src/cpp/unrar/unpack30.cpp"
    $48 = HEAP32[$47>>2]|0; //@line 582 "./src/cpp/unrar/unpack30.cpp"
    $7 = $48; //@line 582 "./src/cpp/unrar/unpack30.cpp"
    $49 = $6; //@line 583 "./src/cpp/unrar/unpack30.cpp"
    $50 = $2; //@line 583 "./src/cpp/unrar/unpack30.cpp"
    $51 = (($49) - ($50))|0; //@line 583 "./src/cpp/unrar/unpack30.cpp"
    $52 = ((($19)) + 59088|0); //@line 583 "./src/cpp/unrar/unpack30.cpp"
    $53 = HEAP32[$52>>2]|0; //@line 583 "./src/cpp/unrar/unpack30.cpp"
    $54 = $51 & $53; //@line 583 "./src/cpp/unrar/unpack30.cpp"
    $55 = $3; //@line 583 "./src/cpp/unrar/unpack30.cpp"
    $56 = ($54>>>0)<($55>>>0); //@line 583 "./src/cpp/unrar/unpack30.cpp"
    if ($56) {
     $57 = $2; //@line 585 "./src/cpp/unrar/unpack30.cpp"
     $58 = $6; //@line 585 "./src/cpp/unrar/unpack30.cpp"
     $59 = ($57|0)!=($58|0); //@line 585 "./src/cpp/unrar/unpack30.cpp"
     if ($59) {
      $60 = $2; //@line 587 "./src/cpp/unrar/unpack30.cpp"
      $61 = $6; //@line 587 "./src/cpp/unrar/unpack30.cpp"
      __ZN6Unpack12UnpWriteAreaEjj($19,$60,$61); //@line 587 "./src/cpp/unrar/unpack30.cpp"
      $62 = $6; //@line 588 "./src/cpp/unrar/unpack30.cpp"
      $2 = $62; //@line 588 "./src/cpp/unrar/unpack30.cpp"
      $63 = ((($19)) + 96|0); //@line 589 "./src/cpp/unrar/unpack30.cpp"
      $64 = HEAP32[$63>>2]|0; //@line 589 "./src/cpp/unrar/unpack30.cpp"
      $65 = $2; //@line 589 "./src/cpp/unrar/unpack30.cpp"
      $66 = (($64) - ($65))|0; //@line 589 "./src/cpp/unrar/unpack30.cpp"
      $67 = ((($19)) + 59088|0); //@line 589 "./src/cpp/unrar/unpack30.cpp"
      $68 = HEAP32[$67>>2]|0; //@line 589 "./src/cpp/unrar/unpack30.cpp"
      $69 = $66 & $68; //@line 589 "./src/cpp/unrar/unpack30.cpp"
      $3 = $69; //@line 589 "./src/cpp/unrar/unpack30.cpp"
     }
     $70 = $7; //@line 591 "./src/cpp/unrar/unpack30.cpp"
     $71 = $3; //@line 591 "./src/cpp/unrar/unpack30.cpp"
     $72 = ($70>>>0)<=($71>>>0); //@line 591 "./src/cpp/unrar/unpack30.cpp"
     if (!($72)) {
      break L1;
     }
     $73 = $6; //@line 593 "./src/cpp/unrar/unpack30.cpp"
     $74 = $7; //@line 593 "./src/cpp/unrar/unpack30.cpp"
     $75 = (($73) + ($74))|0; //@line 593 "./src/cpp/unrar/unpack30.cpp"
     $76 = ((($19)) + 59088|0); //@line 593 "./src/cpp/unrar/unpack30.cpp"
     $77 = HEAP32[$76>>2]|0; //@line 593 "./src/cpp/unrar/unpack30.cpp"
     $78 = $75 & $77; //@line 593 "./src/cpp/unrar/unpack30.cpp"
     $8 = $78; //@line 593 "./src/cpp/unrar/unpack30.cpp"
     $79 = $6; //@line 594 "./src/cpp/unrar/unpack30.cpp"
     $80 = $8; //@line 594 "./src/cpp/unrar/unpack30.cpp"
     $81 = ($79>>>0)<($80>>>0); //@line 594 "./src/cpp/unrar/unpack30.cpp"
     $82 = $8; //@line 594 "./src/cpp/unrar/unpack30.cpp"
     $83 = ($82|0)==(0); //@line 594 "./src/cpp/unrar/unpack30.cpp"
     $or$cond = $81 | $83; //@line 594 "./src/cpp/unrar/unpack30.cpp"
     if ($or$cond) {
      $84 = ((($19)) + 58960|0); //@line 595 "./src/cpp/unrar/unpack30.cpp"
      $85 = ((($19)) + 19236|0); //@line 595 "./src/cpp/unrar/unpack30.cpp"
      $86 = HEAP32[$85>>2]|0; //@line 595 "./src/cpp/unrar/unpack30.cpp"
      $87 = $6; //@line 595 "./src/cpp/unrar/unpack30.cpp"
      $88 = (($86) + ($87)|0); //@line 595 "./src/cpp/unrar/unpack30.cpp"
      $89 = $7; //@line 595 "./src/cpp/unrar/unpack30.cpp"
      __ZN5RarVM9SetMemoryEjPhj($84,0,$88,$89); //@line 595 "./src/cpp/unrar/unpack30.cpp"
     } else {
      $90 = ((($19)) + 59084|0); //@line 598 "./src/cpp/unrar/unpack30.cpp"
      $91 = HEAP32[$90>>2]|0; //@line 598 "./src/cpp/unrar/unpack30.cpp"
      $92 = $6; //@line 598 "./src/cpp/unrar/unpack30.cpp"
      $93 = (($91) - ($92))|0; //@line 598 "./src/cpp/unrar/unpack30.cpp"
      $9 = $93; //@line 598 "./src/cpp/unrar/unpack30.cpp"
      $94 = ((($19)) + 58960|0); //@line 599 "./src/cpp/unrar/unpack30.cpp"
      $95 = ((($19)) + 19236|0); //@line 599 "./src/cpp/unrar/unpack30.cpp"
      $96 = HEAP32[$95>>2]|0; //@line 599 "./src/cpp/unrar/unpack30.cpp"
      $97 = $6; //@line 599 "./src/cpp/unrar/unpack30.cpp"
      $98 = (($96) + ($97)|0); //@line 599 "./src/cpp/unrar/unpack30.cpp"
      $99 = $9; //@line 599 "./src/cpp/unrar/unpack30.cpp"
      __ZN5RarVM9SetMemoryEjPhj($94,0,$98,$99); //@line 599 "./src/cpp/unrar/unpack30.cpp"
      $100 = ((($19)) + 58960|0); //@line 600 "./src/cpp/unrar/unpack30.cpp"
      $101 = $9; //@line 600 "./src/cpp/unrar/unpack30.cpp"
      $102 = ((($19)) + 19236|0); //@line 600 "./src/cpp/unrar/unpack30.cpp"
      $103 = HEAP32[$102>>2]|0; //@line 600 "./src/cpp/unrar/unpack30.cpp"
      $104 = $8; //@line 600 "./src/cpp/unrar/unpack30.cpp"
      __ZN5RarVM9SetMemoryEjPhj($100,$101,$103,$104); //@line 600 "./src/cpp/unrar/unpack30.cpp"
     }
     $105 = ((($19)) + 59032|0); //@line 603 "./src/cpp/unrar/unpack30.cpp"
     $106 = $5; //@line 603 "./src/cpp/unrar/unpack30.cpp"
     $107 = ((($106)) + 16|0); //@line 603 "./src/cpp/unrar/unpack30.cpp"
     $108 = HEAP32[$107>>2]|0; //@line 603 "./src/cpp/unrar/unpack30.cpp"
     $109 = (__ZNK5ArrayIP14UnpackFilter30EixEj($105,$108)|0); //@line 603 "./src/cpp/unrar/unpack30.cpp"
     $110 = HEAP32[$109>>2]|0; //@line 603 "./src/cpp/unrar/unpack30.cpp"
     $111 = ((($110)) + 20|0); //@line 603 "./src/cpp/unrar/unpack30.cpp"
     $10 = $111; //@line 603 "./src/cpp/unrar/unpack30.cpp"
     $112 = $5; //@line 604 "./src/cpp/unrar/unpack30.cpp"
     $113 = ((($112)) + 20|0); //@line 604 "./src/cpp/unrar/unpack30.cpp"
     $11 = $113; //@line 604 "./src/cpp/unrar/unpack30.cpp"
     $114 = $10; //@line 606 "./src/cpp/unrar/unpack30.cpp"
     $115 = ((($114)) + 24|0); //@line 606 "./src/cpp/unrar/unpack30.cpp"
     $116 = (__ZN5ArrayIhE4SizeEv($115)|0); //@line 606 "./src/cpp/unrar/unpack30.cpp"
     $117 = ($116>>>0)>(64); //@line 606 "./src/cpp/unrar/unpack30.cpp"
     if ($117) {
      $118 = $11; //@line 609 "./src/cpp/unrar/unpack30.cpp"
      $119 = ((($118)) + 24|0); //@line 609 "./src/cpp/unrar/unpack30.cpp"
      $120 = $10; //@line 609 "./src/cpp/unrar/unpack30.cpp"
      $121 = ((($120)) + 24|0); //@line 609 "./src/cpp/unrar/unpack30.cpp"
      $122 = (__ZN5ArrayIhE4SizeEv($121)|0); //@line 609 "./src/cpp/unrar/unpack30.cpp"
      __ZN5ArrayIhE5AllocEj($119,$122); //@line 609 "./src/cpp/unrar/unpack30.cpp"
      $123 = $11; //@line 610 "./src/cpp/unrar/unpack30.cpp"
      $124 = ((($123)) + 24|0); //@line 610 "./src/cpp/unrar/unpack30.cpp"
      $125 = (__ZNK5ArrayIhEixEj($124,64)|0); //@line 610 "./src/cpp/unrar/unpack30.cpp"
      $126 = $10; //@line 610 "./src/cpp/unrar/unpack30.cpp"
      $127 = ((($126)) + 24|0); //@line 610 "./src/cpp/unrar/unpack30.cpp"
      $128 = (__ZNK5ArrayIhEixEj($127,64)|0); //@line 610 "./src/cpp/unrar/unpack30.cpp"
      $129 = $10; //@line 610 "./src/cpp/unrar/unpack30.cpp"
      $130 = ((($129)) + 24|0); //@line 610 "./src/cpp/unrar/unpack30.cpp"
      $131 = (__ZN5ArrayIhE4SizeEv($130)|0); //@line 610 "./src/cpp/unrar/unpack30.cpp"
      $132 = (($131) - 64)|0; //@line 610 "./src/cpp/unrar/unpack30.cpp"
      _memcpy(($125|0),($128|0),($132|0))|0; //@line 610 "./src/cpp/unrar/unpack30.cpp"
     }
     $133 = $11; //@line 613 "./src/cpp/unrar/unpack30.cpp"
     __ZN6Unpack11ExecuteCodeEP18VM_PreparedProgram($19,$133); //@line 613 "./src/cpp/unrar/unpack30.cpp"
     $134 = $11; //@line 615 "./src/cpp/unrar/unpack30.cpp"
     $135 = ((($134)) + 24|0); //@line 615 "./src/cpp/unrar/unpack30.cpp"
     $136 = (__ZN5ArrayIhE4SizeEv($135)|0); //@line 615 "./src/cpp/unrar/unpack30.cpp"
     $137 = ($136>>>0)>(64); //@line 615 "./src/cpp/unrar/unpack30.cpp"
     $138 = $10;
     $139 = ((($138)) + 24|0);
     if ($137) {
      $140 = (__ZN5ArrayIhE4SizeEv($139)|0); //@line 618 "./src/cpp/unrar/unpack30.cpp"
      $141 = $11; //@line 618 "./src/cpp/unrar/unpack30.cpp"
      $142 = ((($141)) + 24|0); //@line 618 "./src/cpp/unrar/unpack30.cpp"
      $143 = (__ZN5ArrayIhE4SizeEv($142)|0); //@line 618 "./src/cpp/unrar/unpack30.cpp"
      $144 = ($140>>>0)<($143>>>0); //@line 618 "./src/cpp/unrar/unpack30.cpp"
      if ($144) {
       $145 = $10; //@line 619 "./src/cpp/unrar/unpack30.cpp"
       $146 = ((($145)) + 24|0); //@line 619 "./src/cpp/unrar/unpack30.cpp"
       $147 = $11; //@line 619 "./src/cpp/unrar/unpack30.cpp"
       $148 = ((($147)) + 24|0); //@line 619 "./src/cpp/unrar/unpack30.cpp"
       $149 = (__ZN5ArrayIhE4SizeEv($148)|0); //@line 619 "./src/cpp/unrar/unpack30.cpp"
       __ZN5ArrayIhE5AllocEj($146,$149); //@line 619 "./src/cpp/unrar/unpack30.cpp"
      }
      $150 = $10; //@line 620 "./src/cpp/unrar/unpack30.cpp"
      $151 = ((($150)) + 24|0); //@line 620 "./src/cpp/unrar/unpack30.cpp"
      $152 = (__ZNK5ArrayIhEixEj($151,64)|0); //@line 620 "./src/cpp/unrar/unpack30.cpp"
      $153 = $11; //@line 620 "./src/cpp/unrar/unpack30.cpp"
      $154 = ((($153)) + 24|0); //@line 620 "./src/cpp/unrar/unpack30.cpp"
      $155 = (__ZNK5ArrayIhEixEj($154,64)|0); //@line 620 "./src/cpp/unrar/unpack30.cpp"
      $156 = $11; //@line 620 "./src/cpp/unrar/unpack30.cpp"
      $157 = ((($156)) + 24|0); //@line 620 "./src/cpp/unrar/unpack30.cpp"
      $158 = (__ZN5ArrayIhE4SizeEv($157)|0); //@line 620 "./src/cpp/unrar/unpack30.cpp"
      $159 = (($158) - 64)|0; //@line 620 "./src/cpp/unrar/unpack30.cpp"
      _memcpy(($152|0),($155|0),($159|0))|0; //@line 620 "./src/cpp/unrar/unpack30.cpp"
     } else {
      __ZN5ArrayIhE5ResetEv($139); //@line 623 "./src/cpp/unrar/unpack30.cpp"
     }
     $160 = $11; //@line 625 "./src/cpp/unrar/unpack30.cpp"
     $161 = ((($160)) + 84|0); //@line 625 "./src/cpp/unrar/unpack30.cpp"
     $162 = HEAP32[$161>>2]|0; //@line 625 "./src/cpp/unrar/unpack30.cpp"
     $12 = $162; //@line 625 "./src/cpp/unrar/unpack30.cpp"
     $163 = $11; //@line 626 "./src/cpp/unrar/unpack30.cpp"
     $164 = ((($163)) + 88|0); //@line 626 "./src/cpp/unrar/unpack30.cpp"
     $165 = HEAP32[$164>>2]|0; //@line 626 "./src/cpp/unrar/unpack30.cpp"
     $13 = $165; //@line 626 "./src/cpp/unrar/unpack30.cpp"
     $166 = ((($19)) + 59048|0); //@line 628 "./src/cpp/unrar/unpack30.cpp"
     $167 = $4; //@line 628 "./src/cpp/unrar/unpack30.cpp"
     $168 = (__ZNK5ArrayIP14UnpackFilter30EixEj($166,$167)|0); //@line 628 "./src/cpp/unrar/unpack30.cpp"
     $169 = HEAP32[$168>>2]|0; //@line 628 "./src/cpp/unrar/unpack30.cpp"
     $170 = ($169|0)==(0|0); //@line 628 "./src/cpp/unrar/unpack30.cpp"
     if (!($170)) {
      __ZN14UnpackFilter30D2Ev($169); //@line 628 "./src/cpp/unrar/unpack30.cpp"
      __ZdlPv($169); //@line 628 "./src/cpp/unrar/unpack30.cpp"
     }
     $171 = ((($19)) + 59048|0); //@line 629 "./src/cpp/unrar/unpack30.cpp"
     $172 = $4; //@line 629 "./src/cpp/unrar/unpack30.cpp"
     $173 = (__ZNK5ArrayIP14UnpackFilter30EixEj($171,$172)|0); //@line 629 "./src/cpp/unrar/unpack30.cpp"
     $$sink = $173;
     while(1) {
      HEAP32[$$sink>>2] = 0;
      $174 = $4; //@line 630 "./src/cpp/unrar/unpack30.cpp"
      $175 = (($174) + 1)|0; //@line 630 "./src/cpp/unrar/unpack30.cpp"
      $176 = ((($19)) + 59048|0); //@line 630 "./src/cpp/unrar/unpack30.cpp"
      $177 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($176)|0); //@line 630 "./src/cpp/unrar/unpack30.cpp"
      $178 = ($175>>>0)<($177>>>0); //@line 630 "./src/cpp/unrar/unpack30.cpp"
      if (!($178)) {
       break;
      }
      $179 = ((($19)) + 59048|0); //@line 632 "./src/cpp/unrar/unpack30.cpp"
      $180 = $4; //@line 632 "./src/cpp/unrar/unpack30.cpp"
      $181 = (($180) + 1)|0; //@line 632 "./src/cpp/unrar/unpack30.cpp"
      $182 = (__ZNK5ArrayIP14UnpackFilter30EixEj($179,$181)|0); //@line 632 "./src/cpp/unrar/unpack30.cpp"
      $183 = HEAP32[$182>>2]|0; //@line 632 "./src/cpp/unrar/unpack30.cpp"
      $14 = $183; //@line 632 "./src/cpp/unrar/unpack30.cpp"
      $184 = $14; //@line 634 "./src/cpp/unrar/unpack30.cpp"
      $185 = ($184|0)==(0|0); //@line 634 "./src/cpp/unrar/unpack30.cpp"
      if ($185) {
       break;
      }
      $186 = $14; //@line 634 "./src/cpp/unrar/unpack30.cpp"
      $187 = HEAP32[$186>>2]|0; //@line 634 "./src/cpp/unrar/unpack30.cpp"
      $188 = $6; //@line 634 "./src/cpp/unrar/unpack30.cpp"
      $189 = ($187|0)!=($188|0); //@line 634 "./src/cpp/unrar/unpack30.cpp"
      if ($189) {
       break;
      }
      $190 = $14; //@line 635 "./src/cpp/unrar/unpack30.cpp"
      $191 = ((($190)) + 4|0); //@line 635 "./src/cpp/unrar/unpack30.cpp"
      $192 = HEAP32[$191>>2]|0; //@line 635 "./src/cpp/unrar/unpack30.cpp"
      $193 = $13; //@line 635 "./src/cpp/unrar/unpack30.cpp"
      $194 = ($192|0)!=($193|0); //@line 635 "./src/cpp/unrar/unpack30.cpp"
      if ($194) {
       break;
      }
      $195 = $14; //@line 635 "./src/cpp/unrar/unpack30.cpp"
      $196 = ((($195)) + 12|0); //@line 635 "./src/cpp/unrar/unpack30.cpp"
      $197 = HEAP8[$196>>0]|0; //@line 635 "./src/cpp/unrar/unpack30.cpp"
      $198 = $197&1; //@line 635 "./src/cpp/unrar/unpack30.cpp"
      if ($198) {
       break;
      }
      $199 = ((($19)) + 58960|0); //@line 640 "./src/cpp/unrar/unpack30.cpp"
      $200 = $12; //@line 640 "./src/cpp/unrar/unpack30.cpp"
      $201 = $13; //@line 640 "./src/cpp/unrar/unpack30.cpp"
      __ZN5RarVM9SetMemoryEjPhj($199,0,$200,$201); //@line 640 "./src/cpp/unrar/unpack30.cpp"
      $202 = ((($19)) + 59032|0); //@line 642 "./src/cpp/unrar/unpack30.cpp"
      $203 = $14; //@line 642 "./src/cpp/unrar/unpack30.cpp"
      $204 = ((($203)) + 16|0); //@line 642 "./src/cpp/unrar/unpack30.cpp"
      $205 = HEAP32[$204>>2]|0; //@line 642 "./src/cpp/unrar/unpack30.cpp"
      $206 = (__ZNK5ArrayIP14UnpackFilter30EixEj($202,$205)|0); //@line 642 "./src/cpp/unrar/unpack30.cpp"
      $207 = HEAP32[$206>>2]|0; //@line 642 "./src/cpp/unrar/unpack30.cpp"
      $208 = ((($207)) + 20|0); //@line 642 "./src/cpp/unrar/unpack30.cpp"
      $15 = $208; //@line 642 "./src/cpp/unrar/unpack30.cpp"
      $209 = $14; //@line 643 "./src/cpp/unrar/unpack30.cpp"
      $210 = ((($209)) + 20|0); //@line 643 "./src/cpp/unrar/unpack30.cpp"
      $16 = $210; //@line 643 "./src/cpp/unrar/unpack30.cpp"
      $211 = $15; //@line 645 "./src/cpp/unrar/unpack30.cpp"
      $212 = ((($211)) + 24|0); //@line 645 "./src/cpp/unrar/unpack30.cpp"
      $213 = (__ZN5ArrayIhE4SizeEv($212)|0); //@line 645 "./src/cpp/unrar/unpack30.cpp"
      $214 = ($213>>>0)>(64); //@line 645 "./src/cpp/unrar/unpack30.cpp"
      if ($214) {
       $215 = $16; //@line 648 "./src/cpp/unrar/unpack30.cpp"
       $216 = ((($215)) + 24|0); //@line 648 "./src/cpp/unrar/unpack30.cpp"
       $217 = $15; //@line 648 "./src/cpp/unrar/unpack30.cpp"
       $218 = ((($217)) + 24|0); //@line 648 "./src/cpp/unrar/unpack30.cpp"
       $219 = (__ZN5ArrayIhE4SizeEv($218)|0); //@line 648 "./src/cpp/unrar/unpack30.cpp"
       __ZN5ArrayIhE5AllocEj($216,$219); //@line 648 "./src/cpp/unrar/unpack30.cpp"
       $220 = $16; //@line 649 "./src/cpp/unrar/unpack30.cpp"
       $221 = ((($220)) + 24|0); //@line 649 "./src/cpp/unrar/unpack30.cpp"
       $222 = (__ZNK5ArrayIhEixEj($221,64)|0); //@line 649 "./src/cpp/unrar/unpack30.cpp"
       $223 = $15; //@line 649 "./src/cpp/unrar/unpack30.cpp"
       $224 = ((($223)) + 24|0); //@line 649 "./src/cpp/unrar/unpack30.cpp"
       $225 = (__ZNK5ArrayIhEixEj($224,64)|0); //@line 649 "./src/cpp/unrar/unpack30.cpp"
       $226 = $15; //@line 649 "./src/cpp/unrar/unpack30.cpp"
       $227 = ((($226)) + 24|0); //@line 649 "./src/cpp/unrar/unpack30.cpp"
       $228 = (__ZN5ArrayIhE4SizeEv($227)|0); //@line 649 "./src/cpp/unrar/unpack30.cpp"
       $229 = (($228) - 64)|0; //@line 649 "./src/cpp/unrar/unpack30.cpp"
       _memcpy(($222|0),($225|0),($229|0))|0; //@line 649 "./src/cpp/unrar/unpack30.cpp"
      }
      $230 = $16; //@line 652 "./src/cpp/unrar/unpack30.cpp"
      __ZN6Unpack11ExecuteCodeEP18VM_PreparedProgram($19,$230); //@line 652 "./src/cpp/unrar/unpack30.cpp"
      $231 = $16; //@line 654 "./src/cpp/unrar/unpack30.cpp"
      $232 = ((($231)) + 24|0); //@line 654 "./src/cpp/unrar/unpack30.cpp"
      $233 = (__ZN5ArrayIhE4SizeEv($232)|0); //@line 654 "./src/cpp/unrar/unpack30.cpp"
      $234 = ($233>>>0)>(64); //@line 654 "./src/cpp/unrar/unpack30.cpp"
      $235 = $15;
      $236 = ((($235)) + 24|0);
      if ($234) {
       $237 = (__ZN5ArrayIhE4SizeEv($236)|0); //@line 657 "./src/cpp/unrar/unpack30.cpp"
       $238 = $16; //@line 657 "./src/cpp/unrar/unpack30.cpp"
       $239 = ((($238)) + 24|0); //@line 657 "./src/cpp/unrar/unpack30.cpp"
       $240 = (__ZN5ArrayIhE4SizeEv($239)|0); //@line 657 "./src/cpp/unrar/unpack30.cpp"
       $241 = ($237>>>0)<($240>>>0); //@line 657 "./src/cpp/unrar/unpack30.cpp"
       if ($241) {
        $242 = $15; //@line 658 "./src/cpp/unrar/unpack30.cpp"
        $243 = ((($242)) + 24|0); //@line 658 "./src/cpp/unrar/unpack30.cpp"
        $244 = $16; //@line 658 "./src/cpp/unrar/unpack30.cpp"
        $245 = ((($244)) + 24|0); //@line 658 "./src/cpp/unrar/unpack30.cpp"
        $246 = (__ZN5ArrayIhE4SizeEv($245)|0); //@line 658 "./src/cpp/unrar/unpack30.cpp"
        __ZN5ArrayIhE5AllocEj($243,$246); //@line 658 "./src/cpp/unrar/unpack30.cpp"
       }
       $247 = $15; //@line 659 "./src/cpp/unrar/unpack30.cpp"
       $248 = ((($247)) + 24|0); //@line 659 "./src/cpp/unrar/unpack30.cpp"
       $249 = (__ZNK5ArrayIhEixEj($248,64)|0); //@line 659 "./src/cpp/unrar/unpack30.cpp"
       $250 = $16; //@line 659 "./src/cpp/unrar/unpack30.cpp"
       $251 = ((($250)) + 24|0); //@line 659 "./src/cpp/unrar/unpack30.cpp"
       $252 = (__ZNK5ArrayIhEixEj($251,64)|0); //@line 659 "./src/cpp/unrar/unpack30.cpp"
       $253 = $16; //@line 659 "./src/cpp/unrar/unpack30.cpp"
       $254 = ((($253)) + 24|0); //@line 659 "./src/cpp/unrar/unpack30.cpp"
       $255 = (__ZN5ArrayIhE4SizeEv($254)|0); //@line 659 "./src/cpp/unrar/unpack30.cpp"
       $256 = (($255) - 64)|0; //@line 659 "./src/cpp/unrar/unpack30.cpp"
       _memcpy(($249|0),($252|0),($256|0))|0; //@line 659 "./src/cpp/unrar/unpack30.cpp"
      } else {
       __ZN5ArrayIhE5ResetEv($236); //@line 662 "./src/cpp/unrar/unpack30.cpp"
      }
      $257 = $16; //@line 664 "./src/cpp/unrar/unpack30.cpp"
      $258 = ((($257)) + 84|0); //@line 664 "./src/cpp/unrar/unpack30.cpp"
      $259 = HEAP32[$258>>2]|0; //@line 664 "./src/cpp/unrar/unpack30.cpp"
      $12 = $259; //@line 664 "./src/cpp/unrar/unpack30.cpp"
      $260 = $16; //@line 665 "./src/cpp/unrar/unpack30.cpp"
      $261 = ((($260)) + 88|0); //@line 665 "./src/cpp/unrar/unpack30.cpp"
      $262 = HEAP32[$261>>2]|0; //@line 665 "./src/cpp/unrar/unpack30.cpp"
      $13 = $262; //@line 665 "./src/cpp/unrar/unpack30.cpp"
      $263 = $4; //@line 666 "./src/cpp/unrar/unpack30.cpp"
      $264 = (($263) + 1)|0; //@line 666 "./src/cpp/unrar/unpack30.cpp"
      $4 = $264; //@line 666 "./src/cpp/unrar/unpack30.cpp"
      $265 = ((($19)) + 59048|0); //@line 667 "./src/cpp/unrar/unpack30.cpp"
      $266 = $4; //@line 667 "./src/cpp/unrar/unpack30.cpp"
      $267 = (__ZNK5ArrayIP14UnpackFilter30EixEj($265,$266)|0); //@line 667 "./src/cpp/unrar/unpack30.cpp"
      $268 = HEAP32[$267>>2]|0; //@line 667 "./src/cpp/unrar/unpack30.cpp"
      $269 = ($268|0)==(0|0); //@line 667 "./src/cpp/unrar/unpack30.cpp"
      if (!($269)) {
       __ZN14UnpackFilter30D2Ev($268); //@line 667 "./src/cpp/unrar/unpack30.cpp"
       __ZdlPv($268); //@line 667 "./src/cpp/unrar/unpack30.cpp"
      }
      $270 = ((($19)) + 59048|0); //@line 668 "./src/cpp/unrar/unpack30.cpp"
      $271 = $4; //@line 668 "./src/cpp/unrar/unpack30.cpp"
      $272 = (__ZNK5ArrayIP14UnpackFilter30EixEj($270,$271)|0); //@line 668 "./src/cpp/unrar/unpack30.cpp"
      $$sink = $272;
     }
     $273 = HEAP32[$19>>2]|0; //@line 670 "./src/cpp/unrar/unpack30.cpp"
     $274 = $12; //@line 670 "./src/cpp/unrar/unpack30.cpp"
     $275 = $13; //@line 670 "./src/cpp/unrar/unpack30.cpp"
     __ZN11ComprDataIO8UnpWriteEPhj($273,$274,$275); //@line 670 "./src/cpp/unrar/unpack30.cpp"
     $276 = ((($19)) + 19514|0); //@line 671 "./src/cpp/unrar/unpack30.cpp"
     HEAP8[$276>>0] = 1; //@line 671 "./src/cpp/unrar/unpack30.cpp"
     $277 = $13; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $278 = ((($19)) + 19520|0); //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $279 = $278; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $280 = $279; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $281 = HEAP32[$280>>2]|0; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $282 = (($279) + 4)|0; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $283 = $282; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $284 = HEAP32[$283>>2]|0; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $285 = (_i64Add(($281|0),($284|0),($277|0),0)|0); //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $286 = tempRet0; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $287 = $278; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $288 = $287; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     HEAP32[$288>>2] = $285; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $289 = (($287) + 4)|0; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $290 = $289; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     HEAP32[$290>>2] = $286; //@line 672 "./src/cpp/unrar/unpack30.cpp"
     $291 = $8; //@line 673 "./src/cpp/unrar/unpack30.cpp"
     $2 = $291; //@line 673 "./src/cpp/unrar/unpack30.cpp"
     $292 = ((($19)) + 96|0); //@line 674 "./src/cpp/unrar/unpack30.cpp"
     $293 = HEAP32[$292>>2]|0; //@line 674 "./src/cpp/unrar/unpack30.cpp"
     $294 = $2; //@line 674 "./src/cpp/unrar/unpack30.cpp"
     $295 = (($293) - ($294))|0; //@line 674 "./src/cpp/unrar/unpack30.cpp"
     $296 = ((($19)) + 59088|0); //@line 674 "./src/cpp/unrar/unpack30.cpp"
     $297 = HEAP32[$296>>2]|0; //@line 674 "./src/cpp/unrar/unpack30.cpp"
     $298 = $295 & $297; //@line 674 "./src/cpp/unrar/unpack30.cpp"
     $3 = $298; //@line 674 "./src/cpp/unrar/unpack30.cpp"
    }
   }
  } while(0);
  $319 = $4; //@line 565 "./src/cpp/unrar/unpack30.cpp"
  $320 = (($319) + 1)|0; //@line 565 "./src/cpp/unrar/unpack30.cpp"
  $4 = $320; //@line 565 "./src/cpp/unrar/unpack30.cpp"
 }
 if ((label|0) == 47) {
  $321 = $2; //@line 692 "./src/cpp/unrar/unpack30.cpp"
  $322 = ((($19)) + 96|0); //@line 692 "./src/cpp/unrar/unpack30.cpp"
  $323 = HEAP32[$322>>2]|0; //@line 692 "./src/cpp/unrar/unpack30.cpp"
  __ZN6Unpack12UnpWriteAreaEjj($19,$321,$323); //@line 692 "./src/cpp/unrar/unpack30.cpp"
  $324 = ((($19)) + 96|0); //@line 693 "./src/cpp/unrar/unpack30.cpp"
  $325 = HEAP32[$324>>2]|0; //@line 693 "./src/cpp/unrar/unpack30.cpp"
  $$sink2 = $325;
  $326 = ((($19)) + 100|0);
  HEAP32[$326>>2] = $$sink2;
  STACKTOP = sp;return; //@line 694 "./src/cpp/unrar/unpack30.cpp"
 }
 $299 = $4; //@line 680 "./src/cpp/unrar/unpack30.cpp"
 $17 = $299; //@line 680 "./src/cpp/unrar/unpack30.cpp"
 while(1) {
  $300 = $17; //@line 680 "./src/cpp/unrar/unpack30.cpp"
  $301 = ((($19)) + 59048|0); //@line 680 "./src/cpp/unrar/unpack30.cpp"
  $302 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($301)|0); //@line 680 "./src/cpp/unrar/unpack30.cpp"
  $303 = ($300>>>0)<($302>>>0); //@line 680 "./src/cpp/unrar/unpack30.cpp"
  if (!($303)) {
   break;
  }
  $304 = ((($19)) + 59048|0); //@line 682 "./src/cpp/unrar/unpack30.cpp"
  $305 = $17; //@line 682 "./src/cpp/unrar/unpack30.cpp"
  $306 = (__ZNK5ArrayIP14UnpackFilter30EixEj($304,$305)|0); //@line 682 "./src/cpp/unrar/unpack30.cpp"
  $307 = HEAP32[$306>>2]|0; //@line 682 "./src/cpp/unrar/unpack30.cpp"
  $18 = $307; //@line 682 "./src/cpp/unrar/unpack30.cpp"
  $308 = $18; //@line 683 "./src/cpp/unrar/unpack30.cpp"
  $309 = ($308|0)!=(0|0); //@line 683 "./src/cpp/unrar/unpack30.cpp"
  if ($309) {
   $310 = $18; //@line 683 "./src/cpp/unrar/unpack30.cpp"
   $311 = ((($310)) + 12|0); //@line 683 "./src/cpp/unrar/unpack30.cpp"
   $312 = HEAP8[$311>>0]|0; //@line 683 "./src/cpp/unrar/unpack30.cpp"
   $313 = $312&1; //@line 683 "./src/cpp/unrar/unpack30.cpp"
   if ($313) {
    $314 = $18; //@line 684 "./src/cpp/unrar/unpack30.cpp"
    $315 = ((($314)) + 12|0); //@line 684 "./src/cpp/unrar/unpack30.cpp"
    HEAP8[$315>>0] = 0; //@line 684 "./src/cpp/unrar/unpack30.cpp"
   }
  }
  $316 = $17; //@line 680 "./src/cpp/unrar/unpack30.cpp"
  $317 = (($316) + 1)|0; //@line 680 "./src/cpp/unrar/unpack30.cpp"
  $17 = $317; //@line 680 "./src/cpp/unrar/unpack30.cpp"
 }
 $318 = $2; //@line 686 "./src/cpp/unrar/unpack30.cpp"
 $$sink2 = $318;
 $326 = ((($19)) + 100|0);
 HEAP32[$326>>2] = $$sink2;
 STACKTOP = sp;return; //@line 694 "./src/cpp/unrar/unpack30.cpp"
}
function __ZN6Unpack17SafePPMDecodeCharEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = ((($3)) + 39104|0); //@line 6 "./src/cpp/unrar/unpack30.cpp"
 $5 = (__ZN8ModelPPM10DecodeCharEv($4)|0); //@line 6 "./src/cpp/unrar/unpack30.cpp"
 $2 = $5; //@line 6 "./src/cpp/unrar/unpack30.cpp"
 $6 = $2; //@line 7 "./src/cpp/unrar/unpack30.cpp"
 $7 = ($6|0)==(-1); //@line 7 "./src/cpp/unrar/unpack30.cpp"
 if (!($7)) {
  $10 = $2; //@line 12 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return ($10|0); //@line 12 "./src/cpp/unrar/unpack30.cpp"
 }
 $8 = ((($3)) + 39104|0); //@line 9 "./src/cpp/unrar/unpack30.cpp"
 __ZN8ModelPPM7CleanUpEv($8); //@line 9 "./src/cpp/unrar/unpack30.cpp"
 $9 = ((($3)) + 58952|0); //@line 10 "./src/cpp/unrar/unpack30.cpp"
 HEAP32[$9>>2] = 0; //@line 10 "./src/cpp/unrar/unpack30.cpp"
 $10 = $2; //@line 12 "./src/cpp/unrar/unpack30.cpp"
 STACKTOP = sp;return ($10|0); //@line 12 "./src/cpp/unrar/unpack30.cpp"
}
function __ZN6Unpack13ReadVMCodePPMEv($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val10 = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$expand_i1_val8 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $1 = sp + 64|0;
 $8 = sp + 24|0;
 $2 = $0;
 $14 = $2;
 $15 = (__ZN6Unpack17SafePPMDecodeCharEv($14)|0); //@line 323 "./src/cpp/unrar/unpack30.cpp"
 $3 = $15; //@line 323 "./src/cpp/unrar/unpack30.cpp"
 $16 = $3; //@line 324 "./src/cpp/unrar/unpack30.cpp"
 $17 = ($16|0)==(-1); //@line 324 "./src/cpp/unrar/unpack30.cpp"
 if ($17) {
  $$expand_i1_val = 0; //@line 325 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$1>>0] = $$expand_i1_val; //@line 325 "./src/cpp/unrar/unpack30.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 354 "./src/cpp/unrar/unpack30.cpp"
  $69 = $$pre_trunc&1; //@line 354 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return ($69|0); //@line 354 "./src/cpp/unrar/unpack30.cpp"
 }
 $18 = $3; //@line 326 "./src/cpp/unrar/unpack30.cpp"
 $19 = $18 & 7; //@line 326 "./src/cpp/unrar/unpack30.cpp"
 $20 = (($19) + 1)|0; //@line 326 "./src/cpp/unrar/unpack30.cpp"
 $4 = $20; //@line 326 "./src/cpp/unrar/unpack30.cpp"
 $21 = $4; //@line 327 "./src/cpp/unrar/unpack30.cpp"
 $22 = ($21|0)==(7); //@line 327 "./src/cpp/unrar/unpack30.cpp"
 do {
  if ($22) {
   $23 = (__ZN6Unpack17SafePPMDecodeCharEv($14)|0); //@line 329 "./src/cpp/unrar/unpack30.cpp"
   $5 = $23; //@line 329 "./src/cpp/unrar/unpack30.cpp"
   $24 = $5; //@line 330 "./src/cpp/unrar/unpack30.cpp"
   $25 = ($24|0)==(-1); //@line 330 "./src/cpp/unrar/unpack30.cpp"
   if (!($25)) {
    $26 = $5; //@line 332 "./src/cpp/unrar/unpack30.cpp"
    $27 = (($26) + 7)|0; //@line 332 "./src/cpp/unrar/unpack30.cpp"
    $4 = $27; //@line 332 "./src/cpp/unrar/unpack30.cpp"
    break;
   }
   $$expand_i1_val2 = 0; //@line 331 "./src/cpp/unrar/unpack30.cpp"
   HEAP8[$1>>0] = $$expand_i1_val2; //@line 331 "./src/cpp/unrar/unpack30.cpp"
   $$pre_trunc = HEAP8[$1>>0]|0; //@line 354 "./src/cpp/unrar/unpack30.cpp"
   $69 = $$pre_trunc&1; //@line 354 "./src/cpp/unrar/unpack30.cpp"
   STACKTOP = sp;return ($69|0); //@line 354 "./src/cpp/unrar/unpack30.cpp"
  } else {
   $28 = $4; //@line 335 "./src/cpp/unrar/unpack30.cpp"
   $29 = ($28|0)==(8); //@line 335 "./src/cpp/unrar/unpack30.cpp"
   if ($29) {
    $30 = (__ZN6Unpack17SafePPMDecodeCharEv($14)|0); //@line 337 "./src/cpp/unrar/unpack30.cpp"
    $6 = $30; //@line 337 "./src/cpp/unrar/unpack30.cpp"
    $31 = $6; //@line 338 "./src/cpp/unrar/unpack30.cpp"
    $32 = ($31|0)==(-1); //@line 338 "./src/cpp/unrar/unpack30.cpp"
    if ($32) {
     $$expand_i1_val4 = 0; //@line 339 "./src/cpp/unrar/unpack30.cpp"
     HEAP8[$1>>0] = $$expand_i1_val4; //@line 339 "./src/cpp/unrar/unpack30.cpp"
     $$pre_trunc = HEAP8[$1>>0]|0; //@line 354 "./src/cpp/unrar/unpack30.cpp"
     $69 = $$pre_trunc&1; //@line 354 "./src/cpp/unrar/unpack30.cpp"
     STACKTOP = sp;return ($69|0); //@line 354 "./src/cpp/unrar/unpack30.cpp"
    }
    $33 = (__ZN6Unpack17SafePPMDecodeCharEv($14)|0); //@line 340 "./src/cpp/unrar/unpack30.cpp"
    $7 = $33; //@line 340 "./src/cpp/unrar/unpack30.cpp"
    $34 = $7; //@line 341 "./src/cpp/unrar/unpack30.cpp"
    $35 = ($34|0)==(-1); //@line 341 "./src/cpp/unrar/unpack30.cpp"
    if (!($35)) {
     $36 = $6; //@line 343 "./src/cpp/unrar/unpack30.cpp"
     $37 = $36<<8; //@line 343 "./src/cpp/unrar/unpack30.cpp"
     $38 = $7; //@line 343 "./src/cpp/unrar/unpack30.cpp"
     $39 = (($37) + ($38))|0; //@line 343 "./src/cpp/unrar/unpack30.cpp"
     $4 = $39; //@line 343 "./src/cpp/unrar/unpack30.cpp"
     break;
    }
    $$expand_i1_val6 = 0; //@line 342 "./src/cpp/unrar/unpack30.cpp"
    HEAP8[$1>>0] = $$expand_i1_val6; //@line 342 "./src/cpp/unrar/unpack30.cpp"
    $$pre_trunc = HEAP8[$1>>0]|0; //@line 354 "./src/cpp/unrar/unpack30.cpp"
    $69 = $$pre_trunc&1; //@line 354 "./src/cpp/unrar/unpack30.cpp"
    STACKTOP = sp;return ($69|0); //@line 354 "./src/cpp/unrar/unpack30.cpp"
   }
  }
 } while(0);
 $40 = $4; //@line 345 "./src/cpp/unrar/unpack30.cpp"
 __ZN5ArrayIhEC2Ej($8,$40); //@line 345 "./src/cpp/unrar/unpack30.cpp"
 $9 = 0; //@line 346 "./src/cpp/unrar/unpack30.cpp"
 while(1) {
  $41 = $9; //@line 346 "./src/cpp/unrar/unpack30.cpp"
  $42 = $4; //@line 346 "./src/cpp/unrar/unpack30.cpp"
  $43 = ($41|0)<($42|0); //@line 346 "./src/cpp/unrar/unpack30.cpp"
  if (!($43)) {
   label = 21;
   break;
  }
  __THREW__ = 0;
  $44 = (invoke_ii(218,($14|0))|0); //@line 348 "./src/cpp/unrar/unpack30.cpp"
  $45 = __THREW__; __THREW__ = 0;
  $46 = $45&1;
  if ($46) {
   label = 18;
   break;
  }
  $10 = $44; //@line 348 "./src/cpp/unrar/unpack30.cpp"
  $47 = $10; //@line 349 "./src/cpp/unrar/unpack30.cpp"
  $48 = ($47|0)==(-1); //@line 349 "./src/cpp/unrar/unpack30.cpp"
  if ($48) {
   label = 17;
   break;
  }
  $53 = $10; //@line 351 "./src/cpp/unrar/unpack30.cpp"
  $54 = $53&255; //@line 351 "./src/cpp/unrar/unpack30.cpp"
  $55 = $9; //@line 351 "./src/cpp/unrar/unpack30.cpp"
  __THREW__ = 0;
  $56 = (invoke_iii(94,($8|0),($55|0))|0); //@line 351 "./src/cpp/unrar/unpack30.cpp"
  $57 = __THREW__; __THREW__ = 0;
  $58 = $57&1;
  if ($58) {
   label = 18;
   break;
  }
  HEAP8[$56>>0] = $54; //@line 351 "./src/cpp/unrar/unpack30.cpp"
  $59 = $9; //@line 346 "./src/cpp/unrar/unpack30.cpp"
  $60 = (($59) + 1)|0; //@line 346 "./src/cpp/unrar/unpack30.cpp"
  $9 = $60; //@line 346 "./src/cpp/unrar/unpack30.cpp"
 }
 if ((label|0) == 17) {
  $$expand_i1_val8 = 0; //@line 350 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$1>>0] = $$expand_i1_val8; //@line 350 "./src/cpp/unrar/unpack30.cpp"
  $13 = 1;
 }
 else if ((label|0) == 21) {
  $61 = $3; //@line 353 "./src/cpp/unrar/unpack30.cpp"
  __THREW__ = 0;
  $62 = (invoke_iii(94,($8|0),0)|0); //@line 353 "./src/cpp/unrar/unpack30.cpp"
  $63 = __THREW__; __THREW__ = 0;
  $64 = $63&1;
  if ($64) {
   label = 18;
  } else {
   $65 = $4; //@line 353 "./src/cpp/unrar/unpack30.cpp"
   __THREW__ = 0;
   $66 = (invoke_iiiii(219,($14|0),($61|0),($62|0),($65|0))|0); //@line 353 "./src/cpp/unrar/unpack30.cpp"
   $67 = __THREW__; __THREW__ = 0;
   $68 = $67&1;
   if ($68) {
    label = 18;
   } else {
    $$expand_i1_val10 = $66&1; //@line 353 "./src/cpp/unrar/unpack30.cpp"
    HEAP8[$1>>0] = $$expand_i1_val10; //@line 353 "./src/cpp/unrar/unpack30.cpp"
    $13 = 1;
   }
  }
 }
 if ((label|0) == 18) {
  $49 = ___cxa_find_matching_catch_2()|0;
  $50 = tempRet0;
  $11 = $49; //@line 354 "./src/cpp/unrar/unpack30.cpp"
  $12 = $50; //@line 354 "./src/cpp/unrar/unpack30.cpp"
  __ZN5ArrayIhED2Ev($8); //@line 354 "./src/cpp/unrar/unpack30.cpp"
  $51 = $11; //@line 354 "./src/cpp/unrar/unpack30.cpp"
  $52 = $12; //@line 354 "./src/cpp/unrar/unpack30.cpp"
  ___resumeException($51|0);
  // unreachable;
 }
 __ZN5ArrayIhED2Ev($8); //@line 354 "./src/cpp/unrar/unpack30.cpp"
 $$pre_trunc = HEAP8[$1>>0]|0; //@line 354 "./src/cpp/unrar/unpack30.cpp"
 $69 = $$pre_trunc&1; //@line 354 "./src/cpp/unrar/unpack30.cpp"
 STACKTOP = sp;return ($69|0); //@line 354 "./src/cpp/unrar/unpack30.cpp"
}
function __ZN6Unpack13InsertOldDistEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 68|0); //@line 3 "./src/cpp/unrar/unpackinline.cpp"
 $6 = ((($5)) + 8|0); //@line 3 "./src/cpp/unrar/unpackinline.cpp"
 $7 = HEAP32[$6>>2]|0; //@line 3 "./src/cpp/unrar/unpackinline.cpp"
 $8 = ((($4)) + 68|0); //@line 3 "./src/cpp/unrar/unpackinline.cpp"
 $9 = ((($8)) + 12|0); //@line 3 "./src/cpp/unrar/unpackinline.cpp"
 HEAP32[$9>>2] = $7; //@line 3 "./src/cpp/unrar/unpackinline.cpp"
 $10 = ((($4)) + 68|0); //@line 4 "./src/cpp/unrar/unpackinline.cpp"
 $11 = ((($10)) + 4|0); //@line 4 "./src/cpp/unrar/unpackinline.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 4 "./src/cpp/unrar/unpackinline.cpp"
 $13 = ((($4)) + 68|0); //@line 4 "./src/cpp/unrar/unpackinline.cpp"
 $14 = ((($13)) + 8|0); //@line 4 "./src/cpp/unrar/unpackinline.cpp"
 HEAP32[$14>>2] = $12; //@line 4 "./src/cpp/unrar/unpackinline.cpp"
 $15 = ((($4)) + 68|0); //@line 5 "./src/cpp/unrar/unpackinline.cpp"
 $16 = HEAP32[$15>>2]|0; //@line 5 "./src/cpp/unrar/unpackinline.cpp"
 $17 = ((($4)) + 68|0); //@line 5 "./src/cpp/unrar/unpackinline.cpp"
 $18 = ((($17)) + 4|0); //@line 5 "./src/cpp/unrar/unpackinline.cpp"
 HEAP32[$18>>2] = $16; //@line 5 "./src/cpp/unrar/unpackinline.cpp"
 $19 = $3; //@line 6 "./src/cpp/unrar/unpackinline.cpp"
 $20 = ((($4)) + 68|0); //@line 6 "./src/cpp/unrar/unpackinline.cpp"
 HEAP32[$20>>2] = $19; //@line 6 "./src/cpp/unrar/unpackinline.cpp"
 STACKTOP = sp;return; //@line 7 "./src/cpp/unrar/unpackinline.cpp"
}
function __ZN6Unpack14ReadEndOfBlockEv($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 10|0;
 $2 = $0;
 $6 = $2;
 $7 = ((($6)) + 4|0); //@line 259 "./src/cpp/unrar/unpack30.cpp"
 $8 = (__ZN8BitInput7getbitsEv($7)|0); //@line 259 "./src/cpp/unrar/unpack30.cpp"
 $3 = $8; //@line 259 "./src/cpp/unrar/unpack30.cpp"
 $5 = 0; //@line 260 "./src/cpp/unrar/unpack30.cpp"
 $9 = $3; //@line 266 "./src/cpp/unrar/unpack30.cpp"
 $10 = $9 & 32768; //@line 266 "./src/cpp/unrar/unpack30.cpp"
 $11 = ($10|0)!=(0); //@line 266 "./src/cpp/unrar/unpack30.cpp"
 if ($11) {
  $4 = 1; //@line 268 "./src/cpp/unrar/unpack30.cpp"
  $12 = ((($6)) + 4|0); //@line 269 "./src/cpp/unrar/unpack30.cpp"
  __ZN8BitInput7addbitsEj($12,1); //@line 269 "./src/cpp/unrar/unpack30.cpp"
 } else {
  $5 = 1; //@line 273 "./src/cpp/unrar/unpack30.cpp"
  $13 = $3; //@line 274 "./src/cpp/unrar/unpack30.cpp"
  $14 = $13 & 16384; //@line 274 "./src/cpp/unrar/unpack30.cpp"
  $15 = ($14|0)!=(0); //@line 274 "./src/cpp/unrar/unpack30.cpp"
  $16 = $15&1; //@line 274 "./src/cpp/unrar/unpack30.cpp"
  $4 = $16; //@line 274 "./src/cpp/unrar/unpack30.cpp"
  $17 = ((($6)) + 4|0); //@line 275 "./src/cpp/unrar/unpack30.cpp"
  __ZN8BitInput7addbitsEj($17,2); //@line 275 "./src/cpp/unrar/unpack30.cpp"
 }
 $18 = $4; //@line 277 "./src/cpp/unrar/unpack30.cpp"
 $19 = $18&1; //@line 277 "./src/cpp/unrar/unpack30.cpp"
 $20 = $19 ^ 1; //@line 277 "./src/cpp/unrar/unpack30.cpp"
 $21 = ((($6)) + 58956|0); //@line 277 "./src/cpp/unrar/unpack30.cpp"
 $22 = $20&1; //@line 277 "./src/cpp/unrar/unpack30.cpp"
 HEAP8[$21>>0] = $22; //@line 277 "./src/cpp/unrar/unpack30.cpp"
 $23 = $5; //@line 282 "./src/cpp/unrar/unpack30.cpp"
 $24 = $23&1; //@line 282 "./src/cpp/unrar/unpack30.cpp"
 if ($24) {
  $$expand_i1_val = 0; //@line 283 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$1>>0] = $$expand_i1_val; //@line 283 "./src/cpp/unrar/unpack30.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 285 "./src/cpp/unrar/unpack30.cpp"
  $26 = $$pre_trunc&1; //@line 285 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return ($26|0); //@line 285 "./src/cpp/unrar/unpack30.cpp"
 } else {
  $25 = (__ZN6Unpack12ReadTables30Ev($6)|0); //@line 284 "./src/cpp/unrar/unpack30.cpp"
  $$expand_i1_val2 = $25&1; //@line 284 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$1>>0] = $$expand_i1_val2; //@line 284 "./src/cpp/unrar/unpack30.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 285 "./src/cpp/unrar/unpack30.cpp"
  $26 = $$pre_trunc&1; //@line 285 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return ($26|0); //@line 285 "./src/cpp/unrar/unpack30.cpp"
 }
 return (0)|0;
}
function __ZN6Unpack10ReadVMCodeEv($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $1 = sp + 44|0;
 $5 = sp + 16|0;
 $2 = $0;
 $10 = $2;
 $11 = ((($10)) + 4|0); //@line 293 "./src/cpp/unrar/unpack30.cpp"
 $12 = (__ZN8BitInput7getbitsEv($11)|0); //@line 293 "./src/cpp/unrar/unpack30.cpp"
 $13 = $12 >>> 8; //@line 293 "./src/cpp/unrar/unpack30.cpp"
 $3 = $13; //@line 293 "./src/cpp/unrar/unpack30.cpp"
 $14 = ((($10)) + 4|0); //@line 294 "./src/cpp/unrar/unpack30.cpp"
 __ZN8BitInput7addbitsEj($14,8); //@line 294 "./src/cpp/unrar/unpack30.cpp"
 $15 = $3; //@line 295 "./src/cpp/unrar/unpack30.cpp"
 $16 = $15 & 7; //@line 295 "./src/cpp/unrar/unpack30.cpp"
 $17 = (($16) + 1)|0; //@line 295 "./src/cpp/unrar/unpack30.cpp"
 $4 = $17; //@line 295 "./src/cpp/unrar/unpack30.cpp"
 $18 = $4; //@line 296 "./src/cpp/unrar/unpack30.cpp"
 $19 = ($18|0)==(7); //@line 296 "./src/cpp/unrar/unpack30.cpp"
 if ($19) {
  $20 = ((($10)) + 4|0); //@line 298 "./src/cpp/unrar/unpack30.cpp"
  $21 = (__ZN8BitInput7getbitsEv($20)|0); //@line 298 "./src/cpp/unrar/unpack30.cpp"
  $22 = $21 >>> 8; //@line 298 "./src/cpp/unrar/unpack30.cpp"
  $23 = (($22) + 7)|0; //@line 298 "./src/cpp/unrar/unpack30.cpp"
  $4 = $23; //@line 298 "./src/cpp/unrar/unpack30.cpp"
  $24 = ((($10)) + 4|0); //@line 299 "./src/cpp/unrar/unpack30.cpp"
  __ZN8BitInput7addbitsEj($24,8); //@line 299 "./src/cpp/unrar/unpack30.cpp"
 } else {
  $25 = $4; //@line 302 "./src/cpp/unrar/unpack30.cpp"
  $26 = ($25|0)==(8); //@line 302 "./src/cpp/unrar/unpack30.cpp"
  if ($26) {
   $27 = ((($10)) + 4|0); //@line 304 "./src/cpp/unrar/unpack30.cpp"
   $28 = (__ZN8BitInput7getbitsEv($27)|0); //@line 304 "./src/cpp/unrar/unpack30.cpp"
   $4 = $28; //@line 304 "./src/cpp/unrar/unpack30.cpp"
   $29 = ((($10)) + 4|0); //@line 305 "./src/cpp/unrar/unpack30.cpp"
   __ZN8BitInput7addbitsEj($29,16); //@line 305 "./src/cpp/unrar/unpack30.cpp"
  }
 }
 $30 = $4; //@line 307 "./src/cpp/unrar/unpack30.cpp"
 __ZN5ArrayIhEC2Ej($5,$30); //@line 307 "./src/cpp/unrar/unpack30.cpp"
 $6 = 0; //@line 308 "./src/cpp/unrar/unpack30.cpp"
 while(1) {
  $31 = $6; //@line 308 "./src/cpp/unrar/unpack30.cpp"
  $32 = $4; //@line 308 "./src/cpp/unrar/unpack30.cpp"
  $33 = ($31|0)<($32|0); //@line 308 "./src/cpp/unrar/unpack30.cpp"
  if (!($33)) {
   label = 17;
   break;
  }
  $34 = ((($10)) + 4|0); //@line 312 "./src/cpp/unrar/unpack30.cpp"
  $35 = HEAP32[$34>>2]|0; //@line 312 "./src/cpp/unrar/unpack30.cpp"
  $36 = ((($10)) + 104|0); //@line 312 "./src/cpp/unrar/unpack30.cpp"
  $37 = HEAP32[$36>>2]|0; //@line 312 "./src/cpp/unrar/unpack30.cpp"
  $38 = (($37) - 1)|0; //@line 312 "./src/cpp/unrar/unpack30.cpp"
  $39 = ($35|0)>=($38|0); //@line 312 "./src/cpp/unrar/unpack30.cpp"
  if ($39) {
   __THREW__ = 0;
   $40 = (invoke_ii(220,($10|0))|0); //@line 312 "./src/cpp/unrar/unpack30.cpp"
   $41 = __THREW__; __THREW__ = 0;
   $42 = $41&1;
   if ($42) {
    break;
   }
   if (!($40)) {
    $43 = $6; //@line 312 "./src/cpp/unrar/unpack30.cpp"
    $44 = $4; //@line 312 "./src/cpp/unrar/unpack30.cpp"
    $45 = (($44) - 1)|0; //@line 312 "./src/cpp/unrar/unpack30.cpp"
    $46 = ($43|0)<($45|0); //@line 312 "./src/cpp/unrar/unpack30.cpp"
    if ($46) {
     label = 11;
     break;
    }
   }
  }
  $51 = ((($10)) + 4|0); //@line 314 "./src/cpp/unrar/unpack30.cpp"
  __THREW__ = 0;
  $52 = (invoke_ii(221,($51|0))|0); //@line 314 "./src/cpp/unrar/unpack30.cpp"
  $53 = __THREW__; __THREW__ = 0;
  $54 = $53&1;
  if ($54) {
   break;
  }
  $55 = $52 >>> 8; //@line 314 "./src/cpp/unrar/unpack30.cpp"
  $56 = $55&255; //@line 314 "./src/cpp/unrar/unpack30.cpp"
  $57 = $6; //@line 314 "./src/cpp/unrar/unpack30.cpp"
  __THREW__ = 0;
  $58 = (invoke_iii(94,($5|0),($57|0))|0); //@line 314 "./src/cpp/unrar/unpack30.cpp"
  $59 = __THREW__; __THREW__ = 0;
  $60 = $59&1;
  if ($60) {
   break;
  }
  HEAP8[$58>>0] = $56; //@line 314 "./src/cpp/unrar/unpack30.cpp"
  $61 = ((($10)) + 4|0); //@line 315 "./src/cpp/unrar/unpack30.cpp"
  __THREW__ = 0;
  invoke_vii(222,($61|0),8); //@line 315 "./src/cpp/unrar/unpack30.cpp"
  $62 = __THREW__; __THREW__ = 0;
  $63 = $62&1;
  if ($63) {
   break;
  }
  $64 = $6; //@line 308 "./src/cpp/unrar/unpack30.cpp"
  $65 = (($64) + 1)|0; //@line 308 "./src/cpp/unrar/unpack30.cpp"
  $6 = $65; //@line 308 "./src/cpp/unrar/unpack30.cpp"
 }
 if ((label|0) == 11) {
  $$expand_i1_val = 0; //@line 313 "./src/cpp/unrar/unpack30.cpp"
  HEAP8[$1>>0] = $$expand_i1_val; //@line 313 "./src/cpp/unrar/unpack30.cpp"
  $9 = 1;
  __ZN5ArrayIhED2Ev($5); //@line 318 "./src/cpp/unrar/unpack30.cpp"
  $$pre_trunc = HEAP8[$1>>0]|0; //@line 318 "./src/cpp/unrar/unpack30.cpp"
  $74 = $$pre_trunc&1; //@line 318 "./src/cpp/unrar/unpack30.cpp"
  STACKTOP = sp;return ($74|0); //@line 318 "./src/cpp/unrar/unpack30.cpp"
 }
 if ((label|0) == 17) {
  $66 = $3; //@line 317 "./src/cpp/unrar/unpack30.cpp"
  __THREW__ = 0;
  $67 = (invoke_iii(94,($5|0),0)|0); //@line 317 "./src/cpp/unrar/unpack30.cpp"
  $68 = __THREW__; __THREW__ = 0;
  $69 = $68&1;
  if (!($69)) {
   $70 = $4; //@line 317 "./src/cpp/unrar/unpack30.cpp"
   __THREW__ = 0;
   $71 = (invoke_iiiii(219,($10|0),($66|0),($67|0),($70|0))|0); //@line 317 "./src/cpp/unrar/unpack30.cpp"
   $72 = __THREW__; __THREW__ = 0;
   $73 = $72&1;
   if (!($73)) {
    $$expand_i1_val2 = $71&1; //@line 317 "./src/cpp/unrar/unpack30.cpp"
    HEAP8[$1>>0] = $$expand_i1_val2; //@line 317 "./src/cpp/unrar/unpack30.cpp"
    $9 = 1;
    __ZN5ArrayIhED2Ev($5); //@line 318 "./src/cpp/unrar/unpack30.cpp"
    $$pre_trunc = HEAP8[$1>>0]|0; //@line 318 "./src/cpp/unrar/unpack30.cpp"
    $74 = $$pre_trunc&1; //@line 318 "./src/cpp/unrar/unpack30.cpp"
    STACKTOP = sp;return ($74|0); //@line 318 "./src/cpp/unrar/unpack30.cpp"
   }
  }
 }
 $47 = ___cxa_find_matching_catch_2()|0;
 $48 = tempRet0;
 $7 = $47; //@line 318 "./src/cpp/unrar/unpack30.cpp"
 $8 = $48; //@line 318 "./src/cpp/unrar/unpack30.cpp"
 __ZN5ArrayIhED2Ev($5); //@line 318 "./src/cpp/unrar/unpack30.cpp"
 $49 = $7; //@line 318 "./src/cpp/unrar/unpack30.cpp"
 $50 = $8; //@line 318 "./src/cpp/unrar/unpack30.cpp"
 ___resumeException($49|0);
 // unreachable;
 return (0)|0;
}
function __ZN6Unpack9AddVMCodeEjPhi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val13 = 0, $$expand_i1_val15 = 0, $$expand_i1_val17 = 0, $$expand_i1_val19 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$expand_i1_val9 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, $switch = 0, dest = 0, label = 0, sp = 0;
 var stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $4 = sp + 121|0;
 $22 = sp + 40|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $32 = $5;
 $33 = ((($32)) + 59016|0); //@line 359 "./src/cpp/unrar/unpack30.cpp"
 __ZN8BitInput12InitBitInputEv($33); //@line 359 "./src/cpp/unrar/unpack30.cpp"
 $34 = ((($32)) + 59016|0); //@line 360 "./src/cpp/unrar/unpack30.cpp"
 $35 = ((($34)) + 12|0); //@line 360 "./src/cpp/unrar/unpack30.cpp"
 $36 = HEAP32[$35>>2]|0; //@line 360 "./src/cpp/unrar/unpack30.cpp"
 $37 = $7; //@line 360 "./src/cpp/unrar/unpack30.cpp"
 $38 = $8; //@line 360 "./src/cpp/unrar/unpack30.cpp"
 $39 = (32768)<($38|0); //@line 360 "./src/cpp/unrar/unpack30.cpp"
 $40 = $8; //@line 360 "./src/cpp/unrar/unpack30.cpp"
 $41 = $39 ? 32768 : $40; //@line 360 "./src/cpp/unrar/unpack30.cpp"
 _memcpy(($36|0),($37|0),($41|0))|0; //@line 360 "./src/cpp/unrar/unpack30.cpp"
 $42 = ((($32)) + 58960|0); //@line 361 "./src/cpp/unrar/unpack30.cpp"
 __ZN5RarVM4InitEv($42); //@line 361 "./src/cpp/unrar/unpack30.cpp"
 $43 = $6; //@line 364 "./src/cpp/unrar/unpack30.cpp"
 $44 = $43 & 128; //@line 364 "./src/cpp/unrar/unpack30.cpp"
 $45 = ($44|0)!=(0); //@line 364 "./src/cpp/unrar/unpack30.cpp"
 do {
  if ($45) {
   $46 = ((($32)) + 59016|0); //@line 366 "./src/cpp/unrar/unpack30.cpp"
   $47 = (__ZN5RarVM8ReadDataER8BitInput($46)|0); //@line 366 "./src/cpp/unrar/unpack30.cpp"
   $9 = $47; //@line 366 "./src/cpp/unrar/unpack30.cpp"
   $48 = $9; //@line 367 "./src/cpp/unrar/unpack30.cpp"
   $49 = ($48|0)==(0); //@line 367 "./src/cpp/unrar/unpack30.cpp"
   if ($49) {
    __ZN6Unpack13InitFilters30Eb($32,0); //@line 368 "./src/cpp/unrar/unpack30.cpp"
    break;
   } else {
    $50 = $9; //@line 370 "./src/cpp/unrar/unpack30.cpp"
    $51 = (($50) + -1)|0; //@line 370 "./src/cpp/unrar/unpack30.cpp"
    $9 = $51; //@line 370 "./src/cpp/unrar/unpack30.cpp"
    break;
   }
  } else {
   $52 = ((($32)) + 59080|0); //@line 373 "./src/cpp/unrar/unpack30.cpp"
   $53 = HEAP32[$52>>2]|0; //@line 373 "./src/cpp/unrar/unpack30.cpp"
   $9 = $53; //@line 373 "./src/cpp/unrar/unpack30.cpp"
  }
 } while(0);
 $54 = $9; //@line 375 "./src/cpp/unrar/unpack30.cpp"
 $55 = ((($32)) + 59032|0); //@line 375 "./src/cpp/unrar/unpack30.cpp"
 $56 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($55)|0); //@line 375 "./src/cpp/unrar/unpack30.cpp"
 $57 = ($54>>>0)>($56>>>0); //@line 375 "./src/cpp/unrar/unpack30.cpp"
 if (!($57)) {
  $58 = $9; //@line 375 "./src/cpp/unrar/unpack30.cpp"
  $59 = ((($32)) + 59064|0); //@line 375 "./src/cpp/unrar/unpack30.cpp"
  $60 = (__ZN5ArrayIiE4SizeEv($59)|0); //@line 375 "./src/cpp/unrar/unpack30.cpp"
  $61 = ($58>>>0)>($60>>>0); //@line 375 "./src/cpp/unrar/unpack30.cpp"
  if (!($61)) {
   $62 = $9; //@line 377 "./src/cpp/unrar/unpack30.cpp"
   $63 = ((($32)) + 59080|0); //@line 377 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$63>>2] = $62; //@line 377 "./src/cpp/unrar/unpack30.cpp"
   $64 = $9; //@line 378 "./src/cpp/unrar/unpack30.cpp"
   $65 = ((($32)) + 59032|0); //@line 378 "./src/cpp/unrar/unpack30.cpp"
   $66 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($65)|0); //@line 378 "./src/cpp/unrar/unpack30.cpp"
   $67 = ($64|0)==($66|0); //@line 378 "./src/cpp/unrar/unpack30.cpp"
   $68 = $67&1; //@line 378 "./src/cpp/unrar/unpack30.cpp"
   $10 = $68; //@line 378 "./src/cpp/unrar/unpack30.cpp"
   $69 = (__Znwj(112)|0); //@line 380 "./src/cpp/unrar/unpack30.cpp"
   __THREW__ = 0;
   invoke_vi(223,($69|0)); //@line 380 "./src/cpp/unrar/unpack30.cpp"
   $70 = __THREW__; __THREW__ = 0;
   $71 = $70&1;
   if ($71) {
    $78 = ___cxa_find_matching_catch_2()|0;
    $79 = tempRet0;
    $12 = $78; //@line 530 "./src/cpp/unrar/unpack30.cpp"
    $13 = $79; //@line 530 "./src/cpp/unrar/unpack30.cpp"
    __ZdlPv($69); //@line 380 "./src/cpp/unrar/unpack30.cpp"
    $426 = $12; //@line 380 "./src/cpp/unrar/unpack30.cpp"
    $427 = $13; //@line 380 "./src/cpp/unrar/unpack30.cpp"
    ___resumeException($426|0);
    // unreachable;
   }
   $11 = $69; //@line 380 "./src/cpp/unrar/unpack30.cpp"
   $72 = $10; //@line 383 "./src/cpp/unrar/unpack30.cpp"
   $73 = $72&1; //@line 383 "./src/cpp/unrar/unpack30.cpp"
   do {
    if ($73) {
     $74 = $9; //@line 385 "./src/cpp/unrar/unpack30.cpp"
     $75 = ($74>>>0)>(8192); //@line 385 "./src/cpp/unrar/unpack30.cpp"
     if ($75) {
      $76 = $11; //@line 388 "./src/cpp/unrar/unpack30.cpp"
      $77 = ($76|0)==(0|0); //@line 388 "./src/cpp/unrar/unpack30.cpp"
      if (!($77)) {
       __ZN14UnpackFilter30D2Ev($76); //@line 388 "./src/cpp/unrar/unpack30.cpp"
       __ZdlPv($76); //@line 388 "./src/cpp/unrar/unpack30.cpp"
      }
      $$expand_i1_val5 = 0; //@line 389 "./src/cpp/unrar/unpack30.cpp"
      HEAP8[$4>>0] = $$expand_i1_val5; //@line 389 "./src/cpp/unrar/unpack30.cpp"
      $$pre_trunc = HEAP8[$4>>0]|0; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      $425 = $$pre_trunc&1; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      STACKTOP = sp;return ($425|0); //@line 530 "./src/cpp/unrar/unpack30.cpp"
     } else {
      $80 = ((($32)) + 59032|0); //@line 392 "./src/cpp/unrar/unpack30.cpp"
      __ZN5ArrayIP14UnpackFilter30E3AddEj($80,1); //@line 392 "./src/cpp/unrar/unpack30.cpp"
      $81 = (__Znwj(112)|0); //@line 393 "./src/cpp/unrar/unpack30.cpp"
      __THREW__ = 0;
      invoke_vi(223,($81|0)); //@line 393 "./src/cpp/unrar/unpack30.cpp"
      $82 = __THREW__; __THREW__ = 0;
      $83 = $82&1;
      if (!($83)) {
       $14 = $81; //@line 393 "./src/cpp/unrar/unpack30.cpp"
       $84 = ((($32)) + 59032|0); //@line 393 "./src/cpp/unrar/unpack30.cpp"
       $85 = ((($32)) + 59032|0); //@line 393 "./src/cpp/unrar/unpack30.cpp"
       $86 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($85)|0); //@line 393 "./src/cpp/unrar/unpack30.cpp"
       $87 = (($86) - 1)|0; //@line 393 "./src/cpp/unrar/unpack30.cpp"
       $88 = (__ZNK5ArrayIP14UnpackFilter30EixEj($84,$87)|0); //@line 393 "./src/cpp/unrar/unpack30.cpp"
       HEAP32[$88>>2] = $81; //@line 393 "./src/cpp/unrar/unpack30.cpp"
       $89 = ((($32)) + 59032|0); //@line 394 "./src/cpp/unrar/unpack30.cpp"
       $90 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($89)|0); //@line 394 "./src/cpp/unrar/unpack30.cpp"
       $91 = (($90) - 1)|0; //@line 394 "./src/cpp/unrar/unpack30.cpp"
       $92 = $11; //@line 394 "./src/cpp/unrar/unpack30.cpp"
       $93 = ((($92)) + 16|0); //@line 394 "./src/cpp/unrar/unpack30.cpp"
       HEAP32[$93>>2] = $91; //@line 394 "./src/cpp/unrar/unpack30.cpp"
       $94 = ((($32)) + 59064|0); //@line 400 "./src/cpp/unrar/unpack30.cpp"
       __ZN5ArrayIiE4PushEi($94,0); //@line 400 "./src/cpp/unrar/unpack30.cpp"
       $95 = $14; //@line 401 "./src/cpp/unrar/unpack30.cpp"
       $96 = ((($95)) + 8|0); //@line 401 "./src/cpp/unrar/unpack30.cpp"
       HEAP32[$96>>2] = 0; //@line 401 "./src/cpp/unrar/unpack30.cpp"
       break;
      }
      $97 = ___cxa_find_matching_catch_2()|0;
      $98 = tempRet0;
      $12 = $97; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      $13 = $98; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      __ZdlPv($81); //@line 393 "./src/cpp/unrar/unpack30.cpp"
      $426 = $12; //@line 380 "./src/cpp/unrar/unpack30.cpp"
      $427 = $13; //@line 380 "./src/cpp/unrar/unpack30.cpp"
      ___resumeException($426|0);
      // unreachable;
     }
    } else {
     $99 = ((($32)) + 59032|0); //@line 405 "./src/cpp/unrar/unpack30.cpp"
     $100 = $9; //@line 405 "./src/cpp/unrar/unpack30.cpp"
     $101 = (__ZNK5ArrayIP14UnpackFilter30EixEj($99,$100)|0); //@line 405 "./src/cpp/unrar/unpack30.cpp"
     $102 = HEAP32[$101>>2]|0; //@line 405 "./src/cpp/unrar/unpack30.cpp"
     $14 = $102; //@line 405 "./src/cpp/unrar/unpack30.cpp"
     $103 = $9; //@line 406 "./src/cpp/unrar/unpack30.cpp"
     $104 = $11; //@line 406 "./src/cpp/unrar/unpack30.cpp"
     $105 = ((($104)) + 16|0); //@line 406 "./src/cpp/unrar/unpack30.cpp"
     HEAP32[$105>>2] = $103; //@line 406 "./src/cpp/unrar/unpack30.cpp"
     $106 = $14; //@line 407 "./src/cpp/unrar/unpack30.cpp"
     $107 = ((($106)) + 8|0); //@line 407 "./src/cpp/unrar/unpack30.cpp"
     $108 = HEAP32[$107>>2]|0; //@line 407 "./src/cpp/unrar/unpack30.cpp"
     $109 = (($108) + 1)|0; //@line 407 "./src/cpp/unrar/unpack30.cpp"
     HEAP32[$107>>2] = $109; //@line 407 "./src/cpp/unrar/unpack30.cpp"
    }
   } while(0);
   $15 = 0; //@line 410 "./src/cpp/unrar/unpack30.cpp"
   $16 = 0; //@line 411 "./src/cpp/unrar/unpack30.cpp"
   while(1) {
    $110 = $16; //@line 411 "./src/cpp/unrar/unpack30.cpp"
    $111 = ((($32)) + 59048|0); //@line 411 "./src/cpp/unrar/unpack30.cpp"
    $112 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($111)|0); //@line 411 "./src/cpp/unrar/unpack30.cpp"
    $113 = ($110>>>0)<($112>>>0); //@line 411 "./src/cpp/unrar/unpack30.cpp"
    if (!($113)) {
     break;
    }
    $114 = ((($32)) + 59048|0); //@line 413 "./src/cpp/unrar/unpack30.cpp"
    $115 = $16; //@line 413 "./src/cpp/unrar/unpack30.cpp"
    $116 = (__ZNK5ArrayIP14UnpackFilter30EixEj($114,$115)|0); //@line 413 "./src/cpp/unrar/unpack30.cpp"
    $117 = HEAP32[$116>>2]|0; //@line 413 "./src/cpp/unrar/unpack30.cpp"
    $118 = ((($32)) + 59048|0); //@line 413 "./src/cpp/unrar/unpack30.cpp"
    $119 = $16; //@line 413 "./src/cpp/unrar/unpack30.cpp"
    $120 = $15; //@line 413 "./src/cpp/unrar/unpack30.cpp"
    $121 = (($119) - ($120))|0; //@line 413 "./src/cpp/unrar/unpack30.cpp"
    $122 = (__ZNK5ArrayIP14UnpackFilter30EixEj($118,$121)|0); //@line 413 "./src/cpp/unrar/unpack30.cpp"
    HEAP32[$122>>2] = $117; //@line 413 "./src/cpp/unrar/unpack30.cpp"
    $123 = ((($32)) + 59048|0); //@line 414 "./src/cpp/unrar/unpack30.cpp"
    $124 = $16; //@line 414 "./src/cpp/unrar/unpack30.cpp"
    $125 = (__ZNK5ArrayIP14UnpackFilter30EixEj($123,$124)|0); //@line 414 "./src/cpp/unrar/unpack30.cpp"
    $126 = HEAP32[$125>>2]|0; //@line 414 "./src/cpp/unrar/unpack30.cpp"
    $127 = ($126|0)==(0|0); //@line 414 "./src/cpp/unrar/unpack30.cpp"
    if ($127) {
     $128 = $15; //@line 415 "./src/cpp/unrar/unpack30.cpp"
     $129 = (($128) + 1)|0; //@line 415 "./src/cpp/unrar/unpack30.cpp"
     $15 = $129; //@line 415 "./src/cpp/unrar/unpack30.cpp"
    }
    $130 = $15; //@line 416 "./src/cpp/unrar/unpack30.cpp"
    $131 = ($130|0)>(0); //@line 416 "./src/cpp/unrar/unpack30.cpp"
    if ($131) {
     $132 = ((($32)) + 59048|0); //@line 417 "./src/cpp/unrar/unpack30.cpp"
     $133 = $16; //@line 417 "./src/cpp/unrar/unpack30.cpp"
     $134 = (__ZNK5ArrayIP14UnpackFilter30EixEj($132,$133)|0); //@line 417 "./src/cpp/unrar/unpack30.cpp"
     HEAP32[$134>>2] = 0; //@line 417 "./src/cpp/unrar/unpack30.cpp"
    }
    $135 = $16; //@line 411 "./src/cpp/unrar/unpack30.cpp"
    $136 = (($135) + 1)|0; //@line 411 "./src/cpp/unrar/unpack30.cpp"
    $16 = $136; //@line 411 "./src/cpp/unrar/unpack30.cpp"
   }
   $137 = $15; //@line 419 "./src/cpp/unrar/unpack30.cpp"
   $138 = ($137|0)==(0); //@line 419 "./src/cpp/unrar/unpack30.cpp"
   do {
    if ($138) {
     $139 = ((($32)) + 59048|0); //@line 421 "./src/cpp/unrar/unpack30.cpp"
     $140 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($139)|0); //@line 421 "./src/cpp/unrar/unpack30.cpp"
     $141 = ($140>>>0)>(8192); //@line 421 "./src/cpp/unrar/unpack30.cpp"
     if (!($141)) {
      $144 = ((($32)) + 59048|0); //@line 426 "./src/cpp/unrar/unpack30.cpp"
      __ZN5ArrayIP14UnpackFilter30E3AddEj($144,1); //@line 426 "./src/cpp/unrar/unpack30.cpp"
      $15 = 1; //@line 427 "./src/cpp/unrar/unpack30.cpp"
      break;
     }
     $142 = $11; //@line 423 "./src/cpp/unrar/unpack30.cpp"
     $143 = ($142|0)==(0|0); //@line 423 "./src/cpp/unrar/unpack30.cpp"
     if (!($143)) {
      __ZN14UnpackFilter30D2Ev($142); //@line 423 "./src/cpp/unrar/unpack30.cpp"
      __ZdlPv($142); //@line 423 "./src/cpp/unrar/unpack30.cpp"
     }
     $$expand_i1_val7 = 0; //@line 424 "./src/cpp/unrar/unpack30.cpp"
     HEAP8[$4>>0] = $$expand_i1_val7; //@line 424 "./src/cpp/unrar/unpack30.cpp"
     $$pre_trunc = HEAP8[$4>>0]|0; //@line 530 "./src/cpp/unrar/unpack30.cpp"
     $425 = $$pre_trunc&1; //@line 530 "./src/cpp/unrar/unpack30.cpp"
     STACKTOP = sp;return ($425|0); //@line 530 "./src/cpp/unrar/unpack30.cpp"
    }
   } while(0);
   $145 = ((($32)) + 59048|0); //@line 429 "./src/cpp/unrar/unpack30.cpp"
   $146 = (__ZN5ArrayIP14UnpackFilter30E4SizeEv($145)|0); //@line 429 "./src/cpp/unrar/unpack30.cpp"
   $147 = $15; //@line 429 "./src/cpp/unrar/unpack30.cpp"
   $148 = (($146) - ($147))|0; //@line 429 "./src/cpp/unrar/unpack30.cpp"
   $17 = $148; //@line 429 "./src/cpp/unrar/unpack30.cpp"
   $149 = $11; //@line 430 "./src/cpp/unrar/unpack30.cpp"
   $150 = ((($32)) + 59048|0); //@line 430 "./src/cpp/unrar/unpack30.cpp"
   $151 = $17; //@line 430 "./src/cpp/unrar/unpack30.cpp"
   $152 = (__ZNK5ArrayIP14UnpackFilter30EixEj($150,$151)|0); //@line 430 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$152>>2] = $149; //@line 430 "./src/cpp/unrar/unpack30.cpp"
   $153 = $14; //@line 431 "./src/cpp/unrar/unpack30.cpp"
   $154 = ((($153)) + 8|0); //@line 431 "./src/cpp/unrar/unpack30.cpp"
   $155 = HEAP32[$154>>2]|0; //@line 431 "./src/cpp/unrar/unpack30.cpp"
   $156 = $11; //@line 431 "./src/cpp/unrar/unpack30.cpp"
   $157 = ((($156)) + 8|0); //@line 431 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$157>>2] = $155; //@line 431 "./src/cpp/unrar/unpack30.cpp"
   $158 = ((($32)) + 59016|0); //@line 433 "./src/cpp/unrar/unpack30.cpp"
   $159 = (__ZN5RarVM8ReadDataER8BitInput($158)|0); //@line 433 "./src/cpp/unrar/unpack30.cpp"
   $18 = $159; //@line 433 "./src/cpp/unrar/unpack30.cpp"
   $160 = $6; //@line 434 "./src/cpp/unrar/unpack30.cpp"
   $161 = $160 & 64; //@line 434 "./src/cpp/unrar/unpack30.cpp"
   $162 = ($161|0)!=(0); //@line 434 "./src/cpp/unrar/unpack30.cpp"
   if ($162) {
    $163 = $18; //@line 435 "./src/cpp/unrar/unpack30.cpp"
    $164 = (($163) + 258)|0; //@line 435 "./src/cpp/unrar/unpack30.cpp"
    $18 = $164; //@line 435 "./src/cpp/unrar/unpack30.cpp"
   }
   $165 = $18; //@line 436 "./src/cpp/unrar/unpack30.cpp"
   $166 = ((($32)) + 96|0); //@line 436 "./src/cpp/unrar/unpack30.cpp"
   $167 = HEAP32[$166>>2]|0; //@line 436 "./src/cpp/unrar/unpack30.cpp"
   $168 = (($165) + ($167))|0; //@line 436 "./src/cpp/unrar/unpack30.cpp"
   $169 = ((($32)) + 59088|0); //@line 436 "./src/cpp/unrar/unpack30.cpp"
   $170 = HEAP32[$169>>2]|0; //@line 436 "./src/cpp/unrar/unpack30.cpp"
   $171 = $168 & $170; //@line 436 "./src/cpp/unrar/unpack30.cpp"
   $172 = $11; //@line 436 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$172>>2] = $171; //@line 436 "./src/cpp/unrar/unpack30.cpp"
   $173 = $6; //@line 437 "./src/cpp/unrar/unpack30.cpp"
   $174 = $173 & 32; //@line 437 "./src/cpp/unrar/unpack30.cpp"
   $175 = ($174|0)!=(0); //@line 437 "./src/cpp/unrar/unpack30.cpp"
   if ($175) {
    $176 = ((($32)) + 59016|0); //@line 439 "./src/cpp/unrar/unpack30.cpp"
    $177 = (__ZN5RarVM8ReadDataER8BitInput($176)|0); //@line 439 "./src/cpp/unrar/unpack30.cpp"
    $178 = $11; //@line 439 "./src/cpp/unrar/unpack30.cpp"
    $179 = ((($178)) + 4|0); //@line 439 "./src/cpp/unrar/unpack30.cpp"
    HEAP32[$179>>2] = $177; //@line 439 "./src/cpp/unrar/unpack30.cpp"
    $180 = $11; //@line 442 "./src/cpp/unrar/unpack30.cpp"
    $181 = ((($180)) + 4|0); //@line 442 "./src/cpp/unrar/unpack30.cpp"
    $182 = HEAP32[$181>>2]|0; //@line 442 "./src/cpp/unrar/unpack30.cpp"
    $183 = ((($32)) + 59064|0); //@line 442 "./src/cpp/unrar/unpack30.cpp"
    $184 = $9; //@line 442 "./src/cpp/unrar/unpack30.cpp"
    $185 = (__ZNK5ArrayIiEixEj($183,$184)|0); //@line 442 "./src/cpp/unrar/unpack30.cpp"
    HEAP32[$185>>2] = $182; //@line 442 "./src/cpp/unrar/unpack30.cpp"
   } else {
    $186 = $9; //@line 450 "./src/cpp/unrar/unpack30.cpp"
    $187 = ((($32)) + 59064|0); //@line 450 "./src/cpp/unrar/unpack30.cpp"
    $188 = (__ZN5ArrayIiE4SizeEv($187)|0); //@line 450 "./src/cpp/unrar/unpack30.cpp"
    $189 = ($186>>>0)<($188>>>0); //@line 450 "./src/cpp/unrar/unpack30.cpp"
    if ($189) {
     $190 = ((($32)) + 59064|0); //@line 450 "./src/cpp/unrar/unpack30.cpp"
     $191 = $9; //@line 450 "./src/cpp/unrar/unpack30.cpp"
     $192 = (__ZNK5ArrayIiEixEj($190,$191)|0); //@line 450 "./src/cpp/unrar/unpack30.cpp"
     $193 = HEAP32[$192>>2]|0; //@line 450 "./src/cpp/unrar/unpack30.cpp"
     $196 = $193;
    } else {
     $196 = 0;
    }
    $194 = $11; //@line 450 "./src/cpp/unrar/unpack30.cpp"
    $195 = ((($194)) + 4|0); //@line 450 "./src/cpp/unrar/unpack30.cpp"
    HEAP32[$195>>2] = $196; //@line 450 "./src/cpp/unrar/unpack30.cpp"
   }
   $197 = ((($32)) + 100|0); //@line 453 "./src/cpp/unrar/unpack30.cpp"
   $198 = HEAP32[$197>>2]|0; //@line 453 "./src/cpp/unrar/unpack30.cpp"
   $199 = ((($32)) + 96|0); //@line 453 "./src/cpp/unrar/unpack30.cpp"
   $200 = HEAP32[$199>>2]|0; //@line 453 "./src/cpp/unrar/unpack30.cpp"
   $201 = ($198|0)!=($200|0); //@line 453 "./src/cpp/unrar/unpack30.cpp"
   if ($201) {
    $202 = ((($32)) + 100|0); //@line 453 "./src/cpp/unrar/unpack30.cpp"
    $203 = HEAP32[$202>>2]|0; //@line 453 "./src/cpp/unrar/unpack30.cpp"
    $204 = ((($32)) + 96|0); //@line 453 "./src/cpp/unrar/unpack30.cpp"
    $205 = HEAP32[$204>>2]|0; //@line 453 "./src/cpp/unrar/unpack30.cpp"
    $206 = (($203) - ($205))|0; //@line 453 "./src/cpp/unrar/unpack30.cpp"
    $207 = ((($32)) + 59088|0); //@line 453 "./src/cpp/unrar/unpack30.cpp"
    $208 = HEAP32[$207>>2]|0; //@line 453 "./src/cpp/unrar/unpack30.cpp"
    $209 = $206 & $208; //@line 453 "./src/cpp/unrar/unpack30.cpp"
    $210 = $18; //@line 453 "./src/cpp/unrar/unpack30.cpp"
    $211 = ($209>>>0)<=($210>>>0); //@line 453 "./src/cpp/unrar/unpack30.cpp"
    $215 = $211;
   } else {
    $215 = 0;
   }
   $212 = $11; //@line 453 "./src/cpp/unrar/unpack30.cpp"
   $213 = ((($212)) + 12|0); //@line 453 "./src/cpp/unrar/unpack30.cpp"
   $214 = $215&1; //@line 453 "./src/cpp/unrar/unpack30.cpp"
   HEAP8[$213>>0] = $214; //@line 453 "./src/cpp/unrar/unpack30.cpp"
   $216 = $11; //@line 457 "./src/cpp/unrar/unpack30.cpp"
   $217 = ((($216)) + 20|0); //@line 457 "./src/cpp/unrar/unpack30.cpp"
   $218 = ((($217)) + 56|0); //@line 457 "./src/cpp/unrar/unpack30.cpp"
   ;HEAP32[$218>>2]=0|0;HEAP32[$218+4>>2]=0|0;HEAP32[$218+8>>2]=0|0;HEAP32[$218+12>>2]=0|0;HEAP32[$218+16>>2]=0|0;HEAP32[$218+20>>2]=0|0;HEAP32[$218+24>>2]=0|0; //@line 457 "./src/cpp/unrar/unpack30.cpp"
   $219 = $11; //@line 458 "./src/cpp/unrar/unpack30.cpp"
   $220 = ((($219)) + 20|0); //@line 458 "./src/cpp/unrar/unpack30.cpp"
   $221 = ((($220)) + 56|0); //@line 458 "./src/cpp/unrar/unpack30.cpp"
   $222 = ((($221)) + 12|0); //@line 458 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$222>>2] = 245760; //@line 458 "./src/cpp/unrar/unpack30.cpp"
   $223 = $11; //@line 459 "./src/cpp/unrar/unpack30.cpp"
   $224 = ((($223)) + 4|0); //@line 459 "./src/cpp/unrar/unpack30.cpp"
   $225 = HEAP32[$224>>2]|0; //@line 459 "./src/cpp/unrar/unpack30.cpp"
   $226 = $11; //@line 459 "./src/cpp/unrar/unpack30.cpp"
   $227 = ((($226)) + 20|0); //@line 459 "./src/cpp/unrar/unpack30.cpp"
   $228 = ((($227)) + 56|0); //@line 459 "./src/cpp/unrar/unpack30.cpp"
   $229 = ((($228)) + 16|0); //@line 459 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$229>>2] = $225; //@line 459 "./src/cpp/unrar/unpack30.cpp"
   $230 = $11; //@line 460 "./src/cpp/unrar/unpack30.cpp"
   $231 = ((($230)) + 8|0); //@line 460 "./src/cpp/unrar/unpack30.cpp"
   $232 = HEAP32[$231>>2]|0; //@line 460 "./src/cpp/unrar/unpack30.cpp"
   $233 = $11; //@line 460 "./src/cpp/unrar/unpack30.cpp"
   $234 = ((($233)) + 20|0); //@line 460 "./src/cpp/unrar/unpack30.cpp"
   $235 = ((($234)) + 56|0); //@line 460 "./src/cpp/unrar/unpack30.cpp"
   $236 = ((($235)) + 20|0); //@line 460 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$236>>2] = $232; //@line 460 "./src/cpp/unrar/unpack30.cpp"
   $237 = $6; //@line 462 "./src/cpp/unrar/unpack30.cpp"
   $238 = $237 & 16; //@line 462 "./src/cpp/unrar/unpack30.cpp"
   $239 = ($238|0)!=(0); //@line 462 "./src/cpp/unrar/unpack30.cpp"
   L63: do {
    if ($239) {
     $240 = ((($32)) + 59016|0); //@line 464 "./src/cpp/unrar/unpack30.cpp"
     $241 = (__ZN8BitInput8fgetbitsEv($240)|0); //@line 464 "./src/cpp/unrar/unpack30.cpp"
     $242 = $241 >>> 9; //@line 464 "./src/cpp/unrar/unpack30.cpp"
     $19 = $242; //@line 464 "./src/cpp/unrar/unpack30.cpp"
     $243 = ((($32)) + 59016|0); //@line 465 "./src/cpp/unrar/unpack30.cpp"
     __ZN8BitInput8faddbitsEj($243,7); //@line 465 "./src/cpp/unrar/unpack30.cpp"
     $20 = 0; //@line 466 "./src/cpp/unrar/unpack30.cpp"
     while(1) {
      $244 = $20; //@line 466 "./src/cpp/unrar/unpack30.cpp"
      $245 = ($244|0)<(7); //@line 466 "./src/cpp/unrar/unpack30.cpp"
      if (!($245)) {
       break L63;
      }
      $246 = $19; //@line 467 "./src/cpp/unrar/unpack30.cpp"
      $247 = $20; //@line 467 "./src/cpp/unrar/unpack30.cpp"
      $248 = 1 << $247; //@line 467 "./src/cpp/unrar/unpack30.cpp"
      $249 = $246 & $248; //@line 467 "./src/cpp/unrar/unpack30.cpp"
      $250 = ($249|0)!=(0); //@line 467 "./src/cpp/unrar/unpack30.cpp"
      if ($250) {
       $251 = ((($32)) + 59016|0); //@line 468 "./src/cpp/unrar/unpack30.cpp"
       $252 = (__ZN5RarVM8ReadDataER8BitInput($251)|0); //@line 468 "./src/cpp/unrar/unpack30.cpp"
       $253 = $11; //@line 468 "./src/cpp/unrar/unpack30.cpp"
       $254 = ((($253)) + 20|0); //@line 468 "./src/cpp/unrar/unpack30.cpp"
       $255 = ((($254)) + 56|0); //@line 468 "./src/cpp/unrar/unpack30.cpp"
       $256 = $20; //@line 468 "./src/cpp/unrar/unpack30.cpp"
       $257 = (($255) + ($256<<2)|0); //@line 468 "./src/cpp/unrar/unpack30.cpp"
       HEAP32[$257>>2] = $252; //@line 468 "./src/cpp/unrar/unpack30.cpp"
      }
      $258 = $20; //@line 466 "./src/cpp/unrar/unpack30.cpp"
      $259 = (($258) + 1)|0; //@line 466 "./src/cpp/unrar/unpack30.cpp"
      $20 = $259; //@line 466 "./src/cpp/unrar/unpack30.cpp"
     }
    }
   } while(0);
   $260 = $10; //@line 471 "./src/cpp/unrar/unpack30.cpp"
   $261 = $260&1; //@line 471 "./src/cpp/unrar/unpack30.cpp"
   do {
    if ($261) {
     $262 = ((($32)) + 59016|0); //@line 473 "./src/cpp/unrar/unpack30.cpp"
     $263 = (__ZN5RarVM8ReadDataER8BitInput($262)|0); //@line 473 "./src/cpp/unrar/unpack30.cpp"
     $21 = $263; //@line 473 "./src/cpp/unrar/unpack30.cpp"
     $264 = $21; //@line 474 "./src/cpp/unrar/unpack30.cpp"
     $265 = ($264>>>0)>=(65536); //@line 474 "./src/cpp/unrar/unpack30.cpp"
     $266 = $21; //@line 474 "./src/cpp/unrar/unpack30.cpp"
     $267 = ($266|0)==(0); //@line 474 "./src/cpp/unrar/unpack30.cpp"
     $or$cond = $265 | $267; //@line 474 "./src/cpp/unrar/unpack30.cpp"
     if ($or$cond) {
      $$expand_i1_val9 = 0; //@line 475 "./src/cpp/unrar/unpack30.cpp"
      HEAP8[$4>>0] = $$expand_i1_val9; //@line 475 "./src/cpp/unrar/unpack30.cpp"
      $$pre_trunc = HEAP8[$4>>0]|0; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      $425 = $$pre_trunc&1; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      STACKTOP = sp;return ($425|0); //@line 530 "./src/cpp/unrar/unpack30.cpp"
     }
     $268 = $21; //@line 476 "./src/cpp/unrar/unpack30.cpp"
     __ZN5ArrayIhEC2Ej($22,$268); //@line 476 "./src/cpp/unrar/unpack30.cpp"
     $23 = 0; //@line 477 "./src/cpp/unrar/unpack30.cpp"
     while(1) {
      $269 = $23; //@line 477 "./src/cpp/unrar/unpack30.cpp"
      $270 = $21; //@line 477 "./src/cpp/unrar/unpack30.cpp"
      $271 = ($269>>>0)<($270>>>0); //@line 477 "./src/cpp/unrar/unpack30.cpp"
      if (!($271)) {
       label = 61;
       break;
      }
      $272 = ((($32)) + 59016|0); //@line 479 "./src/cpp/unrar/unpack30.cpp"
      __THREW__ = 0;
      $273 = (invoke_iii(224,($272|0),3)|0); //@line 479 "./src/cpp/unrar/unpack30.cpp"
      $274 = __THREW__; __THREW__ = 0;
      $275 = $274&1;
      if ($275) {
       label = 56;
       break;
      }
      if ($273) {
       label = 55;
       break;
      }
      $278 = ((($32)) + 59016|0); //@line 481 "./src/cpp/unrar/unpack30.cpp"
      __THREW__ = 0;
      $279 = (invoke_ii(225,($278|0))|0); //@line 481 "./src/cpp/unrar/unpack30.cpp"
      $280 = __THREW__; __THREW__ = 0;
      $281 = $280&1;
      if ($281) {
       label = 56;
       break;
      }
      $282 = $279 >>> 8; //@line 481 "./src/cpp/unrar/unpack30.cpp"
      $283 = $282&255; //@line 481 "./src/cpp/unrar/unpack30.cpp"
      $284 = $23; //@line 481 "./src/cpp/unrar/unpack30.cpp"
      __THREW__ = 0;
      $285 = (invoke_iii(94,($22|0),($284|0))|0); //@line 481 "./src/cpp/unrar/unpack30.cpp"
      $286 = __THREW__; __THREW__ = 0;
      $287 = $286&1;
      if ($287) {
       label = 56;
       break;
      }
      HEAP8[$285>>0] = $283; //@line 481 "./src/cpp/unrar/unpack30.cpp"
      $288 = ((($32)) + 59016|0); //@line 482 "./src/cpp/unrar/unpack30.cpp"
      __THREW__ = 0;
      invoke_vii(226,($288|0),8); //@line 482 "./src/cpp/unrar/unpack30.cpp"
      $289 = __THREW__; __THREW__ = 0;
      $290 = $289&1;
      if ($290) {
       label = 56;
       break;
      }
      $291 = $23; //@line 477 "./src/cpp/unrar/unpack30.cpp"
      $292 = (($291) + 1)|0; //@line 477 "./src/cpp/unrar/unpack30.cpp"
      $23 = $292; //@line 477 "./src/cpp/unrar/unpack30.cpp"
     }
     if ((label|0) == 55) {
      $$expand_i1_val11 = 0; //@line 480 "./src/cpp/unrar/unpack30.cpp"
      HEAP8[$4>>0] = $$expand_i1_val11; //@line 480 "./src/cpp/unrar/unpack30.cpp"
      $24 = 1;
      label = 64;
     }
     else if ((label|0) == 61) {
      $293 = ((($32)) + 58960|0); //@line 484 "./src/cpp/unrar/unpack30.cpp"
      __THREW__ = 0;
      $294 = (invoke_iii(94,($22|0),0)|0); //@line 484 "./src/cpp/unrar/unpack30.cpp"
      $295 = __THREW__; __THREW__ = 0;
      $296 = $295&1;
      if ($296) {
       label = 56;
      } else {
       $297 = $21; //@line 484 "./src/cpp/unrar/unpack30.cpp"
       $298 = $14; //@line 484 "./src/cpp/unrar/unpack30.cpp"
       $299 = ((($298)) + 20|0); //@line 484 "./src/cpp/unrar/unpack30.cpp"
       __THREW__ = 0;
       invoke_viiii(227,($293|0),($294|0),($297|0),($299|0)); //@line 484 "./src/cpp/unrar/unpack30.cpp"
       $300 = __THREW__; __THREW__ = 0;
       $301 = $300&1;
       if ($301) {
        label = 56;
       } else {
        $24 = 0; //@line 485 "./src/cpp/unrar/unpack30.cpp"
        label = 64;
       }
      }
     }
     if ((label|0) == 56) {
      $276 = ___cxa_find_matching_catch_2()|0;
      $277 = tempRet0;
      $12 = $276; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      $13 = $277; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      __ZN5ArrayIhED2Ev($22); //@line 485 "./src/cpp/unrar/unpack30.cpp"
      $426 = $12; //@line 380 "./src/cpp/unrar/unpack30.cpp"
      $427 = $13; //@line 380 "./src/cpp/unrar/unpack30.cpp"
      ___resumeException($426|0);
      // unreachable;
     }
     else if ((label|0) == 64) {
      __ZN5ArrayIhED2Ev($22); //@line 485 "./src/cpp/unrar/unpack30.cpp"
      $302 = $24;
      $switch = ($302>>>0)<(1);
      if ($switch) {
       break;
      }
      $$pre_trunc = HEAP8[$4>>0]|0; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      $425 = $$pre_trunc&1; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      STACKTOP = sp;return ($425|0); //@line 530 "./src/cpp/unrar/unpack30.cpp"
     }
    }
   } while(0);
   $303 = $14; //@line 486 "./src/cpp/unrar/unpack30.cpp"
   $304 = ((($303)) + 20|0); //@line 486 "./src/cpp/unrar/unpack30.cpp"
   $305 = (__ZNK5ArrayI18VM_PreparedCommandEixEj($304,0)|0); //@line 486 "./src/cpp/unrar/unpack30.cpp"
   $306 = $11; //@line 486 "./src/cpp/unrar/unpack30.cpp"
   $307 = ((($306)) + 20|0); //@line 486 "./src/cpp/unrar/unpack30.cpp"
   $308 = ((($307)) + 16|0); //@line 486 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$308>>2] = $305; //@line 486 "./src/cpp/unrar/unpack30.cpp"
   $309 = $14; //@line 487 "./src/cpp/unrar/unpack30.cpp"
   $310 = ((($309)) + 20|0); //@line 487 "./src/cpp/unrar/unpack30.cpp"
   $311 = ((($310)) + 20|0); //@line 487 "./src/cpp/unrar/unpack30.cpp"
   $312 = HEAP32[$311>>2]|0; //@line 487 "./src/cpp/unrar/unpack30.cpp"
   $313 = $11; //@line 487 "./src/cpp/unrar/unpack30.cpp"
   $314 = ((($313)) + 20|0); //@line 487 "./src/cpp/unrar/unpack30.cpp"
   $315 = ((($314)) + 20|0); //@line 487 "./src/cpp/unrar/unpack30.cpp"
   HEAP32[$315>>2] = $312; //@line 487 "./src/cpp/unrar/unpack30.cpp"
   $316 = $14; //@line 489 "./src/cpp/unrar/unpack30.cpp"
   $317 = ((($316)) + 20|0); //@line 489 "./src/cpp/unrar/unpack30.cpp"
   $318 = ((($317)) + 40|0); //@line 489 "./src/cpp/unrar/unpack30.cpp"
   $319 = (__ZN5ArrayIhE4SizeEv($318)|0); //@line 489 "./src/cpp/unrar/unpack30.cpp"
   $25 = $319; //@line 489 "./src/cpp/unrar/unpack30.cpp"
   $320 = $25; //@line 490 "./src/cpp/unrar/unpack30.cpp"
   $321 = ($320>>>0)>(0); //@line 490 "./src/cpp/unrar/unpack30.cpp"
   $322 = $25; //@line 490 "./src/cpp/unrar/unpack30.cpp"
   $323 = ($322>>>0)<(8192); //@line 490 "./src/cpp/unrar/unpack30.cpp"
   $or$cond3 = $321 & $323; //@line 490 "./src/cpp/unrar/unpack30.cpp"
   if ($or$cond3) {
    $324 = $11; //@line 493 "./src/cpp/unrar/unpack30.cpp"
    $325 = ((($324)) + 20|0); //@line 493 "./src/cpp/unrar/unpack30.cpp"
    $326 = ((($325)) + 40|0); //@line 493 "./src/cpp/unrar/unpack30.cpp"
    $327 = $25; //@line 493 "./src/cpp/unrar/unpack30.cpp"
    __ZN5ArrayIhE3AddEj($326,$327); //@line 493 "./src/cpp/unrar/unpack30.cpp"
    $328 = $11; //@line 494 "./src/cpp/unrar/unpack30.cpp"
    $329 = ((($328)) + 20|0); //@line 494 "./src/cpp/unrar/unpack30.cpp"
    $330 = ((($329)) + 40|0); //@line 494 "./src/cpp/unrar/unpack30.cpp"
    $331 = (__ZNK5ArrayIhEixEj($330,0)|0); //@line 494 "./src/cpp/unrar/unpack30.cpp"
    $332 = $14; //@line 494 "./src/cpp/unrar/unpack30.cpp"
    $333 = ((($332)) + 20|0); //@line 494 "./src/cpp/unrar/unpack30.cpp"
    $334 = ((($333)) + 40|0); //@line 494 "./src/cpp/unrar/unpack30.cpp"
    $335 = (__ZNK5ArrayIhEixEj($334,0)|0); //@line 494 "./src/cpp/unrar/unpack30.cpp"
    $336 = $25; //@line 494 "./src/cpp/unrar/unpack30.cpp"
    _memcpy(($331|0),($335|0),($336|0))|0; //@line 494 "./src/cpp/unrar/unpack30.cpp"
   }
   $337 = $11; //@line 497 "./src/cpp/unrar/unpack30.cpp"
   $338 = ((($337)) + 20|0); //@line 497 "./src/cpp/unrar/unpack30.cpp"
   $339 = ((($338)) + 24|0); //@line 497 "./src/cpp/unrar/unpack30.cpp"
   $340 = (__ZN5ArrayIhE4SizeEv($339)|0); //@line 497 "./src/cpp/unrar/unpack30.cpp"
   $341 = ($340>>>0)<(64); //@line 497 "./src/cpp/unrar/unpack30.cpp"
   if ($341) {
    $342 = $11; //@line 499 "./src/cpp/unrar/unpack30.cpp"
    $343 = ((($342)) + 20|0); //@line 499 "./src/cpp/unrar/unpack30.cpp"
    $344 = ((($343)) + 24|0); //@line 499 "./src/cpp/unrar/unpack30.cpp"
    __ZN5ArrayIhE5ResetEv($344); //@line 499 "./src/cpp/unrar/unpack30.cpp"
    $345 = $11; //@line 500 "./src/cpp/unrar/unpack30.cpp"
    $346 = ((($345)) + 20|0); //@line 500 "./src/cpp/unrar/unpack30.cpp"
    $347 = ((($346)) + 24|0); //@line 500 "./src/cpp/unrar/unpack30.cpp"
    __ZN5ArrayIhE3AddEj($347,64); //@line 500 "./src/cpp/unrar/unpack30.cpp"
   }
   $348 = $11; //@line 502 "./src/cpp/unrar/unpack30.cpp"
   $349 = ((($348)) + 20|0); //@line 502 "./src/cpp/unrar/unpack30.cpp"
   $350 = ((($349)) + 24|0); //@line 502 "./src/cpp/unrar/unpack30.cpp"
   $351 = (__ZNK5ArrayIhEixEj($350,0)|0); //@line 502 "./src/cpp/unrar/unpack30.cpp"
   $26 = $351; //@line 502 "./src/cpp/unrar/unpack30.cpp"
   $27 = 0; //@line 503 "./src/cpp/unrar/unpack30.cpp"
   while(1) {
    $352 = $27; //@line 503 "./src/cpp/unrar/unpack30.cpp"
    $353 = ($352|0)<(7); //@line 503 "./src/cpp/unrar/unpack30.cpp"
    $354 = ((($32)) + 58960|0);
    $355 = $26;
    if (!($353)) {
     break;
    }
    $356 = $27; //@line 504 "./src/cpp/unrar/unpack30.cpp"
    $357 = $356<<2; //@line 504 "./src/cpp/unrar/unpack30.cpp"
    $358 = (($355) + ($357)|0); //@line 504 "./src/cpp/unrar/unpack30.cpp"
    $359 = $11; //@line 504 "./src/cpp/unrar/unpack30.cpp"
    $360 = ((($359)) + 20|0); //@line 504 "./src/cpp/unrar/unpack30.cpp"
    $361 = ((($360)) + 56|0); //@line 504 "./src/cpp/unrar/unpack30.cpp"
    $362 = $27; //@line 504 "./src/cpp/unrar/unpack30.cpp"
    $363 = (($361) + ($362<<2)|0); //@line 504 "./src/cpp/unrar/unpack30.cpp"
    $364 = HEAP32[$363>>2]|0; //@line 504 "./src/cpp/unrar/unpack30.cpp"
    __ZN5RarVM17SetLowEndianValueEPjj($354,$358,$364); //@line 504 "./src/cpp/unrar/unpack30.cpp"
    $365 = $27; //@line 503 "./src/cpp/unrar/unpack30.cpp"
    $366 = (($365) + 1)|0; //@line 503 "./src/cpp/unrar/unpack30.cpp"
    $27 = $366; //@line 503 "./src/cpp/unrar/unpack30.cpp"
   }
   $367 = ((($355)) + 28|0); //@line 505 "./src/cpp/unrar/unpack30.cpp"
   $368 = $11; //@line 505 "./src/cpp/unrar/unpack30.cpp"
   $369 = ((($368)) + 4|0); //@line 505 "./src/cpp/unrar/unpack30.cpp"
   $370 = HEAP32[$369>>2]|0; //@line 505 "./src/cpp/unrar/unpack30.cpp"
   __ZN5RarVM17SetLowEndianValueEPjj($354,$367,$370); //@line 505 "./src/cpp/unrar/unpack30.cpp"
   $371 = ((($32)) + 58960|0); //@line 506 "./src/cpp/unrar/unpack30.cpp"
   $372 = $26; //@line 506 "./src/cpp/unrar/unpack30.cpp"
   $373 = ((($372)) + 32|0); //@line 506 "./src/cpp/unrar/unpack30.cpp"
   __ZN5RarVM17SetLowEndianValueEPjj($371,$373,0); //@line 506 "./src/cpp/unrar/unpack30.cpp"
   $374 = ((($32)) + 58960|0); //@line 507 "./src/cpp/unrar/unpack30.cpp"
   $375 = $26; //@line 507 "./src/cpp/unrar/unpack30.cpp"
   $376 = ((($375)) + 44|0); //@line 507 "./src/cpp/unrar/unpack30.cpp"
   $377 = $11; //@line 507 "./src/cpp/unrar/unpack30.cpp"
   $378 = ((($377)) + 8|0); //@line 507 "./src/cpp/unrar/unpack30.cpp"
   $379 = HEAP32[$378>>2]|0; //@line 507 "./src/cpp/unrar/unpack30.cpp"
   __ZN5RarVM17SetLowEndianValueEPjj($374,$376,$379); //@line 507 "./src/cpp/unrar/unpack30.cpp"
   $380 = $26; //@line 508 "./src/cpp/unrar/unpack30.cpp"
   $381 = ((($380)) + 48|0); //@line 508 "./src/cpp/unrar/unpack30.cpp"
   dest=$381; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0)); //@line 508 "./src/cpp/unrar/unpack30.cpp"
   $382 = $6; //@line 510 "./src/cpp/unrar/unpack30.cpp"
   $383 = $382 & 8; //@line 510 "./src/cpp/unrar/unpack30.cpp"
   $384 = ($383|0)!=(0); //@line 510 "./src/cpp/unrar/unpack30.cpp"
   L107: do {
    if ($384) {
     $385 = ((($32)) + 59016|0); //@line 512 "./src/cpp/unrar/unpack30.cpp"
     $386 = (__ZN8BitInput8OverflowEj($385,3)|0); //@line 512 "./src/cpp/unrar/unpack30.cpp"
     if ($386) {
      $$expand_i1_val13 = 0; //@line 513 "./src/cpp/unrar/unpack30.cpp"
      HEAP8[$4>>0] = $$expand_i1_val13; //@line 513 "./src/cpp/unrar/unpack30.cpp"
      $$pre_trunc = HEAP8[$4>>0]|0; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      $425 = $$pre_trunc&1; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      STACKTOP = sp;return ($425|0); //@line 530 "./src/cpp/unrar/unpack30.cpp"
     }
     $387 = ((($32)) + 59016|0); //@line 514 "./src/cpp/unrar/unpack30.cpp"
     $388 = (__ZN5RarVM8ReadDataER8BitInput($387)|0); //@line 514 "./src/cpp/unrar/unpack30.cpp"
     $28 = $388; //@line 514 "./src/cpp/unrar/unpack30.cpp"
     $389 = $28; //@line 515 "./src/cpp/unrar/unpack30.cpp"
     $390 = ($389>>>0)>(8128); //@line 515 "./src/cpp/unrar/unpack30.cpp"
     if ($390) {
      $$expand_i1_val15 = 0; //@line 516 "./src/cpp/unrar/unpack30.cpp"
      HEAP8[$4>>0] = $$expand_i1_val15; //@line 516 "./src/cpp/unrar/unpack30.cpp"
      $$pre_trunc = HEAP8[$4>>0]|0; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      $425 = $$pre_trunc&1; //@line 530 "./src/cpp/unrar/unpack30.cpp"
      STACKTOP = sp;return ($425|0); //@line 530 "./src/cpp/unrar/unpack30.cpp"
     }
     $391 = $11; //@line 517 "./src/cpp/unrar/unpack30.cpp"
     $392 = ((($391)) + 20|0); //@line 517 "./src/cpp/unrar/unpack30.cpp"
     $393 = ((($392)) + 24|0); //@line 517 "./src/cpp/unrar/unpack30.cpp"
     $394 = (__ZN5ArrayIhE4SizeEv($393)|0); //@line 517 "./src/cpp/unrar/unpack30.cpp"
     $29 = $394; //@line 517 "./src/cpp/unrar/unpack30.cpp"
     $395 = $29; //@line 518 "./src/cpp/unrar/unpack30.cpp"
     $396 = $28; //@line 518 "./src/cpp/unrar/unpack30.cpp"
     $397 = (($396) + 64)|0; //@line 518 "./src/cpp/unrar/unpack30.cpp"
     $398 = ($395>>>0)<($397>>>0); //@line 518 "./src/cpp/unrar/unpack30.cpp"
     if ($398) {
      $399 = $11; //@line 519 "./src/cpp/unrar/unpack30.cpp"
      $400 = ((($399)) + 20|0); //@line 519 "./src/cpp/unrar/unpack30.cpp"
      $401 = ((($400)) + 24|0); //@line 519 "./src/cpp/unrar/unpack30.cpp"
      $402 = $28; //@line 519 "./src/cpp/unrar/unpack30.cpp"
      $403 = (($402) + 64)|0; //@line 519 "./src/cpp/unrar/unpack30.cpp"
      $404 = $29; //@line 519 "./src/cpp/unrar/unpack30.cpp"
      $405 = (($403) - ($404))|0; //@line 519 "./src/cpp/unrar/unpack30.cpp"
      __ZN5ArrayIhE3AddEj($401,$405); //@line 519 "./src/cpp/unrar/unpack30.cpp"
     }
     $406 = $11; //@line 520 "./src/cpp/unrar/unpack30.cpp"
     $407 = ((($406)) + 20|0); //@line 520 "./src/cpp/unrar/unpack30.cpp"
     $408 = ((($407)) + 24|0); //@line 520 "./src/cpp/unrar/unpack30.cpp"
     $409 = (__ZNK5ArrayIhEixEj($408,64)|0); //@line 520 "./src/cpp/unrar/unpack30.cpp"
     $30 = $409; //@line 520 "./src/cpp/unrar/unpack30.cpp"
     $31 = 0; //@line 521 "./src/cpp/unrar/unpack30.cpp"
     while(1) {
      $410 = $31; //@line 521 "./src/cpp/unrar/unpack30.cpp"
      $411 = $28; //@line 521 "./src/cpp/unrar/unpack30.cpp"
      $412 = ($410>>>0)<($411>>>0); //@line 521 "./src/cpp/unrar/unpack30.cpp"
      if (!($412)) {
       break L107;
      }
      $413 = ((($32)) + 59016|0); //@line 523 "./src/cpp/unrar/unpack30.cpp"
      $414 = (__ZN8BitInput8OverflowEj($413,3)|0); //@line 523 "./src/cpp/unrar/unpack30.cpp"
      if ($414) {
       break;
      }
      $415 = ((($32)) + 59016|0); //@line 525 "./src/cpp/unrar/unpack30.cpp"
      $416 = (__ZN8BitInput8fgetbitsEv($415)|0); //@line 525 "./src/cpp/unrar/unpack30.cpp"
      $417 = $416 >>> 8; //@line 525 "./src/cpp/unrar/unpack30.cpp"
      $418 = $417&255; //@line 525 "./src/cpp/unrar/unpack30.cpp"
      $419 = $30; //@line 525 "./src/cpp/unrar/unpack30.cpp"
      $420 = $31; //@line 525 "./src/cpp/unrar/unpack30.cpp"
      $421 = (($419) + ($420)|0); //@line 525 "./src/cpp/unrar/unpack30.cpp"
      HEAP8[$421>>0] = $418; //@line 525 "./src/cpp/unrar/unpack30.cpp"
      $422 = ((($32)) + 59016|0); //@line 526 "./src/cpp/unrar/unpack30.cpp"
      __ZN8BitInput8faddbitsEj($422,8); //@line 526 "./src/cpp/unrar/unpack30.cpp"
      $423 = $31; //@line 521 "./src/cpp/unrar/unpack30.cpp"
      $424 = (($423) + 1)|0; //@line 521 "./src/cpp/unrar/unpack30.cpp"
      $31 = $424; //@line 521 "./src/cpp/unrar/unpack30.cpp"
     }
     $$expand_i1_val17 = 0; //@line 524 "./src/cpp/unrar/unpack30.cpp"
     HEAP8[$4>>0] = $$expand_i1_val17; //@line 524 "./src/cpp/unrar/unpack30.cpp"
     $$pre_trunc = HEAP8[$4>>0]|0; //@line 530 "./src/cpp/unrar/unpack30.cpp"
     $425 = $$pre_trunc&1; //@line 530 "./src/cpp/unrar/unpack30.cpp"
     STACKTOP = sp;return ($425|0); //@line 530 "./src/cpp/unrar/unpack30.cpp"
    }
   } while(0);
   $$expand_i1_val19 = 1; //@line 529 "./src/cpp/unrar/unpack30.cpp"
   HEAP8[$4>>0] = $$expand_i1_val19; //@line 529 "./src/cpp/unrar/unpack30.cpp"
   $$pre_trunc = HEAP8[$4>>0]|0; //@line 530 "./src/cpp/unrar/unpack30.cpp"
   $425 = $$pre_trunc&1; //@line 530 "./src/cpp/unrar/unpack30.cpp"
   STACKTOP = sp;return ($425|0); //@line 530 "./src/cpp/unrar/unpack30.cpp"
  }
 }
 $$expand_i1_val = 0; //@line 376 "./src/cpp/unrar/unpack30.cpp"
 HEAP8[$4>>0] = $$expand_i1_val; //@line 376 "./src/cpp/unrar/unpack30.cpp"
 $$pre_trunc = HEAP8[$4>>0]|0; //@line 530 "./src/cpp/unrar/unpack30.cpp"
 $425 = $$pre_trunc&1; //@line 530 "./src/cpp/unrar/unpack30.cpp"
 STACKTOP = sp;return ($425|0); //@line 530 "./src/cpp/unrar/unpack30.cpp"
}
function __ZN5ArrayIiE4SizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 86 "./src/cpp/unrar/array.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 86 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($4|0); //@line 86 "./src/cpp/unrar/array.hpp"
}
function __ZN14UnpackFilter30C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0); //@line 146 "./src/cpp/unrar/unpack.hpp"
 __ZN18VM_PreparedProgramC2Ev($3); //@line 146 "./src/cpp/unrar/unpack.hpp"
 STACKTOP = sp;return; //@line 146 "./src/cpp/unrar/unpack.hpp"
}
function __ZN5ArrayIP14UnpackFilter30E3AddEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = $3; //@line 92 "./src/cpp/unrar/array.hpp"
 $9 = ((($7)) + 4|0); //@line 92 "./src/cpp/unrar/array.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 92 "./src/cpp/unrar/array.hpp"
 $11 = (($10) + ($8))|0; //@line 92 "./src/cpp/unrar/array.hpp"
 HEAP32[$9>>2] = $11; //@line 92 "./src/cpp/unrar/array.hpp"
 $12 = ((($7)) + 4|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $13 = HEAP32[$12>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $14 = ((($7)) + 8|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $15 = HEAP32[$14>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $16 = ($13>>>0)>($15>>>0); //@line 93 "./src/cpp/unrar/array.hpp"
 if (!($16)) {
  STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
 }
 $17 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
 $18 = HEAP32[$17>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
 $19 = ($18|0)!=(0); //@line 95 "./src/cpp/unrar/array.hpp"
 if ($19) {
  $20 = ((($7)) + 4|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $21 = HEAP32[$20>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $22 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $23 = HEAP32[$22>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $24 = ($21>>>0)>($23>>>0); //@line 95 "./src/cpp/unrar/array.hpp"
  if ($24) {
   $25 = ((($7)) + 12|0); //@line 97 "./src/cpp/unrar/array.hpp"
   $26 = HEAP32[$25>>2]|0; //@line 97 "./src/cpp/unrar/array.hpp"
   HEAP32[$vararg_buffer>>2] = $26; //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler13GeneralErrMsgEPKwz(756,2544,$vararg_buffer); //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler11MemoryErrorEv(756); //@line 98 "./src/cpp/unrar/array.hpp"
  }
 }
 $27 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $28 = HEAP32[$27>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $29 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $30 = HEAP32[$29>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $31 = (($30>>>0) / 4)&-1; //@line 101 "./src/cpp/unrar/array.hpp"
 $32 = (($28) + ($31))|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $33 = (($32) + 32)|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $4 = $33; //@line 101 "./src/cpp/unrar/array.hpp"
 $34 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
 $35 = HEAP32[$34>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
 $36 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
 $37 = ($35>>>0)>($36>>>0); //@line 102 "./src/cpp/unrar/array.hpp"
 if ($37) {
  $38 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
  $39 = HEAP32[$38>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $39;
 } else {
  $40 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $40;
 }
 $5 = $41; //@line 102 "./src/cpp/unrar/array.hpp"
 $42 = HEAP32[$7>>2]|0; //@line 104 "./src/cpp/unrar/array.hpp"
 $43 = $5; //@line 104 "./src/cpp/unrar/array.hpp"
 $44 = $43<<2; //@line 104 "./src/cpp/unrar/array.hpp"
 $45 = (_realloc($42,$44)|0); //@line 104 "./src/cpp/unrar/array.hpp"
 $6 = $45; //@line 104 "./src/cpp/unrar/array.hpp"
 $46 = $6; //@line 105 "./src/cpp/unrar/array.hpp"
 $47 = ($46|0)==(0|0); //@line 105 "./src/cpp/unrar/array.hpp"
 if ($47) {
  __ZN12ErrorHandler11MemoryErrorEv(756); //@line 106 "./src/cpp/unrar/array.hpp"
 }
 $48 = $6; //@line 107 "./src/cpp/unrar/array.hpp"
 HEAP32[$7>>2] = $48; //@line 107 "./src/cpp/unrar/array.hpp"
 $49 = $5; //@line 108 "./src/cpp/unrar/array.hpp"
 $50 = ((($7)) + 8|0); //@line 108 "./src/cpp/unrar/array.hpp"
 HEAP32[$50>>2] = $49; //@line 108 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIiE4PushEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5ArrayIiE3AddEj($4,1); //@line 153 "./src/cpp/unrar/array.hpp"
 $5 = $3; //@line 154 "./src/cpp/unrar/array.hpp"
 $6 = (__ZN5ArrayIiE4SizeEv($4)|0); //@line 154 "./src/cpp/unrar/array.hpp"
 $7 = (($6) - 1)|0; //@line 154 "./src/cpp/unrar/array.hpp"
 $8 = (__ZNK5ArrayIiEixEj($4,$7)|0); //@line 154 "./src/cpp/unrar/array.hpp"
 HEAP32[$8>>2] = $5; //@line 154 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 155 "./src/cpp/unrar/array.hpp"
}
function __ZNK5ArrayIiEixEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 74 "./src/cpp/unrar/array.hpp"
 $6 = $3; //@line 74 "./src/cpp/unrar/array.hpp"
 $7 = (($5) + ($6<<2)|0); //@line 74 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($7|0); //@line 74 "./src/cpp/unrar/array.hpp"
}
function __ZN8BitInput8OverflowEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 63 "./src/cpp/unrar/getbits.hpp"
 $6 = $3; //@line 63 "./src/cpp/unrar/getbits.hpp"
 $7 = (($5) + ($6))|0; //@line 63 "./src/cpp/unrar/getbits.hpp"
 $8 = ($7>>>0)>=(32768); //@line 63 "./src/cpp/unrar/getbits.hpp"
 STACKTOP = sp;return ($8|0); //@line 63 "./src/cpp/unrar/getbits.hpp"
}
function __ZN5ArrayIiE3AddEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = $3; //@line 92 "./src/cpp/unrar/array.hpp"
 $9 = ((($7)) + 4|0); //@line 92 "./src/cpp/unrar/array.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 92 "./src/cpp/unrar/array.hpp"
 $11 = (($10) + ($8))|0; //@line 92 "./src/cpp/unrar/array.hpp"
 HEAP32[$9>>2] = $11; //@line 92 "./src/cpp/unrar/array.hpp"
 $12 = ((($7)) + 4|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $13 = HEAP32[$12>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $14 = ((($7)) + 8|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $15 = HEAP32[$14>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $16 = ($13>>>0)>($15>>>0); //@line 93 "./src/cpp/unrar/array.hpp"
 if (!($16)) {
  STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
 }
 $17 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
 $18 = HEAP32[$17>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
 $19 = ($18|0)!=(0); //@line 95 "./src/cpp/unrar/array.hpp"
 if ($19) {
  $20 = ((($7)) + 4|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $21 = HEAP32[$20>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $22 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $23 = HEAP32[$22>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $24 = ($21>>>0)>($23>>>0); //@line 95 "./src/cpp/unrar/array.hpp"
  if ($24) {
   $25 = ((($7)) + 12|0); //@line 97 "./src/cpp/unrar/array.hpp"
   $26 = HEAP32[$25>>2]|0; //@line 97 "./src/cpp/unrar/array.hpp"
   HEAP32[$vararg_buffer>>2] = $26; //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler13GeneralErrMsgEPKwz(756,2544,$vararg_buffer); //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler11MemoryErrorEv(756); //@line 98 "./src/cpp/unrar/array.hpp"
  }
 }
 $27 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $28 = HEAP32[$27>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $29 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $30 = HEAP32[$29>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $31 = (($30>>>0) / 4)&-1; //@line 101 "./src/cpp/unrar/array.hpp"
 $32 = (($28) + ($31))|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $33 = (($32) + 32)|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $4 = $33; //@line 101 "./src/cpp/unrar/array.hpp"
 $34 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
 $35 = HEAP32[$34>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
 $36 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
 $37 = ($35>>>0)>($36>>>0); //@line 102 "./src/cpp/unrar/array.hpp"
 if ($37) {
  $38 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
  $39 = HEAP32[$38>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $39;
 } else {
  $40 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $40;
 }
 $5 = $41; //@line 102 "./src/cpp/unrar/array.hpp"
 $42 = HEAP32[$7>>2]|0; //@line 104 "./src/cpp/unrar/array.hpp"
 $43 = $5; //@line 104 "./src/cpp/unrar/array.hpp"
 $44 = $43<<2; //@line 104 "./src/cpp/unrar/array.hpp"
 $45 = (_realloc($42,$44)|0); //@line 104 "./src/cpp/unrar/array.hpp"
 $6 = $45; //@line 104 "./src/cpp/unrar/array.hpp"
 $46 = $6; //@line 105 "./src/cpp/unrar/array.hpp"
 $47 = ($46|0)==(0|0); //@line 105 "./src/cpp/unrar/array.hpp"
 if ($47) {
  __ZN12ErrorHandler11MemoryErrorEv(756); //@line 106 "./src/cpp/unrar/array.hpp"
 }
 $48 = $6; //@line 107 "./src/cpp/unrar/array.hpp"
 HEAP32[$7>>2] = $48; //@line 107 "./src/cpp/unrar/array.hpp"
 $49 = $5; //@line 108 "./src/cpp/unrar/array.hpp"
 $50 = ((($7)) + 8|0); //@line 108 "./src/cpp/unrar/array.hpp"
 HEAP32[$50>>2] = $49; //@line 108 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
}
function __ZN18VM_PreparedProgramC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __ZN5ArrayI18VM_PreparedCommandEC2Ev($4); //@line 58 "./src/cpp/unrar/rarvm.hpp"
 $5 = ((($4)) + 24|0); //@line 58 "./src/cpp/unrar/rarvm.hpp"
 __THREW__ = 0;
 invoke_vi(86,($5|0)); //@line 58 "./src/cpp/unrar/rarvm.hpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $14 = ___cxa_find_matching_catch_2()|0;
  $15 = tempRet0;
  $2 = $14; //@line 63 "./src/cpp/unrar/rarvm.hpp"
  $3 = $15; //@line 63 "./src/cpp/unrar/rarvm.hpp"
  __ZN5ArrayI18VM_PreparedCommandED2Ev($4); //@line 63 "./src/cpp/unrar/rarvm.hpp"
  $18 = $2; //@line 63 "./src/cpp/unrar/rarvm.hpp"
  $19 = $3; //@line 63 "./src/cpp/unrar/rarvm.hpp"
  ___resumeException($18|0);
  // unreachable;
 }
 $8 = ((($4)) + 40|0); //@line 58 "./src/cpp/unrar/rarvm.hpp"
 __THREW__ = 0;
 invoke_vi(86,($8|0)); //@line 58 "./src/cpp/unrar/rarvm.hpp"
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  $11 = ((($4)) + 16|0); //@line 60 "./src/cpp/unrar/rarvm.hpp"
  HEAP32[$11>>2] = 0; //@line 60 "./src/cpp/unrar/rarvm.hpp"
  $12 = ((($4)) + 88|0); //@line 61 "./src/cpp/unrar/rarvm.hpp"
  HEAP32[$12>>2] = 0; //@line 61 "./src/cpp/unrar/rarvm.hpp"
  $13 = ((($4)) + 20|0); //@line 62 "./src/cpp/unrar/rarvm.hpp"
  HEAP32[$13>>2] = 0; //@line 62 "./src/cpp/unrar/rarvm.hpp"
  STACKTOP = sp;return; //@line 63 "./src/cpp/unrar/rarvm.hpp"
 }
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $2 = $16; //@line 63 "./src/cpp/unrar/rarvm.hpp"
 $3 = $17; //@line 63 "./src/cpp/unrar/rarvm.hpp"
 __ZN5ArrayIhED2Ev($5); //@line 63 "./src/cpp/unrar/rarvm.hpp"
 __ZN5ArrayI18VM_PreparedCommandED2Ev($4); //@line 63 "./src/cpp/unrar/rarvm.hpp"
 $18 = $2; //@line 63 "./src/cpp/unrar/rarvm.hpp"
 $19 = $3; //@line 63 "./src/cpp/unrar/rarvm.hpp"
 ___resumeException($18|0);
 // unreachable;
}
function __ZN5ArrayI18VM_PreparedCommandEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5ArrayI18VM_PreparedCommandE9CleanDataEv($2); //@line 44 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 45 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayI18VM_PreparedCommandE9CleanDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0; //@line 35 "./src/cpp/unrar/array.hpp"
 $3 = ((($2)) + 4|0); //@line 36 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 36 "./src/cpp/unrar/array.hpp"
 $4 = ((($2)) + 8|0); //@line 37 "./src/cpp/unrar/array.hpp"
 HEAP32[$4>>2] = 0; //@line 37 "./src/cpp/unrar/array.hpp"
 $5 = ((($2)) + 12|0); //@line 38 "./src/cpp/unrar/array.hpp"
 HEAP32[$5>>2] = 0; //@line 38 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/array.hpp"
}
function __ZN6Unpack12UnpWriteAreaEjj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = $5; //@line 471 "./src/cpp/unrar/unpack50.cpp"
 $10 = $4; //@line 471 "./src/cpp/unrar/unpack50.cpp"
 $11 = ($9|0)!=($10|0); //@line 471 "./src/cpp/unrar/unpack50.cpp"
 if ($11) {
  $12 = ((($8)) + 19514|0); //@line 472 "./src/cpp/unrar/unpack50.cpp"
  HEAP8[$12>>0] = 1; //@line 472 "./src/cpp/unrar/unpack50.cpp"
 }
 $13 = $5; //@line 473 "./src/cpp/unrar/unpack50.cpp"
 $14 = $4; //@line 473 "./src/cpp/unrar/unpack50.cpp"
 $15 = ($13>>>0)<($14>>>0); //@line 473 "./src/cpp/unrar/unpack50.cpp"
 if ($15) {
  $16 = ((($8)) + 19513|0); //@line 474 "./src/cpp/unrar/unpack50.cpp"
  HEAP8[$16>>0] = 1; //@line 474 "./src/cpp/unrar/unpack50.cpp"
 }
 $17 = ((($8)) + 19496|0); //@line 476 "./src/cpp/unrar/unpack50.cpp"
 $18 = HEAP8[$17>>0]|0; //@line 476 "./src/cpp/unrar/unpack50.cpp"
 $19 = $18&1; //@line 476 "./src/cpp/unrar/unpack50.cpp"
 $20 = $5;
 $21 = $4;
 if ($19) {
  $22 = (($20) - ($21))|0; //@line 478 "./src/cpp/unrar/unpack50.cpp"
  $23 = ((($8)) + 59088|0); //@line 478 "./src/cpp/unrar/unpack50.cpp"
  $24 = HEAP32[$23>>2]|0; //@line 478 "./src/cpp/unrar/unpack50.cpp"
  $25 = $22 & $24; //@line 478 "./src/cpp/unrar/unpack50.cpp"
  $6 = $25; //@line 478 "./src/cpp/unrar/unpack50.cpp"
  while(1) {
   $26 = $6; //@line 479 "./src/cpp/unrar/unpack50.cpp"
   $27 = ($26>>>0)>(0); //@line 479 "./src/cpp/unrar/unpack50.cpp"
   if (!($27)) {
    break;
   }
   $28 = ((($8)) + 19240|0); //@line 481 "./src/cpp/unrar/unpack50.cpp"
   $29 = $4; //@line 481 "./src/cpp/unrar/unpack50.cpp"
   $30 = $6; //@line 481 "./src/cpp/unrar/unpack50.cpp"
   $31 = (__ZN16FragmentedWindow12GetBlockSizeEjj($28,$29,$30)|0); //@line 481 "./src/cpp/unrar/unpack50.cpp"
   $7 = $31; //@line 481 "./src/cpp/unrar/unpack50.cpp"
   $32 = ((($8)) + 19240|0); //@line 482 "./src/cpp/unrar/unpack50.cpp"
   $33 = $4; //@line 482 "./src/cpp/unrar/unpack50.cpp"
   $34 = (__ZN16FragmentedWindowixEj($32,$33)|0); //@line 482 "./src/cpp/unrar/unpack50.cpp"
   $35 = $7; //@line 482 "./src/cpp/unrar/unpack50.cpp"
   __ZN6Unpack12UnpWriteDataEPhj($8,$34,$35); //@line 482 "./src/cpp/unrar/unpack50.cpp"
   $36 = $7; //@line 483 "./src/cpp/unrar/unpack50.cpp"
   $37 = $6; //@line 483 "./src/cpp/unrar/unpack50.cpp"
   $38 = (($37) - ($36))|0; //@line 483 "./src/cpp/unrar/unpack50.cpp"
   $6 = $38; //@line 483 "./src/cpp/unrar/unpack50.cpp"
   $39 = $4; //@line 484 "./src/cpp/unrar/unpack50.cpp"
   $40 = $7; //@line 484 "./src/cpp/unrar/unpack50.cpp"
   $41 = (($39) + ($40))|0; //@line 484 "./src/cpp/unrar/unpack50.cpp"
   $42 = ((($8)) + 59088|0); //@line 484 "./src/cpp/unrar/unpack50.cpp"
   $43 = HEAP32[$42>>2]|0; //@line 484 "./src/cpp/unrar/unpack50.cpp"
   $44 = $41 & $43; //@line 484 "./src/cpp/unrar/unpack50.cpp"
   $4 = $44; //@line 484 "./src/cpp/unrar/unpack50.cpp"
  }
  STACKTOP = sp;return; //@line 495 "./src/cpp/unrar/unpack50.cpp"
 }
 $45 = ($20>>>0)<($21>>>0); //@line 488 "./src/cpp/unrar/unpack50.cpp"
 $46 = ((($8)) + 19236|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = $4;
 $49 = (($47) + ($48)|0);
 if ($45) {
  $50 = ((($8)) + 59084|0); //@line 490 "./src/cpp/unrar/unpack50.cpp"
  $51 = HEAP32[$50>>2]|0; //@line 490 "./src/cpp/unrar/unpack50.cpp"
  $52 = $4; //@line 490 "./src/cpp/unrar/unpack50.cpp"
  $53 = (($51) - ($52))|0; //@line 490 "./src/cpp/unrar/unpack50.cpp"
  __ZN6Unpack12UnpWriteDataEPhj($8,$49,$53); //@line 490 "./src/cpp/unrar/unpack50.cpp"
  $54 = ((($8)) + 19236|0); //@line 491 "./src/cpp/unrar/unpack50.cpp"
  $55 = HEAP32[$54>>2]|0; //@line 491 "./src/cpp/unrar/unpack50.cpp"
  $56 = $5; //@line 491 "./src/cpp/unrar/unpack50.cpp"
  __ZN6Unpack12UnpWriteDataEPhj($8,$55,$56); //@line 491 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return; //@line 495 "./src/cpp/unrar/unpack50.cpp"
 } else {
  $57 = $5; //@line 494 "./src/cpp/unrar/unpack50.cpp"
  $58 = $4; //@line 494 "./src/cpp/unrar/unpack50.cpp"
  $59 = (($57) - ($58))|0; //@line 494 "./src/cpp/unrar/unpack50.cpp"
  __ZN6Unpack12UnpWriteDataEPhj($8,$49,$59); //@line 494 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return; //@line 495 "./src/cpp/unrar/unpack50.cpp"
 }
}
function __ZN6Unpack11ExecuteCodeEP18VM_PreparedProgram($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 699 "./src/cpp/unrar/unpack30.cpp"
 $6 = ((($5)) + 24|0); //@line 699 "./src/cpp/unrar/unpack30.cpp"
 $7 = (__ZN5ArrayIhE4SizeEv($6)|0); //@line 699 "./src/cpp/unrar/unpack30.cpp"
 $8 = ($7>>>0)>(0); //@line 699 "./src/cpp/unrar/unpack30.cpp"
 if (!($8)) {
  STACKTOP = sp;return; //@line 706 "./src/cpp/unrar/unpack30.cpp"
 }
 $9 = ((($4)) + 19520|0); //@line 701 "./src/cpp/unrar/unpack30.cpp"
 $10 = $9; //@line 701 "./src/cpp/unrar/unpack30.cpp"
 $11 = $10; //@line 701 "./src/cpp/unrar/unpack30.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 701 "./src/cpp/unrar/unpack30.cpp"
 $13 = (($10) + 4)|0; //@line 701 "./src/cpp/unrar/unpack30.cpp"
 $14 = $13; //@line 701 "./src/cpp/unrar/unpack30.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 701 "./src/cpp/unrar/unpack30.cpp"
 $16 = $3; //@line 701 "./src/cpp/unrar/unpack30.cpp"
 $17 = ((($16)) + 56|0); //@line 701 "./src/cpp/unrar/unpack30.cpp"
 $18 = ((($17)) + 24|0); //@line 701 "./src/cpp/unrar/unpack30.cpp"
 HEAP32[$18>>2] = $12; //@line 701 "./src/cpp/unrar/unpack30.cpp"
 $19 = ((($4)) + 58960|0); //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $20 = $3; //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $21 = ((($20)) + 24|0); //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $22 = (__ZNK5ArrayIhEixEj($21,36)|0); //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $23 = ((($4)) + 19520|0); //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $24 = $23; //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $25 = $24; //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $26 = HEAP32[$25>>2]|0; //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $27 = (($24) + 4)|0; //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $28 = $27; //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $29 = HEAP32[$28>>2]|0; //@line 702 "./src/cpp/unrar/unpack30.cpp"
 __ZN5RarVM17SetLowEndianValueEPjj($19,$22,$26); //@line 702 "./src/cpp/unrar/unpack30.cpp"
 $30 = ((($4)) + 58960|0); //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $31 = $3; //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $32 = ((($31)) + 24|0); //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $33 = (__ZNK5ArrayIhEixEj($32,40)|0); //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $34 = ((($4)) + 19520|0); //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $35 = $34; //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $36 = $35; //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $37 = HEAP32[$36>>2]|0; //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $38 = (($35) + 4)|0; //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $39 = $38; //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $40 = HEAP32[$39>>2]|0; //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $41 = (_bitshift64Ashr(($37|0),($40|0),32)|0); //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $42 = tempRet0; //@line 703 "./src/cpp/unrar/unpack30.cpp"
 __ZN5RarVM17SetLowEndianValueEPjj($30,$33,$41); //@line 703 "./src/cpp/unrar/unpack30.cpp"
 $43 = ((($4)) + 58960|0); //@line 704 "./src/cpp/unrar/unpack30.cpp"
 $44 = $3; //@line 704 "./src/cpp/unrar/unpack30.cpp"
 __ZN5RarVM7ExecuteEP18VM_PreparedProgram($43,$44); //@line 704 "./src/cpp/unrar/unpack30.cpp"
 STACKTOP = sp;return; //@line 706 "./src/cpp/unrar/unpack30.cpp"
}
function __ZN16FragmentedWindow12GetBlockSizeEjj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $4;
 $7 = 0; //@line 99 "./src/cpp/unrar/unpack50frag.cpp"
 while(1) {
  $9 = $7; //@line 99 "./src/cpp/unrar/unpack50frag.cpp"
  $10 = ($9>>>0)<(32); //@line 99 "./src/cpp/unrar/unpack50frag.cpp"
  if (!($10)) {
   label = 9;
   break;
  }
  $11 = $5; //@line 100 "./src/cpp/unrar/unpack50frag.cpp"
  $12 = ((($8)) + 128|0); //@line 100 "./src/cpp/unrar/unpack50frag.cpp"
  $13 = $7; //@line 100 "./src/cpp/unrar/unpack50frag.cpp"
  $14 = (($12) + ($13<<2)|0); //@line 100 "./src/cpp/unrar/unpack50frag.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 100 "./src/cpp/unrar/unpack50frag.cpp"
  $16 = ($11>>>0)<($15>>>0); //@line 100 "./src/cpp/unrar/unpack50frag.cpp"
  if ($16) {
   break;
  }
  $33 = $7; //@line 99 "./src/cpp/unrar/unpack50frag.cpp"
  $34 = (($33) + 1)|0; //@line 99 "./src/cpp/unrar/unpack50frag.cpp"
  $7 = $34; //@line 99 "./src/cpp/unrar/unpack50frag.cpp"
 }
 if ((label|0) == 9) {
  $3 = 0; //@line 102 "./src/cpp/unrar/unpack50frag.cpp"
  $35 = $3; //@line 103 "./src/cpp/unrar/unpack50frag.cpp"
  STACKTOP = sp;return ($35|0); //@line 103 "./src/cpp/unrar/unpack50frag.cpp"
 }
 $17 = ((($8)) + 128|0); //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
 $18 = $7; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
 $19 = (($17) + ($18<<2)|0); //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
 $20 = HEAP32[$19>>2]|0; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
 $21 = $5; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
 $22 = (($20) - ($21))|0; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
 $23 = $6; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
 $24 = ($22>>>0)<($23>>>0); //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
 if ($24) {
  $25 = ((($8)) + 128|0); //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
  $26 = $7; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
  $27 = (($25) + ($26<<2)|0); //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
  $29 = $5; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
  $30 = (($28) - ($29))|0; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
  $32 = $30;
 } else {
  $31 = $6; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
  $32 = $31;
 }
 $3 = $32; //@line 101 "./src/cpp/unrar/unpack50frag.cpp"
 $35 = $3; //@line 103 "./src/cpp/unrar/unpack50frag.cpp"
 STACKTOP = sp;return ($35|0); //@line 103 "./src/cpp/unrar/unpack50frag.cpp"
}
function __ZN16FragmentedWindowixEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3;
 $7 = $4; //@line 68 "./src/cpp/unrar/unpack50frag.cpp"
 $8 = ((($6)) + 128|0); //@line 68 "./src/cpp/unrar/unpack50frag.cpp"
 $9 = HEAP32[$8>>2]|0; //@line 68 "./src/cpp/unrar/unpack50frag.cpp"
 $10 = ($7>>>0)<($9>>>0); //@line 68 "./src/cpp/unrar/unpack50frag.cpp"
 if ($10) {
  $11 = HEAP32[$6>>2]|0; //@line 69 "./src/cpp/unrar/unpack50frag.cpp"
  $12 = $4; //@line 69 "./src/cpp/unrar/unpack50frag.cpp"
  $13 = (($11) + ($12)|0); //@line 69 "./src/cpp/unrar/unpack50frag.cpp"
  $2 = $13; //@line 69 "./src/cpp/unrar/unpack50frag.cpp"
  $36 = $2; //@line 74 "./src/cpp/unrar/unpack50frag.cpp"
  STACKTOP = sp;return ($36|0); //@line 74 "./src/cpp/unrar/unpack50frag.cpp"
 }
 $5 = 1; //@line 70 "./src/cpp/unrar/unpack50frag.cpp"
 while(1) {
  $14 = $5; //@line 70 "./src/cpp/unrar/unpack50frag.cpp"
  $15 = ($14>>>0)<(32); //@line 70 "./src/cpp/unrar/unpack50frag.cpp"
  if (!($15)) {
   label = 8;
   break;
  }
  $16 = $4; //@line 71 "./src/cpp/unrar/unpack50frag.cpp"
  $17 = ((($6)) + 128|0); //@line 71 "./src/cpp/unrar/unpack50frag.cpp"
  $18 = $5; //@line 71 "./src/cpp/unrar/unpack50frag.cpp"
  $19 = (($17) + ($18<<2)|0); //@line 71 "./src/cpp/unrar/unpack50frag.cpp"
  $20 = HEAP32[$19>>2]|0; //@line 71 "./src/cpp/unrar/unpack50frag.cpp"
  $21 = ($16>>>0)<($20>>>0); //@line 71 "./src/cpp/unrar/unpack50frag.cpp"
  if ($21) {
   label = 6;
   break;
  }
  $33 = $5; //@line 70 "./src/cpp/unrar/unpack50frag.cpp"
  $34 = (($33) + 1)|0; //@line 70 "./src/cpp/unrar/unpack50frag.cpp"
  $5 = $34; //@line 70 "./src/cpp/unrar/unpack50frag.cpp"
 }
 if ((label|0) == 6) {
  $22 = $5; //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $23 = (($6) + ($22<<2)|0); //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $24 = HEAP32[$23>>2]|0; //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $25 = $4; //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $26 = ((($6)) + 128|0); //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $27 = $5; //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $28 = (($27) - 1)|0; //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $29 = (($26) + ($28<<2)|0); //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $30 = HEAP32[$29>>2]|0; //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $31 = (($25) - ($30))|0; //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $32 = (($24) + ($31)|0); //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $2 = $32; //@line 72 "./src/cpp/unrar/unpack50frag.cpp"
  $36 = $2; //@line 74 "./src/cpp/unrar/unpack50frag.cpp"
  STACKTOP = sp;return ($36|0); //@line 74 "./src/cpp/unrar/unpack50frag.cpp"
 }
 else if ((label|0) == 8) {
  $35 = HEAP32[$6>>2]|0; //@line 73 "./src/cpp/unrar/unpack50frag.cpp"
  $2 = $35; //@line 73 "./src/cpp/unrar/unpack50frag.cpp"
  $36 = $2; //@line 74 "./src/cpp/unrar/unpack50frag.cpp"
  STACKTOP = sp;return ($36|0); //@line 74 "./src/cpp/unrar/unpack50frag.cpp"
 }
 return (0)|0;
}
function __ZN6Unpack12UnpWriteDataEPhj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = ((($8)) + 19520|0); //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $10 = $9; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $11 = $10; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $13 = (($10) + 4)|0; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $14 = $13; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $16 = ((($8)) + 19504|0); //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $17 = $16; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $18 = $17; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $19 = HEAP32[$18>>2]|0; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $20 = (($17) + 4)|0; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $21 = $20; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $23 = ($15|0)>($22|0); //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $24 = ($12>>>0)>=($19>>>0); //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $25 = ($15|0)==($22|0); //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $26 = $25 & $24; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 $27 = $23 | $26; //@line 500 "./src/cpp/unrar/unpack50.cpp"
 if ($27) {
  STACKTOP = sp;return; //@line 508 "./src/cpp/unrar/unpack50.cpp"
 }
 $28 = $5; //@line 502 "./src/cpp/unrar/unpack50.cpp"
 $6 = $28; //@line 502 "./src/cpp/unrar/unpack50.cpp"
 $29 = ((($8)) + 19504|0); //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $30 = $29; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $31 = $30; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $32 = HEAP32[$31>>2]|0; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $33 = (($30) + 4)|0; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $34 = $33; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $36 = ((($8)) + 19520|0); //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $37 = $36; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $38 = $37; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $39 = HEAP32[$38>>2]|0; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $40 = (($37) + 4)|0; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $41 = $40; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $42 = HEAP32[$41>>2]|0; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $43 = (_i64Subtract(($32|0),($35|0),($39|0),($42|0))|0); //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $44 = tempRet0; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $45 = $7; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $46 = $45; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$46>>2] = $43; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $47 = (($45) + 4)|0; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $48 = $47; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$48>>2] = $44; //@line 503 "./src/cpp/unrar/unpack50.cpp"
 $49 = $6; //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $50 = $7; //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $51 = $50; //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $52 = HEAP32[$51>>2]|0; //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $53 = (($50) + 4)|0; //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $54 = $53; //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $55 = HEAP32[$54>>2]|0; //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $56 = (0)>($55|0); //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $57 = ($49>>>0)>($52>>>0); //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $58 = (0)==($55|0); //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $59 = $58 & $57; //@line 504 "./src/cpp/unrar/unpack50.cpp"
 $60 = $56 | $59; //@line 504 "./src/cpp/unrar/unpack50.cpp"
 if ($60) {
  $61 = $7; //@line 505 "./src/cpp/unrar/unpack50.cpp"
  $62 = $61; //@line 505 "./src/cpp/unrar/unpack50.cpp"
  $63 = HEAP32[$62>>2]|0; //@line 505 "./src/cpp/unrar/unpack50.cpp"
  $64 = (($61) + 4)|0; //@line 505 "./src/cpp/unrar/unpack50.cpp"
  $65 = $64; //@line 505 "./src/cpp/unrar/unpack50.cpp"
  $66 = HEAP32[$65>>2]|0; //@line 505 "./src/cpp/unrar/unpack50.cpp"
  $6 = $63; //@line 505 "./src/cpp/unrar/unpack50.cpp"
 }
 $67 = HEAP32[$8>>2]|0; //@line 506 "./src/cpp/unrar/unpack50.cpp"
 $68 = $4; //@line 506 "./src/cpp/unrar/unpack50.cpp"
 $69 = $6; //@line 506 "./src/cpp/unrar/unpack50.cpp"
 __ZN11ComprDataIO8UnpWriteEPhj($67,$68,$69); //@line 506 "./src/cpp/unrar/unpack50.cpp"
 $70 = $5; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $71 = ((($8)) + 19520|0); //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $72 = $71; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $73 = $72; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $74 = HEAP32[$73>>2]|0; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $75 = (($72) + 4)|0; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $76 = $75; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $77 = HEAP32[$76>>2]|0; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $78 = (_i64Add(($74|0),($77|0),($70|0),0)|0); //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $79 = tempRet0; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $80 = $71; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $81 = $80; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$81>>2] = $78; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $82 = (($80) + 4)|0; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 $83 = $82; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$83>>2] = $79; //@line 507 "./src/cpp/unrar/unpack50.cpp"
 STACKTOP = sp;return; //@line 508 "./src/cpp/unrar/unpack50.cpp"
}
function __ZN6Unpack7Unpack5Eb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $11 = sp + 24|0;
 $2 = $0;
 $17 = $1&1;
 $3 = $17;
 $18 = $2;
 $19 = ((($18)) + 19528|0); //@line 3 "./src/cpp/unrar/unpack50.cpp"
 HEAP8[$19>>0] = 1; //@line 3 "./src/cpp/unrar/unpack50.cpp"
 $20 = ((($18)) + 19512|0); //@line 5 "./src/cpp/unrar/unpack50.cpp"
 $21 = HEAP8[$20>>0]|0; //@line 5 "./src/cpp/unrar/unpack50.cpp"
 $22 = $21&1; //@line 5 "./src/cpp/unrar/unpack50.cpp"
 if (!($22)) {
  $23 = $3; //@line 7 "./src/cpp/unrar/unpack50.cpp"
  $24 = $23&1; //@line 7 "./src/cpp/unrar/unpack50.cpp"
  __ZN6Unpack11UnpInitDataEb($18,$24); //@line 7 "./src/cpp/unrar/unpack50.cpp"
  $25 = (__ZN6Unpack10UnpReadBufEv($18)|0); //@line 8 "./src/cpp/unrar/unpack50.cpp"
  if (!($25)) {
   STACKTOP = sp;return; //@line 150 "./src/cpp/unrar/unpack50.cpp"
  }
  $26 = ((($18)) + 4|0); //@line 10 "./src/cpp/unrar/unpack50.cpp"
  $27 = ((($18)) + 112|0); //@line 10 "./src/cpp/unrar/unpack50.cpp"
  $28 = (__ZN6Unpack15ReadBlockHeaderER8BitInputR17UnpackBlockHeader($18,$26,$27)|0); //@line 10 "./src/cpp/unrar/unpack50.cpp"
  if (!($28)) {
   STACKTOP = sp;return; //@line 150 "./src/cpp/unrar/unpack50.cpp"
  }
  $29 = ((($18)) + 4|0); //@line 10 "./src/cpp/unrar/unpack50.cpp"
  $30 = ((($18)) + 112|0); //@line 10 "./src/cpp/unrar/unpack50.cpp"
  $31 = ((($18)) + 132|0); //@line 10 "./src/cpp/unrar/unpack50.cpp"
  $32 = (__ZN6Unpack10ReadTablesER8BitInputR17UnpackBlockHeaderR17UnpackBlockTables($18,$29,$30,$31)|0); //@line 10 "./src/cpp/unrar/unpack50.cpp"
  if (!($32)) {
   STACKTOP = sp;return; //@line 150 "./src/cpp/unrar/unpack50.cpp"
  }
 }
 L10: while(1) {
  $33 = ((($18)) + 59088|0); //@line 16 "./src/cpp/unrar/unpack50.cpp"
  $34 = HEAP32[$33>>2]|0; //@line 16 "./src/cpp/unrar/unpack50.cpp"
  $35 = ((($18)) + 96|0); //@line 16 "./src/cpp/unrar/unpack50.cpp"
  $36 = HEAP32[$35>>2]|0; //@line 16 "./src/cpp/unrar/unpack50.cpp"
  $37 = $36 & $34; //@line 16 "./src/cpp/unrar/unpack50.cpp"
  HEAP32[$35>>2] = $37; //@line 16 "./src/cpp/unrar/unpack50.cpp"
  $38 = ((($18)) + 4|0); //@line 18 "./src/cpp/unrar/unpack50.cpp"
  $39 = HEAP32[$38>>2]|0; //@line 18 "./src/cpp/unrar/unpack50.cpp"
  $40 = ((($18)) + 108|0); //@line 18 "./src/cpp/unrar/unpack50.cpp"
  $41 = HEAP32[$40>>2]|0; //@line 18 "./src/cpp/unrar/unpack50.cpp"
  $42 = ($39|0)>=($41|0); //@line 18 "./src/cpp/unrar/unpack50.cpp"
  if ($42) {
   $4 = 0; //@line 20 "./src/cpp/unrar/unpack50.cpp"
   while(1) {
    $43 = ((($18)) + 4|0); //@line 24 "./src/cpp/unrar/unpack50.cpp"
    $44 = HEAP32[$43>>2]|0; //@line 24 "./src/cpp/unrar/unpack50.cpp"
    $45 = ((($18)) + 112|0); //@line 24 "./src/cpp/unrar/unpack50.cpp"
    $46 = ((($45)) + 8|0); //@line 24 "./src/cpp/unrar/unpack50.cpp"
    $47 = HEAP32[$46>>2]|0; //@line 24 "./src/cpp/unrar/unpack50.cpp"
    $48 = ((($18)) + 112|0); //@line 24 "./src/cpp/unrar/unpack50.cpp"
    $49 = HEAP32[$48>>2]|0; //@line 24 "./src/cpp/unrar/unpack50.cpp"
    $50 = (($47) + ($49))|0; //@line 24 "./src/cpp/unrar/unpack50.cpp"
    $51 = (($50) - 1)|0; //@line 24 "./src/cpp/unrar/unpack50.cpp"
    $52 = ($44|0)>($51|0); //@line 24 "./src/cpp/unrar/unpack50.cpp"
    if (!($52)) {
     $53 = ((($18)) + 4|0); //@line 25 "./src/cpp/unrar/unpack50.cpp"
     $54 = HEAP32[$53>>2]|0; //@line 25 "./src/cpp/unrar/unpack50.cpp"
     $55 = ((($18)) + 112|0); //@line 25 "./src/cpp/unrar/unpack50.cpp"
     $56 = ((($55)) + 8|0); //@line 25 "./src/cpp/unrar/unpack50.cpp"
     $57 = HEAP32[$56>>2]|0; //@line 25 "./src/cpp/unrar/unpack50.cpp"
     $58 = ((($18)) + 112|0); //@line 25 "./src/cpp/unrar/unpack50.cpp"
     $59 = HEAP32[$58>>2]|0; //@line 25 "./src/cpp/unrar/unpack50.cpp"
     $60 = (($57) + ($59))|0; //@line 25 "./src/cpp/unrar/unpack50.cpp"
     $61 = (($60) - 1)|0; //@line 25 "./src/cpp/unrar/unpack50.cpp"
     $62 = ($54|0)==($61|0); //@line 25 "./src/cpp/unrar/unpack50.cpp"
     if (!($62)) {
      break;
     }
     $63 = ((($18)) + 4|0); //@line 26 "./src/cpp/unrar/unpack50.cpp"
     $64 = ((($63)) + 4|0); //@line 26 "./src/cpp/unrar/unpack50.cpp"
     $65 = HEAP32[$64>>2]|0; //@line 26 "./src/cpp/unrar/unpack50.cpp"
     $66 = ((($18)) + 112|0); //@line 26 "./src/cpp/unrar/unpack50.cpp"
     $67 = ((($66)) + 4|0); //@line 26 "./src/cpp/unrar/unpack50.cpp"
     $68 = HEAP32[$67>>2]|0; //@line 26 "./src/cpp/unrar/unpack50.cpp"
     $69 = ($65|0)>=($68|0); //@line 26 "./src/cpp/unrar/unpack50.cpp"
     if (!($69)) {
      break;
     }
    }
    $70 = ((($18)) + 112|0); //@line 28 "./src/cpp/unrar/unpack50.cpp"
    $71 = ((($70)) + 16|0); //@line 28 "./src/cpp/unrar/unpack50.cpp"
    $72 = HEAP8[$71>>0]|0; //@line 28 "./src/cpp/unrar/unpack50.cpp"
    $73 = $72&1; //@line 28 "./src/cpp/unrar/unpack50.cpp"
    if ($73) {
     label = 11;
     break;
    }
    $74 = ((($18)) + 4|0); //@line 33 "./src/cpp/unrar/unpack50.cpp"
    $75 = ((($18)) + 112|0); //@line 33 "./src/cpp/unrar/unpack50.cpp"
    $76 = (__ZN6Unpack15ReadBlockHeaderER8BitInputR17UnpackBlockHeader($18,$74,$75)|0); //@line 33 "./src/cpp/unrar/unpack50.cpp"
    if (!($76)) {
     label = 59;
     break L10;
    }
    $77 = ((($18)) + 4|0); //@line 33 "./src/cpp/unrar/unpack50.cpp"
    $78 = ((($18)) + 112|0); //@line 33 "./src/cpp/unrar/unpack50.cpp"
    $79 = ((($18)) + 132|0); //@line 33 "./src/cpp/unrar/unpack50.cpp"
    $80 = (__ZN6Unpack10ReadTablesER8BitInputR17UnpackBlockHeaderR17UnpackBlockTables($18,$77,$78,$79)|0); //@line 33 "./src/cpp/unrar/unpack50.cpp"
    if (!($80)) {
     label = 59;
     break L10;
    }
   }
   if ((label|0) == 11) {
    label = 0;
    $4 = 1; //@line 30 "./src/cpp/unrar/unpack50.cpp"
   }
   $81 = $4; //@line 36 "./src/cpp/unrar/unpack50.cpp"
   $82 = $81&1; //@line 36 "./src/cpp/unrar/unpack50.cpp"
   if ($82) {
    label = 58;
    break;
   }
   $83 = (__ZN6Unpack10UnpReadBufEv($18)|0); //@line 36 "./src/cpp/unrar/unpack50.cpp"
   if (!($83)) {
    label = 58;
    break;
   }
  }
  $84 = ((($18)) + 19232|0); //@line 40 "./src/cpp/unrar/unpack50.cpp"
  $85 = HEAP32[$84>>2]|0; //@line 40 "./src/cpp/unrar/unpack50.cpp"
  $86 = ((($18)) + 96|0); //@line 40 "./src/cpp/unrar/unpack50.cpp"
  $87 = HEAP32[$86>>2]|0; //@line 40 "./src/cpp/unrar/unpack50.cpp"
  $88 = (($85) - ($87))|0; //@line 40 "./src/cpp/unrar/unpack50.cpp"
  $89 = ((($18)) + 59088|0); //@line 40 "./src/cpp/unrar/unpack50.cpp"
  $90 = HEAP32[$89>>2]|0; //@line 40 "./src/cpp/unrar/unpack50.cpp"
  $91 = $88 & $90; //@line 40 "./src/cpp/unrar/unpack50.cpp"
  $92 = ($91>>>0)<(4100); //@line 40 "./src/cpp/unrar/unpack50.cpp"
  if ($92) {
   $93 = ((($18)) + 19232|0); //@line 40 "./src/cpp/unrar/unpack50.cpp"
   $94 = HEAP32[$93>>2]|0; //@line 40 "./src/cpp/unrar/unpack50.cpp"
   $95 = ((($18)) + 96|0); //@line 40 "./src/cpp/unrar/unpack50.cpp"
   $96 = HEAP32[$95>>2]|0; //@line 40 "./src/cpp/unrar/unpack50.cpp"
   $97 = ($94|0)!=($96|0); //@line 40 "./src/cpp/unrar/unpack50.cpp"
   if ($97) {
    __ZN6Unpack11UnpWriteBufEv($18); //@line 42 "./src/cpp/unrar/unpack50.cpp"
    $98 = ((($18)) + 19520|0); //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $99 = $98; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $100 = $99; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $101 = HEAP32[$100>>2]|0; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $102 = (($99) + 4)|0; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $103 = $102; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $104 = HEAP32[$103>>2]|0; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $105 = ((($18)) + 19504|0); //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $106 = $105; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $107 = $106; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $108 = HEAP32[$107>>2]|0; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $109 = (($106) + 4)|0; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $110 = $109; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $111 = HEAP32[$110>>2]|0; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $112 = ($104|0)>($111|0); //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $113 = ($101>>>0)>($108>>>0); //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $114 = ($104|0)==($111|0); //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $115 = $114 & $113; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    $116 = $112 | $115; //@line 43 "./src/cpp/unrar/unpack50.cpp"
    if ($116) {
     label = 59;
     break;
    }
    $117 = ((($18)) + 19512|0); //@line 45 "./src/cpp/unrar/unpack50.cpp"
    $118 = HEAP8[$117>>0]|0; //@line 45 "./src/cpp/unrar/unpack50.cpp"
    $119 = $118&1; //@line 45 "./src/cpp/unrar/unpack50.cpp"
    if ($119) {
     label = 20;
     break;
    }
   }
  }
  $121 = ((($18)) + 4|0); //@line 52 "./src/cpp/unrar/unpack50.cpp"
  $122 = ((($18)) + 132|0); //@line 52 "./src/cpp/unrar/unpack50.cpp"
  $123 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($18,$121,$122)|0); //@line 52 "./src/cpp/unrar/unpack50.cpp"
  $5 = $123; //@line 52 "./src/cpp/unrar/unpack50.cpp"
  $124 = $5; //@line 53 "./src/cpp/unrar/unpack50.cpp"
  $125 = ($124>>>0)<(256); //@line 53 "./src/cpp/unrar/unpack50.cpp"
  if ($125) {
   $126 = ((($18)) + 19496|0); //@line 55 "./src/cpp/unrar/unpack50.cpp"
   $127 = HEAP8[$126>>0]|0; //@line 55 "./src/cpp/unrar/unpack50.cpp"
   $128 = $127&1; //@line 55 "./src/cpp/unrar/unpack50.cpp"
   $129 = $5;
   $130 = $129&255;
   if ($128) {
    $131 = ((($18)) + 19240|0); //@line 56 "./src/cpp/unrar/unpack50.cpp"
    $132 = ((($18)) + 96|0); //@line 56 "./src/cpp/unrar/unpack50.cpp"
    $133 = HEAP32[$132>>2]|0; //@line 56 "./src/cpp/unrar/unpack50.cpp"
    $134 = (($133) + 1)|0; //@line 56 "./src/cpp/unrar/unpack50.cpp"
    HEAP32[$132>>2] = $134; //@line 56 "./src/cpp/unrar/unpack50.cpp"
    $135 = (__ZN16FragmentedWindowixEj($131,$133)|0); //@line 56 "./src/cpp/unrar/unpack50.cpp"
    $$sink = $135;
   } else {
    $136 = ((($18)) + 19236|0); //@line 58 "./src/cpp/unrar/unpack50.cpp"
    $137 = HEAP32[$136>>2]|0; //@line 58 "./src/cpp/unrar/unpack50.cpp"
    $138 = ((($18)) + 96|0); //@line 58 "./src/cpp/unrar/unpack50.cpp"
    $139 = HEAP32[$138>>2]|0; //@line 58 "./src/cpp/unrar/unpack50.cpp"
    $140 = (($139) + 1)|0; //@line 58 "./src/cpp/unrar/unpack50.cpp"
    HEAP32[$138>>2] = $140; //@line 58 "./src/cpp/unrar/unpack50.cpp"
    $141 = (($137) + ($139)|0); //@line 58 "./src/cpp/unrar/unpack50.cpp"
    $$sink = $141;
   }
   HEAP8[$$sink>>0] = $130;
   continue;
  }
  $142 = $5; //@line 61 "./src/cpp/unrar/unpack50.cpp"
  $143 = ($142>>>0)>=(262); //@line 61 "./src/cpp/unrar/unpack50.cpp"
  if (!($143)) {
   $226 = $5; //@line 115 "./src/cpp/unrar/unpack50.cpp"
   $227 = ($226|0)==(256); //@line 115 "./src/cpp/unrar/unpack50.cpp"
   if ($227) {
    $228 = ((($18)) + 4|0); //@line 118 "./src/cpp/unrar/unpack50.cpp"
    $229 = (__ZN6Unpack10ReadFilterER8BitInputR12UnpackFilter($18,$228,$11)|0); //@line 118 "./src/cpp/unrar/unpack50.cpp"
    if (!($229)) {
     label = 58;
     break;
    }
    $230 = (__ZN6Unpack9AddFilterER12UnpackFilter($18,$11)|0); //@line 118 "./src/cpp/unrar/unpack50.cpp"
    if ($230) {
     continue;
    } else {
     label = 58;
     break;
    }
   }
   $231 = $5; //@line 122 "./src/cpp/unrar/unpack50.cpp"
   $232 = ($231|0)==(257); //@line 122 "./src/cpp/unrar/unpack50.cpp"
   if ($232) {
    $233 = ((($18)) + 88|0); //@line 124 "./src/cpp/unrar/unpack50.cpp"
    $234 = HEAP32[$233>>2]|0; //@line 124 "./src/cpp/unrar/unpack50.cpp"
    $235 = ($234|0)!=(0); //@line 124 "./src/cpp/unrar/unpack50.cpp"
    if (!($235)) {
     continue;
    }
    $236 = ((($18)) + 19496|0); //@line 125 "./src/cpp/unrar/unpack50.cpp"
    $237 = HEAP8[$236>>0]|0; //@line 125 "./src/cpp/unrar/unpack50.cpp"
    $238 = $237&1; //@line 125 "./src/cpp/unrar/unpack50.cpp"
    if ($238) {
     $239 = ((($18)) + 19240|0); //@line 126 "./src/cpp/unrar/unpack50.cpp"
     $240 = ((($18)) + 88|0); //@line 126 "./src/cpp/unrar/unpack50.cpp"
     $241 = HEAP32[$240>>2]|0; //@line 126 "./src/cpp/unrar/unpack50.cpp"
     $242 = ((($18)) + 68|0); //@line 126 "./src/cpp/unrar/unpack50.cpp"
     $243 = HEAP32[$242>>2]|0; //@line 126 "./src/cpp/unrar/unpack50.cpp"
     $244 = ((($18)) + 96|0); //@line 126 "./src/cpp/unrar/unpack50.cpp"
     $245 = ((($18)) + 59088|0); //@line 126 "./src/cpp/unrar/unpack50.cpp"
     $246 = HEAP32[$245>>2]|0; //@line 126 "./src/cpp/unrar/unpack50.cpp"
     __ZN16FragmentedWindow10CopyStringEjjRjj($239,$241,$243,$244,$246); //@line 126 "./src/cpp/unrar/unpack50.cpp"
     continue;
    } else {
     $247 = ((($18)) + 88|0); //@line 128 "./src/cpp/unrar/unpack50.cpp"
     $248 = HEAP32[$247>>2]|0; //@line 128 "./src/cpp/unrar/unpack50.cpp"
     $249 = ((($18)) + 68|0); //@line 128 "./src/cpp/unrar/unpack50.cpp"
     $250 = HEAP32[$249>>2]|0; //@line 128 "./src/cpp/unrar/unpack50.cpp"
     __ZN6Unpack10CopyStringEjj($18,$248,$250); //@line 128 "./src/cpp/unrar/unpack50.cpp"
     continue;
    }
   }
   $251 = $5; //@line 131 "./src/cpp/unrar/unpack50.cpp"
   $252 = ($251>>>0)<(262); //@line 131 "./src/cpp/unrar/unpack50.cpp"
   if (!($252)) {
    continue;
   }
   $253 = $5; //@line 133 "./src/cpp/unrar/unpack50.cpp"
   $254 = (($253) - 258)|0; //@line 133 "./src/cpp/unrar/unpack50.cpp"
   $12 = $254; //@line 133 "./src/cpp/unrar/unpack50.cpp"
   $255 = ((($18)) + 68|0); //@line 134 "./src/cpp/unrar/unpack50.cpp"
   $256 = $12; //@line 134 "./src/cpp/unrar/unpack50.cpp"
   $257 = (($255) + ($256<<2)|0); //@line 134 "./src/cpp/unrar/unpack50.cpp"
   $258 = HEAP32[$257>>2]|0; //@line 134 "./src/cpp/unrar/unpack50.cpp"
   $13 = $258; //@line 134 "./src/cpp/unrar/unpack50.cpp"
   $259 = $12; //@line 135 "./src/cpp/unrar/unpack50.cpp"
   $14 = $259; //@line 135 "./src/cpp/unrar/unpack50.cpp"
   while(1) {
    $260 = $14; //@line 135 "./src/cpp/unrar/unpack50.cpp"
    $261 = ($260>>>0)>(0); //@line 135 "./src/cpp/unrar/unpack50.cpp"
    if (!($261)) {
     break;
    }
    $262 = ((($18)) + 68|0); //@line 136 "./src/cpp/unrar/unpack50.cpp"
    $263 = $14; //@line 136 "./src/cpp/unrar/unpack50.cpp"
    $264 = (($263) - 1)|0; //@line 136 "./src/cpp/unrar/unpack50.cpp"
    $265 = (($262) + ($264<<2)|0); //@line 136 "./src/cpp/unrar/unpack50.cpp"
    $266 = HEAP32[$265>>2]|0; //@line 136 "./src/cpp/unrar/unpack50.cpp"
    $267 = ((($18)) + 68|0); //@line 136 "./src/cpp/unrar/unpack50.cpp"
    $268 = $14; //@line 136 "./src/cpp/unrar/unpack50.cpp"
    $269 = (($267) + ($268<<2)|0); //@line 136 "./src/cpp/unrar/unpack50.cpp"
    HEAP32[$269>>2] = $266; //@line 136 "./src/cpp/unrar/unpack50.cpp"
    $270 = $14; //@line 135 "./src/cpp/unrar/unpack50.cpp"
    $271 = (($270) + -1)|0; //@line 135 "./src/cpp/unrar/unpack50.cpp"
    $14 = $271; //@line 135 "./src/cpp/unrar/unpack50.cpp"
   }
   $272 = $13; //@line 137 "./src/cpp/unrar/unpack50.cpp"
   $273 = ((($18)) + 68|0); //@line 137 "./src/cpp/unrar/unpack50.cpp"
   HEAP32[$273>>2] = $272; //@line 137 "./src/cpp/unrar/unpack50.cpp"
   $274 = ((($18)) + 4|0); //@line 139 "./src/cpp/unrar/unpack50.cpp"
   $275 = ((($18)) + 132|0); //@line 139 "./src/cpp/unrar/unpack50.cpp"
   $276 = ((($275)) + 11460|0); //@line 139 "./src/cpp/unrar/unpack50.cpp"
   $277 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($18,$274,$276)|0); //@line 139 "./src/cpp/unrar/unpack50.cpp"
   $15 = $277; //@line 139 "./src/cpp/unrar/unpack50.cpp"
   $278 = ((($18)) + 4|0); //@line 140 "./src/cpp/unrar/unpack50.cpp"
   $279 = $15; //@line 140 "./src/cpp/unrar/unpack50.cpp"
   $280 = (__ZN6Unpack12SlotToLengthER8BitInputj($18,$278,$279)|0); //@line 140 "./src/cpp/unrar/unpack50.cpp"
   $16 = $280; //@line 140 "./src/cpp/unrar/unpack50.cpp"
   $281 = $16; //@line 141 "./src/cpp/unrar/unpack50.cpp"
   $282 = ((($18)) + 88|0); //@line 141 "./src/cpp/unrar/unpack50.cpp"
   HEAP32[$282>>2] = $281; //@line 141 "./src/cpp/unrar/unpack50.cpp"
   $283 = ((($18)) + 19496|0); //@line 142 "./src/cpp/unrar/unpack50.cpp"
   $284 = HEAP8[$283>>0]|0; //@line 142 "./src/cpp/unrar/unpack50.cpp"
   $285 = $284&1; //@line 142 "./src/cpp/unrar/unpack50.cpp"
   if ($285) {
    $286 = ((($18)) + 19240|0); //@line 143 "./src/cpp/unrar/unpack50.cpp"
    $287 = $16; //@line 143 "./src/cpp/unrar/unpack50.cpp"
    $288 = $13; //@line 143 "./src/cpp/unrar/unpack50.cpp"
    $289 = ((($18)) + 96|0); //@line 143 "./src/cpp/unrar/unpack50.cpp"
    $290 = ((($18)) + 59088|0); //@line 143 "./src/cpp/unrar/unpack50.cpp"
    $291 = HEAP32[$290>>2]|0; //@line 143 "./src/cpp/unrar/unpack50.cpp"
    __ZN16FragmentedWindow10CopyStringEjjRjj($286,$287,$288,$289,$291); //@line 143 "./src/cpp/unrar/unpack50.cpp"
    continue;
   } else {
    $292 = $16; //@line 145 "./src/cpp/unrar/unpack50.cpp"
    $293 = $13; //@line 145 "./src/cpp/unrar/unpack50.cpp"
    __ZN6Unpack10CopyStringEjj($18,$292,$293); //@line 145 "./src/cpp/unrar/unpack50.cpp"
    continue;
   }
  }
  $144 = ((($18)) + 4|0); //@line 63 "./src/cpp/unrar/unpack50.cpp"
  $145 = $5; //@line 63 "./src/cpp/unrar/unpack50.cpp"
  $146 = (($145) - 262)|0; //@line 63 "./src/cpp/unrar/unpack50.cpp"
  $147 = (__ZN6Unpack12SlotToLengthER8BitInputj($18,$144,$146)|0); //@line 63 "./src/cpp/unrar/unpack50.cpp"
  $6 = $147; //@line 63 "./src/cpp/unrar/unpack50.cpp"
  $8 = 1; //@line 65 "./src/cpp/unrar/unpack50.cpp"
  $148 = ((($18)) + 4|0); //@line 65 "./src/cpp/unrar/unpack50.cpp"
  $149 = ((($18)) + 132|0); //@line 65 "./src/cpp/unrar/unpack50.cpp"
  $150 = ((($149)) + 3820|0); //@line 65 "./src/cpp/unrar/unpack50.cpp"
  $151 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($18,$148,$150)|0); //@line 65 "./src/cpp/unrar/unpack50.cpp"
  $9 = $151; //@line 65 "./src/cpp/unrar/unpack50.cpp"
  $152 = $9; //@line 66 "./src/cpp/unrar/unpack50.cpp"
  $153 = ($152>>>0)<(4); //@line 66 "./src/cpp/unrar/unpack50.cpp"
  if ($153) {
   $7 = 0; //@line 68 "./src/cpp/unrar/unpack50.cpp"
   $154 = $9; //@line 69 "./src/cpp/unrar/unpack50.cpp"
   $155 = $8; //@line 69 "./src/cpp/unrar/unpack50.cpp"
   $156 = (($155) + ($154))|0; //@line 69 "./src/cpp/unrar/unpack50.cpp"
   $8 = $156; //@line 69 "./src/cpp/unrar/unpack50.cpp"
  } else {
   $157 = $9; //@line 73 "./src/cpp/unrar/unpack50.cpp"
   $158 = (($157>>>0) / 2)&-1; //@line 73 "./src/cpp/unrar/unpack50.cpp"
   $159 = (($158) - 1)|0; //@line 73 "./src/cpp/unrar/unpack50.cpp"
   $7 = $159; //@line 73 "./src/cpp/unrar/unpack50.cpp"
   $160 = $9; //@line 74 "./src/cpp/unrar/unpack50.cpp"
   $161 = $160 & 1; //@line 74 "./src/cpp/unrar/unpack50.cpp"
   $162 = 2 | $161; //@line 74 "./src/cpp/unrar/unpack50.cpp"
   $163 = $7; //@line 74 "./src/cpp/unrar/unpack50.cpp"
   $164 = $162 << $163; //@line 74 "./src/cpp/unrar/unpack50.cpp"
   $165 = $8; //@line 74 "./src/cpp/unrar/unpack50.cpp"
   $166 = (($165) + ($164))|0; //@line 74 "./src/cpp/unrar/unpack50.cpp"
   $8 = $166; //@line 74 "./src/cpp/unrar/unpack50.cpp"
  }
  $167 = $7; //@line 77 "./src/cpp/unrar/unpack50.cpp"
  $168 = ($167>>>0)>(0); //@line 77 "./src/cpp/unrar/unpack50.cpp"
  do {
   if ($168) {
    $169 = $7; //@line 79 "./src/cpp/unrar/unpack50.cpp"
    $170 = ($169>>>0)>=(4); //@line 79 "./src/cpp/unrar/unpack50.cpp"
    if (!($170)) {
     $191 = ((($18)) + 4|0); //@line 91 "./src/cpp/unrar/unpack50.cpp"
     $192 = (__ZN8BitInput9getbits32Ev($191)|0); //@line 91 "./src/cpp/unrar/unpack50.cpp"
     $193 = $7; //@line 91 "./src/cpp/unrar/unpack50.cpp"
     $194 = (32 - ($193))|0; //@line 91 "./src/cpp/unrar/unpack50.cpp"
     $195 = $192 >>> $194; //@line 91 "./src/cpp/unrar/unpack50.cpp"
     $196 = $8; //@line 91 "./src/cpp/unrar/unpack50.cpp"
     $197 = (($196) + ($195))|0; //@line 91 "./src/cpp/unrar/unpack50.cpp"
     $8 = $197; //@line 91 "./src/cpp/unrar/unpack50.cpp"
     $198 = ((($18)) + 4|0); //@line 92 "./src/cpp/unrar/unpack50.cpp"
     $199 = $7; //@line 92 "./src/cpp/unrar/unpack50.cpp"
     __ZN8BitInput7addbitsEj($198,$199); //@line 92 "./src/cpp/unrar/unpack50.cpp"
     break;
    }
    $171 = $7; //@line 81 "./src/cpp/unrar/unpack50.cpp"
    $172 = ($171>>>0)>(4); //@line 81 "./src/cpp/unrar/unpack50.cpp"
    if ($172) {
     $173 = ((($18)) + 4|0); //@line 83 "./src/cpp/unrar/unpack50.cpp"
     $174 = (__ZN8BitInput9getbits32Ev($173)|0); //@line 83 "./src/cpp/unrar/unpack50.cpp"
     $175 = $7; //@line 83 "./src/cpp/unrar/unpack50.cpp"
     $176 = (36 - ($175))|0; //@line 83 "./src/cpp/unrar/unpack50.cpp"
     $177 = $174 >>> $176; //@line 83 "./src/cpp/unrar/unpack50.cpp"
     $178 = $177 << 4; //@line 83 "./src/cpp/unrar/unpack50.cpp"
     $179 = $8; //@line 83 "./src/cpp/unrar/unpack50.cpp"
     $180 = (($179) + ($178))|0; //@line 83 "./src/cpp/unrar/unpack50.cpp"
     $8 = $180; //@line 83 "./src/cpp/unrar/unpack50.cpp"
     $181 = ((($18)) + 4|0); //@line 84 "./src/cpp/unrar/unpack50.cpp"
     $182 = $7; //@line 84 "./src/cpp/unrar/unpack50.cpp"
     $183 = (($182) - 4)|0; //@line 84 "./src/cpp/unrar/unpack50.cpp"
     __ZN8BitInput7addbitsEj($181,$183); //@line 84 "./src/cpp/unrar/unpack50.cpp"
    }
    $184 = ((($18)) + 4|0); //@line 86 "./src/cpp/unrar/unpack50.cpp"
    $185 = ((($18)) + 132|0); //@line 86 "./src/cpp/unrar/unpack50.cpp"
    $186 = ((($185)) + 7640|0); //@line 86 "./src/cpp/unrar/unpack50.cpp"
    $187 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($18,$184,$186)|0); //@line 86 "./src/cpp/unrar/unpack50.cpp"
    $10 = $187; //@line 86 "./src/cpp/unrar/unpack50.cpp"
    $188 = $10; //@line 87 "./src/cpp/unrar/unpack50.cpp"
    $189 = $8; //@line 87 "./src/cpp/unrar/unpack50.cpp"
    $190 = (($189) + ($188))|0; //@line 87 "./src/cpp/unrar/unpack50.cpp"
    $8 = $190; //@line 87 "./src/cpp/unrar/unpack50.cpp"
   }
  } while(0);
  $200 = $8; //@line 96 "./src/cpp/unrar/unpack50.cpp"
  $201 = ($200>>>0)>(256); //@line 96 "./src/cpp/unrar/unpack50.cpp"
  if ($201) {
   $202 = $6; //@line 98 "./src/cpp/unrar/unpack50.cpp"
   $203 = (($202) + 1)|0; //@line 98 "./src/cpp/unrar/unpack50.cpp"
   $6 = $203; //@line 98 "./src/cpp/unrar/unpack50.cpp"
   $204 = $8; //@line 99 "./src/cpp/unrar/unpack50.cpp"
   $205 = ($204>>>0)>(8192); //@line 99 "./src/cpp/unrar/unpack50.cpp"
   if ($205) {
    $206 = $6; //@line 101 "./src/cpp/unrar/unpack50.cpp"
    $207 = (($206) + 1)|0; //@line 101 "./src/cpp/unrar/unpack50.cpp"
    $6 = $207; //@line 101 "./src/cpp/unrar/unpack50.cpp"
    $208 = $8; //@line 102 "./src/cpp/unrar/unpack50.cpp"
    $209 = ($208>>>0)>(262144); //@line 102 "./src/cpp/unrar/unpack50.cpp"
    if ($209) {
     $210 = $6; //@line 103 "./src/cpp/unrar/unpack50.cpp"
     $211 = (($210) + 1)|0; //@line 103 "./src/cpp/unrar/unpack50.cpp"
     $6 = $211; //@line 103 "./src/cpp/unrar/unpack50.cpp"
    }
   }
  }
  $212 = $8; //@line 107 "./src/cpp/unrar/unpack50.cpp"
  __ZN6Unpack13InsertOldDistEj($18,$212); //@line 107 "./src/cpp/unrar/unpack50.cpp"
  $213 = $6; //@line 108 "./src/cpp/unrar/unpack50.cpp"
  $214 = ((($18)) + 88|0); //@line 108 "./src/cpp/unrar/unpack50.cpp"
  HEAP32[$214>>2] = $213; //@line 108 "./src/cpp/unrar/unpack50.cpp"
  $215 = ((($18)) + 19496|0); //@line 109 "./src/cpp/unrar/unpack50.cpp"
  $216 = HEAP8[$215>>0]|0; //@line 109 "./src/cpp/unrar/unpack50.cpp"
  $217 = $216&1; //@line 109 "./src/cpp/unrar/unpack50.cpp"
  if ($217) {
   $218 = ((($18)) + 19240|0); //@line 110 "./src/cpp/unrar/unpack50.cpp"
   $219 = $6; //@line 110 "./src/cpp/unrar/unpack50.cpp"
   $220 = $8; //@line 110 "./src/cpp/unrar/unpack50.cpp"
   $221 = ((($18)) + 96|0); //@line 110 "./src/cpp/unrar/unpack50.cpp"
   $222 = ((($18)) + 59088|0); //@line 110 "./src/cpp/unrar/unpack50.cpp"
   $223 = HEAP32[$222>>2]|0; //@line 110 "./src/cpp/unrar/unpack50.cpp"
   __ZN16FragmentedWindow10CopyStringEjjRjj($218,$219,$220,$221,$223); //@line 110 "./src/cpp/unrar/unpack50.cpp"
   continue;
  } else {
   $224 = $6; //@line 112 "./src/cpp/unrar/unpack50.cpp"
   $225 = $8; //@line 112 "./src/cpp/unrar/unpack50.cpp"
   __ZN6Unpack10CopyStringEjj($18,$224,$225); //@line 112 "./src/cpp/unrar/unpack50.cpp"
   continue;
  }
 }
 if ((label|0) == 20) {
  $120 = ((($18)) + 19528|0); //@line 47 "./src/cpp/unrar/unpack50.cpp"
  HEAP8[$120>>0] = 0; //@line 47 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return; //@line 150 "./src/cpp/unrar/unpack50.cpp"
 }
 else if ((label|0) == 58) {
  __ZN6Unpack11UnpWriteBufEv($18); //@line 149 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return; //@line 150 "./src/cpp/unrar/unpack50.cpp"
 }
 else if ((label|0) == 59) {
  STACKTOP = sp;return; //@line 150 "./src/cpp/unrar/unpack50.cpp"
 }
}
function __ZN6Unpack15ReadBlockHeaderER8BitInputR17UnpackBlockHeader($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp + 27|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $13 = $4;
 $14 = $6; //@line 513 "./src/cpp/unrar/unpack50.cpp"
 $15 = ((($14)) + 12|0); //@line 513 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$15>>2] = 0; //@line 513 "./src/cpp/unrar/unpack50.cpp"
 $16 = $5; //@line 515 "./src/cpp/unrar/unpack50.cpp"
 $17 = ((($16)) + 8|0); //@line 515 "./src/cpp/unrar/unpack50.cpp"
 $18 = HEAP8[$17>>0]|0; //@line 515 "./src/cpp/unrar/unpack50.cpp"
 $19 = $18&1; //@line 515 "./src/cpp/unrar/unpack50.cpp"
 if (!($19)) {
  $20 = $5; //@line 515 "./src/cpp/unrar/unpack50.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 515 "./src/cpp/unrar/unpack50.cpp"
  $22 = ((($13)) + 104|0); //@line 515 "./src/cpp/unrar/unpack50.cpp"
  $23 = HEAP32[$22>>2]|0; //@line 515 "./src/cpp/unrar/unpack50.cpp"
  $24 = (($23) - 7)|0; //@line 515 "./src/cpp/unrar/unpack50.cpp"
  $25 = ($21|0)>($24|0); //@line 515 "./src/cpp/unrar/unpack50.cpp"
  if ($25) {
   $26 = (__ZN6Unpack10UnpReadBufEv($13)|0); //@line 516 "./src/cpp/unrar/unpack50.cpp"
   if (!($26)) {
    $$expand_i1_val = 0; //@line 517 "./src/cpp/unrar/unpack50.cpp"
    HEAP8[$3>>0] = $$expand_i1_val; //@line 517 "./src/cpp/unrar/unpack50.cpp"
    $$pre_trunc = HEAP8[$3>>0]|0; //@line 552 "./src/cpp/unrar/unpack50.cpp"
    $132 = $$pre_trunc&1; //@line 552 "./src/cpp/unrar/unpack50.cpp"
    STACKTOP = sp;return ($132|0); //@line 552 "./src/cpp/unrar/unpack50.cpp"
   }
  }
 }
 $27 = $5; //@line 518 "./src/cpp/unrar/unpack50.cpp"
 $28 = $5; //@line 518 "./src/cpp/unrar/unpack50.cpp"
 $29 = ((($28)) + 4|0); //@line 518 "./src/cpp/unrar/unpack50.cpp"
 $30 = HEAP32[$29>>2]|0; //@line 518 "./src/cpp/unrar/unpack50.cpp"
 $31 = (8 - ($30))|0; //@line 518 "./src/cpp/unrar/unpack50.cpp"
 $32 = $31 & 7; //@line 518 "./src/cpp/unrar/unpack50.cpp"
 __ZN8BitInput8faddbitsEj($27,$32); //@line 518 "./src/cpp/unrar/unpack50.cpp"
 $33 = $5; //@line 520 "./src/cpp/unrar/unpack50.cpp"
 $34 = (__ZN8BitInput8fgetbitsEv($33)|0); //@line 520 "./src/cpp/unrar/unpack50.cpp"
 $35 = $34 >>> 8; //@line 520 "./src/cpp/unrar/unpack50.cpp"
 $36 = $35&255; //@line 520 "./src/cpp/unrar/unpack50.cpp"
 $7 = $36; //@line 520 "./src/cpp/unrar/unpack50.cpp"
 $37 = $5; //@line 521 "./src/cpp/unrar/unpack50.cpp"
 __ZN8BitInput8faddbitsEj($37,8); //@line 521 "./src/cpp/unrar/unpack50.cpp"
 $38 = $7; //@line 522 "./src/cpp/unrar/unpack50.cpp"
 $39 = $38&255; //@line 522 "./src/cpp/unrar/unpack50.cpp"
 $40 = $39 >> 3; //@line 522 "./src/cpp/unrar/unpack50.cpp"
 $41 = $40 & 3; //@line 522 "./src/cpp/unrar/unpack50.cpp"
 $42 = (($41) + 1)|0; //@line 522 "./src/cpp/unrar/unpack50.cpp"
 $8 = $42; //@line 522 "./src/cpp/unrar/unpack50.cpp"
 $43 = $8; //@line 524 "./src/cpp/unrar/unpack50.cpp"
 $44 = ($43|0)==(4); //@line 524 "./src/cpp/unrar/unpack50.cpp"
 if ($44) {
  $$expand_i1_val2 = 0; //@line 525 "./src/cpp/unrar/unpack50.cpp"
  HEAP8[$3>>0] = $$expand_i1_val2; //@line 525 "./src/cpp/unrar/unpack50.cpp"
  $$pre_trunc = HEAP8[$3>>0]|0; //@line 552 "./src/cpp/unrar/unpack50.cpp"
  $132 = $$pre_trunc&1; //@line 552 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return ($132|0); //@line 552 "./src/cpp/unrar/unpack50.cpp"
 }
 $45 = $8; //@line 527 "./src/cpp/unrar/unpack50.cpp"
 $46 = (2 + ($45))|0; //@line 527 "./src/cpp/unrar/unpack50.cpp"
 $47 = $6; //@line 527 "./src/cpp/unrar/unpack50.cpp"
 $48 = ((($47)) + 12|0); //@line 527 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$48>>2] = $46; //@line 527 "./src/cpp/unrar/unpack50.cpp"
 $49 = $7; //@line 529 "./src/cpp/unrar/unpack50.cpp"
 $50 = $49&255; //@line 529 "./src/cpp/unrar/unpack50.cpp"
 $51 = $50 & 7; //@line 529 "./src/cpp/unrar/unpack50.cpp"
 $52 = (($51) + 1)|0; //@line 529 "./src/cpp/unrar/unpack50.cpp"
 $53 = $6; //@line 529 "./src/cpp/unrar/unpack50.cpp"
 $54 = ((($53)) + 4|0); //@line 529 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$54>>2] = $52; //@line 529 "./src/cpp/unrar/unpack50.cpp"
 $55 = $5; //@line 531 "./src/cpp/unrar/unpack50.cpp"
 $56 = (__ZN8BitInput8fgetbitsEv($55)|0); //@line 531 "./src/cpp/unrar/unpack50.cpp"
 $57 = $56 >>> 8; //@line 531 "./src/cpp/unrar/unpack50.cpp"
 $58 = $57&255; //@line 531 "./src/cpp/unrar/unpack50.cpp"
 $9 = $58; //@line 531 "./src/cpp/unrar/unpack50.cpp"
 $59 = $5; //@line 532 "./src/cpp/unrar/unpack50.cpp"
 __ZN8BitInput8faddbitsEj($59,8); //@line 532 "./src/cpp/unrar/unpack50.cpp"
 $10 = 0; //@line 534 "./src/cpp/unrar/unpack50.cpp"
 $11 = 0; //@line 535 "./src/cpp/unrar/unpack50.cpp"
 while(1) {
  $60 = $11; //@line 535 "./src/cpp/unrar/unpack50.cpp"
  $61 = $8; //@line 535 "./src/cpp/unrar/unpack50.cpp"
  $62 = ($60>>>0)<($61>>>0); //@line 535 "./src/cpp/unrar/unpack50.cpp"
  if (!($62)) {
   break;
  }
  $63 = $5; //@line 537 "./src/cpp/unrar/unpack50.cpp"
  $64 = (__ZN8BitInput8fgetbitsEv($63)|0); //@line 537 "./src/cpp/unrar/unpack50.cpp"
  $65 = $64 >>> 8; //@line 537 "./src/cpp/unrar/unpack50.cpp"
  $66 = $11; //@line 537 "./src/cpp/unrar/unpack50.cpp"
  $67 = $66<<3; //@line 537 "./src/cpp/unrar/unpack50.cpp"
  $68 = $65 << $67; //@line 537 "./src/cpp/unrar/unpack50.cpp"
  $69 = $10; //@line 537 "./src/cpp/unrar/unpack50.cpp"
  $70 = (($69) + ($68))|0; //@line 537 "./src/cpp/unrar/unpack50.cpp"
  $10 = $70; //@line 537 "./src/cpp/unrar/unpack50.cpp"
  $71 = $5; //@line 538 "./src/cpp/unrar/unpack50.cpp"
  __ZN8BitInput7addbitsEj($71,8); //@line 538 "./src/cpp/unrar/unpack50.cpp"
  $72 = $11; //@line 535 "./src/cpp/unrar/unpack50.cpp"
  $73 = (($72) + 1)|0; //@line 535 "./src/cpp/unrar/unpack50.cpp"
  $11 = $73; //@line 535 "./src/cpp/unrar/unpack50.cpp"
 }
 $74 = $10; //@line 541 "./src/cpp/unrar/unpack50.cpp"
 $75 = $6; //@line 541 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$75>>2] = $74; //@line 541 "./src/cpp/unrar/unpack50.cpp"
 $76 = $7; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $77 = $76&255; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $78 = 90 ^ $77; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $79 = $10; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $80 = $78 ^ $79; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $81 = $10; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $82 = $81 >> 8; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $83 = $80 ^ $82; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $84 = $10; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $85 = $84 >> 16; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $86 = $83 ^ $85; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $87 = $86&255; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $12 = $87; //@line 542 "./src/cpp/unrar/unpack50.cpp"
 $88 = $12; //@line 543 "./src/cpp/unrar/unpack50.cpp"
 $89 = $88&255; //@line 543 "./src/cpp/unrar/unpack50.cpp"
 $90 = $9; //@line 543 "./src/cpp/unrar/unpack50.cpp"
 $91 = $90&255; //@line 543 "./src/cpp/unrar/unpack50.cpp"
 $92 = ($89|0)!=($91|0); //@line 543 "./src/cpp/unrar/unpack50.cpp"
 if ($92) {
  $$expand_i1_val4 = 0; //@line 544 "./src/cpp/unrar/unpack50.cpp"
  HEAP8[$3>>0] = $$expand_i1_val4; //@line 544 "./src/cpp/unrar/unpack50.cpp"
  $$pre_trunc = HEAP8[$3>>0]|0; //@line 552 "./src/cpp/unrar/unpack50.cpp"
  $132 = $$pre_trunc&1; //@line 552 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return ($132|0); //@line 552 "./src/cpp/unrar/unpack50.cpp"
 }
 $93 = $5; //@line 546 "./src/cpp/unrar/unpack50.cpp"
 $94 = HEAP32[$93>>2]|0; //@line 546 "./src/cpp/unrar/unpack50.cpp"
 $95 = $6; //@line 546 "./src/cpp/unrar/unpack50.cpp"
 $96 = ((($95)) + 8|0); //@line 546 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$96>>2] = $94; //@line 546 "./src/cpp/unrar/unpack50.cpp"
 $97 = ((($13)) + 108|0); //@line 547 "./src/cpp/unrar/unpack50.cpp"
 $98 = HEAP32[$97>>2]|0; //@line 547 "./src/cpp/unrar/unpack50.cpp"
 $99 = $6; //@line 547 "./src/cpp/unrar/unpack50.cpp"
 $100 = ((($99)) + 8|0); //@line 547 "./src/cpp/unrar/unpack50.cpp"
 $101 = HEAP32[$100>>2]|0; //@line 547 "./src/cpp/unrar/unpack50.cpp"
 $102 = $6; //@line 547 "./src/cpp/unrar/unpack50.cpp"
 $103 = HEAP32[$102>>2]|0; //@line 547 "./src/cpp/unrar/unpack50.cpp"
 $104 = (($101) + ($103))|0; //@line 547 "./src/cpp/unrar/unpack50.cpp"
 $105 = (($104) - 1)|0; //@line 547 "./src/cpp/unrar/unpack50.cpp"
 $106 = ($98|0)<($105|0); //@line 547 "./src/cpp/unrar/unpack50.cpp"
 if ($106) {
  $107 = ((($13)) + 108|0); //@line 547 "./src/cpp/unrar/unpack50.cpp"
  $108 = HEAP32[$107>>2]|0; //@line 547 "./src/cpp/unrar/unpack50.cpp"
  $117 = $108;
 } else {
  $109 = $6; //@line 547 "./src/cpp/unrar/unpack50.cpp"
  $110 = ((($109)) + 8|0); //@line 547 "./src/cpp/unrar/unpack50.cpp"
  $111 = HEAP32[$110>>2]|0; //@line 547 "./src/cpp/unrar/unpack50.cpp"
  $112 = $6; //@line 547 "./src/cpp/unrar/unpack50.cpp"
  $113 = HEAP32[$112>>2]|0; //@line 547 "./src/cpp/unrar/unpack50.cpp"
  $114 = (($111) + ($113))|0; //@line 547 "./src/cpp/unrar/unpack50.cpp"
  $115 = (($114) - 1)|0; //@line 547 "./src/cpp/unrar/unpack50.cpp"
  $117 = $115;
 }
 $116 = ((($13)) + 108|0); //@line 547 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$116>>2] = $117; //@line 547 "./src/cpp/unrar/unpack50.cpp"
 $118 = $7; //@line 549 "./src/cpp/unrar/unpack50.cpp"
 $119 = $118&255; //@line 549 "./src/cpp/unrar/unpack50.cpp"
 $120 = $119 & 64; //@line 549 "./src/cpp/unrar/unpack50.cpp"
 $121 = ($120|0)!=(0); //@line 549 "./src/cpp/unrar/unpack50.cpp"
 $122 = $6; //@line 549 "./src/cpp/unrar/unpack50.cpp"
 $123 = ((($122)) + 16|0); //@line 549 "./src/cpp/unrar/unpack50.cpp"
 $124 = $121&1; //@line 549 "./src/cpp/unrar/unpack50.cpp"
 HEAP8[$123>>0] = $124; //@line 549 "./src/cpp/unrar/unpack50.cpp"
 $125 = $7; //@line 550 "./src/cpp/unrar/unpack50.cpp"
 $126 = $125&255; //@line 550 "./src/cpp/unrar/unpack50.cpp"
 $127 = $126 & 128; //@line 550 "./src/cpp/unrar/unpack50.cpp"
 $128 = ($127|0)!=(0); //@line 550 "./src/cpp/unrar/unpack50.cpp"
 $129 = $6; //@line 550 "./src/cpp/unrar/unpack50.cpp"
 $130 = ((($129)) + 17|0); //@line 550 "./src/cpp/unrar/unpack50.cpp"
 $131 = $128&1; //@line 550 "./src/cpp/unrar/unpack50.cpp"
 HEAP8[$130>>0] = $131; //@line 550 "./src/cpp/unrar/unpack50.cpp"
 $$expand_i1_val6 = 1; //@line 551 "./src/cpp/unrar/unpack50.cpp"
 HEAP8[$3>>0] = $$expand_i1_val6; //@line 551 "./src/cpp/unrar/unpack50.cpp"
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 552 "./src/cpp/unrar/unpack50.cpp"
 $132 = $$pre_trunc&1; //@line 552 "./src/cpp/unrar/unpack50.cpp"
 STACKTOP = sp;return ($132|0); //@line 552 "./src/cpp/unrar/unpack50.cpp"
}
function __ZN6Unpack10ReadTablesER8BitInputR17UnpackBlockHeaderR17UnpackBlockTables($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$expand_i1_val8 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(512|0);
 $4 = sp + 500|0;
 $9 = sp + 480|0;
 $13 = sp + 48|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $19 = $5;
 $20 = $7; //@line 557 "./src/cpp/unrar/unpack50.cpp"
 $21 = ((($20)) + 17|0); //@line 557 "./src/cpp/unrar/unpack50.cpp"
 $22 = HEAP8[$21>>0]|0; //@line 557 "./src/cpp/unrar/unpack50.cpp"
 $23 = $22&1; //@line 557 "./src/cpp/unrar/unpack50.cpp"
 if (!($23)) {
  $$expand_i1_val = 1; //@line 558 "./src/cpp/unrar/unpack50.cpp"
  HEAP8[$4>>0] = $$expand_i1_val; //@line 558 "./src/cpp/unrar/unpack50.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 647 "./src/cpp/unrar/unpack50.cpp"
  $160 = $$pre_trunc&1; //@line 647 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return ($160|0); //@line 647 "./src/cpp/unrar/unpack50.cpp"
 }
 $24 = $6; //@line 560 "./src/cpp/unrar/unpack50.cpp"
 $25 = ((($24)) + 8|0); //@line 560 "./src/cpp/unrar/unpack50.cpp"
 $26 = HEAP8[$25>>0]|0; //@line 560 "./src/cpp/unrar/unpack50.cpp"
 $27 = $26&1; //@line 560 "./src/cpp/unrar/unpack50.cpp"
 if (!($27)) {
  $28 = $6; //@line 560 "./src/cpp/unrar/unpack50.cpp"
  $29 = HEAP32[$28>>2]|0; //@line 560 "./src/cpp/unrar/unpack50.cpp"
  $30 = ((($19)) + 104|0); //@line 560 "./src/cpp/unrar/unpack50.cpp"
  $31 = HEAP32[$30>>2]|0; //@line 560 "./src/cpp/unrar/unpack50.cpp"
  $32 = (($31) - 25)|0; //@line 560 "./src/cpp/unrar/unpack50.cpp"
  $33 = ($29|0)>($32|0); //@line 560 "./src/cpp/unrar/unpack50.cpp"
  if ($33) {
   $34 = (__ZN6Unpack10UnpReadBufEv($19)|0); //@line 561 "./src/cpp/unrar/unpack50.cpp"
   if (!($34)) {
    $$expand_i1_val2 = 0; //@line 562 "./src/cpp/unrar/unpack50.cpp"
    HEAP8[$4>>0] = $$expand_i1_val2; //@line 562 "./src/cpp/unrar/unpack50.cpp"
    $$pre_trunc = HEAP8[$4>>0]|0; //@line 647 "./src/cpp/unrar/unpack50.cpp"
    $160 = $$pre_trunc&1; //@line 647 "./src/cpp/unrar/unpack50.cpp"
    STACKTOP = sp;return ($160|0); //@line 647 "./src/cpp/unrar/unpack50.cpp"
   }
  }
 }
 $10 = 0; //@line 565 "./src/cpp/unrar/unpack50.cpp"
 while(1) {
  $35 = $10; //@line 565 "./src/cpp/unrar/unpack50.cpp"
  $36 = ($35>>>0)<(20); //@line 565 "./src/cpp/unrar/unpack50.cpp"
  if (!($36)) {
   break;
  }
  $37 = $6; //@line 567 "./src/cpp/unrar/unpack50.cpp"
  $38 = (__ZN8BitInput8fgetbitsEv($37)|0); //@line 567 "./src/cpp/unrar/unpack50.cpp"
  $39 = $38 >>> 12; //@line 567 "./src/cpp/unrar/unpack50.cpp"
  $40 = $39&255; //@line 567 "./src/cpp/unrar/unpack50.cpp"
  $41 = $40&255; //@line 567 "./src/cpp/unrar/unpack50.cpp"
  $11 = $41; //@line 567 "./src/cpp/unrar/unpack50.cpp"
  $42 = $6; //@line 568 "./src/cpp/unrar/unpack50.cpp"
  __ZN8BitInput8faddbitsEj($42,4); //@line 568 "./src/cpp/unrar/unpack50.cpp"
  $43 = $11; //@line 569 "./src/cpp/unrar/unpack50.cpp"
  $44 = ($43|0)==(15); //@line 569 "./src/cpp/unrar/unpack50.cpp"
  do {
   if ($44) {
    $45 = $6; //@line 571 "./src/cpp/unrar/unpack50.cpp"
    $46 = (__ZN8BitInput8fgetbitsEv($45)|0); //@line 571 "./src/cpp/unrar/unpack50.cpp"
    $47 = $46 >>> 12; //@line 571 "./src/cpp/unrar/unpack50.cpp"
    $48 = $47&255; //@line 571 "./src/cpp/unrar/unpack50.cpp"
    $49 = $48&255; //@line 571 "./src/cpp/unrar/unpack50.cpp"
    $12 = $49; //@line 571 "./src/cpp/unrar/unpack50.cpp"
    $50 = $6; //@line 572 "./src/cpp/unrar/unpack50.cpp"
    __ZN8BitInput8faddbitsEj($50,4); //@line 572 "./src/cpp/unrar/unpack50.cpp"
    $51 = $12; //@line 573 "./src/cpp/unrar/unpack50.cpp"
    $52 = ($51|0)==(0); //@line 573 "./src/cpp/unrar/unpack50.cpp"
    if ($52) {
     $53 = $10; //@line 574 "./src/cpp/unrar/unpack50.cpp"
     $54 = (($9) + ($53)|0); //@line 574 "./src/cpp/unrar/unpack50.cpp"
     HEAP8[$54>>0] = 15; //@line 574 "./src/cpp/unrar/unpack50.cpp"
     break;
    }
    $55 = $12; //@line 577 "./src/cpp/unrar/unpack50.cpp"
    $56 = (($55) + 2)|0; //@line 577 "./src/cpp/unrar/unpack50.cpp"
    $12 = $56; //@line 577 "./src/cpp/unrar/unpack50.cpp"
    while(1) {
     $57 = $12; //@line 578 "./src/cpp/unrar/unpack50.cpp"
     $58 = (($57) + -1)|0; //@line 578 "./src/cpp/unrar/unpack50.cpp"
     $12 = $58; //@line 578 "./src/cpp/unrar/unpack50.cpp"
     $59 = ($57|0)>(0); //@line 578 "./src/cpp/unrar/unpack50.cpp"
     $60 = $10; //@line 578 "./src/cpp/unrar/unpack50.cpp"
     $61 = ($60>>>0)<(20); //@line 578 "./src/cpp/unrar/unpack50.cpp"
     $62 = $59 ? $61 : 0; //@line 578 "./src/cpp/unrar/unpack50.cpp"
     $63 = $10;
     if (!($62)) {
      break;
     }
     $64 = (($63) + 1)|0; //@line 579 "./src/cpp/unrar/unpack50.cpp"
     $10 = $64; //@line 579 "./src/cpp/unrar/unpack50.cpp"
     $65 = (($9) + ($63)|0); //@line 579 "./src/cpp/unrar/unpack50.cpp"
     HEAP8[$65>>0] = 0; //@line 579 "./src/cpp/unrar/unpack50.cpp"
    }
    $66 = (($63) + -1)|0; //@line 580 "./src/cpp/unrar/unpack50.cpp"
    $10 = $66; //@line 580 "./src/cpp/unrar/unpack50.cpp"
   } else {
    $67 = $11; //@line 584 "./src/cpp/unrar/unpack50.cpp"
    $68 = $67&255; //@line 584 "./src/cpp/unrar/unpack50.cpp"
    $69 = $10; //@line 584 "./src/cpp/unrar/unpack50.cpp"
    $70 = (($9) + ($69)|0); //@line 584 "./src/cpp/unrar/unpack50.cpp"
    HEAP8[$70>>0] = $68; //@line 584 "./src/cpp/unrar/unpack50.cpp"
   }
  } while(0);
  $71 = $10; //@line 565 "./src/cpp/unrar/unpack50.cpp"
  $72 = (($71) + 1)|0; //@line 565 "./src/cpp/unrar/unpack50.cpp"
  $10 = $72; //@line 565 "./src/cpp/unrar/unpack50.cpp"
 }
 $73 = $8; //@line 587 "./src/cpp/unrar/unpack50.cpp"
 $74 = ((($73)) + 15280|0); //@line 587 "./src/cpp/unrar/unpack50.cpp"
 __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($19,$9,$74,20); //@line 587 "./src/cpp/unrar/unpack50.cpp"
 $14 = 430; //@line 590 "./src/cpp/unrar/unpack50.cpp"
 $15 = 0; //@line 591 "./src/cpp/unrar/unpack50.cpp"
 L26: while(1) {
  $75 = $15; //@line 591 "./src/cpp/unrar/unpack50.cpp"
  $76 = ($75|0)<(430); //@line 591 "./src/cpp/unrar/unpack50.cpp"
  $77 = $6;
  $78 = ((($77)) + 8|0);
  $79 = HEAP8[$78>>0]|0;
  $80 = $79&1;
  if (!($76)) {
   break;
  }
  if (!($80)) {
   $81 = $6; //@line 593 "./src/cpp/unrar/unpack50.cpp"
   $82 = HEAP32[$81>>2]|0; //@line 593 "./src/cpp/unrar/unpack50.cpp"
   $83 = ((($19)) + 104|0); //@line 593 "./src/cpp/unrar/unpack50.cpp"
   $84 = HEAP32[$83>>2]|0; //@line 593 "./src/cpp/unrar/unpack50.cpp"
   $85 = (($84) - 5)|0; //@line 593 "./src/cpp/unrar/unpack50.cpp"
   $86 = ($82|0)>($85|0); //@line 593 "./src/cpp/unrar/unpack50.cpp"
   if ($86) {
    $87 = (__ZN6Unpack10UnpReadBufEv($19)|0); //@line 594 "./src/cpp/unrar/unpack50.cpp"
    if (!($87)) {
     label = 23;
     break;
    }
   }
  }
  $88 = $6; //@line 596 "./src/cpp/unrar/unpack50.cpp"
  $89 = $8; //@line 596 "./src/cpp/unrar/unpack50.cpp"
  $90 = ((($89)) + 15280|0); //@line 596 "./src/cpp/unrar/unpack50.cpp"
  $91 = (__ZN6Unpack12DecodeNumberER8BitInputP11DecodeTable($19,$88,$90)|0); //@line 596 "./src/cpp/unrar/unpack50.cpp"
  $16 = $91; //@line 596 "./src/cpp/unrar/unpack50.cpp"
  $92 = $16; //@line 597 "./src/cpp/unrar/unpack50.cpp"
  $93 = ($92|0)<(16); //@line 597 "./src/cpp/unrar/unpack50.cpp"
  $94 = $16;
  if ($93) {
   $95 = $94&255; //@line 599 "./src/cpp/unrar/unpack50.cpp"
   $96 = $15; //@line 599 "./src/cpp/unrar/unpack50.cpp"
   $97 = (($13) + ($96)|0); //@line 599 "./src/cpp/unrar/unpack50.cpp"
   HEAP8[$97>>0] = $95; //@line 599 "./src/cpp/unrar/unpack50.cpp"
   $98 = $15; //@line 600 "./src/cpp/unrar/unpack50.cpp"
   $99 = (($98) + 1)|0; //@line 600 "./src/cpp/unrar/unpack50.cpp"
   $15 = $99; //@line 600 "./src/cpp/unrar/unpack50.cpp"
   continue;
  }
  $100 = ($94|0)<(18); //@line 603 "./src/cpp/unrar/unpack50.cpp"
  $101 = $16;
  if (!($100)) {
   $127 = ($101|0)==(18); //@line 626 "./src/cpp/unrar/unpack50.cpp"
   $128 = $6;
   $129 = (__ZN8BitInput8fgetbitsEv($128)|0); //@line 628 "./src/cpp/unrar/unpack50.cpp"
   if ($127) {
    $130 = $129 >>> 13; //@line 628 "./src/cpp/unrar/unpack50.cpp"
    $131 = (($130) + 3)|0; //@line 628 "./src/cpp/unrar/unpack50.cpp"
    $18 = $131; //@line 628 "./src/cpp/unrar/unpack50.cpp"
    $132 = $6; //@line 629 "./src/cpp/unrar/unpack50.cpp"
    __ZN8BitInput8faddbitsEj($132,3); //@line 629 "./src/cpp/unrar/unpack50.cpp"
   } else {
    $133 = $129 >>> 9; //@line 633 "./src/cpp/unrar/unpack50.cpp"
    $134 = (($133) + 11)|0; //@line 633 "./src/cpp/unrar/unpack50.cpp"
    $18 = $134; //@line 633 "./src/cpp/unrar/unpack50.cpp"
    $135 = $6; //@line 634 "./src/cpp/unrar/unpack50.cpp"
    __ZN8BitInput8faddbitsEj($135,7); //@line 634 "./src/cpp/unrar/unpack50.cpp"
   }
   while(1) {
    $136 = $18; //@line 636 "./src/cpp/unrar/unpack50.cpp"
    $137 = (($136) + -1)|0; //@line 636 "./src/cpp/unrar/unpack50.cpp"
    $18 = $137; //@line 636 "./src/cpp/unrar/unpack50.cpp"
    $138 = ($136|0)>(0); //@line 636 "./src/cpp/unrar/unpack50.cpp"
    $139 = $15; //@line 636 "./src/cpp/unrar/unpack50.cpp"
    $140 = ($139|0)<(430); //@line 636 "./src/cpp/unrar/unpack50.cpp"
    $141 = $138 ? $140 : 0; //@line 636 "./src/cpp/unrar/unpack50.cpp"
    if (!($141)) {
     continue L26;
    }
    $142 = $15; //@line 637 "./src/cpp/unrar/unpack50.cpp"
    $143 = (($142) + 1)|0; //@line 637 "./src/cpp/unrar/unpack50.cpp"
    $15 = $143; //@line 637 "./src/cpp/unrar/unpack50.cpp"
    $144 = (($13) + ($142)|0); //@line 637 "./src/cpp/unrar/unpack50.cpp"
    HEAP8[$144>>0] = 0; //@line 637 "./src/cpp/unrar/unpack50.cpp"
   }
  }
  $102 = ($101|0)==(16); //@line 606 "./src/cpp/unrar/unpack50.cpp"
  $103 = $6;
  $104 = (__ZN8BitInput8fgetbitsEv($103)|0); //@line 608 "./src/cpp/unrar/unpack50.cpp"
  if ($102) {
   $105 = $104 >>> 13; //@line 608 "./src/cpp/unrar/unpack50.cpp"
   $106 = (($105) + 3)|0; //@line 608 "./src/cpp/unrar/unpack50.cpp"
   $17 = $106; //@line 608 "./src/cpp/unrar/unpack50.cpp"
   $107 = $6; //@line 609 "./src/cpp/unrar/unpack50.cpp"
   __ZN8BitInput8faddbitsEj($107,3); //@line 609 "./src/cpp/unrar/unpack50.cpp"
  } else {
   $108 = $104 >>> 9; //@line 613 "./src/cpp/unrar/unpack50.cpp"
   $109 = (($108) + 11)|0; //@line 613 "./src/cpp/unrar/unpack50.cpp"
   $17 = $109; //@line 613 "./src/cpp/unrar/unpack50.cpp"
   $110 = $6; //@line 614 "./src/cpp/unrar/unpack50.cpp"
   __ZN8BitInput8faddbitsEj($110,7); //@line 614 "./src/cpp/unrar/unpack50.cpp"
  }
  $111 = $15; //@line 616 "./src/cpp/unrar/unpack50.cpp"
  $112 = ($111|0)>(0); //@line 616 "./src/cpp/unrar/unpack50.cpp"
  if (!($112)) {
   continue;
  }
  while(1) {
   $113 = $17; //@line 617 "./src/cpp/unrar/unpack50.cpp"
   $114 = (($113) + -1)|0; //@line 617 "./src/cpp/unrar/unpack50.cpp"
   $17 = $114; //@line 617 "./src/cpp/unrar/unpack50.cpp"
   $115 = ($113|0)>(0); //@line 617 "./src/cpp/unrar/unpack50.cpp"
   $116 = $15; //@line 617 "./src/cpp/unrar/unpack50.cpp"
   $117 = ($116|0)<(430); //@line 617 "./src/cpp/unrar/unpack50.cpp"
   $118 = $115 ? $117 : 0; //@line 617 "./src/cpp/unrar/unpack50.cpp"
   if (!($118)) {
    continue L26;
   }
   $119 = $15; //@line 619 "./src/cpp/unrar/unpack50.cpp"
   $120 = (($119) - 1)|0; //@line 619 "./src/cpp/unrar/unpack50.cpp"
   $121 = (($13) + ($120)|0); //@line 619 "./src/cpp/unrar/unpack50.cpp"
   $122 = HEAP8[$121>>0]|0; //@line 619 "./src/cpp/unrar/unpack50.cpp"
   $123 = $15; //@line 619 "./src/cpp/unrar/unpack50.cpp"
   $124 = (($13) + ($123)|0); //@line 619 "./src/cpp/unrar/unpack50.cpp"
   HEAP8[$124>>0] = $122; //@line 619 "./src/cpp/unrar/unpack50.cpp"
   $125 = $15; //@line 620 "./src/cpp/unrar/unpack50.cpp"
   $126 = (($125) + 1)|0; //@line 620 "./src/cpp/unrar/unpack50.cpp"
   $15 = $126; //@line 620 "./src/cpp/unrar/unpack50.cpp"
  }
 }
 if ((label|0) == 23) {
  $$expand_i1_val4 = 0; //@line 595 "./src/cpp/unrar/unpack50.cpp"
  HEAP8[$4>>0] = $$expand_i1_val4; //@line 595 "./src/cpp/unrar/unpack50.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 647 "./src/cpp/unrar/unpack50.cpp"
  $160 = $$pre_trunc&1; //@line 647 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return ($160|0); //@line 647 "./src/cpp/unrar/unpack50.cpp"
 }
 if (!($80)) {
  $145 = $6; //@line 640 "./src/cpp/unrar/unpack50.cpp"
  $146 = HEAP32[$145>>2]|0; //@line 640 "./src/cpp/unrar/unpack50.cpp"
  $147 = ((($19)) + 104|0); //@line 640 "./src/cpp/unrar/unpack50.cpp"
  $148 = HEAP32[$147>>2]|0; //@line 640 "./src/cpp/unrar/unpack50.cpp"
  $149 = ($146|0)>($148|0); //@line 640 "./src/cpp/unrar/unpack50.cpp"
  if ($149) {
   $$expand_i1_val6 = 0; //@line 641 "./src/cpp/unrar/unpack50.cpp"
   HEAP8[$4>>0] = $$expand_i1_val6; //@line 641 "./src/cpp/unrar/unpack50.cpp"
   $$pre_trunc = HEAP8[$4>>0]|0; //@line 647 "./src/cpp/unrar/unpack50.cpp"
   $160 = $$pre_trunc&1; //@line 647 "./src/cpp/unrar/unpack50.cpp"
   STACKTOP = sp;return ($160|0); //@line 647 "./src/cpp/unrar/unpack50.cpp"
  }
 }
 $150 = $8; //@line 642 "./src/cpp/unrar/unpack50.cpp"
 __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($19,$13,$150,306); //@line 642 "./src/cpp/unrar/unpack50.cpp"
 $151 = ((($13)) + 306|0); //@line 643 "./src/cpp/unrar/unpack50.cpp"
 $152 = $8; //@line 643 "./src/cpp/unrar/unpack50.cpp"
 $153 = ((($152)) + 3820|0); //@line 643 "./src/cpp/unrar/unpack50.cpp"
 __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($19,$151,$153,64); //@line 643 "./src/cpp/unrar/unpack50.cpp"
 $154 = ((($13)) + 370|0); //@line 644 "./src/cpp/unrar/unpack50.cpp"
 $155 = $8; //@line 644 "./src/cpp/unrar/unpack50.cpp"
 $156 = ((($155)) + 7640|0); //@line 644 "./src/cpp/unrar/unpack50.cpp"
 __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($19,$154,$156,16); //@line 644 "./src/cpp/unrar/unpack50.cpp"
 $157 = ((($13)) + 386|0); //@line 645 "./src/cpp/unrar/unpack50.cpp"
 $158 = $8; //@line 645 "./src/cpp/unrar/unpack50.cpp"
 $159 = ((($158)) + 11460|0); //@line 645 "./src/cpp/unrar/unpack50.cpp"
 __ZN6Unpack16MakeDecodeTablesEPhP11DecodeTablej($19,$157,$159,44); //@line 645 "./src/cpp/unrar/unpack50.cpp"
 $$expand_i1_val8 = 1; //@line 646 "./src/cpp/unrar/unpack50.cpp"
 HEAP8[$4>>0] = $$expand_i1_val8; //@line 646 "./src/cpp/unrar/unpack50.cpp"
 $$pre_trunc = HEAP8[$4>>0]|0; //@line 647 "./src/cpp/unrar/unpack50.cpp"
 $160 = $$pre_trunc&1; //@line 647 "./src/cpp/unrar/unpack50.cpp"
 STACKTOP = sp;return ($160|0); //@line 647 "./src/cpp/unrar/unpack50.cpp"
}
function __ZN6Unpack11UnpWriteBufEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $1 = $0;
 $18 = $1;
 $19 = ((($18)) + 100|0); //@line 250 "./src/cpp/unrar/unpack50.cpp"
 $20 = HEAP32[$19>>2]|0; //@line 250 "./src/cpp/unrar/unpack50.cpp"
 $2 = $20; //@line 250 "./src/cpp/unrar/unpack50.cpp"
 $21 = ((($18)) + 96|0); //@line 251 "./src/cpp/unrar/unpack50.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 251 "./src/cpp/unrar/unpack50.cpp"
 $23 = $2; //@line 251 "./src/cpp/unrar/unpack50.cpp"
 $24 = (($22) - ($23))|0; //@line 251 "./src/cpp/unrar/unpack50.cpp"
 $25 = ((($18)) + 59088|0); //@line 251 "./src/cpp/unrar/unpack50.cpp"
 $26 = HEAP32[$25>>2]|0; //@line 251 "./src/cpp/unrar/unpack50.cpp"
 $27 = $24 & $26; //@line 251 "./src/cpp/unrar/unpack50.cpp"
 $3 = $27; //@line 251 "./src/cpp/unrar/unpack50.cpp"
 $28 = $3; //@line 252 "./src/cpp/unrar/unpack50.cpp"
 $4 = $28; //@line 252 "./src/cpp/unrar/unpack50.cpp"
 $5 = 0; //@line 253 "./src/cpp/unrar/unpack50.cpp"
 $6 = 0; //@line 254 "./src/cpp/unrar/unpack50.cpp"
 L1: while(1) {
  $29 = $6; //@line 254 "./src/cpp/unrar/unpack50.cpp"
  $30 = ((($18)) + 52|0); //@line 254 "./src/cpp/unrar/unpack50.cpp"
  $31 = (__ZN5ArrayI12UnpackFilterE4SizeEv($30)|0); //@line 254 "./src/cpp/unrar/unpack50.cpp"
  $32 = ($29>>>0)<($31>>>0); //@line 254 "./src/cpp/unrar/unpack50.cpp"
  if (!($32)) {
   break;
  }
  $33 = ((($18)) + 52|0); //@line 262 "./src/cpp/unrar/unpack50.cpp"
  $34 = $6; //@line 262 "./src/cpp/unrar/unpack50.cpp"
  $35 = (__ZNK5ArrayI12UnpackFilterEixEj($33,$34)|0); //@line 262 "./src/cpp/unrar/unpack50.cpp"
  $7 = $35; //@line 262 "./src/cpp/unrar/unpack50.cpp"
  $36 = $7; //@line 263 "./src/cpp/unrar/unpack50.cpp"
  $37 = HEAP8[$36>>0]|0; //@line 263 "./src/cpp/unrar/unpack50.cpp"
  $38 = $37&255; //@line 263 "./src/cpp/unrar/unpack50.cpp"
  $39 = ($38|0)==(8); //@line 263 "./src/cpp/unrar/unpack50.cpp"
  do {
   if (!($39)) {
    $40 = $7; //@line 265 "./src/cpp/unrar/unpack50.cpp"
    $41 = ((($40)) + 13|0); //@line 265 "./src/cpp/unrar/unpack50.cpp"
    $42 = HEAP8[$41>>0]|0; //@line 265 "./src/cpp/unrar/unpack50.cpp"
    $43 = $42&1; //@line 265 "./src/cpp/unrar/unpack50.cpp"
    $44 = $7;
    $45 = ((($44)) + 4|0);
    $46 = HEAP32[$45>>2]|0;
    if ($43) {
     $47 = ((($18)) + 100|0); //@line 279 "./src/cpp/unrar/unpack50.cpp"
     $48 = HEAP32[$47>>2]|0; //@line 279 "./src/cpp/unrar/unpack50.cpp"
     $49 = (($46) - ($48))|0; //@line 279 "./src/cpp/unrar/unpack50.cpp"
     $50 = ((($18)) + 59088|0); //@line 279 "./src/cpp/unrar/unpack50.cpp"
     $51 = HEAP32[$50>>2]|0; //@line 279 "./src/cpp/unrar/unpack50.cpp"
     $52 = $49 & $51; //@line 279 "./src/cpp/unrar/unpack50.cpp"
     $53 = $3; //@line 279 "./src/cpp/unrar/unpack50.cpp"
     $54 = ($52>>>0)<=($53>>>0); //@line 279 "./src/cpp/unrar/unpack50.cpp"
     if (!($54)) {
      break;
     }
     $55 = $7; //@line 280 "./src/cpp/unrar/unpack50.cpp"
     $56 = ((($55)) + 13|0); //@line 280 "./src/cpp/unrar/unpack50.cpp"
     HEAP8[$56>>0] = 0; //@line 280 "./src/cpp/unrar/unpack50.cpp"
     break;
    }
    $8 = $46; //@line 283 "./src/cpp/unrar/unpack50.cpp"
    $57 = $7; //@line 284 "./src/cpp/unrar/unpack50.cpp"
    $58 = ((($57)) + 8|0); //@line 284 "./src/cpp/unrar/unpack50.cpp"
    $59 = HEAP32[$58>>2]|0; //@line 284 "./src/cpp/unrar/unpack50.cpp"
    $9 = $59; //@line 284 "./src/cpp/unrar/unpack50.cpp"
    $60 = $8; //@line 285 "./src/cpp/unrar/unpack50.cpp"
    $61 = $2; //@line 285 "./src/cpp/unrar/unpack50.cpp"
    $62 = (($60) - ($61))|0; //@line 285 "./src/cpp/unrar/unpack50.cpp"
    $63 = ((($18)) + 59088|0); //@line 285 "./src/cpp/unrar/unpack50.cpp"
    $64 = HEAP32[$63>>2]|0; //@line 285 "./src/cpp/unrar/unpack50.cpp"
    $65 = $62 & $64; //@line 285 "./src/cpp/unrar/unpack50.cpp"
    $66 = $4; //@line 285 "./src/cpp/unrar/unpack50.cpp"
    $67 = ($65>>>0)<($66>>>0); //@line 285 "./src/cpp/unrar/unpack50.cpp"
    if ($67) {
     $68 = $2; //@line 287 "./src/cpp/unrar/unpack50.cpp"
     $69 = $8; //@line 287 "./src/cpp/unrar/unpack50.cpp"
     $70 = ($68|0)!=($69|0); //@line 287 "./src/cpp/unrar/unpack50.cpp"
     if ($70) {
      $71 = $2; //@line 289 "./src/cpp/unrar/unpack50.cpp"
      $72 = $8; //@line 289 "./src/cpp/unrar/unpack50.cpp"
      __ZN6Unpack12UnpWriteAreaEjj($18,$71,$72); //@line 289 "./src/cpp/unrar/unpack50.cpp"
      $73 = $8; //@line 290 "./src/cpp/unrar/unpack50.cpp"
      $2 = $73; //@line 290 "./src/cpp/unrar/unpack50.cpp"
      $74 = ((($18)) + 96|0); //@line 291 "./src/cpp/unrar/unpack50.cpp"
      $75 = HEAP32[$74>>2]|0; //@line 291 "./src/cpp/unrar/unpack50.cpp"
      $76 = $2; //@line 291 "./src/cpp/unrar/unpack50.cpp"
      $77 = (($75) - ($76))|0; //@line 291 "./src/cpp/unrar/unpack50.cpp"
      $78 = ((($18)) + 59088|0); //@line 291 "./src/cpp/unrar/unpack50.cpp"
      $79 = HEAP32[$78>>2]|0; //@line 291 "./src/cpp/unrar/unpack50.cpp"
      $80 = $77 & $79; //@line 291 "./src/cpp/unrar/unpack50.cpp"
      $4 = $80; //@line 291 "./src/cpp/unrar/unpack50.cpp"
     }
     $81 = $9; //@line 293 "./src/cpp/unrar/unpack50.cpp"
     $82 = $4; //@line 293 "./src/cpp/unrar/unpack50.cpp"
     $83 = ($81>>>0)<=($82>>>0); //@line 293 "./src/cpp/unrar/unpack50.cpp"
     if (!($83)) {
      label = 22;
      break L1;
     }
     $84 = $9; //@line 295 "./src/cpp/unrar/unpack50.cpp"
     $85 = ($84>>>0)>(0); //@line 295 "./src/cpp/unrar/unpack50.cpp"
     if ($85) {
      $86 = $8; //@line 297 "./src/cpp/unrar/unpack50.cpp"
      $87 = $9; //@line 297 "./src/cpp/unrar/unpack50.cpp"
      $88 = (($86) + ($87))|0; //@line 297 "./src/cpp/unrar/unpack50.cpp"
      $89 = ((($18)) + 59088|0); //@line 297 "./src/cpp/unrar/unpack50.cpp"
      $90 = HEAP32[$89>>2]|0; //@line 297 "./src/cpp/unrar/unpack50.cpp"
      $91 = $88 & $90; //@line 297 "./src/cpp/unrar/unpack50.cpp"
      $10 = $91; //@line 297 "./src/cpp/unrar/unpack50.cpp"
      $92 = ((($18)) + 20|0); //@line 299 "./src/cpp/unrar/unpack50.cpp"
      $93 = $9; //@line 299 "./src/cpp/unrar/unpack50.cpp"
      __ZN5ArrayIhE5AllocEj($92,$93); //@line 299 "./src/cpp/unrar/unpack50.cpp"
      $94 = ((($18)) + 20|0); //@line 300 "./src/cpp/unrar/unpack50.cpp"
      $95 = (__ZNK5ArrayIhEixEj($94,0)|0); //@line 300 "./src/cpp/unrar/unpack50.cpp"
      $11 = $95; //@line 300 "./src/cpp/unrar/unpack50.cpp"
      $96 = $8; //@line 301 "./src/cpp/unrar/unpack50.cpp"
      $97 = $10; //@line 301 "./src/cpp/unrar/unpack50.cpp"
      $98 = ($96>>>0)<($97>>>0); //@line 301 "./src/cpp/unrar/unpack50.cpp"
      $99 = $10; //@line 301 "./src/cpp/unrar/unpack50.cpp"
      $100 = ($99|0)==(0); //@line 301 "./src/cpp/unrar/unpack50.cpp"
      $or$cond = $98 | $100; //@line 301 "./src/cpp/unrar/unpack50.cpp"
      do {
       if ($or$cond) {
        $101 = ((($18)) + 19496|0); //@line 303 "./src/cpp/unrar/unpack50.cpp"
        $102 = HEAP8[$101>>0]|0; //@line 303 "./src/cpp/unrar/unpack50.cpp"
        $103 = $102&1; //@line 303 "./src/cpp/unrar/unpack50.cpp"
        if ($103) {
         $104 = ((($18)) + 19240|0); //@line 304 "./src/cpp/unrar/unpack50.cpp"
         $105 = $11; //@line 304 "./src/cpp/unrar/unpack50.cpp"
         $106 = $8; //@line 304 "./src/cpp/unrar/unpack50.cpp"
         $107 = $9; //@line 304 "./src/cpp/unrar/unpack50.cpp"
         __ZN16FragmentedWindow8CopyDataEPhjj($104,$105,$106,$107); //@line 304 "./src/cpp/unrar/unpack50.cpp"
         break;
        } else {
         $108 = $11; //@line 306 "./src/cpp/unrar/unpack50.cpp"
         $109 = ((($18)) + 19236|0); //@line 306 "./src/cpp/unrar/unpack50.cpp"
         $110 = HEAP32[$109>>2]|0; //@line 306 "./src/cpp/unrar/unpack50.cpp"
         $111 = $8; //@line 306 "./src/cpp/unrar/unpack50.cpp"
         $112 = (($110) + ($111)|0); //@line 306 "./src/cpp/unrar/unpack50.cpp"
         $113 = $9; //@line 306 "./src/cpp/unrar/unpack50.cpp"
         _memcpy(($108|0),($112|0),($113|0))|0; //@line 306 "./src/cpp/unrar/unpack50.cpp"
         break;
        }
       } else {
        $114 = ((($18)) + 59084|0); //@line 310 "./src/cpp/unrar/unpack50.cpp"
        $115 = HEAP32[$114>>2]|0; //@line 310 "./src/cpp/unrar/unpack50.cpp"
        $116 = $8; //@line 310 "./src/cpp/unrar/unpack50.cpp"
        $117 = (($115) - ($116))|0; //@line 310 "./src/cpp/unrar/unpack50.cpp"
        $12 = $117; //@line 310 "./src/cpp/unrar/unpack50.cpp"
        $118 = ((($18)) + 19496|0); //@line 311 "./src/cpp/unrar/unpack50.cpp"
        $119 = HEAP8[$118>>0]|0; //@line 311 "./src/cpp/unrar/unpack50.cpp"
        $120 = $119&1; //@line 311 "./src/cpp/unrar/unpack50.cpp"
        if ($120) {
         $121 = ((($18)) + 19240|0); //@line 313 "./src/cpp/unrar/unpack50.cpp"
         $122 = $11; //@line 313 "./src/cpp/unrar/unpack50.cpp"
         $123 = $8; //@line 313 "./src/cpp/unrar/unpack50.cpp"
         $124 = $12; //@line 313 "./src/cpp/unrar/unpack50.cpp"
         __ZN16FragmentedWindow8CopyDataEPhjj($121,$122,$123,$124); //@line 313 "./src/cpp/unrar/unpack50.cpp"
         $125 = ((($18)) + 19240|0); //@line 314 "./src/cpp/unrar/unpack50.cpp"
         $126 = $11; //@line 314 "./src/cpp/unrar/unpack50.cpp"
         $127 = $12; //@line 314 "./src/cpp/unrar/unpack50.cpp"
         $128 = (($126) + ($127)|0); //@line 314 "./src/cpp/unrar/unpack50.cpp"
         $129 = $10; //@line 314 "./src/cpp/unrar/unpack50.cpp"
         __ZN16FragmentedWindow8CopyDataEPhjj($125,$128,0,$129); //@line 314 "./src/cpp/unrar/unpack50.cpp"
         break;
        } else {
         $130 = $11; //@line 318 "./src/cpp/unrar/unpack50.cpp"
         $131 = ((($18)) + 19236|0); //@line 318 "./src/cpp/unrar/unpack50.cpp"
         $132 = HEAP32[$131>>2]|0; //@line 318 "./src/cpp/unrar/unpack50.cpp"
         $133 = $8; //@line 318 "./src/cpp/unrar/unpack50.cpp"
         $134 = (($132) + ($133)|0); //@line 318 "./src/cpp/unrar/unpack50.cpp"
         $135 = $12; //@line 318 "./src/cpp/unrar/unpack50.cpp"
         _memcpy(($130|0),($134|0),($135|0))|0; //@line 318 "./src/cpp/unrar/unpack50.cpp"
         $136 = $11; //@line 319 "./src/cpp/unrar/unpack50.cpp"
         $137 = $12; //@line 319 "./src/cpp/unrar/unpack50.cpp"
         $138 = (($136) + ($137)|0); //@line 319 "./src/cpp/unrar/unpack50.cpp"
         $139 = ((($18)) + 19236|0); //@line 319 "./src/cpp/unrar/unpack50.cpp"
         $140 = HEAP32[$139>>2]|0; //@line 319 "./src/cpp/unrar/unpack50.cpp"
         $141 = $10; //@line 319 "./src/cpp/unrar/unpack50.cpp"
         _memcpy(($138|0),($140|0),($141|0))|0; //@line 319 "./src/cpp/unrar/unpack50.cpp"
         break;
        }
       }
      } while(0);
      $142 = $11; //@line 323 "./src/cpp/unrar/unpack50.cpp"
      $143 = $9; //@line 323 "./src/cpp/unrar/unpack50.cpp"
      $144 = $7; //@line 323 "./src/cpp/unrar/unpack50.cpp"
      $145 = (__ZN6Unpack11ApplyFilterEPhjP12UnpackFilter($18,$142,$143,$144)|0); //@line 323 "./src/cpp/unrar/unpack50.cpp"
      $13 = $145; //@line 323 "./src/cpp/unrar/unpack50.cpp"
      $146 = ((($18)) + 52|0); //@line 325 "./src/cpp/unrar/unpack50.cpp"
      $147 = $6; //@line 325 "./src/cpp/unrar/unpack50.cpp"
      $148 = (__ZNK5ArrayI12UnpackFilterEixEj($146,$147)|0); //@line 325 "./src/cpp/unrar/unpack50.cpp"
      HEAP8[$148>>0] = 8; //@line 325 "./src/cpp/unrar/unpack50.cpp"
      $149 = $13; //@line 327 "./src/cpp/unrar/unpack50.cpp"
      $150 = ($149|0)!=(0|0); //@line 327 "./src/cpp/unrar/unpack50.cpp"
      if ($150) {
       $151 = HEAP32[$18>>2]|0; //@line 328 "./src/cpp/unrar/unpack50.cpp"
       $152 = $13; //@line 328 "./src/cpp/unrar/unpack50.cpp"
       $153 = $9; //@line 328 "./src/cpp/unrar/unpack50.cpp"
       __ZN11ComprDataIO8UnpWriteEPhj($151,$152,$153); //@line 328 "./src/cpp/unrar/unpack50.cpp"
      }
      $154 = ((($18)) + 19514|0); //@line 330 "./src/cpp/unrar/unpack50.cpp"
      HEAP8[$154>>0] = 1; //@line 330 "./src/cpp/unrar/unpack50.cpp"
      $155 = $9; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $156 = ((($18)) + 19520|0); //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $157 = $156; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $158 = $157; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $159 = HEAP32[$158>>2]|0; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $160 = (($157) + 4)|0; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $161 = $160; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $162 = HEAP32[$161>>2]|0; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $163 = (_i64Add(($159|0),($162|0),($155|0),0)|0); //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $164 = tempRet0; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $165 = $156; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $166 = $165; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      HEAP32[$166>>2] = $163; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $167 = (($165) + 4)|0; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $168 = $167; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      HEAP32[$168>>2] = $164; //@line 331 "./src/cpp/unrar/unpack50.cpp"
      $169 = $10; //@line 332 "./src/cpp/unrar/unpack50.cpp"
      $2 = $169; //@line 332 "./src/cpp/unrar/unpack50.cpp"
      $170 = ((($18)) + 96|0); //@line 333 "./src/cpp/unrar/unpack50.cpp"
      $171 = HEAP32[$170>>2]|0; //@line 333 "./src/cpp/unrar/unpack50.cpp"
      $172 = $2; //@line 333 "./src/cpp/unrar/unpack50.cpp"
      $173 = (($171) - ($172))|0; //@line 333 "./src/cpp/unrar/unpack50.cpp"
      $174 = ((($18)) + 59088|0); //@line 333 "./src/cpp/unrar/unpack50.cpp"
      $175 = HEAP32[$174>>2]|0; //@line 333 "./src/cpp/unrar/unpack50.cpp"
      $176 = $173 & $175; //@line 333 "./src/cpp/unrar/unpack50.cpp"
      $4 = $176; //@line 333 "./src/cpp/unrar/unpack50.cpp"
     }
    }
   }
  } while(0);
  $195 = $6; //@line 254 "./src/cpp/unrar/unpack50.cpp"
  $196 = (($195) + 1)|0; //@line 254 "./src/cpp/unrar/unpack50.cpp"
  $6 = $196; //@line 254 "./src/cpp/unrar/unpack50.cpp"
 }
 if ((label|0) == 22) {
  $177 = $2; //@line 340 "./src/cpp/unrar/unpack50.cpp"
  $178 = ((($18)) + 100|0); //@line 340 "./src/cpp/unrar/unpack50.cpp"
  HEAP32[$178>>2] = $177; //@line 340 "./src/cpp/unrar/unpack50.cpp"
  $179 = $6; //@line 345 "./src/cpp/unrar/unpack50.cpp"
  $14 = $179; //@line 345 "./src/cpp/unrar/unpack50.cpp"
  while(1) {
   $180 = $14; //@line 345 "./src/cpp/unrar/unpack50.cpp"
   $181 = ((($18)) + 52|0); //@line 345 "./src/cpp/unrar/unpack50.cpp"
   $182 = (__ZN5ArrayI12UnpackFilterE4SizeEv($181)|0); //@line 345 "./src/cpp/unrar/unpack50.cpp"
   $183 = ($180>>>0)<($182>>>0); //@line 345 "./src/cpp/unrar/unpack50.cpp"
   if (!($183)) {
    break;
   }
   $184 = ((($18)) + 52|0); //@line 347 "./src/cpp/unrar/unpack50.cpp"
   $185 = $14; //@line 347 "./src/cpp/unrar/unpack50.cpp"
   $186 = (__ZNK5ArrayI12UnpackFilterEixEj($184,$185)|0); //@line 347 "./src/cpp/unrar/unpack50.cpp"
   $15 = $186; //@line 347 "./src/cpp/unrar/unpack50.cpp"
   $187 = $15; //@line 348 "./src/cpp/unrar/unpack50.cpp"
   $188 = HEAP8[$187>>0]|0; //@line 348 "./src/cpp/unrar/unpack50.cpp"
   $189 = $188&255; //@line 348 "./src/cpp/unrar/unpack50.cpp"
   $190 = ($189|0)!=(8); //@line 348 "./src/cpp/unrar/unpack50.cpp"
   if ($190) {
    $191 = $15; //@line 349 "./src/cpp/unrar/unpack50.cpp"
    $192 = ((($191)) + 13|0); //@line 349 "./src/cpp/unrar/unpack50.cpp"
    HEAP8[$192>>0] = 0; //@line 349 "./src/cpp/unrar/unpack50.cpp"
   }
   $193 = $14; //@line 345 "./src/cpp/unrar/unpack50.cpp"
   $194 = (($193) + 1)|0; //@line 345 "./src/cpp/unrar/unpack50.cpp"
   $14 = $194; //@line 345 "./src/cpp/unrar/unpack50.cpp"
  }
  $5 = 1; //@line 353 "./src/cpp/unrar/unpack50.cpp"
 }
 $16 = 0; //@line 360 "./src/cpp/unrar/unpack50.cpp"
 $17 = 0; //@line 361 "./src/cpp/unrar/unpack50.cpp"
 while(1) {
  $197 = $17; //@line 361 "./src/cpp/unrar/unpack50.cpp"
  $198 = ((($18)) + 52|0); //@line 361 "./src/cpp/unrar/unpack50.cpp"
  $199 = (__ZN5ArrayI12UnpackFilterE4SizeEv($198)|0); //@line 361 "./src/cpp/unrar/unpack50.cpp"
  $200 = ($197>>>0)<($199>>>0); //@line 361 "./src/cpp/unrar/unpack50.cpp"
  $201 = $16;
  $202 = ($201>>>0)>(0);
  if (!($200)) {
   break;
  }
  if ($202) {
   $203 = ((($18)) + 52|0); //@line 364 "./src/cpp/unrar/unpack50.cpp"
   $204 = $17; //@line 364 "./src/cpp/unrar/unpack50.cpp"
   $205 = (__ZNK5ArrayI12UnpackFilterEixEj($203,$204)|0); //@line 364 "./src/cpp/unrar/unpack50.cpp"
   $206 = ((($18)) + 52|0); //@line 364 "./src/cpp/unrar/unpack50.cpp"
   $207 = $17; //@line 364 "./src/cpp/unrar/unpack50.cpp"
   $208 = $16; //@line 364 "./src/cpp/unrar/unpack50.cpp"
   $209 = (($207) - ($208))|0; //@line 364 "./src/cpp/unrar/unpack50.cpp"
   $210 = (__ZNK5ArrayI12UnpackFilterEixEj($206,$209)|0); //@line 364 "./src/cpp/unrar/unpack50.cpp"
   ;HEAP32[$210>>2]=HEAP32[$205>>2]|0;HEAP32[$210+4>>2]=HEAP32[$205+4>>2]|0;HEAP32[$210+8>>2]=HEAP32[$205+8>>2]|0;HEAP32[$210+12>>2]=HEAP32[$205+12>>2]|0; //@line 364 "./src/cpp/unrar/unpack50.cpp"
  }
  $211 = ((($18)) + 52|0); //@line 365 "./src/cpp/unrar/unpack50.cpp"
  $212 = $17; //@line 365 "./src/cpp/unrar/unpack50.cpp"
  $213 = (__ZNK5ArrayI12UnpackFilterEixEj($211,$212)|0); //@line 365 "./src/cpp/unrar/unpack50.cpp"
  $214 = HEAP8[$213>>0]|0; //@line 365 "./src/cpp/unrar/unpack50.cpp"
  $215 = $214&255; //@line 365 "./src/cpp/unrar/unpack50.cpp"
  $216 = ($215|0)==(8); //@line 365 "./src/cpp/unrar/unpack50.cpp"
  if ($216) {
   $217 = $16; //@line 366 "./src/cpp/unrar/unpack50.cpp"
   $218 = (($217) + 1)|0; //@line 366 "./src/cpp/unrar/unpack50.cpp"
   $16 = $218; //@line 366 "./src/cpp/unrar/unpack50.cpp"
  }
  $219 = $17; //@line 361 "./src/cpp/unrar/unpack50.cpp"
  $220 = (($219) + 1)|0; //@line 361 "./src/cpp/unrar/unpack50.cpp"
  $17 = $220; //@line 361 "./src/cpp/unrar/unpack50.cpp"
 }
 if ($202) {
  $221 = ((($18)) + 52|0); //@line 369 "./src/cpp/unrar/unpack50.cpp"
  $222 = ((($18)) + 52|0); //@line 369 "./src/cpp/unrar/unpack50.cpp"
  $223 = (__ZN5ArrayI12UnpackFilterE4SizeEv($222)|0); //@line 369 "./src/cpp/unrar/unpack50.cpp"
  $224 = $16; //@line 369 "./src/cpp/unrar/unpack50.cpp"
  $225 = (($223) - ($224))|0; //@line 369 "./src/cpp/unrar/unpack50.cpp"
  __ZN5ArrayI12UnpackFilterE5AllocEj($221,$225); //@line 369 "./src/cpp/unrar/unpack50.cpp"
 }
 $226 = $5; //@line 371 "./src/cpp/unrar/unpack50.cpp"
 $227 = $226&1; //@line 371 "./src/cpp/unrar/unpack50.cpp"
 if (!($227)) {
  $228 = $2; //@line 374 "./src/cpp/unrar/unpack50.cpp"
  $229 = ((($18)) + 96|0); //@line 374 "./src/cpp/unrar/unpack50.cpp"
  $230 = HEAP32[$229>>2]|0; //@line 374 "./src/cpp/unrar/unpack50.cpp"
  __ZN6Unpack12UnpWriteAreaEjj($18,$228,$230); //@line 374 "./src/cpp/unrar/unpack50.cpp"
  $231 = ((($18)) + 96|0); //@line 375 "./src/cpp/unrar/unpack50.cpp"
  $232 = HEAP32[$231>>2]|0; //@line 375 "./src/cpp/unrar/unpack50.cpp"
  $233 = ((($18)) + 100|0); //@line 375 "./src/cpp/unrar/unpack50.cpp"
  HEAP32[$233>>2] = $232; //@line 375 "./src/cpp/unrar/unpack50.cpp"
 }
 $234 = ((($18)) + 96|0); //@line 381 "./src/cpp/unrar/unpack50.cpp"
 $235 = HEAP32[$234>>2]|0; //@line 381 "./src/cpp/unrar/unpack50.cpp"
 $236 = ((($18)) + 59084|0); //@line 381 "./src/cpp/unrar/unpack50.cpp"
 $237 = HEAP32[$236>>2]|0; //@line 381 "./src/cpp/unrar/unpack50.cpp"
 $238 = ($237>>>0)<(4194304); //@line 381 "./src/cpp/unrar/unpack50.cpp"
 if ($238) {
  $239 = ((($18)) + 59084|0); //@line 381 "./src/cpp/unrar/unpack50.cpp"
  $240 = HEAP32[$239>>2]|0; //@line 381 "./src/cpp/unrar/unpack50.cpp"
  $242 = $240;
 } else {
  $242 = 4194304;
 }
 $241 = (($235) + ($242))|0; //@line 381 "./src/cpp/unrar/unpack50.cpp"
 $243 = ((($18)) + 59088|0); //@line 381 "./src/cpp/unrar/unpack50.cpp"
 $244 = HEAP32[$243>>2]|0; //@line 381 "./src/cpp/unrar/unpack50.cpp"
 $245 = $241 & $244; //@line 381 "./src/cpp/unrar/unpack50.cpp"
 $246 = ((($18)) + 19232|0); //@line 381 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$246>>2] = $245; //@line 381 "./src/cpp/unrar/unpack50.cpp"
 $247 = ((($18)) + 19232|0); //@line 385 "./src/cpp/unrar/unpack50.cpp"
 $248 = HEAP32[$247>>2]|0; //@line 385 "./src/cpp/unrar/unpack50.cpp"
 $249 = ((($18)) + 96|0); //@line 385 "./src/cpp/unrar/unpack50.cpp"
 $250 = HEAP32[$249>>2]|0; //@line 385 "./src/cpp/unrar/unpack50.cpp"
 $251 = ($248|0)==($250|0); //@line 385 "./src/cpp/unrar/unpack50.cpp"
 if (!($251)) {
  $252 = ((($18)) + 100|0); //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $253 = HEAP32[$252>>2]|0; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $254 = ((($18)) + 96|0); //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $255 = HEAP32[$254>>2]|0; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $256 = ($253|0)!=($255|0); //@line 386 "./src/cpp/unrar/unpack50.cpp"
  if (!($256)) {
   STACKTOP = sp;return; //@line 388 "./src/cpp/unrar/unpack50.cpp"
  }
  $257 = ((($18)) + 100|0); //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $258 = HEAP32[$257>>2]|0; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $259 = ((($18)) + 96|0); //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $260 = HEAP32[$259>>2]|0; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $261 = (($258) - ($260))|0; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $262 = ((($18)) + 59088|0); //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $263 = HEAP32[$262>>2]|0; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $264 = $261 & $263; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $265 = ((($18)) + 19232|0); //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $266 = HEAP32[$265>>2]|0; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $267 = ((($18)) + 96|0); //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $268 = HEAP32[$267>>2]|0; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $269 = (($266) - ($268))|0; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $270 = ((($18)) + 59088|0); //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $271 = HEAP32[$270>>2]|0; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $272 = $269 & $271; //@line 386 "./src/cpp/unrar/unpack50.cpp"
  $273 = ($264>>>0)<($272>>>0); //@line 386 "./src/cpp/unrar/unpack50.cpp"
  if (!($273)) {
   STACKTOP = sp;return; //@line 388 "./src/cpp/unrar/unpack50.cpp"
  }
 }
 $274 = ((($18)) + 100|0); //@line 387 "./src/cpp/unrar/unpack50.cpp"
 $275 = HEAP32[$274>>2]|0; //@line 387 "./src/cpp/unrar/unpack50.cpp"
 $276 = ((($18)) + 19232|0); //@line 387 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$276>>2] = $275; //@line 387 "./src/cpp/unrar/unpack50.cpp"
 STACKTOP = sp;return; //@line 388 "./src/cpp/unrar/unpack50.cpp"
}
function __ZN6Unpack12SlotToLengthER8BitInputj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = 2; //@line 129 "./src/cpp/unrar/unpackinline.cpp"
 $8 = $5; //@line 130 "./src/cpp/unrar/unpackinline.cpp"
 $9 = ($8>>>0)<(8); //@line 130 "./src/cpp/unrar/unpackinline.cpp"
 if ($9) {
  $6 = 0; //@line 132 "./src/cpp/unrar/unpackinline.cpp"
  $10 = $5; //@line 133 "./src/cpp/unrar/unpackinline.cpp"
  $11 = $7; //@line 133 "./src/cpp/unrar/unpackinline.cpp"
  $12 = (($11) + ($10))|0; //@line 133 "./src/cpp/unrar/unpackinline.cpp"
  $7 = $12; //@line 133 "./src/cpp/unrar/unpackinline.cpp"
 } else {
  $13 = $5; //@line 137 "./src/cpp/unrar/unpackinline.cpp"
  $14 = (($13>>>0) / 4)&-1; //@line 137 "./src/cpp/unrar/unpackinline.cpp"
  $15 = (($14) - 1)|0; //@line 137 "./src/cpp/unrar/unpackinline.cpp"
  $6 = $15; //@line 137 "./src/cpp/unrar/unpackinline.cpp"
  $16 = $5; //@line 138 "./src/cpp/unrar/unpackinline.cpp"
  $17 = $16 & 3; //@line 138 "./src/cpp/unrar/unpackinline.cpp"
  $18 = 4 | $17; //@line 138 "./src/cpp/unrar/unpackinline.cpp"
  $19 = $6; //@line 138 "./src/cpp/unrar/unpackinline.cpp"
  $20 = $18 << $19; //@line 138 "./src/cpp/unrar/unpackinline.cpp"
  $21 = $7; //@line 138 "./src/cpp/unrar/unpackinline.cpp"
  $22 = (($21) + ($20))|0; //@line 138 "./src/cpp/unrar/unpackinline.cpp"
  $7 = $22; //@line 138 "./src/cpp/unrar/unpackinline.cpp"
 }
 $23 = $6; //@line 141 "./src/cpp/unrar/unpackinline.cpp"
 $24 = ($23>>>0)>(0); //@line 141 "./src/cpp/unrar/unpackinline.cpp"
 if (!($24)) {
  $34 = $7; //@line 146 "./src/cpp/unrar/unpackinline.cpp"
  STACKTOP = sp;return ($34|0); //@line 146 "./src/cpp/unrar/unpackinline.cpp"
 }
 $25 = $4; //@line 143 "./src/cpp/unrar/unpackinline.cpp"
 $26 = (__ZN8BitInput7getbitsEv($25)|0); //@line 143 "./src/cpp/unrar/unpackinline.cpp"
 $27 = $6; //@line 143 "./src/cpp/unrar/unpackinline.cpp"
 $28 = (16 - ($27))|0; //@line 143 "./src/cpp/unrar/unpackinline.cpp"
 $29 = $26 >>> $28; //@line 143 "./src/cpp/unrar/unpackinline.cpp"
 $30 = $7; //@line 143 "./src/cpp/unrar/unpackinline.cpp"
 $31 = (($30) + ($29))|0; //@line 143 "./src/cpp/unrar/unpackinline.cpp"
 $7 = $31; //@line 143 "./src/cpp/unrar/unpackinline.cpp"
 $32 = $4; //@line 144 "./src/cpp/unrar/unpackinline.cpp"
 $33 = $6; //@line 144 "./src/cpp/unrar/unpackinline.cpp"
 __ZN8BitInput7addbitsEj($32,$33); //@line 144 "./src/cpp/unrar/unpackinline.cpp"
 $34 = $7; //@line 146 "./src/cpp/unrar/unpackinline.cpp"
 STACKTOP = sp;return ($34|0); //@line 146 "./src/cpp/unrar/unpackinline.cpp"
}
function __ZN8BitInput9getbits32Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = ((($3)) + 12|0); //@line 47 "./src/cpp/unrar/getbits.hpp"
 $5 = HEAP32[$4>>2]|0; //@line 47 "./src/cpp/unrar/getbits.hpp"
 $6 = HEAP32[$3>>2]|0; //@line 47 "./src/cpp/unrar/getbits.hpp"
 $7 = (($5) + ($6)|0); //@line 47 "./src/cpp/unrar/getbits.hpp"
 $8 = HEAP8[$7>>0]|0; //@line 47 "./src/cpp/unrar/getbits.hpp"
 $9 = $8&255; //@line 47 "./src/cpp/unrar/getbits.hpp"
 $10 = $9 << 24; //@line 47 "./src/cpp/unrar/getbits.hpp"
 $2 = $10; //@line 47 "./src/cpp/unrar/getbits.hpp"
 $11 = ((($3)) + 12|0); //@line 48 "./src/cpp/unrar/getbits.hpp"
 $12 = HEAP32[$11>>2]|0; //@line 48 "./src/cpp/unrar/getbits.hpp"
 $13 = HEAP32[$3>>2]|0; //@line 48 "./src/cpp/unrar/getbits.hpp"
 $14 = (($13) + 1)|0; //@line 48 "./src/cpp/unrar/getbits.hpp"
 $15 = (($12) + ($14)|0); //@line 48 "./src/cpp/unrar/getbits.hpp"
 $16 = HEAP8[$15>>0]|0; //@line 48 "./src/cpp/unrar/getbits.hpp"
 $17 = $16&255; //@line 48 "./src/cpp/unrar/getbits.hpp"
 $18 = $17 << 16; //@line 48 "./src/cpp/unrar/getbits.hpp"
 $19 = $2; //@line 48 "./src/cpp/unrar/getbits.hpp"
 $20 = $19 | $18; //@line 48 "./src/cpp/unrar/getbits.hpp"
 $2 = $20; //@line 48 "./src/cpp/unrar/getbits.hpp"
 $21 = ((($3)) + 12|0); //@line 49 "./src/cpp/unrar/getbits.hpp"
 $22 = HEAP32[$21>>2]|0; //@line 49 "./src/cpp/unrar/getbits.hpp"
 $23 = HEAP32[$3>>2]|0; //@line 49 "./src/cpp/unrar/getbits.hpp"
 $24 = (($23) + 2)|0; //@line 49 "./src/cpp/unrar/getbits.hpp"
 $25 = (($22) + ($24)|0); //@line 49 "./src/cpp/unrar/getbits.hpp"
 $26 = HEAP8[$25>>0]|0; //@line 49 "./src/cpp/unrar/getbits.hpp"
 $27 = $26&255; //@line 49 "./src/cpp/unrar/getbits.hpp"
 $28 = $27 << 8; //@line 49 "./src/cpp/unrar/getbits.hpp"
 $29 = $2; //@line 49 "./src/cpp/unrar/getbits.hpp"
 $30 = $29 | $28; //@line 49 "./src/cpp/unrar/getbits.hpp"
 $2 = $30; //@line 49 "./src/cpp/unrar/getbits.hpp"
 $31 = ((($3)) + 12|0); //@line 50 "./src/cpp/unrar/getbits.hpp"
 $32 = HEAP32[$31>>2]|0; //@line 50 "./src/cpp/unrar/getbits.hpp"
 $33 = HEAP32[$3>>2]|0; //@line 50 "./src/cpp/unrar/getbits.hpp"
 $34 = (($33) + 3)|0; //@line 50 "./src/cpp/unrar/getbits.hpp"
 $35 = (($32) + ($34)|0); //@line 50 "./src/cpp/unrar/getbits.hpp"
 $36 = HEAP8[$35>>0]|0; //@line 50 "./src/cpp/unrar/getbits.hpp"
 $37 = $36&255; //@line 50 "./src/cpp/unrar/getbits.hpp"
 $38 = $2; //@line 50 "./src/cpp/unrar/getbits.hpp"
 $39 = $38 | $37; //@line 50 "./src/cpp/unrar/getbits.hpp"
 $2 = $39; //@line 50 "./src/cpp/unrar/getbits.hpp"
 $40 = ((($3)) + 4|0); //@line 51 "./src/cpp/unrar/getbits.hpp"
 $41 = HEAP32[$40>>2]|0; //@line 51 "./src/cpp/unrar/getbits.hpp"
 $42 = $2; //@line 51 "./src/cpp/unrar/getbits.hpp"
 $43 = $42 << $41; //@line 51 "./src/cpp/unrar/getbits.hpp"
 $2 = $43; //@line 51 "./src/cpp/unrar/getbits.hpp"
 $44 = ((($3)) + 12|0); //@line 52 "./src/cpp/unrar/getbits.hpp"
 $45 = HEAP32[$44>>2]|0; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $46 = HEAP32[$3>>2]|0; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $47 = (($46) + 4)|0; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $48 = (($45) + ($47)|0); //@line 52 "./src/cpp/unrar/getbits.hpp"
 $49 = HEAP8[$48>>0]|0; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $50 = $49&255; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $51 = ((($3)) + 4|0); //@line 52 "./src/cpp/unrar/getbits.hpp"
 $52 = HEAP32[$51>>2]|0; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $53 = (8 - ($52))|0; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $54 = $50 >>> $53; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $55 = $2; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $56 = $55 | $54; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $2 = $56; //@line 52 "./src/cpp/unrar/getbits.hpp"
 $57 = $2; //@line 53 "./src/cpp/unrar/getbits.hpp"
 STACKTOP = sp;return ($57|0); //@line 53 "./src/cpp/unrar/getbits.hpp"
}
function __ZN16FragmentedWindow10CopyStringEjjRjj($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $11 = $5;
 $12 = $8; //@line 79 "./src/cpp/unrar/unpack50frag.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 79 "./src/cpp/unrar/unpack50frag.cpp"
 $14 = $7; //@line 79 "./src/cpp/unrar/unpack50frag.cpp"
 $15 = (($13) - ($14))|0; //@line 79 "./src/cpp/unrar/unpack50frag.cpp"
 $10 = $15; //@line 79 "./src/cpp/unrar/unpack50frag.cpp"
 while(1) {
  $16 = $6; //@line 80 "./src/cpp/unrar/unpack50frag.cpp"
  $17 = (($16) + -1)|0; //@line 80 "./src/cpp/unrar/unpack50frag.cpp"
  $6 = $17; //@line 80 "./src/cpp/unrar/unpack50frag.cpp"
  $18 = ($16>>>0)>(0); //@line 80 "./src/cpp/unrar/unpack50frag.cpp"
  if (!($18)) {
   break;
  }
  $19 = $10; //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  $20 = (($19) + 1)|0; //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  $10 = $20; //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  $21 = $9; //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  $22 = $19 & $21; //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  $23 = (__ZN16FragmentedWindowixEj($11,$22)|0); //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  $24 = HEAP8[$23>>0]|0; //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  $25 = $8; //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  $26 = HEAP32[$25>>2]|0; //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  $27 = (__ZN16FragmentedWindowixEj($11,$26)|0); //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  HEAP8[$27>>0] = $24; //@line 82 "./src/cpp/unrar/unpack50frag.cpp"
  $28 = $8; //@line 85 "./src/cpp/unrar/unpack50frag.cpp"
  $29 = HEAP32[$28>>2]|0; //@line 85 "./src/cpp/unrar/unpack50frag.cpp"
  $30 = (($29) + 1)|0; //@line 85 "./src/cpp/unrar/unpack50frag.cpp"
  $31 = $9; //@line 85 "./src/cpp/unrar/unpack50frag.cpp"
  $32 = $30 & $31; //@line 85 "./src/cpp/unrar/unpack50frag.cpp"
  $33 = $8; //@line 85 "./src/cpp/unrar/unpack50frag.cpp"
  HEAP32[$33>>2] = $32; //@line 85 "./src/cpp/unrar/unpack50frag.cpp"
 }
 STACKTOP = sp;return; //@line 87 "./src/cpp/unrar/unpack50frag.cpp"
}
function __ZN6Unpack10ReadFilterER8BitInputR12UnpackFilter($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 12|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $4;
 $8 = $5; //@line 170 "./src/cpp/unrar/unpack50.cpp"
 $9 = ((($8)) + 8|0); //@line 170 "./src/cpp/unrar/unpack50.cpp"
 $10 = HEAP8[$9>>0]|0; //@line 170 "./src/cpp/unrar/unpack50.cpp"
 $11 = $10&1; //@line 170 "./src/cpp/unrar/unpack50.cpp"
 if (!($11)) {
  $12 = $5; //@line 170 "./src/cpp/unrar/unpack50.cpp"
  $13 = HEAP32[$12>>2]|0; //@line 170 "./src/cpp/unrar/unpack50.cpp"
  $14 = ((($7)) + 104|0); //@line 170 "./src/cpp/unrar/unpack50.cpp"
  $15 = HEAP32[$14>>2]|0; //@line 170 "./src/cpp/unrar/unpack50.cpp"
  $16 = (($15) - 16)|0; //@line 170 "./src/cpp/unrar/unpack50.cpp"
  $17 = ($13|0)>($16|0); //@line 170 "./src/cpp/unrar/unpack50.cpp"
  if ($17) {
   $18 = (__ZN6Unpack10UnpReadBufEv($7)|0); //@line 171 "./src/cpp/unrar/unpack50.cpp"
   if (!($18)) {
    $$expand_i1_val = 0; //@line 172 "./src/cpp/unrar/unpack50.cpp"
    HEAP8[$3>>0] = $$expand_i1_val; //@line 172 "./src/cpp/unrar/unpack50.cpp"
    $$pre_trunc = HEAP8[$3>>0]|0; //@line 187 "./src/cpp/unrar/unpack50.cpp"
    $45 = $$pre_trunc&1; //@line 187 "./src/cpp/unrar/unpack50.cpp"
    STACKTOP = sp;return ($45|0); //@line 187 "./src/cpp/unrar/unpack50.cpp"
   }
  }
 }
 $19 = $5; //@line 174 "./src/cpp/unrar/unpack50.cpp"
 $20 = (__ZN6Unpack14ReadFilterDataER8BitInput($7,$19)|0); //@line 174 "./src/cpp/unrar/unpack50.cpp"
 $21 = $6; //@line 174 "./src/cpp/unrar/unpack50.cpp"
 $22 = ((($21)) + 4|0); //@line 174 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$22>>2] = $20; //@line 174 "./src/cpp/unrar/unpack50.cpp"
 $23 = $5; //@line 175 "./src/cpp/unrar/unpack50.cpp"
 $24 = (__ZN6Unpack14ReadFilterDataER8BitInput($7,$23)|0); //@line 175 "./src/cpp/unrar/unpack50.cpp"
 $25 = $6; //@line 175 "./src/cpp/unrar/unpack50.cpp"
 $26 = ((($25)) + 8|0); //@line 175 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$26>>2] = $24; //@line 175 "./src/cpp/unrar/unpack50.cpp"
 $27 = $5; //@line 177 "./src/cpp/unrar/unpack50.cpp"
 $28 = (__ZN8BitInput8fgetbitsEv($27)|0); //@line 177 "./src/cpp/unrar/unpack50.cpp"
 $29 = $28 >>> 13; //@line 177 "./src/cpp/unrar/unpack50.cpp"
 $30 = $29&255; //@line 177 "./src/cpp/unrar/unpack50.cpp"
 $31 = $6; //@line 177 "./src/cpp/unrar/unpack50.cpp"
 HEAP8[$31>>0] = $30; //@line 177 "./src/cpp/unrar/unpack50.cpp"
 $32 = $5; //@line 178 "./src/cpp/unrar/unpack50.cpp"
 __ZN8BitInput8faddbitsEj($32,3); //@line 178 "./src/cpp/unrar/unpack50.cpp"
 $33 = $6; //@line 180 "./src/cpp/unrar/unpack50.cpp"
 $34 = HEAP8[$33>>0]|0; //@line 180 "./src/cpp/unrar/unpack50.cpp"
 $35 = $34&255; //@line 180 "./src/cpp/unrar/unpack50.cpp"
 $36 = ($35|0)==(0); //@line 180 "./src/cpp/unrar/unpack50.cpp"
 if ($36) {
  $37 = $5; //@line 182 "./src/cpp/unrar/unpack50.cpp"
  $38 = (__ZN8BitInput8fgetbitsEv($37)|0); //@line 182 "./src/cpp/unrar/unpack50.cpp"
  $39 = $38 >>> 11; //@line 182 "./src/cpp/unrar/unpack50.cpp"
  $40 = (($39) + 1)|0; //@line 182 "./src/cpp/unrar/unpack50.cpp"
  $41 = $40&255; //@line 182 "./src/cpp/unrar/unpack50.cpp"
  $42 = $6; //@line 182 "./src/cpp/unrar/unpack50.cpp"
  $43 = ((($42)) + 12|0); //@line 182 "./src/cpp/unrar/unpack50.cpp"
  HEAP8[$43>>0] = $41; //@line 182 "./src/cpp/unrar/unpack50.cpp"
  $44 = $5; //@line 183 "./src/cpp/unrar/unpack50.cpp"
  __ZN8BitInput8faddbitsEj($44,5); //@line 183 "./src/cpp/unrar/unpack50.cpp"
 }
 $$expand_i1_val2 = 1; //@line 186 "./src/cpp/unrar/unpack50.cpp"
 HEAP8[$3>>0] = $$expand_i1_val2; //@line 186 "./src/cpp/unrar/unpack50.cpp"
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 187 "./src/cpp/unrar/unpack50.cpp"
 $45 = $$pre_trunc&1; //@line 187 "./src/cpp/unrar/unpack50.cpp"
 STACKTOP = sp;return ($45|0); //@line 187 "./src/cpp/unrar/unpack50.cpp"
}
function __ZN6Unpack9AddFilterER12UnpackFilter($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 24|0;
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 52|0); //@line 192 "./src/cpp/unrar/unpack50.cpp"
 $7 = (__ZN5ArrayI12UnpackFilterE4SizeEv($6)|0); //@line 192 "./src/cpp/unrar/unpack50.cpp"
 $8 = ($7>>>0)>=(8192); //@line 192 "./src/cpp/unrar/unpack50.cpp"
 if ($8) {
  __ZN6Unpack11UnpWriteBufEv($5); //@line 194 "./src/cpp/unrar/unpack50.cpp"
  $9 = ((($5)) + 52|0); //@line 195 "./src/cpp/unrar/unpack50.cpp"
  $10 = (__ZN5ArrayI12UnpackFilterE4SizeEv($9)|0); //@line 195 "./src/cpp/unrar/unpack50.cpp"
  $11 = ($10>>>0)>=(8192); //@line 195 "./src/cpp/unrar/unpack50.cpp"
  if ($11) {
   __ZN6Unpack11InitFiltersEv($5); //@line 196 "./src/cpp/unrar/unpack50.cpp"
  }
 }
 $12 = ((($5)) + 100|0); //@line 202 "./src/cpp/unrar/unpack50.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 202 "./src/cpp/unrar/unpack50.cpp"
 $14 = ((($5)) + 96|0); //@line 202 "./src/cpp/unrar/unpack50.cpp"
 $15 = HEAP32[$14>>2]|0; //@line 202 "./src/cpp/unrar/unpack50.cpp"
 $16 = ($13|0)!=($15|0); //@line 202 "./src/cpp/unrar/unpack50.cpp"
 if ($16) {
  $17 = ((($5)) + 100|0); //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $18 = HEAP32[$17>>2]|0; //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $19 = ((($5)) + 96|0); //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $20 = HEAP32[$19>>2]|0; //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $21 = (($18) - ($20))|0; //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $22 = ((($5)) + 59088|0); //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $23 = HEAP32[$22>>2]|0; //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $24 = $21 & $23; //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $25 = $3; //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $26 = ((($25)) + 4|0); //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $27 = HEAP32[$26>>2]|0; //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $28 = ($24>>>0)<=($27>>>0); //@line 202 "./src/cpp/unrar/unpack50.cpp"
  $32 = $28;
 } else {
  $32 = 0;
 }
 $29 = $3; //@line 202 "./src/cpp/unrar/unpack50.cpp"
 $30 = ((($29)) + 13|0); //@line 202 "./src/cpp/unrar/unpack50.cpp"
 $31 = $32&1; //@line 202 "./src/cpp/unrar/unpack50.cpp"
 HEAP8[$30>>0] = $31; //@line 202 "./src/cpp/unrar/unpack50.cpp"
 $33 = $3; //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $34 = ((($33)) + 4|0); //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $35 = HEAP32[$34>>2]|0; //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $36 = ((($5)) + 96|0); //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $37 = HEAP32[$36>>2]|0; //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $38 = (($35) + ($37))|0; //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $39 = ((($5)) + 59088|0); //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $40 = HEAP32[$39>>2]|0; //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $41 = $38 & $40; //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $42 = $3; //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $43 = ((($42)) + 4|0); //@line 204 "./src/cpp/unrar/unpack50.cpp"
 HEAP32[$43>>2] = $41; //@line 204 "./src/cpp/unrar/unpack50.cpp"
 $44 = ((($5)) + 52|0); //@line 205 "./src/cpp/unrar/unpack50.cpp"
 $45 = $3; //@line 205 "./src/cpp/unrar/unpack50.cpp"
 ;HEAP32[$4>>2]=HEAP32[$45>>2]|0;HEAP32[$4+4>>2]=HEAP32[$45+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$45+8>>2]|0;HEAP32[$4+12>>2]=HEAP32[$45+12>>2]|0; //@line 205 "./src/cpp/unrar/unpack50.cpp"
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[$4+8>>2]|0;HEAP32[$$byval_copy+12>>2]=HEAP32[$4+12>>2]|0; //@line 205 "./src/cpp/unrar/unpack50.cpp"
 __ZN5ArrayI12UnpackFilterE4PushES0_($44,$$byval_copy); //@line 205 "./src/cpp/unrar/unpack50.cpp"
 STACKTOP = sp;return 1; //@line 206 "./src/cpp/unrar/unpack50.cpp"
}
function __ZN5ArrayI12UnpackFilterE4SizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 86 "./src/cpp/unrar/array.hpp"
 $4 = HEAP32[$3>>2]|0; //@line 86 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($4|0); //@line 86 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayI12UnpackFilterE4PushES0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 __ZN5ArrayI12UnpackFilterE3AddEj($3,1); //@line 153 "./src/cpp/unrar/array.hpp"
 $4 = (__ZN5ArrayI12UnpackFilterE4SizeEv($3)|0); //@line 154 "./src/cpp/unrar/array.hpp"
 $5 = (($4) - 1)|0; //@line 154 "./src/cpp/unrar/array.hpp"
 $6 = (__ZNK5ArrayI12UnpackFilterEixEj($3,$5)|0); //@line 154 "./src/cpp/unrar/array.hpp"
 ;HEAP32[$6>>2]=HEAP32[$1>>2]|0;HEAP32[$6+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[$1+12>>2]|0; //@line 154 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 155 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayI12UnpackFilterE3AddEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = $3; //@line 92 "./src/cpp/unrar/array.hpp"
 $9 = ((($7)) + 4|0); //@line 92 "./src/cpp/unrar/array.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 92 "./src/cpp/unrar/array.hpp"
 $11 = (($10) + ($8))|0; //@line 92 "./src/cpp/unrar/array.hpp"
 HEAP32[$9>>2] = $11; //@line 92 "./src/cpp/unrar/array.hpp"
 $12 = ((($7)) + 4|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $13 = HEAP32[$12>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $14 = ((($7)) + 8|0); //@line 93 "./src/cpp/unrar/array.hpp"
 $15 = HEAP32[$14>>2]|0; //@line 93 "./src/cpp/unrar/array.hpp"
 $16 = ($13>>>0)>($15>>>0); //@line 93 "./src/cpp/unrar/array.hpp"
 if (!($16)) {
  STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
 }
 $17 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
 $18 = HEAP32[$17>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
 $19 = ($18|0)!=(0); //@line 95 "./src/cpp/unrar/array.hpp"
 if ($19) {
  $20 = ((($7)) + 4|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $21 = HEAP32[$20>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $22 = ((($7)) + 12|0); //@line 95 "./src/cpp/unrar/array.hpp"
  $23 = HEAP32[$22>>2]|0; //@line 95 "./src/cpp/unrar/array.hpp"
  $24 = ($21>>>0)>($23>>>0); //@line 95 "./src/cpp/unrar/array.hpp"
  if ($24) {
   $25 = ((($7)) + 12|0); //@line 97 "./src/cpp/unrar/array.hpp"
   $26 = HEAP32[$25>>2]|0; //@line 97 "./src/cpp/unrar/array.hpp"
   HEAP32[$vararg_buffer>>2] = $26; //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler13GeneralErrMsgEPKwz(756,2544,$vararg_buffer); //@line 97 "./src/cpp/unrar/array.hpp"
   __ZN12ErrorHandler11MemoryErrorEv(756); //@line 98 "./src/cpp/unrar/array.hpp"
  }
 }
 $27 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $28 = HEAP32[$27>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $29 = ((($7)) + 8|0); //@line 101 "./src/cpp/unrar/array.hpp"
 $30 = HEAP32[$29>>2]|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $31 = (($30>>>0) / 4)&-1; //@line 101 "./src/cpp/unrar/array.hpp"
 $32 = (($28) + ($31))|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $33 = (($32) + 32)|0; //@line 101 "./src/cpp/unrar/array.hpp"
 $4 = $33; //@line 101 "./src/cpp/unrar/array.hpp"
 $34 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
 $35 = HEAP32[$34>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
 $36 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
 $37 = ($35>>>0)>($36>>>0); //@line 102 "./src/cpp/unrar/array.hpp"
 if ($37) {
  $38 = ((($7)) + 4|0); //@line 102 "./src/cpp/unrar/array.hpp"
  $39 = HEAP32[$38>>2]|0; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $39;
 } else {
  $40 = $4; //@line 102 "./src/cpp/unrar/array.hpp"
  $41 = $40;
 }
 $5 = $41; //@line 102 "./src/cpp/unrar/array.hpp"
 $42 = HEAP32[$7>>2]|0; //@line 104 "./src/cpp/unrar/array.hpp"
 $43 = $5; //@line 104 "./src/cpp/unrar/array.hpp"
 $44 = $43<<4; //@line 104 "./src/cpp/unrar/array.hpp"
 $45 = (_realloc($42,$44)|0); //@line 104 "./src/cpp/unrar/array.hpp"
 $6 = $45; //@line 104 "./src/cpp/unrar/array.hpp"
 $46 = $6; //@line 105 "./src/cpp/unrar/array.hpp"
 $47 = ($46|0)==(0|0); //@line 105 "./src/cpp/unrar/array.hpp"
 if ($47) {
  __ZN12ErrorHandler11MemoryErrorEv(756); //@line 106 "./src/cpp/unrar/array.hpp"
 }
 $48 = $6; //@line 107 "./src/cpp/unrar/array.hpp"
 HEAP32[$7>>2] = $48; //@line 107 "./src/cpp/unrar/array.hpp"
 $49 = $5; //@line 108 "./src/cpp/unrar/array.hpp"
 $50 = ((($7)) + 8|0); //@line 108 "./src/cpp/unrar/array.hpp"
 HEAP32[$50>>2] = $49; //@line 108 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 110 "./src/cpp/unrar/array.hpp"
}
function __ZNK5ArrayI12UnpackFilterEixEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0; //@line 74 "./src/cpp/unrar/array.hpp"
 $6 = $3; //@line 74 "./src/cpp/unrar/array.hpp"
 $7 = (($5) + ($6<<4)|0); //@line 74 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return ($7|0); //@line 74 "./src/cpp/unrar/array.hpp"
}
function __ZN6Unpack14ReadFilterDataER8BitInput($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $7 = $3; //@line 155 "./src/cpp/unrar/unpack50.cpp"
 $8 = (__ZN8BitInput8fgetbitsEv($7)|0); //@line 155 "./src/cpp/unrar/unpack50.cpp"
 $9 = $8 >>> 14; //@line 155 "./src/cpp/unrar/unpack50.cpp"
 $10 = (($9) + 1)|0; //@line 155 "./src/cpp/unrar/unpack50.cpp"
 $4 = $10; //@line 155 "./src/cpp/unrar/unpack50.cpp"
 $11 = $3; //@line 156 "./src/cpp/unrar/unpack50.cpp"
 __ZN8BitInput7addbitsEj($11,2); //@line 156 "./src/cpp/unrar/unpack50.cpp"
 $5 = 0; //@line 158 "./src/cpp/unrar/unpack50.cpp"
 $6 = 0; //@line 159 "./src/cpp/unrar/unpack50.cpp"
 while(1) {
  $12 = $6; //@line 159 "./src/cpp/unrar/unpack50.cpp"
  $13 = $4; //@line 159 "./src/cpp/unrar/unpack50.cpp"
  $14 = ($12>>>0)<($13>>>0); //@line 159 "./src/cpp/unrar/unpack50.cpp"
  if (!($14)) {
   break;
  }
  $15 = $3; //@line 161 "./src/cpp/unrar/unpack50.cpp"
  $16 = (__ZN8BitInput8fgetbitsEv($15)|0); //@line 161 "./src/cpp/unrar/unpack50.cpp"
  $17 = $16 >>> 8; //@line 161 "./src/cpp/unrar/unpack50.cpp"
  $18 = $6; //@line 161 "./src/cpp/unrar/unpack50.cpp"
  $19 = $18<<3; //@line 161 "./src/cpp/unrar/unpack50.cpp"
  $20 = $17 << $19; //@line 161 "./src/cpp/unrar/unpack50.cpp"
  $21 = $5; //@line 161 "./src/cpp/unrar/unpack50.cpp"
  $22 = (($21) + ($20))|0; //@line 161 "./src/cpp/unrar/unpack50.cpp"
  $5 = $22; //@line 161 "./src/cpp/unrar/unpack50.cpp"
  $23 = $3; //@line 162 "./src/cpp/unrar/unpack50.cpp"
  __ZN8BitInput7addbitsEj($23,8); //@line 162 "./src/cpp/unrar/unpack50.cpp"
  $24 = $6; //@line 159 "./src/cpp/unrar/unpack50.cpp"
  $25 = (($24) + 1)|0; //@line 159 "./src/cpp/unrar/unpack50.cpp"
  $6 = $25; //@line 159 "./src/cpp/unrar/unpack50.cpp"
 }
 $26 = $5; //@line 164 "./src/cpp/unrar/unpack50.cpp"
 STACKTOP = sp;return ($26|0); //@line 164 "./src/cpp/unrar/unpack50.cpp"
}
function __ZN16FragmentedWindow8CopyDataEPhjj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4;
 $8 = 0; //@line 92 "./src/cpp/unrar/unpack50frag.cpp"
 while(1) {
  $10 = $8; //@line 92 "./src/cpp/unrar/unpack50frag.cpp"
  $11 = $7; //@line 92 "./src/cpp/unrar/unpack50frag.cpp"
  $12 = ($10>>>0)<($11>>>0); //@line 92 "./src/cpp/unrar/unpack50frag.cpp"
  if (!($12)) {
   break;
  }
  $13 = $6; //@line 93 "./src/cpp/unrar/unpack50frag.cpp"
  $14 = $8; //@line 93 "./src/cpp/unrar/unpack50frag.cpp"
  $15 = (($13) + ($14))|0; //@line 93 "./src/cpp/unrar/unpack50frag.cpp"
  $16 = (__ZN16FragmentedWindowixEj($9,$15)|0); //@line 93 "./src/cpp/unrar/unpack50frag.cpp"
  $17 = HEAP8[$16>>0]|0; //@line 93 "./src/cpp/unrar/unpack50frag.cpp"
  $18 = $5; //@line 93 "./src/cpp/unrar/unpack50frag.cpp"
  $19 = $8; //@line 93 "./src/cpp/unrar/unpack50frag.cpp"
  $20 = (($18) + ($19)|0); //@line 93 "./src/cpp/unrar/unpack50frag.cpp"
  HEAP8[$20>>0] = $17; //@line 93 "./src/cpp/unrar/unpack50frag.cpp"
  $21 = $8; //@line 92 "./src/cpp/unrar/unpack50frag.cpp"
  $22 = (($21) + 1)|0; //@line 92 "./src/cpp/unrar/unpack50frag.cpp"
  $8 = $22; //@line 92 "./src/cpp/unrar/unpack50frag.cpp"
 }
 STACKTOP = sp;return; //@line 94 "./src/cpp/unrar/unpack50frag.cpp"
}
function __ZN6Unpack11ApplyFilterEPhjP12UnpackFilter($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $27 = $5;
 $28 = $6; //@line 393 "./src/cpp/unrar/unpack50.cpp"
 $9 = $28; //@line 393 "./src/cpp/unrar/unpack50.cpp"
 $29 = $8; //@line 394 "./src/cpp/unrar/unpack50.cpp"
 $30 = HEAP8[$29>>0]|0; //@line 394 "./src/cpp/unrar/unpack50.cpp"
 $31 = $30&255; //@line 394 "./src/cpp/unrar/unpack50.cpp"
 switch ($31|0) {
 case 2: case 1:  {
  $32 = ((($27)) + 19520|0); //@line 399 "./src/cpp/unrar/unpack50.cpp"
  $33 = $32; //@line 399 "./src/cpp/unrar/unpack50.cpp"
  $34 = $33; //@line 399 "./src/cpp/unrar/unpack50.cpp"
  $35 = HEAP32[$34>>2]|0; //@line 399 "./src/cpp/unrar/unpack50.cpp"
  $36 = (($33) + 4)|0; //@line 399 "./src/cpp/unrar/unpack50.cpp"
  $37 = $36; //@line 399 "./src/cpp/unrar/unpack50.cpp"
  $38 = HEAP32[$37>>2]|0; //@line 399 "./src/cpp/unrar/unpack50.cpp"
  $10 = $35; //@line 399 "./src/cpp/unrar/unpack50.cpp"
  $11 = 16777216; //@line 401 "./src/cpp/unrar/unpack50.cpp"
  $39 = $8; //@line 402 "./src/cpp/unrar/unpack50.cpp"
  $40 = HEAP8[$39>>0]|0; //@line 402 "./src/cpp/unrar/unpack50.cpp"
  $41 = $40&255; //@line 402 "./src/cpp/unrar/unpack50.cpp"
  $42 = ($41|0)==(2); //@line 402 "./src/cpp/unrar/unpack50.cpp"
  $43 = $42 ? 233 : 232; //@line 402 "./src/cpp/unrar/unpack50.cpp"
  $44 = $43&255; //@line 402 "./src/cpp/unrar/unpack50.cpp"
  $12 = $44; //@line 402 "./src/cpp/unrar/unpack50.cpp"
  $13 = 0; //@line 403 "./src/cpp/unrar/unpack50.cpp"
  while(1) {
   $45 = $13; //@line 403 "./src/cpp/unrar/unpack50.cpp"
   $46 = $7; //@line 403 "./src/cpp/unrar/unpack50.cpp"
   $47 = (($46) - 4)|0; //@line 403 "./src/cpp/unrar/unpack50.cpp"
   $48 = ($45|0)<($47|0); //@line 403 "./src/cpp/unrar/unpack50.cpp"
   if (!($48)) {
    break;
   }
   $49 = $6; //@line 405 "./src/cpp/unrar/unpack50.cpp"
   $50 = ((($49)) + 1|0); //@line 405 "./src/cpp/unrar/unpack50.cpp"
   $6 = $50; //@line 405 "./src/cpp/unrar/unpack50.cpp"
   $51 = HEAP8[$49>>0]|0; //@line 405 "./src/cpp/unrar/unpack50.cpp"
   $14 = $51; //@line 405 "./src/cpp/unrar/unpack50.cpp"
   $52 = $13; //@line 406 "./src/cpp/unrar/unpack50.cpp"
   $53 = (($52) + 1)|0; //@line 406 "./src/cpp/unrar/unpack50.cpp"
   $13 = $53; //@line 406 "./src/cpp/unrar/unpack50.cpp"
   $54 = $14; //@line 407 "./src/cpp/unrar/unpack50.cpp"
   $55 = $54&255; //@line 407 "./src/cpp/unrar/unpack50.cpp"
   $56 = ($55|0)==(232); //@line 407 "./src/cpp/unrar/unpack50.cpp"
   if (!($56)) {
    $57 = $14; //@line 407 "./src/cpp/unrar/unpack50.cpp"
    $58 = $57&255; //@line 407 "./src/cpp/unrar/unpack50.cpp"
    $59 = $12; //@line 407 "./src/cpp/unrar/unpack50.cpp"
    $60 = $59&255; //@line 407 "./src/cpp/unrar/unpack50.cpp"
    $61 = ($58|0)==($60|0); //@line 407 "./src/cpp/unrar/unpack50.cpp"
    if (!($61)) {
     continue;
    }
   }
   $62 = $13; //@line 409 "./src/cpp/unrar/unpack50.cpp"
   $63 = $10; //@line 409 "./src/cpp/unrar/unpack50.cpp"
   $64 = (($62) + ($63))|0; //@line 409 "./src/cpp/unrar/unpack50.cpp"
   $65 = (($64>>>0) % 16777216)&-1; //@line 409 "./src/cpp/unrar/unpack50.cpp"
   $15 = $65; //@line 409 "./src/cpp/unrar/unpack50.cpp"
   $66 = $6; //@line 410 "./src/cpp/unrar/unpack50.cpp"
   $67 = (__Z7RawGet4PKv($66)|0); //@line 410 "./src/cpp/unrar/unpack50.cpp"
   $16 = $67; //@line 410 "./src/cpp/unrar/unpack50.cpp"
   $68 = $16; //@line 414 "./src/cpp/unrar/unpack50.cpp"
   $69 = $68 & -2147483648; //@line 414 "./src/cpp/unrar/unpack50.cpp"
   $70 = ($69|0)!=(0); //@line 414 "./src/cpp/unrar/unpack50.cpp"
   $71 = $16;
   if ($70) {
    $72 = $15; //@line 416 "./src/cpp/unrar/unpack50.cpp"
    $73 = (($71) + ($72))|0; //@line 416 "./src/cpp/unrar/unpack50.cpp"
    $74 = $73 & -2147483648; //@line 416 "./src/cpp/unrar/unpack50.cpp"
    $75 = ($74|0)==(0); //@line 416 "./src/cpp/unrar/unpack50.cpp"
    if ($75) {
     $76 = $16; //@line 417 "./src/cpp/unrar/unpack50.cpp"
     $77 = (($76) + 16777216)|0; //@line 417 "./src/cpp/unrar/unpack50.cpp"
     $78 = $6; //@line 417 "./src/cpp/unrar/unpack50.cpp"
     __Z7RawPut4jPv($77,$78); //@line 417 "./src/cpp/unrar/unpack50.cpp"
    }
   } else {
    $79 = (($71) - 16777216)|0; //@line 420 "./src/cpp/unrar/unpack50.cpp"
    $80 = $79 & -2147483648; //@line 420 "./src/cpp/unrar/unpack50.cpp"
    $81 = ($80|0)!=(0); //@line 420 "./src/cpp/unrar/unpack50.cpp"
    if ($81) {
     $82 = $16; //@line 421 "./src/cpp/unrar/unpack50.cpp"
     $83 = $15; //@line 421 "./src/cpp/unrar/unpack50.cpp"
     $84 = (($82) - ($83))|0; //@line 421 "./src/cpp/unrar/unpack50.cpp"
     $85 = $6; //@line 421 "./src/cpp/unrar/unpack50.cpp"
     __Z7RawPut4jPv($84,$85); //@line 421 "./src/cpp/unrar/unpack50.cpp"
    }
   }
   $86 = $6; //@line 423 "./src/cpp/unrar/unpack50.cpp"
   $87 = ((($86)) + 4|0); //@line 423 "./src/cpp/unrar/unpack50.cpp"
   $6 = $87; //@line 423 "./src/cpp/unrar/unpack50.cpp"
   $88 = $13; //@line 424 "./src/cpp/unrar/unpack50.cpp"
   $89 = (($88) + 4)|0; //@line 424 "./src/cpp/unrar/unpack50.cpp"
   $13 = $89; //@line 424 "./src/cpp/unrar/unpack50.cpp"
  }
  $90 = $9; //@line 428 "./src/cpp/unrar/unpack50.cpp"
  $4 = $90; //@line 428 "./src/cpp/unrar/unpack50.cpp"
  $181 = $4; //@line 466 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return ($181|0); //@line 466 "./src/cpp/unrar/unpack50.cpp"
  break;
 }
 case 3:  {
  $91 = ((($27)) + 19520|0); //@line 431 "./src/cpp/unrar/unpack50.cpp"
  $92 = $91; //@line 431 "./src/cpp/unrar/unpack50.cpp"
  $93 = $92; //@line 431 "./src/cpp/unrar/unpack50.cpp"
  $94 = HEAP32[$93>>2]|0; //@line 431 "./src/cpp/unrar/unpack50.cpp"
  $95 = (($92) + 4)|0; //@line 431 "./src/cpp/unrar/unpack50.cpp"
  $96 = $95; //@line 431 "./src/cpp/unrar/unpack50.cpp"
  $97 = HEAP32[$96>>2]|0; //@line 431 "./src/cpp/unrar/unpack50.cpp"
  $17 = $94; //@line 431 "./src/cpp/unrar/unpack50.cpp"
  $18 = 0; //@line 432 "./src/cpp/unrar/unpack50.cpp"
  while(1) {
   $98 = $18; //@line 432 "./src/cpp/unrar/unpack50.cpp"
   $99 = $7; //@line 432 "./src/cpp/unrar/unpack50.cpp"
   $100 = (($99) - 3)|0; //@line 432 "./src/cpp/unrar/unpack50.cpp"
   $101 = ($98|0)<($100|0); //@line 432 "./src/cpp/unrar/unpack50.cpp"
   if (!($101)) {
    break;
   }
   $102 = $6; //@line 434 "./src/cpp/unrar/unpack50.cpp"
   $103 = $18; //@line 434 "./src/cpp/unrar/unpack50.cpp"
   $104 = (($102) + ($103)|0); //@line 434 "./src/cpp/unrar/unpack50.cpp"
   $19 = $104; //@line 434 "./src/cpp/unrar/unpack50.cpp"
   $105 = $19; //@line 435 "./src/cpp/unrar/unpack50.cpp"
   $106 = ((($105)) + 3|0); //@line 435 "./src/cpp/unrar/unpack50.cpp"
   $107 = HEAP8[$106>>0]|0; //@line 435 "./src/cpp/unrar/unpack50.cpp"
   $108 = $107&255; //@line 435 "./src/cpp/unrar/unpack50.cpp"
   $109 = ($108|0)==(235); //@line 435 "./src/cpp/unrar/unpack50.cpp"
   if ($109) {
    $110 = $19; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $111 = HEAP8[$110>>0]|0; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $112 = $111&255; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $113 = $19; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $114 = ((($113)) + 1|0); //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $115 = HEAP8[$114>>0]|0; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $116 = $115&255; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $117 = $116<<8; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $118 = (($112) + ($117))|0; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $119 = $19; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $120 = ((($119)) + 2|0); //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $121 = HEAP8[$120>>0]|0; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $122 = $121&255; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $123 = $122<<16; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $124 = (($118) + ($123))|0; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $20 = $124; //@line 437 "./src/cpp/unrar/unpack50.cpp"
    $125 = $17; //@line 438 "./src/cpp/unrar/unpack50.cpp"
    $126 = $18; //@line 438 "./src/cpp/unrar/unpack50.cpp"
    $127 = (($125) + ($126))|0; //@line 438 "./src/cpp/unrar/unpack50.cpp"
    $128 = (($127>>>0) / 4)&-1; //@line 438 "./src/cpp/unrar/unpack50.cpp"
    $129 = $20; //@line 438 "./src/cpp/unrar/unpack50.cpp"
    $130 = (($129) - ($128))|0; //@line 438 "./src/cpp/unrar/unpack50.cpp"
    $20 = $130; //@line 438 "./src/cpp/unrar/unpack50.cpp"
    $131 = $20; //@line 439 "./src/cpp/unrar/unpack50.cpp"
    $132 = $131&255; //@line 439 "./src/cpp/unrar/unpack50.cpp"
    $133 = $19; //@line 439 "./src/cpp/unrar/unpack50.cpp"
    HEAP8[$133>>0] = $132; //@line 439 "./src/cpp/unrar/unpack50.cpp"
    $134 = $20; //@line 440 "./src/cpp/unrar/unpack50.cpp"
    $135 = $134 >>> 8; //@line 440 "./src/cpp/unrar/unpack50.cpp"
    $136 = $135&255; //@line 440 "./src/cpp/unrar/unpack50.cpp"
    $137 = $19; //@line 440 "./src/cpp/unrar/unpack50.cpp"
    $138 = ((($137)) + 1|0); //@line 440 "./src/cpp/unrar/unpack50.cpp"
    HEAP8[$138>>0] = $136; //@line 440 "./src/cpp/unrar/unpack50.cpp"
    $139 = $20; //@line 441 "./src/cpp/unrar/unpack50.cpp"
    $140 = $139 >>> 16; //@line 441 "./src/cpp/unrar/unpack50.cpp"
    $141 = $140&255; //@line 441 "./src/cpp/unrar/unpack50.cpp"
    $142 = $19; //@line 441 "./src/cpp/unrar/unpack50.cpp"
    $143 = ((($142)) + 2|0); //@line 441 "./src/cpp/unrar/unpack50.cpp"
    HEAP8[$143>>0] = $141; //@line 441 "./src/cpp/unrar/unpack50.cpp"
   }
   $144 = $18; //@line 432 "./src/cpp/unrar/unpack50.cpp"
   $145 = (($144) + 4)|0; //@line 432 "./src/cpp/unrar/unpack50.cpp"
   $18 = $145; //@line 432 "./src/cpp/unrar/unpack50.cpp"
  }
  $146 = $9; //@line 445 "./src/cpp/unrar/unpack50.cpp"
  $4 = $146; //@line 445 "./src/cpp/unrar/unpack50.cpp"
  $181 = $4; //@line 466 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return ($181|0); //@line 466 "./src/cpp/unrar/unpack50.cpp"
  break;
 }
 case 0:  {
  $147 = $8; //@line 448 "./src/cpp/unrar/unpack50.cpp"
  $148 = ((($147)) + 12|0); //@line 448 "./src/cpp/unrar/unpack50.cpp"
  $149 = HEAP8[$148>>0]|0; //@line 448 "./src/cpp/unrar/unpack50.cpp"
  $150 = $149&255; //@line 448 "./src/cpp/unrar/unpack50.cpp"
  $21 = $150; //@line 448 "./src/cpp/unrar/unpack50.cpp"
  $22 = 0; //@line 448 "./src/cpp/unrar/unpack50.cpp"
  $151 = ((($27)) + 36|0); //@line 450 "./src/cpp/unrar/unpack50.cpp"
  $152 = $7; //@line 450 "./src/cpp/unrar/unpack50.cpp"
  __ZN5ArrayIhE5AllocEj($151,$152); //@line 450 "./src/cpp/unrar/unpack50.cpp"
  $153 = ((($27)) + 36|0); //@line 451 "./src/cpp/unrar/unpack50.cpp"
  $154 = (__ZNK5ArrayIhEixEj($153,0)|0); //@line 451 "./src/cpp/unrar/unpack50.cpp"
  $23 = $154; //@line 451 "./src/cpp/unrar/unpack50.cpp"
  $24 = 0; //@line 455 "./src/cpp/unrar/unpack50.cpp"
  while(1) {
   $155 = $24; //@line 455 "./src/cpp/unrar/unpack50.cpp"
   $156 = $21; //@line 455 "./src/cpp/unrar/unpack50.cpp"
   $157 = ($155>>>0)<($156>>>0); //@line 455 "./src/cpp/unrar/unpack50.cpp"
   if (!($157)) {
    break;
   }
   $25 = 0; //@line 457 "./src/cpp/unrar/unpack50.cpp"
   $158 = $24; //@line 458 "./src/cpp/unrar/unpack50.cpp"
   $26 = $158; //@line 458 "./src/cpp/unrar/unpack50.cpp"
   while(1) {
    $159 = $26; //@line 458 "./src/cpp/unrar/unpack50.cpp"
    $160 = $7; //@line 458 "./src/cpp/unrar/unpack50.cpp"
    $161 = ($159>>>0)<($160>>>0); //@line 458 "./src/cpp/unrar/unpack50.cpp"
    if (!($161)) {
     break;
    }
    $162 = $6; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $163 = $22; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $164 = (($163) + 1)|0; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $22 = $164; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $165 = (($162) + ($163)|0); //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $166 = HEAP8[$165>>0]|0; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $167 = $166&255; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $168 = $25; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $169 = $168&255; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $170 = (($169) - ($167))|0; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $171 = $170&255; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $25 = $171; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $172 = $23; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $173 = $26; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $174 = (($172) + ($173)|0); //@line 459 "./src/cpp/unrar/unpack50.cpp"
    HEAP8[$174>>0] = $171; //@line 459 "./src/cpp/unrar/unpack50.cpp"
    $175 = $21; //@line 458 "./src/cpp/unrar/unpack50.cpp"
    $176 = $26; //@line 458 "./src/cpp/unrar/unpack50.cpp"
    $177 = (($176) + ($175))|0; //@line 458 "./src/cpp/unrar/unpack50.cpp"
    $26 = $177; //@line 458 "./src/cpp/unrar/unpack50.cpp"
   }
   $178 = $24; //@line 455 "./src/cpp/unrar/unpack50.cpp"
   $179 = (($178) + 1)|0; //@line 455 "./src/cpp/unrar/unpack50.cpp"
   $24 = $179; //@line 455 "./src/cpp/unrar/unpack50.cpp"
  }
  $180 = $23; //@line 461 "./src/cpp/unrar/unpack50.cpp"
  $4 = $180; //@line 461 "./src/cpp/unrar/unpack50.cpp"
  $181 = $4; //@line 466 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return ($181|0); //@line 466 "./src/cpp/unrar/unpack50.cpp"
  break;
 }
 default: {
  $4 = 0; //@line 465 "./src/cpp/unrar/unpack50.cpp"
  $181 = $4; //@line 466 "./src/cpp/unrar/unpack50.cpp"
  STACKTOP = sp;return ($181|0); //@line 466 "./src/cpp/unrar/unpack50.cpp"
 }
 }
 return (0)|0;
}
function __ZN5ArrayI12UnpackFilterE5AllocEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 115 "./src/cpp/unrar/array.hpp"
 $6 = ((($4)) + 8|0); //@line 115 "./src/cpp/unrar/array.hpp"
 $7 = HEAP32[$6>>2]|0; //@line 115 "./src/cpp/unrar/array.hpp"
 $8 = ($5>>>0)>($7>>>0); //@line 115 "./src/cpp/unrar/array.hpp"
 $9 = $3;
 $10 = ((($4)) + 4|0);
 if ($8) {
  $11 = HEAP32[$10>>2]|0; //@line 116 "./src/cpp/unrar/array.hpp"
  $12 = (($9) - ($11))|0; //@line 116 "./src/cpp/unrar/array.hpp"
  __ZN5ArrayI12UnpackFilterE3AddEj($4,$12); //@line 116 "./src/cpp/unrar/array.hpp"
  STACKTOP = sp;return; //@line 119 "./src/cpp/unrar/array.hpp"
 } else {
  HEAP32[$10>>2] = $9; //@line 118 "./src/cpp/unrar/array.hpp"
  STACKTOP = sp;return; //@line 119 "./src/cpp/unrar/array.hpp"
 }
}
function __ZN16FragmentedWindowC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 dest=$2; stop=dest+128|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 3 "./src/cpp/unrar/unpack50frag.cpp"
 $3 = ((($2)) + 128|0); //@line 4 "./src/cpp/unrar/unpack50frag.cpp"
 dest=$3; stop=dest+128|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 4 "./src/cpp/unrar/unpack50frag.cpp"
 STACKTOP = sp;return; //@line 5 "./src/cpp/unrar/unpack50frag.cpp"
}
function __ZN16FragmentedWindowD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __THREW__ = 0;
 invoke_vi(228,($2|0)); //@line 10 "./src/cpp/unrar/unpack50frag.cpp"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $5 = ___cxa_find_matching_catch_3(0|0)|0;
  $6 = tempRet0;
  ___clang_call_terminate($5); //@line 10 "./src/cpp/unrar/unpack50frag.cpp"
  // unreachable; //@line 10 "./src/cpp/unrar/unpack50frag.cpp"
 } else {
  STACKTOP = sp;return; //@line 11 "./src/cpp/unrar/unpack50frag.cpp"
 }
}
function __ZN16FragmentedWindow5ResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $2 = 0; //@line 16 "./src/cpp/unrar/unpack50frag.cpp"
 while(1) {
  $4 = $2; //@line 16 "./src/cpp/unrar/unpack50frag.cpp"
  $5 = ($4>>>0)<(32); //@line 16 "./src/cpp/unrar/unpack50frag.cpp"
  if (!($5)) {
   break;
  }
  $6 = $2; //@line 17 "./src/cpp/unrar/unpack50frag.cpp"
  $7 = (($3) + ($6<<2)|0); //@line 17 "./src/cpp/unrar/unpack50frag.cpp"
  $8 = HEAP32[$7>>2]|0; //@line 17 "./src/cpp/unrar/unpack50frag.cpp"
  $9 = ($8|0)!=(0|0); //@line 17 "./src/cpp/unrar/unpack50frag.cpp"
  if ($9) {
   $10 = $2; //@line 19 "./src/cpp/unrar/unpack50frag.cpp"
   $11 = (($3) + ($10<<2)|0); //@line 19 "./src/cpp/unrar/unpack50frag.cpp"
   $12 = HEAP32[$11>>2]|0; //@line 19 "./src/cpp/unrar/unpack50frag.cpp"
   _free($12); //@line 19 "./src/cpp/unrar/unpack50frag.cpp"
   $13 = $2; //@line 20 "./src/cpp/unrar/unpack50frag.cpp"
   $14 = (($3) + ($13<<2)|0); //@line 20 "./src/cpp/unrar/unpack50frag.cpp"
   HEAP32[$14>>2] = 0; //@line 20 "./src/cpp/unrar/unpack50frag.cpp"
  }
  $15 = $2; //@line 16 "./src/cpp/unrar/unpack50frag.cpp"
  $16 = (($15) + 1)|0; //@line 16 "./src/cpp/unrar/unpack50frag.cpp"
  $2 = $16; //@line 16 "./src/cpp/unrar/unpack50frag.cpp"
 }
 STACKTOP = sp;return; //@line 22 "./src/cpp/unrar/unpack50frag.cpp"
}
function __ZN16FragmentedWindow4InitEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $9 = $2;
 __ZN16FragmentedWindow5ResetEv($9); //@line 27 "./src/cpp/unrar/unpack50frag.cpp"
 $4 = 0; //@line 29 "./src/cpp/unrar/unpack50frag.cpp"
 $5 = 0; //@line 30 "./src/cpp/unrar/unpack50frag.cpp"
 while(1) {
  $10 = $5; //@line 31 "./src/cpp/unrar/unpack50frag.cpp"
  $11 = $3; //@line 31 "./src/cpp/unrar/unpack50frag.cpp"
  $12 = ($10>>>0)<($11>>>0); //@line 31 "./src/cpp/unrar/unpack50frag.cpp"
  $13 = $4; //@line 31 "./src/cpp/unrar/unpack50frag.cpp"
  $14 = ($13>>>0)<(32); //@line 31 "./src/cpp/unrar/unpack50frag.cpp"
  $15 = $12 ? $14 : 0; //@line 31 "./src/cpp/unrar/unpack50frag.cpp"
  if (!($15)) {
   break;
  }
  $16 = $3; //@line 33 "./src/cpp/unrar/unpack50frag.cpp"
  $17 = $5; //@line 33 "./src/cpp/unrar/unpack50frag.cpp"
  $18 = (($16) - ($17))|0; //@line 33 "./src/cpp/unrar/unpack50frag.cpp"
  $6 = $18; //@line 33 "./src/cpp/unrar/unpack50frag.cpp"
  $19 = $6; //@line 39 "./src/cpp/unrar/unpack50frag.cpp"
  $20 = $4; //@line 39 "./src/cpp/unrar/unpack50frag.cpp"
  $21 = (32 - ($20))|0; //@line 39 "./src/cpp/unrar/unpack50frag.cpp"
  $22 = (($19>>>0) / ($21>>>0))&-1; //@line 39 "./src/cpp/unrar/unpack50frag.cpp"
  $23 = ($22>>>0)>(4194304); //@line 39 "./src/cpp/unrar/unpack50frag.cpp"
  if ($23) {
   $24 = $6; //@line 39 "./src/cpp/unrar/unpack50frag.cpp"
   $25 = $4; //@line 39 "./src/cpp/unrar/unpack50frag.cpp"
   $26 = (32 - ($25))|0; //@line 39 "./src/cpp/unrar/unpack50frag.cpp"
   $27 = (($24>>>0) / ($26>>>0))&-1; //@line 39 "./src/cpp/unrar/unpack50frag.cpp"
   $28 = $27;
  } else {
   $28 = 4194304;
  }
  $7 = $28; //@line 39 "./src/cpp/unrar/unpack50frag.cpp"
  $8 = 0; //@line 41 "./src/cpp/unrar/unpack50frag.cpp"
  while(1) {
   $29 = $6; //@line 42 "./src/cpp/unrar/unpack50frag.cpp"
   $30 = $7; //@line 42 "./src/cpp/unrar/unpack50frag.cpp"
   $31 = ($29>>>0)>=($30>>>0); //@line 42 "./src/cpp/unrar/unpack50frag.cpp"
   if (!($31)) {
    break;
   }
   $32 = $6; //@line 44 "./src/cpp/unrar/unpack50frag.cpp"
   $33 = (_malloc($32)|0); //@line 44 "./src/cpp/unrar/unpack50frag.cpp"
   $8 = $33; //@line 44 "./src/cpp/unrar/unpack50frag.cpp"
   $34 = $8; //@line 45 "./src/cpp/unrar/unpack50frag.cpp"
   $35 = ($34|0)!=(0|0); //@line 45 "./src/cpp/unrar/unpack50frag.cpp"
   if ($35) {
    break;
   }
   $36 = $6; //@line 47 "./src/cpp/unrar/unpack50frag.cpp"
   $37 = (($36>>>0) / 32)&-1; //@line 47 "./src/cpp/unrar/unpack50frag.cpp"
   $38 = $6; //@line 47 "./src/cpp/unrar/unpack50frag.cpp"
   $39 = (($38) - ($37))|0; //@line 47 "./src/cpp/unrar/unpack50frag.cpp"
   $6 = $39; //@line 47 "./src/cpp/unrar/unpack50frag.cpp"
  }
  $40 = $8; //@line 49 "./src/cpp/unrar/unpack50frag.cpp"
  $41 = ($40|0)==(0|0); //@line 49 "./src/cpp/unrar/unpack50frag.cpp"
  if ($41) {
   label = 10;
   break;
  }
  $43 = $8; //@line 54 "./src/cpp/unrar/unpack50frag.cpp"
  $44 = $6; //@line 54 "./src/cpp/unrar/unpack50frag.cpp"
  _memset(($43|0),0,($44|0))|0; //@line 54 "./src/cpp/unrar/unpack50frag.cpp"
  $45 = $8; //@line 56 "./src/cpp/unrar/unpack50frag.cpp"
  $46 = $4; //@line 56 "./src/cpp/unrar/unpack50frag.cpp"
  $47 = (($9) + ($46<<2)|0); //@line 56 "./src/cpp/unrar/unpack50frag.cpp"
  HEAP32[$47>>2] = $45; //@line 56 "./src/cpp/unrar/unpack50frag.cpp"
  $48 = $6; //@line 57 "./src/cpp/unrar/unpack50frag.cpp"
  $49 = $5; //@line 57 "./src/cpp/unrar/unpack50frag.cpp"
  $50 = (($49) + ($48))|0; //@line 57 "./src/cpp/unrar/unpack50frag.cpp"
  $5 = $50; //@line 57 "./src/cpp/unrar/unpack50frag.cpp"
  $51 = $5; //@line 58 "./src/cpp/unrar/unpack50frag.cpp"
  $52 = ((($9)) + 128|0); //@line 58 "./src/cpp/unrar/unpack50frag.cpp"
  $53 = $4; //@line 58 "./src/cpp/unrar/unpack50frag.cpp"
  $54 = (($52) + ($53<<2)|0); //@line 58 "./src/cpp/unrar/unpack50frag.cpp"
  HEAP32[$54>>2] = $51; //@line 58 "./src/cpp/unrar/unpack50frag.cpp"
  $55 = $4; //@line 59 "./src/cpp/unrar/unpack50frag.cpp"
  $56 = (($55) + 1)|0; //@line 59 "./src/cpp/unrar/unpack50frag.cpp"
  $4 = $56; //@line 59 "./src/cpp/unrar/unpack50frag.cpp"
 }
 if ((label|0) == 10) {
  $42 = (___cxa_allocate_exception(4)|0); //@line 50 "./src/cpp/unrar/unpack50frag.cpp"
  __ZNSt9bad_allocC2Ev($42); //@line 50 "./src/cpp/unrar/unpack50frag.cpp"
  ___cxa_throw(($42|0),(352|0),(32|0)); //@line 50 "./src/cpp/unrar/unpack50frag.cpp"
  // unreachable; //@line 50 "./src/cpp/unrar/unpack50frag.cpp"
 }
 $57 = $5; //@line 61 "./src/cpp/unrar/unpack50frag.cpp"
 $58 = $3; //@line 61 "./src/cpp/unrar/unpack50frag.cpp"
 $59 = ($57>>>0)<($58>>>0); //@line 61 "./src/cpp/unrar/unpack50frag.cpp"
 if ($59) {
  $60 = (___cxa_allocate_exception(4)|0); //@line 62 "./src/cpp/unrar/unpack50frag.cpp"
  __ZNSt9bad_allocC2Ev($60); //@line 62 "./src/cpp/unrar/unpack50frag.cpp"
  ___cxa_throw(($60|0),(352|0),(32|0)); //@line 62 "./src/cpp/unrar/unpack50frag.cpp"
  // unreachable; //@line 62 "./src/cpp/unrar/unpack50frag.cpp"
 } else {
  STACKTOP = sp;return; //@line 63 "./src/cpp/unrar/unpack50frag.cpp"
 }
}
function __ZN6UnpackC2EP11ComprDataIO($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = ((($6)) + 4|0); //@line 19 "./src/cpp/unrar/unpack.cpp"
 __ZN8BitInputC2Eb($7,1); //@line 19 "./src/cpp/unrar/unpack.cpp"
 $8 = ((($6)) + 20|0); //@line 18 "./src/cpp/unrar/unpack.cpp"
 __THREW__ = 0;
 invoke_vi(86,($8|0)); //@line 18 "./src/cpp/unrar/unpack.cpp"
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $52 = ___cxa_find_matching_catch_2()|0;
  $53 = tempRet0;
  $4 = $52; //@line 45 "./src/cpp/unrar/unpack.cpp"
  $5 = $53; //@line 45 "./src/cpp/unrar/unpack.cpp"
  __ZN8BitInputD2Ev($7); //@line 45 "./src/cpp/unrar/unpack.cpp"
  $74 = $4; //@line 45 "./src/cpp/unrar/unpack.cpp"
  $75 = $5; //@line 45 "./src/cpp/unrar/unpack.cpp"
  ___resumeException($74|0);
  // unreachable;
 }
 $11 = ((($6)) + 36|0); //@line 18 "./src/cpp/unrar/unpack.cpp"
 __THREW__ = 0;
 invoke_vi(86,($11|0)); //@line 18 "./src/cpp/unrar/unpack.cpp"
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  $54 = ___cxa_find_matching_catch_2()|0;
  $55 = tempRet0;
  $4 = $54; //@line 45 "./src/cpp/unrar/unpack.cpp"
  $5 = $55; //@line 45 "./src/cpp/unrar/unpack.cpp"
 } else {
  $14 = ((($6)) + 52|0); //@line 18 "./src/cpp/unrar/unpack.cpp"
  __THREW__ = 0;
  invoke_vi(229,($14|0)); //@line 18 "./src/cpp/unrar/unpack.cpp"
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   $56 = ___cxa_find_matching_catch_2()|0;
   $57 = tempRet0;
   $4 = $56; //@line 45 "./src/cpp/unrar/unpack.cpp"
   $5 = $57; //@line 45 "./src/cpp/unrar/unpack.cpp"
  } else {
   $17 = ((($6)) + 19240|0); //@line 18 "./src/cpp/unrar/unpack.cpp"
   __THREW__ = 0;
   invoke_vi(230,($17|0)); //@line 18 "./src/cpp/unrar/unpack.cpp"
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    $58 = ___cxa_find_matching_catch_2()|0;
    $59 = tempRet0;
    $4 = $58; //@line 45 "./src/cpp/unrar/unpack.cpp"
    $5 = $59; //@line 45 "./src/cpp/unrar/unpack.cpp"
   } else {
    $20 = ((($6)) + 39104|0); //@line 18 "./src/cpp/unrar/unpack.cpp"
    __THREW__ = 0;
    invoke_vi(231,($20|0)); //@line 18 "./src/cpp/unrar/unpack.cpp"
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     $60 = ___cxa_find_matching_catch_2()|0;
     $61 = tempRet0;
     $4 = $60; //@line 45 "./src/cpp/unrar/unpack.cpp"
     $5 = $61; //@line 45 "./src/cpp/unrar/unpack.cpp"
    } else {
     $23 = ((($6)) + 58960|0); //@line 18 "./src/cpp/unrar/unpack.cpp"
     __THREW__ = 0;
     invoke_vi(232,($23|0)); //@line 18 "./src/cpp/unrar/unpack.cpp"
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      $62 = ___cxa_find_matching_catch_2()|0;
      $63 = tempRet0;
      $4 = $62; //@line 45 "./src/cpp/unrar/unpack.cpp"
      $5 = $63; //@line 45 "./src/cpp/unrar/unpack.cpp"
     } else {
      $26 = ((($6)) + 59016|0); //@line 19 "./src/cpp/unrar/unpack.cpp"
      __THREW__ = 0;
      invoke_vii(233,($26|0),1); //@line 19 "./src/cpp/unrar/unpack.cpp"
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if ($28) {
       $64 = ___cxa_find_matching_catch_2()|0;
       $65 = tempRet0;
       $4 = $64; //@line 45 "./src/cpp/unrar/unpack.cpp"
       $5 = $65; //@line 45 "./src/cpp/unrar/unpack.cpp"
      } else {
       $29 = ((($6)) + 59032|0); //@line 18 "./src/cpp/unrar/unpack.cpp"
       __THREW__ = 0;
       invoke_vi(234,($29|0)); //@line 18 "./src/cpp/unrar/unpack.cpp"
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if ($31) {
        $66 = ___cxa_find_matching_catch_2()|0;
        $67 = tempRet0;
        $4 = $66; //@line 45 "./src/cpp/unrar/unpack.cpp"
        $5 = $67; //@line 45 "./src/cpp/unrar/unpack.cpp"
       } else {
        $32 = ((($6)) + 59048|0); //@line 18 "./src/cpp/unrar/unpack.cpp"
        __THREW__ = 0;
        invoke_vi(234,($32|0)); //@line 18 "./src/cpp/unrar/unpack.cpp"
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if ($34) {
         $68 = ___cxa_find_matching_catch_2()|0;
         $69 = tempRet0;
         $4 = $68; //@line 45 "./src/cpp/unrar/unpack.cpp"
         $5 = $69; //@line 45 "./src/cpp/unrar/unpack.cpp"
        } else {
         $35 = ((($6)) + 59064|0); //@line 18 "./src/cpp/unrar/unpack.cpp"
         __THREW__ = 0;
         invoke_vi(235,($35|0)); //@line 18 "./src/cpp/unrar/unpack.cpp"
         $36 = __THREW__; __THREW__ = 0;
         $37 = $36&1;
         if ($37) {
          $70 = ___cxa_find_matching_catch_2()|0;
          $71 = tempRet0;
          $4 = $70; //@line 45 "./src/cpp/unrar/unpack.cpp"
          $5 = $71; //@line 45 "./src/cpp/unrar/unpack.cpp"
         } else {
          $38 = $3; //@line 21 "./src/cpp/unrar/unpack.cpp"
          HEAP32[$6>>2] = $38; //@line 21 "./src/cpp/unrar/unpack.cpp"
          $39 = ((($6)) + 19236|0); //@line 22 "./src/cpp/unrar/unpack.cpp"
          HEAP32[$39>>2] = 0; //@line 22 "./src/cpp/unrar/unpack.cpp"
          $40 = ((($6)) + 19496|0); //@line 23 "./src/cpp/unrar/unpack.cpp"
          HEAP8[$40>>0] = 0; //@line 23 "./src/cpp/unrar/unpack.cpp"
          $41 = ((($6)) + 19512|0); //@line 24 "./src/cpp/unrar/unpack.cpp"
          HEAP8[$41>>0] = 0; //@line 24 "./src/cpp/unrar/unpack.cpp"
          $42 = ((($6)) + 19513|0); //@line 25 "./src/cpp/unrar/unpack.cpp"
          HEAP8[$42>>0] = 0; //@line 25 "./src/cpp/unrar/unpack.cpp"
          $43 = ((($6)) + 19514|0); //@line 26 "./src/cpp/unrar/unpack.cpp"
          HEAP8[$43>>0] = 0; //@line 26 "./src/cpp/unrar/unpack.cpp"
          $44 = ((($6)) + 59084|0); //@line 33 "./src/cpp/unrar/unpack.cpp"
          HEAP32[$44>>2] = 0; //@line 33 "./src/cpp/unrar/unpack.cpp"
          $45 = ((($6)) + 59088|0); //@line 34 "./src/cpp/unrar/unpack.cpp"
          HEAP32[$45>>2] = 0; //@line 34 "./src/cpp/unrar/unpack.cpp"
          __THREW__ = 0;
          invoke_vii(236,($6|0),0); //@line 39 "./src/cpp/unrar/unpack.cpp"
          $46 = __THREW__; __THREW__ = 0;
          $47 = $46&1;
          do {
           if (!($47)) {
            __THREW__ = 0;
            invoke_vii(237,($6|0),0); //@line 42 "./src/cpp/unrar/unpack.cpp"
            $48 = __THREW__; __THREW__ = 0;
            $49 = $48&1;
            if ($49) {
             break;
            }
            __THREW__ = 0;
            invoke_vi(238,($6|0)); //@line 43 "./src/cpp/unrar/unpack.cpp"
            $50 = __THREW__; __THREW__ = 0;
            $51 = $50&1;
            if ($51) {
             break;
            }
            STACKTOP = sp;return; //@line 45 "./src/cpp/unrar/unpack.cpp"
           }
          } while(0);
          $72 = ___cxa_find_matching_catch_2()|0;
          $73 = tempRet0;
          $4 = $72; //@line 45 "./src/cpp/unrar/unpack.cpp"
          $5 = $73; //@line 45 "./src/cpp/unrar/unpack.cpp"
          __ZN5ArrayIiED2Ev($35); //@line 45 "./src/cpp/unrar/unpack.cpp"
         }
         __ZN5ArrayIP14UnpackFilter30ED2Ev($32); //@line 45 "./src/cpp/unrar/unpack.cpp"
        }
        __ZN5ArrayIP14UnpackFilter30ED2Ev($29); //@line 45 "./src/cpp/unrar/unpack.cpp"
       }
       __ZN8BitInputD2Ev($26); //@line 45 "./src/cpp/unrar/unpack.cpp"
      }
      __ZN5RarVMD2Ev($23); //@line 45 "./src/cpp/unrar/unpack.cpp"
     }
     __ZN8ModelPPMD2Ev($20); //@line 45 "./src/cpp/unrar/unpack.cpp"
    }
    __ZN16FragmentedWindowD2Ev($17); //@line 45 "./src/cpp/unrar/unpack.cpp"
   }
   __ZN5ArrayI12UnpackFilterED2Ev($14); //@line 45 "./src/cpp/unrar/unpack.cpp"
  }
  __ZN5ArrayIhED2Ev($11); //@line 45 "./src/cpp/unrar/unpack.cpp"
 }
 __ZN5ArrayIhED2Ev($8); //@line 45 "./src/cpp/unrar/unpack.cpp"
 __ZN8BitInputD2Ev($7); //@line 45 "./src/cpp/unrar/unpack.cpp"
 $74 = $4; //@line 45 "./src/cpp/unrar/unpack.cpp"
 $75 = $5; //@line 45 "./src/cpp/unrar/unpack.cpp"
 ___resumeException($74|0);
 // unreachable;
}
function __ZN5ArrayI12UnpackFilterEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5ArrayI12UnpackFilterE9CleanDataEv($2); //@line 44 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 45 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIP14UnpackFilter30EC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5ArrayIP14UnpackFilter30E9CleanDataEv($2); //@line 44 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 45 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIiEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5ArrayIiE9CleanDataEv($2); //@line 44 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 45 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIiED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 67 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 67 "./src/cpp/unrar/array.hpp"
 if (!($4)) {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
 $5 = HEAP32[$2>>2]|0; //@line 68 "./src/cpp/unrar/array.hpp"
 __THREW__ = 0;
 invoke_vi(70,($5|0)); //@line 68 "./src/cpp/unrar/array.hpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_3(0|0)|0;
  $9 = tempRet0;
  ___clang_call_terminate($8); //@line 68 "./src/cpp/unrar/array.hpp"
  // unreachable; //@line 68 "./src/cpp/unrar/array.hpp"
 } else {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
}
function __ZN5ArrayIP14UnpackFilter30ED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 67 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 67 "./src/cpp/unrar/array.hpp"
 if (!($4)) {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
 $5 = HEAP32[$2>>2]|0; //@line 68 "./src/cpp/unrar/array.hpp"
 __THREW__ = 0;
 invoke_vi(70,($5|0)); //@line 68 "./src/cpp/unrar/array.hpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_3(0|0)|0;
  $9 = tempRet0;
  ___clang_call_terminate($8); //@line 68 "./src/cpp/unrar/array.hpp"
  // unreachable; //@line 68 "./src/cpp/unrar/array.hpp"
 } else {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
}
function __ZN8ModelPPMD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 19088|0); //@line 92 "./src/cpp/unrar/model.hpp"
 __ZN12SubAllocatorD2Ev($3); //@line 92 "./src/cpp/unrar/model.hpp"
 STACKTOP = sp;return; //@line 92 "./src/cpp/unrar/model.hpp"
}
function __ZN5ArrayI12UnpackFilterED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 67 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 67 "./src/cpp/unrar/array.hpp"
 if (!($4)) {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
 $5 = HEAP32[$2>>2]|0; //@line 68 "./src/cpp/unrar/array.hpp"
 __THREW__ = 0;
 invoke_vi(70,($5|0)); //@line 68 "./src/cpp/unrar/array.hpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_3(0|0)|0;
  $9 = tempRet0;
  ___clang_call_terminate($8); //@line 68 "./src/cpp/unrar/array.hpp"
  // unreachable; //@line 68 "./src/cpp/unrar/array.hpp"
 } else {
  STACKTOP = sp;return; //@line 69 "./src/cpp/unrar/array.hpp"
 }
}
function __ZN12SubAllocatorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __THREW__ = 0;
 invoke_vi(239,($2|0)); //@line 70 "./src/cpp/unrar/suballoc.hpp"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $5 = ___cxa_find_matching_catch_3(0|0)|0;
  $6 = tempRet0;
  ___clang_call_terminate($5); //@line 70 "./src/cpp/unrar/suballoc.hpp"
  // unreachable; //@line 70 "./src/cpp/unrar/suballoc.hpp"
 } else {
  STACKTOP = sp;return; //@line 70 "./src/cpp/unrar/suballoc.hpp"
 }
}
function __ZN5ArrayIiE9CleanDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0; //@line 35 "./src/cpp/unrar/array.hpp"
 $3 = ((($2)) + 4|0); //@line 36 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 36 "./src/cpp/unrar/array.hpp"
 $4 = ((($2)) + 8|0); //@line 37 "./src/cpp/unrar/array.hpp"
 HEAP32[$4>>2] = 0; //@line 37 "./src/cpp/unrar/array.hpp"
 $5 = ((($2)) + 12|0); //@line 38 "./src/cpp/unrar/array.hpp"
 HEAP32[$5>>2] = 0; //@line 38 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayIP14UnpackFilter30E9CleanDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0; //@line 35 "./src/cpp/unrar/array.hpp"
 $3 = ((($2)) + 4|0); //@line 36 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 36 "./src/cpp/unrar/array.hpp"
 $4 = ((($2)) + 8|0); //@line 37 "./src/cpp/unrar/array.hpp"
 HEAP32[$4>>2] = 0; //@line 37 "./src/cpp/unrar/array.hpp"
 $5 = ((($2)) + 12|0); //@line 38 "./src/cpp/unrar/array.hpp"
 HEAP32[$5>>2] = 0; //@line 38 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/array.hpp"
}
function __ZN5ArrayI12UnpackFilterE9CleanDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0; //@line 35 "./src/cpp/unrar/array.hpp"
 $3 = ((($2)) + 4|0); //@line 36 "./src/cpp/unrar/array.hpp"
 HEAP32[$3>>2] = 0; //@line 36 "./src/cpp/unrar/array.hpp"
 $4 = ((($2)) + 8|0); //@line 37 "./src/cpp/unrar/array.hpp"
 HEAP32[$4>>2] = 0; //@line 37 "./src/cpp/unrar/array.hpp"
 $5 = ((($2)) + 12|0); //@line 38 "./src/cpp/unrar/array.hpp"
 HEAP32[$5>>2] = 0; //@line 38 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 39 "./src/cpp/unrar/array.hpp"
}
function __ZN6UnpackD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __THREW__ = 0;
 invoke_vii(240,($4|0),0); //@line 50 "./src/cpp/unrar/unpack.cpp"
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 do {
  if (!($6)) {
   $7 = ((($4)) + 19236|0); //@line 52 "./src/cpp/unrar/unpack.cpp"
   $8 = HEAP32[$7>>2]|0; //@line 52 "./src/cpp/unrar/unpack.cpp"
   $9 = ($8|0)!=(0|0); //@line 52 "./src/cpp/unrar/unpack.cpp"
   if ($9) {
    $10 = ((($4)) + 19236|0); //@line 53 "./src/cpp/unrar/unpack.cpp"
    $11 = HEAP32[$10>>2]|0; //@line 53 "./src/cpp/unrar/unpack.cpp"
    __THREW__ = 0;
    invoke_vi(70,($11|0)); //@line 53 "./src/cpp/unrar/unpack.cpp"
    $12 = __THREW__; __THREW__ = 0;
    $13 = $12&1;
    if ($13) {
     break;
    }
   }
   $28 = ((($4)) + 59064|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN5ArrayIiED2Ev($28); //@line 59 "./src/cpp/unrar/unpack.cpp"
   $29 = ((($4)) + 59048|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN5ArrayIP14UnpackFilter30ED2Ev($29); //@line 59 "./src/cpp/unrar/unpack.cpp"
   $30 = ((($4)) + 59032|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN5ArrayIP14UnpackFilter30ED2Ev($30); //@line 59 "./src/cpp/unrar/unpack.cpp"
   $31 = ((($4)) + 59016|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN8BitInputD2Ev($31); //@line 59 "./src/cpp/unrar/unpack.cpp"
   $32 = ((($4)) + 58960|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN5RarVMD2Ev($32); //@line 59 "./src/cpp/unrar/unpack.cpp"
   $33 = ((($4)) + 39104|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN8ModelPPMD2Ev($33); //@line 59 "./src/cpp/unrar/unpack.cpp"
   $34 = ((($4)) + 19240|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN16FragmentedWindowD2Ev($34); //@line 59 "./src/cpp/unrar/unpack.cpp"
   $35 = ((($4)) + 52|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN5ArrayI12UnpackFilterED2Ev($35); //@line 59 "./src/cpp/unrar/unpack.cpp"
   $36 = ((($4)) + 36|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN5ArrayIhED2Ev($36); //@line 59 "./src/cpp/unrar/unpack.cpp"
   $37 = ((($4)) + 20|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN5ArrayIhED2Ev($37); //@line 59 "./src/cpp/unrar/unpack.cpp"
   $38 = ((($4)) + 4|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
   __ZN8BitInputD2Ev($38); //@line 59 "./src/cpp/unrar/unpack.cpp"
   STACKTOP = sp;return; //@line 59 "./src/cpp/unrar/unpack.cpp"
  }
 } while(0);
 $14 = ___cxa_find_matching_catch_3(0|0)|0;
 $15 = tempRet0;
 $2 = $14; //@line 59 "./src/cpp/unrar/unpack.cpp"
 $3 = $15; //@line 59 "./src/cpp/unrar/unpack.cpp"
 $16 = ((($4)) + 59064|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN5ArrayIiED2Ev($16); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $17 = ((($4)) + 59048|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN5ArrayIP14UnpackFilter30ED2Ev($17); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $18 = ((($4)) + 59032|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN5ArrayIP14UnpackFilter30ED2Ev($18); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $19 = ((($4)) + 59016|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN8BitInputD2Ev($19); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $20 = ((($4)) + 58960|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN5RarVMD2Ev($20); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $21 = ((($4)) + 39104|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN8ModelPPMD2Ev($21); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $22 = ((($4)) + 19240|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN16FragmentedWindowD2Ev($22); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $23 = ((($4)) + 52|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN5ArrayI12UnpackFilterED2Ev($23); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $24 = ((($4)) + 36|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN5ArrayIhED2Ev($24); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $25 = ((($4)) + 20|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN5ArrayIhED2Ev($25); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $26 = ((($4)) + 4|0); //@line 59 "./src/cpp/unrar/unpack.cpp"
 __ZN8BitInputD2Ev($26); //@line 59 "./src/cpp/unrar/unpack.cpp"
 $27 = $2; //@line 59 "./src/cpp/unrar/unpack.cpp"
 ___clang_call_terminate($27); //@line 59 "./src/cpp/unrar/unpack.cpp"
 // unreachable; //@line 59 "./src/cpp/unrar/unpack.cpp"
}
function __ZN6Unpack4InitEjb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $10 = $2&1;
 $5 = $10;
 $11 = $3;
 $12 = $4; //@line 66 "./src/cpp/unrar/unpack.cpp"
 $13 = ($12|0)==(0); //@line 66 "./src/cpp/unrar/unpack.cpp"
 if ($13) {
  __ZN12ErrorHandler11MemoryErrorEv(756); //@line 67 "./src/cpp/unrar/unpack.cpp"
 }
 $6 = 262144; //@line 74 "./src/cpp/unrar/unpack.cpp"
 $14 = $4; //@line 75 "./src/cpp/unrar/unpack.cpp"
 $15 = ($14>>>0)<(262144); //@line 75 "./src/cpp/unrar/unpack.cpp"
 if ($15) {
  $4 = 262144; //@line 76 "./src/cpp/unrar/unpack.cpp"
 }
 $16 = $4; //@line 78 "./src/cpp/unrar/unpack.cpp"
 $17 = ((($11)) + 59084|0); //@line 78 "./src/cpp/unrar/unpack.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 78 "./src/cpp/unrar/unpack.cpp"
 $19 = ($16>>>0)<=($18>>>0); //@line 78 "./src/cpp/unrar/unpack.cpp"
 if ($19) {
  STACKTOP = sp;return; //@line 135 "./src/cpp/unrar/unpack.cpp"
 }
 $20 = $4; //@line 80 "./src/cpp/unrar/unpack.cpp"
 $21 = $20 >>> 16; //@line 80 "./src/cpp/unrar/unpack.cpp"
 $22 = ($21>>>0)>(65536); //@line 80 "./src/cpp/unrar/unpack.cpp"
 if ($22) {
  STACKTOP = sp;return; //@line 135 "./src/cpp/unrar/unpack.cpp"
 }
 $23 = $5; //@line 88 "./src/cpp/unrar/unpack.cpp"
 $24 = $23&1; //@line 88 "./src/cpp/unrar/unpack.cpp"
 if ($24) {
  $25 = ((($11)) + 19236|0); //@line 88 "./src/cpp/unrar/unpack.cpp"
  $26 = HEAP32[$25>>2]|0; //@line 88 "./src/cpp/unrar/unpack.cpp"
  $27 = ($26|0)!=(0|0); //@line 88 "./src/cpp/unrar/unpack.cpp"
  if ($27) {
   $32 = 1;
  } else {
   $28 = ((($11)) + 19496|0); //@line 88 "./src/cpp/unrar/unpack.cpp"
   $29 = HEAP8[$28>>0]|0; //@line 88 "./src/cpp/unrar/unpack.cpp"
   $30 = $29&1; //@line 88 "./src/cpp/unrar/unpack.cpp"
   $32 = $30;
  }
 } else {
  $32 = 0;
 }
 $31 = $32&1; //@line 88 "./src/cpp/unrar/unpack.cpp"
 $7 = $31; //@line 88 "./src/cpp/unrar/unpack.cpp"
 $33 = $7; //@line 91 "./src/cpp/unrar/unpack.cpp"
 $34 = $33&1; //@line 91 "./src/cpp/unrar/unpack.cpp"
 if ($34) {
  $35 = ((($11)) + 19496|0); //@line 91 "./src/cpp/unrar/unpack.cpp"
  $36 = HEAP8[$35>>0]|0; //@line 91 "./src/cpp/unrar/unpack.cpp"
  $37 = $36&1; //@line 91 "./src/cpp/unrar/unpack.cpp"
  if ($37) {
   $38 = (___cxa_allocate_exception(4)|0); //@line 92 "./src/cpp/unrar/unpack.cpp"
   __ZNSt9bad_allocC2Ev($38); //@line 92 "./src/cpp/unrar/unpack.cpp"
   ___cxa_throw(($38|0),(352|0),(32|0)); //@line 92 "./src/cpp/unrar/unpack.cpp"
   // unreachable; //@line 92 "./src/cpp/unrar/unpack.cpp"
  }
 }
 $39 = ((($11)) + 19496|0); //@line 94 "./src/cpp/unrar/unpack.cpp"
 $40 = HEAP8[$39>>0]|0; //@line 94 "./src/cpp/unrar/unpack.cpp"
 $41 = $40&1; //@line 94 "./src/cpp/unrar/unpack.cpp"
 if ($41) {
  $44 = 0;
 } else {
  $42 = $4; //@line 94 "./src/cpp/unrar/unpack.cpp"
  $43 = (_malloc($42)|0); //@line 94 "./src/cpp/unrar/unpack.cpp"
  $44 = $43;
 }
 $8 = $44; //@line 94 "./src/cpp/unrar/unpack.cpp"
 $45 = $8; //@line 96 "./src/cpp/unrar/unpack.cpp"
 $46 = ($45|0)==(0|0); //@line 96 "./src/cpp/unrar/unpack.cpp"
 if ($46) {
  $47 = $7; //@line 97 "./src/cpp/unrar/unpack.cpp"
  $48 = $47&1; //@line 97 "./src/cpp/unrar/unpack.cpp"
  $49 = $4; //@line 97 "./src/cpp/unrar/unpack.cpp"
  $50 = ($49>>>0)<(16777216); //@line 97 "./src/cpp/unrar/unpack.cpp"
  $or$cond = $48 | $50; //@line 97 "./src/cpp/unrar/unpack.cpp"
  if ($or$cond) {
   $51 = (___cxa_allocate_exception(4)|0); //@line 101 "./src/cpp/unrar/unpack.cpp"
   __ZNSt9bad_allocC2Ev($51); //@line 101 "./src/cpp/unrar/unpack.cpp"
   ___cxa_throw(($51|0),(352|0),(32|0)); //@line 101 "./src/cpp/unrar/unpack.cpp"
   // unreachable; //@line 101 "./src/cpp/unrar/unpack.cpp"
  }
  $52 = ((($11)) + 19236|0); //@line 105 "./src/cpp/unrar/unpack.cpp"
  $53 = HEAP32[$52>>2]|0; //@line 105 "./src/cpp/unrar/unpack.cpp"
  $54 = ($53|0)!=(0|0); //@line 105 "./src/cpp/unrar/unpack.cpp"
  if ($54) {
   $55 = ((($11)) + 19236|0); //@line 107 "./src/cpp/unrar/unpack.cpp"
   $56 = HEAP32[$55>>2]|0; //@line 107 "./src/cpp/unrar/unpack.cpp"
   _free($56); //@line 107 "./src/cpp/unrar/unpack.cpp"
   $57 = ((($11)) + 19236|0); //@line 108 "./src/cpp/unrar/unpack.cpp"
   HEAP32[$57>>2] = 0; //@line 108 "./src/cpp/unrar/unpack.cpp"
  }
  $58 = ((($11)) + 19240|0); //@line 110 "./src/cpp/unrar/unpack.cpp"
  $59 = $4; //@line 110 "./src/cpp/unrar/unpack.cpp"
  __ZN16FragmentedWindow4InitEj($58,$59); //@line 110 "./src/cpp/unrar/unpack.cpp"
  $60 = ((($11)) + 19496|0); //@line 111 "./src/cpp/unrar/unpack.cpp"
  HEAP8[$60>>0] = 1; //@line 111 "./src/cpp/unrar/unpack.cpp"
 }
 $61 = ((($11)) + 19496|0); //@line 114 "./src/cpp/unrar/unpack.cpp"
 $62 = HEAP8[$61>>0]|0; //@line 114 "./src/cpp/unrar/unpack.cpp"
 $63 = $62&1; //@line 114 "./src/cpp/unrar/unpack.cpp"
 if (!($63)) {
  $64 = $8; //@line 118 "./src/cpp/unrar/unpack.cpp"
  $65 = $4; //@line 118 "./src/cpp/unrar/unpack.cpp"
  _memset(($64|0),0,($65|0))|0; //@line 118 "./src/cpp/unrar/unpack.cpp"
  $66 = $7; //@line 124 "./src/cpp/unrar/unpack.cpp"
  $67 = $66&1; //@line 124 "./src/cpp/unrar/unpack.cpp"
  L35: do {
   if ($67) {
    $9 = 1; //@line 125 "./src/cpp/unrar/unpack.cpp"
    while(1) {
     $68 = $9; //@line 125 "./src/cpp/unrar/unpack.cpp"
     $69 = ((($11)) + 59084|0); //@line 125 "./src/cpp/unrar/unpack.cpp"
     $70 = HEAP32[$69>>2]|0; //@line 125 "./src/cpp/unrar/unpack.cpp"
     $71 = ($68>>>0)<=($70>>>0); //@line 125 "./src/cpp/unrar/unpack.cpp"
     if (!($71)) {
      break L35;
     }
     $72 = ((($11)) + 19236|0); //@line 126 "./src/cpp/unrar/unpack.cpp"
     $73 = HEAP32[$72>>2]|0; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $74 = ((($11)) + 96|0); //@line 126 "./src/cpp/unrar/unpack.cpp"
     $75 = HEAP32[$74>>2]|0; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $76 = $9; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $77 = (($75) - ($76))|0; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $78 = ((($11)) + 59084|0); //@line 126 "./src/cpp/unrar/unpack.cpp"
     $79 = HEAP32[$78>>2]|0; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $80 = (($79) - 1)|0; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $81 = $77 & $80; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $82 = (($73) + ($81)|0); //@line 126 "./src/cpp/unrar/unpack.cpp"
     $83 = HEAP8[$82>>0]|0; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $84 = $8; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $85 = ((($11)) + 96|0); //@line 126 "./src/cpp/unrar/unpack.cpp"
     $86 = HEAP32[$85>>2]|0; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $87 = $9; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $88 = (($86) - ($87))|0; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $89 = $4; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $90 = (($89) - 1)|0; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $91 = $88 & $90; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $92 = (($84) + ($91)|0); //@line 126 "./src/cpp/unrar/unpack.cpp"
     HEAP8[$92>>0] = $83; //@line 126 "./src/cpp/unrar/unpack.cpp"
     $93 = $9; //@line 125 "./src/cpp/unrar/unpack.cpp"
     $94 = (($93) + 1)|0; //@line 125 "./src/cpp/unrar/unpack.cpp"
     $9 = $94; //@line 125 "./src/cpp/unrar/unpack.cpp"
    }
   }
  } while(0);
  $95 = ((($11)) + 19236|0); //@line 128 "./src/cpp/unrar/unpack.cpp"
  $96 = HEAP32[$95>>2]|0; //@line 128 "./src/cpp/unrar/unpack.cpp"
  $97 = ($96|0)!=(0|0); //@line 128 "./src/cpp/unrar/unpack.cpp"
  if ($97) {
   $98 = ((($11)) + 19236|0); //@line 129 "./src/cpp/unrar/unpack.cpp"
   $99 = HEAP32[$98>>2]|0; //@line 129 "./src/cpp/unrar/unpack.cpp"
   _free($99); //@line 129 "./src/cpp/unrar/unpack.cpp"
  }
  $100 = $8; //@line 130 "./src/cpp/unrar/unpack.cpp"
  $101 = ((($11)) + 19236|0); //@line 130 "./src/cpp/unrar/unpack.cpp"
  HEAP32[$101>>2] = $100; //@line 130 "./src/cpp/unrar/unpack.cpp"
 }
 $102 = $4; //@line 133 "./src/cpp/unrar/unpack.cpp"
 $103 = ((($11)) + 59084|0); //@line 133 "./src/cpp/unrar/unpack.cpp"
 HEAP32[$103>>2] = $102; //@line 133 "./src/cpp/unrar/unpack.cpp"
 $104 = ((($11)) + 59084|0); //@line 134 "./src/cpp/unrar/unpack.cpp"
 $105 = HEAP32[$104>>2]|0; //@line 134 "./src/cpp/unrar/unpack.cpp"
 $106 = (($105) - 1)|0; //@line 134 "./src/cpp/unrar/unpack.cpp"
 $107 = ((($11)) + 59088|0); //@line 134 "./src/cpp/unrar/unpack.cpp"
 HEAP32[$107>>2] = $106; //@line 134 "./src/cpp/unrar/unpack.cpp"
 STACKTOP = sp;return; //@line 135 "./src/cpp/unrar/unpack.cpp"
}
function __ZN6Unpack8DoUnpackEib($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $2&1;
 $5 = $6;
 $7 = $3;
 $8 = $4; //@line 143 "./src/cpp/unrar/unpack.cpp"
 switch ($8|0) {
 case 15:  {
  $9 = ((($7)) + 19496|0); //@line 147 "./src/cpp/unrar/unpack.cpp"
  $10 = HEAP8[$9>>0]|0; //@line 147 "./src/cpp/unrar/unpack.cpp"
  $11 = $10&1; //@line 147 "./src/cpp/unrar/unpack.cpp"
  if (!($11)) {
   $12 = $5; //@line 148 "./src/cpp/unrar/unpack.cpp"
   $13 = $12&1; //@line 148 "./src/cpp/unrar/unpack.cpp"
   __ZN6Unpack8Unpack15Eb($7,$13); //@line 148 "./src/cpp/unrar/unpack.cpp"
  }
  break;
 }
 case 26: case 20:  {
  $14 = ((($7)) + 19496|0); //@line 152 "./src/cpp/unrar/unpack.cpp"
  $15 = HEAP8[$14>>0]|0; //@line 152 "./src/cpp/unrar/unpack.cpp"
  $16 = $15&1; //@line 152 "./src/cpp/unrar/unpack.cpp"
  if (!($16)) {
   $17 = $5; //@line 153 "./src/cpp/unrar/unpack.cpp"
   $18 = $17&1; //@line 153 "./src/cpp/unrar/unpack.cpp"
   __ZN6Unpack8Unpack20Eb($7,$18); //@line 153 "./src/cpp/unrar/unpack.cpp"
  }
  break;
 }
 case 29:  {
  $19 = ((($7)) + 19496|0); //@line 157 "./src/cpp/unrar/unpack.cpp"
  $20 = HEAP8[$19>>0]|0; //@line 157 "./src/cpp/unrar/unpack.cpp"
  $21 = $20&1; //@line 157 "./src/cpp/unrar/unpack.cpp"
  if (!($21)) {
   $22 = $5; //@line 158 "./src/cpp/unrar/unpack.cpp"
   $23 = $22&1; //@line 158 "./src/cpp/unrar/unpack.cpp"
   __ZN6Unpack8Unpack29Eb($7,$23); //@line 158 "./src/cpp/unrar/unpack.cpp"
  }
  break;
 }
 case 50:  {
  $24 = $5; //@line 176 "./src/cpp/unrar/unpack.cpp"
  $25 = $24&1; //@line 176 "./src/cpp/unrar/unpack.cpp"
  __ZN6Unpack7Unpack5Eb($7,$25); //@line 176 "./src/cpp/unrar/unpack.cpp"
  break;
 }
 default: {
 }
 }
 STACKTOP = sp;return; //@line 179 "./src/cpp/unrar/unpack.cpp"
}
function __ZN10FileHeader5ResetEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8224|0); //@line 5 "./src/cpp/unrar/headers.cpp"
 $6 = $3; //@line 5 "./src/cpp/unrar/headers.cpp"
 __ZN5ArrayIhE5AllocEj($5,$6); //@line 5 "./src/cpp/unrar/headers.cpp"
 __ZN9BaseBlock5ResetEv($4); //@line 6 "./src/cpp/unrar/headers.cpp"
 $7 = ((($4)) + 8288|0); //@line 8 "./src/cpp/unrar/headers.cpp"
 __ZN9HashValue4InitE9HASH_TYPE($7,0); //@line 8 "./src/cpp/unrar/headers.cpp"
 $8 = ((($4)) + 8240|0); //@line 10 "./src/cpp/unrar/headers.cpp"
 __ZN7RarTime5ResetEv($8); //@line 10 "./src/cpp/unrar/headers.cpp"
 $9 = ((($4)) + 8256|0); //@line 11 "./src/cpp/unrar/headers.cpp"
 __ZN7RarTime5ResetEv($9); //@line 11 "./src/cpp/unrar/headers.cpp"
 $10 = ((($4)) + 8248|0); //@line 12 "./src/cpp/unrar/headers.cpp"
 __ZN7RarTime5ResetEv($10); //@line 12 "./src/cpp/unrar/headers.cpp"
 $11 = ((($4)) + 8328|0); //@line 13 "./src/cpp/unrar/headers.cpp"
 HEAP8[$11>>0] = 0; //@line 13 "./src/cpp/unrar/headers.cpp"
 $12 = ((($4)) + 8329|0); //@line 14 "./src/cpp/unrar/headers.cpp"
 HEAP8[$12>>0] = 0; //@line 14 "./src/cpp/unrar/headers.cpp"
 $13 = ((($4)) + 8330|0); //@line 16 "./src/cpp/unrar/headers.cpp"
 HEAP8[$13>>0] = 0; //@line 16 "./src/cpp/unrar/headers.cpp"
 $14 = ((($4)) + 28|0); //@line 18 "./src/cpp/unrar/headers.cpp"
 HEAP32[$14>>2] = 0; //@line 18 "./src/cpp/unrar/headers.cpp"
 $15 = ((($4)) + 8332|0); //@line 20 "./src/cpp/unrar/headers.cpp"
 HEAP32[$15>>2] = 0; //@line 20 "./src/cpp/unrar/headers.cpp"
 $16 = ((($4)) + 8331|0); //@line 21 "./src/cpp/unrar/headers.cpp"
 HEAP8[$16>>0] = 0; //@line 21 "./src/cpp/unrar/headers.cpp"
 $17 = ((($4)) + 8336|0); //@line 22 "./src/cpp/unrar/headers.cpp"
 HEAP8[$17>>0] = 0; //@line 22 "./src/cpp/unrar/headers.cpp"
 $18 = ((($4)) + 8369|0); //@line 23 "./src/cpp/unrar/headers.cpp"
 HEAP8[$18>>0] = 0; //@line 23 "./src/cpp/unrar/headers.cpp"
 $19 = ((($4)) + 8378|0); //@line 24 "./src/cpp/unrar/headers.cpp"
 HEAP8[$19>>0] = 0; //@line 24 "./src/cpp/unrar/headers.cpp"
 $20 = ((($4)) + 8412|0); //@line 25 "./src/cpp/unrar/headers.cpp"
 HEAP32[$20>>2] = 0; //@line 25 "./src/cpp/unrar/headers.cpp"
 $21 = ((($4)) + 8416|0); //@line 27 "./src/cpp/unrar/headers.cpp"
 HEAP8[$21>>0] = 0; //@line 27 "./src/cpp/unrar/headers.cpp"
 $22 = ((($4)) + 8417|0); //@line 28 "./src/cpp/unrar/headers.cpp"
 HEAP8[$22>>0] = 0; //@line 28 "./src/cpp/unrar/headers.cpp"
 $23 = ((($4)) + 8420|0); //@line 29 "./src/cpp/unrar/headers.cpp"
 HEAP32[$23>>2] = 0; //@line 29 "./src/cpp/unrar/headers.cpp"
 $24 = ((($4)) + 8424|0); //@line 30 "./src/cpp/unrar/headers.cpp"
 HEAP8[$24>>0] = 0; //@line 30 "./src/cpp/unrar/headers.cpp"
 $25 = ((($4)) + 8426|0); //@line 31 "./src/cpp/unrar/headers.cpp"
 HEAP8[$25>>0] = 0; //@line 31 "./src/cpp/unrar/headers.cpp"
 $26 = ((($4)) + 8418|0); //@line 32 "./src/cpp/unrar/headers.cpp"
 HEAP8[$26>>0] = 0; //@line 32 "./src/cpp/unrar/headers.cpp"
 $27 = ((($4)) + 8419|0); //@line 33 "./src/cpp/unrar/headers.cpp"
 HEAP8[$27>>0] = 0; //@line 33 "./src/cpp/unrar/headers.cpp"
 $28 = ((($4)) + 8425|0); //@line 34 "./src/cpp/unrar/headers.cpp"
 HEAP8[$28>>0] = 0; //@line 34 "./src/cpp/unrar/headers.cpp"
 $29 = ((($4)) + 8432|0); //@line 36 "./src/cpp/unrar/headers.cpp"
 HEAP32[$29>>2] = 0; //@line 36 "./src/cpp/unrar/headers.cpp"
 $30 = ((($4)) + 16629|0); //@line 37 "./src/cpp/unrar/headers.cpp"
 HEAP8[$30>>0] = 0; //@line 37 "./src/cpp/unrar/headers.cpp"
 STACKTOP = sp;return; //@line 38 "./src/cpp/unrar/headers.cpp"
}
function __ZN10MainHeader5ResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0); //@line 53 "./src/cpp/unrar/headers.cpp"
 HEAP16[$3>>1] = 0; //@line 53 "./src/cpp/unrar/headers.cpp"
 $4 = ((($2)) + 24|0); //@line 54 "./src/cpp/unrar/headers.cpp"
 HEAP32[$4>>2] = 0; //@line 54 "./src/cpp/unrar/headers.cpp"
 $5 = ((($2)) + 28|0); //@line 55 "./src/cpp/unrar/headers.cpp"
 HEAP8[$5>>0] = 0; //@line 55 "./src/cpp/unrar/headers.cpp"
 $6 = ((($2)) + 29|0); //@line 56 "./src/cpp/unrar/headers.cpp"
 HEAP8[$6>>0] = 0; //@line 56 "./src/cpp/unrar/headers.cpp"
 $7 = ((($2)) + 30|0); //@line 57 "./src/cpp/unrar/headers.cpp"
 HEAP8[$7>>0] = 0; //@line 57 "./src/cpp/unrar/headers.cpp"
 $8 = ((($2)) + 32|0); //@line 58 "./src/cpp/unrar/headers.cpp"
 $9 = $8; //@line 58 "./src/cpp/unrar/headers.cpp"
 $10 = $9; //@line 58 "./src/cpp/unrar/headers.cpp"
 HEAP32[$10>>2] = 0; //@line 58 "./src/cpp/unrar/headers.cpp"
 $11 = (($9) + 4)|0; //@line 58 "./src/cpp/unrar/headers.cpp"
 $12 = $11; //@line 58 "./src/cpp/unrar/headers.cpp"
 HEAP32[$12>>2] = 0; //@line 58 "./src/cpp/unrar/headers.cpp"
 $13 = ((($2)) + 40|0); //@line 59 "./src/cpp/unrar/headers.cpp"
 $14 = $13; //@line 59 "./src/cpp/unrar/headers.cpp"
 $15 = $14; //@line 59 "./src/cpp/unrar/headers.cpp"
 HEAP32[$15>>2] = 0; //@line 59 "./src/cpp/unrar/headers.cpp"
 $16 = (($14) + 4)|0; //@line 59 "./src/cpp/unrar/headers.cpp"
 $17 = $16; //@line 59 "./src/cpp/unrar/headers.cpp"
 HEAP32[$17>>2] = 0; //@line 59 "./src/cpp/unrar/headers.cpp"
 $18 = ((($2)) + 48|0); //@line 60 "./src/cpp/unrar/headers.cpp"
 $19 = $18; //@line 60 "./src/cpp/unrar/headers.cpp"
 $20 = $19; //@line 60 "./src/cpp/unrar/headers.cpp"
 HEAP32[$20>>2] = 0; //@line 60 "./src/cpp/unrar/headers.cpp"
 $21 = (($19) + 4)|0; //@line 60 "./src/cpp/unrar/headers.cpp"
 $22 = $21; //@line 60 "./src/cpp/unrar/headers.cpp"
 HEAP32[$22>>2] = 0; //@line 60 "./src/cpp/unrar/headers.cpp"
 $23 = ((($2)) + 56|0); //@line 61 "./src/cpp/unrar/headers.cpp"
 $24 = $23; //@line 61 "./src/cpp/unrar/headers.cpp"
 $25 = $24; //@line 61 "./src/cpp/unrar/headers.cpp"
 HEAP32[$25>>2] = 0; //@line 61 "./src/cpp/unrar/headers.cpp"
 $26 = (($24) + 4)|0; //@line 61 "./src/cpp/unrar/headers.cpp"
 $27 = $26; //@line 61 "./src/cpp/unrar/headers.cpp"
 HEAP32[$27>>2] = 0; //@line 61 "./src/cpp/unrar/headers.cpp"
 STACKTOP = sp;return; //@line 62 "./src/cpp/unrar/headers.cpp"
}
function __ZN11CommandDataC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __ZN10RAROptionsC2Ev($4); //@line 3 "./src/cpp/unrar/cmddata.cpp"
 $5 = ((($4)) + 91656|0); //@line 3 "./src/cpp/unrar/cmddata.cpp"
 __THREW__ = 0;
 invoke_vi(241,($5|0)); //@line 3 "./src/cpp/unrar/cmddata.cpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $22 = ___cxa_find_matching_catch_2()|0;
  $23 = tempRet0;
  $2 = $22; //@line 6 "./src/cpp/unrar/cmddata.cpp"
  $3 = $23; //@line 6 "./src/cpp/unrar/cmddata.cpp"
  __ZN10RAROptionsD2Ev($4); //@line 6 "./src/cpp/unrar/cmddata.cpp"
  $34 = $2; //@line 6 "./src/cpp/unrar/cmddata.cpp"
  $35 = $3; //@line 6 "./src/cpp/unrar/cmddata.cpp"
  ___resumeException($34|0);
  // unreachable;
 }
 $8 = ((($4)) + 91748|0); //@line 3 "./src/cpp/unrar/cmddata.cpp"
 __THREW__ = 0;
 invoke_vi(241,($8|0)); //@line 3 "./src/cpp/unrar/cmddata.cpp"
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $24 = ___cxa_find_matching_catch_2()|0;
  $25 = tempRet0;
  $2 = $24; //@line 6 "./src/cpp/unrar/cmddata.cpp"
  $3 = $25; //@line 6 "./src/cpp/unrar/cmddata.cpp"
 } else {
  $11 = ((($4)) + 91840|0); //@line 3 "./src/cpp/unrar/cmddata.cpp"
  __THREW__ = 0;
  invoke_vi(241,($11|0)); //@line 3 "./src/cpp/unrar/cmddata.cpp"
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if ($13) {
   $26 = ___cxa_find_matching_catch_2()|0;
   $27 = tempRet0;
   $2 = $26; //@line 6 "./src/cpp/unrar/cmddata.cpp"
   $3 = $27; //@line 6 "./src/cpp/unrar/cmddata.cpp"
  } else {
   $14 = ((($4)) + 91932|0); //@line 3 "./src/cpp/unrar/cmddata.cpp"
   __THREW__ = 0;
   invoke_vi(241,($14|0)); //@line 3 "./src/cpp/unrar/cmddata.cpp"
   $15 = __THREW__; __THREW__ = 0;
   $16 = $15&1;
   if ($16) {
    $28 = ___cxa_find_matching_catch_2()|0;
    $29 = tempRet0;
    $2 = $28; //@line 6 "./src/cpp/unrar/cmddata.cpp"
    $3 = $29; //@line 6 "./src/cpp/unrar/cmddata.cpp"
   } else {
    $17 = ((($4)) + 92024|0); //@line 3 "./src/cpp/unrar/cmddata.cpp"
    __THREW__ = 0;
    invoke_vi(241,($17|0)); //@line 3 "./src/cpp/unrar/cmddata.cpp"
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    do {
     if ($19) {
      $30 = ___cxa_find_matching_catch_2()|0;
      $31 = tempRet0;
      $2 = $30; //@line 6 "./src/cpp/unrar/cmddata.cpp"
      $3 = $31; //@line 6 "./src/cpp/unrar/cmddata.cpp"
     } else {
      __THREW__ = 0;
      invoke_vi(242,($4|0)); //@line 5 "./src/cpp/unrar/cmddata.cpp"
      $20 = __THREW__; __THREW__ = 0;
      $21 = $20&1;
      if ($21) {
       $32 = ___cxa_find_matching_catch_2()|0;
       $33 = tempRet0;
       $2 = $32; //@line 6 "./src/cpp/unrar/cmddata.cpp"
       $3 = $33; //@line 6 "./src/cpp/unrar/cmddata.cpp"
       __ZN10StringListD2Ev($17); //@line 6 "./src/cpp/unrar/cmddata.cpp"
       break;
      } else {
       STACKTOP = sp;return; //@line 6 "./src/cpp/unrar/cmddata.cpp"
      }
     }
    } while(0);
    __ZN10StringListD2Ev($14); //@line 6 "./src/cpp/unrar/cmddata.cpp"
   }
   __ZN10StringListD2Ev($11); //@line 6 "./src/cpp/unrar/cmddata.cpp"
  }
  __ZN10StringListD2Ev($8); //@line 6 "./src/cpp/unrar/cmddata.cpp"
 }
 __ZN10StringListD2Ev($5); //@line 6 "./src/cpp/unrar/cmddata.cpp"
 __ZN10RAROptionsD2Ev($4); //@line 6 "./src/cpp/unrar/cmddata.cpp"
 $34 = $2; //@line 6 "./src/cpp/unrar/cmddata.cpp"
 $35 = $3; //@line 6 "./src/cpp/unrar/cmddata.cpp"
 ___resumeException($34|0);
 // unreachable;
}
function __ZN11CommandData4InitEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN10RAROptions4InitEv($2); //@line 11 "./src/cpp/unrar/cmddata.cpp"
 $3 = ((($2)) + 75208|0); //@line 13 "./src/cpp/unrar/cmddata.cpp"
 HEAP32[$3>>2] = 0; //@line 13 "./src/cpp/unrar/cmddata.cpp"
 $4 = ((($2)) + 83464|0); //@line 14 "./src/cpp/unrar/cmddata.cpp"
 HEAP32[$4>>2] = 0; //@line 14 "./src/cpp/unrar/cmddata.cpp"
 $5 = ((($2)) + 75196|0); //@line 15 "./src/cpp/unrar/cmddata.cpp"
 HEAP8[$5>>0] = 0; //@line 15 "./src/cpp/unrar/cmddata.cpp"
 $6 = ((($2)) + 75200|0); //@line 17 "./src/cpp/unrar/cmddata.cpp"
 HEAP32[$6>>2] = 0; //@line 17 "./src/cpp/unrar/cmddata.cpp"
 $7 = ((($2)) + 75204|0); //@line 19 "./src/cpp/unrar/cmddata.cpp"
 HEAP8[$7>>0] = 0; //@line 19 "./src/cpp/unrar/cmddata.cpp"
 $8 = ((($2)) + 91656|0); //@line 22 "./src/cpp/unrar/cmddata.cpp"
 __ZN10StringList5ResetEv($8); //@line 22 "./src/cpp/unrar/cmddata.cpp"
 $9 = ((($2)) + 91748|0); //@line 23 "./src/cpp/unrar/cmddata.cpp"
 __ZN10StringList5ResetEv($9); //@line 23 "./src/cpp/unrar/cmddata.cpp"
 $10 = ((($2)) + 91840|0); //@line 24 "./src/cpp/unrar/cmddata.cpp"
 __ZN10StringList5ResetEv($10); //@line 24 "./src/cpp/unrar/cmddata.cpp"
 $11 = ((($2)) + 92024|0); //@line 25 "./src/cpp/unrar/cmddata.cpp"
 __ZN10StringList5ResetEv($11); //@line 25 "./src/cpp/unrar/cmddata.cpp"
 $12 = ((($2)) + 91932|0); //@line 26 "./src/cpp/unrar/cmddata.cpp"
 __ZN10StringList5ResetEv($12); //@line 26 "./src/cpp/unrar/cmddata.cpp"
 $13 = ((($2)) + 49776|0); //@line 27 "./src/cpp/unrar/cmddata.cpp"
 __ZN5ArrayIxE5ResetEv($13); //@line 27 "./src/cpp/unrar/cmddata.cpp"
 STACKTOP = sp;return; //@line 28 "./src/cpp/unrar/cmddata.cpp"
}
function __ZN5ArrayIxE5ResetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 124 "./src/cpp/unrar/array.hpp"
 $4 = ($3|0)!=(0|0); //@line 124 "./src/cpp/unrar/array.hpp"
 if ($4) {
  $5 = HEAP32[$2>>2]|0; //@line 126 "./src/cpp/unrar/array.hpp"
  _free($5); //@line 126 "./src/cpp/unrar/array.hpp"
  HEAP32[$2>>2] = 0; //@line 127 "./src/cpp/unrar/array.hpp"
 }
 $6 = ((($2)) + 4|0); //@line 129 "./src/cpp/unrar/array.hpp"
 HEAP32[$6>>2] = 0; //@line 129 "./src/cpp/unrar/array.hpp"
 $7 = ((($2)) + 8|0); //@line 130 "./src/cpp/unrar/array.hpp"
 HEAP32[$7>>2] = 0; //@line 130 "./src/cpp/unrar/array.hpp"
 STACKTOP = sp;return; //@line 131 "./src/cpp/unrar/array.hpp"
}
function __ZN11CommandData9ExclCheckEPKwbbb($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 11|0;
 $6 = $0;
 $7 = $1;
 $11 = $2&1;
 $8 = $11;
 $12 = $3&1;
 $9 = $12;
 $13 = $4&1;
 $10 = $13;
 $14 = $6;
 $15 = ((($14)) + 91748|0); //@line 1051 "./src/cpp/unrar/cmddata.cpp"
 $16 = $8; //@line 1051 "./src/cpp/unrar/cmddata.cpp"
 $17 = $16&1; //@line 1051 "./src/cpp/unrar/cmddata.cpp"
 $18 = $7; //@line 1051 "./src/cpp/unrar/cmddata.cpp"
 $19 = $9; //@line 1051 "./src/cpp/unrar/cmddata.cpp"
 $20 = $19&1; //@line 1051 "./src/cpp/unrar/cmddata.cpp"
 $21 = (__ZN11CommandData9CheckArgsEP10StringListbPKwbi($15,$17,$18,$20,5)|0); //@line 1051 "./src/cpp/unrar/cmddata.cpp"
 do {
  if ($21) {
   $$expand_i1_val = 1; //@line 1052 "./src/cpp/unrar/cmddata.cpp"
   HEAP8[$5>>0] = $$expand_i1_val; //@line 1052 "./src/cpp/unrar/cmddata.cpp"
  } else {
   $22 = $10; //@line 1053 "./src/cpp/unrar/cmddata.cpp"
   $23 = $22&1; //@line 1053 "./src/cpp/unrar/cmddata.cpp"
   if ($23) {
    $24 = ((($14)) + 91840|0); //@line 1053 "./src/cpp/unrar/cmddata.cpp"
    $25 = (__ZN10StringList10ItemsCountEv($24)|0); //@line 1053 "./src/cpp/unrar/cmddata.cpp"
    $26 = ($25|0)==(0); //@line 1053 "./src/cpp/unrar/cmddata.cpp"
    if (!($26)) {
     $27 = ((($14)) + 91840|0); //@line 1055 "./src/cpp/unrar/cmddata.cpp"
     $28 = $8; //@line 1055 "./src/cpp/unrar/cmddata.cpp"
     $29 = $28&1; //@line 1055 "./src/cpp/unrar/cmddata.cpp"
     $30 = $7; //@line 1055 "./src/cpp/unrar/cmddata.cpp"
     $31 = $9; //@line 1055 "./src/cpp/unrar/cmddata.cpp"
     $32 = $31&1; //@line 1055 "./src/cpp/unrar/cmddata.cpp"
     $33 = (__ZN11CommandData9CheckArgsEP10StringListbPKwbi($27,$29,$30,$32,5)|0); //@line 1055 "./src/cpp/unrar/cmddata.cpp"
     if ($33) {
      $$expand_i1_val4 = 0; //@line 1056 "./src/cpp/unrar/cmddata.cpp"
      HEAP8[$5>>0] = $$expand_i1_val4; //@line 1056 "./src/cpp/unrar/cmddata.cpp"
      break;
     } else {
      $$expand_i1_val6 = 1; //@line 1057 "./src/cpp/unrar/cmddata.cpp"
      HEAP8[$5>>0] = $$expand_i1_val6; //@line 1057 "./src/cpp/unrar/cmddata.cpp"
      break;
     }
    }
   }
   $$expand_i1_val2 = 0; //@line 1054 "./src/cpp/unrar/cmddata.cpp"
   HEAP8[$5>>0] = $$expand_i1_val2; //@line 1054 "./src/cpp/unrar/cmddata.cpp"
  }
 } while(0);
 $$pre_trunc = HEAP8[$5>>0]|0; //@line 1058 "./src/cpp/unrar/cmddata.cpp"
 $34 = $$pre_trunc&1; //@line 1058 "./src/cpp/unrar/cmddata.cpp"
 STACKTOP = sp;return ($34|0); //@line 1058 "./src/cpp/unrar/cmddata.cpp"
}
function __ZN11CommandData9CheckArgsEP10StringListbPKwbi($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 24624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(24624|0);
 $5 = sp + 24619|0;
 $12 = sp + 16408|0;
 $13 = sp + 8216|0;
 $16 = sp + 8|0;
 $6 = $0;
 $19 = $1&1;
 $7 = $19;
 $8 = $2;
 $20 = $3&1;
 $9 = $20;
 $10 = $4;
 $21 = $8; //@line 1063 "./src/cpp/unrar/cmddata.cpp"
 $22 = (__Z11ConvertPathPKwPw($21,0)|0); //@line 1063 "./src/cpp/unrar/cmddata.cpp"
 $11 = $22; //@line 1063 "./src/cpp/unrar/cmddata.cpp"
 HEAP32[$12>>2] = 0; //@line 1066 "./src/cpp/unrar/cmddata.cpp"
 $23 = $6; //@line 1067 "./src/cpp/unrar/cmddata.cpp"
 __ZN10StringList6RewindEv($23); //@line 1067 "./src/cpp/unrar/cmddata.cpp"
 while(1) {
  $24 = $6; //@line 1068 "./src/cpp/unrar/cmddata.cpp"
  $25 = (__ZN10StringList9GetStringEPwj($24,$13,2048)|0); //@line 1068 "./src/cpp/unrar/cmddata.cpp"
  if (!($25)) {
   label = 19;
   break;
  }
  $26 = (__Z15PointToLastCharPKw($13)|0); //@line 1070 "./src/cpp/unrar/cmddata.cpp"
  $14 = $26; //@line 1070 "./src/cpp/unrar/cmddata.cpp"
  $27 = $14; //@line 1071 "./src/cpp/unrar/cmddata.cpp"
  $28 = HEAP32[$27>>2]|0; //@line 1071 "./src/cpp/unrar/cmddata.cpp"
  $29 = (__Z9IsPathDivi($28)|0); //@line 1071 "./src/cpp/unrar/cmddata.cpp"
  $30 = $29&1; //@line 1071 "./src/cpp/unrar/cmddata.cpp"
  $15 = $30; //@line 1071 "./src/cpp/unrar/cmddata.cpp"
  $31 = $7; //@line 1073 "./src/cpp/unrar/cmddata.cpp"
  $32 = $31&1; //@line 1073 "./src/cpp/unrar/cmddata.cpp"
  $33 = $15;
  $34 = $33&1;
  if ($32) {
   if ($34) {
    $35 = $14; //@line 1081 "./src/cpp/unrar/cmddata.cpp"
    HEAP32[$35>>2] = 0; //@line 1081 "./src/cpp/unrar/cmddata.cpp"
   }
  } else {
   if ($34) {
    (__Z8wcsncatzPwPKwj($13,2720,2048)|0); //@line 1102 "./src/cpp/unrar/cmddata.cpp"
   }
  }
  $36 = $9; //@line 1106 "./src/cpp/unrar/cmddata.cpp"
  $37 = $36&1; //@line 1106 "./src/cpp/unrar/cmddata.cpp"
  if ($37) {
   $38 = (__Z10IsFullPathPKw($13)|0); //@line 1106 "./src/cpp/unrar/cmddata.cpp"
   if ($38) {
    $39 = HEAP32[$12>>2]|0; //@line 1114 "./src/cpp/unrar/cmddata.cpp"
    $40 = ($39|0)==(0); //@line 1114 "./src/cpp/unrar/cmddata.cpp"
    if ($40) {
     $41 = $8; //@line 1115 "./src/cpp/unrar/cmddata.cpp"
     __Z17ConvertNameToFullPKwPwj($41,$12,2048); //@line 1115 "./src/cpp/unrar/cmddata.cpp"
    }
    $42 = $10; //@line 1116 "./src/cpp/unrar/cmddata.cpp"
    $43 = (__Z7CmpNamePKwS0_i($13,$12,$42)|0); //@line 1116 "./src/cpp/unrar/cmddata.cpp"
    if ($43) {
     label = 13;
     break;
    } else {
     continue;
    }
   }
  }
  $44 = $11; //@line 1122 "./src/cpp/unrar/cmddata.cpp"
  $17 = $44; //@line 1122 "./src/cpp/unrar/cmddata.cpp"
  $45 = (__Z11ConvertPathPKwPw($13,0)|0); //@line 1126 "./src/cpp/unrar/cmddata.cpp"
  $18 = $45; //@line 1126 "./src/cpp/unrar/cmddata.cpp"
  $46 = $18; //@line 1128 "./src/cpp/unrar/cmddata.cpp"
  $47 = HEAP32[$46>>2]|0; //@line 1128 "./src/cpp/unrar/cmddata.cpp"
  $48 = ($47|0)==(42); //@line 1128 "./src/cpp/unrar/cmddata.cpp"
  if ($48) {
   $49 = $18; //@line 1128 "./src/cpp/unrar/cmddata.cpp"
   $50 = ((($49)) + 4|0); //@line 1128 "./src/cpp/unrar/cmddata.cpp"
   $51 = HEAP32[$50>>2]|0; //@line 1128 "./src/cpp/unrar/cmddata.cpp"
   $52 = (__Z9IsPathDivi($51)|0); //@line 1128 "./src/cpp/unrar/cmddata.cpp"
   if ($52) {
    HEAP32[$16>>2] = 46; //@line 1134 "./src/cpp/unrar/cmddata.cpp"
    $53 = ((($16)) + 4|0); //@line 1135 "./src/cpp/unrar/cmddata.cpp"
    HEAP32[$53>>2] = 47; //@line 1135 "./src/cpp/unrar/cmddata.cpp"
    $54 = ((($16)) + 8|0); //@line 1136 "./src/cpp/unrar/cmddata.cpp"
    $55 = $11; //@line 1136 "./src/cpp/unrar/cmddata.cpp"
    (__Z8wcsncpyzPwPKwj($54,$55,2048)|0); //@line 1136 "./src/cpp/unrar/cmddata.cpp"
    $17 = $16; //@line 1137 "./src/cpp/unrar/cmddata.cpp"
   }
  }
  $56 = $18; //@line 1140 "./src/cpp/unrar/cmddata.cpp"
  $57 = $17; //@line 1140 "./src/cpp/unrar/cmddata.cpp"
  $58 = $10; //@line 1140 "./src/cpp/unrar/cmddata.cpp"
  $59 = (__Z7CmpNamePKwS0_i($56,$57,$58)|0); //@line 1140 "./src/cpp/unrar/cmddata.cpp"
  if ($59) {
   label = 18;
   break;
  }
 }
 if ((label|0) == 13) {
  $$expand_i1_val = 1; //@line 1117 "./src/cpp/unrar/cmddata.cpp"
  HEAP8[$5>>0] = $$expand_i1_val; //@line 1117 "./src/cpp/unrar/cmddata.cpp"
  $$pre_trunc = HEAP8[$5>>0]|0; //@line 1145 "./src/cpp/unrar/cmddata.cpp"
  $60 = $$pre_trunc&1; //@line 1145 "./src/cpp/unrar/cmddata.cpp"
  STACKTOP = sp;return ($60|0); //@line 1145 "./src/cpp/unrar/cmddata.cpp"
 }
 else if ((label|0) == 18) {
  $$expand_i1_val2 = 1; //@line 1141 "./src/cpp/unrar/cmddata.cpp"
  HEAP8[$5>>0] = $$expand_i1_val2; //@line 1141 "./src/cpp/unrar/cmddata.cpp"
  $$pre_trunc = HEAP8[$5>>0]|0; //@line 1145 "./src/cpp/unrar/cmddata.cpp"
  $60 = $$pre_trunc&1; //@line 1145 "./src/cpp/unrar/cmddata.cpp"
  STACKTOP = sp;return ($60|0); //@line 1145 "./src/cpp/unrar/cmddata.cpp"
 }
 else if ((label|0) == 19) {
  $$expand_i1_val4 = 0; //@line 1144 "./src/cpp/unrar/cmddata.cpp"
  HEAP8[$5>>0] = $$expand_i1_val4; //@line 1144 "./src/cpp/unrar/cmddata.cpp"
  $$pre_trunc = HEAP8[$5>>0]|0; //@line 1145 "./src/cpp/unrar/cmddata.cpp"
  $60 = $$pre_trunc&1; //@line 1145 "./src/cpp/unrar/cmddata.cpp"
  STACKTOP = sp;return ($60|0); //@line 1145 "./src/cpp/unrar/cmddata.cpp"
 }
 return (0)|0;
}
function __ZN11CommandData9TimeCheckER7RarTime($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $5 = $3;
 $6 = ((($5)) + 50344|0); //@line 1173 "./src/cpp/unrar/cmddata.cpp"
 $7 = (__ZN7RarTime5IsSetEv($6)|0); //@line 1173 "./src/cpp/unrar/cmddata.cpp"
 if ($7) {
  $8 = $4; //@line 1173 "./src/cpp/unrar/cmddata.cpp"
  $9 = ((($5)) + 50344|0); //@line 1173 "./src/cpp/unrar/cmddata.cpp"
  $10 = (__ZN7RarTimegeERS_($8,$9)|0); //@line 1173 "./src/cpp/unrar/cmddata.cpp"
  if ($10) {
   $$expand_i1_val = 1; //@line 1174 "./src/cpp/unrar/cmddata.cpp"
   HEAP8[$2>>0] = $$expand_i1_val; //@line 1174 "./src/cpp/unrar/cmddata.cpp"
  } else {
   label = 4;
  }
 } else {
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $11 = ((($5)) + 50352|0); //@line 1175 "./src/cpp/unrar/cmddata.cpp"
   $12 = (__ZN7RarTime5IsSetEv($11)|0); //@line 1175 "./src/cpp/unrar/cmddata.cpp"
   if ($12) {
    $13 = $4; //@line 1175 "./src/cpp/unrar/cmddata.cpp"
    $14 = ((($5)) + 50352|0); //@line 1175 "./src/cpp/unrar/cmddata.cpp"
    $15 = (__ZN7RarTimeleERS_($13,$14)|0); //@line 1175 "./src/cpp/unrar/cmddata.cpp"
    if ($15) {
     $$expand_i1_val2 = 1; //@line 1176 "./src/cpp/unrar/cmddata.cpp"
     HEAP8[$2>>0] = $$expand_i1_val2; //@line 1176 "./src/cpp/unrar/cmddata.cpp"
     break;
    }
   }
   $$expand_i1_val4 = 0; //@line 1177 "./src/cpp/unrar/cmddata.cpp"
   HEAP8[$2>>0] = $$expand_i1_val4; //@line 1177 "./src/cpp/unrar/cmddata.cpp"
  }
 } while(0);
 $$pre_trunc = HEAP8[$2>>0]|0; //@line 1178 "./src/cpp/unrar/cmddata.cpp"
 $16 = $$pre_trunc&1; //@line 1178 "./src/cpp/unrar/cmddata.cpp"
 STACKTOP = sp;return ($16|0); //@line 1178 "./src/cpp/unrar/cmddata.cpp"
}
function __ZN7RarTimeleERS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $4; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $6 = $5; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $7 = HEAP32[$6>>2]|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $8 = (($5) + 4)|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $9 = $8; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $10 = HEAP32[$9>>2]|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $11 = $3; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $12 = $11; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $13 = $12; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $14 = HEAP32[$13>>2]|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $15 = (($12) + 4)|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $16 = $15; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $17 = HEAP32[$16>>2]|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $18 = ($10>>>0)<($17>>>0); //@line 39 "./src/cpp/unrar/timefn.hpp"
 $19 = ($7>>>0)<($14>>>0); //@line 39 "./src/cpp/unrar/timefn.hpp"
 $20 = ($10|0)==($17|0); //@line 39 "./src/cpp/unrar/timefn.hpp"
 $21 = $20 & $19; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $22 = $18 | $21; //@line 39 "./src/cpp/unrar/timefn.hpp"
 if ($22) {
  $39 = 1;
  STACKTOP = sp;return ($39|0); //@line 39 "./src/cpp/unrar/timefn.hpp"
 }
 $23 = $4; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $24 = $23; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $25 = HEAP32[$24>>2]|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $26 = (($23) + 4)|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $27 = $26; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $28 = HEAP32[$27>>2]|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $29 = $3; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $30 = $29; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $31 = $30; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $32 = HEAP32[$31>>2]|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $33 = (($30) + 4)|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $34 = $33; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $35 = HEAP32[$34>>2]|0; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $36 = ($25|0)==($32|0); //@line 39 "./src/cpp/unrar/timefn.hpp"
 $37 = ($28|0)==($35|0); //@line 39 "./src/cpp/unrar/timefn.hpp"
 $38 = $36 & $37; //@line 39 "./src/cpp/unrar/timefn.hpp"
 $39 = $38;
 STACKTOP = sp;return ($39|0); //@line 39 "./src/cpp/unrar/timefn.hpp"
}
function __ZN11CommandData9SizeCheckEx($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 12|0;
 $5 = sp;
 $4 = $0;
 $6 = $5;
 $7 = $6;
 HEAP32[$7>>2] = $1;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = $2;
 $10 = $4;
 $11 = ((($10)) + 50360|0); //@line 1186 "./src/cpp/unrar/cmddata.cpp"
 $12 = $11; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
 $13 = $12; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
 $15 = (($12) + 4)|0; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
 $16 = $15; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
 $18 = ($14|0)!=(2147483647); //@line 1186 "./src/cpp/unrar/cmddata.cpp"
 $19 = ($17|0)!=(2147483647); //@line 1186 "./src/cpp/unrar/cmddata.cpp"
 $20 = $18 | $19; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
 if ($20) {
  $21 = $5; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $22 = $21; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $23 = HEAP32[$22>>2]|0; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $24 = (($21) + 4)|0; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $25 = $24; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $26 = HEAP32[$25>>2]|0; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $27 = ((($10)) + 50360|0); //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $28 = $27; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $29 = $28; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $30 = HEAP32[$29>>2]|0; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $31 = (($28) + 4)|0; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $32 = $31; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $33 = HEAP32[$32>>2]|0; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $34 = ($26|0)>($33|0); //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $35 = ($23>>>0)>=($30>>>0); //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $36 = ($26|0)==($33|0); //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $37 = $36 & $35; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  $38 = $34 | $37; //@line 1186 "./src/cpp/unrar/cmddata.cpp"
  if ($38) {
   $$expand_i1_val = 1; //@line 1187 "./src/cpp/unrar/cmddata.cpp"
   HEAP8[$3>>0] = $$expand_i1_val; //@line 1187 "./src/cpp/unrar/cmddata.cpp"
   $$pre_trunc = HEAP8[$3>>0]|0; //@line 1191 "./src/cpp/unrar/cmddata.cpp"
   $67 = $$pre_trunc&1; //@line 1191 "./src/cpp/unrar/cmddata.cpp"
   STACKTOP = sp;return ($67|0); //@line 1191 "./src/cpp/unrar/cmddata.cpp"
  }
 }
 $39 = ((($10)) + 50368|0); //@line 1188 "./src/cpp/unrar/cmddata.cpp"
 $40 = $39; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
 $41 = $40; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
 $42 = HEAP32[$41>>2]|0; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
 $43 = (($40) + 4)|0; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
 $44 = $43; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
 $45 = HEAP32[$44>>2]|0; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
 $46 = ($42|0)!=(2147483647); //@line 1188 "./src/cpp/unrar/cmddata.cpp"
 $47 = ($45|0)!=(2147483647); //@line 1188 "./src/cpp/unrar/cmddata.cpp"
 $48 = $46 | $47; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
 if ($48) {
  $49 = $5; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $50 = $49; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $51 = HEAP32[$50>>2]|0; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $52 = (($49) + 4)|0; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $53 = $52; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $54 = HEAP32[$53>>2]|0; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $55 = ((($10)) + 50368|0); //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $56 = $55; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $57 = $56; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $58 = HEAP32[$57>>2]|0; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $59 = (($56) + 4)|0; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $60 = $59; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $61 = HEAP32[$60>>2]|0; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $62 = ($54|0)<($61|0); //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $63 = ($51>>>0)<=($58>>>0); //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $64 = ($54|0)==($61|0); //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $65 = $64 & $63; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  $66 = $62 | $65; //@line 1188 "./src/cpp/unrar/cmddata.cpp"
  if ($66) {
   $$expand_i1_val2 = 1; //@line 1189 "./src/cpp/unrar/cmddata.cpp"
   HEAP8[$3>>0] = $$expand_i1_val2; //@line 1189 "./src/cpp/unrar/cmddata.cpp"
   $$pre_trunc = HEAP8[$3>>0]|0; //@line 1191 "./src/cpp/unrar/cmddata.cpp"
   $67 = $$pre_trunc&1; //@line 1191 "./src/cpp/unrar/cmddata.cpp"
   STACKTOP = sp;return ($67|0); //@line 1191 "./src/cpp/unrar/cmddata.cpp"
  }
 }
 $$expand_i1_val4 = 0; //@line 1190 "./src/cpp/unrar/cmddata.cpp"
 HEAP8[$3>>0] = $$expand_i1_val4; //@line 1190 "./src/cpp/unrar/cmddata.cpp"
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 1191 "./src/cpp/unrar/cmddata.cpp"
 $67 = $$pre_trunc&1; //@line 1191 "./src/cpp/unrar/cmddata.cpp"
 STACKTOP = sp;return ($67|0); //@line 1191 "./src/cpp/unrar/cmddata.cpp"
}
function __ZN11CommandData13IsProcessFileER10FileHeaderPbiPwj($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $16 = $7;
 $17 = $11; //@line 1200 "./src/cpp/unrar/cmddata.cpp"
 $18 = ($17|0)!=(0|0); //@line 1200 "./src/cpp/unrar/cmddata.cpp"
 $19 = $12; //@line 1200 "./src/cpp/unrar/cmddata.cpp"
 $20 = ($19>>>0)>(0); //@line 1200 "./src/cpp/unrar/cmddata.cpp"
 $or$cond = $18 & $20; //@line 1200 "./src/cpp/unrar/cmddata.cpp"
 if ($or$cond) {
  $21 = $11; //@line 1201 "./src/cpp/unrar/cmddata.cpp"
  HEAP32[$21>>2] = 0; //@line 1201 "./src/cpp/unrar/cmddata.cpp"
 }
 $22 = $8; //@line 1202 "./src/cpp/unrar/cmddata.cpp"
 $23 = ((($22)) + 32|0); //@line 1202 "./src/cpp/unrar/cmddata.cpp"
 $24 = (_wcslen($23)|0); //@line 1202 "./src/cpp/unrar/cmddata.cpp"
 $25 = ($24>>>0)>=(2048); //@line 1202 "./src/cpp/unrar/cmddata.cpp"
 if ($25) {
  $6 = 0; //@line 1203 "./src/cpp/unrar/cmddata.cpp"
  $92 = $6; //@line 1227 "./src/cpp/unrar/cmddata.cpp"
  STACKTOP = sp;return ($92|0); //@line 1227 "./src/cpp/unrar/cmddata.cpp"
 }
 $26 = $8; //@line 1204 "./src/cpp/unrar/cmddata.cpp"
 $27 = ((($26)) + 8417|0); //@line 1204 "./src/cpp/unrar/cmddata.cpp"
 $28 = HEAP8[$27>>0]|0; //@line 1204 "./src/cpp/unrar/cmddata.cpp"
 $29 = $28&1; //@line 1204 "./src/cpp/unrar/cmddata.cpp"
 $30 = $29&1; //@line 1204 "./src/cpp/unrar/cmddata.cpp"
 $13 = $30; //@line 1204 "./src/cpp/unrar/cmddata.cpp"
 $31 = $8; //@line 1205 "./src/cpp/unrar/cmddata.cpp"
 $32 = ((($31)) + 32|0); //@line 1205 "./src/cpp/unrar/cmddata.cpp"
 $33 = $13; //@line 1205 "./src/cpp/unrar/cmddata.cpp"
 $34 = $33&1; //@line 1205 "./src/cpp/unrar/cmddata.cpp"
 $35 = (__ZN11CommandData9ExclCheckEPKwbbb($16,$32,$34,0,1)|0); //@line 1205 "./src/cpp/unrar/cmddata.cpp"
 if ($35) {
  $6 = 0; //@line 1206 "./src/cpp/unrar/cmddata.cpp"
  $92 = $6; //@line 1227 "./src/cpp/unrar/cmddata.cpp"
  STACKTOP = sp;return ($92|0); //@line 1227 "./src/cpp/unrar/cmddata.cpp"
 }
 $36 = $8; //@line 1208 "./src/cpp/unrar/cmddata.cpp"
 $37 = ((($36)) + 8240|0); //@line 1208 "./src/cpp/unrar/cmddata.cpp"
 $38 = (__ZN11CommandData9TimeCheckER7RarTime($16,$37)|0); //@line 1208 "./src/cpp/unrar/cmddata.cpp"
 if ($38) {
  $6 = 0; //@line 1209 "./src/cpp/unrar/cmddata.cpp"
  $92 = $6; //@line 1227 "./src/cpp/unrar/cmddata.cpp"
  STACKTOP = sp;return ($92|0); //@line 1227 "./src/cpp/unrar/cmddata.cpp"
 }
 $39 = $8; //@line 1210 "./src/cpp/unrar/cmddata.cpp"
 $40 = ((($39)) + 28|0); //@line 1210 "./src/cpp/unrar/cmddata.cpp"
 $41 = HEAP32[$40>>2]|0; //@line 1210 "./src/cpp/unrar/cmddata.cpp"
 $42 = HEAP32[$16>>2]|0; //@line 1210 "./src/cpp/unrar/cmddata.cpp"
 $43 = $41 & $42; //@line 1210 "./src/cpp/unrar/cmddata.cpp"
 $44 = ($43|0)!=(0); //@line 1210 "./src/cpp/unrar/cmddata.cpp"
 do {
  if (!($44)) {
   $45 = ((($16)) + 8|0); //@line 1210 "./src/cpp/unrar/cmddata.cpp"
   $46 = HEAP8[$45>>0]|0; //@line 1210 "./src/cpp/unrar/cmddata.cpp"
   $47 = $46&1; //@line 1210 "./src/cpp/unrar/cmddata.cpp"
   if ($47) {
    $48 = $8; //@line 1210 "./src/cpp/unrar/cmddata.cpp"
    $49 = ((($48)) + 28|0); //@line 1210 "./src/cpp/unrar/cmddata.cpp"
    $50 = HEAP32[$49>>2]|0; //@line 1210 "./src/cpp/unrar/cmddata.cpp"
    $51 = ((($16)) + 4|0); //@line 1210 "./src/cpp/unrar/cmddata.cpp"
    $52 = HEAP32[$51>>2]|0; //@line 1210 "./src/cpp/unrar/cmddata.cpp"
    $53 = $50 & $52; //@line 1210 "./src/cpp/unrar/cmddata.cpp"
    $54 = ($53|0)==(0); //@line 1210 "./src/cpp/unrar/cmddata.cpp"
    if ($54) {
     break;
    }
   }
   $55 = $13; //@line 1212 "./src/cpp/unrar/cmddata.cpp"
   $56 = $55&1; //@line 1212 "./src/cpp/unrar/cmddata.cpp"
   if (!($56)) {
    $57 = $8; //@line 1212 "./src/cpp/unrar/cmddata.cpp"
    $58 = ((($57)) + 8272|0); //@line 1212 "./src/cpp/unrar/cmddata.cpp"
    $59 = $58; //@line 1212 "./src/cpp/unrar/cmddata.cpp"
    $60 = $59; //@line 1212 "./src/cpp/unrar/cmddata.cpp"
    $61 = HEAP32[$60>>2]|0; //@line 1212 "./src/cpp/unrar/cmddata.cpp"
    $62 = (($59) + 4)|0; //@line 1212 "./src/cpp/unrar/cmddata.cpp"
    $63 = $62; //@line 1212 "./src/cpp/unrar/cmddata.cpp"
    $64 = HEAP32[$63>>2]|0; //@line 1212 "./src/cpp/unrar/cmddata.cpp"
    $65 = (__ZN11CommandData9SizeCheckEx($16,$61,$64)|0); //@line 1212 "./src/cpp/unrar/cmddata.cpp"
    if ($65) {
     $6 = 0; //@line 1213 "./src/cpp/unrar/cmddata.cpp"
     $92 = $6; //@line 1227 "./src/cpp/unrar/cmddata.cpp"
     STACKTOP = sp;return ($92|0); //@line 1227 "./src/cpp/unrar/cmddata.cpp"
    }
   }
   $66 = ((($16)) + 91656|0); //@line 1216 "./src/cpp/unrar/cmddata.cpp"
   __ZN10StringList6RewindEv($66); //@line 1216 "./src/cpp/unrar/cmddata.cpp"
   $15 = 1; //@line 1217 "./src/cpp/unrar/cmddata.cpp"
   while(1) {
    $67 = ((($16)) + 91656|0); //@line 1217 "./src/cpp/unrar/cmddata.cpp"
    $68 = (__ZN10StringList9GetStringEv($67)|0); //@line 1217 "./src/cpp/unrar/cmddata.cpp"
    $14 = $68; //@line 1217 "./src/cpp/unrar/cmddata.cpp"
    $69 = ($68|0)!=(0|0); //@line 1217 "./src/cpp/unrar/cmddata.cpp"
    if (!($69)) {
     label = 25;
     break;
    }
    $70 = $14; //@line 1218 "./src/cpp/unrar/cmddata.cpp"
    $71 = $8; //@line 1218 "./src/cpp/unrar/cmddata.cpp"
    $72 = ((($71)) + 32|0); //@line 1218 "./src/cpp/unrar/cmddata.cpp"
    $73 = $10; //@line 1218 "./src/cpp/unrar/cmddata.cpp"
    $74 = (__Z7CmpNamePKwS0_i($70,$72,$73)|0); //@line 1218 "./src/cpp/unrar/cmddata.cpp"
    if ($74) {
     break;
    }
    $90 = $15; //@line 1217 "./src/cpp/unrar/cmddata.cpp"
    $91 = (($90) + 1)|0; //@line 1217 "./src/cpp/unrar/cmddata.cpp"
    $15 = $91; //@line 1217 "./src/cpp/unrar/cmddata.cpp"
   }
   if ((label|0) == 25) {
    $6 = 0; //@line 1226 "./src/cpp/unrar/cmddata.cpp"
    $92 = $6; //@line 1227 "./src/cpp/unrar/cmddata.cpp"
    STACKTOP = sp;return ($92|0); //@line 1227 "./src/cpp/unrar/cmddata.cpp"
   }
   $75 = $9; //@line 1220 "./src/cpp/unrar/cmddata.cpp"
   $76 = ($75|0)!=(0|0); //@line 1220 "./src/cpp/unrar/cmddata.cpp"
   if ($76) {
    $77 = $14; //@line 1221 "./src/cpp/unrar/cmddata.cpp"
    $78 = $8; //@line 1221 "./src/cpp/unrar/cmddata.cpp"
    $79 = ((($78)) + 32|0); //@line 1221 "./src/cpp/unrar/cmddata.cpp"
    $80 = (__Z9wcsicompcPKwS0_($77,$79)|0); //@line 1221 "./src/cpp/unrar/cmddata.cpp"
    $81 = ($80|0)==(0); //@line 1221 "./src/cpp/unrar/cmddata.cpp"
    $82 = $9; //@line 1221 "./src/cpp/unrar/cmddata.cpp"
    $83 = $81&1; //@line 1221 "./src/cpp/unrar/cmddata.cpp"
    HEAP8[$82>>0] = $83; //@line 1221 "./src/cpp/unrar/cmddata.cpp"
   }
   $84 = $11; //@line 1222 "./src/cpp/unrar/cmddata.cpp"
   $85 = ($84|0)!=(0|0); //@line 1222 "./src/cpp/unrar/cmddata.cpp"
   if ($85) {
    $86 = $11; //@line 1223 "./src/cpp/unrar/cmddata.cpp"
    $87 = $14; //@line 1223 "./src/cpp/unrar/cmddata.cpp"
    $88 = $12; //@line 1223 "./src/cpp/unrar/cmddata.cpp"
    (__Z8wcsncpyzPwPKwj($86,$87,$88)|0); //@line 1223 "./src/cpp/unrar/cmddata.cpp"
   }
   $89 = $15; //@line 1224 "./src/cpp/unrar/cmddata.cpp"
   $6 = $89; //@line 1224 "./src/cpp/unrar/cmddata.cpp"
   $92 = $6; //@line 1227 "./src/cpp/unrar/cmddata.cpp"
   STACKTOP = sp;return ($92|0); //@line 1227 "./src/cpp/unrar/cmddata.cpp"
  }
 } while(0);
 $6 = 0; //@line 1211 "./src/cpp/unrar/cmddata.cpp"
 $92 = $6; //@line 1227 "./src/cpp/unrar/cmddata.cpp"
 STACKTOP = sp;return ($92|0); //@line 1227 "./src/cpp/unrar/cmddata.cpp"
}
function __ZN11CommandData10AddArcNameEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 91932|0); //@line 1303 "./src/cpp/unrar/cmddata.cpp"
 $6 = $3; //@line 1303 "./src/cpp/unrar/cmddata.cpp"
 __ZN10StringList9AddStringEPKw($5,$6); //@line 1303 "./src/cpp/unrar/cmddata.cpp"
 STACKTOP = sp;return; //@line 1304 "./src/cpp/unrar/cmddata.cpp"
}
function __Z14uiAskReplaceExP10RAROptionsPwjxP7RarTimej($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(8240|0);
 $11 = sp;
 $14 = sp + 16|0;
 $8 = $0;
 $9 = $1;
 $10 = $2;
 $16 = $11;
 $17 = $16;
 HEAP32[$17>>2] = $3;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $4;
 $12 = $5;
 $13 = $6;
 $20 = $8; //@line 13 "./src/cpp/unrar/uicommon.cpp"
 $21 = ((($20)) + 49720|0); //@line 13 "./src/cpp/unrar/uicommon.cpp"
 $22 = HEAP32[$21>>2]|0; //@line 13 "./src/cpp/unrar/uicommon.cpp"
 $23 = ($22|0)==(2); //@line 13 "./src/cpp/unrar/uicommon.cpp"
 if ($23) {
  $7 = 1; //@line 14 "./src/cpp/unrar/uicommon.cpp"
  $77 = $7; //@line 65 "./src/cpp/unrar/uicommon.cpp"
  STACKTOP = sp;return ($77|0); //@line 65 "./src/cpp/unrar/uicommon.cpp"
 }
 $24 = $8; //@line 24 "./src/cpp/unrar/uicommon.cpp"
 $25 = ((($24)) + 49796|0); //@line 24 "./src/cpp/unrar/uicommon.cpp"
 $26 = HEAP8[$25>>0]|0; //@line 24 "./src/cpp/unrar/uicommon.cpp"
 $27 = $26&1; //@line 24 "./src/cpp/unrar/uicommon.cpp"
 if (!($27)) {
  $28 = $8; //@line 24 "./src/cpp/unrar/uicommon.cpp"
  $29 = ((($28)) + 49720|0); //@line 24 "./src/cpp/unrar/uicommon.cpp"
  $30 = HEAP32[$29>>2]|0; //@line 24 "./src/cpp/unrar/uicommon.cpp"
  $31 = ($30|0)==(1); //@line 24 "./src/cpp/unrar/uicommon.cpp"
  if (!($31)) {
   $33 = $9; //@line 31 "./src/cpp/unrar/uicommon.cpp"
   (__Z8wcsncpyzPwPKwj($14,$33,2048)|0); //@line 31 "./src/cpp/unrar/uicommon.cpp"
   $34 = $11; //@line 32 "./src/cpp/unrar/uicommon.cpp"
   $35 = $34; //@line 32 "./src/cpp/unrar/uicommon.cpp"
   $36 = HEAP32[$35>>2]|0; //@line 32 "./src/cpp/unrar/uicommon.cpp"
   $37 = (($34) + 4)|0; //@line 32 "./src/cpp/unrar/uicommon.cpp"
   $38 = $37; //@line 32 "./src/cpp/unrar/uicommon.cpp"
   $39 = HEAP32[$38>>2]|0; //@line 32 "./src/cpp/unrar/uicommon.cpp"
   $40 = $12; //@line 32 "./src/cpp/unrar/uicommon.cpp"
   $41 = $13; //@line 32 "./src/cpp/unrar/uicommon.cpp"
   $42 = (__Z12uiAskReplacePwjxP7RarTimej($14,2048,$36,$39,$40,$41)|0); //@line 32 "./src/cpp/unrar/uicommon.cpp"
   $15 = $42; //@line 32 "./src/cpp/unrar/uicommon.cpp"
   $43 = $15; //@line 34 "./src/cpp/unrar/uicommon.cpp"
   $44 = ($43|0)==(0); //@line 34 "./src/cpp/unrar/uicommon.cpp"
   $45 = $15; //@line 34 "./src/cpp/unrar/uicommon.cpp"
   $46 = ($45|0)==(2); //@line 34 "./src/cpp/unrar/uicommon.cpp"
   $or$cond = $44 | $46; //@line 34 "./src/cpp/unrar/uicommon.cpp"
   if ($or$cond) {
    $47 = $9; //@line 35 "./src/cpp/unrar/uicommon.cpp"
    __Z15PrepareToDeletePKw($47); //@line 35 "./src/cpp/unrar/uicommon.cpp"
   }
   $48 = $15; //@line 37 "./src/cpp/unrar/uicommon.cpp"
   $49 = ($48|0)==(2); //@line 37 "./src/cpp/unrar/uicommon.cpp"
   if ($49) {
    $50 = $8; //@line 39 "./src/cpp/unrar/uicommon.cpp"
    $51 = ((($50)) + 49720|0); //@line 39 "./src/cpp/unrar/uicommon.cpp"
    HEAP32[$51>>2] = 1; //@line 39 "./src/cpp/unrar/uicommon.cpp"
    $7 = 0; //@line 40 "./src/cpp/unrar/uicommon.cpp"
    $77 = $7; //@line 65 "./src/cpp/unrar/uicommon.cpp"
    STACKTOP = sp;return ($77|0); //@line 65 "./src/cpp/unrar/uicommon.cpp"
   }
   $52 = $15; //@line 42 "./src/cpp/unrar/uicommon.cpp"
   $53 = ($52|0)==(3); //@line 42 "./src/cpp/unrar/uicommon.cpp"
   if ($53) {
    $54 = $8; //@line 44 "./src/cpp/unrar/uicommon.cpp"
    $55 = ((($54)) + 49720|0); //@line 44 "./src/cpp/unrar/uicommon.cpp"
    HEAP32[$55>>2] = 2; //@line 44 "./src/cpp/unrar/uicommon.cpp"
    $7 = 1; //@line 45 "./src/cpp/unrar/uicommon.cpp"
    $77 = $7; //@line 65 "./src/cpp/unrar/uicommon.cpp"
    STACKTOP = sp;return ($77|0); //@line 65 "./src/cpp/unrar/uicommon.cpp"
   }
   $56 = $15; //@line 47 "./src/cpp/unrar/uicommon.cpp"
   $57 = ($56|0)==(4); //@line 47 "./src/cpp/unrar/uicommon.cpp"
   if (!($57)) {
    $76 = $15; //@line 64 "./src/cpp/unrar/uicommon.cpp"
    $7 = $76; //@line 64 "./src/cpp/unrar/uicommon.cpp"
    $77 = $7; //@line 65 "./src/cpp/unrar/uicommon.cpp"
    STACKTOP = sp;return ($77|0); //@line 65 "./src/cpp/unrar/uicommon.cpp"
   }
   $58 = (__Z11PointToNamePKw($14)|0); //@line 49 "./src/cpp/unrar/uicommon.cpp"
   $59 = ($58|0)==($14|0); //@line 49 "./src/cpp/unrar/uicommon.cpp"
   $60 = $9;
   $61 = $10;
   if ($59) {
    __Z7SetNamePwPKwj($60,$14,$61); //@line 50 "./src/cpp/unrar/uicommon.cpp"
   } else {
    (__Z8wcsncpyzPwPKwj($60,$14,$61)|0); //@line 52 "./src/cpp/unrar/uicommon.cpp"
   }
   $62 = $9; //@line 53 "./src/cpp/unrar/uicommon.cpp"
   $63 = (__Z9FileExistPKw($62)|0); //@line 53 "./src/cpp/unrar/uicommon.cpp"
   if ($63) {
    $64 = $8; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $65 = $9; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $66 = $10; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $67 = $11; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $68 = $67; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $69 = HEAP32[$68>>2]|0; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $70 = (($67) + 4)|0; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $71 = $70; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $72 = HEAP32[$71>>2]|0; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $73 = $12; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $74 = $13; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $75 = (__Z14uiAskReplaceExP10RAROptionsPwjxP7RarTimej($64,$65,$66,$69,$72,$73,$74)|0); //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $7 = $75; //@line 54 "./src/cpp/unrar/uicommon.cpp"
    $77 = $7; //@line 65 "./src/cpp/unrar/uicommon.cpp"
    STACKTOP = sp;return ($77|0); //@line 65 "./src/cpp/unrar/uicommon.cpp"
   } else {
    $7 = 0; //@line 55 "./src/cpp/unrar/uicommon.cpp"
    $77 = $7; //@line 65 "./src/cpp/unrar/uicommon.cpp"
    STACKTOP = sp;return ($77|0); //@line 65 "./src/cpp/unrar/uicommon.cpp"
   }
  }
 }
 $32 = $9; //@line 26 "./src/cpp/unrar/uicommon.cpp"
 __Z15PrepareToDeletePKw($32); //@line 26 "./src/cpp/unrar/uicommon.cpp"
 $7 = 0; //@line 27 "./src/cpp/unrar/uicommon.cpp"
 $77 = $7; //@line 65 "./src/cpp/unrar/uicommon.cpp"
 STACKTOP = sp;return ($77|0); //@line 65 "./src/cpp/unrar/uicommon.cpp"
}
function __Z12uiAskReplacePwjxP7RarTimej($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp;
 $6 = $0;
 $7 = $1;
 $11 = $8;
 $12 = $11;
 HEAP32[$12>>2] = $2;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $3;
 $9 = $4;
 $10 = $5;
 STACKTOP = sp;return 0; //@line 4 "./src/cpp/unrar/uisilent.cpp"
}
function __Z18uiStartFileExtractPKwbbb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $8 = $1&1;
 $5 = $8;
 $9 = $2&1;
 $6 = $9;
 $10 = $3&1;
 $7 = $10;
 STACKTOP = sp;return 1; //@line 17 "./src/cpp/unrar/uisilent.cpp"
}
function __Z17uiExtractProgressxxxx($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp + 24|0;
 $9 = sp + 16|0;
 $10 = sp + 8|0;
 $11 = sp;
 $12 = $8;
 $13 = $12;
 HEAP32[$13>>2] = $0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $1;
 $16 = $9;
 $17 = $16;
 HEAP32[$17>>2] = $2;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $3;
 $20 = $10;
 $21 = $20;
 HEAP32[$21>>2] = $4;
 $22 = (($20) + 4)|0;
 $23 = $22;
 HEAP32[$23>>2] = $5;
 $24 = $11;
 $25 = $24;
 HEAP32[$25>>2] = $6;
 $26 = (($24) + 4)|0;
 $27 = $26;
 HEAP32[$27>>2] = $7;
 STACKTOP = sp;return; //@line 23 "./src/cpp/unrar/uisilent.cpp"
}
function __ZN10uiMsgStore3MsgEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 33 "./src/cpp/unrar/uisilent.cpp"
}
function __Z7uiAlarm12UIALARM_TYPE($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 44 "./src/cpp/unrar/uisilent.cpp"
}
function __GLOBAL__sub_I_bridge_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init_368();
 return;
}
function ___cxx_global_var_init_368() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN41EmscriptenBindingInitializer_stl_wrappersC2Ev(64960); //@line 146 "./src/cpp/bridge/bridge.cpp"
 return; //@line 146 "./src/cpp/bridge/bridge.cpp"
}
function __ZN41EmscriptenBindingInitializer_stl_wrappersC2Ev($0) {
 $0 = $0|0;
 var $$field = 0, $$field11 = 0, $$field14 = 0, $$field21 = 0, $$field24 = 0, $$field4 = 0, $$index1 = 0, $$index13 = 0, $$index17 = 0, $$index19 = 0, $$index23 = 0, $$index27 = 0, $$index3 = 0, $$index7 = 0, $$index9 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $4 = sp + 176|0;
 $6 = sp + 203|0;
 $7 = sp + 16|0;
 $11 = sp + 152|0;
 $13 = sp + 202|0;
 $14 = sp + 8|0;
 $18 = sp + 128|0;
 $20 = sp + 201|0;
 $21 = sp;
 $25 = sp + 200|0;
 $39 = sp + 199|0;
 $40 = sp + 48|0;
 $41 = sp + 40|0;
 $42 = sp + 32|0;
 $43 = sp + 198|0;
 $46 = sp + 197|0;
 $47 = sp + 196|0;
 $38 = $0;
 $32 = $39;
 $33 = 5489;
 __ZN10emscripten8internal11NoBaseClass6verifyI10RarArchiveEEvv(); //@line 1121 "/emscripten/system/include/emscripten/bind.h"
 $34 = 243; //@line 1123 "/emscripten/system/include/emscripten/bind.h"
 $48 = (__ZN10emscripten8internal11NoBaseClass11getUpcasterI10RarArchiveEEPFvvEv()|0); //@line 1124 "/emscripten/system/include/emscripten/bind.h"
 $35 = $48; //@line 1124 "/emscripten/system/include/emscripten/bind.h"
 $49 = (__ZN10emscripten8internal11NoBaseClass13getDowncasterI10RarArchiveEEPFvvEv()|0); //@line 1125 "/emscripten/system/include/emscripten/bind.h"
 $36 = $49; //@line 1125 "/emscripten/system/include/emscripten/bind.h"
 $37 = 244; //@line 1126 "/emscripten/system/include/emscripten/bind.h"
 $50 = (__ZN10emscripten8internal6TypeIDI10RarArchiveE3getEv()|0); //@line 1129 "/emscripten/system/include/emscripten/bind.h"
 $51 = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI10RarArchiveEEE3getEv()|0); //@line 1130 "/emscripten/system/include/emscripten/bind.h"
 $52 = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK10RarArchiveEEE3getEv()|0); //@line 1131 "/emscripten/system/include/emscripten/bind.h"
 $53 = (__ZN10emscripten8internal11NoBaseClass3getEv()|0); //@line 1132 "/emscripten/system/include/emscripten/bind.h"
 $54 = $34; //@line 1133 "/emscripten/system/include/emscripten/bind.h"
 $31 = $54;
 $55 = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $56 = $34; //@line 1134 "/emscripten/system/include/emscripten/bind.h"
 $57 = $35; //@line 1135 "/emscripten/system/include/emscripten/bind.h"
 $30 = $57;
 $58 = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $59 = $35; //@line 1136 "/emscripten/system/include/emscripten/bind.h"
 $60 = $36; //@line 1137 "/emscripten/system/include/emscripten/bind.h"
 $29 = $60;
 $61 = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $62 = $36; //@line 1138 "/emscripten/system/include/emscripten/bind.h"
 $63 = $33; //@line 1139 "/emscripten/system/include/emscripten/bind.h"
 $64 = $37; //@line 1140 "/emscripten/system/include/emscripten/bind.h"
 $28 = $64;
 $65 = (__ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $66 = $37; //@line 1141 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_class(($50|0),($51|0),($52|0),($53|0),($55|0),($56|0),($58|0),($59|0),($61|0),($62|0),($63|0),($65|0),($66|0)); //@line 1128 "/emscripten/system/include/emscripten/bind.h"
 $27 = $39;
 $67 = $27;
 $23 = $67;
 $24 = 245;
 $68 = $23;
 $26 = 246; //@line 1187 "/emscripten/system/include/emscripten/bind.h"
 $69 = (__ZN10emscripten8internal6TypeIDI10RarArchiveE3getEv()|0); //@line 1189 "/emscripten/system/include/emscripten/bind.h"
 $70 = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP10RarArchiveEE8getCountEv($25)|0); //@line 1190 "/emscripten/system/include/emscripten/bind.h"
 $71 = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP10RarArchiveEE8getTypesEv($25)|0); //@line 1191 "/emscripten/system/include/emscripten/bind.h"
 $72 = $26; //@line 1192 "/emscripten/system/include/emscripten/bind.h"
 $22 = $72;
 $73 = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $74 = $26; //@line 1193 "/emscripten/system/include/emscripten/bind.h"
 $75 = $24; //@line 1194 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_class_constructor(($69|0),($70|0),($71|0),($73|0),($74|0),($75|0)); //@line 1188 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$40>>2] = (247); //@line 150 "./src/cpp/bridge/bridge.cpp"
 $$index1 = ((($40)) + 4|0); //@line 150 "./src/cpp/bridge/bridge.cpp"
 HEAP32[$$index1>>2] = 0; //@line 150 "./src/cpp/bridge/bridge.cpp"
 ;HEAP8[$21>>0]=HEAP8[$40>>0]|0;HEAP8[$21+1>>0]=HEAP8[$40+1>>0]|0;HEAP8[$21+2>>0]=HEAP8[$40+2>>0]|0;HEAP8[$21+3>>0]=HEAP8[$40+3>>0]|0;HEAP8[$21+4>>0]=HEAP8[$40+4>>0]|0;HEAP8[$21+5>>0]=HEAP8[$40+5>>0]|0;HEAP8[$21+6>>0]=HEAP8[$40+6>>0]|0;HEAP8[$21+7>>0]=HEAP8[$40+7>>0]|0;
 $$field = HEAP32[$21>>2]|0;
 $$index3 = ((($21)) + 4|0);
 $$field4 = HEAP32[$$index3>>2]|0;
 $16 = $68;
 $17 = 5500;
 HEAP32[$18>>2] = $$field;
 $$index7 = ((($18)) + 4|0);
 HEAP32[$$index7>>2] = $$field4;
 $76 = $16;
 $19 = 248; //@line 1270 "/emscripten/system/include/emscripten/bind.h"
 $77 = (__ZN10emscripten8internal6TypeIDI10RarArchiveE3getEv()|0); //@line 1274 "/emscripten/system/include/emscripten/bind.h"
 $78 = $17; //@line 1275 "/emscripten/system/include/emscripten/bind.h"
 $79 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ9ArcHeaderNS0_17AllowedRawPointerI10RarArchiveEERKNSt3__212basic_stringIwNS8_11char_traitsIwEENS8_9allocatorIwEEEESG_bEE8getCountEv($20)|0); //@line 1276 "/emscripten/system/include/emscripten/bind.h"
 $80 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ9ArcHeaderNS0_17AllowedRawPointerI10RarArchiveEERKNSt3__212basic_stringIwNS8_11char_traitsIwEENS8_9allocatorIwEEEESG_bEE8getTypesEv($20)|0); //@line 1277 "/emscripten/system/include/emscripten/bind.h"
 $81 = $19; //@line 1278 "/emscripten/system/include/emscripten/bind.h"
 $15 = $81;
 $82 = (__ZN10emscripten8internal19getGenericSignatureIJiiiiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $83 = $19; //@line 1279 "/emscripten/system/include/emscripten/bind.h"
 $84 = (__ZN10emscripten8internal10getContextIM10RarArchiveF9ArcHeaderRKNSt3__212basic_stringIwNS4_11char_traitsIwEENS4_9allocatorIwEEEESC_bEEEPT_RKSF_($18)|0); //@line 1280 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_class_function(($77|0),($78|0),($79|0),($80|0),($82|0),($83|0),($84|0),0); //@line 1273 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$41>>2] = (249); //@line 151 "./src/cpp/bridge/bridge.cpp"
 $$index9 = ((($41)) + 4|0); //@line 151 "./src/cpp/bridge/bridge.cpp"
 HEAP32[$$index9>>2] = 0; //@line 151 "./src/cpp/bridge/bridge.cpp"
 ;HEAP8[$14>>0]=HEAP8[$41>>0]|0;HEAP8[$14+1>>0]=HEAP8[$41+1>>0]|0;HEAP8[$14+2>>0]=HEAP8[$41+2>>0]|0;HEAP8[$14+3>>0]=HEAP8[$41+3>>0]|0;HEAP8[$14+4>>0]=HEAP8[$41+4>>0]|0;HEAP8[$14+5>>0]=HEAP8[$41+5>>0]|0;HEAP8[$14+6>>0]=HEAP8[$41+6>>0]|0;HEAP8[$14+7>>0]=HEAP8[$41+7>>0]|0;
 $$field11 = HEAP32[$14>>2]|0;
 $$index13 = ((($14)) + 4|0);
 $$field14 = HEAP32[$$index13>>2]|0;
 $9 = $76;
 $10 = 5505;
 HEAP32[$11>>2] = $$field11;
 $$index17 = ((($11)) + 4|0);
 HEAP32[$$index17>>2] = $$field14;
 $85 = $9;
 $12 = 250; //@line 1270 "/emscripten/system/include/emscripten/bind.h"
 $86 = (__ZN10emscripten8internal6TypeIDI10RarArchiveE3getEv()|0); //@line 1274 "/emscripten/system/include/emscripten/bind.h"
 $87 = $10; //@line 1275 "/emscripten/system/include/emscripten/bind.h"
 $88 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ13ArcFileHeaderNS0_17AllowedRawPointerI10RarArchiveEEEE8getCountEv($13)|0); //@line 1276 "/emscripten/system/include/emscripten/bind.h"
 $89 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ13ArcFileHeaderNS0_17AllowedRawPointerI10RarArchiveEEEE8getTypesEv($13)|0); //@line 1277 "/emscripten/system/include/emscripten/bind.h"
 $90 = $12; //@line 1278 "/emscripten/system/include/emscripten/bind.h"
 $8 = $90;
 $91 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $92 = $12; //@line 1279 "/emscripten/system/include/emscripten/bind.h"
 $93 = (__ZN10emscripten8internal10getContextIM10RarArchiveF13ArcFileHeadervEEEPT_RKS6_($11)|0); //@line 1280 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_class_function(($86|0),($87|0),($88|0),($89|0),($91|0),($92|0),($93|0),0); //@line 1273 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$42>>2] = (251); //@line 152 "./src/cpp/bridge/bridge.cpp"
 $$index19 = ((($42)) + 4|0); //@line 152 "./src/cpp/bridge/bridge.cpp"
 HEAP32[$$index19>>2] = 0; //@line 152 "./src/cpp/bridge/bridge.cpp"
 ;HEAP8[$7>>0]=HEAP8[$42>>0]|0;HEAP8[$7+1>>0]=HEAP8[$42+1>>0]|0;HEAP8[$7+2>>0]=HEAP8[$42+2>>0]|0;HEAP8[$7+3>>0]=HEAP8[$42+3>>0]|0;HEAP8[$7+4>>0]=HEAP8[$42+4>>0]|0;HEAP8[$7+5>>0]=HEAP8[$42+5>>0]|0;HEAP8[$7+6>>0]=HEAP8[$42+6>>0]|0;HEAP8[$7+7>>0]=HEAP8[$42+7>>0]|0;
 $$field21 = HEAP32[$7>>2]|0;
 $$index23 = ((($7)) + 4|0);
 $$field24 = HEAP32[$$index23>>2]|0;
 $2 = $85;
 $3 = 5519;
 HEAP32[$4>>2] = $$field21;
 $$index27 = ((($4)) + 4|0);
 HEAP32[$$index27>>2] = $$field24;
 $5 = 252; //@line 1270 "/emscripten/system/include/emscripten/bind.h"
 $94 = (__ZN10emscripten8internal6TypeIDI10RarArchiveE3getEv()|0); //@line 1274 "/emscripten/system/include/emscripten/bind.h"
 $95 = $3; //@line 1275 "/emscripten/system/include/emscripten/bind.h"
 $96 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ5StateNS0_17AllowedRawPointerI10RarArchiveEEbEE8getCountEv($6)|0); //@line 1276 "/emscripten/system/include/emscripten/bind.h"
 $97 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ5StateNS0_17AllowedRawPointerI10RarArchiveEEbEE8getTypesEv($6)|0); //@line 1277 "/emscripten/system/include/emscripten/bind.h"
 $98 = $5; //@line 1278 "/emscripten/system/include/emscripten/bind.h"
 $1 = $98;
 $99 = (__ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $100 = $5; //@line 1279 "/emscripten/system/include/emscripten/bind.h"
 $101 = (__ZN10emscripten8internal10getContextIM10RarArchiveF5StatebEEEPT_RKS6_($4)|0); //@line 1280 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_class_function(($94|0),($95|0),($96|0),($97|0),($99|0),($100|0),($101|0),0); //@line 1273 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten12value_objectI5StateEC2EPKc($43,5528); //@line 155 "./src/cpp/bridge/bridge.cpp"
 __THREW__ = 0;
 $102 = (invoke_iiii(253,($43|0),(5534|0),0)|0); //@line 156 "./src/cpp/bridge/bridge.cpp"
 $103 = __THREW__; __THREW__ = 0;
 $104 = $103&1;
 if (!($104)) {
  __THREW__ = 0;
  (invoke_iiii(254,($102|0),(5542|0),4)|0); //@line 157 "./src/cpp/bridge/bridge.cpp"
  $105 = __THREW__; __THREW__ = 0;
  $106 = $105&1;
  if (!($106)) {
   __ZN10emscripten12value_objectI5StateED2Ev($43); //@line 155 "./src/cpp/bridge/bridge.cpp"
   __ZN10emscripten12value_objectI9ArcHeaderEC2EPKc($46,5550); //@line 160 "./src/cpp/bridge/bridge.cpp"
   __THREW__ = 0;
   $107 = (invoke_iiii(255,($46|0),(5560|0),0)|0); //@line 161 "./src/cpp/bridge/bridge.cpp"
   $108 = __THREW__; __THREW__ = 0;
   $109 = $108&1;
   if (!($109)) {
    __THREW__ = 0;
    $110 = (invoke_iiii(256,($107|0),(5566|0),16)|0); //@line 162 "./src/cpp/bridge/bridge.cpp"
    $111 = __THREW__; __THREW__ = 0;
    $112 = $111&1;
    if (!($112)) {
     __THREW__ = 0;
     (invoke_iiii(257,($110|0),(5574|0),28)|0); //@line 163 "./src/cpp/bridge/bridge.cpp"
     $113 = __THREW__; __THREW__ = 0;
     $114 = $113&1;
     if (!($114)) {
      __ZN10emscripten12value_objectI9ArcHeaderED2Ev($46); //@line 160 "./src/cpp/bridge/bridge.cpp"
      __ZN10emscripten12value_objectI13ArcFileHeaderEC2EPKc($47,5580); //@line 165 "./src/cpp/bridge/bridge.cpp"
      __THREW__ = 0;
      $115 = (invoke_iiii(258,($47|0),(5560|0),0)|0); //@line 166 "./src/cpp/bridge/bridge.cpp"
      $116 = __THREW__; __THREW__ = 0;
      $117 = $116&1;
      if (!($117)) {
       __THREW__ = 0;
       $118 = (invoke_iiii(259,($115|0),(5594|0),16)|0); //@line 167 "./src/cpp/bridge/bridge.cpp"
       $119 = __THREW__; __THREW__ = 0;
       $120 = $119&1;
       if (!($120)) {
        __THREW__ = 0;
        $121 = (invoke_iiii(260,($118|0),(5574|0),28)|0); //@line 168 "./src/cpp/bridge/bridge.cpp"
        $122 = __THREW__; __THREW__ = 0;
        $123 = $122&1;
        if (!($123)) {
         __THREW__ = 0;
         $124 = (invoke_iiii(261,($121|0),(5599|0),32)|0); //@line 169 "./src/cpp/bridge/bridge.cpp"
         $125 = __THREW__; __THREW__ = 0;
         $126 = $125&1;
         if (!($126)) {
          __THREW__ = 0;
          $127 = (invoke_iiii(261,($124|0),(5608|0),40)|0); //@line 170 "./src/cpp/bridge/bridge.cpp"
          $128 = __THREW__; __THREW__ = 0;
          $129 = $128&1;
          if (!($129)) {
           __THREW__ = 0;
           $130 = (invoke_iiii(260,($127|0),(5616|0),48)|0); //@line 171 "./src/cpp/bridge/bridge.cpp"
           $131 = __THREW__; __THREW__ = 0;
           $132 = $131&1;
           if (!($132)) {
            __THREW__ = 0;
            $133 = (invoke_iiii(260,($130|0),(5623|0),52)|0); //@line 172 "./src/cpp/bridge/bridge.cpp"
            $134 = __THREW__; __THREW__ = 0;
            $135 = $134&1;
            if (!($135)) {
             __THREW__ = 0;
             $136 = (invoke_iiii(260,($133|0),(5627|0),56)|0); //@line 173 "./src/cpp/bridge/bridge.cpp"
             $137 = __THREW__; __THREW__ = 0;
             $138 = $137&1;
             if (!($138)) {
              __THREW__ = 0;
              $139 = (invoke_iiii(260,($136|0),(5632|0),60)|0); //@line 174 "./src/cpp/bridge/bridge.cpp"
              $140 = __THREW__; __THREW__ = 0;
              $141 = $140&1;
              if (!($141)) {
               __THREW__ = 0;
               $142 = (invoke_iiii(260,($139|0),(5639|0),64)|0); //@line 175 "./src/cpp/bridge/bridge.cpp"
               $143 = __THREW__; __THREW__ = 0;
               $144 = $143&1;
               if (!($144)) {
                __THREW__ = 0;
                (invoke_iiii(260,($142|0),(5646|0),68)|0); //@line 176 "./src/cpp/bridge/bridge.cpp"
                $145 = __THREW__; __THREW__ = 0;
                $146 = $145&1;
                if (!($146)) {
                 __ZN10emscripten12value_objectI13ArcFileHeaderED2Ev($47); //@line 165 "./src/cpp/bridge/bridge.cpp"
                 STACKTOP = sp;return; //@line 177 "./src/cpp/bridge/bridge.cpp"
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
      $151 = ___cxa_find_matching_catch_2()|0;
      $152 = tempRet0;
      $44 = $151; //@line 177 "./src/cpp/bridge/bridge.cpp"
      $45 = $152; //@line 177 "./src/cpp/bridge/bridge.cpp"
      __ZN10emscripten12value_objectI13ArcFileHeaderED2Ev($47); //@line 165 "./src/cpp/bridge/bridge.cpp"
      $153 = $44; //@line 155 "./src/cpp/bridge/bridge.cpp"
      $154 = $45; //@line 155 "./src/cpp/bridge/bridge.cpp"
      ___resumeException($153|0);
      // unreachable;
     }
    }
   }
   $149 = ___cxa_find_matching_catch_2()|0;
   $150 = tempRet0;
   $44 = $149; //@line 177 "./src/cpp/bridge/bridge.cpp"
   $45 = $150; //@line 177 "./src/cpp/bridge/bridge.cpp"
   __ZN10emscripten12value_objectI9ArcHeaderED2Ev($46); //@line 160 "./src/cpp/bridge/bridge.cpp"
   $153 = $44; //@line 155 "./src/cpp/bridge/bridge.cpp"
   $154 = $45; //@line 155 "./src/cpp/bridge/bridge.cpp"
   ___resumeException($153|0);
   // unreachable;
  }
 }
 $147 = ___cxa_find_matching_catch_2()|0;
 $148 = tempRet0;
 $44 = $147; //@line 177 "./src/cpp/bridge/bridge.cpp"
 $45 = $148; //@line 177 "./src/cpp/bridge/bridge.cpp"
 __ZN10emscripten12value_objectI5StateED2Ev($43); //@line 155 "./src/cpp/bridge/bridge.cpp"
 $153 = $44; //@line 155 "./src/cpp/bridge/bridge.cpp"
 $154 = $45; //@line 155 "./src/cpp/bridge/bridge.cpp"
 ___resumeException($153|0);
 // unreachable;
}
function __ZN10emscripten8internal11NoBaseClass6verifyI10RarArchiveEEvv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return; //@line 1009 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal13getActualTypeI10RarArchiveEEPKvPT_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 1029 "/emscripten/system/include/emscripten/bind.h"
 $3 = (__ZN10emscripten8internal14getLightTypeIDI10RarArchiveEEPKvRKT_($2)|0); //@line 1029 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($3|0); //@line 1029 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11NoBaseClass11getUpcasterI10RarArchiveEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 1017 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11NoBaseClass13getDowncasterI10RarArchiveEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 1022 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14raw_destructorI10RarArchiveEEvPT_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 452 "/emscripten/system/include/emscripten/bind.h"
 $3 = ($2|0)==(0|0); //@line 452 "/emscripten/system/include/emscripten/bind.h"
 if (!($3)) {
  __ZN10RarArchiveD2Ev($2); //@line 452 "/emscripten/system/include/emscripten/bind.h"
  __ZdlPv($2); //@line 452 "/emscripten/system/include/emscripten/bind.h"
 }
 STACKTOP = sp;return; //@line 453 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDI10RarArchiveE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDI10RarArchiveE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI10RarArchiveEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIP10RarArchiveE3getEv()|0); //@line 121 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 121 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK10RarArchiveEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIPK10RarArchiveE3getEv()|0); //@line 121 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 121 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11NoBaseClass3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 1012 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5947|0); //@line 389 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5945|0); //@line 389 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5942|0); //@line 389 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12operator_newI10RarArchiveJEEEPT_DpOT0_() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = (__Znwj(4)|0); //@line 433 "/emscripten/system/include/emscripten/bind.h"
 __THREW__ = 0;
 invoke_vi(262,($2|0)); //@line 433 "/emscripten/system/include/emscripten/bind.h"
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $5 = ___cxa_find_matching_catch_2()|0;
  $6 = tempRet0;
  $0 = $5; //@line 434 "/emscripten/system/include/emscripten/bind.h"
  $1 = $6; //@line 434 "/emscripten/system/include/emscripten/bind.h"
  __ZdlPv($2); //@line 433 "/emscripten/system/include/emscripten/bind.h"
  $7 = $0; //@line 433 "/emscripten/system/include/emscripten/bind.h"
  $8 = $1; //@line 433 "/emscripten/system/include/emscripten/bind.h"
  ___resumeException($7|0);
  // unreachable;
 } else {
  STACKTOP = sp;return ($2|0); //@line 433 "/emscripten/system/include/emscripten/bind.h"
 }
 return (0)|0;
}
function __ZN10emscripten8internal7InvokerIP10RarArchiveJEE6invokeEPFS3_vE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 330 "/emscripten/system/include/emscripten/bind.h"
 $3 = (FUNCTION_TABLE_i[$2 & 511]()|0); //@line 330 "/emscripten/system/include/emscripten/bind.h"
 $4 = (__ZN10emscripten8internal11BindingTypeIP10RarArchiveE10toWireTypeES3_($3)|0); //@line 329 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($4|0); //@line 329 "/emscripten/system/include/emscripten/bind.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP10RarArchiveEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1; //@line 224 "/emscripten/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP10RarArchiveEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI10RarArchiveEEEEEE3getEv()|0); //@line 228 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($2|0); //@line 228 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10RarArchive4openERKNSt3__212basic_stringIwNS0_11char_traitsIwEENS0_9allocatorIwEEEES8_b($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16736|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16736|0);
 $43 = sp + 336|0;
 $44 = sp + 180|0;
 $45 = sp + 176|0;
 $49 = sp;
 $39 = $1;
 $40 = $2;
 $41 = $3;
 $50 = $4&1;
 $42 = $50;
 $51 = $39;
 _memset(($44|0),0,156)|0; //@line 73 "./src/cpp/bridge/bridge.cpp"
 $52 = $40; //@line 74 "./src/cpp/bridge/bridge.cpp"
 $38 = $52;
 $53 = $38;
 $37 = $53;
 $54 = $37;
 $36 = $54;
 $55 = $36;
 $35 = $55;
 $56 = $35;
 $34 = $56;
 $57 = $34;
 $33 = $57;
 $58 = $33;
 $59 = ((($58)) + 8|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $60 = ((($59)) + 3|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $61 = HEAP8[$60>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $62 = $61&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $63 = $62 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $64 = ($63|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($64) {
  $27 = $55;
  $65 = $27;
  $26 = $65;
  $66 = $26;
  $25 = $66;
  $67 = $25;
  $68 = HEAP32[$67>>2]|0; //@line 1295 "/emscripten/system/include/libcxx/string"
  $74 = $68;
 } else {
  $32 = $55;
  $69 = $32;
  $31 = $69;
  $70 = $31;
  $30 = $70;
  $71 = $30;
  $29 = $71;
  $72 = $29; //@line 970 "/emscripten/system/include/libcxx/memory"
  $28 = $72;
  $73 = $28; //@line 436 "/emscripten/system/include/libcxx/type_traits"
  $74 = $73;
 }
 $24 = $74;
 $75 = $24; //@line 1105 "/emscripten/system/include/libcxx/memory"
 $76 = ((($44)) + 4|0); //@line 74 "./src/cpp/bridge/bridge.cpp"
 HEAP8[$76>>0]=$75&255;HEAP8[$76+1>>0]=($75>>8)&255;HEAP8[$76+2>>0]=($75>>16)&255;HEAP8[$76+3>>0]=$75>>24; //@line 74 "./src/cpp/bridge/bridge.cpp"
 $77 = ((($44)) + 16|0); //@line 75 "./src/cpp/bridge/bridge.cpp"
 HEAP8[$77>>0]=$43&255;HEAP8[$77+1>>0]=($43>>8)&255;HEAP8[$77+2>>0]=($43>>16)&255;HEAP8[$77+3>>0]=$43>>24; //@line 75 "./src/cpp/bridge/bridge.cpp"
 $78 = ((($44)) + 20|0); //@line 76 "./src/cpp/bridge/bridge.cpp"
 HEAP8[$78>>0]=16384&255;HEAP8[$78+1>>0]=(16384>>8)&255;HEAP8[$78+2>>0]=(16384>>16)&255;HEAP8[$78+3>>0]=16384>>24; //@line 76 "./src/cpp/bridge/bridge.cpp"
 $79 = $42; //@line 77 "./src/cpp/bridge/bridge.cpp"
 $80 = $79&1; //@line 77 "./src/cpp/bridge/bridge.cpp"
 $81 = $80 ? 0 : 1; //@line 77 "./src/cpp/bridge/bridge.cpp"
 $82 = ((($44)) + 8|0); //@line 77 "./src/cpp/bridge/bridge.cpp"
 HEAP8[$82>>0]=$81&255;HEAP8[$82+1>>0]=($81>>8)&255;HEAP8[$82+2>>0]=($81>>16)&255;HEAP8[$82+3>>0]=$81>>24; //@line 77 "./src/cpp/bridge/bridge.cpp"
 $83 = ((($44)) + 36|0); //@line 78 "./src/cpp/bridge/bridge.cpp"
 HEAP8[$83>>0]=263&255;HEAP8[$83+1>>0]=(263>>8)&255;HEAP8[$83+2>>0]=(263>>16)&255;HEAP8[$83+3>>0]=263>>24; //@line 78 "./src/cpp/bridge/bridge.cpp"
 $84 = ((($44)) + 40|0); //@line 80 "./src/cpp/bridge/bridge.cpp"
 HEAP8[$84>>0]=0&255;HEAP8[$84+1>>0]=(0>>8)&255;HEAP8[$84+2>>0]=(0>>16)&255;HEAP8[$84+3>>0]=0>>24; //@line 80 "./src/cpp/bridge/bridge.cpp"
 $85 = $41; //@line 81 "./src/cpp/bridge/bridge.cpp"
 $23 = $85;
 $86 = $23;
 $22 = $86;
 $87 = $22;
 $21 = $87;
 $88 = $21;
 $20 = $88;
 $89 = $20;
 $19 = $89;
 $90 = $19;
 $18 = $90;
 $91 = $18;
 $92 = ((($91)) + 8|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $93 = ((($92)) + 3|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $94 = HEAP8[$93>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $95 = $94&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $96 = $95 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $97 = ($96|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($97) {
  $12 = $88;
  $98 = $12;
  $11 = $98;
  $99 = $11;
  $10 = $99;
  $100 = $10;
  $101 = HEAP32[$100>>2]|0; //@line 1295 "/emscripten/system/include/libcxx/string"
  $107 = $101;
 } else {
  $17 = $88;
  $102 = $17;
  $16 = $102;
  $103 = $16;
  $15 = $103;
  $104 = $15;
  $14 = $104;
  $105 = $14; //@line 970 "/emscripten/system/include/libcxx/memory"
  $13 = $105;
  $106 = $13; //@line 436 "/emscripten/system/include/libcxx/type_traits"
  $107 = $106;
 }
 $9 = $107;
 $108 = $9; //@line 1105 "/emscripten/system/include/libcxx/memory"
 __Z9WideToUtfPKwPcj($108,64832,128); //@line 81 "./src/cpp/bridge/bridge.cpp"
 $109 = (_RAROpenArchiveEx($44)|0); //@line 83 "./src/cpp/bridge/bridge.cpp"
 HEAP32[$51>>2] = $109; //@line 83 "./src/cpp/bridge/bridge.cpp"
 $$expand_i1_val = 0; //@line 85 "./src/cpp/bridge/bridge.cpp"
 HEAP8[$45>>0] = $$expand_i1_val; //@line 85 "./src/cpp/bridge/bridge.cpp"
 __ZN9ArcHeaderC2Ev($0); //@line 85 "./src/cpp/bridge/bridge.cpp"
 $110 = ((($0)) + 4|0); //@line 87 "./src/cpp/bridge/bridge.cpp"
 $7 = $110;
 $8 = 5933;
 $111 = $7;
 $112 = $8; //@line 832 "/emscripten/system/include/libcxx/string"
 __THREW__ = 0;
 (invoke_iii(264,($111|0),($112|0))|0); //@line 832 "/emscripten/system/include/libcxx/string"
 $113 = __THREW__; __THREW__ = 0;
 $114 = $113&1;
 L9: do {
  if (!($114)) {
   $115 = ((($44)) + 12|0); //@line 89 "./src/cpp/bridge/bridge.cpp"
   $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24); //@line 89 "./src/cpp/bridge/bridge.cpp"
   $117 = ($116|0)!=(0); //@line 89 "./src/cpp/bridge/bridge.cpp"
   if ($117) {
    $118 = ((($44)) + 12|0); //@line 91 "./src/cpp/bridge/bridge.cpp"
    $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24); //@line 91 "./src/cpp/bridge/bridge.cpp"
    HEAP32[$0>>2] = $119; //@line 91 "./src/cpp/bridge/bridge.cpp"
    $$expand_i1_val2 = 1; //@line 92 "./src/cpp/bridge/bridge.cpp"
    HEAP8[$45>>0] = $$expand_i1_val2; //@line 92 "./src/cpp/bridge/bridge.cpp"
    $48 = 1;
   } else {
    HEAP32[$0>>2] = 0; //@line 95 "./src/cpp/bridge/bridge.cpp"
    $122 = ((($44)) + 32|0); //@line 97 "./src/cpp/bridge/bridge.cpp"
    $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24); //@line 97 "./src/cpp/bridge/bridge.cpp"
    $124 = ((($0)) + 28|0); //@line 97 "./src/cpp/bridge/bridge.cpp"
    HEAP32[$124>>2] = $123; //@line 97 "./src/cpp/bridge/bridge.cpp"
    $125 = ((($44)) + 28|0); //@line 98 "./src/cpp/bridge/bridge.cpp"
    $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24); //@line 98 "./src/cpp/bridge/bridge.cpp"
    $127 = ($126|0)==(1); //@line 98 "./src/cpp/bridge/bridge.cpp"
    do {
     if ($127) {
      $128 = ((($44)) + 24|0); //@line 100 "./src/cpp/bridge/bridge.cpp"
      $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24); //@line 100 "./src/cpp/bridge/bridge.cpp"
      __THREW__ = 0;
      invoke_vii(265,($49|0),($129|0)); //@line 100 "./src/cpp/bridge/bridge.cpp"
      $130 = __THREW__; __THREW__ = 0;
      $131 = $130&1;
      if ($131) {
       break L9;
      }
      __THREW__ = 0;
      $132 = (invoke_iii(64,($49|0),0)|0); //@line 101 "./src/cpp/bridge/bridge.cpp"
      $133 = __THREW__; __THREW__ = 0;
      $134 = $133&1;
      if (!($134)) {
       __THREW__ = 0;
       $135 = (invoke_ii(60,($49|0))|0); //@line 101 "./src/cpp/bridge/bridge.cpp"
       $136 = __THREW__; __THREW__ = 0;
       $137 = $136&1;
       if (!($137)) {
        $138 = $135<<2; //@line 101 "./src/cpp/bridge/bridge.cpp"
        __THREW__ = 0;
        (invoke_iiii(80,($43|0),($132|0),($138|0))|0); //@line 101 "./src/cpp/bridge/bridge.cpp"
        $139 = __THREW__; __THREW__ = 0;
        $140 = $139&1;
        if (!($140)) {
         __THREW__ = 0;
         $141 = (invoke_iii(64,($49|0),0)|0); //@line 102 "./src/cpp/bridge/bridge.cpp"
         $142 = __THREW__; __THREW__ = 0;
         $143 = $142&1;
         if (!($143)) {
          $144 = ((($0)) + 16|0); //@line 102 "./src/cpp/bridge/bridge.cpp"
          $5 = $144;
          $6 = $141;
          $145 = $5;
          $146 = $6; //@line 832 "/emscripten/system/include/libcxx/string"
          __THREW__ = 0;
          (invoke_iii(266,($145|0),($146|0))|0); //@line 832 "/emscripten/system/include/libcxx/string"
          $147 = __THREW__; __THREW__ = 0;
          $148 = $147&1;
          if (!($148)) {
           __ZN5ArrayIwED2Ev($49); //@line 103 "./src/cpp/bridge/bridge.cpp"
           break;
          }
         }
        }
       }
      }
      $149 = ___cxa_find_matching_catch_2()|0;
      $150 = tempRet0;
      $46 = $149; //@line 105 "./src/cpp/bridge/bridge.cpp"
      $47 = $150; //@line 105 "./src/cpp/bridge/bridge.cpp"
      __ZN5ArrayIwED2Ev($49); //@line 103 "./src/cpp/bridge/bridge.cpp"
      __ZN9ArcHeaderD2Ev($0); //@line 105 "./src/cpp/bridge/bridge.cpp"
      $152 = $46; //@line 105 "./src/cpp/bridge/bridge.cpp"
      $153 = $47; //@line 105 "./src/cpp/bridge/bridge.cpp"
      ___resumeException($152|0);
      // unreachable;
     }
    } while(0);
    $$expand_i1_val4 = 1; //@line 104 "./src/cpp/bridge/bridge.cpp"
    HEAP8[$45>>0] = $$expand_i1_val4; //@line 104 "./src/cpp/bridge/bridge.cpp"
    $48 = 1;
   }
   $$pre_trunc = HEAP8[$45>>0]|0; //@line 105 "./src/cpp/bridge/bridge.cpp"
   $151 = $$pre_trunc&1; //@line 105 "./src/cpp/bridge/bridge.cpp"
   if ($151) {
    STACKTOP = sp;return; //@line 105 "./src/cpp/bridge/bridge.cpp"
   }
   __ZN9ArcHeaderD2Ev($0); //@line 105 "./src/cpp/bridge/bridge.cpp"
   STACKTOP = sp;return; //@line 105 "./src/cpp/bridge/bridge.cpp"
  }
 } while(0);
 $120 = ___cxa_find_matching_catch_2()|0;
 $121 = tempRet0;
 $46 = $120; //@line 105 "./src/cpp/bridge/bridge.cpp"
 $47 = $121; //@line 105 "./src/cpp/bridge/bridge.cpp"
 __ZN9ArcHeaderD2Ev($0); //@line 105 "./src/cpp/bridge/bridge.cpp"
 $152 = $46; //@line 105 "./src/cpp/bridge/bridge.cpp"
 $153 = $47; //@line 105 "./src/cpp/bridge/bridge.cpp"
 ___resumeException($152|0);
 // unreachable;
}
function __ZN10emscripten8internal13MethodInvokerIM10RarArchiveF9ArcHeaderRKNSt3__212basic_stringIwNS4_11char_traitsIwEENS4_9allocatorIwEEEESC_bES3_PS2_JSC_SC_bEE6invokeERKSE_SF_PNS0_11BindingTypeISA_EUt_ESM_b($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $10 = sp + 32|0;
 $11 = sp + 20|0;
 $12 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $15 = $4&1;
 $9 = $15;
 $16 = $6; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $17 = (__ZN10emscripten8internal11BindingTypeIP10RarArchiveE12fromWireTypeES3_($16)|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $18 = $5; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $$field = HEAP32[$18>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $$index1 = ((($18)) + 4|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $19 = $$field2 >> 1; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $20 = (($17) + ($19)|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $21 = $$field2 & 1; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $22 = ($21|0)!=(0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 if ($22) {
  $23 = HEAP32[$20>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $24 = (($23) + ($$field)|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $25 = HEAP32[$24>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $36 = $25;
 } else {
  $26 = $$field; //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $36 = $26;
 }
 $27 = $7; //@line 495 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE12fromWireTypeEPNS9_Ut_E($11,$27); //@line 495 "/emscripten/system/include/emscripten/bind.h"
 $28 = $8; //@line 495 "/emscripten/system/include/emscripten/bind.h"
 __THREW__ = 0;
 invoke_vii(267,($12|0),($28|0)); //@line 495 "/emscripten/system/include/emscripten/bind.h"
 $29 = __THREW__; __THREW__ = 0;
 $30 = $29&1;
 if ($30) {
  $42 = ___cxa_find_matching_catch_2()|0;
  $43 = tempRet0;
  $13 = $42; //@line 498 "/emscripten/system/include/emscripten/bind.h"
  $14 = $43; //@line 498 "/emscripten/system/include/emscripten/bind.h"
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11); //@line 493 "/emscripten/system/include/emscripten/bind.h"
  $48 = $13; //@line 493 "/emscripten/system/include/emscripten/bind.h"
  $49 = $14; //@line 493 "/emscripten/system/include/emscripten/bind.h"
  ___resumeException($48|0);
  // unreachable;
 }
 $31 = $9; //@line 495 "/emscripten/system/include/emscripten/bind.h"
 $32 = $31&1; //@line 495 "/emscripten/system/include/emscripten/bind.h"
 __THREW__ = 0;
 $33 = (invoke_ii(268,($32|0))|0); //@line 495 "/emscripten/system/include/emscripten/bind.h"
 $34 = __THREW__; __THREW__ = 0;
 $35 = $34&1;
 do {
  if ($35) {
   label = 10;
  } else {
   __THREW__ = 0;
   invoke_viiiii($36|0,($10|0),($20|0),($11|0),($12|0),($33|0)); //@line 494 "/emscripten/system/include/emscripten/bind.h"
   $37 = __THREW__; __THREW__ = 0;
   $38 = $37&1;
   if ($38) {
    label = 10;
   } else {
    __THREW__ = 0;
    $39 = (invoke_ii(269,($10|0))|0); //@line 493 "/emscripten/system/include/emscripten/bind.h"
    $40 = __THREW__; __THREW__ = 0;
    $41 = $40&1;
    if ($41) {
     $46 = ___cxa_find_matching_catch_2()|0;
     $47 = tempRet0;
     $13 = $46; //@line 498 "/emscripten/system/include/emscripten/bind.h"
     $14 = $47; //@line 498 "/emscripten/system/include/emscripten/bind.h"
     __ZN9ArcHeaderD2Ev($10); //@line 493 "/emscripten/system/include/emscripten/bind.h"
     break;
    } else {
     __ZN9ArcHeaderD2Ev($10); //@line 493 "/emscripten/system/include/emscripten/bind.h"
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($12); //@line 493 "/emscripten/system/include/emscripten/bind.h"
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11); //@line 493 "/emscripten/system/include/emscripten/bind.h"
     STACKTOP = sp;return ($39|0); //@line 493 "/emscripten/system/include/emscripten/bind.h"
    }
   }
  }
 } while(0);
 if ((label|0) == 10) {
  $44 = ___cxa_find_matching_catch_2()|0;
  $45 = tempRet0;
  $13 = $44; //@line 498 "/emscripten/system/include/emscripten/bind.h"
  $14 = $45; //@line 498 "/emscripten/system/include/emscripten/bind.h"
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($12); //@line 493 "/emscripten/system/include/emscripten/bind.h"
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11); //@line 493 "/emscripten/system/include/emscripten/bind.h"
 $48 = $13; //@line 493 "/emscripten/system/include/emscripten/bind.h"
 $49 = $14; //@line 493 "/emscripten/system/include/emscripten/bind.h"
 ___resumeException($48|0);
 // unreachable;
 return (0)|0;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ9ArcHeaderNS0_17AllowedRawPointerI10RarArchiveEERKNSt3__212basic_stringIwNS8_11char_traitsIwEENS8_9allocatorIwEEEESG_bEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 5; //@line 224 "/emscripten/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ9ArcHeaderNS0_17AllowedRawPointerI10RarArchiveEERKNSt3__212basic_stringIwNS8_11char_traitsIwEENS8_9allocatorIwEEEESG_bEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJ9ArcHeaderNS0_17AllowedRawPointerI10RarArchiveEERKNSt3__212basic_stringIwNS7_11char_traitsIwEENS7_9allocatorIwEEEESF_bEEEE3getEv()|0); //@line 228 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($2|0); //@line 228 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJiiiiiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5926|0); //@line 389 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal10getContextIM10RarArchiveF9ArcHeaderRKNSt3__212basic_stringIwNS4_11char_traitsIwEENS4_9allocatorIwEEEESC_bEEEPT_RKSF_($0) {
 $0 = $0|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(8)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$field = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$index1 = ((($3)) + 4|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $$field; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$index5 = ((($2)) + 4|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$$index5>>2] = $$field2; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10RarArchive13getFileHeaderEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0;
 var $44 = 0, $45 = 0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 14368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(14368|0);
 $7 = sp + 36|0;
 $9 = sp + 32|0;
 $6 = $1;
 $12 = $6;
 _memset(($7|0),0,14332)|0; //@line 110 "./src/cpp/bridge/bridge.cpp"
 $13 = HEAP32[$12>>2]|0; //@line 111 "./src/cpp/bridge/bridge.cpp"
 $14 = (_RARReadHeaderEx($13,$7)|0); //@line 111 "./src/cpp/bridge/bridge.cpp"
 $8 = $14; //@line 111 "./src/cpp/bridge/bridge.cpp"
 $$expand_i1_val = 0; //@line 113 "./src/cpp/bridge/bridge.cpp"
 HEAP8[$9>>0] = $$expand_i1_val; //@line 113 "./src/cpp/bridge/bridge.cpp"
 __ZN13ArcFileHeaderC2Ev($0); //@line 113 "./src/cpp/bridge/bridge.cpp"
 $15 = $8; //@line 115 "./src/cpp/bridge/bridge.cpp"
 HEAP32[$0>>2] = $15; //@line 115 "./src/cpp/bridge/bridge.cpp"
 $16 = ((($0)) + 4|0); //@line 116 "./src/cpp/bridge/bridge.cpp"
 $4 = $16;
 $5 = 5917;
 $17 = $4;
 $18 = $5; //@line 832 "/emscripten/system/include/libcxx/string"
 __THREW__ = 0;
 (invoke_iii(264,($17|0),($18|0))|0); //@line 832 "/emscripten/system/include/libcxx/string"
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $68 = ___cxa_find_matching_catch_2()|0;
  $69 = tempRet0;
  $10 = $68; //@line 132 "./src/cpp/bridge/bridge.cpp"
  $11 = $69; //@line 132 "./src/cpp/bridge/bridge.cpp"
  __ZN13ArcFileHeaderD2Ev($0); //@line 132 "./src/cpp/bridge/bridge.cpp"
  $70 = $10; //@line 132 "./src/cpp/bridge/bridge.cpp"
  $71 = $11; //@line 132 "./src/cpp/bridge/bridge.cpp"
  ___resumeException($70|0);
  // unreachable;
 }
 $21 = $8; //@line 118 "./src/cpp/bridge/bridge.cpp"
 $22 = ($21|0)==(0); //@line 118 "./src/cpp/bridge/bridge.cpp"
 do {
  if ($22) {
   $23 = ((($7)) + 6144|0); //@line 120 "./src/cpp/bridge/bridge.cpp"
   $24 = ((($0)) + 16|0); //@line 120 "./src/cpp/bridge/bridge.cpp"
   $2 = $24;
   $3 = $23;
   $25 = $2;
   $26 = $3; //@line 832 "/emscripten/system/include/libcxx/string"
   __THREW__ = 0;
   (invoke_iii(266,($25|0),($26|0))|0); //@line 832 "/emscripten/system/include/libcxx/string"
   $27 = __THREW__; __THREW__ = 0;
   $28 = $27&1;
   if ($28) {
    $68 = ___cxa_find_matching_catch_2()|0;
    $69 = tempRet0;
    $10 = $68; //@line 132 "./src/cpp/bridge/bridge.cpp"
    $11 = $69; //@line 132 "./src/cpp/bridge/bridge.cpp"
    __ZN13ArcFileHeaderD2Ev($0); //@line 132 "./src/cpp/bridge/bridge.cpp"
    $70 = $10; //@line 132 "./src/cpp/bridge/bridge.cpp"
    $71 = $11; //@line 132 "./src/cpp/bridge/bridge.cpp"
    ___resumeException($70|0);
    // unreachable;
   } else {
    $29 = ((($7)) + 10240|0); //@line 121 "./src/cpp/bridge/bridge.cpp"
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24); //@line 121 "./src/cpp/bridge/bridge.cpp"
    $31 = ((($0)) + 28|0); //@line 121 "./src/cpp/bridge/bridge.cpp"
    HEAP32[$31>>2] = $30; //@line 121 "./src/cpp/bridge/bridge.cpp"
    $32 = ((($7)) + 10244|0); //@line 122 "./src/cpp/bridge/bridge.cpp"
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24); //@line 122 "./src/cpp/bridge/bridge.cpp"
    $34 = (+($33>>>0)); //@line 122 "./src/cpp/bridge/bridge.cpp"
    $35 = ((($7)) + 10248|0); //@line 122 "./src/cpp/bridge/bridge.cpp"
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24); //@line 122 "./src/cpp/bridge/bridge.cpp"
    $37 = (+($36>>>0)); //@line 122 "./src/cpp/bridge/bridge.cpp"
    $38 = $37 * 4294967296.0; //@line 122 "./src/cpp/bridge/bridge.cpp"
    $39 = $34 + $38; //@line 122 "./src/cpp/bridge/bridge.cpp"
    $40 = ((($0)) + 32|0); //@line 122 "./src/cpp/bridge/bridge.cpp"
    HEAPF64[$40>>3] = $39; //@line 122 "./src/cpp/bridge/bridge.cpp"
    $41 = ((($7)) + 10252|0); //@line 123 "./src/cpp/bridge/bridge.cpp"
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24); //@line 123 "./src/cpp/bridge/bridge.cpp"
    $43 = (+($42>>>0)); //@line 123 "./src/cpp/bridge/bridge.cpp"
    $44 = ((($7)) + 10256|0); //@line 123 "./src/cpp/bridge/bridge.cpp"
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24); //@line 123 "./src/cpp/bridge/bridge.cpp"
    $46 = (+($45>>>0)); //@line 123 "./src/cpp/bridge/bridge.cpp"
    $47 = $46 * 4294967296.0; //@line 123 "./src/cpp/bridge/bridge.cpp"
    $48 = $43 + $47; //@line 123 "./src/cpp/bridge/bridge.cpp"
    $49 = ((($0)) + 40|0); //@line 123 "./src/cpp/bridge/bridge.cpp"
    HEAPF64[$49>>3] = $48; //@line 123 "./src/cpp/bridge/bridge.cpp"
    $50 = ((($7)) + 10260|0); //@line 124 "./src/cpp/bridge/bridge.cpp"
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24); //@line 124 "./src/cpp/bridge/bridge.cpp"
    $52 = ((($0)) + 48|0); //@line 124 "./src/cpp/bridge/bridge.cpp"
    HEAP32[$52>>2] = $51; //@line 124 "./src/cpp/bridge/bridge.cpp"
    $53 = ((($7)) + 10264|0); //@line 125 "./src/cpp/bridge/bridge.cpp"
    $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24); //@line 125 "./src/cpp/bridge/bridge.cpp"
    $55 = ((($0)) + 52|0); //@line 125 "./src/cpp/bridge/bridge.cpp"
    HEAP32[$55>>2] = $54; //@line 125 "./src/cpp/bridge/bridge.cpp"
    $56 = ((($7)) + 10268|0); //@line 126 "./src/cpp/bridge/bridge.cpp"
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24); //@line 126 "./src/cpp/bridge/bridge.cpp"
    $58 = ((($0)) + 56|0); //@line 126 "./src/cpp/bridge/bridge.cpp"
    HEAP32[$58>>2] = $57; //@line 126 "./src/cpp/bridge/bridge.cpp"
    $59 = ((($7)) + 10272|0); //@line 127 "./src/cpp/bridge/bridge.cpp"
    $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24); //@line 127 "./src/cpp/bridge/bridge.cpp"
    $61 = ((($0)) + 60|0); //@line 127 "./src/cpp/bridge/bridge.cpp"
    HEAP32[$61>>2] = $60; //@line 127 "./src/cpp/bridge/bridge.cpp"
    $62 = ((($7)) + 10276|0); //@line 128 "./src/cpp/bridge/bridge.cpp"
    $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24); //@line 128 "./src/cpp/bridge/bridge.cpp"
    $64 = ((($0)) + 64|0); //@line 128 "./src/cpp/bridge/bridge.cpp"
    HEAP32[$64>>2] = $63; //@line 128 "./src/cpp/bridge/bridge.cpp"
    $65 = ((($7)) + 10280|0); //@line 129 "./src/cpp/bridge/bridge.cpp"
    $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24); //@line 129 "./src/cpp/bridge/bridge.cpp"
    $67 = ((($0)) + 68|0); //@line 129 "./src/cpp/bridge/bridge.cpp"
    HEAP32[$67>>2] = $66; //@line 129 "./src/cpp/bridge/bridge.cpp"
    break;
   }
  }
 } while(0);
 $$expand_i1_val2 = 1; //@line 131 "./src/cpp/bridge/bridge.cpp"
 HEAP8[$9>>0] = $$expand_i1_val2; //@line 131 "./src/cpp/bridge/bridge.cpp"
 $$pre_trunc = HEAP8[$9>>0]|0; //@line 132 "./src/cpp/bridge/bridge.cpp"
 $72 = $$pre_trunc&1; //@line 132 "./src/cpp/bridge/bridge.cpp"
 if ($72) {
  STACKTOP = sp;return; //@line 132 "./src/cpp/bridge/bridge.cpp"
 }
 __ZN13ArcFileHeaderD2Ev($0); //@line 132 "./src/cpp/bridge/bridge.cpp"
 STACKTOP = sp;return; //@line 132 "./src/cpp/bridge/bridge.cpp"
}
function __ZN10emscripten8internal13MethodInvokerIM10RarArchiveF13ArcFileHeadervES3_PS2_JEE6invokeERKS5_S6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $7 = $3; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $8 = (__ZN10emscripten8internal11BindingTypeIP10RarArchiveE12fromWireTypeES3_($7)|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $9 = $2; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $$field = HEAP32[$9>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $$index1 = ((($9)) + 4|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $10 = $$field2 >> 1; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $11 = (($8) + ($10)|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $12 = $$field2 & 1; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $13 = ($12|0)!=(0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 if ($13) {
  $14 = HEAP32[$11>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $15 = (($14) + ($$field)|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $16 = HEAP32[$15>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $18 = $16;
 } else {
  $17 = $$field; //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $18 = $17;
 }
 FUNCTION_TABLE_vii[$18 & 511]($4,$11); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 __THREW__ = 0;
 $19 = (invoke_ii(270,($4|0))|0); //@line 493 "/emscripten/system/include/emscripten/bind.h"
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $22 = ___cxa_find_matching_catch_2()|0;
  $23 = tempRet0;
  $5 = $22; //@line 498 "/emscripten/system/include/emscripten/bind.h"
  $6 = $23; //@line 498 "/emscripten/system/include/emscripten/bind.h"
  __ZN13ArcFileHeaderD2Ev($4); //@line 493 "/emscripten/system/include/emscripten/bind.h"
  $24 = $5; //@line 493 "/emscripten/system/include/emscripten/bind.h"
  $25 = $6; //@line 493 "/emscripten/system/include/emscripten/bind.h"
  ___resumeException($24|0);
  // unreachable;
 } else {
  __ZN13ArcFileHeaderD2Ev($4); //@line 493 "/emscripten/system/include/emscripten/bind.h"
  STACKTOP = sp;return ($19|0); //@line 493 "/emscripten/system/include/emscripten/bind.h"
 }
 return (0)|0;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ13ArcFileHeaderNS0_17AllowedRawPointerI10RarArchiveEEEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 2; //@line 224 "/emscripten/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ13ArcFileHeaderNS0_17AllowedRawPointerI10RarArchiveEEEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJ13ArcFileHeaderNS0_17AllowedRawPointerI10RarArchiveEEEEEE3getEv()|0); //@line 228 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($2|0); //@line 228 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5913|0); //@line 389 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal10getContextIM10RarArchiveF13ArcFileHeadervEEEPT_RKS6_($0) {
 $0 = $0|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(8)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$field = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$index1 = ((($3)) + 4|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $$field; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$index5 = ((($2)) + 4|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$$index5>>2] = $$field2; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10RarArchive8readFileEb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 20|0;
 $5 = $1;
 $10 = $2&1;
 $6 = $10;
 $11 = $5;
 $$expand_i1_val = 0; //@line 136 "./src/cpp/bridge/bridge.cpp"
 HEAP8[$7>>0] = $$expand_i1_val; //@line 136 "./src/cpp/bridge/bridge.cpp"
 __ZN5StateC2Ev($0); //@line 136 "./src/cpp/bridge/bridge.cpp"
 $12 = HEAP32[$11>>2]|0; //@line 137 "./src/cpp/bridge/bridge.cpp"
 $13 = $6; //@line 137 "./src/cpp/bridge/bridge.cpp"
 $14 = $13&1; //@line 137 "./src/cpp/bridge/bridge.cpp"
 $15 = $14 ? 0 : 2; //@line 137 "./src/cpp/bridge/bridge.cpp"
 __THREW__ = 0;
 $16 = (invoke_iiiii(75,($12|0),($15|0),(0|0),(0|0))|0); //@line 137 "./src/cpp/bridge/bridge.cpp"
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if (!($18)) {
  HEAP32[$0>>2] = $16; //@line 137 "./src/cpp/bridge/bridge.cpp"
  $19 = ((($0)) + 4|0); //@line 138 "./src/cpp/bridge/bridge.cpp"
  $3 = $19;
  $4 = 5901;
  $20 = $3;
  $21 = $4; //@line 832 "/emscripten/system/include/libcxx/string"
  __THREW__ = 0;
  (invoke_iii(264,($20|0),($21|0))|0); //@line 832 "/emscripten/system/include/libcxx/string"
  $22 = __THREW__; __THREW__ = 0;
  $23 = $22&1;
  if (!($23)) {
   $$expand_i1_val2 = 1; //@line 139 "./src/cpp/bridge/bridge.cpp"
   HEAP8[$7>>0] = $$expand_i1_val2; //@line 139 "./src/cpp/bridge/bridge.cpp"
   $$pre_trunc = HEAP8[$7>>0]|0; //@line 140 "./src/cpp/bridge/bridge.cpp"
   $24 = $$pre_trunc&1; //@line 140 "./src/cpp/bridge/bridge.cpp"
   if ($24) {
    STACKTOP = sp;return; //@line 140 "./src/cpp/bridge/bridge.cpp"
   }
   __ZN5StateD2Ev($0); //@line 140 "./src/cpp/bridge/bridge.cpp"
   STACKTOP = sp;return; //@line 140 "./src/cpp/bridge/bridge.cpp"
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $8 = $25; //@line 140 "./src/cpp/bridge/bridge.cpp"
 $9 = $26; //@line 140 "./src/cpp/bridge/bridge.cpp"
 __ZN5StateD2Ev($0); //@line 140 "./src/cpp/bridge/bridge.cpp"
 $27 = $8; //@line 140 "./src/cpp/bridge/bridge.cpp"
 $28 = $9; //@line 140 "./src/cpp/bridge/bridge.cpp"
 ___resumeException($27|0);
 // unreachable;
}
function __ZN10emscripten8internal13MethodInvokerIM10RarArchiveF5StatebES3_PS2_JbEE6invokeERKS5_S6_b($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $9 = $2&1;
 $5 = $9;
 $10 = $4; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $11 = (__ZN10emscripten8internal11BindingTypeIP10RarArchiveE12fromWireTypeES3_($10)|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $12 = $3; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $$field = HEAP32[$12>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $$index1 = ((($12)) + 4|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $13 = $$field2 >> 1; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $14 = (($11) + ($13)|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $15 = $$field2 & 1; //@line 494 "/emscripten/system/include/emscripten/bind.h"
 $16 = ($15|0)!=(0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 if ($16) {
  $17 = HEAP32[$14>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $18 = (($17) + ($$field)|0); //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $19 = HEAP32[$18>>2]|0; //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $24 = $19;
 } else {
  $20 = $$field; //@line 494 "/emscripten/system/include/emscripten/bind.h"
  $24 = $20;
 }
 $21 = $5; //@line 495 "/emscripten/system/include/emscripten/bind.h"
 $22 = $21&1; //@line 495 "/emscripten/system/include/emscripten/bind.h"
 $23 = (__ZN10emscripten8internal11BindingTypeIbE12fromWireTypeEb($22)|0); //@line 495 "/emscripten/system/include/emscripten/bind.h"
 FUNCTION_TABLE_viii[$24 & 511]($6,$14,$23); //@line 494 "/emscripten/system/include/emscripten/bind.h"
 __THREW__ = 0;
 $25 = (invoke_ii(271,($6|0))|0); //@line 493 "/emscripten/system/include/emscripten/bind.h"
 $26 = __THREW__; __THREW__ = 0;
 $27 = $26&1;
 if ($27) {
  $28 = ___cxa_find_matching_catch_2()|0;
  $29 = tempRet0;
  $7 = $28; //@line 498 "/emscripten/system/include/emscripten/bind.h"
  $8 = $29; //@line 498 "/emscripten/system/include/emscripten/bind.h"
  __ZN5StateD2Ev($6); //@line 493 "/emscripten/system/include/emscripten/bind.h"
  $30 = $7; //@line 493 "/emscripten/system/include/emscripten/bind.h"
  $31 = $8; //@line 493 "/emscripten/system/include/emscripten/bind.h"
  ___resumeException($30|0);
  // unreachable;
 } else {
  __ZN5StateD2Ev($6); //@line 493 "/emscripten/system/include/emscripten/bind.h"
  STACKTOP = sp;return ($25|0); //@line 493 "/emscripten/system/include/emscripten/bind.h"
 }
 return (0)|0;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ5StateNS0_17AllowedRawPointerI10RarArchiveEEbEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 3; //@line 224 "/emscripten/system/include/emscripten/wire.h"
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJ5StateNS0_17AllowedRawPointerI10RarArchiveEEbEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJ5StateNS0_17AllowedRawPointerI10RarArchiveEEbEEEE3getEv()|0); //@line 228 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($2|0); //@line 228 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5869|0); //@line 389 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal10getContextIM10RarArchiveF5StatebEEEPT_RKS6_($0) {
 $0 = $0|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(8)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$field = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$index1 = ((($3)) + 4|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$field2 = HEAP32[$$index1>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $$field; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $$index5 = ((($2)) + 4|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$$index5>>2] = $$field2; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI5StateEC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $10 = $4;
 __ZN10emscripten8internal11noncopyableC2Ev($10); //@line 766 "/emscripten/system/include/emscripten/bind.h"
 $6 = 272; //@line 769 "/emscripten/system/include/emscripten/bind.h"
 $7 = 273; //@line 770 "/emscripten/system/include/emscripten/bind.h"
 __THREW__ = 0;
 $11 = (invoke_i(274)|0); //@line 773 "/emscripten/system/include/emscripten/bind.h"
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if (!($13)) {
  $14 = $5; //@line 774 "/emscripten/system/include/emscripten/bind.h"
  $15 = $6; //@line 775 "/emscripten/system/include/emscripten/bind.h"
  $3 = $15;
  $16 = (__ZN10emscripten8internal19getGenericSignatureIJiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
  $17 = $6; //@line 776 "/emscripten/system/include/emscripten/bind.h"
  $18 = $7; //@line 777 "/emscripten/system/include/emscripten/bind.h"
  $2 = $18;
  $19 = (__ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
  $20 = $7; //@line 778 "/emscripten/system/include/emscripten/bind.h"
  __THREW__ = 0;
  invoke_viiiiii(275,($11|0),($14|0),($16|0),($17|0),($19|0),($20|0)); //@line 772 "/emscripten/system/include/emscripten/bind.h"
  $21 = __THREW__; __THREW__ = 0;
  $22 = $21&1;
  if (!($22)) {
   STACKTOP = sp;return; //@line 779 "/emscripten/system/include/emscripten/bind.h"
  }
 }
 $23 = ___cxa_find_matching_catch_2()|0;
 $24 = tempRet0;
 $8 = $23; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 $9 = $24; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11noncopyableD2Ev($10); //@line 779 "/emscripten/system/include/emscripten/bind.h"
 $25 = $8; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 $26 = $9; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 ___resumeException($25|0);
 // unreachable;
}
function __ZN10emscripten12value_objectI5StateE5fieldIS1_jEERS2_PKcMT_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 HEAP32[$7>>2] = $2;
 $10 = $5;
 $8 = 276; //@line 790 "/emscripten/system/include/emscripten/bind.h"
 $9 = 277; //@line 792 "/emscripten/system/include/emscripten/bind.h"
 $11 = (__ZN10emscripten8internal6TypeIDI5StateE3getEv()|0); //@line 796 "/emscripten/system/include/emscripten/bind.h"
 $12 = $6; //@line 797 "/emscripten/system/include/emscripten/bind.h"
 $13 = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0); //@line 798 "/emscripten/system/include/emscripten/bind.h"
 $14 = $8; //@line 799 "/emscripten/system/include/emscripten/bind.h"
 $4 = $14;
 $15 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $16 = $8; //@line 800 "/emscripten/system/include/emscripten/bind.h"
 $17 = (__ZN10emscripten8internal10getContextIM5StatejEEPT_RKS4_($7)|0); //@line 801 "/emscripten/system/include/emscripten/bind.h"
 $18 = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0); //@line 802 "/emscripten/system/include/emscripten/bind.h"
 $19 = $9; //@line 803 "/emscripten/system/include/emscripten/bind.h"
 $3 = $19;
 $20 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $21 = $9; //@line 804 "/emscripten/system/include/emscripten/bind.h"
 $22 = (__ZN10emscripten8internal10getContextIM5StatejEEPT_RKS4_($7)|0); //@line 805 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_value_object_field(($11|0),($12|0),($13|0),($15|0),($16|0),($17|0),($18|0),($20|0),($21|0),($22|0)); //@line 795 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($10|0); //@line 806 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI5StateE5fieldIS1_NSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEERS2_PKcMT_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 HEAP32[$7>>2] = $2;
 $10 = $5;
 $8 = 278; //@line 790 "/emscripten/system/include/emscripten/bind.h"
 $9 = 279; //@line 792 "/emscripten/system/include/emscripten/bind.h"
 $11 = (__ZN10emscripten8internal6TypeIDI5StateE3getEv()|0); //@line 796 "/emscripten/system/include/emscripten/bind.h"
 $12 = $6; //@line 797 "/emscripten/system/include/emscripten/bind.h"
 $13 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0); //@line 798 "/emscripten/system/include/emscripten/bind.h"
 $14 = $8; //@line 799 "/emscripten/system/include/emscripten/bind.h"
 $4 = $14;
 $15 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $16 = $8; //@line 800 "/emscripten/system/include/emscripten/bind.h"
 $17 = (__ZN10emscripten8internal10getContextIM5StateNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEPT_RKSB_($7)|0); //@line 801 "/emscripten/system/include/emscripten/bind.h"
 $18 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0); //@line 802 "/emscripten/system/include/emscripten/bind.h"
 $19 = $9; //@line 803 "/emscripten/system/include/emscripten/bind.h"
 $3 = $19;
 $20 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $21 = $9; //@line 804 "/emscripten/system/include/emscripten/bind.h"
 $22 = (__ZN10emscripten8internal10getContextIM5StateNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEPT_RKSB_($7)|0); //@line 805 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_value_object_field(($11|0),($12|0),($13|0),($15|0),($16|0),($17|0),($18|0),($20|0),($21|0),($22|0)); //@line 795 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($10|0); //@line 806 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI5StateED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __THREW__ = 0;
 $5 = (invoke_i(274)|0); //@line 783 "/emscripten/system/include/emscripten/bind.h"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(280,($5|0)); //@line 783 "/emscripten/system/include/emscripten/bind.h"
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   __ZN10emscripten8internal11noncopyableD2Ev($4); //@line 784 "/emscripten/system/include/emscripten/bind.h"
   STACKTOP = sp;return; //@line 784 "/emscripten/system/include/emscripten/bind.h"
  }
 }
 $10 = ___cxa_find_matching_catch_3(0|0)|0;
 $11 = tempRet0;
 $2 = $10; //@line 784 "/emscripten/system/include/emscripten/bind.h"
 $3 = $11; //@line 784 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11noncopyableD2Ev($4); //@line 784 "/emscripten/system/include/emscripten/bind.h"
 $12 = $2; //@line 784 "/emscripten/system/include/emscripten/bind.h"
 ___clang_call_terminate($12); //@line 784 "/emscripten/system/include/emscripten/bind.h"
 // unreachable; //@line 784 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI9ArcHeaderEC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $10 = $4;
 __ZN10emscripten8internal11noncopyableC2Ev($10); //@line 766 "/emscripten/system/include/emscripten/bind.h"
 $6 = 281; //@line 769 "/emscripten/system/include/emscripten/bind.h"
 $7 = 282; //@line 770 "/emscripten/system/include/emscripten/bind.h"
 __THREW__ = 0;
 $11 = (invoke_i(283)|0); //@line 773 "/emscripten/system/include/emscripten/bind.h"
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if (!($13)) {
  $14 = $5; //@line 774 "/emscripten/system/include/emscripten/bind.h"
  $15 = $6; //@line 775 "/emscripten/system/include/emscripten/bind.h"
  $3 = $15;
  $16 = (__ZN10emscripten8internal19getGenericSignatureIJiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
  $17 = $6; //@line 776 "/emscripten/system/include/emscripten/bind.h"
  $18 = $7; //@line 777 "/emscripten/system/include/emscripten/bind.h"
  $2 = $18;
  $19 = (__ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
  $20 = $7; //@line 778 "/emscripten/system/include/emscripten/bind.h"
  __THREW__ = 0;
  invoke_viiiiii(275,($11|0),($14|0),($16|0),($17|0),($19|0),($20|0)); //@line 772 "/emscripten/system/include/emscripten/bind.h"
  $21 = __THREW__; __THREW__ = 0;
  $22 = $21&1;
  if (!($22)) {
   STACKTOP = sp;return; //@line 779 "/emscripten/system/include/emscripten/bind.h"
  }
 }
 $23 = ___cxa_find_matching_catch_2()|0;
 $24 = tempRet0;
 $8 = $23; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 $9 = $24; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11noncopyableD2Ev($10); //@line 779 "/emscripten/system/include/emscripten/bind.h"
 $25 = $8; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 $26 = $9; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 ___resumeException($25|0);
 // unreachable;
}
function __ZN10emscripten12value_objectI9ArcHeaderE5fieldIS1_5StateEERS2_PKcMT_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 HEAP32[$7>>2] = $2;
 $10 = $5;
 $8 = 284; //@line 790 "/emscripten/system/include/emscripten/bind.h"
 $9 = 285; //@line 792 "/emscripten/system/include/emscripten/bind.h"
 $11 = (__ZN10emscripten8internal6TypeIDI9ArcHeaderE3getEv()|0); //@line 796 "/emscripten/system/include/emscripten/bind.h"
 $12 = $6; //@line 797 "/emscripten/system/include/emscripten/bind.h"
 $13 = (__ZN10emscripten8internal6TypeIDI5StateE3getEv()|0); //@line 798 "/emscripten/system/include/emscripten/bind.h"
 $14 = $8; //@line 799 "/emscripten/system/include/emscripten/bind.h"
 $4 = $14;
 $15 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $16 = $8; //@line 800 "/emscripten/system/include/emscripten/bind.h"
 $17 = (__ZN10emscripten8internal10getContextIM9ArcHeader5StateEEPT_RKS5_($7)|0); //@line 801 "/emscripten/system/include/emscripten/bind.h"
 $18 = (__ZN10emscripten8internal6TypeIDI5StateE3getEv()|0); //@line 802 "/emscripten/system/include/emscripten/bind.h"
 $19 = $9; //@line 803 "/emscripten/system/include/emscripten/bind.h"
 $3 = $19;
 $20 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $21 = $9; //@line 804 "/emscripten/system/include/emscripten/bind.h"
 $22 = (__ZN10emscripten8internal10getContextIM9ArcHeader5StateEEPT_RKS5_($7)|0); //@line 805 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_value_object_field(($11|0),($12|0),($13|0),($15|0),($16|0),($17|0),($18|0),($20|0),($21|0),($22|0)); //@line 795 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($10|0); //@line 806 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI9ArcHeaderE5fieldIS1_NSt3__212basic_stringIwNS4_11char_traitsIwEENS4_9allocatorIwEEEEEERS2_PKcMT_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 HEAP32[$7>>2] = $2;
 $10 = $5;
 $8 = 286; //@line 790 "/emscripten/system/include/emscripten/bind.h"
 $9 = 287; //@line 792 "/emscripten/system/include/emscripten/bind.h"
 $11 = (__ZN10emscripten8internal6TypeIDI9ArcHeaderE3getEv()|0); //@line 796 "/emscripten/system/include/emscripten/bind.h"
 $12 = $6; //@line 797 "/emscripten/system/include/emscripten/bind.h"
 $13 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0); //@line 798 "/emscripten/system/include/emscripten/bind.h"
 $14 = $8; //@line 799 "/emscripten/system/include/emscripten/bind.h"
 $4 = $14;
 $15 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $16 = $8; //@line 800 "/emscripten/system/include/emscripten/bind.h"
 $17 = (__ZN10emscripten8internal10getContextIM9ArcHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEEEPT_RKSB_($7)|0); //@line 801 "/emscripten/system/include/emscripten/bind.h"
 $18 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0); //@line 802 "/emscripten/system/include/emscripten/bind.h"
 $19 = $9; //@line 803 "/emscripten/system/include/emscripten/bind.h"
 $3 = $19;
 $20 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $21 = $9; //@line 804 "/emscripten/system/include/emscripten/bind.h"
 $22 = (__ZN10emscripten8internal10getContextIM9ArcHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEEEPT_RKSB_($7)|0); //@line 805 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_value_object_field(($11|0),($12|0),($13|0),($15|0),($16|0),($17|0),($18|0),($20|0),($21|0),($22|0)); //@line 795 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($10|0); //@line 806 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI9ArcHeaderE5fieldIS1_jEERS2_PKcMT_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 HEAP32[$7>>2] = $2;
 $10 = $5;
 $8 = 288; //@line 790 "/emscripten/system/include/emscripten/bind.h"
 $9 = 289; //@line 792 "/emscripten/system/include/emscripten/bind.h"
 $11 = (__ZN10emscripten8internal6TypeIDI9ArcHeaderE3getEv()|0); //@line 796 "/emscripten/system/include/emscripten/bind.h"
 $12 = $6; //@line 797 "/emscripten/system/include/emscripten/bind.h"
 $13 = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0); //@line 798 "/emscripten/system/include/emscripten/bind.h"
 $14 = $8; //@line 799 "/emscripten/system/include/emscripten/bind.h"
 $4 = $14;
 $15 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $16 = $8; //@line 800 "/emscripten/system/include/emscripten/bind.h"
 $17 = (__ZN10emscripten8internal10getContextIM9ArcHeaderjEEPT_RKS4_($7)|0); //@line 801 "/emscripten/system/include/emscripten/bind.h"
 $18 = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0); //@line 802 "/emscripten/system/include/emscripten/bind.h"
 $19 = $9; //@line 803 "/emscripten/system/include/emscripten/bind.h"
 $3 = $19;
 $20 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $21 = $9; //@line 804 "/emscripten/system/include/emscripten/bind.h"
 $22 = (__ZN10emscripten8internal10getContextIM9ArcHeaderjEEPT_RKS4_($7)|0); //@line 805 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_value_object_field(($11|0),($12|0),($13|0),($15|0),($16|0),($17|0),($18|0),($20|0),($21|0),($22|0)); //@line 795 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($10|0); //@line 806 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI9ArcHeaderED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __THREW__ = 0;
 $5 = (invoke_i(283)|0); //@line 783 "/emscripten/system/include/emscripten/bind.h"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(280,($5|0)); //@line 783 "/emscripten/system/include/emscripten/bind.h"
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   __ZN10emscripten8internal11noncopyableD2Ev($4); //@line 784 "/emscripten/system/include/emscripten/bind.h"
   STACKTOP = sp;return; //@line 784 "/emscripten/system/include/emscripten/bind.h"
  }
 }
 $10 = ___cxa_find_matching_catch_3(0|0)|0;
 $11 = tempRet0;
 $2 = $10; //@line 784 "/emscripten/system/include/emscripten/bind.h"
 $3 = $11; //@line 784 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11noncopyableD2Ev($4); //@line 784 "/emscripten/system/include/emscripten/bind.h"
 $12 = $2; //@line 784 "/emscripten/system/include/emscripten/bind.h"
 ___clang_call_terminate($12); //@line 784 "/emscripten/system/include/emscripten/bind.h"
 // unreachable; //@line 784 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI13ArcFileHeaderEC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $10 = $4;
 __ZN10emscripten8internal11noncopyableC2Ev($10); //@line 766 "/emscripten/system/include/emscripten/bind.h"
 $6 = 290; //@line 769 "/emscripten/system/include/emscripten/bind.h"
 $7 = 291; //@line 770 "/emscripten/system/include/emscripten/bind.h"
 __THREW__ = 0;
 $11 = (invoke_i(292)|0); //@line 773 "/emscripten/system/include/emscripten/bind.h"
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if (!($13)) {
  $14 = $5; //@line 774 "/emscripten/system/include/emscripten/bind.h"
  $15 = $6; //@line 775 "/emscripten/system/include/emscripten/bind.h"
  $3 = $15;
  $16 = (__ZN10emscripten8internal19getGenericSignatureIJiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
  $17 = $6; //@line 776 "/emscripten/system/include/emscripten/bind.h"
  $18 = $7; //@line 777 "/emscripten/system/include/emscripten/bind.h"
  $2 = $18;
  $19 = (__ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
  $20 = $7; //@line 778 "/emscripten/system/include/emscripten/bind.h"
  __THREW__ = 0;
  invoke_viiiiii(275,($11|0),($14|0),($16|0),($17|0),($19|0),($20|0)); //@line 772 "/emscripten/system/include/emscripten/bind.h"
  $21 = __THREW__; __THREW__ = 0;
  $22 = $21&1;
  if (!($22)) {
   STACKTOP = sp;return; //@line 779 "/emscripten/system/include/emscripten/bind.h"
  }
 }
 $23 = ___cxa_find_matching_catch_2()|0;
 $24 = tempRet0;
 $8 = $23; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 $9 = $24; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11noncopyableD2Ev($10); //@line 779 "/emscripten/system/include/emscripten/bind.h"
 $25 = $8; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 $26 = $9; //@line 779 "/emscripten/system/include/emscripten/bind.h"
 ___resumeException($25|0);
 // unreachable;
}
function __ZN10emscripten12value_objectI13ArcFileHeaderE5fieldIS1_5StateEERS2_PKcMT_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 HEAP32[$7>>2] = $2;
 $10 = $5;
 $8 = 293; //@line 790 "/emscripten/system/include/emscripten/bind.h"
 $9 = 294; //@line 792 "/emscripten/system/include/emscripten/bind.h"
 $11 = (__ZN10emscripten8internal6TypeIDI13ArcFileHeaderE3getEv()|0); //@line 796 "/emscripten/system/include/emscripten/bind.h"
 $12 = $6; //@line 797 "/emscripten/system/include/emscripten/bind.h"
 $13 = (__ZN10emscripten8internal6TypeIDI5StateE3getEv()|0); //@line 798 "/emscripten/system/include/emscripten/bind.h"
 $14 = $8; //@line 799 "/emscripten/system/include/emscripten/bind.h"
 $4 = $14;
 $15 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $16 = $8; //@line 800 "/emscripten/system/include/emscripten/bind.h"
 $17 = (__ZN10emscripten8internal10getContextIM13ArcFileHeader5StateEEPT_RKS5_($7)|0); //@line 801 "/emscripten/system/include/emscripten/bind.h"
 $18 = (__ZN10emscripten8internal6TypeIDI5StateE3getEv()|0); //@line 802 "/emscripten/system/include/emscripten/bind.h"
 $19 = $9; //@line 803 "/emscripten/system/include/emscripten/bind.h"
 $3 = $19;
 $20 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $21 = $9; //@line 804 "/emscripten/system/include/emscripten/bind.h"
 $22 = (__ZN10emscripten8internal10getContextIM13ArcFileHeader5StateEEPT_RKS5_($7)|0); //@line 805 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_value_object_field(($11|0),($12|0),($13|0),($15|0),($16|0),($17|0),($18|0),($20|0),($21|0),($22|0)); //@line 795 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($10|0); //@line 806 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI13ArcFileHeaderE5fieldIS1_NSt3__212basic_stringIwNS4_11char_traitsIwEENS4_9allocatorIwEEEEEERS2_PKcMT_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 HEAP32[$7>>2] = $2;
 $10 = $5;
 $8 = 295; //@line 790 "/emscripten/system/include/emscripten/bind.h"
 $9 = 296; //@line 792 "/emscripten/system/include/emscripten/bind.h"
 $11 = (__ZN10emscripten8internal6TypeIDI13ArcFileHeaderE3getEv()|0); //@line 796 "/emscripten/system/include/emscripten/bind.h"
 $12 = $6; //@line 797 "/emscripten/system/include/emscripten/bind.h"
 $13 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0); //@line 798 "/emscripten/system/include/emscripten/bind.h"
 $14 = $8; //@line 799 "/emscripten/system/include/emscripten/bind.h"
 $4 = $14;
 $15 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $16 = $8; //@line 800 "/emscripten/system/include/emscripten/bind.h"
 $17 = (__ZN10emscripten8internal10getContextIM13ArcFileHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEEEPT_RKSB_($7)|0); //@line 801 "/emscripten/system/include/emscripten/bind.h"
 $18 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0); //@line 802 "/emscripten/system/include/emscripten/bind.h"
 $19 = $9; //@line 803 "/emscripten/system/include/emscripten/bind.h"
 $3 = $19;
 $20 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $21 = $9; //@line 804 "/emscripten/system/include/emscripten/bind.h"
 $22 = (__ZN10emscripten8internal10getContextIM13ArcFileHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEEEPT_RKSB_($7)|0); //@line 805 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_value_object_field(($11|0),($12|0),($13|0),($15|0),($16|0),($17|0),($18|0),($20|0),($21|0),($22|0)); //@line 795 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($10|0); //@line 806 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI13ArcFileHeaderE5fieldIS1_jEERS2_PKcMT_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 HEAP32[$7>>2] = $2;
 $10 = $5;
 $8 = 297; //@line 790 "/emscripten/system/include/emscripten/bind.h"
 $9 = 298; //@line 792 "/emscripten/system/include/emscripten/bind.h"
 $11 = (__ZN10emscripten8internal6TypeIDI13ArcFileHeaderE3getEv()|0); //@line 796 "/emscripten/system/include/emscripten/bind.h"
 $12 = $6; //@line 797 "/emscripten/system/include/emscripten/bind.h"
 $13 = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0); //@line 798 "/emscripten/system/include/emscripten/bind.h"
 $14 = $8; //@line 799 "/emscripten/system/include/emscripten/bind.h"
 $4 = $14;
 $15 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $16 = $8; //@line 800 "/emscripten/system/include/emscripten/bind.h"
 $17 = (__ZN10emscripten8internal10getContextIM13ArcFileHeaderjEEPT_RKS4_($7)|0); //@line 801 "/emscripten/system/include/emscripten/bind.h"
 $18 = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0); //@line 802 "/emscripten/system/include/emscripten/bind.h"
 $19 = $9; //@line 803 "/emscripten/system/include/emscripten/bind.h"
 $3 = $19;
 $20 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $21 = $9; //@line 804 "/emscripten/system/include/emscripten/bind.h"
 $22 = (__ZN10emscripten8internal10getContextIM13ArcFileHeaderjEEPT_RKS4_($7)|0); //@line 805 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_value_object_field(($11|0),($12|0),($13|0),($15|0),($16|0),($17|0),($18|0),($20|0),($21|0),($22|0)); //@line 795 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($10|0); //@line 806 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI13ArcFileHeaderE5fieldIS1_dEERS2_PKcMT_T0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 HEAP32[$7>>2] = $2;
 $10 = $5;
 $8 = 299; //@line 790 "/emscripten/system/include/emscripten/bind.h"
 $9 = 300; //@line 792 "/emscripten/system/include/emscripten/bind.h"
 $11 = (__ZN10emscripten8internal6TypeIDI13ArcFileHeaderE3getEv()|0); //@line 796 "/emscripten/system/include/emscripten/bind.h"
 $12 = $6; //@line 797 "/emscripten/system/include/emscripten/bind.h"
 $13 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 798 "/emscripten/system/include/emscripten/bind.h"
 $14 = $8; //@line 799 "/emscripten/system/include/emscripten/bind.h"
 $4 = $14;
 $15 = (__ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $16 = $8; //@line 800 "/emscripten/system/include/emscripten/bind.h"
 $17 = (__ZN10emscripten8internal10getContextIM13ArcFileHeaderdEEPT_RKS4_($7)|0); //@line 801 "/emscripten/system/include/emscripten/bind.h"
 $18 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 802 "/emscripten/system/include/emscripten/bind.h"
 $19 = $9; //@line 803 "/emscripten/system/include/emscripten/bind.h"
 $3 = $19;
 $20 = (__ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv()|0); //@line 399 "/emscripten/system/include/emscripten/bind.h"
 $21 = $9; //@line 804 "/emscripten/system/include/emscripten/bind.h"
 $22 = (__ZN10emscripten8internal10getContextIM13ArcFileHeaderdEEPT_RKS4_($7)|0); //@line 805 "/emscripten/system/include/emscripten/bind.h"
 __embind_register_value_object_field(($11|0),($12|0),($13|0),($15|0),($16|0),($17|0),($18|0),($20|0),($21|0),($22|0)); //@line 795 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($10|0); //@line 806 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten12value_objectI13ArcFileHeaderED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __THREW__ = 0;
 $5 = (invoke_i(292)|0); //@line 783 "/emscripten/system/include/emscripten/bind.h"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __THREW__ = 0;
  invoke_vi(280,($5|0)); //@line 783 "/emscripten/system/include/emscripten/bind.h"
  $8 = __THREW__; __THREW__ = 0;
  $9 = $8&1;
  if (!($9)) {
   __ZN10emscripten8internal11noncopyableD2Ev($4); //@line 784 "/emscripten/system/include/emscripten/bind.h"
   STACKTOP = sp;return; //@line 784 "/emscripten/system/include/emscripten/bind.h"
  }
 }
 $10 = ___cxa_find_matching_catch_3(0|0)|0;
 $11 = tempRet0;
 $2 = $10; //@line 784 "/emscripten/system/include/emscripten/bind.h"
 $3 = $11; //@line 784 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11noncopyableD2Ev($4); //@line 784 "/emscripten/system/include/emscripten/bind.h"
 $12 = $2; //@line 784 "/emscripten/system/include/emscripten/bind.h"
 ___clang_call_terminate($12); //@line 784 "/emscripten/system/include/emscripten/bind.h"
 // unreachable; //@line 784 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDI13ArcFileHeaderE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDI13ArcFileHeaderE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11noncopyableD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 642 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11LightTypeIDI13ArcFileHeaderE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (32|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal12MemberAccessI13ArcFileHeaderdE7getWireIS2_EEdRKMS2_dRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $5 = $2; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $6 = HEAP32[$5>>2]|0; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $7 = (($4) + ($6)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $8 = (+__ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd($7)); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return (+$8); //@line 527 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI13ArcFileHeaderdE7setWireIS2_EEvRKMS2_dRT_d($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = +$2;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $7 = (+__ZN10emscripten8internal11BindingTypeIdE12fromWireTypeEd($6)); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $8 = $4; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $9 = $3; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $10 = HEAP32[$9>>2]|0; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $11 = (($8) + ($10)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 HEAPF64[$11>>3] = $7; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDIdE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIdE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5676|0); //@line 389 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal10getContextIM13ArcFileHeaderdEEPT_RKS4_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(4)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $4 = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $4; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5671|0); //@line 389 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11LightTypeIDIdE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (552|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIdE12fromWireTypeEd($0) {
 $0 = +$0;
 var $1 = 0.0, $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 262 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return (+$2); //@line 262 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 262 "/emscripten/system/include/emscripten/wire.h"
 $3 = +HEAPF64[$2>>3]; //@line 262 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return (+$3); //@line 262 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal12MemberAccessI13ArcFileHeaderjE7getWireIS2_EEjRKMS2_jRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $5 = $2; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $6 = HEAP32[$5>>2]|0; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $7 = (($4) + ($6)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $8 = (__ZN10emscripten8internal11BindingTypeIjE10toWireTypeERKj($7)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($8|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI13ArcFileHeaderjE7setWireIS2_EEvRKMS2_jRT_j($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $7 = (__ZN10emscripten8internal11BindingTypeIjE12fromWireTypeEj($6)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $8 = $4; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $9 = $3; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $10 = HEAP32[$9>>2]|0; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $11 = (($8) + ($10)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$11>>2] = $7; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDIjE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIjE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIM13ArcFileHeaderjEEPT_RKS4_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(4)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $4 = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $4; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5680|0); //@line 389 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11LightTypeIDIjE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (520|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIjE12fromWireTypeEj($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 258 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($2|0); //@line 258 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIjE10toWireTypeERKj($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 258 "/emscripten/system/include/emscripten/wire.h"
 $3 = HEAP32[$2>>2]|0; //@line 258 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($3|0); //@line 258 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal12MemberAccessI13ArcFileHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEE7getWireIS2_EEPNS0_11BindingTypeIS9_EUt_ERKMS2_S9_RKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $5 = $2; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $6 = HEAP32[$5>>2]|0; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $7 = (($4) + ($6)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $8 = (__ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE10toWireTypeERKS8_($7)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($8|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI13ArcFileHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEE7setWireIS2_EEvRKMS2_S9_RT_PNS0_11BindingTypeIS9_EUt_E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $17 = sp + 8|0;
 $20 = sp + 229|0;
 $47 = sp + 56|0;
 $48 = sp + 52|0;
 $51 = sp;
 $54 = sp + 228|0;
 $58 = sp + 12|0;
 $55 = $0;
 $56 = $1;
 $57 = $2;
 $59 = $57; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE12fromWireTypeEPNS9_Ut_E($58,$59); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $60 = $56; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $61 = $55; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $62 = HEAP32[$61>>2]|0; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $63 = (($60) + ($62)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $52 = $63;
 $53 = $58;
 $64 = $52;
 $65 = $53; //@line 2055 "/emscripten/system/include/libcxx/string"
 ;HEAP8[$51>>0]=HEAP8[$54>>0]|0;
 $49 = $64;
 $50 = $65;
 $66 = $49;
 $46 = $66;
 $67 = $46;
 $45 = $67;
 $44 = $67;
 $68 = $44;
 $43 = $68;
 $69 = $43;
 $42 = $69;
 $70 = $42;
 $71 = ((($70)) + 8|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $72 = ((($71)) + 3|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $73 = HEAP8[$72>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $74 = $73&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $75 = $74 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $76 = ($75|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($76) {
  $37 = $67;
  $77 = $37;
  $36 = $77;
  $78 = $36;
  $35 = $78;
  $79 = $35;
  $80 = HEAP32[$79>>2]|0; //@line 1292 "/emscripten/system/include/libcxx/string"
  HEAP32[$47>>2] = 0; //@line 2795 "/emscripten/system/include/libcxx/string"
  __ZNSt3__211char_traitsIwE6assignERwRKw($80,$47); //@line 2795 "/emscripten/system/include/libcxx/string"
  $28 = $67;
  $29 = 0;
  $81 = $28;
  $82 = $29; //@line 1272 "/emscripten/system/include/libcxx/string"
  $27 = $81;
  $83 = $27;
  $26 = $83;
  $84 = $26;
  $85 = ((($84)) + 4|0); //@line 1272 "/emscripten/system/include/libcxx/string"
  HEAP32[$85>>2] = $82; //@line 1272 "/emscripten/system/include/libcxx/string"
 } else {
  $34 = $67;
  $86 = $34;
  $33 = $86;
  $87 = $33;
  $32 = $87;
  $88 = $32;
  $31 = $88;
  $89 = $31; //@line 970 "/emscripten/system/include/libcxx/memory"
  $30 = $89;
  $90 = $30; //@line 436 "/emscripten/system/include/libcxx/type_traits"
  HEAP32[$48>>2] = 0; //@line 2800 "/emscripten/system/include/libcxx/string"
  __ZNSt3__211char_traitsIwE6assignERwRKw($90,$48); //@line 2800 "/emscripten/system/include/libcxx/string"
  $40 = $67;
  $41 = 0;
  $91 = $40;
  $92 = $41; //@line 1239 "/emscripten/system/include/libcxx/string"
  $93 = $92&255; //@line 1239 "/emscripten/system/include/libcxx/string"
  $39 = $91;
  $94 = $39;
  $38 = $94;
  $95 = $38;
  $96 = ((($95)) + 8|0); //@line 1239 "/emscripten/system/include/libcxx/string"
  $97 = ((($96)) + 3|0); //@line 1239 "/emscripten/system/include/libcxx/string"
  HEAP8[$97>>0] = $93; //@line 1239 "/emscripten/system/include/libcxx/string"
 }
 $25 = $66;
 $98 = $25;
 __THREW__ = 0;
 invoke_vii(301,($98|0),0); //@line 905 "/emscripten/system/include/libcxx/string"
 $99 = __THREW__; __THREW__ = 0;
 $100 = $99&1;
 if ($100) {
  $101 = ___cxa_find_matching_catch_3(0|0)|0;
  $102 = tempRet0;
  ___clang_call_terminate($101); //@line 905 "/emscripten/system/include/libcxx/string"
  // unreachable; //@line 905 "/emscripten/system/include/libcxx/string"
 }
 $103 = $50; //@line 2044 "/emscripten/system/include/libcxx/string"
 $24 = $103;
 $104 = $24;
 $23 = $104;
 $105 = $23;
 $22 = $66;
 $106 = $22;
 $21 = $106;
 $107 = $21;
 ;HEAP32[$107>>2]=HEAP32[$105>>2]|0;HEAP32[$107+4>>2]=HEAP32[$105+4>>2]|0;HEAP32[$107+8>>2]=HEAP32[$105+8>>2]|0; //@line 2044 "/emscripten/system/include/libcxx/string"
 $108 = $50; //@line 2045 "/emscripten/system/include/libcxx/string"
 $18 = $66;
 $19 = $108;
 $109 = $18;
 $110 = $19; //@line 1401 "/emscripten/system/include/libcxx/string"
 ;HEAP8[$17>>0]=HEAP8[$20>>0]|0;
 $15 = $109;
 $16 = $110;
 $111 = $15;
 $112 = $16; //@line 1408 "/emscripten/system/include/libcxx/string"
 $14 = $112;
 $113 = $14;
 $13 = $113;
 $114 = $13;
 $12 = $114;
 $115 = $12;
 $8 = $115;
 $11 = $111;
 $116 = $11;
 $10 = $116;
 $117 = $10;
 $9 = $117;
 $118 = $50; //@line 2046 "/emscripten/system/include/libcxx/string"
 $5 = $118;
 $119 = $5;
 $4 = $119;
 $120 = $4;
 $3 = $120;
 $121 = $3;
 $6 = $121; //@line 1312 "/emscripten/system/include/libcxx/string"
 $7 = 0; //@line 1313 "/emscripten/system/include/libcxx/string"
 while(1) {
  $122 = $7; //@line 1313 "/emscripten/system/include/libcxx/string"
  $123 = ($122>>>0)<(3); //@line 1313 "/emscripten/system/include/libcxx/string"
  if (!($123)) {
   break;
  }
  $124 = $6; //@line 1314 "/emscripten/system/include/libcxx/string"
  $125 = $7; //@line 1314 "/emscripten/system/include/libcxx/string"
  $126 = (($124) + ($125<<2)|0); //@line 1314 "/emscripten/system/include/libcxx/string"
  HEAP32[$126>>2] = 0; //@line 1314 "/emscripten/system/include/libcxx/string"
  $127 = $7; //@line 1313 "/emscripten/system/include/libcxx/string"
  $128 = (($127) + 1)|0; //@line 1313 "/emscripten/system/include/libcxx/string"
  $7 = $128; //@line 1313 "/emscripten/system/include/libcxx/string"
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($58); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIM13ArcFileHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEEEPT_RKSB_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(4)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $4 = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $4; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (40|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE12fromWireTypeEPNS9_Ut_E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $43 = sp;
 $45 = sp + 244|0;
 $56 = sp + 32|0;
 $63 = $1;
 $64 = $63; //@line 310 "/emscripten/system/include/emscripten/wire.h"
 $65 = ((($64)) + 4|0); //@line 310 "/emscripten/system/include/emscripten/wire.h"
 $66 = $63; //@line 310 "/emscripten/system/include/emscripten/wire.h"
 $67 = HEAP32[$66>>2]|0; //@line 310 "/emscripten/system/include/emscripten/wire.h"
 $60 = $0;
 $61 = $65;
 $62 = $67;
 $68 = $60;
 $59 = $68;
 $69 = $59;
 $58 = $69;
 $70 = $58;
 $57 = $70;
 ;HEAP32[$70>>2]=0|0;HEAP32[$70+4>>2]=0|0;HEAP32[$70+8>>2]=0|0; //@line 2208 "/emscripten/system/include/libcxx/memory"
 $71 = $61; //@line 1570 "/emscripten/system/include/libcxx/string"
 $72 = $62; //@line 1570 "/emscripten/system/include/libcxx/string"
 $51 = $68;
 $52 = $71;
 $53 = $72;
 $73 = $51;
 $74 = $53; //@line 1522 "/emscripten/system/include/libcxx/string"
 $49 = $73;
 $75 = $49;
 $48 = $75;
 $76 = $48;
 $47 = $76;
 $77 = $47;
 $46 = $77;
 $78 = $46;
 $44 = $78;
 $79 = $44; //@line 1578 "/emscripten/system/include/libcxx/memory"
 ;HEAP8[$43>>0]=HEAP8[$45>>0]|0;
 $42 = $79;
 $80 = $42; //@line 1716 "/emscripten/system/include/libcxx/memory"
 $41 = $80;
 $50 = 1073741823; //@line 2839 "/emscripten/system/include/libcxx/string"
 $81 = $50; //@line 2843 "/emscripten/system/include/libcxx/string"
 $82 = (($81) - 16)|0; //@line 2843 "/emscripten/system/include/libcxx/string"
 $83 = ($74>>>0)>($82>>>0); //@line 1522 "/emscripten/system/include/libcxx/string"
 if ($83) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($73); //@line 1523 "/emscripten/system/include/libcxx/string"
  // unreachable; //@line 1523 "/emscripten/system/include/libcxx/string"
 }
 $84 = $53; //@line 1525 "/emscripten/system/include/libcxx/string"
 $85 = ($84>>>0)<(2); //@line 1525 "/emscripten/system/include/libcxx/string"
 $86 = $53;
 if ($85) {
  $39 = $73;
  $40 = $86;
  $87 = $39;
  $88 = $40; //@line 1239 "/emscripten/system/include/libcxx/string"
  $89 = $88&255; //@line 1239 "/emscripten/system/include/libcxx/string"
  $38 = $87;
  $90 = $38;
  $37 = $90;
  $91 = $37;
  $92 = ((($91)) + 8|0); //@line 1239 "/emscripten/system/include/libcxx/string"
  $93 = ((($92)) + 3|0); //@line 1239 "/emscripten/system/include/libcxx/string"
  HEAP8[$93>>0] = $89; //@line 1239 "/emscripten/system/include/libcxx/string"
  $36 = $73;
  $94 = $36;
  $35 = $94;
  $95 = $35;
  $34 = $95;
  $96 = $34;
  $33 = $96;
  $97 = $33; //@line 970 "/emscripten/system/include/libcxx/memory"
  $32 = $97;
  $98 = $32; //@line 436 "/emscripten/system/include/libcxx/type_traits"
  $54 = $98; //@line 1528 "/emscripten/system/include/libcxx/string"
  $151 = $54; //@line 1538 "/emscripten/system/include/libcxx/string"
  $31 = $151;
  $152 = $31; //@line 1105 "/emscripten/system/include/libcxx/memory"
  $153 = $52; //@line 1538 "/emscripten/system/include/libcxx/string"
  $154 = $53; //@line 1538 "/emscripten/system/include/libcxx/string"
  (__ZNSt3__211char_traitsIwE4copyEPwPKwj($152,$153,$154)|0); //@line 1538 "/emscripten/system/include/libcxx/string"
  $155 = $54; //@line 1539 "/emscripten/system/include/libcxx/string"
  $156 = $53; //@line 1539 "/emscripten/system/include/libcxx/string"
  $157 = (($155) + ($156<<2)|0); //@line 1539 "/emscripten/system/include/libcxx/string"
  HEAP32[$56>>2] = 0; //@line 1539 "/emscripten/system/include/libcxx/string"
  __ZNSt3__211char_traitsIwE6assignERwRKw($157,$56); //@line 1539 "/emscripten/system/include/libcxx/string"
  STACKTOP = sp;return; //@line 310 "/emscripten/system/include/emscripten/wire.h"
 }
 $6 = $86;
 $99 = $6; //@line 1324 "/emscripten/system/include/libcxx/string"
 $100 = ($99>>>0)<(2); //@line 1324 "/emscripten/system/include/libcxx/string"
 if ($100) {
  $107 = 2;
 } else {
  $101 = $6; //@line 1326 "/emscripten/system/include/libcxx/string"
  $102 = (($101) + 1)|0; //@line 1326 "/emscripten/system/include/libcxx/string"
  $5 = $102;
  $103 = $5; //@line 1320 "/emscripten/system/include/libcxx/string"
  $104 = (($103) + 3)|0; //@line 1320 "/emscripten/system/include/libcxx/string"
  $105 = $104 & -4; //@line 1320 "/emscripten/system/include/libcxx/string"
  $107 = $105;
 }
 $106 = (($107) - 1)|0; //@line 1326 "/emscripten/system/include/libcxx/string"
 $55 = $106; //@line 1532 "/emscripten/system/include/libcxx/string"
 $4 = $73;
 $108 = $4;
 $3 = $108;
 $109 = $3;
 $2 = $109;
 $110 = $2;
 $111 = $55; //@line 1533 "/emscripten/system/include/libcxx/string"
 $112 = (($111) + 1)|0; //@line 1533 "/emscripten/system/include/libcxx/string"
 $17 = $110;
 $18 = $112;
 $113 = $17; //@line 1526 "/emscripten/system/include/libcxx/memory"
 $114 = $18; //@line 1526 "/emscripten/system/include/libcxx/memory"
 $14 = $113;
 $15 = $114;
 $16 = 0;
 $115 = $14;
 $116 = $15; //@line 1768 "/emscripten/system/include/libcxx/memory"
 $13 = $115;
 $117 = ($116>>>0)>(1073741823); //@line 1768 "/emscripten/system/include/libcxx/memory"
 if (!($117)) {
  $128 = $15; //@line 1771 "/emscripten/system/include/libcxx/memory"
  $129 = $128<<2; //@line 1771 "/emscripten/system/include/libcxx/memory"
  $12 = $129;
  $130 = $12; //@line 215 "/emscripten/system/include/libcxx/new"
  $131 = (__Znwj($130)|0); //@line 215 "/emscripten/system/include/libcxx/new"
  $54 = $131; //@line 1533 "/emscripten/system/include/libcxx/string"
  $132 = $54; //@line 1534 "/emscripten/system/include/libcxx/string"
  $21 = $73;
  $22 = $132;
  $133 = $21;
  $134 = $22; //@line 1289 "/emscripten/system/include/libcxx/string"
  $20 = $133;
  $135 = $20;
  $19 = $135;
  $136 = $19;
  HEAP32[$136>>2] = $134; //@line 1289 "/emscripten/system/include/libcxx/string"
  $137 = $55; //@line 1535 "/emscripten/system/include/libcxx/string"
  $138 = (($137) + 1)|0; //@line 1535 "/emscripten/system/include/libcxx/string"
  $25 = $73;
  $26 = $138;
  $139 = $25;
  $140 = $26; //@line 1282 "/emscripten/system/include/libcxx/string"
  $141 = -2147483648 | $140; //@line 1282 "/emscripten/system/include/libcxx/string"
  $24 = $139;
  $142 = $24;
  $23 = $142;
  $143 = $23;
  $144 = ((($143)) + 8|0); //@line 1282 "/emscripten/system/include/libcxx/string"
  HEAP32[$144>>2] = $141; //@line 1282 "/emscripten/system/include/libcxx/string"
  $145 = $53; //@line 1536 "/emscripten/system/include/libcxx/string"
  $29 = $73;
  $30 = $145;
  $146 = $29;
  $147 = $30; //@line 1272 "/emscripten/system/include/libcxx/string"
  $28 = $146;
  $148 = $28;
  $27 = $148;
  $149 = $27;
  $150 = ((($149)) + 4|0); //@line 1272 "/emscripten/system/include/libcxx/string"
  HEAP32[$150>>2] = $147; //@line 1272 "/emscripten/system/include/libcxx/string"
  $151 = $54; //@line 1538 "/emscripten/system/include/libcxx/string"
  $31 = $151;
  $152 = $31; //@line 1105 "/emscripten/system/include/libcxx/memory"
  $153 = $52; //@line 1538 "/emscripten/system/include/libcxx/string"
  $154 = $53; //@line 1538 "/emscripten/system/include/libcxx/string"
  (__ZNSt3__211char_traitsIwE4copyEPwPKwj($152,$153,$154)|0); //@line 1538 "/emscripten/system/include/libcxx/string"
  $155 = $54; //@line 1539 "/emscripten/system/include/libcxx/string"
  $156 = $53; //@line 1539 "/emscripten/system/include/libcxx/string"
  $157 = (($155) + ($156<<2)|0); //@line 1539 "/emscripten/system/include/libcxx/string"
  HEAP32[$56>>2] = 0; //@line 1539 "/emscripten/system/include/libcxx/string"
  __ZNSt3__211char_traitsIwE6assignERwRKw($157,$56); //@line 1539 "/emscripten/system/include/libcxx/string"
  STACKTOP = sp;return; //@line 310 "/emscripten/system/include/emscripten/wire.h"
 }
 $9 = 13300;
 $118 = (___cxa_allocate_exception(8)|0); //@line 225 "/emscripten/system/include/libcxx/stdexcept"
 $119 = $9; //@line 225 "/emscripten/system/include/libcxx/stdexcept"
 $7 = $118;
 $8 = $119;
 $120 = $7;
 $121 = $8; //@line 136 "/emscripten/system/include/libcxx/stdexcept"
 __THREW__ = 0;
 invoke_vii(302,($120|0),($121|0)); //@line 136 "/emscripten/system/include/libcxx/stdexcept"
 $122 = __THREW__; __THREW__ = 0;
 $123 = $122&1;
 if ($123) {
  $124 = ___cxa_find_matching_catch_2()|0;
  $125 = tempRet0;
  $10 = $124; //@line 230 "/emscripten/system/include/libcxx/stdexcept"
  $11 = $125; //@line 230 "/emscripten/system/include/libcxx/stdexcept"
  ___cxa_free_exception(($118|0)); //@line 225 "/emscripten/system/include/libcxx/stdexcept"
  $126 = $10; //@line 225 "/emscripten/system/include/libcxx/stdexcept"
  $127 = $11; //@line 225 "/emscripten/system/include/libcxx/stdexcept"
  ___resumeException($126|0);
  // unreachable;
 } else {
  HEAP32[$120>>2] = (3972); //@line 136 "/emscripten/system/include/libcxx/stdexcept"
  ___cxa_throw(($118|0),(384|0),(35|0)); //@line 225 "/emscripten/system/include/libcxx/stdexcept"
  // unreachable; //@line 225 "/emscripten/system/include/libcxx/stdexcept"
 }
}
function __ZNSt3__211char_traitsIwE6assignERwRKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 296 "/emscripten/system/include/libcxx/__string"
 $5 = HEAP32[$4>>2]|0; //@line 296 "/emscripten/system/include/libcxx/__string"
 $6 = $2; //@line 296 "/emscripten/system/include/libcxx/__string"
 HEAP32[$6>>2] = $5; //@line 296 "/emscripten/system/include/libcxx/__string"
 STACKTOP = sp;return; //@line 296 "/emscripten/system/include/libcxx/__string"
}
function __ZNSt3__211char_traitsIwE4copyEPwPKwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 313 "/emscripten/system/include/libcxx/__string"
 $7 = ($6|0)==(0); //@line 313 "/emscripten/system/include/libcxx/__string"
 $8 = $3;
 if ($7) {
  $14 = $8;
  STACKTOP = sp;return ($14|0); //@line 313 "/emscripten/system/include/libcxx/__string"
 }
 $9 = $4; //@line 313 "/emscripten/system/include/libcxx/__string"
 $10 = $5; //@line 313 "/emscripten/system/include/libcxx/__string"
 __THREW__ = 0;
 $11 = (invoke_iiii(303,($8|0),($9|0),($10|0))|0); //@line 313 "/emscripten/system/include/libcxx/__string"
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 if ($13) {
  $15 = ___cxa_find_matching_catch_3(0|0)|0;
  $16 = tempRet0;
  ___clang_call_terminate($15); //@line 313 "/emscripten/system/include/libcxx/__string"
  // unreachable; //@line 313 "/emscripten/system/include/libcxx/__string"
 } else {
  $14 = $8;
  STACKTOP = sp;return ($14|0); //@line 313 "/emscripten/system/include/libcxx/__string"
 }
 return (0)|0;
}
function __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE10toWireTypeERKS8_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $48 = $0;
 $50 = $48; //@line 304 "/emscripten/system/include/emscripten/wire.h"
 $47 = $50;
 $51 = $47;
 $46 = $51;
 $52 = $46;
 $45 = $52;
 $53 = $45;
 $44 = $53;
 $54 = $44;
 $43 = $54;
 $55 = $43;
 $56 = ((($55)) + 8|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $57 = ((($56)) + 3|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $58 = HEAP8[$57>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $59 = $58&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $60 = $59 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $61 = ($60|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($61) {
  $39 = $52;
  $62 = $39;
  $38 = $62;
  $63 = $38;
  $37 = $63;
  $64 = $37;
  $65 = ((($64)) + 4|0); //@line 1275 "/emscripten/system/include/libcxx/string"
  $66 = HEAP32[$65>>2]|0; //@line 1275 "/emscripten/system/include/libcxx/string"
  $75 = $66;
 } else {
  $42 = $52;
  $67 = $42;
  $41 = $67;
  $68 = $41;
  $40 = $68;
  $69 = $40;
  $70 = ((($69)) + 8|0); //@line 1247 "/emscripten/system/include/libcxx/string"
  $71 = ((($70)) + 3|0); //@line 1247 "/emscripten/system/include/libcxx/string"
  $72 = HEAP8[$71>>0]|0; //@line 1247 "/emscripten/system/include/libcxx/string"
  $73 = $72&255; //@line 1247 "/emscripten/system/include/libcxx/string"
  $75 = $73;
 }
 $74 = $75<<2; //@line 304 "/emscripten/system/include/emscripten/wire.h"
 $76 = (4 + ($74))|0; //@line 304 "/emscripten/system/include/emscripten/wire.h"
 $77 = (_malloc($76)|0); //@line 304 "/emscripten/system/include/emscripten/wire.h"
 $49 = $77; //@line 304 "/emscripten/system/include/emscripten/wire.h"
 $78 = $48; //@line 305 "/emscripten/system/include/emscripten/wire.h"
 $11 = $78;
 $79 = $11;
 $10 = $79;
 $80 = $10;
 $9 = $80;
 $81 = $9;
 $8 = $81;
 $82 = $8;
 $7 = $82;
 $83 = $7;
 $84 = ((($83)) + 8|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $85 = ((($84)) + 3|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $86 = HEAP8[$85>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $87 = $86&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $88 = $87 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $89 = ($88|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($89) {
  $3 = $80;
  $90 = $3;
  $2 = $90;
  $91 = $2;
  $1 = $91;
  $92 = $1;
  $93 = ((($92)) + 4|0); //@line 1275 "/emscripten/system/include/libcxx/string"
  $94 = HEAP32[$93>>2]|0; //@line 1275 "/emscripten/system/include/libcxx/string"
  $103 = $94;
 } else {
  $6 = $80;
  $95 = $6;
  $5 = $95;
  $96 = $5;
  $4 = $96;
  $97 = $4;
  $98 = ((($97)) + 8|0); //@line 1247 "/emscripten/system/include/libcxx/string"
  $99 = ((($98)) + 3|0); //@line 1247 "/emscripten/system/include/libcxx/string"
  $100 = HEAP8[$99>>0]|0; //@line 1247 "/emscripten/system/include/libcxx/string"
  $101 = $100&255; //@line 1247 "/emscripten/system/include/libcxx/string"
  $103 = $101;
 }
 $102 = $49; //@line 305 "/emscripten/system/include/emscripten/wire.h"
 HEAP32[$102>>2] = $103; //@line 305 "/emscripten/system/include/emscripten/wire.h"
 $104 = $49; //@line 306 "/emscripten/system/include/emscripten/wire.h"
 $105 = ((($104)) + 4|0); //@line 306 "/emscripten/system/include/emscripten/wire.h"
 $106 = $48; //@line 306 "/emscripten/system/include/emscripten/wire.h"
 $25 = $106;
 $107 = $25;
 $24 = $107;
 $108 = $24;
 $23 = $108;
 $109 = $23;
 $22 = $109;
 $110 = $22;
 $21 = $110;
 $111 = $21;
 $112 = ((($111)) + 8|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $113 = ((($112)) + 3|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $114 = HEAP8[$113>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $115 = $114&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $116 = $115 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $117 = ($116|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($117) {
  $15 = $108;
  $118 = $15;
  $14 = $118;
  $119 = $14;
  $13 = $119;
  $120 = $13;
  $121 = HEAP32[$120>>2]|0; //@line 1295 "/emscripten/system/include/libcxx/string"
  $127 = $121;
 } else {
  $20 = $108;
  $122 = $20;
  $19 = $122;
  $123 = $19;
  $18 = $123;
  $124 = $18;
  $17 = $124;
  $125 = $17; //@line 970 "/emscripten/system/include/libcxx/memory"
  $16 = $125;
  $126 = $16; //@line 436 "/emscripten/system/include/libcxx/type_traits"
  $127 = $126;
 }
 $12 = $127;
 $128 = $12; //@line 1105 "/emscripten/system/include/libcxx/memory"
 $129 = $48; //@line 306 "/emscripten/system/include/emscripten/wire.h"
 $36 = $129;
 $130 = $36;
 $35 = $130;
 $131 = $35;
 $34 = $131;
 $132 = $34;
 $33 = $132;
 $133 = $33;
 $32 = $133;
 $134 = $32;
 $135 = ((($134)) + 8|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $136 = ((($135)) + 3|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $137 = HEAP8[$136>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $138 = $137&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $139 = $138 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $140 = ($139|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($140) {
  $28 = $131;
  $141 = $28;
  $27 = $141;
  $142 = $27;
  $26 = $142;
  $143 = $26;
  $144 = ((($143)) + 4|0); //@line 1275 "/emscripten/system/include/libcxx/string"
  $145 = HEAP32[$144>>2]|0; //@line 1275 "/emscripten/system/include/libcxx/string"
  $153 = $145;
  (_wmemcpy($105,$128,$153)|0); //@line 306 "/emscripten/system/include/emscripten/wire.h"
  $154 = $49; //@line 307 "/emscripten/system/include/emscripten/wire.h"
  STACKTOP = sp;return ($154|0); //@line 307 "/emscripten/system/include/emscripten/wire.h"
 } else {
  $31 = $131;
  $146 = $31;
  $30 = $146;
  $147 = $30;
  $29 = $147;
  $148 = $29;
  $149 = ((($148)) + 8|0); //@line 1247 "/emscripten/system/include/libcxx/string"
  $150 = ((($149)) + 3|0); //@line 1247 "/emscripten/system/include/libcxx/string"
  $151 = HEAP8[$150>>0]|0; //@line 1247 "/emscripten/system/include/libcxx/string"
  $152 = $151&255; //@line 1247 "/emscripten/system/include/libcxx/string"
  $153 = $152;
  (_wmemcpy($105,$128,$153)|0); //@line 306 "/emscripten/system/include/emscripten/wire.h"
  $154 = $49; //@line 307 "/emscripten/system/include/emscripten/wire.h"
  STACKTOP = sp;return ($154|0); //@line 307 "/emscripten/system/include/emscripten/wire.h"
 }
 return (0)|0;
}
function __ZN10emscripten8internal12MemberAccessI13ArcFileHeader5StateE7getWireIS2_EEPS3_RKMS2_S3_RKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $5 = $2; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $6 = HEAP32[$5>>2]|0; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $7 = (($4) + ($6)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $8 = (__ZN10emscripten8internal18GenericBindingTypeI5StateE10toWireTypeERKS2_($7)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($8|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI13ArcFileHeader5StateE7setWireIS2_EEvRKMS2_S3_RT_PS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $7 = (__ZN10emscripten8internal18GenericBindingTypeI5StateE12fromWireTypeEPS2_($6)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $8 = $4; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $9 = $3; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $10 = HEAP32[$9>>2]|0; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $11 = (($8) + ($10)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 (__ZN5StateaSERKS_($11,$7)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDI5StateE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDI5StateE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIM13ArcFileHeader5StateEEPT_RKS5_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(4)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $4 = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $4; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11LightTypeIDI5StateE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (72|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal18GenericBindingTypeI5StateE12fromWireTypeEPS2_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 362 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($2|0); //@line 362 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN5StateaSERKS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 24 "./src/cpp/bridge/bridge.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 24 "./src/cpp/bridge/bridge.cpp"
 HEAP32[$4>>2] = $6; //@line 24 "./src/cpp/bridge/bridge.cpp"
 $7 = ((($4)) + 4|0); //@line 24 "./src/cpp/bridge/bridge.cpp"
 $8 = $3; //@line 24 "./src/cpp/bridge/bridge.cpp"
 $9 = ((($8)) + 4|0); //@line 24 "./src/cpp/bridge/bridge.cpp"
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($7,$9)|0); //@line 24 "./src/cpp/bridge/bridge.cpp"
 STACKTOP = sp;return ($4|0); //@line 24 "./src/cpp/bridge/bridge.cpp"
}
function __ZN10emscripten8internal18GenericBindingTypeI5StateE10toWireTypeERKS2_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = (__Znwj(16)|0); //@line 354 "/emscripten/system/include/emscripten/wire.h"
 $5 = $1; //@line 354 "/emscripten/system/include/emscripten/wire.h"
 __THREW__ = 0;
 invoke_vii(304,($4|0),($5|0)); //@line 354 "/emscripten/system/include/emscripten/wire.h"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_2()|0;
  $9 = tempRet0;
  $2 = $8; //@line 355 "/emscripten/system/include/emscripten/wire.h"
  $3 = $9; //@line 355 "/emscripten/system/include/emscripten/wire.h"
  __ZdlPv($4); //@line 354 "/emscripten/system/include/emscripten/wire.h"
  $10 = $2; //@line 354 "/emscripten/system/include/emscripten/wire.h"
  $11 = $3; //@line 354 "/emscripten/system/include/emscripten/wire.h"
  ___resumeException($10|0);
  // unreachable;
 } else {
  STACKTOP = sp;return ($4|0); //@line 354 "/emscripten/system/include/emscripten/wire.h"
 }
 return (0)|0;
}
function __ZN5StateC2ERKS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3; //@line 24 "./src/cpp/bridge/bridge.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 24 "./src/cpp/bridge/bridge.cpp"
 HEAP32[$4>>2] = $6; //@line 24 "./src/cpp/bridge/bridge.cpp"
 $7 = ((($4)) + 4|0); //@line 24 "./src/cpp/bridge/bridge.cpp"
 $8 = $3; //@line 24 "./src/cpp/bridge/bridge.cpp"
 $9 = ((($8)) + 4|0); //@line 24 "./src/cpp/bridge/bridge.cpp"
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($7,$9); //@line 24 "./src/cpp/bridge/bridge.cpp"
 STACKTOP = sp;return; //@line 24 "./src/cpp/bridge/bridge.cpp"
}
function __ZN10emscripten8internal11noncopyableC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 641 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal15raw_constructorI13ArcFileHeaderJEEEPT_DpNS0_11BindingTypeIT0_E8WireTypeE() {
 var $0 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = (__Znwj(72)|0); //@line 445 "/emscripten/system/include/emscripten/bind.h"
 dest=$0; stop=dest+72|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 445 "/emscripten/system/include/emscripten/bind.h"
 __ZN13ArcFileHeaderC2Ev($0); //@line 445 "/emscripten/system/include/emscripten/bind.h"
 return ($0|0); //@line 445 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14raw_destructorI13ArcFileHeaderEEvPT_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 452 "/emscripten/system/include/emscripten/bind.h"
 $3 = ($2|0)==(0|0); //@line 452 "/emscripten/system/include/emscripten/bind.h"
 if (!($3)) {
  __ZN13ArcFileHeaderD2Ev($2); //@line 452 "/emscripten/system/include/emscripten/bind.h"
  __ZdlPv($2); //@line 452 "/emscripten/system/include/emscripten/bind.h"
 }
 STACKTOP = sp;return; //@line 453 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal19getGenericSignatureIJiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5793|0); //@line 389 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN13ArcFileHeaderD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0); //@line 38 "./src/cpp/bridge/bridge.cpp"
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3); //@line 38 "./src/cpp/bridge/bridge.cpp"
 __ZN5StateD2Ev($2); //@line 38 "./src/cpp/bridge/bridge.cpp"
 STACKTOP = sp;return; //@line 38 "./src/cpp/bridge/bridge.cpp"
}
function __ZN5StateD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0); //@line 24 "./src/cpp/bridge/bridge.cpp"
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3); //@line 24 "./src/cpp/bridge/bridge.cpp"
 STACKTOP = sp;return; //@line 24 "./src/cpp/bridge/bridge.cpp"
}
function __ZN13ArcFileHeaderC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = $0;
 $11 = $10;
 __ZN5StateC2Ev($11); //@line 38 "./src/cpp/bridge/bridge.cpp"
 $12 = ((($11)) + 16|0); //@line 38 "./src/cpp/bridge/bridge.cpp"
 $9 = $12;
 $13 = $9;
 $8 = $13;
 $14 = $8;
 $7 = $14;
 $15 = $7;
 $6 = $15;
 ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0; //@line 2208 "/emscripten/system/include/libcxx/memory"
 $3 = $13;
 $16 = $3;
 $2 = $16;
 $17 = $2;
 $1 = $17;
 $18 = $1;
 $4 = $18; //@line 1312 "/emscripten/system/include/libcxx/string"
 $5 = 0; //@line 1313 "/emscripten/system/include/libcxx/string"
 while(1) {
  $19 = $5; //@line 1313 "/emscripten/system/include/libcxx/string"
  $20 = ($19>>>0)<(3); //@line 1313 "/emscripten/system/include/libcxx/string"
  if (!($20)) {
   break;
  }
  $21 = $4; //@line 1314 "/emscripten/system/include/libcxx/string"
  $22 = $5; //@line 1314 "/emscripten/system/include/libcxx/string"
  $23 = (($21) + ($22<<2)|0); //@line 1314 "/emscripten/system/include/libcxx/string"
  HEAP32[$23>>2] = 0; //@line 1314 "/emscripten/system/include/libcxx/string"
  $24 = $5; //@line 1313 "/emscripten/system/include/libcxx/string"
  $25 = (($24) + 1)|0; //@line 1313 "/emscripten/system/include/libcxx/string"
  $5 = $25; //@line 1313 "/emscripten/system/include/libcxx/string"
 }
 STACKTOP = sp;return; //@line 38 "./src/cpp/bridge/bridge.cpp"
}
function __ZN5StateC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = $0;
 $11 = $10;
 $12 = ((($11)) + 4|0); //@line 24 "./src/cpp/bridge/bridge.cpp"
 $9 = $12;
 $13 = $9;
 $8 = $13;
 $14 = $8;
 $7 = $14;
 $15 = $7;
 $6 = $15;
 ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0; //@line 2208 "/emscripten/system/include/libcxx/memory"
 $3 = $13;
 $16 = $3;
 $2 = $16;
 $17 = $2;
 $1 = $17;
 $18 = $1;
 $4 = $18; //@line 1312 "/emscripten/system/include/libcxx/string"
 $5 = 0; //@line 1313 "/emscripten/system/include/libcxx/string"
 while(1) {
  $19 = $5; //@line 1313 "/emscripten/system/include/libcxx/string"
  $20 = ($19>>>0)<(3); //@line 1313 "/emscripten/system/include/libcxx/string"
  if (!($20)) {
   break;
  }
  $21 = $4; //@line 1314 "/emscripten/system/include/libcxx/string"
  $22 = $5; //@line 1314 "/emscripten/system/include/libcxx/string"
  $23 = (($21) + ($22<<2)|0); //@line 1314 "/emscripten/system/include/libcxx/string"
  HEAP32[$23>>2] = 0; //@line 1314 "/emscripten/system/include/libcxx/string"
  $24 = $5; //@line 1313 "/emscripten/system/include/libcxx/string"
  $25 = (($24) + 1)|0; //@line 1313 "/emscripten/system/include/libcxx/string"
  $5 = $25; //@line 1313 "/emscripten/system/include/libcxx/string"
 }
 STACKTOP = sp;return; //@line 24 "./src/cpp/bridge/bridge.cpp"
}
function __ZN10emscripten8internal6TypeIDI9ArcHeaderE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDI9ArcHeaderE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDI9ArcHeaderE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (80|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal12MemberAccessI9ArcHeaderjE7getWireIS2_EEjRKMS2_jRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $5 = $2; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $6 = HEAP32[$5>>2]|0; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $7 = (($4) + ($6)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $8 = (__ZN10emscripten8internal11BindingTypeIjE10toWireTypeERKj($7)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($8|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI9ArcHeaderjE7setWireIS2_EEvRKMS2_jRT_j($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $7 = (__ZN10emscripten8internal11BindingTypeIjE12fromWireTypeEj($6)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $8 = $4; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $9 = $3; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $10 = HEAP32[$9>>2]|0; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $11 = (($8) + ($10)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$11>>2] = $7; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal10getContextIM9ArcHeaderjEEPT_RKS4_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(4)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $4 = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $4; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI9ArcHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEE7getWireIS2_EEPNS0_11BindingTypeIS9_EUt_ERKMS2_S9_RKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $5 = $2; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $6 = HEAP32[$5>>2]|0; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $7 = (($4) + ($6)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $8 = (__ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE10toWireTypeERKS8_($7)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($8|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI9ArcHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEE7setWireIS2_EEvRKMS2_S9_RT_PNS0_11BindingTypeIS9_EUt_E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $17 = sp + 8|0;
 $20 = sp + 229|0;
 $47 = sp + 56|0;
 $48 = sp + 52|0;
 $51 = sp;
 $54 = sp + 228|0;
 $58 = sp + 12|0;
 $55 = $0;
 $56 = $1;
 $57 = $2;
 $59 = $57; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE12fromWireTypeEPNS9_Ut_E($58,$59); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $60 = $56; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $61 = $55; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $62 = HEAP32[$61>>2]|0; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $63 = (($60) + ($62)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $52 = $63;
 $53 = $58;
 $64 = $52;
 $65 = $53; //@line 2055 "/emscripten/system/include/libcxx/string"
 ;HEAP8[$51>>0]=HEAP8[$54>>0]|0;
 $49 = $64;
 $50 = $65;
 $66 = $49;
 $46 = $66;
 $67 = $46;
 $45 = $67;
 $44 = $67;
 $68 = $44;
 $43 = $68;
 $69 = $43;
 $42 = $69;
 $70 = $42;
 $71 = ((($70)) + 8|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $72 = ((($71)) + 3|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $73 = HEAP8[$72>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $74 = $73&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $75 = $74 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $76 = ($75|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($76) {
  $37 = $67;
  $77 = $37;
  $36 = $77;
  $78 = $36;
  $35 = $78;
  $79 = $35;
  $80 = HEAP32[$79>>2]|0; //@line 1292 "/emscripten/system/include/libcxx/string"
  HEAP32[$47>>2] = 0; //@line 2795 "/emscripten/system/include/libcxx/string"
  __ZNSt3__211char_traitsIwE6assignERwRKw($80,$47); //@line 2795 "/emscripten/system/include/libcxx/string"
  $28 = $67;
  $29 = 0;
  $81 = $28;
  $82 = $29; //@line 1272 "/emscripten/system/include/libcxx/string"
  $27 = $81;
  $83 = $27;
  $26 = $83;
  $84 = $26;
  $85 = ((($84)) + 4|0); //@line 1272 "/emscripten/system/include/libcxx/string"
  HEAP32[$85>>2] = $82; //@line 1272 "/emscripten/system/include/libcxx/string"
 } else {
  $34 = $67;
  $86 = $34;
  $33 = $86;
  $87 = $33;
  $32 = $87;
  $88 = $32;
  $31 = $88;
  $89 = $31; //@line 970 "/emscripten/system/include/libcxx/memory"
  $30 = $89;
  $90 = $30; //@line 436 "/emscripten/system/include/libcxx/type_traits"
  HEAP32[$48>>2] = 0; //@line 2800 "/emscripten/system/include/libcxx/string"
  __ZNSt3__211char_traitsIwE6assignERwRKw($90,$48); //@line 2800 "/emscripten/system/include/libcxx/string"
  $40 = $67;
  $41 = 0;
  $91 = $40;
  $92 = $41; //@line 1239 "/emscripten/system/include/libcxx/string"
  $93 = $92&255; //@line 1239 "/emscripten/system/include/libcxx/string"
  $39 = $91;
  $94 = $39;
  $38 = $94;
  $95 = $38;
  $96 = ((($95)) + 8|0); //@line 1239 "/emscripten/system/include/libcxx/string"
  $97 = ((($96)) + 3|0); //@line 1239 "/emscripten/system/include/libcxx/string"
  HEAP8[$97>>0] = $93; //@line 1239 "/emscripten/system/include/libcxx/string"
 }
 $25 = $66;
 $98 = $25;
 __THREW__ = 0;
 invoke_vii(301,($98|0),0); //@line 905 "/emscripten/system/include/libcxx/string"
 $99 = __THREW__; __THREW__ = 0;
 $100 = $99&1;
 if ($100) {
  $101 = ___cxa_find_matching_catch_3(0|0)|0;
  $102 = tempRet0;
  ___clang_call_terminate($101); //@line 905 "/emscripten/system/include/libcxx/string"
  // unreachable; //@line 905 "/emscripten/system/include/libcxx/string"
 }
 $103 = $50; //@line 2044 "/emscripten/system/include/libcxx/string"
 $24 = $103;
 $104 = $24;
 $23 = $104;
 $105 = $23;
 $22 = $66;
 $106 = $22;
 $21 = $106;
 $107 = $21;
 ;HEAP32[$107>>2]=HEAP32[$105>>2]|0;HEAP32[$107+4>>2]=HEAP32[$105+4>>2]|0;HEAP32[$107+8>>2]=HEAP32[$105+8>>2]|0; //@line 2044 "/emscripten/system/include/libcxx/string"
 $108 = $50; //@line 2045 "/emscripten/system/include/libcxx/string"
 $18 = $66;
 $19 = $108;
 $109 = $18;
 $110 = $19; //@line 1401 "/emscripten/system/include/libcxx/string"
 ;HEAP8[$17>>0]=HEAP8[$20>>0]|0;
 $15 = $109;
 $16 = $110;
 $111 = $15;
 $112 = $16; //@line 1408 "/emscripten/system/include/libcxx/string"
 $14 = $112;
 $113 = $14;
 $13 = $113;
 $114 = $13;
 $12 = $114;
 $115 = $12;
 $8 = $115;
 $11 = $111;
 $116 = $11;
 $10 = $116;
 $117 = $10;
 $9 = $117;
 $118 = $50; //@line 2046 "/emscripten/system/include/libcxx/string"
 $5 = $118;
 $119 = $5;
 $4 = $119;
 $120 = $4;
 $3 = $120;
 $121 = $3;
 $6 = $121; //@line 1312 "/emscripten/system/include/libcxx/string"
 $7 = 0; //@line 1313 "/emscripten/system/include/libcxx/string"
 while(1) {
  $122 = $7; //@line 1313 "/emscripten/system/include/libcxx/string"
  $123 = ($122>>>0)<(3); //@line 1313 "/emscripten/system/include/libcxx/string"
  if (!($123)) {
   break;
  }
  $124 = $6; //@line 1314 "/emscripten/system/include/libcxx/string"
  $125 = $7; //@line 1314 "/emscripten/system/include/libcxx/string"
  $126 = (($124) + ($125<<2)|0); //@line 1314 "/emscripten/system/include/libcxx/string"
  HEAP32[$126>>2] = 0; //@line 1314 "/emscripten/system/include/libcxx/string"
  $127 = $7; //@line 1313 "/emscripten/system/include/libcxx/string"
  $128 = (($127) + 1)|0; //@line 1313 "/emscripten/system/include/libcxx/string"
  $7 = $128; //@line 1313 "/emscripten/system/include/libcxx/string"
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($58); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal10getContextIM9ArcHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEEEPT_RKSB_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(4)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $4 = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $4; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI9ArcHeader5StateE7getWireIS2_EEPS3_RKMS2_S3_RKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $5 = $2; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $6 = HEAP32[$5>>2]|0; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $7 = (($4) + ($6)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $8 = (__ZN10emscripten8internal18GenericBindingTypeI5StateE10toWireTypeERKS2_($7)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($8|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI9ArcHeader5StateE7setWireIS2_EEvRKMS2_S3_RT_PS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $7 = (__ZN10emscripten8internal18GenericBindingTypeI5StateE12fromWireTypeEPS2_($6)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $8 = $4; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $9 = $3; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $10 = HEAP32[$9>>2]|0; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $11 = (($8) + ($10)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 (__ZN5StateaSERKS_($11,$7)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal10getContextIM9ArcHeader5StateEEPT_RKS5_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(4)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $4 = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $4; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal15raw_constructorI9ArcHeaderJEEEPT_DpNS0_11BindingTypeIT0_E8WireTypeE() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__Znwj(32)|0); //@line 445 "/emscripten/system/include/emscripten/bind.h"
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;HEAP32[$0+28>>2]=0|0; //@line 445 "/emscripten/system/include/emscripten/bind.h"
 __ZN9ArcHeaderC2Ev($0); //@line 445 "/emscripten/system/include/emscripten/bind.h"
 return ($0|0); //@line 445 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14raw_destructorI9ArcHeaderEEvPT_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 452 "/emscripten/system/include/emscripten/bind.h"
 $3 = ($2|0)==(0|0); //@line 452 "/emscripten/system/include/emscripten/bind.h"
 if (!($3)) {
  __ZN9ArcHeaderD2Ev($2); //@line 452 "/emscripten/system/include/emscripten/bind.h"
  __ZdlPv($2); //@line 452 "/emscripten/system/include/emscripten/bind.h"
 }
 STACKTOP = sp;return; //@line 453 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN9ArcHeaderD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0); //@line 30 "./src/cpp/bridge/bridge.cpp"
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3); //@line 30 "./src/cpp/bridge/bridge.cpp"
 __ZN5StateD2Ev($2); //@line 30 "./src/cpp/bridge/bridge.cpp"
 STACKTOP = sp;return; //@line 30 "./src/cpp/bridge/bridge.cpp"
}
function __ZN9ArcHeaderC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = $0;
 $11 = $10;
 __ZN5StateC2Ev($11); //@line 30 "./src/cpp/bridge/bridge.cpp"
 $12 = ((($11)) + 16|0); //@line 30 "./src/cpp/bridge/bridge.cpp"
 $9 = $12;
 $13 = $9;
 $8 = $13;
 $14 = $8;
 $7 = $14;
 $15 = $7;
 $6 = $15;
 ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0; //@line 2208 "/emscripten/system/include/libcxx/memory"
 $3 = $13;
 $16 = $3;
 $2 = $16;
 $17 = $2;
 $1 = $17;
 $18 = $1;
 $4 = $18; //@line 1312 "/emscripten/system/include/libcxx/string"
 $5 = 0; //@line 1313 "/emscripten/system/include/libcxx/string"
 while(1) {
  $19 = $5; //@line 1313 "/emscripten/system/include/libcxx/string"
  $20 = ($19>>>0)<(3); //@line 1313 "/emscripten/system/include/libcxx/string"
  if (!($20)) {
   break;
  }
  $21 = $4; //@line 1314 "/emscripten/system/include/libcxx/string"
  $22 = $5; //@line 1314 "/emscripten/system/include/libcxx/string"
  $23 = (($21) + ($22<<2)|0); //@line 1314 "/emscripten/system/include/libcxx/string"
  HEAP32[$23>>2] = 0; //@line 1314 "/emscripten/system/include/libcxx/string"
  $24 = $5; //@line 1313 "/emscripten/system/include/libcxx/string"
  $25 = (($24) + 1)|0; //@line 1313 "/emscripten/system/include/libcxx/string"
  $5 = $25; //@line 1313 "/emscripten/system/include/libcxx/string"
 }
 STACKTOP = sp;return; //@line 30 "./src/cpp/bridge/bridge.cpp"
}
function __ZN10emscripten8internal12MemberAccessI5StateNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE7getWireIS2_EEPNS0_11BindingTypeIS9_EUt_ERKMS2_S9_RKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $5 = $2; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $6 = HEAP32[$5>>2]|0; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $7 = (($4) + ($6)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $8 = (__ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE10toWireTypeERKS8_($7)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($8|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI5StateNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE7setWireIS2_EEvRKMS2_S9_RT_PNS0_11BindingTypeIS9_EUt_E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $17 = sp + 8|0;
 $20 = sp + 223|0;
 $47 = sp + 222|0;
 $48 = sp + 221|0;
 $51 = sp;
 $54 = sp + 220|0;
 $58 = sp + 12|0;
 $55 = $0;
 $56 = $1;
 $57 = $2;
 $59 = $57; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12fromWireTypeEPNS9_Ut_E($58,$59); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $60 = $56; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $61 = $55; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $62 = HEAP32[$61>>2]|0; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $63 = (($60) + ($62)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $52 = $63;
 $53 = $58;
 $64 = $52;
 $65 = $53; //@line 2055 "/emscripten/system/include/libcxx/string"
 ;HEAP8[$51>>0]=HEAP8[$54>>0]|0;
 $49 = $64;
 $50 = $65;
 $66 = $49;
 $46 = $66;
 $67 = $46;
 $45 = $67;
 $44 = $67;
 $68 = $44;
 $43 = $68;
 $69 = $43;
 $42 = $69;
 $70 = $42;
 $71 = ((($70)) + 11|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $72 = HEAP8[$71>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $73 = $72&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $74 = $73 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $75 = ($74|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($75) {
  $37 = $67;
  $76 = $37;
  $36 = $76;
  $77 = $36;
  $35 = $77;
  $78 = $35;
  $79 = HEAP32[$78>>2]|0; //@line 1292 "/emscripten/system/include/libcxx/string"
  HEAP8[$47>>0] = 0; //@line 2795 "/emscripten/system/include/libcxx/string"
  __ZNSt3__211char_traitsIcE6assignERcRKc($79,$47); //@line 2795 "/emscripten/system/include/libcxx/string"
  $28 = $67;
  $29 = 0;
  $80 = $28;
  $81 = $29; //@line 1272 "/emscripten/system/include/libcxx/string"
  $27 = $80;
  $82 = $27;
  $26 = $82;
  $83 = $26;
  $84 = ((($83)) + 4|0); //@line 1272 "/emscripten/system/include/libcxx/string"
  HEAP32[$84>>2] = $81; //@line 1272 "/emscripten/system/include/libcxx/string"
 } else {
  $34 = $67;
  $85 = $34;
  $33 = $85;
  $86 = $33;
  $32 = $86;
  $87 = $32;
  $31 = $87;
  $88 = $31; //@line 970 "/emscripten/system/include/libcxx/memory"
  $30 = $88;
  $89 = $30; //@line 436 "/emscripten/system/include/libcxx/type_traits"
  HEAP8[$48>>0] = 0; //@line 2800 "/emscripten/system/include/libcxx/string"
  __ZNSt3__211char_traitsIcE6assignERcRKc($89,$48); //@line 2800 "/emscripten/system/include/libcxx/string"
  $40 = $67;
  $41 = 0;
  $90 = $40;
  $91 = $41; //@line 1239 "/emscripten/system/include/libcxx/string"
  $92 = $91&255; //@line 1239 "/emscripten/system/include/libcxx/string"
  $39 = $90;
  $93 = $39;
  $38 = $93;
  $94 = $38;
  $95 = ((($94)) + 11|0); //@line 1239 "/emscripten/system/include/libcxx/string"
  HEAP8[$95>>0] = $92; //@line 1239 "/emscripten/system/include/libcxx/string"
 }
 $25 = $66;
 $96 = $25;
 __THREW__ = 0;
 invoke_vii(305,($96|0),0); //@line 905 "/emscripten/system/include/libcxx/string"
 $97 = __THREW__; __THREW__ = 0;
 $98 = $97&1;
 if ($98) {
  $99 = ___cxa_find_matching_catch_3(0|0)|0;
  $100 = tempRet0;
  ___clang_call_terminate($99); //@line 905 "/emscripten/system/include/libcxx/string"
  // unreachable; //@line 905 "/emscripten/system/include/libcxx/string"
 }
 $101 = $50; //@line 2044 "/emscripten/system/include/libcxx/string"
 $24 = $101;
 $102 = $24;
 $23 = $102;
 $103 = $23;
 $22 = $66;
 $104 = $22;
 $21 = $104;
 $105 = $21;
 ;HEAP32[$105>>2]=HEAP32[$103>>2]|0;HEAP32[$105+4>>2]=HEAP32[$103+4>>2]|0;HEAP32[$105+8>>2]=HEAP32[$103+8>>2]|0; //@line 2044 "/emscripten/system/include/libcxx/string"
 $106 = $50; //@line 2045 "/emscripten/system/include/libcxx/string"
 $18 = $66;
 $19 = $106;
 $107 = $18;
 $108 = $19; //@line 1401 "/emscripten/system/include/libcxx/string"
 ;HEAP8[$17>>0]=HEAP8[$20>>0]|0;
 $15 = $107;
 $16 = $108;
 $109 = $15;
 $110 = $16; //@line 1408 "/emscripten/system/include/libcxx/string"
 $14 = $110;
 $111 = $14;
 $13 = $111;
 $112 = $13;
 $12 = $112;
 $113 = $12;
 $8 = $113;
 $11 = $109;
 $114 = $11;
 $10 = $114;
 $115 = $10;
 $9 = $115;
 $116 = $50; //@line 2046 "/emscripten/system/include/libcxx/string"
 $5 = $116;
 $117 = $5;
 $4 = $117;
 $118 = $4;
 $3 = $118;
 $119 = $3;
 $6 = $119; //@line 1312 "/emscripten/system/include/libcxx/string"
 $7 = 0; //@line 1313 "/emscripten/system/include/libcxx/string"
 while(1) {
  $120 = $7; //@line 1313 "/emscripten/system/include/libcxx/string"
  $121 = ($120>>>0)<(3); //@line 1313 "/emscripten/system/include/libcxx/string"
  if (!($121)) {
   break;
  }
  $122 = $6; //@line 1314 "/emscripten/system/include/libcxx/string"
  $123 = $7; //@line 1314 "/emscripten/system/include/libcxx/string"
  $124 = (($122) + ($123<<2)|0); //@line 1314 "/emscripten/system/include/libcxx/string"
  HEAP32[$124>>2] = 0; //@line 1314 "/emscripten/system/include/libcxx/string"
  $125 = $7; //@line 1313 "/emscripten/system/include/libcxx/string"
  $126 = (($125) + 1)|0; //@line 1313 "/emscripten/system/include/libcxx/string"
  $7 = $126; //@line 1313 "/emscripten/system/include/libcxx/string"
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal10getContextIM5StateNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEPT_RKSB_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(4)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $4 = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $4; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (88|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12fromWireTypeEPNS9_Ut_E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $38 = sp;
 $40 = sp + 221|0;
 $51 = sp + 220|0;
 $58 = $1;
 $59 = $58; //@line 293 "/emscripten/system/include/emscripten/wire.h"
 $60 = ((($59)) + 4|0); //@line 293 "/emscripten/system/include/emscripten/wire.h"
 $61 = $58; //@line 293 "/emscripten/system/include/emscripten/wire.h"
 $62 = HEAP32[$61>>2]|0; //@line 293 "/emscripten/system/include/emscripten/wire.h"
 $55 = $0;
 $56 = $60;
 $57 = $62;
 $63 = $55;
 $54 = $63;
 $64 = $54;
 $53 = $64;
 $65 = $53;
 $52 = $65;
 ;HEAP32[$65>>2]=0|0;HEAP32[$65+4>>2]=0|0;HEAP32[$65+8>>2]=0|0; //@line 2208 "/emscripten/system/include/libcxx/memory"
 $66 = $56; //@line 1570 "/emscripten/system/include/libcxx/string"
 $67 = $57; //@line 1570 "/emscripten/system/include/libcxx/string"
 $46 = $63;
 $47 = $66;
 $48 = $67;
 $68 = $46;
 $69 = $48; //@line 1522 "/emscripten/system/include/libcxx/string"
 $44 = $68;
 $70 = $44;
 $43 = $70;
 $71 = $43;
 $42 = $71;
 $72 = $42;
 $41 = $72;
 $73 = $41;
 $39 = $73;
 $74 = $39; //@line 1578 "/emscripten/system/include/libcxx/memory"
 ;HEAP8[$38>>0]=HEAP8[$40>>0]|0;
 $37 = $74;
 $75 = $37; //@line 1716 "/emscripten/system/include/libcxx/memory"
 $36 = $75;
 $45 = -1; //@line 2839 "/emscripten/system/include/libcxx/string"
 $76 = $45; //@line 2843 "/emscripten/system/include/libcxx/string"
 $77 = (($76) - 16)|0; //@line 2843 "/emscripten/system/include/libcxx/string"
 $78 = ($69>>>0)>($77>>>0); //@line 1522 "/emscripten/system/include/libcxx/string"
 if ($78) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($68); //@line 1523 "/emscripten/system/include/libcxx/string"
  // unreachable; //@line 1523 "/emscripten/system/include/libcxx/string"
 }
 $79 = $48; //@line 1525 "/emscripten/system/include/libcxx/string"
 $80 = ($79>>>0)<(11); //@line 1525 "/emscripten/system/include/libcxx/string"
 $81 = $48;
 if ($80) {
  $34 = $68;
  $35 = $81;
  $82 = $34;
  $83 = $35; //@line 1239 "/emscripten/system/include/libcxx/string"
  $84 = $83&255; //@line 1239 "/emscripten/system/include/libcxx/string"
  $33 = $82;
  $85 = $33;
  $32 = $85;
  $86 = $32;
  $87 = ((($86)) + 11|0); //@line 1239 "/emscripten/system/include/libcxx/string"
  HEAP8[$87>>0] = $84; //@line 1239 "/emscripten/system/include/libcxx/string"
  $31 = $68;
  $88 = $31;
  $30 = $88;
  $89 = $30;
  $29 = $89;
  $90 = $29;
  $28 = $90;
  $91 = $28; //@line 970 "/emscripten/system/include/libcxx/memory"
  $27 = $91;
  $92 = $27; //@line 436 "/emscripten/system/include/libcxx/type_traits"
  $49 = $92; //@line 1528 "/emscripten/system/include/libcxx/string"
  $132 = $49; //@line 1538 "/emscripten/system/include/libcxx/string"
  $26 = $132;
  $133 = $26; //@line 1105 "/emscripten/system/include/libcxx/memory"
  $134 = $47; //@line 1538 "/emscripten/system/include/libcxx/string"
  $135 = $48; //@line 1538 "/emscripten/system/include/libcxx/string"
  (__ZNSt3__211char_traitsIcE4copyEPcPKcj($133,$134,$135)|0); //@line 1538 "/emscripten/system/include/libcxx/string"
  $136 = $49; //@line 1539 "/emscripten/system/include/libcxx/string"
  $137 = $48; //@line 1539 "/emscripten/system/include/libcxx/string"
  $138 = (($136) + ($137)|0); //@line 1539 "/emscripten/system/include/libcxx/string"
  HEAP8[$51>>0] = 0; //@line 1539 "/emscripten/system/include/libcxx/string"
  __ZNSt3__211char_traitsIcE6assignERcRKc($138,$51); //@line 1539 "/emscripten/system/include/libcxx/string"
  STACKTOP = sp;return; //@line 293 "/emscripten/system/include/emscripten/wire.h"
 }
 $6 = $81;
 $93 = $6; //@line 1324 "/emscripten/system/include/libcxx/string"
 $94 = ($93>>>0)<(11); //@line 1324 "/emscripten/system/include/libcxx/string"
 if ($94) {
  $101 = 11;
 } else {
  $95 = $6; //@line 1326 "/emscripten/system/include/libcxx/string"
  $96 = (($95) + 1)|0; //@line 1326 "/emscripten/system/include/libcxx/string"
  $5 = $96;
  $97 = $5; //@line 1320 "/emscripten/system/include/libcxx/string"
  $98 = (($97) + 15)|0; //@line 1320 "/emscripten/system/include/libcxx/string"
  $99 = $98 & -16; //@line 1320 "/emscripten/system/include/libcxx/string"
  $101 = $99;
 }
 $100 = (($101) - 1)|0; //@line 1326 "/emscripten/system/include/libcxx/string"
 $50 = $100; //@line 1532 "/emscripten/system/include/libcxx/string"
 $4 = $68;
 $102 = $4;
 $3 = $102;
 $103 = $3;
 $2 = $103;
 $104 = $2;
 $105 = $50; //@line 1533 "/emscripten/system/include/libcxx/string"
 $106 = (($105) + 1)|0; //@line 1533 "/emscripten/system/include/libcxx/string"
 $12 = $104;
 $13 = $106;
 $107 = $12; //@line 1526 "/emscripten/system/include/libcxx/memory"
 $108 = $13; //@line 1526 "/emscripten/system/include/libcxx/memory"
 $9 = $107;
 $10 = $108;
 $11 = 0;
 $109 = $9;
 $8 = $109;
 $110 = $10; //@line 1771 "/emscripten/system/include/libcxx/memory"
 $7 = $110;
 $111 = $7; //@line 215 "/emscripten/system/include/libcxx/new"
 $112 = (__Znwj($111)|0); //@line 215 "/emscripten/system/include/libcxx/new"
 $49 = $112; //@line 1533 "/emscripten/system/include/libcxx/string"
 $113 = $49; //@line 1534 "/emscripten/system/include/libcxx/string"
 $16 = $68;
 $17 = $113;
 $114 = $16;
 $115 = $17; //@line 1289 "/emscripten/system/include/libcxx/string"
 $15 = $114;
 $116 = $15;
 $14 = $116;
 $117 = $14;
 HEAP32[$117>>2] = $115; //@line 1289 "/emscripten/system/include/libcxx/string"
 $118 = $50; //@line 1535 "/emscripten/system/include/libcxx/string"
 $119 = (($118) + 1)|0; //@line 1535 "/emscripten/system/include/libcxx/string"
 $20 = $68;
 $21 = $119;
 $120 = $20;
 $121 = $21; //@line 1282 "/emscripten/system/include/libcxx/string"
 $122 = -2147483648 | $121; //@line 1282 "/emscripten/system/include/libcxx/string"
 $19 = $120;
 $123 = $19;
 $18 = $123;
 $124 = $18;
 $125 = ((($124)) + 8|0); //@line 1282 "/emscripten/system/include/libcxx/string"
 HEAP32[$125>>2] = $122; //@line 1282 "/emscripten/system/include/libcxx/string"
 $126 = $48; //@line 1536 "/emscripten/system/include/libcxx/string"
 $24 = $68;
 $25 = $126;
 $127 = $24;
 $128 = $25; //@line 1272 "/emscripten/system/include/libcxx/string"
 $23 = $127;
 $129 = $23;
 $22 = $129;
 $130 = $22;
 $131 = ((($130)) + 4|0); //@line 1272 "/emscripten/system/include/libcxx/string"
 HEAP32[$131>>2] = $128; //@line 1272 "/emscripten/system/include/libcxx/string"
 $132 = $49; //@line 1538 "/emscripten/system/include/libcxx/string"
 $26 = $132;
 $133 = $26; //@line 1105 "/emscripten/system/include/libcxx/memory"
 $134 = $47; //@line 1538 "/emscripten/system/include/libcxx/string"
 $135 = $48; //@line 1538 "/emscripten/system/include/libcxx/string"
 (__ZNSt3__211char_traitsIcE4copyEPcPKcj($133,$134,$135)|0); //@line 1538 "/emscripten/system/include/libcxx/string"
 $136 = $49; //@line 1539 "/emscripten/system/include/libcxx/string"
 $137 = $48; //@line 1539 "/emscripten/system/include/libcxx/string"
 $138 = (($136) + ($137)|0); //@line 1539 "/emscripten/system/include/libcxx/string"
 HEAP8[$51>>0] = 0; //@line 1539 "/emscripten/system/include/libcxx/string"
 __ZNSt3__211char_traitsIcE6assignERcRKc($138,$51); //@line 1539 "/emscripten/system/include/libcxx/string"
 STACKTOP = sp;return; //@line 293 "/emscripten/system/include/emscripten/wire.h"
}
function __ZNSt3__211char_traitsIcE6assignERcRKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 206 "/emscripten/system/include/libcxx/__string"
 $5 = HEAP8[$4>>0]|0; //@line 206 "/emscripten/system/include/libcxx/__string"
 $6 = $2; //@line 206 "/emscripten/system/include/libcxx/__string"
 HEAP8[$6>>0] = $5; //@line 206 "/emscripten/system/include/libcxx/__string"
 STACKTOP = sp;return; //@line 206 "/emscripten/system/include/libcxx/__string"
}
function __ZNSt3__211char_traitsIcE4copyEPcPKcj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 223 "/emscripten/system/include/libcxx/__string"
 $7 = ($6|0)==(0); //@line 223 "/emscripten/system/include/libcxx/__string"
 $8 = $3;
 if ($7) {
  STACKTOP = sp;return ($8|0); //@line 223 "/emscripten/system/include/libcxx/__string"
 }
 $9 = $4; //@line 223 "/emscripten/system/include/libcxx/__string"
 $10 = $5; //@line 223 "/emscripten/system/include/libcxx/__string"
 _memcpy(($8|0),($9|0),($10|0))|0; //@line 223 "/emscripten/system/include/libcxx/__string"
 STACKTOP = sp;return ($8|0); //@line 223 "/emscripten/system/include/libcxx/__string"
}
function __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE10toWireTypeERKS8_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $48 = $0;
 $50 = $48; //@line 287 "/emscripten/system/include/emscripten/wire.h"
 $47 = $50;
 $51 = $47;
 $46 = $51;
 $52 = $46;
 $45 = $52;
 $53 = $45;
 $44 = $53;
 $54 = $44;
 $43 = $54;
 $55 = $43;
 $56 = ((($55)) + 11|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $57 = HEAP8[$56>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $58 = $57&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $59 = $58 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $60 = ($59|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($60) {
  $39 = $52;
  $61 = $39;
  $38 = $61;
  $62 = $38;
  $37 = $62;
  $63 = $37;
  $64 = ((($63)) + 4|0); //@line 1275 "/emscripten/system/include/libcxx/string"
  $65 = HEAP32[$64>>2]|0; //@line 1275 "/emscripten/system/include/libcxx/string"
  $73 = $65;
 } else {
  $42 = $52;
  $66 = $42;
  $41 = $66;
  $67 = $41;
  $40 = $67;
  $68 = $40;
  $69 = ((($68)) + 11|0); //@line 1247 "/emscripten/system/include/libcxx/string"
  $70 = HEAP8[$69>>0]|0; //@line 1247 "/emscripten/system/include/libcxx/string"
  $71 = $70&255; //@line 1247 "/emscripten/system/include/libcxx/string"
  $73 = $71;
 }
 $72 = (4 + ($73))|0; //@line 287 "/emscripten/system/include/emscripten/wire.h"
 $74 = (_malloc($72)|0); //@line 287 "/emscripten/system/include/emscripten/wire.h"
 $49 = $74; //@line 287 "/emscripten/system/include/emscripten/wire.h"
 $75 = $48; //@line 288 "/emscripten/system/include/emscripten/wire.h"
 $11 = $75;
 $76 = $11;
 $10 = $76;
 $77 = $10;
 $9 = $77;
 $78 = $9;
 $8 = $78;
 $79 = $8;
 $7 = $79;
 $80 = $7;
 $81 = ((($80)) + 11|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $82 = HEAP8[$81>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $83 = $82&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $84 = $83 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $85 = ($84|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($85) {
  $3 = $77;
  $86 = $3;
  $2 = $86;
  $87 = $2;
  $1 = $87;
  $88 = $1;
  $89 = ((($88)) + 4|0); //@line 1275 "/emscripten/system/include/libcxx/string"
  $90 = HEAP32[$89>>2]|0; //@line 1275 "/emscripten/system/include/libcxx/string"
  $98 = $90;
 } else {
  $6 = $77;
  $91 = $6;
  $5 = $91;
  $92 = $5;
  $4 = $92;
  $93 = $4;
  $94 = ((($93)) + 11|0); //@line 1247 "/emscripten/system/include/libcxx/string"
  $95 = HEAP8[$94>>0]|0; //@line 1247 "/emscripten/system/include/libcxx/string"
  $96 = $95&255; //@line 1247 "/emscripten/system/include/libcxx/string"
  $98 = $96;
 }
 $97 = $49; //@line 288 "/emscripten/system/include/emscripten/wire.h"
 HEAP32[$97>>2] = $98; //@line 288 "/emscripten/system/include/emscripten/wire.h"
 $99 = $49; //@line 289 "/emscripten/system/include/emscripten/wire.h"
 $100 = ((($99)) + 4|0); //@line 289 "/emscripten/system/include/emscripten/wire.h"
 $101 = $48; //@line 289 "/emscripten/system/include/emscripten/wire.h"
 $25 = $101;
 $102 = $25;
 $24 = $102;
 $103 = $24;
 $23 = $103;
 $104 = $23;
 $22 = $104;
 $105 = $22;
 $21 = $105;
 $106 = $21;
 $107 = ((($106)) + 11|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $108 = HEAP8[$107>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $109 = $108&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $110 = $109 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $111 = ($110|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($111) {
  $15 = $103;
  $112 = $15;
  $14 = $112;
  $113 = $14;
  $13 = $113;
  $114 = $13;
  $115 = HEAP32[$114>>2]|0; //@line 1295 "/emscripten/system/include/libcxx/string"
  $121 = $115;
 } else {
  $20 = $103;
  $116 = $20;
  $19 = $116;
  $117 = $19;
  $18 = $117;
  $118 = $18;
  $17 = $118;
  $119 = $17; //@line 970 "/emscripten/system/include/libcxx/memory"
  $16 = $119;
  $120 = $16; //@line 436 "/emscripten/system/include/libcxx/type_traits"
  $121 = $120;
 }
 $12 = $121;
 $122 = $12; //@line 1105 "/emscripten/system/include/libcxx/memory"
 $123 = $48; //@line 289 "/emscripten/system/include/emscripten/wire.h"
 $36 = $123;
 $124 = $36;
 $35 = $124;
 $125 = $35;
 $34 = $125;
 $126 = $34;
 $33 = $126;
 $127 = $33;
 $32 = $127;
 $128 = $32;
 $129 = ((($128)) + 11|0); //@line 1213 "/emscripten/system/include/libcxx/string"
 $130 = HEAP8[$129>>0]|0; //@line 1213 "/emscripten/system/include/libcxx/string"
 $131 = $130&255; //@line 1213 "/emscripten/system/include/libcxx/string"
 $132 = $131 & 128; //@line 1213 "/emscripten/system/include/libcxx/string"
 $133 = ($132|0)!=(0); //@line 1213 "/emscripten/system/include/libcxx/string"
 if ($133) {
  $28 = $125;
  $134 = $28;
  $27 = $134;
  $135 = $27;
  $26 = $135;
  $136 = $26;
  $137 = ((($136)) + 4|0); //@line 1275 "/emscripten/system/include/libcxx/string"
  $138 = HEAP32[$137>>2]|0; //@line 1275 "/emscripten/system/include/libcxx/string"
  $145 = $138;
  _memcpy(($100|0),($122|0),($145|0))|0; //@line 289 "/emscripten/system/include/emscripten/wire.h"
  $146 = $49; //@line 290 "/emscripten/system/include/emscripten/wire.h"
  STACKTOP = sp;return ($146|0); //@line 290 "/emscripten/system/include/emscripten/wire.h"
 } else {
  $31 = $125;
  $139 = $31;
  $30 = $139;
  $140 = $30;
  $29 = $140;
  $141 = $29;
  $142 = ((($141)) + 11|0); //@line 1247 "/emscripten/system/include/libcxx/string"
  $143 = HEAP8[$142>>0]|0; //@line 1247 "/emscripten/system/include/libcxx/string"
  $144 = $143&255; //@line 1247 "/emscripten/system/include/libcxx/string"
  $145 = $144;
  _memcpy(($100|0),($122|0),($145|0))|0; //@line 289 "/emscripten/system/include/emscripten/wire.h"
  $146 = $49; //@line 290 "/emscripten/system/include/emscripten/wire.h"
  STACKTOP = sp;return ($146|0); //@line 290 "/emscripten/system/include/emscripten/wire.h"
 }
 return (0)|0;
}
function __ZN10emscripten8internal12MemberAccessI5StatejE7getWireIS2_EEjRKMS2_jRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $5 = $2; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $6 = HEAP32[$5>>2]|0; //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $7 = (($4) + ($6)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 $8 = (__ZN10emscripten8internal11BindingTypeIjE10toWireTypeERKj($7)|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($8|0); //@line 527 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal12MemberAccessI5StatejE7setWireIS2_EEvRKMS2_jRT_j($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $7 = (__ZN10emscripten8internal11BindingTypeIjE12fromWireTypeEj($6)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $8 = $4; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $9 = $3; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $10 = HEAP32[$9>>2]|0; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 $11 = (($8) + ($10)|0); //@line 536 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$11>>2] = $7; //@line 536 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return; //@line 537 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal10getContextIM5StatejEEPT_RKS4_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwj(4)|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $3 = $1; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 $4 = HEAP32[$3>>2]|0; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 HEAP32[$2>>2] = $4; //@line 558 "/emscripten/system/include/emscripten/bind.h"
 STACKTOP = sp;return ($2|0); //@line 558 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal15raw_constructorI5StateJEEEPT_DpNS0_11BindingTypeIT0_E8WireTypeE() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__Znwj(16)|0); //@line 445 "/emscripten/system/include/emscripten/bind.h"
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0; //@line 445 "/emscripten/system/include/emscripten/bind.h"
 __ZN5StateC2Ev($0); //@line 445 "/emscripten/system/include/emscripten/bind.h"
 return ($0|0); //@line 445 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14raw_destructorI5StateEEvPT_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 452 "/emscripten/system/include/emscripten/bind.h"
 $3 = ($2|0)==(0|0); //@line 452 "/emscripten/system/include/emscripten/bind.h"
 if (!($3)) {
  __ZN5StateD2Ev($2); //@line 452 "/emscripten/system/include/emscripten/bind.h"
  __ZdlPv($2); //@line 452 "/emscripten/system/include/emscripten/bind.h"
 }
 STACKTOP = sp;return; //@line 453 "/emscripten/system/include/emscripten/bind.h"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJ5StateNS0_17AllowedRawPointerI10RarArchiveEEbEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2728|0); //@line 208 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIP10RarArchiveE12fromWireTypeES3_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 344 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($2|0); //@line 344 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIbE12fromWireTypeEb($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0&1;
 $1 = $2;
 $3 = $1; //@line 276 "/emscripten/system/include/emscripten/wire.h"
 $4 = $3&1; //@line 276 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($4|0); //@line 276 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal18GenericBindingTypeI5StateE10toWireTypeEOS2_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = (__Znwj(16)|0); //@line 358 "/emscripten/system/include/emscripten/wire.h"
 $4 = $2; //@line 358 "/emscripten/system/include/emscripten/wire.h"
 $1 = $4;
 $5 = $1; //@line 2189 "/emscripten/system/include/libcxx/type_traits"
 __ZN5StateC2EOS_($3,$5); //@line 358 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($3|0); //@line 358 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN5StateC2EOS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = $0;
 $11 = $1;
 $12 = $10;
 $13 = $11; //@line 24 "./src/cpp/bridge/bridge.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 24 "./src/cpp/bridge/bridge.cpp"
 HEAP32[$12>>2] = $14; //@line 24 "./src/cpp/bridge/bridge.cpp"
 $15 = ((($12)) + 4|0); //@line 24 "./src/cpp/bridge/bridge.cpp"
 $16 = $11; //@line 24 "./src/cpp/bridge/bridge.cpp"
 $17 = ((($16)) + 4|0); //@line 24 "./src/cpp/bridge/bridge.cpp"
 $8 = $15;
 $9 = $17;
 $18 = $8;
 $19 = $9; //@line 1624 "/emscripten/system/include/libcxx/string"
 $7 = $19;
 $20 = $7; //@line 2181 "/emscripten/system/include/libcxx/type_traits"
 ;HEAP32[$18>>2]=HEAP32[$20>>2]|0;HEAP32[$18+4>>2]=HEAP32[$20+4>>2]|0;HEAP32[$18+8>>2]=HEAP32[$20+8>>2]|0; //@line 1624 "/emscripten/system/include/libcxx/string"
 $21 = $9; //@line 1626 "/emscripten/system/include/libcxx/string"
 $4 = $21;
 $22 = $4;
 $3 = $22;
 $23 = $3;
 $2 = $23;
 $24 = $2;
 $5 = $24; //@line 1312 "/emscripten/system/include/libcxx/string"
 $6 = 0; //@line 1313 "/emscripten/system/include/libcxx/string"
 while(1) {
  $25 = $6; //@line 1313 "/emscripten/system/include/libcxx/string"
  $26 = ($25>>>0)<(3); //@line 1313 "/emscripten/system/include/libcxx/string"
  if (!($26)) {
   break;
  }
  $27 = $5; //@line 1314 "/emscripten/system/include/libcxx/string"
  $28 = $6; //@line 1314 "/emscripten/system/include/libcxx/string"
  $29 = (($27) + ($28<<2)|0); //@line 1314 "/emscripten/system/include/libcxx/string"
  HEAP32[$29>>2] = 0; //@line 1314 "/emscripten/system/include/libcxx/string"
  $30 = $6; //@line 1313 "/emscripten/system/include/libcxx/string"
  $31 = (($30) + 1)|0; //@line 1313 "/emscripten/system/include/libcxx/string"
  $6 = $31; //@line 1313 "/emscripten/system/include/libcxx/string"
 }
 STACKTOP = sp;return; //@line 24 "./src/cpp/bridge/bridge.cpp"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJ13ArcFileHeaderNS0_17AllowedRawPointerI10RarArchiveEEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2740|0); //@line 208 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal18GenericBindingTypeI13ArcFileHeaderE10toWireTypeEOS2_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = (__Znwj(72)|0); //@line 358 "/emscripten/system/include/emscripten/wire.h"
 $4 = $2; //@line 358 "/emscripten/system/include/emscripten/wire.h"
 $1 = $4;
 $5 = $1; //@line 2189 "/emscripten/system/include/libcxx/type_traits"
 __ZN13ArcFileHeaderC2EOS_($3,$5); //@line 358 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($3|0); //@line 358 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN13ArcFileHeaderC2EOS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = $0;
 $11 = $1;
 $12 = $10;
 $13 = $11; //@line 38 "./src/cpp/bridge/bridge.cpp"
 __ZN5StateC2EOS_($12,$13); //@line 38 "./src/cpp/bridge/bridge.cpp"
 $14 = ((($12)) + 16|0); //@line 38 "./src/cpp/bridge/bridge.cpp"
 $15 = $11; //@line 38 "./src/cpp/bridge/bridge.cpp"
 $16 = ((($15)) + 16|0); //@line 38 "./src/cpp/bridge/bridge.cpp"
 $8 = $14;
 $9 = $16;
 $17 = $8;
 $18 = $9; //@line 1624 "/emscripten/system/include/libcxx/string"
 $7 = $18;
 $19 = $7; //@line 2181 "/emscripten/system/include/libcxx/type_traits"
 ;HEAP32[$17>>2]=HEAP32[$19>>2]|0;HEAP32[$17+4>>2]=HEAP32[$19+4>>2]|0;HEAP32[$17+8>>2]=HEAP32[$19+8>>2]|0; //@line 1624 "/emscripten/system/include/libcxx/string"
 $20 = $9; //@line 1626 "/emscripten/system/include/libcxx/string"
 $4 = $20;
 $21 = $4;
 $3 = $21;
 $22 = $3;
 $2 = $22;
 $23 = $2;
 $5 = $23; //@line 1312 "/emscripten/system/include/libcxx/string"
 $6 = 0; //@line 1313 "/emscripten/system/include/libcxx/string"
 while(1) {
  $24 = $6; //@line 1313 "/emscripten/system/include/libcxx/string"
  $25 = ($24>>>0)<(3); //@line 1313 "/emscripten/system/include/libcxx/string"
  if (!($25)) {
   break;
  }
  $26 = $5; //@line 1314 "/emscripten/system/include/libcxx/string"
  $27 = $6; //@line 1314 "/emscripten/system/include/libcxx/string"
  $28 = (($26) + ($27<<2)|0); //@line 1314 "/emscripten/system/include/libcxx/string"
  HEAP32[$28>>2] = 0; //@line 1314 "/emscripten/system/include/libcxx/string"
  $29 = $6; //@line 1313 "/emscripten/system/include/libcxx/string"
  $30 = (($29) + 1)|0; //@line 1313 "/emscripten/system/include/libcxx/string"
  $6 = $30; //@line 1313 "/emscripten/system/include/libcxx/string"
 }
 $31 = ((($12)) + 28|0); //@line 38 "./src/cpp/bridge/bridge.cpp"
 $32 = $11; //@line 38 "./src/cpp/bridge/bridge.cpp"
 $33 = ((($32)) + 28|0); //@line 38 "./src/cpp/bridge/bridge.cpp"
 dest=$31; src=$33; stop=dest+44|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0)); //@line 38 "./src/cpp/bridge/bridge.cpp"
 STACKTOP = sp;return; //@line 38 "./src/cpp/bridge/bridge.cpp"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJ9ArcHeaderNS0_17AllowedRawPointerI10RarArchiveEERKNSt3__212basic_stringIwNS7_11char_traitsIwEENS7_9allocatorIwEEEESF_bEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2748|0); //@line 208 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal18GenericBindingTypeI9ArcHeaderE10toWireTypeEOS2_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = (__Znwj(32)|0); //@line 358 "/emscripten/system/include/emscripten/wire.h"
 $4 = $2; //@line 358 "/emscripten/system/include/emscripten/wire.h"
 $1 = $4;
 $5 = $1; //@line 2189 "/emscripten/system/include/libcxx/type_traits"
 __ZN9ArcHeaderC2EOS_($3,$5); //@line 358 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($3|0); //@line 358 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN9ArcHeaderC2EOS_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = $0;
 $11 = $1;
 $12 = $10;
 $13 = $11; //@line 30 "./src/cpp/bridge/bridge.cpp"
 __ZN5StateC2EOS_($12,$13); //@line 30 "./src/cpp/bridge/bridge.cpp"
 $14 = ((($12)) + 16|0); //@line 30 "./src/cpp/bridge/bridge.cpp"
 $15 = $11; //@line 30 "./src/cpp/bridge/bridge.cpp"
 $16 = ((($15)) + 16|0); //@line 30 "./src/cpp/bridge/bridge.cpp"
 $8 = $14;
 $9 = $16;
 $17 = $8;
 $18 = $9; //@line 1624 "/emscripten/system/include/libcxx/string"
 $7 = $18;
 $19 = $7; //@line 2181 "/emscripten/system/include/libcxx/type_traits"
 ;HEAP32[$17>>2]=HEAP32[$19>>2]|0;HEAP32[$17+4>>2]=HEAP32[$19+4>>2]|0;HEAP32[$17+8>>2]=HEAP32[$19+8>>2]|0; //@line 1624 "/emscripten/system/include/libcxx/string"
 $20 = $9; //@line 1626 "/emscripten/system/include/libcxx/string"
 $4 = $20;
 $21 = $4;
 $3 = $21;
 $22 = $3;
 $2 = $22;
 $23 = $2;
 $5 = $23; //@line 1312 "/emscripten/system/include/libcxx/string"
 $6 = 0; //@line 1313 "/emscripten/system/include/libcxx/string"
 while(1) {
  $24 = $6; //@line 1313 "/emscripten/system/include/libcxx/string"
  $25 = ($24>>>0)<(3); //@line 1313 "/emscripten/system/include/libcxx/string"
  if (!($25)) {
   break;
  }
  $26 = $5; //@line 1314 "/emscripten/system/include/libcxx/string"
  $27 = $6; //@line 1314 "/emscripten/system/include/libcxx/string"
  $28 = (($26) + ($27<<2)|0); //@line 1314 "/emscripten/system/include/libcxx/string"
  HEAP32[$28>>2] = 0; //@line 1314 "/emscripten/system/include/libcxx/string"
  $29 = $6; //@line 1313 "/emscripten/system/include/libcxx/string"
  $30 = (($29) + 1)|0; //@line 1313 "/emscripten/system/include/libcxx/string"
  $6 = $30; //@line 1313 "/emscripten/system/include/libcxx/string"
 }
 $31 = ((($12)) + 28|0); //@line 30 "./src/cpp/bridge/bridge.cpp"
 $32 = $11; //@line 30 "./src/cpp/bridge/bridge.cpp"
 $33 = ((($32)) + 28|0); //@line 30 "./src/cpp/bridge/bridge.cpp"
 $34 = HEAP32[$33>>2]|0; //@line 30 "./src/cpp/bridge/bridge.cpp"
 HEAP32[$31>>2] = $34; //@line 30 "./src/cpp/bridge/bridge.cpp"
 STACKTOP = sp;return; //@line 30 "./src/cpp/bridge/bridge.cpp"
}
function __Z12listCallbackjlll($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 17 "./src/cpp/bridge/bridge.cpp"
 $9 = ($8|0)==(2); //@line 17 "./src/cpp/bridge/bridge.cpp"
 if (!($9)) {
  STACKTOP = sp;return 1; //@line 21 "./src/cpp/bridge/bridge.cpp"
 }
 $10 = $6; //@line 19 "./src/cpp/bridge/bridge.cpp"
 $11 = $10; //@line 19 "./src/cpp/bridge/bridge.cpp"
 (_strcpy($11,64832)|0); //@line 19 "./src/cpp/bridge/bridge.cpp"
 STACKTOP = sp;return 1; //@line 21 "./src/cpp/bridge/bridge.cpp"
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI10RarArchiveEEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (2768|0); //@line 208 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11BindingTypeIP10RarArchiveE10toWireTypeES3_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 341 "/emscripten/system/include/emscripten/wire.h"
 STACKTOP = sp;return ($2|0); //@line 341 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10RarArchiveC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0; //@line 56 "./src/cpp/bridge/bridge.cpp"
 (_setlocale(6,12186)|0); //@line 58 "./src/cpp/bridge/bridge.cpp"
 STACKTOP = sp;return; //@line 59 "./src/cpp/bridge/bridge.cpp"
}
function __ZN10emscripten8internal11LightTypeIDIPK10RarArchiveE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (136|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIP10RarArchiveE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (112|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDI10RarArchiveE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (128|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10RarArchiveD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0; //@line 62 "./src/cpp/bridge/bridge.cpp"
 $4 = ($3|0)!=(0|0); //@line 62 "./src/cpp/bridge/bridge.cpp"
 if (!($4)) {
  HEAP32[$2>>2] = 0; //@line 66 "./src/cpp/bridge/bridge.cpp"
  STACKTOP = sp;return; //@line 67 "./src/cpp/bridge/bridge.cpp"
 }
 $5 = HEAP32[$2>>2]|0; //@line 64 "./src/cpp/bridge/bridge.cpp"
 __THREW__ = 0;
 (invoke_ii(306,($5|0))|0); //@line 64 "./src/cpp/bridge/bridge.cpp"
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if ($7) {
  $8 = ___cxa_find_matching_catch_3(0|0)|0;
  $9 = tempRet0;
  ___clang_call_terminate($8); //@line 64 "./src/cpp/bridge/bridge.cpp"
  // unreachable; //@line 64 "./src/cpp/bridge/bridge.cpp"
 } else {
  HEAP32[$2>>2] = 0; //@line 66 "./src/cpp/bridge/bridge.cpp"
  STACKTOP = sp;return; //@line 67 "./src/cpp/bridge/bridge.cpp"
 }
}
function __ZN10emscripten8internal14getLightTypeIDI10RarArchiveEEPKvRKT_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return (128|0); //@line 82 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN4FileD0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN4FileD2Ev($2); //@line 32 "./src/cpp/bridge/file.cpp"
 __ZdlPv($2); //@line 32 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return; //@line 38 "./src/cpp/bridge/file.cpp"
}
function __ZN4File4OpenEPKwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2080|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2080|0);
 $11 = sp + 24|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $13 = $3;
 $14 = ((($13)) + 8216|0); //@line 54 "./src/cpp/bridge/file.cpp"
 HEAP32[$14>>2] = 0; //@line 54 "./src/cpp/bridge/file.cpp"
 $15 = ((($13)) + 21|0); //@line 56 "./src/cpp/bridge/file.cpp"
 $16 = HEAP8[$15>>0]|0; //@line 56 "./src/cpp/bridge/file.cpp"
 $17 = $16&1; //@line 56 "./src/cpp/bridge/file.cpp"
 if ($17) {
  $22 = 1;
 } else {
  $18 = $5; //@line 56 "./src/cpp/bridge/file.cpp"
  $19 = $18 & 4; //@line 56 "./src/cpp/bridge/file.cpp"
  $20 = ($19|0)!=(0); //@line 56 "./src/cpp/bridge/file.cpp"
  $22 = $20;
 }
 $21 = $22&1; //@line 56 "./src/cpp/bridge/file.cpp"
 $7 = $21; //@line 56 "./src/cpp/bridge/file.cpp"
 $23 = $5; //@line 57 "./src/cpp/bridge/file.cpp"
 $24 = $23 & 1; //@line 57 "./src/cpp/bridge/file.cpp"
 $25 = ($24|0)!=(0); //@line 57 "./src/cpp/bridge/file.cpp"
 $26 = $25&1; //@line 57 "./src/cpp/bridge/file.cpp"
 $8 = $26; //@line 57 "./src/cpp/bridge/file.cpp"
 $27 = $5; //@line 58 "./src/cpp/bridge/file.cpp"
 $28 = $27 & 2; //@line 58 "./src/cpp/bridge/file.cpp"
 $29 = ($28|0)!=(0); //@line 58 "./src/cpp/bridge/file.cpp"
 $30 = $29&1; //@line 58 "./src/cpp/bridge/file.cpp"
 $9 = $30; //@line 58 "./src/cpp/bridge/file.cpp"
 $31 = $8; //@line 59 "./src/cpp/bridge/file.cpp"
 $32 = $31&1; //@line 59 "./src/cpp/bridge/file.cpp"
 if ($32) {
  $36 = 2;
 } else {
  $33 = $9; //@line 59 "./src/cpp/bridge/file.cpp"
  $34 = $33&1; //@line 59 "./src/cpp/bridge/file.cpp"
  $35 = $34 ? 1 : 0; //@line 59 "./src/cpp/bridge/file.cpp"
  $36 = $35;
 }
 $10 = $36; //@line 59 "./src/cpp/bridge/file.cpp"
 $37 = $4; //@line 61 "./src/cpp/bridge/file.cpp"
 (__Z10WideToCharPKwPcj($37,$11,2048)|0); //@line 61 "./src/cpp/bridge/file.cpp"
 $38 = $4; //@line 70 "./src/cpp/bridge/file.cpp"
 $39 = (_jsOpen(($38|0))|0); //@line 70 "./src/cpp/bridge/file.cpp"
 $6 = $39; //@line 70 "./src/cpp/bridge/file.cpp"
 $40 = $6; //@line 71 "./src/cpp/bridge/file.cpp"
 $41 = ($40|0)==(0|0); //@line 71 "./src/cpp/bridge/file.cpp"
 if ($41) {
  $42 = (___errno_location()|0); //@line 71 "./src/cpp/bridge/file.cpp"
  $43 = HEAP32[$42>>2]|0; //@line 71 "./src/cpp/bridge/file.cpp"
  $44 = ($43|0)==(2); //@line 71 "./src/cpp/bridge/file.cpp"
  if ($44) {
   $45 = ((($13)) + 8216|0); //@line 72 "./src/cpp/bridge/file.cpp"
   HEAP32[$45>>2] = 1; //@line 72 "./src/cpp/bridge/file.cpp"
  }
 }
 $46 = ((($13)) + 18|0); //@line 73 "./src/cpp/bridge/file.cpp"
 HEAP8[$46>>0] = 0; //@line 73 "./src/cpp/bridge/file.cpp"
 $47 = ((($13)) + 12|0); //@line 74 "./src/cpp/bridge/file.cpp"
 HEAP32[$47>>2] = 0; //@line 74 "./src/cpp/bridge/file.cpp"
 $48 = ((($13)) + 16|0); //@line 75 "./src/cpp/bridge/file.cpp"
 HEAP8[$48>>0] = 0; //@line 75 "./src/cpp/bridge/file.cpp"
 $49 = $6; //@line 76 "./src/cpp/bridge/file.cpp"
 $50 = ($49|0)!=(0|0); //@line 76 "./src/cpp/bridge/file.cpp"
 $51 = $50&1; //@line 76 "./src/cpp/bridge/file.cpp"
 $12 = $51; //@line 76 "./src/cpp/bridge/file.cpp"
 $52 = $12; //@line 77 "./src/cpp/bridge/file.cpp"
 $53 = $52&1; //@line 77 "./src/cpp/bridge/file.cpp"
 if (!($53)) {
  $58 = $12; //@line 82 "./src/cpp/bridge/file.cpp"
  $59 = $58&1; //@line 82 "./src/cpp/bridge/file.cpp"
  STACKTOP = sp;return ($59|0); //@line 82 "./src/cpp/bridge/file.cpp"
 }
 $54 = $6; //@line 79 "./src/cpp/bridge/file.cpp"
 $55 = ((($13)) + 4|0); //@line 79 "./src/cpp/bridge/file.cpp"
 HEAP32[$55>>2] = $54; //@line 79 "./src/cpp/bridge/file.cpp"
 $56 = ((($13)) + 24|0); //@line 80 "./src/cpp/bridge/file.cpp"
 $57 = $4; //@line 80 "./src/cpp/bridge/file.cpp"
 (__Z8wcsncpyzPwPKwj($56,$57,2048)|0); //@line 80 "./src/cpp/bridge/file.cpp"
 $58 = $12; //@line 82 "./src/cpp/bridge/file.cpp"
 $59 = $58&1; //@line 82 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return ($59|0); //@line 82 "./src/cpp/bridge/file.cpp"
}
function __ZN4File4ReadEPvj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $3;
 $12 = $6; //@line 212 "./src/cpp/bridge/file.cpp"
 $13 = $12; //@line 212 "./src/cpp/bridge/file.cpp"
 HEAP32[$13>>2] = 0; //@line 212 "./src/cpp/bridge/file.cpp"
 $14 = (($12) + 4)|0; //@line 212 "./src/cpp/bridge/file.cpp"
 $15 = $14; //@line 212 "./src/cpp/bridge/file.cpp"
 HEAP32[$15>>2] = 0; //@line 212 "./src/cpp/bridge/file.cpp"
 $16 = ((($11)) + 17|0); //@line 214 "./src/cpp/bridge/file.cpp"
 $17 = HEAP8[$16>>0]|0; //@line 214 "./src/cpp/bridge/file.cpp"
 $18 = $17&1; //@line 214 "./src/cpp/bridge/file.cpp"
 if ($18) {
  $19 = HEAP32[$11>>2]|0; //@line 215 "./src/cpp/bridge/file.cpp"
  $20 = ((($19)) + 20|0); //@line 215 "./src/cpp/bridge/file.cpp"
  $21 = HEAP32[$20>>2]|0; //@line 215 "./src/cpp/bridge/file.cpp"
  $22 = (FUNCTION_TABLE_ii[$21 & 511]($11)|0); //@line 215 "./src/cpp/bridge/file.cpp"
  $23 = tempRet0; //@line 215 "./src/cpp/bridge/file.cpp"
  $24 = $6; //@line 215 "./src/cpp/bridge/file.cpp"
  $25 = $24; //@line 215 "./src/cpp/bridge/file.cpp"
  HEAP32[$25>>2] = $22; //@line 215 "./src/cpp/bridge/file.cpp"
  $26 = (($24) + 4)|0; //@line 215 "./src/cpp/bridge/file.cpp"
  $27 = $26; //@line 215 "./src/cpp/bridge/file.cpp"
  HEAP32[$27>>2] = $23; //@line 215 "./src/cpp/bridge/file.cpp"
 }
 while(1) {
  $28 = $4; //@line 219 "./src/cpp/bridge/file.cpp"
  $29 = $5; //@line 219 "./src/cpp/bridge/file.cpp"
  $30 = (__ZN4File10DirectReadEPvj($11,$28,$29)|0); //@line 219 "./src/cpp/bridge/file.cpp"
  $7 = $30; //@line 219 "./src/cpp/bridge/file.cpp"
  $31 = $7; //@line 220 "./src/cpp/bridge/file.cpp"
  $32 = ($31|0)==(-1); //@line 220 "./src/cpp/bridge/file.cpp"
  if (!($32)) {
   label = 14;
   break;
  }
  $33 = ((($11)) + 8216|0); //@line 222 "./src/cpp/bridge/file.cpp"
  HEAP32[$33>>2] = 2; //@line 222 "./src/cpp/bridge/file.cpp"
  $34 = ((($11)) + 20|0); //@line 223 "./src/cpp/bridge/file.cpp"
  $35 = HEAP8[$34>>0]|0; //@line 223 "./src/cpp/bridge/file.cpp"
  $36 = $35&1; //@line 223 "./src/cpp/bridge/file.cpp"
  if (!($36)) {
   label = 14;
   break;
  }
  $37 = ((($11)) + 17|0); //@line 224 "./src/cpp/bridge/file.cpp"
  $38 = HEAP8[$37>>0]|0; //@line 224 "./src/cpp/bridge/file.cpp"
  $39 = $38&1; //@line 224 "./src/cpp/bridge/file.cpp"
  if ($39) {
   label = 6;
   break;
  }
  $74 = ((($11)) + 12|0); //@line 237 "./src/cpp/bridge/file.cpp"
  $75 = HEAP32[$74>>2]|0; //@line 237 "./src/cpp/bridge/file.cpp"
  $76 = ($75|0)==(0); //@line 237 "./src/cpp/bridge/file.cpp"
  if (!($76)) {
   label = 13;
   break;
  }
  $77 = ((($11)) + 24|0); //@line 237 "./src/cpp/bridge/file.cpp"
  $78 = (__ZN12ErrorHandler13AskRepeatReadEPKw(756,$77)|0); //@line 237 "./src/cpp/bridge/file.cpp"
  if (!($78)) {
   label = 13;
   break;
  }
 }
 if ((label|0) == 6) {
  $7 = 0; //@line 226 "./src/cpp/bridge/file.cpp"
  $8 = 0; //@line 227 "./src/cpp/bridge/file.cpp"
  while(1) {
   $40 = $8; //@line 227 "./src/cpp/bridge/file.cpp"
   $41 = $5; //@line 227 "./src/cpp/bridge/file.cpp"
   $42 = ($40>>>0)<($41>>>0); //@line 227 "./src/cpp/bridge/file.cpp"
   if (!($42)) {
    break;
   }
   $43 = HEAP32[$11>>2]|0; //@line 229 "./src/cpp/bridge/file.cpp"
   $44 = ((($43)) + 16|0); //@line 229 "./src/cpp/bridge/file.cpp"
   $45 = HEAP32[$44>>2]|0; //@line 229 "./src/cpp/bridge/file.cpp"
   $46 = $6; //@line 229 "./src/cpp/bridge/file.cpp"
   $47 = $46; //@line 229 "./src/cpp/bridge/file.cpp"
   $48 = HEAP32[$47>>2]|0; //@line 229 "./src/cpp/bridge/file.cpp"
   $49 = (($46) + 4)|0; //@line 229 "./src/cpp/bridge/file.cpp"
   $50 = $49; //@line 229 "./src/cpp/bridge/file.cpp"
   $51 = HEAP32[$50>>2]|0; //@line 229 "./src/cpp/bridge/file.cpp"
   $52 = $8; //@line 229 "./src/cpp/bridge/file.cpp"
   $53 = (_i64Add(($48|0),($51|0),($52|0),0)|0); //@line 229 "./src/cpp/bridge/file.cpp"
   $54 = tempRet0; //@line 229 "./src/cpp/bridge/file.cpp"
   FUNCTION_TABLE_viiii[$45 & 255]($11,$53,$54,0); //@line 229 "./src/cpp/bridge/file.cpp"
   $55 = $5; //@line 230 "./src/cpp/bridge/file.cpp"
   $56 = $8; //@line 230 "./src/cpp/bridge/file.cpp"
   $57 = (($55) - ($56))|0; //@line 230 "./src/cpp/bridge/file.cpp"
   $58 = ($57>>>0)<(512); //@line 230 "./src/cpp/bridge/file.cpp"
   if ($58) {
    $59 = $5; //@line 230 "./src/cpp/bridge/file.cpp"
    $60 = $8; //@line 230 "./src/cpp/bridge/file.cpp"
    $61 = (($59) - ($60))|0; //@line 230 "./src/cpp/bridge/file.cpp"
    $62 = $61;
   } else {
    $62 = 512;
   }
   $9 = $62; //@line 230 "./src/cpp/bridge/file.cpp"
   $63 = $4; //@line 231 "./src/cpp/bridge/file.cpp"
   $64 = $9; //@line 231 "./src/cpp/bridge/file.cpp"
   $65 = (__ZN4File10DirectReadEPvj($11,$63,$64)|0); //@line 231 "./src/cpp/bridge/file.cpp"
   $10 = $65; //@line 231 "./src/cpp/bridge/file.cpp"
   $66 = $10; //@line 232 "./src/cpp/bridge/file.cpp"
   $67 = ($66|0)==(-1); //@line 232 "./src/cpp/bridge/file.cpp"
   $68 = $10; //@line 232 "./src/cpp/bridge/file.cpp"
   $69 = $67 ? 512 : $68; //@line 232 "./src/cpp/bridge/file.cpp"
   $70 = $7; //@line 232 "./src/cpp/bridge/file.cpp"
   $71 = (($70) + ($69))|0; //@line 232 "./src/cpp/bridge/file.cpp"
   $7 = $71; //@line 232 "./src/cpp/bridge/file.cpp"
   $72 = $8; //@line 227 "./src/cpp/bridge/file.cpp"
   $73 = (($72) + 512)|0; //@line 227 "./src/cpp/bridge/file.cpp"
   $8 = $73; //@line 227 "./src/cpp/bridge/file.cpp"
  }
  $80 = $7; //@line 244 "./src/cpp/bridge/file.cpp"
  STACKTOP = sp;return ($80|0); //@line 244 "./src/cpp/bridge/file.cpp"
 }
 else if ((label|0) == 13) {
  $79 = ((($11)) + 24|0); //@line 239 "./src/cpp/bridge/file.cpp"
  __ZN12ErrorHandler9ReadErrorEPKw(756,$79); //@line 239 "./src/cpp/bridge/file.cpp"
  $80 = $7; //@line 244 "./src/cpp/bridge/file.cpp"
  STACKTOP = sp;return ($80|0); //@line 244 "./src/cpp/bridge/file.cpp"
 }
 else if ((label|0) == 14) {
  $80 = $7; //@line 244 "./src/cpp/bridge/file.cpp"
  STACKTOP = sp;return ($80|0); //@line 244 "./src/cpp/bridge/file.cpp"
 }
 return (0)|0;
}
function __ZN4File4SeekExi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp;
 $4 = $0;
 $7 = $5;
 $8 = $7;
 HEAP32[$8>>2] = $1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $2;
 $6 = $3;
 $11 = $4;
 $12 = $5; //@line 271 "./src/cpp/bridge/file.cpp"
 $13 = $12; //@line 271 "./src/cpp/bridge/file.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 271 "./src/cpp/bridge/file.cpp"
 $15 = (($12) + 4)|0; //@line 271 "./src/cpp/bridge/file.cpp"
 $16 = $15; //@line 271 "./src/cpp/bridge/file.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 271 "./src/cpp/bridge/file.cpp"
 $18 = $6; //@line 271 "./src/cpp/bridge/file.cpp"
 $19 = (__ZN4File7RawSeekExi($11,$14,$17,$18)|0); //@line 271 "./src/cpp/bridge/file.cpp"
 if ($19) {
  STACKTOP = sp;return; //@line 273 "./src/cpp/bridge/file.cpp"
 }
 $20 = ((($11)) + 20|0); //@line 271 "./src/cpp/bridge/file.cpp"
 $21 = HEAP8[$20>>0]|0; //@line 271 "./src/cpp/bridge/file.cpp"
 $22 = $21&1; //@line 271 "./src/cpp/bridge/file.cpp"
 if (!($22)) {
  STACKTOP = sp;return; //@line 273 "./src/cpp/bridge/file.cpp"
 }
 $23 = ((($11)) + 24|0); //@line 272 "./src/cpp/bridge/file.cpp"
 __ZN12ErrorHandler9SeekErrorEPKw(756,$23); //@line 272 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return; //@line 273 "./src/cpp/bridge/file.cpp"
}
function __ZN4File4TellEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = $0;
 $3 = $2;
 $4 = ((($3)) + 4|0); //@line 292 "./src/cpp/bridge/file.cpp"
 $5 = HEAP32[$4>>2]|0; //@line 292 "./src/cpp/bridge/file.cpp"
 $6 = ($5|0)==(0|0); //@line 292 "./src/cpp/bridge/file.cpp"
 do {
  if ($6) {
   $7 = ((($3)) + 20|0); //@line 293 "./src/cpp/bridge/file.cpp"
   $8 = HEAP8[$7>>0]|0; //@line 293 "./src/cpp/bridge/file.cpp"
   $9 = $8&1; //@line 293 "./src/cpp/bridge/file.cpp"
   if ($9) {
    $10 = ((($3)) + 24|0); //@line 294 "./src/cpp/bridge/file.cpp"
    __ZN12ErrorHandler9SeekErrorEPKw(756,$10); //@line 294 "./src/cpp/bridge/file.cpp"
    label = 5;
    break;
   } else {
    $11 = $1; //@line 296 "./src/cpp/bridge/file.cpp"
    $12 = $11; //@line 296 "./src/cpp/bridge/file.cpp"
    HEAP32[$12>>2] = -1; //@line 296 "./src/cpp/bridge/file.cpp"
    $13 = (($11) + 4)|0; //@line 296 "./src/cpp/bridge/file.cpp"
    $14 = $13; //@line 296 "./src/cpp/bridge/file.cpp"
    HEAP32[$14>>2] = -1; //@line 296 "./src/cpp/bridge/file.cpp"
    break;
   }
  } else {
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  $15 = ((($3)) + 4|0); //@line 297 "./src/cpp/bridge/file.cpp"
  $16 = HEAP32[$15>>2]|0; //@line 297 "./src/cpp/bridge/file.cpp"
  $17 = (_jsTell(($16|0))|0); //@line 297 "./src/cpp/bridge/file.cpp"
  $18 = tempRet0; //@line 297 "./src/cpp/bridge/file.cpp"
  $19 = $1; //@line 297 "./src/cpp/bridge/file.cpp"
  $20 = $19; //@line 297 "./src/cpp/bridge/file.cpp"
  HEAP32[$20>>2] = $17; //@line 297 "./src/cpp/bridge/file.cpp"
  $21 = (($19) + 4)|0; //@line 297 "./src/cpp/bridge/file.cpp"
  $22 = $21; //@line 297 "./src/cpp/bridge/file.cpp"
  HEAP32[$22>>2] = $18; //@line 297 "./src/cpp/bridge/file.cpp"
 }
 $23 = $1; //@line 298 "./src/cpp/bridge/file.cpp"
 $24 = $23; //@line 298 "./src/cpp/bridge/file.cpp"
 $25 = HEAP32[$24>>2]|0; //@line 298 "./src/cpp/bridge/file.cpp"
 $26 = (($23) + 4)|0; //@line 298 "./src/cpp/bridge/file.cpp"
 $27 = $26; //@line 298 "./src/cpp/bridge/file.cpp"
 $28 = HEAP32[$27>>2]|0; //@line 298 "./src/cpp/bridge/file.cpp"
 tempRet0 = ($28); //@line 298 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return ($25|0); //@line 298 "./src/cpp/bridge/file.cpp"
}
function __ZN4File7RawSeekExi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$expand_i1_val = 0, $$expand_i1_val3 = 0, $$pre_trunc = 0, $$str$1$409$$str$2$410 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 16|0;
 $6 = sp;
 $5 = $0;
 $8 = $6;
 $9 = $8;
 HEAP32[$9>>2] = $1;
 $10 = (($8) + 4)|0;
 $11 = $10;
 HEAP32[$11>>2] = $2;
 $7 = $3;
 $12 = $5;
 $13 = ((($12)) + 4|0); //@line 278 "./src/cpp/bridge/file.cpp"
 $14 = HEAP32[$13>>2]|0; //@line 278 "./src/cpp/bridge/file.cpp"
 $15 = ($14|0)==(0|0); //@line 278 "./src/cpp/bridge/file.cpp"
 if ($15) {
  $$expand_i1_val = 1; //@line 279 "./src/cpp/bridge/file.cpp"
  HEAP8[$4>>0] = $$expand_i1_val; //@line 279 "./src/cpp/bridge/file.cpp"
  $$pre_trunc = HEAP8[$4>>0]|0; //@line 287 "./src/cpp/bridge/file.cpp"
  $63 = $$pre_trunc&1; //@line 287 "./src/cpp/bridge/file.cpp"
  STACKTOP = sp;return ($63|0); //@line 287 "./src/cpp/bridge/file.cpp"
 }
 $16 = $6; //@line 280 "./src/cpp/bridge/file.cpp"
 $17 = $16; //@line 280 "./src/cpp/bridge/file.cpp"
 $18 = HEAP32[$17>>2]|0; //@line 280 "./src/cpp/bridge/file.cpp"
 $19 = (($16) + 4)|0; //@line 280 "./src/cpp/bridge/file.cpp"
 $20 = $19; //@line 280 "./src/cpp/bridge/file.cpp"
 $21 = HEAP32[$20>>2]|0; //@line 280 "./src/cpp/bridge/file.cpp"
 $22 = ($21|0)<(0); //@line 280 "./src/cpp/bridge/file.cpp"
 $23 = $7; //@line 280 "./src/cpp/bridge/file.cpp"
 $24 = ($23|0)!=(0); //@line 280 "./src/cpp/bridge/file.cpp"
 $or$cond = $22 & $24; //@line 280 "./src/cpp/bridge/file.cpp"
 if ($or$cond) {
  $25 = $7; //@line 282 "./src/cpp/bridge/file.cpp"
  $26 = ($25|0)==(1); //@line 282 "./src/cpp/bridge/file.cpp"
  if ($26) {
   $27 = HEAP32[$12>>2]|0; //@line 282 "./src/cpp/bridge/file.cpp"
   $28 = ((($27)) + 20|0); //@line 282 "./src/cpp/bridge/file.cpp"
   $29 = HEAP32[$28>>2]|0; //@line 282 "./src/cpp/bridge/file.cpp"
   $30 = (FUNCTION_TABLE_ii[$29 & 511]($12)|0); //@line 282 "./src/cpp/bridge/file.cpp"
   $31 = tempRet0; //@line 282 "./src/cpp/bridge/file.cpp"
   $40 = $30;$41 = $31;
  } else {
   $32 = (__ZN4File10FileLengthEv($12)|0); //@line 282 "./src/cpp/bridge/file.cpp"
   $33 = tempRet0; //@line 282 "./src/cpp/bridge/file.cpp"
   $40 = $32;$41 = $33;
  }
  $34 = $6; //@line 282 "./src/cpp/bridge/file.cpp"
  $35 = $34; //@line 282 "./src/cpp/bridge/file.cpp"
  $36 = HEAP32[$35>>2]|0; //@line 282 "./src/cpp/bridge/file.cpp"
  $37 = (($34) + 4)|0; //@line 282 "./src/cpp/bridge/file.cpp"
  $38 = $37; //@line 282 "./src/cpp/bridge/file.cpp"
  $39 = HEAP32[$38>>2]|0; //@line 282 "./src/cpp/bridge/file.cpp"
  $42 = (_i64Add(($40|0),($41|0),($36|0),($39|0))|0); //@line 282 "./src/cpp/bridge/file.cpp"
  $43 = tempRet0; //@line 282 "./src/cpp/bridge/file.cpp"
  $44 = $6; //@line 282 "./src/cpp/bridge/file.cpp"
  $45 = $44; //@line 282 "./src/cpp/bridge/file.cpp"
  HEAP32[$45>>2] = $42; //@line 282 "./src/cpp/bridge/file.cpp"
  $46 = (($44) + 4)|0; //@line 282 "./src/cpp/bridge/file.cpp"
  $47 = $46; //@line 282 "./src/cpp/bridge/file.cpp"
  HEAP32[$47>>2] = $43; //@line 282 "./src/cpp/bridge/file.cpp"
  $7 = 0; //@line 283 "./src/cpp/bridge/file.cpp"
 }
 $48 = ((($12)) + 8|0); //@line 285 "./src/cpp/bridge/file.cpp"
 HEAP8[$48>>0] = 0; //@line 285 "./src/cpp/bridge/file.cpp"
 $49 = ((($12)) + 4|0); //@line 286 "./src/cpp/bridge/file.cpp"
 $50 = HEAP32[$49>>2]|0; //@line 286 "./src/cpp/bridge/file.cpp"
 $51 = $6; //@line 286 "./src/cpp/bridge/file.cpp"
 $52 = $51; //@line 286 "./src/cpp/bridge/file.cpp"
 $53 = HEAP32[$52>>2]|0; //@line 286 "./src/cpp/bridge/file.cpp"
 $54 = (($51) + 4)|0; //@line 286 "./src/cpp/bridge/file.cpp"
 $55 = $54; //@line 286 "./src/cpp/bridge/file.cpp"
 $56 = HEAP32[$55>>2]|0; //@line 286 "./src/cpp/bridge/file.cpp"
 $57 = $7; //@line 286 "./src/cpp/bridge/file.cpp"
 $58 = ($57|0)==(1); //@line 286 "./src/cpp/bridge/file.cpp"
 if ($58) {
  $61 = 5973;
 } else {
  $59 = $7; //@line 286 "./src/cpp/bridge/file.cpp"
  $60 = ($59|0)==(0); //@line 286 "./src/cpp/bridge/file.cpp"
  $$str$1$409$$str$2$410 = $60 ? 5965 : 5969; //@line 286 "./src/cpp/bridge/file.cpp"
  $61 = $$str$1$409$$str$2$410;
 }
 $62 = (_jsSeek(($50|0),($53|0),($61|0))|0); //@line 286 "./src/cpp/bridge/file.cpp"
 $$expand_i1_val3 = $62&1; //@line 286 "./src/cpp/bridge/file.cpp"
 HEAP8[$4>>0] = $$expand_i1_val3; //@line 286 "./src/cpp/bridge/file.cpp"
 $$pre_trunc = HEAP8[$4>>0]|0; //@line 287 "./src/cpp/bridge/file.cpp"
 $63 = $$pre_trunc&1; //@line 287 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return ($63|0); //@line 287 "./src/cpp/bridge/file.cpp"
}
function __ZN4File10FileLengthEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp;
 $1 = $0;
 $5 = $1;
 __ZN11SaveFilePosC2ER4File($2,$5); //@line 362 "./src/cpp/bridge/file.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 363 "./src/cpp/bridge/file.cpp"
 $7 = ((($6)) + 16|0); //@line 363 "./src/cpp/bridge/file.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 363 "./src/cpp/bridge/file.cpp"
 __THREW__ = 0;
 invoke_viiii($8|0,($5|0),0,0,2); //@line 363 "./src/cpp/bridge/file.cpp"
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  $11 = HEAP32[$5>>2]|0; //@line 364 "./src/cpp/bridge/file.cpp"
  $12 = ((($11)) + 20|0); //@line 364 "./src/cpp/bridge/file.cpp"
  $13 = HEAP32[$12>>2]|0; //@line 364 "./src/cpp/bridge/file.cpp"
  __THREW__ = 0;
  $14 = (invoke_ii($13|0,($5|0))|0); //@line 364 "./src/cpp/bridge/file.cpp"
  $15 = tempRet0; //@line 364 "./src/cpp/bridge/file.cpp"
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if (!($17)) {
   __ZN11SaveFilePosD2Ev($2); //@line 365 "./src/cpp/bridge/file.cpp"
   tempRet0 = ($15); //@line 365 "./src/cpp/bridge/file.cpp"
   STACKTOP = sp;return ($14|0); //@line 365 "./src/cpp/bridge/file.cpp"
  }
 }
 $18 = ___cxa_find_matching_catch_2()|0;
 $19 = tempRet0;
 $3 = $18; //@line 365 "./src/cpp/bridge/file.cpp"
 $4 = $19; //@line 365 "./src/cpp/bridge/file.cpp"
 __ZN11SaveFilePosD2Ev($2); //@line 365 "./src/cpp/bridge/file.cpp"
 $20 = $3; //@line 365 "./src/cpp/bridge/file.cpp"
 $21 = $4; //@line 365 "./src/cpp/bridge/file.cpp"
 ___resumeException($20|0);
 // unreachable;
 return (0)|0;
}
function __ZN4File10DirectReadEPvj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 12|0); //@line 251 "./src/cpp/bridge/file.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 251 "./src/cpp/bridge/file.cpp"
 $9 = ($8|0)==(1); //@line 251 "./src/cpp/bridge/file.cpp"
 if ($9) {
  $10 = HEAP32[770]|0; //@line 253 "./src/cpp/bridge/file.cpp"
  $11 = ((($6)) + 4|0); //@line 253 "./src/cpp/bridge/file.cpp"
  HEAP32[$11>>2] = $10; //@line 253 "./src/cpp/bridge/file.cpp"
 }
 $12 = ((($6)) + 8|0); //@line 255 "./src/cpp/bridge/file.cpp"
 $13 = HEAP8[$12>>0]|0; //@line 255 "./src/cpp/bridge/file.cpp"
 $14 = $13&1; //@line 255 "./src/cpp/bridge/file.cpp"
 if ($14) {
  $15 = ((($6)) + 8|0); //@line 258 "./src/cpp/bridge/file.cpp"
  HEAP8[$15>>0] = 0; //@line 258 "./src/cpp/bridge/file.cpp"
 }
 $16 = ((($6)) + 4|0); //@line 265 "./src/cpp/bridge/file.cpp"
 $17 = HEAP32[$16>>2]|0; //@line 265 "./src/cpp/bridge/file.cpp"
 $18 = $4; //@line 265 "./src/cpp/bridge/file.cpp"
 $19 = $5; //@line 265 "./src/cpp/bridge/file.cpp"
 $20 = (_jsRead(($17|0),($18|0),($19|0))|0); //@line 265 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return ($20|0); //@line 265 "./src/cpp/bridge/file.cpp"
}
function __ZN4FileD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = (2780); //@line 32 "./src/cpp/bridge/file.cpp"
 $3 = ((($2)) + 4|0); //@line 33 "./src/cpp/bridge/file.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 33 "./src/cpp/bridge/file.cpp"
 $5 = ($4|0)!=(0|0); //@line 33 "./src/cpp/bridge/file.cpp"
 if (!($5)) {
  STACKTOP = sp;return; //@line 38 "./src/cpp/bridge/file.cpp"
 }
 $6 = ((($2)) + 16|0); //@line 33 "./src/cpp/bridge/file.cpp"
 $7 = HEAP8[$6>>0]|0; //@line 33 "./src/cpp/bridge/file.cpp"
 $8 = $7&1; //@line 33 "./src/cpp/bridge/file.cpp"
 if ($8) {
  STACKTOP = sp;return; //@line 38 "./src/cpp/bridge/file.cpp"
 }
 $9 = ((($2)) + 18|0); //@line 34 "./src/cpp/bridge/file.cpp"
 $10 = HEAP8[$9>>0]|0; //@line 34 "./src/cpp/bridge/file.cpp"
 $11 = $10&1; //@line 34 "./src/cpp/bridge/file.cpp"
 if ($11) {
  __THREW__ = 0;
  (invoke_ii(307,($2|0))|0); //@line 35 "./src/cpp/bridge/file.cpp"
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if ($13) {
   $16 = ___cxa_find_matching_catch_3(0|0)|0;
   $17 = tempRet0;
   ___clang_call_terminate($16); //@line 35 "./src/cpp/bridge/file.cpp"
   // unreachable; //@line 35 "./src/cpp/bridge/file.cpp"
  } else {
   STACKTOP = sp;return; //@line 38 "./src/cpp/bridge/file.cpp"
  }
 } else {
  __THREW__ = 0;
  (invoke_ii(208,($2|0))|0); //@line 37 "./src/cpp/bridge/file.cpp"
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   $16 = ___cxa_find_matching_catch_3(0|0)|0;
   $17 = tempRet0;
   ___clang_call_terminate($16); //@line 35 "./src/cpp/bridge/file.cpp"
   // unreachable; //@line 35 "./src/cpp/bridge/file.cpp"
  } else {
   STACKTOP = sp;return; //@line 38 "./src/cpp/bridge/file.cpp"
  }
 }
}
function __ZN4File6DeleteEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0); //@line 164 "./src/cpp/bridge/file.cpp"
 $4 = (__Z7DelFilePKw($3)|0); //@line 164 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return ($4|0); //@line 164 "./src/cpp/bridge/file.cpp"
}
function __ZN4File5CloseEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $2 = 1; //@line 143 "./src/cpp/bridge/file.cpp"
 $4 = ((($3)) + 4|0); //@line 145 "./src/cpp/bridge/file.cpp"
 $5 = HEAP32[$4>>2]|0; //@line 145 "./src/cpp/bridge/file.cpp"
 $6 = ($5|0)!=(0|0); //@line 145 "./src/cpp/bridge/file.cpp"
 if ($6) {
  $7 = ((($3)) + 16|0); //@line 147 "./src/cpp/bridge/file.cpp"
  $8 = HEAP8[$7>>0]|0; //@line 147 "./src/cpp/bridge/file.cpp"
  $9 = $8&1; //@line 147 "./src/cpp/bridge/file.cpp"
  if (!($9)) {
   $10 = ((($3)) + 4|0); //@line 150 "./src/cpp/bridge/file.cpp"
   $11 = HEAP32[$10>>2]|0; //@line 150 "./src/cpp/bridge/file.cpp"
   _jsClose(($11|0)); //@line 150 "./src/cpp/bridge/file.cpp"
   $2 = 1; //@line 151 "./src/cpp/bridge/file.cpp"
  }
  $12 = ((($3)) + 4|0); //@line 153 "./src/cpp/bridge/file.cpp"
  HEAP32[$12>>2] = 0; //@line 153 "./src/cpp/bridge/file.cpp"
 }
 $13 = ((($3)) + 12|0); //@line 155 "./src/cpp/bridge/file.cpp"
 HEAP32[$13>>2] = 0; //@line 155 "./src/cpp/bridge/file.cpp"
 $14 = $2; //@line 156 "./src/cpp/bridge/file.cpp"
 $15 = $14&1; //@line 156 "./src/cpp/bridge/file.cpp"
 if (!($15)) {
  $16 = ((($3)) + 20|0); //@line 156 "./src/cpp/bridge/file.cpp"
  $17 = HEAP8[$16>>0]|0; //@line 156 "./src/cpp/bridge/file.cpp"
  $18 = $17&1; //@line 156 "./src/cpp/bridge/file.cpp"
  if ($18) {
   $19 = ((($3)) + 24|0); //@line 157 "./src/cpp/bridge/file.cpp"
   __ZN12ErrorHandler10CloseErrorEPKw(756,$19); //@line 157 "./src/cpp/bridge/file.cpp"
  }
 }
 $20 = $2; //@line 158 "./src/cpp/bridge/file.cpp"
 $21 = $20&1; //@line 158 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return ($21|0); //@line 158 "./src/cpp/bridge/file.cpp"
}
function __ZN4FileC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = (2780); //@line 16 "./src/cpp/bridge/file.cpp"
 $3 = ((($2)) + 4|0); //@line 17 "./src/cpp/bridge/file.cpp"
 HEAP32[$3>>2] = 0; //@line 17 "./src/cpp/bridge/file.cpp"
 $4 = ((($2)) + 24|0); //@line 18 "./src/cpp/bridge/file.cpp"
 HEAP32[$4>>2] = 0; //@line 18 "./src/cpp/bridge/file.cpp"
 $5 = ((($2)) + 18|0); //@line 19 "./src/cpp/bridge/file.cpp"
 HEAP8[$5>>0] = 0; //@line 19 "./src/cpp/bridge/file.cpp"
 $6 = ((($2)) + 8|0); //@line 20 "./src/cpp/bridge/file.cpp"
 HEAP8[$6>>0] = 0; //@line 20 "./src/cpp/bridge/file.cpp"
 $7 = ((($2)) + 12|0); //@line 21 "./src/cpp/bridge/file.cpp"
 HEAP32[$7>>2] = 0; //@line 21 "./src/cpp/bridge/file.cpp"
 $8 = ((($2)) + 16|0); //@line 22 "./src/cpp/bridge/file.cpp"
 HEAP8[$8>>0] = 0; //@line 22 "./src/cpp/bridge/file.cpp"
 $9 = ((($2)) + 17|0); //@line 23 "./src/cpp/bridge/file.cpp"
 HEAP8[$9>>0] = 0; //@line 23 "./src/cpp/bridge/file.cpp"
 $10 = ((($2)) + 8216|0); //@line 24 "./src/cpp/bridge/file.cpp"
 HEAP32[$10>>2] = 0; //@line 24 "./src/cpp/bridge/file.cpp"
 $11 = ((($2)) + 21|0); //@line 25 "./src/cpp/bridge/file.cpp"
 HEAP8[$11>>0] = 0; //@line 25 "./src/cpp/bridge/file.cpp"
 $12 = ((($2)) + 19|0); //@line 26 "./src/cpp/bridge/file.cpp"
 HEAP8[$12>>0] = 1; //@line 26 "./src/cpp/bridge/file.cpp"
 $13 = ((($2)) + 20|0); //@line 27 "./src/cpp/bridge/file.cpp"
 HEAP8[$13>>0] = 1; //@line 27 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return; //@line 28 "./src/cpp/bridge/file.cpp"
}
function __ZN4File5WOpenEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0; //@line 97 "./src/cpp/bridge/file.cpp"
 $7 = ((($6)) + 8|0); //@line 97 "./src/cpp/bridge/file.cpp"
 $8 = HEAP32[$7>>2]|0; //@line 97 "./src/cpp/bridge/file.cpp"
 $9 = $4; //@line 97 "./src/cpp/bridge/file.cpp"
 $10 = (FUNCTION_TABLE_iiii[$8 & 511]($5,$9,0)|0); //@line 97 "./src/cpp/bridge/file.cpp"
 if ($10) {
  $$expand_i1_val = 1; //@line 98 "./src/cpp/bridge/file.cpp"
  HEAP8[$2>>0] = $$expand_i1_val; //@line 98 "./src/cpp/bridge/file.cpp"
 } else {
  $11 = $4; //@line 99 "./src/cpp/bridge/file.cpp"
  __ZN12ErrorHandler12OpenErrorMsgEPKw(756,$11); //@line 99 "./src/cpp/bridge/file.cpp"
  $$expand_i1_val2 = 0; //@line 100 "./src/cpp/bridge/file.cpp"
  HEAP8[$2>>0] = $$expand_i1_val2; //@line 100 "./src/cpp/bridge/file.cpp"
 }
 $$pre_trunc = HEAP8[$2>>0]|0; //@line 101 "./src/cpp/bridge/file.cpp"
 $12 = $$pre_trunc&1; //@line 101 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return ($12|0); //@line 101 "./src/cpp/bridge/file.cpp"
}
function __ZN4File6CreateEPKwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2080|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2080|0);
 $7 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = $5; //@line 110 "./src/cpp/bridge/file.cpp"
 $10 = $9 & 2; //@line 110 "./src/cpp/bridge/file.cpp"
 $11 = ($10|0)!=(0); //@line 110 "./src/cpp/bridge/file.cpp"
 $12 = $11&1; //@line 110 "./src/cpp/bridge/file.cpp"
 $6 = $12; //@line 110 "./src/cpp/bridge/file.cpp"
 $13 = $4; //@line 112 "./src/cpp/bridge/file.cpp"
 (__Z10WideToCharPKwPcj($13,$7,2048)|0); //@line 112 "./src/cpp/bridge/file.cpp"
 $14 = $4; //@line 114 "./src/cpp/bridge/file.cpp"
 $15 = (_jsCreate(($14|0))|0); //@line 114 "./src/cpp/bridge/file.cpp"
 $16 = ((($8)) + 4|0); //@line 114 "./src/cpp/bridge/file.cpp"
 HEAP32[$16>>2] = $15; //@line 114 "./src/cpp/bridge/file.cpp"
 $17 = ((($8)) + 18|0); //@line 115 "./src/cpp/bridge/file.cpp"
 HEAP8[$17>>0] = 1; //@line 115 "./src/cpp/bridge/file.cpp"
 $18 = ((($8)) + 12|0); //@line 116 "./src/cpp/bridge/file.cpp"
 HEAP32[$18>>2] = 0; //@line 116 "./src/cpp/bridge/file.cpp"
 $19 = ((($8)) + 16|0); //@line 117 "./src/cpp/bridge/file.cpp"
 HEAP8[$19>>0] = 0; //@line 117 "./src/cpp/bridge/file.cpp"
 $20 = ((($8)) + 24|0); //@line 118 "./src/cpp/bridge/file.cpp"
 $21 = $4; //@line 118 "./src/cpp/bridge/file.cpp"
 (__Z8wcsncpyzPwPKwj($20,$21,2048)|0); //@line 118 "./src/cpp/bridge/file.cpp"
 $22 = ((($8)) + 4|0); //@line 119 "./src/cpp/bridge/file.cpp"
 $23 = HEAP32[$22>>2]|0; //@line 119 "./src/cpp/bridge/file.cpp"
 $24 = ($23|0)!=(0|0); //@line 119 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return ($24|0); //@line 119 "./src/cpp/bridge/file.cpp"
}
function __ZN4File5WriteEPKvj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 12|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $4;
 $8 = $6; //@line 176 "./src/cpp/bridge/file.cpp"
 $9 = ($8|0)==(0); //@line 176 "./src/cpp/bridge/file.cpp"
 if ($9) {
  $$expand_i1_val = 1; //@line 177 "./src/cpp/bridge/file.cpp"
  HEAP8[$3>>0] = $$expand_i1_val; //@line 177 "./src/cpp/bridge/file.cpp"
 } else {
  $10 = ((($7)) + 4|0); //@line 178 "./src/cpp/bridge/file.cpp"
  $11 = HEAP32[$10>>2]|0; //@line 178 "./src/cpp/bridge/file.cpp"
  $12 = $5; //@line 178 "./src/cpp/bridge/file.cpp"
  $13 = $6; //@line 178 "./src/cpp/bridge/file.cpp"
  $14 = (_jsWrite(($11|0),($12|0),($13|0))|0); //@line 178 "./src/cpp/bridge/file.cpp"
  $$expand_i1_val2 = $14&1; //@line 178 "./src/cpp/bridge/file.cpp"
  HEAP8[$3>>0] = $$expand_i1_val2; //@line 178 "./src/cpp/bridge/file.cpp"
 }
 $$pre_trunc = HEAP8[$3>>0]|0; //@line 207 "./src/cpp/bridge/file.cpp"
 $15 = $$pre_trunc&1; //@line 207 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return ($15|0); //@line 207 "./src/cpp/bridge/file.cpp"
}
function __ZN4File8PreallocEx($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $3 = $0;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $1;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $2;
 STACKTOP = sp;return; //@line 310 "./src/cpp/bridge/file.cpp"
}
function __ZN4File7GetByteEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $1 = $0;
 $3 = $1;
 HEAP8[$2>>0] = 0; //@line 315 "./src/cpp/bridge/file.cpp"
 $4 = HEAP32[$3>>2]|0; //@line 316 "./src/cpp/bridge/file.cpp"
 $5 = ((($4)) + 12|0); //@line 316 "./src/cpp/bridge/file.cpp"
 $6 = HEAP32[$5>>2]|0; //@line 316 "./src/cpp/bridge/file.cpp"
 (FUNCTION_TABLE_iiii[$6 & 511]($3,$2,1)|0); //@line 316 "./src/cpp/bridge/file.cpp"
 $7 = HEAP8[$2>>0]|0; //@line 317 "./src/cpp/bridge/file.cpp"
 STACKTOP = sp;return ($7|0); //@line 317 "./src/cpp/bridge/file.cpp"
}
function __ZN4File8TruncateEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1; //@line 329 "./src/cpp/bridge/file.cpp"
}
function __ZN4File15SetOpenFileTimeEP7RarTimeS1_S1_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 STACKTOP = sp;return; //@line 340 "./src/cpp/bridge/file.cpp"
}
function __ZN4File16SetCloseFileTimeEP7RarTimeS1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return; //@line 346 "./src/cpp/bridge/file.cpp"
}
function __ZN4File8IsDeviceEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 370 "./src/cpp/bridge/file.cpp"
}
function __Z7MakeDirPKwbj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $6 = $1&1;
 $4 = $6;
 $5 = $2;
 STACKTOP = sp;return 0; //@line 5 "./src/cpp/bridge/filefn.cpp"
}
function __Z10CreatePathPKwb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $1&1;
 $3 = $5;
 $4 = 1; //@line 11 "./src/cpp/bridge/filefn.cpp"
 $6 = $4; //@line 12 "./src/cpp/bridge/filefn.cpp"
 $7 = $6&1; //@line 12 "./src/cpp/bridge/filefn.cpp"
 STACKTOP = sp;return ($7|0); //@line 12 "./src/cpp/bridge/filefn.cpp"
}
function __Z10SetDirTimePKwP7RarTimeS2_S2_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 STACKTOP = sp;return; //@line 18 "./src/cpp/bridge/filefn.cpp"
}
function __Z9FileExistPKw($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 36 "./src/cpp/bridge/filefn.cpp"
}
function __Z5IsDirj($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 48 "./src/cpp/bridge/filefn.cpp"
 $3 = $2 & 61440; //@line 48 "./src/cpp/bridge/filefn.cpp"
 $4 = ($3|0)==(16384); //@line 48 "./src/cpp/bridge/filefn.cpp"
 STACKTOP = sp;return ($4|0); //@line 48 "./src/cpp/bridge/filefn.cpp"
}
function __Z6IsLinkj($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 60 "./src/cpp/bridge/filefn.cpp"
}
function __Z15PrepareToDeletePKw($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 72 "./src/cpp/bridge/filefn.cpp"
}
function __Z11GetFileAttrPKw($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 77 "./src/cpp/bridge/filefn.cpp"
}
function __Z11SetFileAttrPKwj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 1; //@line 83 "./src/cpp/bridge/filefn.cpp"
}
function __Z7DelFilePKw($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1; //@line 102 "./src/cpp/bridge/filefn.cpp"
}
function __ZN8FindFile8FastFindEPKwP8FindDatab($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $2&1;
 $5 = $6;
 STACKTOP = sp;return 0; //@line 30 "./src/cpp/bridge/find.cpp"
}
function __GLOBAL__sub_I_bind_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init_473();
 return;
}
function ___cxx_global_var_init_473() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(64961); //@line 95 "/emscripten/system/lib/embind/bind.cpp"
 return; //@line 95 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIvE3getEv()|0); //@line 98 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_void(($2|0),(5983|0)); //@line 98 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN10emscripten8internal6TypeIDIbE3getEv()|0); //@line 100 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_bool(($3|0),(5988|0),1,1,0); //@line 100 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIcEEvPKc(5993); //@line 102 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIaEEvPKc(5998); //@line 103 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIhEEvPKc(6010); //@line 104 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIsEEvPKc(6024); //@line 105 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerItEEvPKc(6030); //@line 106 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIiEEvPKc(6045); //@line 107 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIjEEvPKc(6049); //@line 108 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerIlEEvPKc(6062); //@line 109 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L16register_integerImEEvPKc(6067); //@line 110 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L14register_floatIfEEvPKc(6081); //@line 112 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L14register_floatIdEEvPKc(6087); //@line 113 "/emscripten/system/lib/embind/bind.cpp"
 $4 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0); //@line 115 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_std_string(($4|0),(6094|0)); //@line 115 "/emscripten/system/lib/embind/bind.cpp"
 $5 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0); //@line 116 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_std_string(($5|0),(6106|0)); //@line 116 "/emscripten/system/lib/embind/bind.cpp"
 $6 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0); //@line 117 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_std_wstring(($6|0),4,(6139|0)); //@line 117 "/emscripten/system/lib/embind/bind.cpp"
 $7 = (__ZN10emscripten8internal6TypeIDINS_3valEE3getEv()|0); //@line 118 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_emval(($7|0),(6152|0)); //@line 118 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIcEEvPKc(6168); //@line 126 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc(6198); //@line 127 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc(6235); //@line 128 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc(6274); //@line 130 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc(6305); //@line 131 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc(6345); //@line 132 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc(6374); //@line 133 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIlEEvPKc(6412); //@line 134 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewImEEvPKc(6442); //@line 135 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc(6481); //@line 137 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc(6513); //@line 138 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc(6546); //@line 139 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc(6579); //@line 140 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc(6613); //@line 141 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc(6646); //@line 142 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIfEEvPKc(6680); //@line 144 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIdEEvPKc(6711); //@line 145 "/emscripten/system/lib/embind/bind.cpp"
 __ZN12_GLOBAL__N_1L20register_memory_viewIeEEvPKc(6743); //@line 147 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 149 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDIvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIvE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIbE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIbE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_1L16register_integerIcEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIcE3getEv()|0); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $4 = -128 << 24 >> 24; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $5 = 127 << 24 >> 24; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_integer(($2|0),($3|0),1,($4|0),($5|0)); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIaEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIaE3getEv()|0); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $4 = -128 << 24 >> 24; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $5 = 127 << 24 >> 24; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_integer(($2|0),($3|0),1,($4|0),($5|0)); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIhEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIhE3getEv()|0); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $4 = 0; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $5 = 255; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_integer(($2|0),($3|0),1,($4|0),($5|0)); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIsEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIsE3getEv()|0); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $4 = -32768 << 16 >> 16; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $5 = 32767 << 16 >> 16; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_integer(($2|0),($3|0),2,($4|0),($5|0)); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerItEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDItE3getEv()|0); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $4 = 0; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $5 = 65535; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_integer(($2|0),($3|0),2,($4|0),($5|0)); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIiEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIiE3getEv()|0); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_integer(($2|0),($3|0),4,-2147483648,2147483647); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIjEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIjE3getEv()|0); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_integer(($2|0),($3|0),4,0,-1); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerIlEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIlE3getEv()|0); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_integer(($2|0),($3|0),4,-2147483648,2147483647); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L16register_integerImEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDImE3getEv()|0); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_integer(($2|0),($3|0),4,0,-1); //@line 51 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 52 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L14register_floatIfEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIfE3getEv()|0); //@line 57 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 57 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_float(($2|0),($3|0),4); //@line 57 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 58 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L14register_floatIdEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIdE3getEv()|0); //@line 57 "/emscripten/system/lib/embind/bind.cpp"
 $3 = $1; //@line 57 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_float(($2|0),($3|0),8); //@line 57 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 58 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_3valEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIcEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIaEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIhEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIsEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewItEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIiEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIjEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIlEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewImEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIfEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIdEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN12_GLOBAL__N_1L20register_memory_viewIeEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv()|0); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 $4 = $1; //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 __embind_register_memory_view(($2|0),($3|0),($4|0)); //@line 91 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return; //@line 92 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (160|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (168|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 6; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (176|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (184|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (192|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (200|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (208|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 3; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (216|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (224|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (232|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (240|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0; //@line 77 "/emscripten/system/lib/embind/bind.cpp"
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (248|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (256|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (264|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIfE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIfE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIfE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (544|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDImE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDImE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDImE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (536|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIlE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIlE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIlE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (528|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIiE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIiE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIiE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (512|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDItE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDItE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDItE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (504|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIsE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIsE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIsE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (496|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIhE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIhE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIhE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (480|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIaE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIaE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIaE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (488|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal6TypeIDIcE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIcE3getEv()|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
 return ($0|0); //@line 98 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIcE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (472|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIbE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (464|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function __ZN10emscripten8internal11LightTypeIDIvE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (448|0); //@line 62 "/emscripten/system/include/emscripten/wire.h"
}
function ___getTypeName($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 37 "/emscripten/system/lib/embind/bind.cpp"
 $1 = $3;
 $4 = $1;
 $5 = ((($4)) + 4|0); //@line 152 "/emscripten/system/include/libcxx/typeinfo"
 $6 = HEAP32[$5>>2]|0; //@line 152 "/emscripten/system/include/libcxx/typeinfo"
 $7 = (___strdup($6)|0); //@line 37 "/emscripten/system/lib/embind/bind.cpp"
 STACKTOP = sp;return ($7|0); //@line 37 "/emscripten/system/lib/embind/bind.cpp"
}
function _malloc($0) {
 $0 = $0|0;
 var $$$0192$i = 0, $$$0193$i = 0, $$$4236$i = 0, $$$4351$i = 0, $$$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i17$i = 0, $$0189$i = 0, $$0192$lcssa$i = 0, $$01926$i = 0, $$0193$lcssa$i = 0, $$01935$i = 0, $$0197 = 0, $$0199 = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$0211$i$i = 0, $$0212$i$i = 0;
 var $$024367$i = 0, $$0287$i$i = 0, $$0288$i$i = 0, $$0289$i$i = 0, $$0295$i$i = 0, $$0296$i$i = 0, $$0342$i = 0, $$0344$i = 0, $$0345$i = 0, $$0347$i = 0, $$0353$i = 0, $$0358$i = 0, $$0359$$i = 0, $$0359$i = 0, $$0361$i = 0, $$0362$i = 0, $$0368$i = 0, $$1196$i = 0, $$1198$i = 0, $$124466$i = 0;
 var $$1291$i$i = 0, $$1293$i$i = 0, $$1343$i = 0, $$1348$i = 0, $$1363$i = 0, $$1370$i = 0, $$1374$i = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2355$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i203 = 0, $$3350$i = 0, $$3372$i = 0, $$4$lcssa$i = 0, $$4$ph$i = 0, $$414$i = 0, $$4236$i = 0;
 var $$4351$lcssa$i = 0, $$435113$i = 0, $$4357$$4$i = 0, $$4357$ph$i = 0, $$435712$i = 0, $$723947$i = 0, $$748$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i18$i = 0, $$pre$i210 = 0, $$pre$i212 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i19$iZ2D = 0, $$pre$phi$i211Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi11$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre10$i$i = 0;
 var $$sink1$i = 0, $$sink1$i$i = 0, $$sink14$i = 0, $$sink2$i = 0, $$sink2$i205 = 0, $$sink3$i = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0;
 var $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0;
 var $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0;
 var $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0;
 var $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0;
 var $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0;
 var $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0;
 var $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0;
 var $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0;
 var $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0;
 var $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0;
 var $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0;
 var $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0;
 var $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0;
 var $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0;
 var $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0;
 var $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0;
 var $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0;
 var $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0;
 var $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0;
 var $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0;
 var $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0;
 var $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0;
 var $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0;
 var $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0;
 var $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0;
 var $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0;
 var $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0;
 var $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0;
 var $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0;
 var $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0;
 var $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0;
 var $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0;
 var $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i209 = 0, $not$$i = 0, $not$7$i = 0, $or$cond$i = 0, $or$cond$i214 = 0, $or$cond1$i = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond11$not$i = 0, $or$cond12$i = 0;
 var $or$cond2$i = 0, $or$cond2$i215 = 0, $or$cond49$i = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[13846]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (55424 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($16|0);
    do {
     if ($21) {
      $22 = 1 << $14;
      $23 = $22 ^ -1;
      $24 = $8 & $23;
      HEAP32[13846] = $24;
     } else {
      $25 = HEAP32[(55400)>>2]|0;
      $26 = ($25>>>0)>($20>>>0);
      if ($26) {
       _abort();
       // unreachable;
      }
      $27 = ((($20)) + 12|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = ($28|0)==($18|0);
      if ($29) {
       HEAP32[$27>>2] = $16;
       HEAP32[$17>>2] = $20;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $30 = $14 << 3;
    $31 = $30 | 3;
    $32 = ((($18)) + 4|0);
    HEAP32[$32>>2] = $31;
    $33 = (($18) + ($30)|0);
    $34 = ((($33)) + 4|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = $35 | 1;
    HEAP32[$34>>2] = $36;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $37 = HEAP32[(55392)>>2]|0;
   $38 = ($6>>>0)>($37>>>0);
   if ($38) {
    $39 = ($9|0)==(0);
    if (!($39)) {
     $40 = $9 << $7;
     $41 = 2 << $7;
     $42 = (0 - ($41))|0;
     $43 = $41 | $42;
     $44 = $40 & $43;
     $45 = (0 - ($44))|0;
     $46 = $44 & $45;
     $47 = (($46) + -1)|0;
     $48 = $47 >>> 12;
     $49 = $48 & 16;
     $50 = $47 >>> $49;
     $51 = $50 >>> 5;
     $52 = $51 & 8;
     $53 = $52 | $49;
     $54 = $50 >>> $52;
     $55 = $54 >>> 2;
     $56 = $55 & 4;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 2;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = $62 >>> 1;
     $64 = $63 & 1;
     $65 = $61 | $64;
     $66 = $62 >>> $64;
     $67 = (($65) + ($66))|0;
     $68 = $67 << 1;
     $69 = (55424 + ($68<<2)|0);
     $70 = ((($69)) + 8|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($71)) + 8|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($73|0)==($69|0);
     do {
      if ($74) {
       $75 = 1 << $67;
       $76 = $75 ^ -1;
       $77 = $8 & $76;
       HEAP32[13846] = $77;
       $98 = $77;
      } else {
       $78 = HEAP32[(55400)>>2]|0;
       $79 = ($78>>>0)>($73>>>0);
       if ($79) {
        _abort();
        // unreachable;
       }
       $80 = ((($73)) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ($81|0)==($71|0);
       if ($82) {
        HEAP32[$80>>2] = $69;
        HEAP32[$70>>2] = $73;
        $98 = $8;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $83 = $67 << 3;
     $84 = (($83) - ($6))|0;
     $85 = $6 | 3;
     $86 = ((($71)) + 4|0);
     HEAP32[$86>>2] = $85;
     $87 = (($71) + ($6)|0);
     $88 = $84 | 1;
     $89 = ((($87)) + 4|0);
     HEAP32[$89>>2] = $88;
     $90 = (($71) + ($83)|0);
     HEAP32[$90>>2] = $84;
     $91 = ($37|0)==(0);
     if (!($91)) {
      $92 = HEAP32[(55404)>>2]|0;
      $93 = $37 >>> 3;
      $94 = $93 << 1;
      $95 = (55424 + ($94<<2)|0);
      $96 = 1 << $93;
      $97 = $98 & $96;
      $99 = ($97|0)==(0);
      if ($99) {
       $100 = $98 | $96;
       HEAP32[13846] = $100;
       $$pre = ((($95)) + 8|0);
       $$0199 = $95;$$pre$phiZ2D = $$pre;
      } else {
       $101 = ((($95)) + 8|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = HEAP32[(55400)>>2]|0;
       $104 = ($103>>>0)>($102>>>0);
       if ($104) {
        _abort();
        // unreachable;
       } else {
        $$0199 = $102;$$pre$phiZ2D = $101;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $92;
      $105 = ((($$0199)) + 12|0);
      HEAP32[$105>>2] = $92;
      $106 = ((($92)) + 8|0);
      HEAP32[$106>>2] = $$0199;
      $107 = ((($92)) + 12|0);
      HEAP32[$107>>2] = $95;
     }
     HEAP32[(55392)>>2] = $84;
     HEAP32[(55404)>>2] = $87;
     $$0 = $72;
     STACKTOP = sp;return ($$0|0);
    }
    $108 = HEAP32[(55388)>>2]|0;
    $109 = ($108|0)==(0);
    if ($109) {
     $$0197 = $6;
    } else {
     $110 = (0 - ($108))|0;
     $111 = $108 & $110;
     $112 = (($111) + -1)|0;
     $113 = $112 >>> 12;
     $114 = $113 & 16;
     $115 = $112 >>> $114;
     $116 = $115 >>> 5;
     $117 = $116 & 8;
     $118 = $117 | $114;
     $119 = $115 >>> $117;
     $120 = $119 >>> 2;
     $121 = $120 & 4;
     $122 = $118 | $121;
     $123 = $119 >>> $121;
     $124 = $123 >>> 1;
     $125 = $124 & 2;
     $126 = $122 | $125;
     $127 = $123 >>> $125;
     $128 = $127 >>> 1;
     $129 = $128 & 1;
     $130 = $126 | $129;
     $131 = $127 >>> $129;
     $132 = (($130) + ($131))|0;
     $133 = (55688 + ($132<<2)|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ((($134)) + 4|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = $136 & -8;
     $138 = (($137) - ($6))|0;
     $139 = ((($134)) + 16|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==(0|0);
     $$sink14$i = $141&1;
     $142 = (((($134)) + 16|0) + ($$sink14$i<<2)|0);
     $143 = HEAP32[$142>>2]|0;
     $144 = ($143|0)==(0|0);
     if ($144) {
      $$0192$lcssa$i = $134;$$0193$lcssa$i = $138;
     } else {
      $$01926$i = $134;$$01935$i = $138;$146 = $143;
      while(1) {
       $145 = ((($146)) + 4|0);
       $147 = HEAP32[$145>>2]|0;
       $148 = $147 & -8;
       $149 = (($148) - ($6))|0;
       $150 = ($149>>>0)<($$01935$i>>>0);
       $$$0193$i = $150 ? $149 : $$01935$i;
       $$$0192$i = $150 ? $146 : $$01926$i;
       $151 = ((($146)) + 16|0);
       $152 = HEAP32[$151>>2]|0;
       $153 = ($152|0)==(0|0);
       $$sink1$i = $153&1;
       $154 = (((($146)) + 16|0) + ($$sink1$i<<2)|0);
       $155 = HEAP32[$154>>2]|0;
       $156 = ($155|0)==(0|0);
       if ($156) {
        $$0192$lcssa$i = $$$0192$i;$$0193$lcssa$i = $$$0193$i;
        break;
       } else {
        $$01926$i = $$$0192$i;$$01935$i = $$$0193$i;$146 = $155;
       }
      }
     }
     $157 = HEAP32[(55400)>>2]|0;
     $158 = ($157>>>0)>($$0192$lcssa$i>>>0);
     if ($158) {
      _abort();
      // unreachable;
     }
     $159 = (($$0192$lcssa$i) + ($6)|0);
     $160 = ($159>>>0)>($$0192$lcssa$i>>>0);
     if (!($160)) {
      _abort();
      // unreachable;
     }
     $161 = ((($$0192$lcssa$i)) + 24|0);
     $162 = HEAP32[$161>>2]|0;
     $163 = ((($$0192$lcssa$i)) + 12|0);
     $164 = HEAP32[$163>>2]|0;
     $165 = ($164|0)==($$0192$lcssa$i|0);
     do {
      if ($165) {
       $175 = ((($$0192$lcssa$i)) + 20|0);
       $176 = HEAP32[$175>>2]|0;
       $177 = ($176|0)==(0|0);
       if ($177) {
        $178 = ((($$0192$lcssa$i)) + 16|0);
        $179 = HEAP32[$178>>2]|0;
        $180 = ($179|0)==(0|0);
        if ($180) {
         $$3$i = 0;
         break;
        } else {
         $$1196$i = $179;$$1198$i = $178;
        }
       } else {
        $$1196$i = $176;$$1198$i = $175;
       }
       while(1) {
        $181 = ((($$1196$i)) + 20|0);
        $182 = HEAP32[$181>>2]|0;
        $183 = ($182|0)==(0|0);
        if (!($183)) {
         $$1196$i = $182;$$1198$i = $181;
         continue;
        }
        $184 = ((($$1196$i)) + 16|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ($185|0)==(0|0);
        if ($186) {
         break;
        } else {
         $$1196$i = $185;$$1198$i = $184;
        }
       }
       $187 = ($157>>>0)>($$1198$i>>>0);
       if ($187) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$1198$i>>2] = 0;
        $$3$i = $$1196$i;
        break;
       }
      } else {
       $166 = ((($$0192$lcssa$i)) + 8|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = ($157>>>0)>($167>>>0);
       if ($168) {
        _abort();
        // unreachable;
       }
       $169 = ((($167)) + 12|0);
       $170 = HEAP32[$169>>2]|0;
       $171 = ($170|0)==($$0192$lcssa$i|0);
       if (!($171)) {
        _abort();
        // unreachable;
       }
       $172 = ((($164)) + 8|0);
       $173 = HEAP32[$172>>2]|0;
       $174 = ($173|0)==($$0192$lcssa$i|0);
       if ($174) {
        HEAP32[$169>>2] = $164;
        HEAP32[$172>>2] = $167;
        $$3$i = $164;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $188 = ($162|0)==(0|0);
     L73: do {
      if (!($188)) {
       $189 = ((($$0192$lcssa$i)) + 28|0);
       $190 = HEAP32[$189>>2]|0;
       $191 = (55688 + ($190<<2)|0);
       $192 = HEAP32[$191>>2]|0;
       $193 = ($$0192$lcssa$i|0)==($192|0);
       do {
        if ($193) {
         HEAP32[$191>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $194 = 1 << $190;
          $195 = $194 ^ -1;
          $196 = $108 & $195;
          HEAP32[(55388)>>2] = $196;
          break L73;
         }
        } else {
         $197 = HEAP32[(55400)>>2]|0;
         $198 = ($197>>>0)>($162>>>0);
         if ($198) {
          _abort();
          // unreachable;
         } else {
          $199 = ((($162)) + 16|0);
          $200 = HEAP32[$199>>2]|0;
          $201 = ($200|0)!=($$0192$lcssa$i|0);
          $$sink2$i = $201&1;
          $202 = (((($162)) + 16|0) + ($$sink2$i<<2)|0);
          HEAP32[$202>>2] = $$3$i;
          $203 = ($$3$i|0)==(0|0);
          if ($203) {
           break L73;
          } else {
           break;
          }
         }
        }
       } while(0);
       $204 = HEAP32[(55400)>>2]|0;
       $205 = ($204>>>0)>($$3$i>>>0);
       if ($205) {
        _abort();
        // unreachable;
       }
       $206 = ((($$3$i)) + 24|0);
       HEAP32[$206>>2] = $162;
       $207 = ((($$0192$lcssa$i)) + 16|0);
       $208 = HEAP32[$207>>2]|0;
       $209 = ($208|0)==(0|0);
       do {
        if (!($209)) {
         $210 = ($204>>>0)>($208>>>0);
         if ($210) {
          _abort();
          // unreachable;
         } else {
          $211 = ((($$3$i)) + 16|0);
          HEAP32[$211>>2] = $208;
          $212 = ((($208)) + 24|0);
          HEAP32[$212>>2] = $$3$i;
          break;
         }
        }
       } while(0);
       $213 = ((($$0192$lcssa$i)) + 20|0);
       $214 = HEAP32[$213>>2]|0;
       $215 = ($214|0)==(0|0);
       if (!($215)) {
        $216 = HEAP32[(55400)>>2]|0;
        $217 = ($216>>>0)>($214>>>0);
        if ($217) {
         _abort();
         // unreachable;
        } else {
         $218 = ((($$3$i)) + 20|0);
         HEAP32[$218>>2] = $214;
         $219 = ((($214)) + 24|0);
         HEAP32[$219>>2] = $$3$i;
         break;
        }
       }
      }
     } while(0);
     $220 = ($$0193$lcssa$i>>>0)<(16);
     if ($220) {
      $221 = (($$0193$lcssa$i) + ($6))|0;
      $222 = $221 | 3;
      $223 = ((($$0192$lcssa$i)) + 4|0);
      HEAP32[$223>>2] = $222;
      $224 = (($$0192$lcssa$i) + ($221)|0);
      $225 = ((($224)) + 4|0);
      $226 = HEAP32[$225>>2]|0;
      $227 = $226 | 1;
      HEAP32[$225>>2] = $227;
     } else {
      $228 = $6 | 3;
      $229 = ((($$0192$lcssa$i)) + 4|0);
      HEAP32[$229>>2] = $228;
      $230 = $$0193$lcssa$i | 1;
      $231 = ((($159)) + 4|0);
      HEAP32[$231>>2] = $230;
      $232 = (($159) + ($$0193$lcssa$i)|0);
      HEAP32[$232>>2] = $$0193$lcssa$i;
      $233 = ($37|0)==(0);
      if (!($233)) {
       $234 = HEAP32[(55404)>>2]|0;
       $235 = $37 >>> 3;
       $236 = $235 << 1;
       $237 = (55424 + ($236<<2)|0);
       $238 = 1 << $235;
       $239 = $8 & $238;
       $240 = ($239|0)==(0);
       if ($240) {
        $241 = $8 | $238;
        HEAP32[13846] = $241;
        $$pre$i = ((($237)) + 8|0);
        $$0189$i = $237;$$pre$phi$iZ2D = $$pre$i;
       } else {
        $242 = ((($237)) + 8|0);
        $243 = HEAP32[$242>>2]|0;
        $244 = HEAP32[(55400)>>2]|0;
        $245 = ($244>>>0)>($243>>>0);
        if ($245) {
         _abort();
         // unreachable;
        } else {
         $$0189$i = $243;$$pre$phi$iZ2D = $242;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $234;
       $246 = ((($$0189$i)) + 12|0);
       HEAP32[$246>>2] = $234;
       $247 = ((($234)) + 8|0);
       HEAP32[$247>>2] = $$0189$i;
       $248 = ((($234)) + 12|0);
       HEAP32[$248>>2] = $237;
      }
      HEAP32[(55392)>>2] = $$0193$lcssa$i;
      HEAP32[(55404)>>2] = $159;
     }
     $249 = ((($$0192$lcssa$i)) + 8|0);
     $$0 = $249;
     STACKTOP = sp;return ($$0|0);
    }
   } else {
    $$0197 = $6;
   }
  } else {
   $250 = ($0>>>0)>(4294967231);
   if ($250) {
    $$0197 = -1;
   } else {
    $251 = (($0) + 11)|0;
    $252 = $251 & -8;
    $253 = HEAP32[(55388)>>2]|0;
    $254 = ($253|0)==(0);
    if ($254) {
     $$0197 = $252;
    } else {
     $255 = (0 - ($252))|0;
     $256 = $251 >>> 8;
     $257 = ($256|0)==(0);
     if ($257) {
      $$0358$i = 0;
     } else {
      $258 = ($252>>>0)>(16777215);
      if ($258) {
       $$0358$i = 31;
      } else {
       $259 = (($256) + 1048320)|0;
       $260 = $259 >>> 16;
       $261 = $260 & 8;
       $262 = $256 << $261;
       $263 = (($262) + 520192)|0;
       $264 = $263 >>> 16;
       $265 = $264 & 4;
       $266 = $265 | $261;
       $267 = $262 << $265;
       $268 = (($267) + 245760)|0;
       $269 = $268 >>> 16;
       $270 = $269 & 2;
       $271 = $266 | $270;
       $272 = (14 - ($271))|0;
       $273 = $267 << $270;
       $274 = $273 >>> 15;
       $275 = (($272) + ($274))|0;
       $276 = $275 << 1;
       $277 = (($275) + 7)|0;
       $278 = $252 >>> $277;
       $279 = $278 & 1;
       $280 = $279 | $276;
       $$0358$i = $280;
      }
     }
     $281 = (55688 + ($$0358$i<<2)|0);
     $282 = HEAP32[$281>>2]|0;
     $283 = ($282|0)==(0|0);
     L117: do {
      if ($283) {
       $$2355$i = 0;$$3$i203 = 0;$$3350$i = $255;
       label = 81;
      } else {
       $284 = ($$0358$i|0)==(31);
       $285 = $$0358$i >>> 1;
       $286 = (25 - ($285))|0;
       $287 = $284 ? 0 : $286;
       $288 = $252 << $287;
       $$0342$i = 0;$$0347$i = $255;$$0353$i = $282;$$0359$i = $288;$$0362$i = 0;
       while(1) {
        $289 = ((($$0353$i)) + 4|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $290 & -8;
        $292 = (($291) - ($252))|0;
        $293 = ($292>>>0)<($$0347$i>>>0);
        if ($293) {
         $294 = ($292|0)==(0);
         if ($294) {
          $$414$i = $$0353$i;$$435113$i = 0;$$435712$i = $$0353$i;
          label = 85;
          break L117;
         } else {
          $$1343$i = $$0353$i;$$1348$i = $292;
         }
        } else {
         $$1343$i = $$0342$i;$$1348$i = $$0347$i;
        }
        $295 = ((($$0353$i)) + 20|0);
        $296 = HEAP32[$295>>2]|0;
        $297 = $$0359$i >>> 31;
        $298 = (((($$0353$i)) + 16|0) + ($297<<2)|0);
        $299 = HEAP32[$298>>2]|0;
        $300 = ($296|0)==(0|0);
        $301 = ($296|0)==($299|0);
        $or$cond2$i = $300 | $301;
        $$1363$i = $or$cond2$i ? $$0362$i : $296;
        $302 = ($299|0)==(0|0);
        $not$7$i = $302 ^ 1;
        $303 = $not$7$i&1;
        $$0359$$i = $$0359$i << $303;
        if ($302) {
         $$2355$i = $$1363$i;$$3$i203 = $$1343$i;$$3350$i = $$1348$i;
         label = 81;
         break;
        } else {
         $$0342$i = $$1343$i;$$0347$i = $$1348$i;$$0353$i = $299;$$0359$i = $$0359$$i;$$0362$i = $$1363$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 81) {
      $304 = ($$2355$i|0)==(0|0);
      $305 = ($$3$i203|0)==(0|0);
      $or$cond$i = $304 & $305;
      if ($or$cond$i) {
       $306 = 2 << $$0358$i;
       $307 = (0 - ($306))|0;
       $308 = $306 | $307;
       $309 = $253 & $308;
       $310 = ($309|0)==(0);
       if ($310) {
        $$0197 = $252;
        break;
       }
       $311 = (0 - ($309))|0;
       $312 = $309 & $311;
       $313 = (($312) + -1)|0;
       $314 = $313 >>> 12;
       $315 = $314 & 16;
       $316 = $313 >>> $315;
       $317 = $316 >>> 5;
       $318 = $317 & 8;
       $319 = $318 | $315;
       $320 = $316 >>> $318;
       $321 = $320 >>> 2;
       $322 = $321 & 4;
       $323 = $319 | $322;
       $324 = $320 >>> $322;
       $325 = $324 >>> 1;
       $326 = $325 & 2;
       $327 = $323 | $326;
       $328 = $324 >>> $326;
       $329 = $328 >>> 1;
       $330 = $329 & 1;
       $331 = $327 | $330;
       $332 = $328 >>> $330;
       $333 = (($331) + ($332))|0;
       $334 = (55688 + ($333<<2)|0);
       $335 = HEAP32[$334>>2]|0;
       $$4$ph$i = 0;$$4357$ph$i = $335;
      } else {
       $$4$ph$i = $$3$i203;$$4357$ph$i = $$2355$i;
      }
      $336 = ($$4357$ph$i|0)==(0|0);
      if ($336) {
       $$4$lcssa$i = $$4$ph$i;$$4351$lcssa$i = $$3350$i;
      } else {
       $$414$i = $$4$ph$i;$$435113$i = $$3350$i;$$435712$i = $$4357$ph$i;
       label = 85;
      }
     }
     if ((label|0) == 85) {
      while(1) {
       label = 0;
       $337 = ((($$435712$i)) + 4|0);
       $338 = HEAP32[$337>>2]|0;
       $339 = $338 & -8;
       $340 = (($339) - ($252))|0;
       $341 = ($340>>>0)<($$435113$i>>>0);
       $$$4351$i = $341 ? $340 : $$435113$i;
       $$4357$$4$i = $341 ? $$435712$i : $$414$i;
       $342 = ((($$435712$i)) + 16|0);
       $343 = HEAP32[$342>>2]|0;
       $344 = ($343|0)==(0|0);
       $$sink2$i205 = $344&1;
       $345 = (((($$435712$i)) + 16|0) + ($$sink2$i205<<2)|0);
       $346 = HEAP32[$345>>2]|0;
       $347 = ($346|0)==(0|0);
       if ($347) {
        $$4$lcssa$i = $$4357$$4$i;$$4351$lcssa$i = $$$4351$i;
        break;
       } else {
        $$414$i = $$4357$$4$i;$$435113$i = $$$4351$i;$$435712$i = $346;
        label = 85;
       }
      }
     }
     $348 = ($$4$lcssa$i|0)==(0|0);
     if ($348) {
      $$0197 = $252;
     } else {
      $349 = HEAP32[(55392)>>2]|0;
      $350 = (($349) - ($252))|0;
      $351 = ($$4351$lcssa$i>>>0)<($350>>>0);
      if ($351) {
       $352 = HEAP32[(55400)>>2]|0;
       $353 = ($352>>>0)>($$4$lcssa$i>>>0);
       if ($353) {
        _abort();
        // unreachable;
       }
       $354 = (($$4$lcssa$i) + ($252)|0);
       $355 = ($354>>>0)>($$4$lcssa$i>>>0);
       if (!($355)) {
        _abort();
        // unreachable;
       }
       $356 = ((($$4$lcssa$i)) + 24|0);
       $357 = HEAP32[$356>>2]|0;
       $358 = ((($$4$lcssa$i)) + 12|0);
       $359 = HEAP32[$358>>2]|0;
       $360 = ($359|0)==($$4$lcssa$i|0);
       do {
        if ($360) {
         $370 = ((($$4$lcssa$i)) + 20|0);
         $371 = HEAP32[$370>>2]|0;
         $372 = ($371|0)==(0|0);
         if ($372) {
          $373 = ((($$4$lcssa$i)) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           $$3372$i = 0;
           break;
          } else {
           $$1370$i = $374;$$1374$i = $373;
          }
         } else {
          $$1370$i = $371;$$1374$i = $370;
         }
         while(1) {
          $376 = ((($$1370$i)) + 20|0);
          $377 = HEAP32[$376>>2]|0;
          $378 = ($377|0)==(0|0);
          if (!($378)) {
           $$1370$i = $377;$$1374$i = $376;
           continue;
          }
          $379 = ((($$1370$i)) + 16|0);
          $380 = HEAP32[$379>>2]|0;
          $381 = ($380|0)==(0|0);
          if ($381) {
           break;
          } else {
           $$1370$i = $380;$$1374$i = $379;
          }
         }
         $382 = ($352>>>0)>($$1374$i>>>0);
         if ($382) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$$1374$i>>2] = 0;
          $$3372$i = $$1370$i;
          break;
         }
        } else {
         $361 = ((($$4$lcssa$i)) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($352>>>0)>($362>>>0);
         if ($363) {
          _abort();
          // unreachable;
         }
         $364 = ((($362)) + 12|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==($$4$lcssa$i|0);
         if (!($366)) {
          _abort();
          // unreachable;
         }
         $367 = ((($359)) + 8|0);
         $368 = HEAP32[$367>>2]|0;
         $369 = ($368|0)==($$4$lcssa$i|0);
         if ($369) {
          HEAP32[$364>>2] = $359;
          HEAP32[$367>>2] = $362;
          $$3372$i = $359;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $383 = ($357|0)==(0|0);
       L164: do {
        if ($383) {
         $475 = $253;
        } else {
         $384 = ((($$4$lcssa$i)) + 28|0);
         $385 = HEAP32[$384>>2]|0;
         $386 = (55688 + ($385<<2)|0);
         $387 = HEAP32[$386>>2]|0;
         $388 = ($$4$lcssa$i|0)==($387|0);
         do {
          if ($388) {
           HEAP32[$386>>2] = $$3372$i;
           $cond$i209 = ($$3372$i|0)==(0|0);
           if ($cond$i209) {
            $389 = 1 << $385;
            $390 = $389 ^ -1;
            $391 = $253 & $390;
            HEAP32[(55388)>>2] = $391;
            $475 = $391;
            break L164;
           }
          } else {
           $392 = HEAP32[(55400)>>2]|0;
           $393 = ($392>>>0)>($357>>>0);
           if ($393) {
            _abort();
            // unreachable;
           } else {
            $394 = ((($357)) + 16|0);
            $395 = HEAP32[$394>>2]|0;
            $396 = ($395|0)!=($$4$lcssa$i|0);
            $$sink3$i = $396&1;
            $397 = (((($357)) + 16|0) + ($$sink3$i<<2)|0);
            HEAP32[$397>>2] = $$3372$i;
            $398 = ($$3372$i|0)==(0|0);
            if ($398) {
             $475 = $253;
             break L164;
            } else {
             break;
            }
           }
          }
         } while(0);
         $399 = HEAP32[(55400)>>2]|0;
         $400 = ($399>>>0)>($$3372$i>>>0);
         if ($400) {
          _abort();
          // unreachable;
         }
         $401 = ((($$3372$i)) + 24|0);
         HEAP32[$401>>2] = $357;
         $402 = ((($$4$lcssa$i)) + 16|0);
         $403 = HEAP32[$402>>2]|0;
         $404 = ($403|0)==(0|0);
         do {
          if (!($404)) {
           $405 = ($399>>>0)>($403>>>0);
           if ($405) {
            _abort();
            // unreachable;
           } else {
            $406 = ((($$3372$i)) + 16|0);
            HEAP32[$406>>2] = $403;
            $407 = ((($403)) + 24|0);
            HEAP32[$407>>2] = $$3372$i;
            break;
           }
          }
         } while(0);
         $408 = ((($$4$lcssa$i)) + 20|0);
         $409 = HEAP32[$408>>2]|0;
         $410 = ($409|0)==(0|0);
         if ($410) {
          $475 = $253;
         } else {
          $411 = HEAP32[(55400)>>2]|0;
          $412 = ($411>>>0)>($409>>>0);
          if ($412) {
           _abort();
           // unreachable;
          } else {
           $413 = ((($$3372$i)) + 20|0);
           HEAP32[$413>>2] = $409;
           $414 = ((($409)) + 24|0);
           HEAP32[$414>>2] = $$3372$i;
           $475 = $253;
           break;
          }
         }
        }
       } while(0);
       $415 = ($$4351$lcssa$i>>>0)<(16);
       do {
        if ($415) {
         $416 = (($$4351$lcssa$i) + ($252))|0;
         $417 = $416 | 3;
         $418 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = (($$4$lcssa$i) + ($416)|0);
         $420 = ((($419)) + 4|0);
         $421 = HEAP32[$420>>2]|0;
         $422 = $421 | 1;
         HEAP32[$420>>2] = $422;
        } else {
         $423 = $252 | 3;
         $424 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$424>>2] = $423;
         $425 = $$4351$lcssa$i | 1;
         $426 = ((($354)) + 4|0);
         HEAP32[$426>>2] = $425;
         $427 = (($354) + ($$4351$lcssa$i)|0);
         HEAP32[$427>>2] = $$4351$lcssa$i;
         $428 = $$4351$lcssa$i >>> 3;
         $429 = ($$4351$lcssa$i>>>0)<(256);
         if ($429) {
          $430 = $428 << 1;
          $431 = (55424 + ($430<<2)|0);
          $432 = HEAP32[13846]|0;
          $433 = 1 << $428;
          $434 = $432 & $433;
          $435 = ($434|0)==(0);
          if ($435) {
           $436 = $432 | $433;
           HEAP32[13846] = $436;
           $$pre$i210 = ((($431)) + 8|0);
           $$0368$i = $431;$$pre$phi$i211Z2D = $$pre$i210;
          } else {
           $437 = ((($431)) + 8|0);
           $438 = HEAP32[$437>>2]|0;
           $439 = HEAP32[(55400)>>2]|0;
           $440 = ($439>>>0)>($438>>>0);
           if ($440) {
            _abort();
            // unreachable;
           } else {
            $$0368$i = $438;$$pre$phi$i211Z2D = $437;
           }
          }
          HEAP32[$$pre$phi$i211Z2D>>2] = $354;
          $441 = ((($$0368$i)) + 12|0);
          HEAP32[$441>>2] = $354;
          $442 = ((($354)) + 8|0);
          HEAP32[$442>>2] = $$0368$i;
          $443 = ((($354)) + 12|0);
          HEAP32[$443>>2] = $431;
          break;
         }
         $444 = $$4351$lcssa$i >>> 8;
         $445 = ($444|0)==(0);
         if ($445) {
          $$0361$i = 0;
         } else {
          $446 = ($$4351$lcssa$i>>>0)>(16777215);
          if ($446) {
           $$0361$i = 31;
          } else {
           $447 = (($444) + 1048320)|0;
           $448 = $447 >>> 16;
           $449 = $448 & 8;
           $450 = $444 << $449;
           $451 = (($450) + 520192)|0;
           $452 = $451 >>> 16;
           $453 = $452 & 4;
           $454 = $453 | $449;
           $455 = $450 << $453;
           $456 = (($455) + 245760)|0;
           $457 = $456 >>> 16;
           $458 = $457 & 2;
           $459 = $454 | $458;
           $460 = (14 - ($459))|0;
           $461 = $455 << $458;
           $462 = $461 >>> 15;
           $463 = (($460) + ($462))|0;
           $464 = $463 << 1;
           $465 = (($463) + 7)|0;
           $466 = $$4351$lcssa$i >>> $465;
           $467 = $466 & 1;
           $468 = $467 | $464;
           $$0361$i = $468;
          }
         }
         $469 = (55688 + ($$0361$i<<2)|0);
         $470 = ((($354)) + 28|0);
         HEAP32[$470>>2] = $$0361$i;
         $471 = ((($354)) + 16|0);
         $472 = ((($471)) + 4|0);
         HEAP32[$472>>2] = 0;
         HEAP32[$471>>2] = 0;
         $473 = 1 << $$0361$i;
         $474 = $475 & $473;
         $476 = ($474|0)==(0);
         if ($476) {
          $477 = $475 | $473;
          HEAP32[(55388)>>2] = $477;
          HEAP32[$469>>2] = $354;
          $478 = ((($354)) + 24|0);
          HEAP32[$478>>2] = $469;
          $479 = ((($354)) + 12|0);
          HEAP32[$479>>2] = $354;
          $480 = ((($354)) + 8|0);
          HEAP32[$480>>2] = $354;
          break;
         }
         $481 = HEAP32[$469>>2]|0;
         $482 = ($$0361$i|0)==(31);
         $483 = $$0361$i >>> 1;
         $484 = (25 - ($483))|0;
         $485 = $482 ? 0 : $484;
         $486 = $$4351$lcssa$i << $485;
         $$0344$i = $486;$$0345$i = $481;
         while(1) {
          $487 = ((($$0345$i)) + 4|0);
          $488 = HEAP32[$487>>2]|0;
          $489 = $488 & -8;
          $490 = ($489|0)==($$4351$lcssa$i|0);
          if ($490) {
           label = 139;
           break;
          }
          $491 = $$0344$i >>> 31;
          $492 = (((($$0345$i)) + 16|0) + ($491<<2)|0);
          $493 = $$0344$i << 1;
          $494 = HEAP32[$492>>2]|0;
          $495 = ($494|0)==(0|0);
          if ($495) {
           label = 136;
           break;
          } else {
           $$0344$i = $493;$$0345$i = $494;
          }
         }
         if ((label|0) == 136) {
          $496 = HEAP32[(55400)>>2]|0;
          $497 = ($496>>>0)>($492>>>0);
          if ($497) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$492>>2] = $354;
           $498 = ((($354)) + 24|0);
           HEAP32[$498>>2] = $$0345$i;
           $499 = ((($354)) + 12|0);
           HEAP32[$499>>2] = $354;
           $500 = ((($354)) + 8|0);
           HEAP32[$500>>2] = $354;
           break;
          }
         }
         else if ((label|0) == 139) {
          $501 = ((($$0345$i)) + 8|0);
          $502 = HEAP32[$501>>2]|0;
          $503 = HEAP32[(55400)>>2]|0;
          $504 = ($503>>>0)<=($$0345$i>>>0);
          $505 = ($503>>>0)<=($502>>>0);
          $506 = $505 & $504;
          if ($506) {
           $507 = ((($502)) + 12|0);
           HEAP32[$507>>2] = $354;
           HEAP32[$501>>2] = $354;
           $508 = ((($354)) + 8|0);
           HEAP32[$508>>2] = $502;
           $509 = ((($354)) + 12|0);
           HEAP32[$509>>2] = $$0345$i;
           $510 = ((($354)) + 24|0);
           HEAP32[$510>>2] = 0;
           break;
          } else {
           _abort();
           // unreachable;
          }
         }
        }
       } while(0);
       $511 = ((($$4$lcssa$i)) + 8|0);
       $$0 = $511;
       STACKTOP = sp;return ($$0|0);
      } else {
       $$0197 = $252;
      }
     }
    }
   }
  }
 } while(0);
 $512 = HEAP32[(55392)>>2]|0;
 $513 = ($512>>>0)<($$0197>>>0);
 if (!($513)) {
  $514 = (($512) - ($$0197))|0;
  $515 = HEAP32[(55404)>>2]|0;
  $516 = ($514>>>0)>(15);
  if ($516) {
   $517 = (($515) + ($$0197)|0);
   HEAP32[(55404)>>2] = $517;
   HEAP32[(55392)>>2] = $514;
   $518 = $514 | 1;
   $519 = ((($517)) + 4|0);
   HEAP32[$519>>2] = $518;
   $520 = (($515) + ($512)|0);
   HEAP32[$520>>2] = $514;
   $521 = $$0197 | 3;
   $522 = ((($515)) + 4|0);
   HEAP32[$522>>2] = $521;
  } else {
   HEAP32[(55392)>>2] = 0;
   HEAP32[(55404)>>2] = 0;
   $523 = $512 | 3;
   $524 = ((($515)) + 4|0);
   HEAP32[$524>>2] = $523;
   $525 = (($515) + ($512)|0);
   $526 = ((($525)) + 4|0);
   $527 = HEAP32[$526>>2]|0;
   $528 = $527 | 1;
   HEAP32[$526>>2] = $528;
  }
  $529 = ((($515)) + 8|0);
  $$0 = $529;
  STACKTOP = sp;return ($$0|0);
 }
 $530 = HEAP32[(55396)>>2]|0;
 $531 = ($530>>>0)>($$0197>>>0);
 if ($531) {
  $532 = (($530) - ($$0197))|0;
  HEAP32[(55396)>>2] = $532;
  $533 = HEAP32[(55408)>>2]|0;
  $534 = (($533) + ($$0197)|0);
  HEAP32[(55408)>>2] = $534;
  $535 = $532 | 1;
  $536 = ((($534)) + 4|0);
  HEAP32[$536>>2] = $535;
  $537 = $$0197 | 3;
  $538 = ((($533)) + 4|0);
  HEAP32[$538>>2] = $537;
  $539 = ((($533)) + 8|0);
  $$0 = $539;
  STACKTOP = sp;return ($$0|0);
 }
 $540 = HEAP32[13964]|0;
 $541 = ($540|0)==(0);
 if ($541) {
  HEAP32[(55864)>>2] = 4096;
  HEAP32[(55860)>>2] = 4096;
  HEAP32[(55868)>>2] = -1;
  HEAP32[(55872)>>2] = -1;
  HEAP32[(55876)>>2] = 0;
  HEAP32[(55828)>>2] = 0;
  $542 = $1;
  $543 = $542 & -16;
  $544 = $543 ^ 1431655768;
  HEAP32[13964] = $544;
  $548 = 4096;
 } else {
  $$pre$i212 = HEAP32[(55864)>>2]|0;
  $548 = $$pre$i212;
 }
 $545 = (($$0197) + 48)|0;
 $546 = (($$0197) + 47)|0;
 $547 = (($548) + ($546))|0;
 $549 = (0 - ($548))|0;
 $550 = $547 & $549;
 $551 = ($550>>>0)>($$0197>>>0);
 if (!($551)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $552 = HEAP32[(55824)>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[(55816)>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $558 = HEAP32[(55828)>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L244: do {
  if ($560) {
   $561 = HEAP32[(55408)>>2]|0;
   $562 = ($561|0)==(0|0);
   L246: do {
    if ($562) {
     label = 163;
    } else {
     $$0$i$i = (55832);
     while(1) {
      $563 = HEAP32[$$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = ((($$0$i$i)) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        break;
       }
      }
      $569 = ((($$0$i$i)) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 163;
       break L246;
      } else {
       $$0$i$i = $570;
      }
     }
     $594 = (($547) - ($530))|0;
     $595 = $594 & $549;
     $596 = ($595>>>0)<(2147483647);
     if ($596) {
      $597 = (_sbrk(($595|0))|0);
      $598 = HEAP32[$$0$i$i>>2]|0;
      $599 = HEAP32[$565>>2]|0;
      $600 = (($598) + ($599)|0);
      $601 = ($597|0)==($600|0);
      if ($601) {
       $602 = ($597|0)==((-1)|0);
       if ($602) {
        $$2234243136$i = $595;
       } else {
        $$723947$i = $595;$$748$i = $597;
        label = 180;
        break L244;
       }
      } else {
       $$2247$ph$i = $597;$$2253$ph$i = $595;
       label = 171;
      }
     } else {
      $$2234243136$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 163) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $$2234243136$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[(55860)>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      $579 = (($576) + ($574))|0;
      $580 = (0 - ($575))|0;
      $581 = $579 & $580;
      $582 = (($581) - ($574))|0;
      $583 = $578 ? 0 : $582;
      $$$i = (($583) + ($550))|0;
      $584 = HEAP32[(55816)>>2]|0;
      $585 = (($$$i) + ($584))|0;
      $586 = ($$$i>>>0)>($$0197>>>0);
      $587 = ($$$i>>>0)<(2147483647);
      $or$cond$i214 = $586 & $587;
      if ($or$cond$i214) {
       $588 = HEAP32[(55824)>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i215 = $590 | $591;
        if ($or$cond2$i215) {
         $$2234243136$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($$$i|0))|0);
       $593 = ($592|0)==($572|0);
       if ($593) {
        $$723947$i = $$$i;$$748$i = $572;
        label = 180;
        break L244;
       } else {
        $$2247$ph$i = $592;$$2253$ph$i = $$$i;
        label = 171;
       }
      } else {
       $$2234243136$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 171) {
     $603 = (0 - ($$2253$ph$i))|0;
     $604 = ($$2247$ph$i|0)!=((-1)|0);
     $605 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $605 & $604;
     $606 = ($545>>>0)>($$2253$ph$i>>>0);
     $or$cond10$i = $606 & $or$cond7$i;
     if (!($or$cond10$i)) {
      $616 = ($$2247$ph$i|0)==((-1)|0);
      if ($616) {
       $$2234243136$i = 0;
       break;
      } else {
       $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
       label = 180;
       break L244;
      }
     }
     $607 = HEAP32[(55864)>>2]|0;
     $608 = (($546) - ($$2253$ph$i))|0;
     $609 = (($608) + ($607))|0;
     $610 = (0 - ($607))|0;
     $611 = $609 & $610;
     $612 = ($611>>>0)<(2147483647);
     if (!($612)) {
      $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
      label = 180;
      break L244;
     }
     $613 = (_sbrk(($611|0))|0);
     $614 = ($613|0)==((-1)|0);
     if ($614) {
      (_sbrk(($603|0))|0);
      $$2234243136$i = 0;
      break;
     } else {
      $615 = (($611) + ($$2253$ph$i))|0;
      $$723947$i = $615;$$748$i = $$2247$ph$i;
      label = 180;
      break L244;
     }
    }
   } while(0);
   $617 = HEAP32[(55828)>>2]|0;
   $618 = $617 | 4;
   HEAP32[(55828)>>2] = $618;
   $$4236$i = $$2234243136$i;
   label = 178;
  } else {
   $$4236$i = 0;
   label = 178;
  }
 } while(0);
 if ((label|0) == 178) {
  $619 = ($550>>>0)<(2147483647);
  if ($619) {
   $620 = (_sbrk(($550|0))|0);
   $621 = (_sbrk(0)|0);
   $622 = ($620|0)!=((-1)|0);
   $623 = ($621|0)!=((-1)|0);
   $or$cond5$i = $622 & $623;
   $624 = ($620>>>0)<($621>>>0);
   $or$cond11$i = $624 & $or$cond5$i;
   $625 = $621;
   $626 = $620;
   $627 = (($625) - ($626))|0;
   $628 = (($$0197) + 40)|0;
   $629 = ($627>>>0)>($628>>>0);
   $$$4236$i = $629 ? $627 : $$4236$i;
   $or$cond11$not$i = $or$cond11$i ^ 1;
   $630 = ($620|0)==((-1)|0);
   $not$$i = $629 ^ 1;
   $631 = $630 | $not$$i;
   $or$cond49$i = $631 | $or$cond11$not$i;
   if (!($or$cond49$i)) {
    $$723947$i = $$$4236$i;$$748$i = $620;
    label = 180;
   }
  }
 }
 if ((label|0) == 180) {
  $632 = HEAP32[(55816)>>2]|0;
  $633 = (($632) + ($$723947$i))|0;
  HEAP32[(55816)>>2] = $633;
  $634 = HEAP32[(55820)>>2]|0;
  $635 = ($633>>>0)>($634>>>0);
  if ($635) {
   HEAP32[(55820)>>2] = $633;
  }
  $636 = HEAP32[(55408)>>2]|0;
  $637 = ($636|0)==(0|0);
  do {
   if ($637) {
    $638 = HEAP32[(55400)>>2]|0;
    $639 = ($638|0)==(0|0);
    $640 = ($$748$i>>>0)<($638>>>0);
    $or$cond12$i = $639 | $640;
    if ($or$cond12$i) {
     HEAP32[(55400)>>2] = $$748$i;
    }
    HEAP32[(55832)>>2] = $$748$i;
    HEAP32[(55836)>>2] = $$723947$i;
    HEAP32[(55844)>>2] = 0;
    $641 = HEAP32[13964]|0;
    HEAP32[(55420)>>2] = $641;
    HEAP32[(55416)>>2] = -1;
    HEAP32[(55436)>>2] = (55424);
    HEAP32[(55432)>>2] = (55424);
    HEAP32[(55444)>>2] = (55432);
    HEAP32[(55440)>>2] = (55432);
    HEAP32[(55452)>>2] = (55440);
    HEAP32[(55448)>>2] = (55440);
    HEAP32[(55460)>>2] = (55448);
    HEAP32[(55456)>>2] = (55448);
    HEAP32[(55468)>>2] = (55456);
    HEAP32[(55464)>>2] = (55456);
    HEAP32[(55476)>>2] = (55464);
    HEAP32[(55472)>>2] = (55464);
    HEAP32[(55484)>>2] = (55472);
    HEAP32[(55480)>>2] = (55472);
    HEAP32[(55492)>>2] = (55480);
    HEAP32[(55488)>>2] = (55480);
    HEAP32[(55500)>>2] = (55488);
    HEAP32[(55496)>>2] = (55488);
    HEAP32[(55508)>>2] = (55496);
    HEAP32[(55504)>>2] = (55496);
    HEAP32[(55516)>>2] = (55504);
    HEAP32[(55512)>>2] = (55504);
    HEAP32[(55524)>>2] = (55512);
    HEAP32[(55520)>>2] = (55512);
    HEAP32[(55532)>>2] = (55520);
    HEAP32[(55528)>>2] = (55520);
    HEAP32[(55540)>>2] = (55528);
    HEAP32[(55536)>>2] = (55528);
    HEAP32[(55548)>>2] = (55536);
    HEAP32[(55544)>>2] = (55536);
    HEAP32[(55556)>>2] = (55544);
    HEAP32[(55552)>>2] = (55544);
    HEAP32[(55564)>>2] = (55552);
    HEAP32[(55560)>>2] = (55552);
    HEAP32[(55572)>>2] = (55560);
    HEAP32[(55568)>>2] = (55560);
    HEAP32[(55580)>>2] = (55568);
    HEAP32[(55576)>>2] = (55568);
    HEAP32[(55588)>>2] = (55576);
    HEAP32[(55584)>>2] = (55576);
    HEAP32[(55596)>>2] = (55584);
    HEAP32[(55592)>>2] = (55584);
    HEAP32[(55604)>>2] = (55592);
    HEAP32[(55600)>>2] = (55592);
    HEAP32[(55612)>>2] = (55600);
    HEAP32[(55608)>>2] = (55600);
    HEAP32[(55620)>>2] = (55608);
    HEAP32[(55616)>>2] = (55608);
    HEAP32[(55628)>>2] = (55616);
    HEAP32[(55624)>>2] = (55616);
    HEAP32[(55636)>>2] = (55624);
    HEAP32[(55632)>>2] = (55624);
    HEAP32[(55644)>>2] = (55632);
    HEAP32[(55640)>>2] = (55632);
    HEAP32[(55652)>>2] = (55640);
    HEAP32[(55648)>>2] = (55640);
    HEAP32[(55660)>>2] = (55648);
    HEAP32[(55656)>>2] = (55648);
    HEAP32[(55668)>>2] = (55656);
    HEAP32[(55664)>>2] = (55656);
    HEAP32[(55676)>>2] = (55664);
    HEAP32[(55672)>>2] = (55664);
    HEAP32[(55684)>>2] = (55672);
    HEAP32[(55680)>>2] = (55672);
    $642 = (($$723947$i) + -40)|0;
    $643 = ((($$748$i)) + 8|0);
    $644 = $643;
    $645 = $644 & 7;
    $646 = ($645|0)==(0);
    $647 = (0 - ($644))|0;
    $648 = $647 & 7;
    $649 = $646 ? 0 : $648;
    $650 = (($$748$i) + ($649)|0);
    $651 = (($642) - ($649))|0;
    HEAP32[(55408)>>2] = $650;
    HEAP32[(55396)>>2] = $651;
    $652 = $651 | 1;
    $653 = ((($650)) + 4|0);
    HEAP32[$653>>2] = $652;
    $654 = (($$748$i) + ($642)|0);
    $655 = ((($654)) + 4|0);
    HEAP32[$655>>2] = 40;
    $656 = HEAP32[(55872)>>2]|0;
    HEAP32[(55412)>>2] = $656;
   } else {
    $$024367$i = (55832);
    while(1) {
     $657 = HEAP32[$$024367$i>>2]|0;
     $658 = ((($$024367$i)) + 4|0);
     $659 = HEAP32[$658>>2]|0;
     $660 = (($657) + ($659)|0);
     $661 = ($$748$i|0)==($660|0);
     if ($661) {
      label = 188;
      break;
     }
     $662 = ((($$024367$i)) + 8|0);
     $663 = HEAP32[$662>>2]|0;
     $664 = ($663|0)==(0|0);
     if ($664) {
      break;
     } else {
      $$024367$i = $663;
     }
    }
    if ((label|0) == 188) {
     $665 = ((($$024367$i)) + 12|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = $666 & 8;
     $668 = ($667|0)==(0);
     if ($668) {
      $669 = ($657>>>0)<=($636>>>0);
      $670 = ($$748$i>>>0)>($636>>>0);
      $or$cond50$i = $670 & $669;
      if ($or$cond50$i) {
       $671 = (($659) + ($$723947$i))|0;
       HEAP32[$658>>2] = $671;
       $672 = HEAP32[(55396)>>2]|0;
       $673 = (($672) + ($$723947$i))|0;
       $674 = ((($636)) + 8|0);
       $675 = $674;
       $676 = $675 & 7;
       $677 = ($676|0)==(0);
       $678 = (0 - ($675))|0;
       $679 = $678 & 7;
       $680 = $677 ? 0 : $679;
       $681 = (($636) + ($680)|0);
       $682 = (($673) - ($680))|0;
       HEAP32[(55408)>>2] = $681;
       HEAP32[(55396)>>2] = $682;
       $683 = $682 | 1;
       $684 = ((($681)) + 4|0);
       HEAP32[$684>>2] = $683;
       $685 = (($636) + ($673)|0);
       $686 = ((($685)) + 4|0);
       HEAP32[$686>>2] = 40;
       $687 = HEAP32[(55872)>>2]|0;
       HEAP32[(55412)>>2] = $687;
       break;
      }
     }
    }
    $688 = HEAP32[(55400)>>2]|0;
    $689 = ($$748$i>>>0)<($688>>>0);
    if ($689) {
     HEAP32[(55400)>>2] = $$748$i;
     $752 = $$748$i;
    } else {
     $752 = $688;
    }
    $690 = (($$748$i) + ($$723947$i)|0);
    $$124466$i = (55832);
    while(1) {
     $691 = HEAP32[$$124466$i>>2]|0;
     $692 = ($691|0)==($690|0);
     if ($692) {
      label = 196;
      break;
     }
     $693 = ((($$124466$i)) + 8|0);
     $694 = HEAP32[$693>>2]|0;
     $695 = ($694|0)==(0|0);
     if ($695) {
      $$0$i$i$i = (55832);
      break;
     } else {
      $$124466$i = $694;
     }
    }
    if ((label|0) == 196) {
     $696 = ((($$124466$i)) + 12|0);
     $697 = HEAP32[$696>>2]|0;
     $698 = $697 & 8;
     $699 = ($698|0)==(0);
     if ($699) {
      HEAP32[$$124466$i>>2] = $$748$i;
      $700 = ((($$124466$i)) + 4|0);
      $701 = HEAP32[$700>>2]|0;
      $702 = (($701) + ($$723947$i))|0;
      HEAP32[$700>>2] = $702;
      $703 = ((($$748$i)) + 8|0);
      $704 = $703;
      $705 = $704 & 7;
      $706 = ($705|0)==(0);
      $707 = (0 - ($704))|0;
      $708 = $707 & 7;
      $709 = $706 ? 0 : $708;
      $710 = (($$748$i) + ($709)|0);
      $711 = ((($690)) + 8|0);
      $712 = $711;
      $713 = $712 & 7;
      $714 = ($713|0)==(0);
      $715 = (0 - ($712))|0;
      $716 = $715 & 7;
      $717 = $714 ? 0 : $716;
      $718 = (($690) + ($717)|0);
      $719 = $718;
      $720 = $710;
      $721 = (($719) - ($720))|0;
      $722 = (($710) + ($$0197)|0);
      $723 = (($721) - ($$0197))|0;
      $724 = $$0197 | 3;
      $725 = ((($710)) + 4|0);
      HEAP32[$725>>2] = $724;
      $726 = ($636|0)==($718|0);
      do {
       if ($726) {
        $727 = HEAP32[(55396)>>2]|0;
        $728 = (($727) + ($723))|0;
        HEAP32[(55396)>>2] = $728;
        HEAP32[(55408)>>2] = $722;
        $729 = $728 | 1;
        $730 = ((($722)) + 4|0);
        HEAP32[$730>>2] = $729;
       } else {
        $731 = HEAP32[(55404)>>2]|0;
        $732 = ($731|0)==($718|0);
        if ($732) {
         $733 = HEAP32[(55392)>>2]|0;
         $734 = (($733) + ($723))|0;
         HEAP32[(55392)>>2] = $734;
         HEAP32[(55404)>>2] = $722;
         $735 = $734 | 1;
         $736 = ((($722)) + 4|0);
         HEAP32[$736>>2] = $735;
         $737 = (($722) + ($734)|0);
         HEAP32[$737>>2] = $734;
         break;
        }
        $738 = ((($718)) + 4|0);
        $739 = HEAP32[$738>>2]|0;
        $740 = $739 & 3;
        $741 = ($740|0)==(1);
        if ($741) {
         $742 = $739 & -8;
         $743 = $739 >>> 3;
         $744 = ($739>>>0)<(256);
         L311: do {
          if ($744) {
           $745 = ((($718)) + 8|0);
           $746 = HEAP32[$745>>2]|0;
           $747 = ((($718)) + 12|0);
           $748 = HEAP32[$747>>2]|0;
           $749 = $743 << 1;
           $750 = (55424 + ($749<<2)|0);
           $751 = ($746|0)==($750|0);
           do {
            if (!($751)) {
             $753 = ($752>>>0)>($746>>>0);
             if ($753) {
              _abort();
              // unreachable;
             }
             $754 = ((($746)) + 12|0);
             $755 = HEAP32[$754>>2]|0;
             $756 = ($755|0)==($718|0);
             if ($756) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $757 = ($748|0)==($746|0);
           if ($757) {
            $758 = 1 << $743;
            $759 = $758 ^ -1;
            $760 = HEAP32[13846]|0;
            $761 = $760 & $759;
            HEAP32[13846] = $761;
            break;
           }
           $762 = ($748|0)==($750|0);
           do {
            if ($762) {
             $$pre10$i$i = ((($748)) + 8|0);
             $$pre$phi11$i$iZ2D = $$pre10$i$i;
            } else {
             $763 = ($752>>>0)>($748>>>0);
             if ($763) {
              _abort();
              // unreachable;
             }
             $764 = ((($748)) + 8|0);
             $765 = HEAP32[$764>>2]|0;
             $766 = ($765|0)==($718|0);
             if ($766) {
              $$pre$phi11$i$iZ2D = $764;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $767 = ((($746)) + 12|0);
           HEAP32[$767>>2] = $748;
           HEAP32[$$pre$phi11$i$iZ2D>>2] = $746;
          } else {
           $768 = ((($718)) + 24|0);
           $769 = HEAP32[$768>>2]|0;
           $770 = ((($718)) + 12|0);
           $771 = HEAP32[$770>>2]|0;
           $772 = ($771|0)==($718|0);
           do {
            if ($772) {
             $782 = ((($718)) + 16|0);
             $783 = ((($782)) + 4|0);
             $784 = HEAP32[$783>>2]|0;
             $785 = ($784|0)==(0|0);
             if ($785) {
              $786 = HEAP32[$782>>2]|0;
              $787 = ($786|0)==(0|0);
              if ($787) {
               $$3$i$i = 0;
               break;
              } else {
               $$1291$i$i = $786;$$1293$i$i = $782;
              }
             } else {
              $$1291$i$i = $784;$$1293$i$i = $783;
             }
             while(1) {
              $788 = ((($$1291$i$i)) + 20|0);
              $789 = HEAP32[$788>>2]|0;
              $790 = ($789|0)==(0|0);
              if (!($790)) {
               $$1291$i$i = $789;$$1293$i$i = $788;
               continue;
              }
              $791 = ((($$1291$i$i)) + 16|0);
              $792 = HEAP32[$791>>2]|0;
              $793 = ($792|0)==(0|0);
              if ($793) {
               break;
              } else {
               $$1291$i$i = $792;$$1293$i$i = $791;
              }
             }
             $794 = ($752>>>0)>($$1293$i$i>>>0);
             if ($794) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$$1293$i$i>>2] = 0;
              $$3$i$i = $$1291$i$i;
              break;
             }
            } else {
             $773 = ((($718)) + 8|0);
             $774 = HEAP32[$773>>2]|0;
             $775 = ($752>>>0)>($774>>>0);
             if ($775) {
              _abort();
              // unreachable;
             }
             $776 = ((($774)) + 12|0);
             $777 = HEAP32[$776>>2]|0;
             $778 = ($777|0)==($718|0);
             if (!($778)) {
              _abort();
              // unreachable;
             }
             $779 = ((($771)) + 8|0);
             $780 = HEAP32[$779>>2]|0;
             $781 = ($780|0)==($718|0);
             if ($781) {
              HEAP32[$776>>2] = $771;
              HEAP32[$779>>2] = $774;
              $$3$i$i = $771;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $795 = ($769|0)==(0|0);
           if ($795) {
            break;
           }
           $796 = ((($718)) + 28|0);
           $797 = HEAP32[$796>>2]|0;
           $798 = (55688 + ($797<<2)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = ($799|0)==($718|0);
           do {
            if ($800) {
             HEAP32[$798>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $801 = 1 << $797;
             $802 = $801 ^ -1;
             $803 = HEAP32[(55388)>>2]|0;
             $804 = $803 & $802;
             HEAP32[(55388)>>2] = $804;
             break L311;
            } else {
             $805 = HEAP32[(55400)>>2]|0;
             $806 = ($805>>>0)>($769>>>0);
             if ($806) {
              _abort();
              // unreachable;
             } else {
              $807 = ((($769)) + 16|0);
              $808 = HEAP32[$807>>2]|0;
              $809 = ($808|0)!=($718|0);
              $$sink1$i$i = $809&1;
              $810 = (((($769)) + 16|0) + ($$sink1$i$i<<2)|0);
              HEAP32[$810>>2] = $$3$i$i;
              $811 = ($$3$i$i|0)==(0|0);
              if ($811) {
               break L311;
              } else {
               break;
              }
             }
            }
           } while(0);
           $812 = HEAP32[(55400)>>2]|0;
           $813 = ($812>>>0)>($$3$i$i>>>0);
           if ($813) {
            _abort();
            // unreachable;
           }
           $814 = ((($$3$i$i)) + 24|0);
           HEAP32[$814>>2] = $769;
           $815 = ((($718)) + 16|0);
           $816 = HEAP32[$815>>2]|0;
           $817 = ($816|0)==(0|0);
           do {
            if (!($817)) {
             $818 = ($812>>>0)>($816>>>0);
             if ($818) {
              _abort();
              // unreachable;
             } else {
              $819 = ((($$3$i$i)) + 16|0);
              HEAP32[$819>>2] = $816;
              $820 = ((($816)) + 24|0);
              HEAP32[$820>>2] = $$3$i$i;
              break;
             }
            }
           } while(0);
           $821 = ((($815)) + 4|0);
           $822 = HEAP32[$821>>2]|0;
           $823 = ($822|0)==(0|0);
           if ($823) {
            break;
           }
           $824 = HEAP32[(55400)>>2]|0;
           $825 = ($824>>>0)>($822>>>0);
           if ($825) {
            _abort();
            // unreachable;
           } else {
            $826 = ((($$3$i$i)) + 20|0);
            HEAP32[$826>>2] = $822;
            $827 = ((($822)) + 24|0);
            HEAP32[$827>>2] = $$3$i$i;
            break;
           }
          }
         } while(0);
         $828 = (($718) + ($742)|0);
         $829 = (($742) + ($723))|0;
         $$0$i17$i = $828;$$0287$i$i = $829;
        } else {
         $$0$i17$i = $718;$$0287$i$i = $723;
        }
        $830 = ((($$0$i17$i)) + 4|0);
        $831 = HEAP32[$830>>2]|0;
        $832 = $831 & -2;
        HEAP32[$830>>2] = $832;
        $833 = $$0287$i$i | 1;
        $834 = ((($722)) + 4|0);
        HEAP32[$834>>2] = $833;
        $835 = (($722) + ($$0287$i$i)|0);
        HEAP32[$835>>2] = $$0287$i$i;
        $836 = $$0287$i$i >>> 3;
        $837 = ($$0287$i$i>>>0)<(256);
        if ($837) {
         $838 = $836 << 1;
         $839 = (55424 + ($838<<2)|0);
         $840 = HEAP32[13846]|0;
         $841 = 1 << $836;
         $842 = $840 & $841;
         $843 = ($842|0)==(0);
         do {
          if ($843) {
           $844 = $840 | $841;
           HEAP32[13846] = $844;
           $$pre$i18$i = ((($839)) + 8|0);
           $$0295$i$i = $839;$$pre$phi$i19$iZ2D = $$pre$i18$i;
          } else {
           $845 = ((($839)) + 8|0);
           $846 = HEAP32[$845>>2]|0;
           $847 = HEAP32[(55400)>>2]|0;
           $848 = ($847>>>0)>($846>>>0);
           if (!($848)) {
            $$0295$i$i = $846;$$pre$phi$i19$iZ2D = $845;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i19$iZ2D>>2] = $722;
         $849 = ((($$0295$i$i)) + 12|0);
         HEAP32[$849>>2] = $722;
         $850 = ((($722)) + 8|0);
         HEAP32[$850>>2] = $$0295$i$i;
         $851 = ((($722)) + 12|0);
         HEAP32[$851>>2] = $839;
         break;
        }
        $852 = $$0287$i$i >>> 8;
        $853 = ($852|0)==(0);
        do {
         if ($853) {
          $$0296$i$i = 0;
         } else {
          $854 = ($$0287$i$i>>>0)>(16777215);
          if ($854) {
           $$0296$i$i = 31;
           break;
          }
          $855 = (($852) + 1048320)|0;
          $856 = $855 >>> 16;
          $857 = $856 & 8;
          $858 = $852 << $857;
          $859 = (($858) + 520192)|0;
          $860 = $859 >>> 16;
          $861 = $860 & 4;
          $862 = $861 | $857;
          $863 = $858 << $861;
          $864 = (($863) + 245760)|0;
          $865 = $864 >>> 16;
          $866 = $865 & 2;
          $867 = $862 | $866;
          $868 = (14 - ($867))|0;
          $869 = $863 << $866;
          $870 = $869 >>> 15;
          $871 = (($868) + ($870))|0;
          $872 = $871 << 1;
          $873 = (($871) + 7)|0;
          $874 = $$0287$i$i >>> $873;
          $875 = $874 & 1;
          $876 = $875 | $872;
          $$0296$i$i = $876;
         }
        } while(0);
        $877 = (55688 + ($$0296$i$i<<2)|0);
        $878 = ((($722)) + 28|0);
        HEAP32[$878>>2] = $$0296$i$i;
        $879 = ((($722)) + 16|0);
        $880 = ((($879)) + 4|0);
        HEAP32[$880>>2] = 0;
        HEAP32[$879>>2] = 0;
        $881 = HEAP32[(55388)>>2]|0;
        $882 = 1 << $$0296$i$i;
        $883 = $881 & $882;
        $884 = ($883|0)==(0);
        if ($884) {
         $885 = $881 | $882;
         HEAP32[(55388)>>2] = $885;
         HEAP32[$877>>2] = $722;
         $886 = ((($722)) + 24|0);
         HEAP32[$886>>2] = $877;
         $887 = ((($722)) + 12|0);
         HEAP32[$887>>2] = $722;
         $888 = ((($722)) + 8|0);
         HEAP32[$888>>2] = $722;
         break;
        }
        $889 = HEAP32[$877>>2]|0;
        $890 = ($$0296$i$i|0)==(31);
        $891 = $$0296$i$i >>> 1;
        $892 = (25 - ($891))|0;
        $893 = $890 ? 0 : $892;
        $894 = $$0287$i$i << $893;
        $$0288$i$i = $894;$$0289$i$i = $889;
        while(1) {
         $895 = ((($$0289$i$i)) + 4|0);
         $896 = HEAP32[$895>>2]|0;
         $897 = $896 & -8;
         $898 = ($897|0)==($$0287$i$i|0);
         if ($898) {
          label = 263;
          break;
         }
         $899 = $$0288$i$i >>> 31;
         $900 = (((($$0289$i$i)) + 16|0) + ($899<<2)|0);
         $901 = $$0288$i$i << 1;
         $902 = HEAP32[$900>>2]|0;
         $903 = ($902|0)==(0|0);
         if ($903) {
          label = 260;
          break;
         } else {
          $$0288$i$i = $901;$$0289$i$i = $902;
         }
        }
        if ((label|0) == 260) {
         $904 = HEAP32[(55400)>>2]|0;
         $905 = ($904>>>0)>($900>>>0);
         if ($905) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$900>>2] = $722;
          $906 = ((($722)) + 24|0);
          HEAP32[$906>>2] = $$0289$i$i;
          $907 = ((($722)) + 12|0);
          HEAP32[$907>>2] = $722;
          $908 = ((($722)) + 8|0);
          HEAP32[$908>>2] = $722;
          break;
         }
        }
        else if ((label|0) == 263) {
         $909 = ((($$0289$i$i)) + 8|0);
         $910 = HEAP32[$909>>2]|0;
         $911 = HEAP32[(55400)>>2]|0;
         $912 = ($911>>>0)<=($$0289$i$i>>>0);
         $913 = ($911>>>0)<=($910>>>0);
         $914 = $913 & $912;
         if ($914) {
          $915 = ((($910)) + 12|0);
          HEAP32[$915>>2] = $722;
          HEAP32[$909>>2] = $722;
          $916 = ((($722)) + 8|0);
          HEAP32[$916>>2] = $910;
          $917 = ((($722)) + 12|0);
          HEAP32[$917>>2] = $$0289$i$i;
          $918 = ((($722)) + 24|0);
          HEAP32[$918>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       }
      } while(0);
      $1051 = ((($710)) + 8|0);
      $$0 = $1051;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0$i$i$i = (55832);
     }
    }
    while(1) {
     $919 = HEAP32[$$0$i$i$i>>2]|0;
     $920 = ($919>>>0)>($636>>>0);
     if (!($920)) {
      $921 = ((($$0$i$i$i)) + 4|0);
      $922 = HEAP32[$921>>2]|0;
      $923 = (($919) + ($922)|0);
      $924 = ($923>>>0)>($636>>>0);
      if ($924) {
       break;
      }
     }
     $925 = ((($$0$i$i$i)) + 8|0);
     $926 = HEAP32[$925>>2]|0;
     $$0$i$i$i = $926;
    }
    $927 = ((($923)) + -47|0);
    $928 = ((($927)) + 8|0);
    $929 = $928;
    $930 = $929 & 7;
    $931 = ($930|0)==(0);
    $932 = (0 - ($929))|0;
    $933 = $932 & 7;
    $934 = $931 ? 0 : $933;
    $935 = (($927) + ($934)|0);
    $936 = ((($636)) + 16|0);
    $937 = ($935>>>0)<($936>>>0);
    $938 = $937 ? $636 : $935;
    $939 = ((($938)) + 8|0);
    $940 = ((($938)) + 24|0);
    $941 = (($$723947$i) + -40)|0;
    $942 = ((($$748$i)) + 8|0);
    $943 = $942;
    $944 = $943 & 7;
    $945 = ($944|0)==(0);
    $946 = (0 - ($943))|0;
    $947 = $946 & 7;
    $948 = $945 ? 0 : $947;
    $949 = (($$748$i) + ($948)|0);
    $950 = (($941) - ($948))|0;
    HEAP32[(55408)>>2] = $949;
    HEAP32[(55396)>>2] = $950;
    $951 = $950 | 1;
    $952 = ((($949)) + 4|0);
    HEAP32[$952>>2] = $951;
    $953 = (($$748$i) + ($941)|0);
    $954 = ((($953)) + 4|0);
    HEAP32[$954>>2] = 40;
    $955 = HEAP32[(55872)>>2]|0;
    HEAP32[(55412)>>2] = $955;
    $956 = ((($938)) + 4|0);
    HEAP32[$956>>2] = 27;
    ;HEAP32[$939>>2]=HEAP32[(55832)>>2]|0;HEAP32[$939+4>>2]=HEAP32[(55832)+4>>2]|0;HEAP32[$939+8>>2]=HEAP32[(55832)+8>>2]|0;HEAP32[$939+12>>2]=HEAP32[(55832)+12>>2]|0;
    HEAP32[(55832)>>2] = $$748$i;
    HEAP32[(55836)>>2] = $$723947$i;
    HEAP32[(55844)>>2] = 0;
    HEAP32[(55840)>>2] = $939;
    $958 = $940;
    while(1) {
     $957 = ((($958)) + 4|0);
     HEAP32[$957>>2] = 7;
     $959 = ((($958)) + 8|0);
     $960 = ($959>>>0)<($923>>>0);
     if ($960) {
      $958 = $957;
     } else {
      break;
     }
    }
    $961 = ($938|0)==($636|0);
    if (!($961)) {
     $962 = $938;
     $963 = $636;
     $964 = (($962) - ($963))|0;
     $965 = HEAP32[$956>>2]|0;
     $966 = $965 & -2;
     HEAP32[$956>>2] = $966;
     $967 = $964 | 1;
     $968 = ((($636)) + 4|0);
     HEAP32[$968>>2] = $967;
     HEAP32[$938>>2] = $964;
     $969 = $964 >>> 3;
     $970 = ($964>>>0)<(256);
     if ($970) {
      $971 = $969 << 1;
      $972 = (55424 + ($971<<2)|0);
      $973 = HEAP32[13846]|0;
      $974 = 1 << $969;
      $975 = $973 & $974;
      $976 = ($975|0)==(0);
      if ($976) {
       $977 = $973 | $974;
       HEAP32[13846] = $977;
       $$pre$i$i = ((($972)) + 8|0);
       $$0211$i$i = $972;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $978 = ((($972)) + 8|0);
       $979 = HEAP32[$978>>2]|0;
       $980 = HEAP32[(55400)>>2]|0;
       $981 = ($980>>>0)>($979>>>0);
       if ($981) {
        _abort();
        // unreachable;
       } else {
        $$0211$i$i = $979;$$pre$phi$i$iZ2D = $978;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $636;
      $982 = ((($$0211$i$i)) + 12|0);
      HEAP32[$982>>2] = $636;
      $983 = ((($636)) + 8|0);
      HEAP32[$983>>2] = $$0211$i$i;
      $984 = ((($636)) + 12|0);
      HEAP32[$984>>2] = $972;
      break;
     }
     $985 = $964 >>> 8;
     $986 = ($985|0)==(0);
     if ($986) {
      $$0212$i$i = 0;
     } else {
      $987 = ($964>>>0)>(16777215);
      if ($987) {
       $$0212$i$i = 31;
      } else {
       $988 = (($985) + 1048320)|0;
       $989 = $988 >>> 16;
       $990 = $989 & 8;
       $991 = $985 << $990;
       $992 = (($991) + 520192)|0;
       $993 = $992 >>> 16;
       $994 = $993 & 4;
       $995 = $994 | $990;
       $996 = $991 << $994;
       $997 = (($996) + 245760)|0;
       $998 = $997 >>> 16;
       $999 = $998 & 2;
       $1000 = $995 | $999;
       $1001 = (14 - ($1000))|0;
       $1002 = $996 << $999;
       $1003 = $1002 >>> 15;
       $1004 = (($1001) + ($1003))|0;
       $1005 = $1004 << 1;
       $1006 = (($1004) + 7)|0;
       $1007 = $964 >>> $1006;
       $1008 = $1007 & 1;
       $1009 = $1008 | $1005;
       $$0212$i$i = $1009;
      }
     }
     $1010 = (55688 + ($$0212$i$i<<2)|0);
     $1011 = ((($636)) + 28|0);
     HEAP32[$1011>>2] = $$0212$i$i;
     $1012 = ((($636)) + 20|0);
     HEAP32[$1012>>2] = 0;
     HEAP32[$936>>2] = 0;
     $1013 = HEAP32[(55388)>>2]|0;
     $1014 = 1 << $$0212$i$i;
     $1015 = $1013 & $1014;
     $1016 = ($1015|0)==(0);
     if ($1016) {
      $1017 = $1013 | $1014;
      HEAP32[(55388)>>2] = $1017;
      HEAP32[$1010>>2] = $636;
      $1018 = ((($636)) + 24|0);
      HEAP32[$1018>>2] = $1010;
      $1019 = ((($636)) + 12|0);
      HEAP32[$1019>>2] = $636;
      $1020 = ((($636)) + 8|0);
      HEAP32[$1020>>2] = $636;
      break;
     }
     $1021 = HEAP32[$1010>>2]|0;
     $1022 = ($$0212$i$i|0)==(31);
     $1023 = $$0212$i$i >>> 1;
     $1024 = (25 - ($1023))|0;
     $1025 = $1022 ? 0 : $1024;
     $1026 = $964 << $1025;
     $$0206$i$i = $1026;$$0207$i$i = $1021;
     while(1) {
      $1027 = ((($$0207$i$i)) + 4|0);
      $1028 = HEAP32[$1027>>2]|0;
      $1029 = $1028 & -8;
      $1030 = ($1029|0)==($964|0);
      if ($1030) {
       label = 289;
       break;
      }
      $1031 = $$0206$i$i >>> 31;
      $1032 = (((($$0207$i$i)) + 16|0) + ($1031<<2)|0);
      $1033 = $$0206$i$i << 1;
      $1034 = HEAP32[$1032>>2]|0;
      $1035 = ($1034|0)==(0|0);
      if ($1035) {
       label = 286;
       break;
      } else {
       $$0206$i$i = $1033;$$0207$i$i = $1034;
      }
     }
     if ((label|0) == 286) {
      $1036 = HEAP32[(55400)>>2]|0;
      $1037 = ($1036>>>0)>($1032>>>0);
      if ($1037) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$1032>>2] = $636;
       $1038 = ((($636)) + 24|0);
       HEAP32[$1038>>2] = $$0207$i$i;
       $1039 = ((($636)) + 12|0);
       HEAP32[$1039>>2] = $636;
       $1040 = ((($636)) + 8|0);
       HEAP32[$1040>>2] = $636;
       break;
      }
     }
     else if ((label|0) == 289) {
      $1041 = ((($$0207$i$i)) + 8|0);
      $1042 = HEAP32[$1041>>2]|0;
      $1043 = HEAP32[(55400)>>2]|0;
      $1044 = ($1043>>>0)<=($$0207$i$i>>>0);
      $1045 = ($1043>>>0)<=($1042>>>0);
      $1046 = $1045 & $1044;
      if ($1046) {
       $1047 = ((($1042)) + 12|0);
       HEAP32[$1047>>2] = $636;
       HEAP32[$1041>>2] = $636;
       $1048 = ((($636)) + 8|0);
       HEAP32[$1048>>2] = $1042;
       $1049 = ((($636)) + 12|0);
       HEAP32[$1049>>2] = $$0207$i$i;
       $1050 = ((($636)) + 24|0);
       HEAP32[$1050>>2] = 0;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    }
   }
  } while(0);
  $1052 = HEAP32[(55396)>>2]|0;
  $1053 = ($1052>>>0)>($$0197>>>0);
  if ($1053) {
   $1054 = (($1052) - ($$0197))|0;
   HEAP32[(55396)>>2] = $1054;
   $1055 = HEAP32[(55408)>>2]|0;
   $1056 = (($1055) + ($$0197)|0);
   HEAP32[(55408)>>2] = $1056;
   $1057 = $1054 | 1;
   $1058 = ((($1056)) + 4|0);
   HEAP32[$1058>>2] = $1057;
   $1059 = $$0197 | 3;
   $1060 = ((($1055)) + 4|0);
   HEAP32[$1060>>2] = $1059;
   $1061 = ((($1055)) + 8|0);
   $$0 = $1061;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1062 = (___errno_location()|0);
 HEAP32[$1062>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0212$i = 0, $$0212$in$i = 0, $$0383 = 0, $$0384 = 0, $$0396 = 0, $$0403 = 0, $$1 = 0, $$1382 = 0, $$1387 = 0, $$1390 = 0, $$1398 = 0, $$1402 = 0, $$2 = 0, $$3 = 0, $$3400 = 0, $$pre = 0, $$pre$phi442Z2D = 0, $$pre$phi444Z2D = 0, $$pre$phiZ2D = 0, $$pre441 = 0;
 var $$pre443 = 0, $$sink3 = 0, $$sink5 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond421 = 0, $cond422 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(55400)>>2]|0;
 $4 = ($2>>>0)<($3>>>0);
 if ($4) {
  _abort();
  // unreachable;
 }
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 3;
 $8 = ($7|0)==(1);
 if ($8) {
  _abort();
  // unreachable;
 }
 $9 = $6 & -8;
 $10 = (($2) + ($9)|0);
 $11 = $6 & 1;
 $12 = ($11|0)==(0);
 L10: do {
  if ($12) {
   $13 = HEAP32[$2>>2]|0;
   $14 = ($7|0)==(0);
   if ($14) {
    return;
   }
   $15 = (0 - ($13))|0;
   $16 = (($2) + ($15)|0);
   $17 = (($13) + ($9))|0;
   $18 = ($16>>>0)<($3>>>0);
   if ($18) {
    _abort();
    // unreachable;
   }
   $19 = HEAP32[(55404)>>2]|0;
   $20 = ($19|0)==($16|0);
   if ($20) {
    $105 = ((($10)) + 4|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = $106 & 3;
    $108 = ($107|0)==(3);
    if (!($108)) {
     $$1 = $16;$$1382 = $17;$113 = $16;
     break;
    }
    HEAP32[(55392)>>2] = $17;
    $109 = $106 & -2;
    HEAP32[$105>>2] = $109;
    $110 = $17 | 1;
    $111 = ((($16)) + 4|0);
    HEAP32[$111>>2] = $110;
    $112 = (($16) + ($17)|0);
    HEAP32[$112>>2] = $17;
    return;
   }
   $21 = $13 >>> 3;
   $22 = ($13>>>0)<(256);
   if ($22) {
    $23 = ((($16)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($16)) + 12|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $21 << 1;
    $28 = (55424 + ($27<<2)|0);
    $29 = ($24|0)==($28|0);
    if (!($29)) {
     $30 = ($3>>>0)>($24>>>0);
     if ($30) {
      _abort();
      // unreachable;
     }
     $31 = ((($24)) + 12|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ($32|0)==($16|0);
     if (!($33)) {
      _abort();
      // unreachable;
     }
    }
    $34 = ($26|0)==($24|0);
    if ($34) {
     $35 = 1 << $21;
     $36 = $35 ^ -1;
     $37 = HEAP32[13846]|0;
     $38 = $37 & $36;
     HEAP32[13846] = $38;
     $$1 = $16;$$1382 = $17;$113 = $16;
     break;
    }
    $39 = ($26|0)==($28|0);
    if ($39) {
     $$pre443 = ((($26)) + 8|0);
     $$pre$phi444Z2D = $$pre443;
    } else {
     $40 = ($3>>>0)>($26>>>0);
     if ($40) {
      _abort();
      // unreachable;
     }
     $41 = ((($26)) + 8|0);
     $42 = HEAP32[$41>>2]|0;
     $43 = ($42|0)==($16|0);
     if ($43) {
      $$pre$phi444Z2D = $41;
     } else {
      _abort();
      // unreachable;
     }
    }
    $44 = ((($24)) + 12|0);
    HEAP32[$44>>2] = $26;
    HEAP32[$$pre$phi444Z2D>>2] = $24;
    $$1 = $16;$$1382 = $17;$113 = $16;
    break;
   }
   $45 = ((($16)) + 24|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($16)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ($48|0)==($16|0);
   do {
    if ($49) {
     $59 = ((($16)) + 16|0);
     $60 = ((($59)) + 4|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($61|0)==(0|0);
     if ($62) {
      $63 = HEAP32[$59>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $$3 = 0;
       break;
      } else {
       $$1387 = $63;$$1390 = $59;
      }
     } else {
      $$1387 = $61;$$1390 = $60;
     }
     while(1) {
      $65 = ((($$1387)) + 20|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ($66|0)==(0|0);
      if (!($67)) {
       $$1387 = $66;$$1390 = $65;
       continue;
      }
      $68 = ((($$1387)) + 16|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = ($69|0)==(0|0);
      if ($70) {
       break;
      } else {
       $$1387 = $69;$$1390 = $68;
      }
     }
     $71 = ($3>>>0)>($$1390>>>0);
     if ($71) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1390>>2] = 0;
      $$3 = $$1387;
      break;
     }
    } else {
     $50 = ((($16)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($3>>>0)>($51>>>0);
     if ($52) {
      _abort();
      // unreachable;
     }
     $53 = ((($51)) + 12|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==($16|0);
     if (!($55)) {
      _abort();
      // unreachable;
     }
     $56 = ((($48)) + 8|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($57|0)==($16|0);
     if ($58) {
      HEAP32[$53>>2] = $48;
      HEAP32[$56>>2] = $51;
      $$3 = $48;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $72 = ($46|0)==(0|0);
   if ($72) {
    $$1 = $16;$$1382 = $17;$113 = $16;
   } else {
    $73 = ((($16)) + 28|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = (55688 + ($74<<2)|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = ($76|0)==($16|0);
    do {
     if ($77) {
      HEAP32[$75>>2] = $$3;
      $cond421 = ($$3|0)==(0|0);
      if ($cond421) {
       $78 = 1 << $74;
       $79 = $78 ^ -1;
       $80 = HEAP32[(55388)>>2]|0;
       $81 = $80 & $79;
       HEAP32[(55388)>>2] = $81;
       $$1 = $16;$$1382 = $17;$113 = $16;
       break L10;
      }
     } else {
      $82 = HEAP32[(55400)>>2]|0;
      $83 = ($82>>>0)>($46>>>0);
      if ($83) {
       _abort();
       // unreachable;
      } else {
       $84 = ((($46)) + 16|0);
       $85 = HEAP32[$84>>2]|0;
       $86 = ($85|0)!=($16|0);
       $$sink3 = $86&1;
       $87 = (((($46)) + 16|0) + ($$sink3<<2)|0);
       HEAP32[$87>>2] = $$3;
       $88 = ($$3|0)==(0|0);
       if ($88) {
        $$1 = $16;$$1382 = $17;$113 = $16;
        break L10;
       } else {
        break;
       }
      }
     }
    } while(0);
    $89 = HEAP32[(55400)>>2]|0;
    $90 = ($89>>>0)>($$3>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = ((($$3)) + 24|0);
    HEAP32[$91>>2] = $46;
    $92 = ((($16)) + 16|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    do {
     if (!($94)) {
      $95 = ($89>>>0)>($93>>>0);
      if ($95) {
       _abort();
       // unreachable;
      } else {
       $96 = ((($$3)) + 16|0);
       HEAP32[$96>>2] = $93;
       $97 = ((($93)) + 24|0);
       HEAP32[$97>>2] = $$3;
       break;
      }
     }
    } while(0);
    $98 = ((($92)) + 4|0);
    $99 = HEAP32[$98>>2]|0;
    $100 = ($99|0)==(0|0);
    if ($100) {
     $$1 = $16;$$1382 = $17;$113 = $16;
    } else {
     $101 = HEAP32[(55400)>>2]|0;
     $102 = ($101>>>0)>($99>>>0);
     if ($102) {
      _abort();
      // unreachable;
     } else {
      $103 = ((($$3)) + 20|0);
      HEAP32[$103>>2] = $99;
      $104 = ((($99)) + 24|0);
      HEAP32[$104>>2] = $$3;
      $$1 = $16;$$1382 = $17;$113 = $16;
      break;
     }
    }
   }
  } else {
   $$1 = $2;$$1382 = $9;$113 = $2;
  }
 } while(0);
 $114 = ($113>>>0)<($10>>>0);
 if (!($114)) {
  _abort();
  // unreachable;
 }
 $115 = ((($10)) + 4|0);
 $116 = HEAP32[$115>>2]|0;
 $117 = $116 & 1;
 $118 = ($117|0)==(0);
 if ($118) {
  _abort();
  // unreachable;
 }
 $119 = $116 & 2;
 $120 = ($119|0)==(0);
 if ($120) {
  $121 = HEAP32[(55408)>>2]|0;
  $122 = ($121|0)==($10|0);
  if ($122) {
   $123 = HEAP32[(55396)>>2]|0;
   $124 = (($123) + ($$1382))|0;
   HEAP32[(55396)>>2] = $124;
   HEAP32[(55408)>>2] = $$1;
   $125 = $124 | 1;
   $126 = ((($$1)) + 4|0);
   HEAP32[$126>>2] = $125;
   $127 = HEAP32[(55404)>>2]|0;
   $128 = ($$1|0)==($127|0);
   if (!($128)) {
    return;
   }
   HEAP32[(55404)>>2] = 0;
   HEAP32[(55392)>>2] = 0;
   return;
  }
  $129 = HEAP32[(55404)>>2]|0;
  $130 = ($129|0)==($10|0);
  if ($130) {
   $131 = HEAP32[(55392)>>2]|0;
   $132 = (($131) + ($$1382))|0;
   HEAP32[(55392)>>2] = $132;
   HEAP32[(55404)>>2] = $113;
   $133 = $132 | 1;
   $134 = ((($$1)) + 4|0);
   HEAP32[$134>>2] = $133;
   $135 = (($113) + ($132)|0);
   HEAP32[$135>>2] = $132;
   return;
  }
  $136 = $116 & -8;
  $137 = (($136) + ($$1382))|0;
  $138 = $116 >>> 3;
  $139 = ($116>>>0)<(256);
  L108: do {
   if ($139) {
    $140 = ((($10)) + 8|0);
    $141 = HEAP32[$140>>2]|0;
    $142 = ((($10)) + 12|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = $138 << 1;
    $145 = (55424 + ($144<<2)|0);
    $146 = ($141|0)==($145|0);
    if (!($146)) {
     $147 = HEAP32[(55400)>>2]|0;
     $148 = ($147>>>0)>($141>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = ((($141)) + 12|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($10|0);
     if (!($151)) {
      _abort();
      // unreachable;
     }
    }
    $152 = ($143|0)==($141|0);
    if ($152) {
     $153 = 1 << $138;
     $154 = $153 ^ -1;
     $155 = HEAP32[13846]|0;
     $156 = $155 & $154;
     HEAP32[13846] = $156;
     break;
    }
    $157 = ($143|0)==($145|0);
    if ($157) {
     $$pre441 = ((($143)) + 8|0);
     $$pre$phi442Z2D = $$pre441;
    } else {
     $158 = HEAP32[(55400)>>2]|0;
     $159 = ($158>>>0)>($143>>>0);
     if ($159) {
      _abort();
      // unreachable;
     }
     $160 = ((($143)) + 8|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = ($161|0)==($10|0);
     if ($162) {
      $$pre$phi442Z2D = $160;
     } else {
      _abort();
      // unreachable;
     }
    }
    $163 = ((($141)) + 12|0);
    HEAP32[$163>>2] = $143;
    HEAP32[$$pre$phi442Z2D>>2] = $141;
   } else {
    $164 = ((($10)) + 24|0);
    $165 = HEAP32[$164>>2]|0;
    $166 = ((($10)) + 12|0);
    $167 = HEAP32[$166>>2]|0;
    $168 = ($167|0)==($10|0);
    do {
     if ($168) {
      $179 = ((($10)) + 16|0);
      $180 = ((($179)) + 4|0);
      $181 = HEAP32[$180>>2]|0;
      $182 = ($181|0)==(0|0);
      if ($182) {
       $183 = HEAP32[$179>>2]|0;
       $184 = ($183|0)==(0|0);
       if ($184) {
        $$3400 = 0;
        break;
       } else {
        $$1398 = $183;$$1402 = $179;
       }
      } else {
       $$1398 = $181;$$1402 = $180;
      }
      while(1) {
       $185 = ((($$1398)) + 20|0);
       $186 = HEAP32[$185>>2]|0;
       $187 = ($186|0)==(0|0);
       if (!($187)) {
        $$1398 = $186;$$1402 = $185;
        continue;
       }
       $188 = ((($$1398)) + 16|0);
       $189 = HEAP32[$188>>2]|0;
       $190 = ($189|0)==(0|0);
       if ($190) {
        break;
       } else {
        $$1398 = $189;$$1402 = $188;
       }
      }
      $191 = HEAP32[(55400)>>2]|0;
      $192 = ($191>>>0)>($$1402>>>0);
      if ($192) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$$1402>>2] = 0;
       $$3400 = $$1398;
       break;
      }
     } else {
      $169 = ((($10)) + 8|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = HEAP32[(55400)>>2]|0;
      $172 = ($171>>>0)>($170>>>0);
      if ($172) {
       _abort();
       // unreachable;
      }
      $173 = ((($170)) + 12|0);
      $174 = HEAP32[$173>>2]|0;
      $175 = ($174|0)==($10|0);
      if (!($175)) {
       _abort();
       // unreachable;
      }
      $176 = ((($167)) + 8|0);
      $177 = HEAP32[$176>>2]|0;
      $178 = ($177|0)==($10|0);
      if ($178) {
       HEAP32[$173>>2] = $167;
       HEAP32[$176>>2] = $170;
       $$3400 = $167;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $193 = ($165|0)==(0|0);
    if (!($193)) {
     $194 = ((($10)) + 28|0);
     $195 = HEAP32[$194>>2]|0;
     $196 = (55688 + ($195<<2)|0);
     $197 = HEAP32[$196>>2]|0;
     $198 = ($197|0)==($10|0);
     do {
      if ($198) {
       HEAP32[$196>>2] = $$3400;
       $cond422 = ($$3400|0)==(0|0);
       if ($cond422) {
        $199 = 1 << $195;
        $200 = $199 ^ -1;
        $201 = HEAP32[(55388)>>2]|0;
        $202 = $201 & $200;
        HEAP32[(55388)>>2] = $202;
        break L108;
       }
      } else {
       $203 = HEAP32[(55400)>>2]|0;
       $204 = ($203>>>0)>($165>>>0);
       if ($204) {
        _abort();
        // unreachable;
       } else {
        $205 = ((($165)) + 16|0);
        $206 = HEAP32[$205>>2]|0;
        $207 = ($206|0)!=($10|0);
        $$sink5 = $207&1;
        $208 = (((($165)) + 16|0) + ($$sink5<<2)|0);
        HEAP32[$208>>2] = $$3400;
        $209 = ($$3400|0)==(0|0);
        if ($209) {
         break L108;
        } else {
         break;
        }
       }
      }
     } while(0);
     $210 = HEAP32[(55400)>>2]|0;
     $211 = ($210>>>0)>($$3400>>>0);
     if ($211) {
      _abort();
      // unreachable;
     }
     $212 = ((($$3400)) + 24|0);
     HEAP32[$212>>2] = $165;
     $213 = ((($10)) + 16|0);
     $214 = HEAP32[$213>>2]|0;
     $215 = ($214|0)==(0|0);
     do {
      if (!($215)) {
       $216 = ($210>>>0)>($214>>>0);
       if ($216) {
        _abort();
        // unreachable;
       } else {
        $217 = ((($$3400)) + 16|0);
        HEAP32[$217>>2] = $214;
        $218 = ((($214)) + 24|0);
        HEAP32[$218>>2] = $$3400;
        break;
       }
      }
     } while(0);
     $219 = ((($213)) + 4|0);
     $220 = HEAP32[$219>>2]|0;
     $221 = ($220|0)==(0|0);
     if (!($221)) {
      $222 = HEAP32[(55400)>>2]|0;
      $223 = ($222>>>0)>($220>>>0);
      if ($223) {
       _abort();
       // unreachable;
      } else {
       $224 = ((($$3400)) + 20|0);
       HEAP32[$224>>2] = $220;
       $225 = ((($220)) + 24|0);
       HEAP32[$225>>2] = $$3400;
       break;
      }
     }
    }
   }
  } while(0);
  $226 = $137 | 1;
  $227 = ((($$1)) + 4|0);
  HEAP32[$227>>2] = $226;
  $228 = (($113) + ($137)|0);
  HEAP32[$228>>2] = $137;
  $229 = HEAP32[(55404)>>2]|0;
  $230 = ($$1|0)==($229|0);
  if ($230) {
   HEAP32[(55392)>>2] = $137;
   return;
  } else {
   $$2 = $137;
  }
 } else {
  $231 = $116 & -2;
  HEAP32[$115>>2] = $231;
  $232 = $$1382 | 1;
  $233 = ((($$1)) + 4|0);
  HEAP32[$233>>2] = $232;
  $234 = (($113) + ($$1382)|0);
  HEAP32[$234>>2] = $$1382;
  $$2 = $$1382;
 }
 $235 = $$2 >>> 3;
 $236 = ($$2>>>0)<(256);
 if ($236) {
  $237 = $235 << 1;
  $238 = (55424 + ($237<<2)|0);
  $239 = HEAP32[13846]|0;
  $240 = 1 << $235;
  $241 = $239 & $240;
  $242 = ($241|0)==(0);
  if ($242) {
   $243 = $239 | $240;
   HEAP32[13846] = $243;
   $$pre = ((($238)) + 8|0);
   $$0403 = $238;$$pre$phiZ2D = $$pre;
  } else {
   $244 = ((($238)) + 8|0);
   $245 = HEAP32[$244>>2]|0;
   $246 = HEAP32[(55400)>>2]|0;
   $247 = ($246>>>0)>($245>>>0);
   if ($247) {
    _abort();
    // unreachable;
   } else {
    $$0403 = $245;$$pre$phiZ2D = $244;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $248 = ((($$0403)) + 12|0);
  HEAP32[$248>>2] = $$1;
  $249 = ((($$1)) + 8|0);
  HEAP32[$249>>2] = $$0403;
  $250 = ((($$1)) + 12|0);
  HEAP32[$250>>2] = $238;
  return;
 }
 $251 = $$2 >>> 8;
 $252 = ($251|0)==(0);
 if ($252) {
  $$0396 = 0;
 } else {
  $253 = ($$2>>>0)>(16777215);
  if ($253) {
   $$0396 = 31;
  } else {
   $254 = (($251) + 1048320)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 8;
   $257 = $251 << $256;
   $258 = (($257) + 520192)|0;
   $259 = $258 >>> 16;
   $260 = $259 & 4;
   $261 = $260 | $256;
   $262 = $257 << $260;
   $263 = (($262) + 245760)|0;
   $264 = $263 >>> 16;
   $265 = $264 & 2;
   $266 = $261 | $265;
   $267 = (14 - ($266))|0;
   $268 = $262 << $265;
   $269 = $268 >>> 15;
   $270 = (($267) + ($269))|0;
   $271 = $270 << 1;
   $272 = (($270) + 7)|0;
   $273 = $$2 >>> $272;
   $274 = $273 & 1;
   $275 = $274 | $271;
   $$0396 = $275;
  }
 }
 $276 = (55688 + ($$0396<<2)|0);
 $277 = ((($$1)) + 28|0);
 HEAP32[$277>>2] = $$0396;
 $278 = ((($$1)) + 16|0);
 $279 = ((($$1)) + 20|0);
 HEAP32[$279>>2] = 0;
 HEAP32[$278>>2] = 0;
 $280 = HEAP32[(55388)>>2]|0;
 $281 = 1 << $$0396;
 $282 = $280 & $281;
 $283 = ($282|0)==(0);
 do {
  if ($283) {
   $284 = $280 | $281;
   HEAP32[(55388)>>2] = $284;
   HEAP32[$276>>2] = $$1;
   $285 = ((($$1)) + 24|0);
   HEAP32[$285>>2] = $276;
   $286 = ((($$1)) + 12|0);
   HEAP32[$286>>2] = $$1;
   $287 = ((($$1)) + 8|0);
   HEAP32[$287>>2] = $$1;
  } else {
   $288 = HEAP32[$276>>2]|0;
   $289 = ($$0396|0)==(31);
   $290 = $$0396 >>> 1;
   $291 = (25 - ($290))|0;
   $292 = $289 ? 0 : $291;
   $293 = $$2 << $292;
   $$0383 = $293;$$0384 = $288;
   while(1) {
    $294 = ((($$0384)) + 4|0);
    $295 = HEAP32[$294>>2]|0;
    $296 = $295 & -8;
    $297 = ($296|0)==($$2|0);
    if ($297) {
     label = 124;
     break;
    }
    $298 = $$0383 >>> 31;
    $299 = (((($$0384)) + 16|0) + ($298<<2)|0);
    $300 = $$0383 << 1;
    $301 = HEAP32[$299>>2]|0;
    $302 = ($301|0)==(0|0);
    if ($302) {
     label = 121;
     break;
    } else {
     $$0383 = $300;$$0384 = $301;
    }
   }
   if ((label|0) == 121) {
    $303 = HEAP32[(55400)>>2]|0;
    $304 = ($303>>>0)>($299>>>0);
    if ($304) {
     _abort();
     // unreachable;
    } else {
     HEAP32[$299>>2] = $$1;
     $305 = ((($$1)) + 24|0);
     HEAP32[$305>>2] = $$0384;
     $306 = ((($$1)) + 12|0);
     HEAP32[$306>>2] = $$1;
     $307 = ((($$1)) + 8|0);
     HEAP32[$307>>2] = $$1;
     break;
    }
   }
   else if ((label|0) == 124) {
    $308 = ((($$0384)) + 8|0);
    $309 = HEAP32[$308>>2]|0;
    $310 = HEAP32[(55400)>>2]|0;
    $311 = ($310>>>0)<=($$0384>>>0);
    $312 = ($310>>>0)<=($309>>>0);
    $313 = $312 & $311;
    if ($313) {
     $314 = ((($309)) + 12|0);
     HEAP32[$314>>2] = $$1;
     HEAP32[$308>>2] = $$1;
     $315 = ((($$1)) + 8|0);
     HEAP32[$315>>2] = $309;
     $316 = ((($$1)) + 12|0);
     HEAP32[$316>>2] = $$0384;
     $317 = ((($$1)) + 24|0);
     HEAP32[$317>>2] = 0;
     break;
    } else {
     _abort();
     // unreachable;
    }
   }
  }
 } while(0);
 $318 = HEAP32[(55416)>>2]|0;
 $319 = (($318) + -1)|0;
 HEAP32[(55416)>>2] = $319;
 $320 = ($319|0)==(0);
 if ($320) {
  $$0212$in$i = (55840);
 } else {
  return;
 }
 while(1) {
  $$0212$i = HEAP32[$$0212$in$i>>2]|0;
  $321 = ($$0212$i|0)==(0|0);
  $322 = ((($$0212$i)) + 8|0);
  if ($321) {
   break;
  } else {
   $$0212$in$i = $322;
  }
 }
 HEAP32[(55416)>>2] = -1;
 return;
}
function _realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = (_malloc($1)|0);
  $$1 = $3;
  return ($$1|0);
 }
 $4 = ($1>>>0)>(4294967231);
 if ($4) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 12;
  $$1 = 0;
  return ($$1|0);
 }
 $6 = ($1>>>0)<(11);
 $7 = (($1) + 11)|0;
 $8 = $7 & -8;
 $9 = $6 ? 16 : $8;
 $10 = ((($0)) + -8|0);
 $11 = (_try_realloc_chunk($10,$9)|0);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = ((($11)) + 8|0);
  $$1 = $13;
  return ($$1|0);
 }
 $14 = (_malloc($1)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$1 = 0;
  return ($$1|0);
 }
 $16 = ((($0)) + -4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 & -8;
 $19 = $17 & 3;
 $20 = ($19|0)==(0);
 $21 = $20 ? 8 : 4;
 $22 = (($18) - ($21))|0;
 $23 = ($22>>>0)<($1>>>0);
 $24 = $23 ? $22 : $1;
 (_memcpy(($14|0),($0|0),($24|0))|0);
 _free($0);
 $$1 = $14;
 return ($$1|0);
}
function _try_realloc_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1272 = 0, $$1275 = 0, $$2 = 0, $$3 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $cond = 0, $or$cond$not = 0, $or$cond6 = 0, $storemerge = 0, $storemerge4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & -8;
 $5 = (($0) + ($4)|0);
 $6 = HEAP32[(55400)>>2]|0;
 $7 = ($6>>>0)<=($0>>>0);
 $8 = $3 & 3;
 $9 = ($8|0)!=(1);
 $or$cond$not = $9 & $7;
 $10 = ($5>>>0)>($0>>>0);
 $or$cond6 = $or$cond$not & $10;
 if (!($or$cond6)) {
  _abort();
  // unreachable;
 }
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $12 & 1;
 $14 = ($13|0)==(0);
 if ($14) {
  _abort();
  // unreachable;
 }
 $15 = ($8|0)==(0);
 if ($15) {
  $16 = ($1>>>0)<(256);
  if ($16) {
   $$2 = 0;
   return ($$2|0);
  }
  $17 = (($1) + 4)|0;
  $18 = ($4>>>0)<($17>>>0);
  if (!($18)) {
   $19 = (($4) - ($1))|0;
   $20 = HEAP32[(55864)>>2]|0;
   $21 = $20 << 1;
   $22 = ($19>>>0)>($21>>>0);
   if (!($22)) {
    $$2 = $0;
    return ($$2|0);
   }
  }
  $$2 = 0;
  return ($$2|0);
 }
 $23 = ($4>>>0)<($1>>>0);
 if (!($23)) {
  $24 = (($4) - ($1))|0;
  $25 = ($24>>>0)>(15);
  if (!($25)) {
   $$2 = $0;
   return ($$2|0);
  }
  $26 = (($0) + ($1)|0);
  $27 = $3 & 1;
  $28 = $27 | $1;
  $29 = $28 | 2;
  HEAP32[$2>>2] = $29;
  $30 = ((($26)) + 4|0);
  $31 = $24 | 3;
  HEAP32[$30>>2] = $31;
  $32 = HEAP32[$11>>2]|0;
  $33 = $32 | 1;
  HEAP32[$11>>2] = $33;
  _dispose_chunk($26,$24);
  $$2 = $0;
  return ($$2|0);
 }
 $34 = HEAP32[(55408)>>2]|0;
 $35 = ($34|0)==($5|0);
 if ($35) {
  $36 = HEAP32[(55396)>>2]|0;
  $37 = (($36) + ($4))|0;
  $38 = ($37>>>0)>($1>>>0);
  $39 = (($37) - ($1))|0;
  $40 = (($0) + ($1)|0);
  if (!($38)) {
   $$2 = 0;
   return ($$2|0);
  }
  $41 = $39 | 1;
  $42 = ((($40)) + 4|0);
  $43 = $3 & 1;
  $44 = $43 | $1;
  $45 = $44 | 2;
  HEAP32[$2>>2] = $45;
  HEAP32[$42>>2] = $41;
  HEAP32[(55408)>>2] = $40;
  HEAP32[(55396)>>2] = $39;
  $$2 = $0;
  return ($$2|0);
 }
 $46 = HEAP32[(55404)>>2]|0;
 $47 = ($46|0)==($5|0);
 if ($47) {
  $48 = HEAP32[(55392)>>2]|0;
  $49 = (($48) + ($4))|0;
  $50 = ($49>>>0)<($1>>>0);
  if ($50) {
   $$2 = 0;
   return ($$2|0);
  }
  $51 = (($49) - ($1))|0;
  $52 = ($51>>>0)>(15);
  if ($52) {
   $53 = (($0) + ($1)|0);
   $54 = (($0) + ($49)|0);
   $55 = $3 & 1;
   $56 = $55 | $1;
   $57 = $56 | 2;
   HEAP32[$2>>2] = $57;
   $58 = ((($53)) + 4|0);
   $59 = $51 | 1;
   HEAP32[$58>>2] = $59;
   HEAP32[$54>>2] = $51;
   $60 = ((($54)) + 4|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 & -2;
   HEAP32[$60>>2] = $62;
   $storemerge = $53;$storemerge4 = $51;
  } else {
   $63 = $3 & 1;
   $64 = $63 | $49;
   $65 = $64 | 2;
   HEAP32[$2>>2] = $65;
   $66 = (($0) + ($49)|0);
   $67 = ((($66)) + 4|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = $68 | 1;
   HEAP32[$67>>2] = $69;
   $storemerge = 0;$storemerge4 = 0;
  }
  HEAP32[(55392)>>2] = $storemerge4;
  HEAP32[(55404)>>2] = $storemerge;
  $$2 = $0;
  return ($$2|0);
 }
 $70 = $12 & 2;
 $71 = ($70|0)==(0);
 if (!($71)) {
  $$2 = 0;
  return ($$2|0);
 }
 $72 = $12 & -8;
 $73 = (($72) + ($4))|0;
 $74 = ($73>>>0)<($1>>>0);
 if ($74) {
  $$2 = 0;
  return ($$2|0);
 }
 $75 = (($73) - ($1))|0;
 $76 = $12 >>> 3;
 $77 = ($12>>>0)<(256);
 L49: do {
  if ($77) {
   $78 = ((($5)) + 8|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = ((($5)) + 12|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = $76 << 1;
   $83 = (55424 + ($82<<2)|0);
   $84 = ($79|0)==($83|0);
   if (!($84)) {
    $85 = ($6>>>0)>($79>>>0);
    if ($85) {
     _abort();
     // unreachable;
    }
    $86 = ((($79)) + 12|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==($5|0);
    if (!($88)) {
     _abort();
     // unreachable;
    }
   }
   $89 = ($81|0)==($79|0);
   if ($89) {
    $90 = 1 << $76;
    $91 = $90 ^ -1;
    $92 = HEAP32[13846]|0;
    $93 = $92 & $91;
    HEAP32[13846] = $93;
    break;
   }
   $94 = ($81|0)==($83|0);
   if ($94) {
    $$pre = ((($81)) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $95 = ($6>>>0)>($81>>>0);
    if ($95) {
     _abort();
     // unreachable;
    }
    $96 = ((($81)) + 8|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==($5|0);
    if ($98) {
     $$pre$phiZ2D = $96;
    } else {
     _abort();
     // unreachable;
    }
   }
   $99 = ((($79)) + 12|0);
   HEAP32[$99>>2] = $81;
   HEAP32[$$pre$phiZ2D>>2] = $79;
  } else {
   $100 = ((($5)) + 24|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = ((($5)) + 12|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = ($103|0)==($5|0);
   do {
    if ($104) {
     $114 = ((($5)) + 16|0);
     $115 = ((($114)) + 4|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ($116|0)==(0|0);
     if ($117) {
      $118 = HEAP32[$114>>2]|0;
      $119 = ($118|0)==(0|0);
      if ($119) {
       $$3 = 0;
       break;
      } else {
       $$1272 = $118;$$1275 = $114;
      }
     } else {
      $$1272 = $116;$$1275 = $115;
     }
     while(1) {
      $120 = ((($$1272)) + 20|0);
      $121 = HEAP32[$120>>2]|0;
      $122 = ($121|0)==(0|0);
      if (!($122)) {
       $$1272 = $121;$$1275 = $120;
       continue;
      }
      $123 = ((($$1272)) + 16|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ($124|0)==(0|0);
      if ($125) {
       break;
      } else {
       $$1272 = $124;$$1275 = $123;
      }
     }
     $126 = ($6>>>0)>($$1275>>>0);
     if ($126) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1275>>2] = 0;
      $$3 = $$1272;
      break;
     }
    } else {
     $105 = ((($5)) + 8|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = ($6>>>0)>($106>>>0);
     if ($107) {
      _abort();
      // unreachable;
     }
     $108 = ((($106)) + 12|0);
     $109 = HEAP32[$108>>2]|0;
     $110 = ($109|0)==($5|0);
     if (!($110)) {
      _abort();
      // unreachable;
     }
     $111 = ((($103)) + 8|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = ($112|0)==($5|0);
     if ($113) {
      HEAP32[$108>>2] = $103;
      HEAP32[$111>>2] = $106;
      $$3 = $103;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $127 = ($101|0)==(0|0);
   if (!($127)) {
    $128 = ((($5)) + 28|0);
    $129 = HEAP32[$128>>2]|0;
    $130 = (55688 + ($129<<2)|0);
    $131 = HEAP32[$130>>2]|0;
    $132 = ($131|0)==($5|0);
    do {
     if ($132) {
      HEAP32[$130>>2] = $$3;
      $cond = ($$3|0)==(0|0);
      if ($cond) {
       $133 = 1 << $129;
       $134 = $133 ^ -1;
       $135 = HEAP32[(55388)>>2]|0;
       $136 = $135 & $134;
       HEAP32[(55388)>>2] = $136;
       break L49;
      }
     } else {
      $137 = HEAP32[(55400)>>2]|0;
      $138 = ($137>>>0)>($101>>>0);
      if ($138) {
       _abort();
       // unreachable;
      } else {
       $139 = ((($101)) + 16|0);
       $140 = HEAP32[$139>>2]|0;
       $141 = ($140|0)!=($5|0);
       $$sink1 = $141&1;
       $142 = (((($101)) + 16|0) + ($$sink1<<2)|0);
       HEAP32[$142>>2] = $$3;
       $143 = ($$3|0)==(0|0);
       if ($143) {
        break L49;
       } else {
        break;
       }
      }
     }
    } while(0);
    $144 = HEAP32[(55400)>>2]|0;
    $145 = ($144>>>0)>($$3>>>0);
    if ($145) {
     _abort();
     // unreachable;
    }
    $146 = ((($$3)) + 24|0);
    HEAP32[$146>>2] = $101;
    $147 = ((($5)) + 16|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = ($148|0)==(0|0);
    do {
     if (!($149)) {
      $150 = ($144>>>0)>($148>>>0);
      if ($150) {
       _abort();
       // unreachable;
      } else {
       $151 = ((($$3)) + 16|0);
       HEAP32[$151>>2] = $148;
       $152 = ((($148)) + 24|0);
       HEAP32[$152>>2] = $$3;
       break;
      }
     }
    } while(0);
    $153 = ((($147)) + 4|0);
    $154 = HEAP32[$153>>2]|0;
    $155 = ($154|0)==(0|0);
    if (!($155)) {
     $156 = HEAP32[(55400)>>2]|0;
     $157 = ($156>>>0)>($154>>>0);
     if ($157) {
      _abort();
      // unreachable;
     } else {
      $158 = ((($$3)) + 20|0);
      HEAP32[$158>>2] = $154;
      $159 = ((($154)) + 24|0);
      HEAP32[$159>>2] = $$3;
      break;
     }
    }
   }
  }
 } while(0);
 $160 = ($75>>>0)<(16);
 if ($160) {
  $161 = $3 & 1;
  $162 = $73 | $161;
  $163 = $162 | 2;
  HEAP32[$2>>2] = $163;
  $164 = (($0) + ($73)|0);
  $165 = ((($164)) + 4|0);
  $166 = HEAP32[$165>>2]|0;
  $167 = $166 | 1;
  HEAP32[$165>>2] = $167;
  $$2 = $0;
  return ($$2|0);
 } else {
  $168 = (($0) + ($1)|0);
  $169 = $3 & 1;
  $170 = $169 | $1;
  $171 = $170 | 2;
  HEAP32[$2>>2] = $171;
  $172 = ((($168)) + 4|0);
  $173 = $75 | 3;
  HEAP32[$172>>2] = $173;
  $174 = (($0) + ($73)|0);
  $175 = ((($174)) + 4|0);
  $176 = HEAP32[$175>>2]|0;
  $177 = $176 | 1;
  HEAP32[$175>>2] = $177;
  _dispose_chunk($168,$75);
  $$2 = $0;
  return ($$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0419 = 0, $$0420 = 0, $$0431 = 0, $$0438 = 0, $$1 = 0, $$1418 = 0, $$1426 = 0, $$1429 = 0, $$1433 = 0, $$1437 = 0, $$2 = 0, $$3 = 0, $$3435 = 0, $$pre = 0, $$pre$phi23Z2D = 0, $$pre$phi25Z2D = 0, $$pre$phiZ2D = 0, $$pre22 = 0, $$pre24 = 0, $$sink2 = 0;
 var $$sink4 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + ($1)|0);
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 L1: do {
  if ($6) {
   $7 = HEAP32[$0>>2]|0;
   $8 = $4 & 3;
   $9 = ($8|0)==(0);
   if ($9) {
    return;
   }
   $10 = (0 - ($7))|0;
   $11 = (($0) + ($10)|0);
   $12 = (($7) + ($1))|0;
   $13 = HEAP32[(55400)>>2]|0;
   $14 = ($11>>>0)<($13>>>0);
   if ($14) {
    _abort();
    // unreachable;
   }
   $15 = HEAP32[(55404)>>2]|0;
   $16 = ($15|0)==($11|0);
   if ($16) {
    $101 = ((($2)) + 4|0);
    $102 = HEAP32[$101>>2]|0;
    $103 = $102 & 3;
    $104 = ($103|0)==(3);
    if (!($104)) {
     $$1 = $11;$$1418 = $12;
     break;
    }
    HEAP32[(55392)>>2] = $12;
    $105 = $102 & -2;
    HEAP32[$101>>2] = $105;
    $106 = $12 | 1;
    $107 = ((($11)) + 4|0);
    HEAP32[$107>>2] = $106;
    HEAP32[$2>>2] = $12;
    return;
   }
   $17 = $7 >>> 3;
   $18 = ($7>>>0)<(256);
   if ($18) {
    $19 = ((($11)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ((($11)) + 12|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = $17 << 1;
    $24 = (55424 + ($23<<2)|0);
    $25 = ($20|0)==($24|0);
    if (!($25)) {
     $26 = ($13>>>0)>($20>>>0);
     if ($26) {
      _abort();
      // unreachable;
     }
     $27 = ((($20)) + 12|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = ($28|0)==($11|0);
     if (!($29)) {
      _abort();
      // unreachable;
     }
    }
    $30 = ($22|0)==($20|0);
    if ($30) {
     $31 = 1 << $17;
     $32 = $31 ^ -1;
     $33 = HEAP32[13846]|0;
     $34 = $33 & $32;
     HEAP32[13846] = $34;
     $$1 = $11;$$1418 = $12;
     break;
    }
    $35 = ($22|0)==($24|0);
    if ($35) {
     $$pre24 = ((($22)) + 8|0);
     $$pre$phi25Z2D = $$pre24;
    } else {
     $36 = ($13>>>0)>($22>>>0);
     if ($36) {
      _abort();
      // unreachable;
     }
     $37 = ((($22)) + 8|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ($38|0)==($11|0);
     if ($39) {
      $$pre$phi25Z2D = $37;
     } else {
      _abort();
      // unreachable;
     }
    }
    $40 = ((($20)) + 12|0);
    HEAP32[$40>>2] = $22;
    HEAP32[$$pre$phi25Z2D>>2] = $20;
    $$1 = $11;$$1418 = $12;
    break;
   }
   $41 = ((($11)) + 24|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ((($11)) + 12|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ($44|0)==($11|0);
   do {
    if ($45) {
     $55 = ((($11)) + 16|0);
     $56 = ((($55)) + 4|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($57|0)==(0|0);
     if ($58) {
      $59 = HEAP32[$55>>2]|0;
      $60 = ($59|0)==(0|0);
      if ($60) {
       $$3 = 0;
       break;
      } else {
       $$1426 = $59;$$1429 = $55;
      }
     } else {
      $$1426 = $57;$$1429 = $56;
     }
     while(1) {
      $61 = ((($$1426)) + 20|0);
      $62 = HEAP32[$61>>2]|0;
      $63 = ($62|0)==(0|0);
      if (!($63)) {
       $$1426 = $62;$$1429 = $61;
       continue;
      }
      $64 = ((($$1426)) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($65|0)==(0|0);
      if ($66) {
       break;
      } else {
       $$1426 = $65;$$1429 = $64;
      }
     }
     $67 = ($13>>>0)>($$1429>>>0);
     if ($67) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1429>>2] = 0;
      $$3 = $$1426;
      break;
     }
    } else {
     $46 = ((($11)) + 8|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = ($13>>>0)>($47>>>0);
     if ($48) {
      _abort();
      // unreachable;
     }
     $49 = ((($47)) + 12|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = ($50|0)==($11|0);
     if (!($51)) {
      _abort();
      // unreachable;
     }
     $52 = ((($44)) + 8|0);
     $53 = HEAP32[$52>>2]|0;
     $54 = ($53|0)==($11|0);
     if ($54) {
      HEAP32[$49>>2] = $44;
      HEAP32[$52>>2] = $47;
      $$3 = $44;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $68 = ($42|0)==(0|0);
   if ($68) {
    $$1 = $11;$$1418 = $12;
   } else {
    $69 = ((($11)) + 28|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = (55688 + ($70<<2)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ($72|0)==($11|0);
    do {
     if ($73) {
      HEAP32[$71>>2] = $$3;
      $cond = ($$3|0)==(0|0);
      if ($cond) {
       $74 = 1 << $70;
       $75 = $74 ^ -1;
       $76 = HEAP32[(55388)>>2]|0;
       $77 = $76 & $75;
       HEAP32[(55388)>>2] = $77;
       $$1 = $11;$$1418 = $12;
       break L1;
      }
     } else {
      $78 = HEAP32[(55400)>>2]|0;
      $79 = ($78>>>0)>($42>>>0);
      if ($79) {
       _abort();
       // unreachable;
      } else {
       $80 = ((($42)) + 16|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ($81|0)!=($11|0);
       $$sink2 = $82&1;
       $83 = (((($42)) + 16|0) + ($$sink2<<2)|0);
       HEAP32[$83>>2] = $$3;
       $84 = ($$3|0)==(0|0);
       if ($84) {
        $$1 = $11;$$1418 = $12;
        break L1;
       } else {
        break;
       }
      }
     }
    } while(0);
    $85 = HEAP32[(55400)>>2]|0;
    $86 = ($85>>>0)>($$3>>>0);
    if ($86) {
     _abort();
     // unreachable;
    }
    $87 = ((($$3)) + 24|0);
    HEAP32[$87>>2] = $42;
    $88 = ((($11)) + 16|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = ($89|0)==(0|0);
    do {
     if (!($90)) {
      $91 = ($85>>>0)>($89>>>0);
      if ($91) {
       _abort();
       // unreachable;
      } else {
       $92 = ((($$3)) + 16|0);
       HEAP32[$92>>2] = $89;
       $93 = ((($89)) + 24|0);
       HEAP32[$93>>2] = $$3;
       break;
      }
     }
    } while(0);
    $94 = ((($88)) + 4|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = ($95|0)==(0|0);
    if ($96) {
     $$1 = $11;$$1418 = $12;
    } else {
     $97 = HEAP32[(55400)>>2]|0;
     $98 = ($97>>>0)>($95>>>0);
     if ($98) {
      _abort();
      // unreachable;
     } else {
      $99 = ((($$3)) + 20|0);
      HEAP32[$99>>2] = $95;
      $100 = ((($95)) + 24|0);
      HEAP32[$100>>2] = $$3;
      $$1 = $11;$$1418 = $12;
      break;
     }
    }
   }
  } else {
   $$1 = $0;$$1418 = $1;
  }
 } while(0);
 $108 = HEAP32[(55400)>>2]|0;
 $109 = ($2>>>0)<($108>>>0);
 if ($109) {
  _abort();
  // unreachable;
 }
 $110 = ((($2)) + 4|0);
 $111 = HEAP32[$110>>2]|0;
 $112 = $111 & 2;
 $113 = ($112|0)==(0);
 if ($113) {
  $114 = HEAP32[(55408)>>2]|0;
  $115 = ($114|0)==($2|0);
  if ($115) {
   $116 = HEAP32[(55396)>>2]|0;
   $117 = (($116) + ($$1418))|0;
   HEAP32[(55396)>>2] = $117;
   HEAP32[(55408)>>2] = $$1;
   $118 = $117 | 1;
   $119 = ((($$1)) + 4|0);
   HEAP32[$119>>2] = $118;
   $120 = HEAP32[(55404)>>2]|0;
   $121 = ($$1|0)==($120|0);
   if (!($121)) {
    return;
   }
   HEAP32[(55404)>>2] = 0;
   HEAP32[(55392)>>2] = 0;
   return;
  }
  $122 = HEAP32[(55404)>>2]|0;
  $123 = ($122|0)==($2|0);
  if ($123) {
   $124 = HEAP32[(55392)>>2]|0;
   $125 = (($124) + ($$1418))|0;
   HEAP32[(55392)>>2] = $125;
   HEAP32[(55404)>>2] = $$1;
   $126 = $125 | 1;
   $127 = ((($$1)) + 4|0);
   HEAP32[$127>>2] = $126;
   $128 = (($$1) + ($125)|0);
   HEAP32[$128>>2] = $125;
   return;
  }
  $129 = $111 & -8;
  $130 = (($129) + ($$1418))|0;
  $131 = $111 >>> 3;
  $132 = ($111>>>0)<(256);
  L96: do {
   if ($132) {
    $133 = ((($2)) + 8|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = ((($2)) + 12|0);
    $136 = HEAP32[$135>>2]|0;
    $137 = $131 << 1;
    $138 = (55424 + ($137<<2)|0);
    $139 = ($134|0)==($138|0);
    if (!($139)) {
     $140 = ($108>>>0)>($134>>>0);
     if ($140) {
      _abort();
      // unreachable;
     }
     $141 = ((($134)) + 12|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ($142|0)==($2|0);
     if (!($143)) {
      _abort();
      // unreachable;
     }
    }
    $144 = ($136|0)==($134|0);
    if ($144) {
     $145 = 1 << $131;
     $146 = $145 ^ -1;
     $147 = HEAP32[13846]|0;
     $148 = $147 & $146;
     HEAP32[13846] = $148;
     break;
    }
    $149 = ($136|0)==($138|0);
    if ($149) {
     $$pre22 = ((($136)) + 8|0);
     $$pre$phi23Z2D = $$pre22;
    } else {
     $150 = ($108>>>0)>($136>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = ((($136)) + 8|0);
     $152 = HEAP32[$151>>2]|0;
     $153 = ($152|0)==($2|0);
     if ($153) {
      $$pre$phi23Z2D = $151;
     } else {
      _abort();
      // unreachable;
     }
    }
    $154 = ((($134)) + 12|0);
    HEAP32[$154>>2] = $136;
    HEAP32[$$pre$phi23Z2D>>2] = $134;
   } else {
    $155 = ((($2)) + 24|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ((($2)) + 12|0);
    $158 = HEAP32[$157>>2]|0;
    $159 = ($158|0)==($2|0);
    do {
     if ($159) {
      $169 = ((($2)) + 16|0);
      $170 = ((($169)) + 4|0);
      $171 = HEAP32[$170>>2]|0;
      $172 = ($171|0)==(0|0);
      if ($172) {
       $173 = HEAP32[$169>>2]|0;
       $174 = ($173|0)==(0|0);
       if ($174) {
        $$3435 = 0;
        break;
       } else {
        $$1433 = $173;$$1437 = $169;
       }
      } else {
       $$1433 = $171;$$1437 = $170;
      }
      while(1) {
       $175 = ((($$1433)) + 20|0);
       $176 = HEAP32[$175>>2]|0;
       $177 = ($176|0)==(0|0);
       if (!($177)) {
        $$1433 = $176;$$1437 = $175;
        continue;
       }
       $178 = ((($$1433)) + 16|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        break;
       } else {
        $$1433 = $179;$$1437 = $178;
       }
      }
      $181 = ($108>>>0)>($$1437>>>0);
      if ($181) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$$1437>>2] = 0;
       $$3435 = $$1433;
       break;
      }
     } else {
      $160 = ((($2)) + 8|0);
      $161 = HEAP32[$160>>2]|0;
      $162 = ($108>>>0)>($161>>>0);
      if ($162) {
       _abort();
       // unreachable;
      }
      $163 = ((($161)) + 12|0);
      $164 = HEAP32[$163>>2]|0;
      $165 = ($164|0)==($2|0);
      if (!($165)) {
       _abort();
       // unreachable;
      }
      $166 = ((($158)) + 8|0);
      $167 = HEAP32[$166>>2]|0;
      $168 = ($167|0)==($2|0);
      if ($168) {
       HEAP32[$163>>2] = $158;
       HEAP32[$166>>2] = $161;
       $$3435 = $158;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $182 = ($156|0)==(0|0);
    if (!($182)) {
     $183 = ((($2)) + 28|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = (55688 + ($184<<2)|0);
     $186 = HEAP32[$185>>2]|0;
     $187 = ($186|0)==($2|0);
     do {
      if ($187) {
       HEAP32[$185>>2] = $$3435;
       $cond17 = ($$3435|0)==(0|0);
       if ($cond17) {
        $188 = 1 << $184;
        $189 = $188 ^ -1;
        $190 = HEAP32[(55388)>>2]|0;
        $191 = $190 & $189;
        HEAP32[(55388)>>2] = $191;
        break L96;
       }
      } else {
       $192 = HEAP32[(55400)>>2]|0;
       $193 = ($192>>>0)>($156>>>0);
       if ($193) {
        _abort();
        // unreachable;
       } else {
        $194 = ((($156)) + 16|0);
        $195 = HEAP32[$194>>2]|0;
        $196 = ($195|0)!=($2|0);
        $$sink4 = $196&1;
        $197 = (((($156)) + 16|0) + ($$sink4<<2)|0);
        HEAP32[$197>>2] = $$3435;
        $198 = ($$3435|0)==(0|0);
        if ($198) {
         break L96;
        } else {
         break;
        }
       }
      }
     } while(0);
     $199 = HEAP32[(55400)>>2]|0;
     $200 = ($199>>>0)>($$3435>>>0);
     if ($200) {
      _abort();
      // unreachable;
     }
     $201 = ((($$3435)) + 24|0);
     HEAP32[$201>>2] = $156;
     $202 = ((($2)) + 16|0);
     $203 = HEAP32[$202>>2]|0;
     $204 = ($203|0)==(0|0);
     do {
      if (!($204)) {
       $205 = ($199>>>0)>($203>>>0);
       if ($205) {
        _abort();
        // unreachable;
       } else {
        $206 = ((($$3435)) + 16|0);
        HEAP32[$206>>2] = $203;
        $207 = ((($203)) + 24|0);
        HEAP32[$207>>2] = $$3435;
        break;
       }
      }
     } while(0);
     $208 = ((($202)) + 4|0);
     $209 = HEAP32[$208>>2]|0;
     $210 = ($209|0)==(0|0);
     if (!($210)) {
      $211 = HEAP32[(55400)>>2]|0;
      $212 = ($211>>>0)>($209>>>0);
      if ($212) {
       _abort();
       // unreachable;
      } else {
       $213 = ((($$3435)) + 20|0);
       HEAP32[$213>>2] = $209;
       $214 = ((($209)) + 24|0);
       HEAP32[$214>>2] = $$3435;
       break;
      }
     }
    }
   }
  } while(0);
  $215 = $130 | 1;
  $216 = ((($$1)) + 4|0);
  HEAP32[$216>>2] = $215;
  $217 = (($$1) + ($130)|0);
  HEAP32[$217>>2] = $130;
  $218 = HEAP32[(55404)>>2]|0;
  $219 = ($$1|0)==($218|0);
  if ($219) {
   HEAP32[(55392)>>2] = $130;
   return;
  } else {
   $$2 = $130;
  }
 } else {
  $220 = $111 & -2;
  HEAP32[$110>>2] = $220;
  $221 = $$1418 | 1;
  $222 = ((($$1)) + 4|0);
  HEAP32[$222>>2] = $221;
  $223 = (($$1) + ($$1418)|0);
  HEAP32[$223>>2] = $$1418;
  $$2 = $$1418;
 }
 $224 = $$2 >>> 3;
 $225 = ($$2>>>0)<(256);
 if ($225) {
  $226 = $224 << 1;
  $227 = (55424 + ($226<<2)|0);
  $228 = HEAP32[13846]|0;
  $229 = 1 << $224;
  $230 = $228 & $229;
  $231 = ($230|0)==(0);
  if ($231) {
   $232 = $228 | $229;
   HEAP32[13846] = $232;
   $$pre = ((($227)) + 8|0);
   $$0438 = $227;$$pre$phiZ2D = $$pre;
  } else {
   $233 = ((($227)) + 8|0);
   $234 = HEAP32[$233>>2]|0;
   $235 = HEAP32[(55400)>>2]|0;
   $236 = ($235>>>0)>($234>>>0);
   if ($236) {
    _abort();
    // unreachable;
   } else {
    $$0438 = $234;$$pre$phiZ2D = $233;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $237 = ((($$0438)) + 12|0);
  HEAP32[$237>>2] = $$1;
  $238 = ((($$1)) + 8|0);
  HEAP32[$238>>2] = $$0438;
  $239 = ((($$1)) + 12|0);
  HEAP32[$239>>2] = $227;
  return;
 }
 $240 = $$2 >>> 8;
 $241 = ($240|0)==(0);
 if ($241) {
  $$0431 = 0;
 } else {
  $242 = ($$2>>>0)>(16777215);
  if ($242) {
   $$0431 = 31;
  } else {
   $243 = (($240) + 1048320)|0;
   $244 = $243 >>> 16;
   $245 = $244 & 8;
   $246 = $240 << $245;
   $247 = (($246) + 520192)|0;
   $248 = $247 >>> 16;
   $249 = $248 & 4;
   $250 = $249 | $245;
   $251 = $246 << $249;
   $252 = (($251) + 245760)|0;
   $253 = $252 >>> 16;
   $254 = $253 & 2;
   $255 = $250 | $254;
   $256 = (14 - ($255))|0;
   $257 = $251 << $254;
   $258 = $257 >>> 15;
   $259 = (($256) + ($258))|0;
   $260 = $259 << 1;
   $261 = (($259) + 7)|0;
   $262 = $$2 >>> $261;
   $263 = $262 & 1;
   $264 = $263 | $260;
   $$0431 = $264;
  }
 }
 $265 = (55688 + ($$0431<<2)|0);
 $266 = ((($$1)) + 28|0);
 HEAP32[$266>>2] = $$0431;
 $267 = ((($$1)) + 16|0);
 $268 = ((($$1)) + 20|0);
 HEAP32[$268>>2] = 0;
 HEAP32[$267>>2] = 0;
 $269 = HEAP32[(55388)>>2]|0;
 $270 = 1 << $$0431;
 $271 = $269 & $270;
 $272 = ($271|0)==(0);
 if ($272) {
  $273 = $269 | $270;
  HEAP32[(55388)>>2] = $273;
  HEAP32[$265>>2] = $$1;
  $274 = ((($$1)) + 24|0);
  HEAP32[$274>>2] = $265;
  $275 = ((($$1)) + 12|0);
  HEAP32[$275>>2] = $$1;
  $276 = ((($$1)) + 8|0);
  HEAP32[$276>>2] = $$1;
  return;
 }
 $277 = HEAP32[$265>>2]|0;
 $278 = ($$0431|0)==(31);
 $279 = $$0431 >>> 1;
 $280 = (25 - ($279))|0;
 $281 = $278 ? 0 : $280;
 $282 = $$2 << $281;
 $$0419 = $282;$$0420 = $277;
 while(1) {
  $283 = ((($$0420)) + 4|0);
  $284 = HEAP32[$283>>2]|0;
  $285 = $284 & -8;
  $286 = ($285|0)==($$2|0);
  if ($286) {
   label = 121;
   break;
  }
  $287 = $$0419 >>> 31;
  $288 = (((($$0420)) + 16|0) + ($287<<2)|0);
  $289 = $$0419 << 1;
  $290 = HEAP32[$288>>2]|0;
  $291 = ($290|0)==(0|0);
  if ($291) {
   label = 118;
   break;
  } else {
   $$0419 = $289;$$0420 = $290;
  }
 }
 if ((label|0) == 118) {
  $292 = HEAP32[(55400)>>2]|0;
  $293 = ($292>>>0)>($288>>>0);
  if ($293) {
   _abort();
   // unreachable;
  }
  HEAP32[$288>>2] = $$1;
  $294 = ((($$1)) + 24|0);
  HEAP32[$294>>2] = $$0420;
  $295 = ((($$1)) + 12|0);
  HEAP32[$295>>2] = $$1;
  $296 = ((($$1)) + 8|0);
  HEAP32[$296>>2] = $$1;
  return;
 }
 else if ((label|0) == 121) {
  $297 = ((($$0420)) + 8|0);
  $298 = HEAP32[$297>>2]|0;
  $299 = HEAP32[(55400)>>2]|0;
  $300 = ($299>>>0)<=($$0420>>>0);
  $301 = ($299>>>0)<=($298>>>0);
  $302 = $301 & $300;
  if (!($302)) {
   _abort();
   // unreachable;
  }
  $303 = ((($298)) + 12|0);
  HEAP32[$303>>2] = $$1;
  HEAP32[$297>>2] = $$1;
  $304 = ((($$1)) + 8|0);
  HEAP32[$304>>2] = $298;
  $305 = ((($$1)) + 12|0);
  HEAP32[$305>>2] = $$0420;
  $306 = ((($$1)) + 24|0);
  HEAP32[$306>>2] = 0;
  return;
 }
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (_dummy_245($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 $4 = (___syscall6(6,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function ___stdio_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$cast = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 HEAP32[$3>>2] = $1;
 $4 = ((($3)) + 4|0);
 $5 = ((($0)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)!=(0);
 $8 = $7&1;
 $9 = (($2) - ($8))|0;
 HEAP32[$4>>2] = $9;
 $10 = ((($3)) + 8|0);
 $11 = ((($0)) + 44|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$10>>2] = $12;
 $13 = ((($3)) + 12|0);
 HEAP32[$13>>2] = $6;
 $14 = ((($0)) + 60|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $3;
 HEAP32[$vararg_buffer>>2] = $15;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $16;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $17 = (___syscall145(145,($vararg_buffer|0))|0);
 $18 = (___syscall_ret($17)|0);
 $19 = ($18|0)<(1);
 if ($19) {
  $20 = $18 & 48;
  $21 = $20 ^ 16;
  $22 = HEAP32[$0>>2]|0;
  $23 = $22 | $21;
  HEAP32[$0>>2] = $23;
  $$0 = $18;
 } else {
  $24 = HEAP32[$4>>2]|0;
  $25 = ($18>>>0)>($24>>>0);
  if ($25) {
   $26 = (($18) - ($24))|0;
   $27 = HEAP32[$11>>2]|0;
   $28 = ((($0)) + 4|0);
   HEAP32[$28>>2] = $27;
   $$cast = $27;
   $29 = (($$cast) + ($26)|0);
   $30 = ((($0)) + 8|0);
   HEAP32[$30>>2] = $29;
   $31 = HEAP32[$5>>2]|0;
   $32 = ($31|0)==(0);
   if ($32) {
    $$0 = $2;
   } else {
    $33 = ((($$cast)) + 1|0);
    HEAP32[$28>>2] = $33;
    $34 = HEAP8[$$cast>>0]|0;
    $35 = (($2) + -1)|0;
    $36 = (($1) + ($35)|0);
    HEAP8[$36>>0] = $34;
    $$0 = $2;
   }
  } else {
   $$0 = $18;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___stdio_seek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = ((($0)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 HEAP32[$vararg_buffer>>2] = $5;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $1;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $6;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $2;
 $7 = (___syscall140(140,($vararg_buffer|0))|0);
 $8 = (___syscall_ret($7)|0);
 $9 = ($8|0)<(0);
 if ($9) {
  HEAP32[$3>>2] = -1;
  $10 = -1;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $10 = $$pre;
 }
 STACKTOP = sp;return ($10|0);
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = $2;
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (55968|0);
}
function _dummy_245($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 17;
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $3;
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $11 = (___syscall54(54,($vararg_buffer|0))|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($0)) + 75|0);
   HEAP8[$13>>0] = -1;
  }
 }
 $14 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($14|0);
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $3 = sp + 32|0;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) - ($5))|0;
 HEAP32[$6>>2] = $9;
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($3)) + 12|0);
 HEAP32[$11>>2] = $2;
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 HEAP32[$vararg_buffer>>2] = $14;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $15;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $16 = (___syscall146(146,($vararg_buffer|0))|0);
 $17 = (___syscall_ret($16)|0);
 $18 = ($12|0)==($17|0);
 L1: do {
  if ($18) {
   label = 3;
  } else {
   $$04756 = 2;$$04855 = $12;$$04954 = $3;$26 = $17;
   while(1) {
    $27 = ($26|0)<(0);
    if ($27) {
     break;
    }
    $35 = (($$04855) - ($26))|0;
    $36 = ((($$04954)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($26>>>0)>($37>>>0);
    $39 = ((($$04954)) + 8|0);
    $$150 = $38 ? $39 : $$04954;
    $40 = $38 << 31 >> 31;
    $$1 = (($$04756) + ($40))|0;
    $41 = $38 ? $37 : 0;
    $$0 = (($26) - ($41))|0;
    $42 = HEAP32[$$150>>2]|0;
    $43 = (($42) + ($$0)|0);
    HEAP32[$$150>>2] = $43;
    $44 = ((($$150)) + 4|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (($45) - ($$0))|0;
    HEAP32[$44>>2] = $46;
    $47 = HEAP32[$13>>2]|0;
    $48 = $$150;
    HEAP32[$vararg_buffer3>>2] = $47;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $48;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $$1;
    $49 = (___syscall146(146,($vararg_buffer3|0))|0);
    $50 = (___syscall_ret($49)|0);
    $51 = ($35|0)==($50|0);
    if ($51) {
     label = 3;
     break L1;
    } else {
     $$04756 = $$1;$$04855 = $35;$$04954 = $$150;$26 = $50;
    }
   }
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = 0;
   HEAP32[$4>>2] = 0;
   HEAP32[$7>>2] = 0;
   $29 = HEAP32[$0>>2]|0;
   $30 = $29 | 32;
   HEAP32[$0>>2] = $30;
   $31 = ($$04756|0)==(2);
   if ($31) {
    $$051 = 0;
   } else {
    $32 = ((($$04954)) + 4|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (($2) - ($33))|0;
    $$051 = $34;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 16|0);
  HEAP32[$24>>2] = $23;
  $25 = $20;
  HEAP32[$4>>2] = $25;
  HEAP32[$7>>2] = $25;
  $$051 = $2;
 }
 STACKTOP = sp;return ($$051|0);
}
function _umask($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer>>2] = $0;
 $1 = (___syscall60(60,($vararg_buffer|0))|0);
 $2 = (___syscall_ret($1)|0);
 STACKTOP = sp;return ($2|0);
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$015$lcssa = 0, $$01519 = 0, $$1$lcssa = 0, $$pn = 0, $$pre = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 4;
  } else {
   $$01519 = $0;$23 = $1;
   while(1) {
    $4 = HEAP8[$$01519>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$sink = $23;
     break L1;
    }
    $6 = ((($$01519)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 4;
     break;
    } else {
     $$01519 = $6;$23 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = HEAP32[$$0>>2]|0;
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn = $$0;
   while(1) {
    $19 = ((($$pn)) + 1|0);
    $$pre = HEAP8[$19>>0]|0;
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$sink = $21;
 }
 $22 = (($$sink) - ($1))|0;
 return ($22|0);
}
function _memcmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $14 = 0;
  } else {
   $$01318 = $0;$$01417 = $2;$$019 = $1;
   while(1) {
    $4 = HEAP8[$$01318>>0]|0;
    $5 = HEAP8[$$019>>0]|0;
    $6 = ($4<<24>>24)==($5<<24>>24);
    if (!($6)) {
     break;
    }
    $7 = (($$01417) + -1)|0;
    $8 = ((($$01318)) + 1|0);
    $9 = ((($$019)) + 1|0);
    $10 = ($7|0)==(0);
    if ($10) {
     $14 = 0;
     break L1;
    } else {
     $$01318 = $8;$$01417 = $7;$$019 = $9;
    }
   }
   $11 = $4&255;
   $12 = $5&255;
   $13 = (($11) - ($12))|0;
   $14 = $13;
  }
 } while(0);
 return ($14|0);
}
function _towlower($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___towcase($0,1)|0);
 return ($1|0);
}
function ___towcase($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$06284 = 0, $$16383 = 0, $$2 = 0, $$neg75 = 0, $$neg77 = 0, $$neg78 = 0, $$not = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond65 = 0, $or$cond67 = 0, $or$cond69 = 0, $or$cond71 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 << 1;
 $3 = (($2) + -1)|0;
 $4 = (($1) + -1)|0;
 $5 = (_iswalpha($0)|0);
 $6 = ($5|0)==(0);
 $7 = (($0) + -1536)|0;
 $8 = ($7>>>0)<(2560);
 $or$cond65 = $8 | $6;
 $9 = (($0) + -11776)|0;
 $10 = ($9>>>0)<(30784);
 $or$cond67 = $10 | $or$cond65;
 $11 = (($0) + -43008)|0;
 $12 = ($11>>>0)<(22272);
 $or$cond69 = $12 | $or$cond67;
 L1: do {
  if ($or$cond69) {
   $$2 = $0;
  } else {
   $13 = ($1|0)!=(0);
   $14 = (($0) + -4256)|0;
   $15 = ($14>>>0)<(46);
   $or$cond71 = $13 & $15;
   if ($or$cond71) {
    $16 = ($0|0)>(4293);
    if ($16) {
     switch ($0|0) {
     case 4295: case 4301:  {
      break;
     }
     default: {
      $$2 = $0;
      break L1;
     }
     }
    }
    $17 = (($0) + 7264)|0;
    $$2 = $17;
    break;
   }
   $$not = $13 ^ 1;
   $18 = (($0) + -11520)|0;
   $19 = ($18>>>0)<(38);
   $or$cond = $19 & $$not;
   if ($or$cond) {
    $20 = (($0) + -7264)|0;
    $$2 = $20;
    break;
   } else {
    $$06284 = 0;
   }
   while(1) {
    $27 = (((4612 + ($$06284<<2)|0)) + 3|0);
    $28 = HEAP8[$27>>0]|0;
    $29 = (4612 + ($$06284<<2)|0);
    $30 = HEAP16[$29>>1]|0;
    $31 = $30&65535;
    $32 = (((4612 + ($$06284<<2)|0)) + 2|0);
    $33 = HEAP8[$32>>0]|0;
    $34 = $33 << 24 >> 24;
    $35 = $4 & $34;
    $$neg75 = (($0) - ($31))|0;
    $36 = (($$neg75) - ($35))|0;
    $37 = $28&255;
    $38 = ($36>>>0)<($37>>>0);
    $21 = (($$06284) + 1)|0;
    if ($38) {
     label = 11;
     break;
    }
    $22 = ($21|0)==(61);
    if ($22) {
     break;
    } else {
     $$06284 = $21;
    }
   }
   if ((label|0) == 11) {
    $39 = ($33<<24>>24)==(1);
    if ($39) {
     $40 = (($1) + ($0))|0;
     $41 = $$neg75 & 1;
     $42 = (($40) - ($41))|0;
     $$2 = $42;
     break;
    } else {
     $43 = Math_imul($3, $34)|0;
     $44 = (($43) + ($0))|0;
     $$2 = $44;
     break;
    }
   }
   $23 = (1 - ($1))|0;
   $24 = (4124 + ($23<<1)|0);
   $25 = HEAP16[$24>>1]|0;
   $26 = ($25<<16>>16)==(0);
   L20: do {
    if (!($26)) {
     $$16383 = 0;$46 = $25;
     while(1) {
      $45 = $46&65535;
      $47 = ($45|0)==($0|0);
      if ($47) {
       break;
      }
      $51 = (($$16383) + 1)|0;
      $52 = ((4124 + ($51<<2)|0) + ($23<<1)|0);
      $53 = HEAP16[$52>>1]|0;
      $54 = ($53<<16>>16)==(0);
      if ($54) {
       break L20;
      } else {
       $$16383 = $51;$46 = $53;
      }
     }
     $48 = ((4124 + ($$16383<<2)|0) + ($1<<1)|0);
     $49 = HEAP16[$48>>1]|0;
     $50 = $49&65535;
     $$2 = $50;
     break L1;
    }
   } while(0);
   $$neg77 = ($1*40)|0;
   $$neg78 = (($0) + -66600)|0;
   $55 = (($$neg78) + ($$neg77))|0;
   $56 = ($55>>>0)<(40);
   $57 = (($0) + -40)|0;
   $58 = ($1*80)|0;
   $59 = (($57) + ($58))|0;
   $$ = $56 ? $59 : $0;
   return ($$|0);
  }
 } while(0);
 return ($$2|0);
}
function _iswalpha($0) {
 $0 = $0|0;
 var $$ = 0, $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(131072);
 if ($1) {
  $2 = $0 >>> 8;
  $3 = (7234 + ($2)|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = $4&255;
  $6 = $5 << 5;
  $7 = $0 >>> 3;
  $8 = $7 & 31;
  $9 = $6 | $8;
  $10 = (7234 + ($9)|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11&255;
  $13 = $0 & 7;
  $14 = $12 >>> $13;
  $15 = $14 & 1;
  $$0 = $15;
 } else {
  $16 = ($0>>>0)<(196606);
  $$ = $16&1;
  $$0 = $$;
 }
 return ($$0|0);
}
function _isdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -48)|0;
 $2 = ($1>>>0)<(10);
 $3 = $2&1;
 return ($3|0);
}
function _strerror($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___pthread_self_308()|0);
 $2 = ((($1)) + 188|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (___strerror_l($0,$3)|0);
 return ($4|0);
}
function ___pthread_self_308() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___strerror_l($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $$016 = 0;
 while(1) {
  $3 = (10210 + ($$016)|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = $4&255;
  $6 = ($5|0)==($0|0);
  if ($6) {
   label = 2;
   break;
  }
  $7 = (($$016) + 1)|0;
  $8 = ($7|0)==(87);
  if ($8) {
   $$01214 = 10298;$$115 = 87;
   label = 5;
   break;
  } else {
   $$016 = $7;
  }
 }
 if ((label|0) == 2) {
  $2 = ($$016|0)==(0);
  if ($2) {
   $$012$lcssa = 10298;
  } else {
   $$01214 = 10298;$$115 = $$016;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $$113 = $$01214;
   while(1) {
    $9 = HEAP8[$$113>>0]|0;
    $10 = ($9<<24>>24)==(0);
    $11 = ((($$113)) + 1|0);
    if ($10) {
     break;
    } else {
     $$113 = $11;
    }
   }
   $12 = (($$115) + -1)|0;
   $13 = ($12|0)==(0);
   if ($13) {
    $$012$lcssa = $11;
    break;
   } else {
    $$01214 = $11;$$115 = $12;
    label = 5;
   }
  }
 }
 $14 = ((($1)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (___lctrans($$012$lcssa,$15)|0);
 return ($16|0);
}
function ___lctrans($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___lctrans_impl($0,$1)|0);
 return ($2|0);
}
function ___lctrans_impl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($1)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (___mo_lookup($3,$5,$0)|0);
  $$0 = $6;
 }
 $7 = ($$0|0)!=(0|0);
 $8 = $7 ? $$0 : $0;
 return ($8|0);
}
function ___mo_lookup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$090 = 0, $$094 = 0, $$191 = 0, $$195 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond102 = 0, $or$cond104 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + 1794895138)|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_swapc($6,$4)|0);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_swapc($9,$4)|0);
 $11 = ((($0)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (_swapc($12,$4)|0);
 $14 = $1 >>> 2;
 $15 = ($7>>>0)<($14>>>0);
 L1: do {
  if ($15) {
   $16 = $7 << 2;
   $17 = (($1) - ($16))|0;
   $18 = ($10>>>0)<($17>>>0);
   $19 = ($13>>>0)<($17>>>0);
   $or$cond = $18 & $19;
   if ($or$cond) {
    $20 = $13 | $10;
    $21 = $20 & 3;
    $22 = ($21|0)==(0);
    if ($22) {
     $23 = $10 >>> 2;
     $24 = $13 >>> 2;
     $$090 = 0;$$094 = $7;
     while(1) {
      $25 = $$094 >>> 1;
      $26 = (($$090) + ($25))|0;
      $27 = $26 << 1;
      $28 = (($27) + ($23))|0;
      $29 = (($0) + ($28<<2)|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = (_swapc($30,$4)|0);
      $32 = (($28) + 1)|0;
      $33 = (($0) + ($32<<2)|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = (_swapc($34,$4)|0);
      $36 = ($35>>>0)<($1>>>0);
      $37 = (($1) - ($35))|0;
      $38 = ($31>>>0)<($37>>>0);
      $or$cond102 = $36 & $38;
      if (!($or$cond102)) {
       $$4 = 0;
       break L1;
      }
      $39 = (($35) + ($31))|0;
      $40 = (($0) + ($39)|0);
      $41 = HEAP8[$40>>0]|0;
      $42 = ($41<<24>>24)==(0);
      if (!($42)) {
       $$4 = 0;
       break L1;
      }
      $43 = (($0) + ($35)|0);
      $44 = (_strcmp($2,$43)|0);
      $45 = ($44|0)==(0);
      if ($45) {
       break;
      }
      $62 = ($$094|0)==(1);
      $63 = ($44|0)<(0);
      $64 = (($$094) - ($25))|0;
      $$195 = $63 ? $25 : $64;
      $$191 = $63 ? $$090 : $26;
      if ($62) {
       $$4 = 0;
       break L1;
      } else {
       $$090 = $$191;$$094 = $$195;
      }
     }
     $46 = (($27) + ($24))|0;
     $47 = (($0) + ($46<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = (_swapc($48,$4)|0);
     $50 = (($46) + 1)|0;
     $51 = (($0) + ($50<<2)|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (_swapc($52,$4)|0);
     $54 = ($53>>>0)<($1>>>0);
     $55 = (($1) - ($53))|0;
     $56 = ($49>>>0)<($55>>>0);
     $or$cond104 = $54 & $56;
     if ($or$cond104) {
      $57 = (($0) + ($53)|0);
      $58 = (($53) + ($49))|0;
      $59 = (($0) + ($58)|0);
      $60 = HEAP8[$59>>0]|0;
      $61 = ($60<<24>>24)==(0);
      $$ = $61 ? $57 : 0;
      $$4 = $$;
     } else {
      $$4 = 0;
     }
    } else {
     $$4 = 0;
    }
   } else {
    $$4 = 0;
   }
  } else {
   $$4 = 0;
  }
 } while(0);
 return ($$4|0);
}
function _swapc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 $3 = (_llvm_bswap_i32(($0|0))|0);
 $$ = $2 ? $0 : $3;
 return ($$|0);
}
function _strcmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($2<<24>>24)!=($3<<24>>24);
 $5 = ($2<<24>>24)==(0);
 $or$cond9 = $5 | $4;
 if ($or$cond9) {
  $$lcssa = $3;$$lcssa8 = $2;
 } else {
  $$011 = $1;$$0710 = $0;
  while(1) {
   $6 = ((($$0710)) + 1|0);
   $7 = ((($$011)) + 1|0);
   $8 = HEAP8[$6>>0]|0;
   $9 = HEAP8[$7>>0]|0;
   $10 = ($8<<24>>24)!=($9<<24>>24);
   $11 = ($8<<24>>24)==(0);
   $or$cond = $11 | $10;
   if ($or$cond) {
    $$lcssa = $9;$$lcssa8 = $8;
    break;
   } else {
    $$011 = $7;$$0710 = $6;
   }
  }
 }
 $12 = $$lcssa8&255;
 $13 = $$lcssa&255;
 $14 = (($12) - ($13))|0;
 return ($14|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (3464|0);
}
function ___get_locale($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$093$lcssa = 0, $$093118 = 0, $$094114 = 0, $$1 = 0, $$1100111 = 0, $$195112 = 0, $$2122 = 0, $$2123 = 0, $$2124 = 0, $$4 = 0, $$neg = 0, $$pre121 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c_dot_utf8$$4 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $2 = sp + 8|0;
 $3 = sp;
 $4 = HEAP8[$1>>0]|0;
 $5 = ($4<<24>>24)==(0);
 do {
  if ($5) {
   $6 = (_getenv((12102|0))|0);
   $7 = ($6|0)==(0|0);
   if (!($7)) {
    $8 = HEAP8[$6>>0]|0;
    $9 = ($8<<24>>24)==(0);
    if (!($9)) {
     $$1 = $6;
     break;
    }
   }
   $10 = (12109 + (($0*12)|0)|0);
   $11 = (_getenv(($10|0))|0);
   $12 = ($11|0)==(0|0);
   if (!($12)) {
    $13 = HEAP8[$11>>0]|0;
    $14 = ($13<<24>>24)==(0);
    if (!($14)) {
     $$1 = $11;
     break;
    }
   }
   $15 = (_getenv((12181|0))|0);
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = HEAP8[$15>>0]|0;
    $18 = ($17<<24>>24)==(0);
    if (!($18)) {
     $$1 = $15;
     break;
    }
   }
   $$1 = 12186;
  } else {
   $$1 = $1;
  }
 } while(0);
 $$093118 = 0;
 L13: while(1) {
  $19 = (($$1) + ($$093118)|0);
  $20 = HEAP8[$19>>0]|0;
  switch ($20<<24>>24) {
  case 47: case 0:  {
   $$093$lcssa = $$093118;
   break L13;
   break;
  }
  default: {
  }
  }
  $21 = (($$093118) + 1)|0;
  $22 = ($21>>>0)<(15);
  if ($22) {
   $$093118 = $21;
  } else {
   $$093$lcssa = $21;
   break;
  }
 }
 $23 = HEAP8[$$1>>0]|0;
 $24 = ($23<<24>>24)==(46);
 if ($24) {
  $$2122 = 12186;
  label = 15;
 } else {
  $25 = (($$1) + ($$093$lcssa)|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = ($26<<24>>24)==(0);
  if ($27) {
   $28 = ($23<<24>>24)==(67);
   if ($28) {
    $$2122 = $$1;
    label = 15;
   } else {
    $$2123 = $$1;
    label = 16;
   }
  } else {
   $$2122 = 12186;
   label = 15;
  }
 }
 if ((label|0) == 15) {
  $29 = ((($$2122)) + 1|0);
  $30 = HEAP8[$29>>0]|0;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $$2124 = $$2122;
   label = 18;
  } else {
   $$2123 = $$2122;
   label = 16;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $32 = (_strcmp($$2123,12186)|0);
   $33 = ($32|0)==(0);
   if ($33) {
    $$2124 = $$2123;
    label = 18;
   } else {
    $34 = (_strcmp($$2123,12194)|0);
    $35 = ($34|0)==(0);
    if ($35) {
     $$2124 = $$2123;
     label = 18;
    } else {
     $40 = HEAP32[13993]|0;
     $41 = ($40|0)==(0|0);
     if (!($41)) {
      $$094114 = $40;
      while(1) {
       $42 = ((($$094114)) + 8|0);
       $43 = (_strcmp($$2123,$42)|0);
       $44 = ($43|0)==(0);
       if ($44) {
        $$0 = $$094114;
        break L22;
       }
       $45 = ((($$094114)) + 24|0);
       $46 = HEAP32[$45>>2]|0;
       $47 = ($46|0)==(0|0);
       if ($47) {
        break;
       } else {
        $$094114 = $46;
       }
      }
     }
     ___lock((55976|0));
     $48 = HEAP32[13993]|0;
     $49 = ($48|0)==(0|0);
     L32: do {
      if (!($49)) {
       $$195112 = $48;
       while(1) {
        $50 = ((($$195112)) + 8|0);
        $51 = (_strcmp($$2123,$50)|0);
        $52 = ($51|0)==(0);
        if ($52) {
         break;
        }
        $53 = ((($$195112)) + 24|0);
        $54 = HEAP32[$53>>2]|0;
        $55 = ($54|0)==(0|0);
        if ($55) {
         break L32;
        } else {
         $$195112 = $54;
        }
       }
       ___unlock((55976|0));
       $$0 = $$195112;
       break L22;
      }
     } while(0);
     $56 = HEAP32[(55912)>>2]|0;
     $57 = ($56|0)==(0);
     L39: do {
      if ($57) {
       $58 = (_getenv((12200|0))|0);
       $59 = ($58|0)==(0|0);
       if ($59) {
        label = 41;
       } else {
        $60 = HEAP8[$58>>0]|0;
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         label = 41;
        } else {
         $62 = (254 - ($$093$lcssa))|0;
         $63 = (($$093$lcssa) + 1)|0;
         $$1100111 = $58;
         while(1) {
          $64 = (___strchrnul($$1100111,58)|0);
          $65 = $64;
          $66 = $$1100111;
          $67 = (($65) - ($66))|0;
          $68 = HEAP8[$64>>0]|0;
          $69 = ($68<<24>>24)!=(0);
          $$neg = $69 << 31 >> 31;
          $70 = (($67) + ($$neg))|0;
          $71 = ($70>>>0)<($62>>>0);
          if ($71) {
           (_memcpy(($2|0),($$1100111|0),($70|0))|0);
           $72 = (($2) + ($70)|0);
           HEAP8[$72>>0] = 47;
           $73 = ((($72)) + 1|0);
           (_memcpy(($73|0),($$2123|0),($$093$lcssa|0))|0);
           $74 = (($63) + ($70))|0;
           $75 = (($2) + ($74)|0);
           HEAP8[$75>>0] = 0;
           $76 = (___map_file(($2|0),($3|0))|0);
           $77 = ($76|0)==(0|0);
           if (!($77)) {
            break;
           }
           $$pre121 = HEAP8[$64>>0]|0;
           $86 = $$pre121;
          } else {
           $86 = $68;
          }
          $87 = ($86<<24>>24)!=(0);
          $88 = $87&1;
          $89 = (($64) + ($88)|0);
          $90 = HEAP8[$89>>0]|0;
          $91 = ($90<<24>>24)==(0);
          if ($91) {
           label = 41;
           break L39;
          } else {
           $$1100111 = $89;
          }
         }
         $78 = (_malloc(28)|0);
         $79 = ($78|0)==(0|0);
         if ($79) {
          $92 = HEAP32[$3>>2]|0;
          (___munmap($76,$92)|0);
          label = 41;
          break;
         } else {
          HEAP32[$78>>2] = $76;
          $80 = HEAP32[$3>>2]|0;
          $81 = ((($78)) + 4|0);
          HEAP32[$81>>2] = $80;
          $82 = ((($78)) + 8|0);
          (_memcpy(($82|0),($$2123|0),($$093$lcssa|0))|0);
          $83 = (($82) + ($$093$lcssa)|0);
          HEAP8[$83>>0] = 0;
          $84 = HEAP32[13993]|0;
          $85 = ((($78)) + 24|0);
          HEAP32[$85>>2] = $84;
          HEAP32[13993] = $78;
          $$4 = $78;
          break;
         }
        }
       }
      } else {
       label = 41;
      }
     } while(0);
     if ((label|0) == 41) {
      $93 = (_malloc(28)|0);
      $94 = ($93|0)==(0|0);
      if ($94) {
       $$4 = $93;
      } else {
       $95 = HEAP32[701]|0;
       HEAP32[$93>>2] = $95;
       $96 = HEAP32[(2808)>>2]|0;
       $97 = ((($93)) + 4|0);
       HEAP32[$97>>2] = $96;
       $98 = ((($93)) + 8|0);
       (_memcpy(($98|0),($$2123|0),($$093$lcssa|0))|0);
       $99 = (($98) + ($$093$lcssa)|0);
       HEAP8[$99>>0] = 0;
       $100 = HEAP32[13993]|0;
       $101 = ((($93)) + 24|0);
       HEAP32[$101>>2] = $100;
       HEAP32[13993] = $93;
       $$4 = $93;
      }
     }
     $102 = ($$4|0)==(0|0);
     $103 = ($0|0)==(0);
     $or$cond = $103 & $102;
     $__c_dot_utf8$$4 = $or$cond ? 2804 : $$4;
     ___unlock((55976|0));
     $$0 = $__c_dot_utf8$$4;
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 18) {
   $36 = ($0|0)==(0);
   if ($36) {
    $37 = ((($$2124)) + 1|0);
    $38 = HEAP8[$37>>0]|0;
    $39 = ($38<<24>>24)==(46);
    if ($39) {
     $$0 = 2804;
     break;
    }
   }
   $$0 = 0;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___strchrnul($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond33 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 & 255;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $8 = (_strlen($0)|0);
   $9 = (($0) + ($8)|0);
   $$0 = $9;
  } else {
   $4 = $0;
   $5 = $4 & 3;
   $6 = ($5|0)==(0);
   if ($6) {
    $$030$lcssa = $0;
   } else {
    $7 = $1&255;
    $$03039 = $0;
    while(1) {
     $10 = HEAP8[$$03039>>0]|0;
     $11 = ($10<<24>>24)==(0);
     $12 = ($10<<24>>24)==($7<<24>>24);
     $or$cond = $11 | $12;
     if ($or$cond) {
      $$0 = $$03039;
      break L1;
     }
     $13 = ((($$03039)) + 1|0);
     $14 = $13;
     $15 = $14 & 3;
     $16 = ($15|0)==(0);
     if ($16) {
      $$030$lcssa = $13;
      break;
     } else {
      $$03039 = $13;
     }
    }
   }
   $17 = Math_imul($2, 16843009)|0;
   $18 = HEAP32[$$030$lcssa>>2]|0;
   $19 = (($18) + -16843009)|0;
   $20 = $18 & -2139062144;
   $21 = $20 ^ -2139062144;
   $22 = $21 & $19;
   $23 = ($22|0)==(0);
   L10: do {
    if ($23) {
     $$02936 = $$030$lcssa;$25 = $18;
     while(1) {
      $24 = $25 ^ $17;
      $26 = (($24) + -16843009)|0;
      $27 = $24 & -2139062144;
      $28 = $27 ^ -2139062144;
      $29 = $28 & $26;
      $30 = ($29|0)==(0);
      if (!($30)) {
       $$029$lcssa = $$02936;
       break L10;
      }
      $31 = ((($$02936)) + 4|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($32) + -16843009)|0;
      $34 = $32 & -2139062144;
      $35 = $34 ^ -2139062144;
      $36 = $35 & $33;
      $37 = ($36|0)==(0);
      if ($37) {
       $$02936 = $31;$25 = $32;
      } else {
       $$029$lcssa = $31;
       break;
      }
     }
    } else {
     $$029$lcssa = $$030$lcssa;
    }
   } while(0);
   $38 = $1&255;
   $$1 = $$029$lcssa;
   while(1) {
    $39 = HEAP8[$$1>>0]|0;
    $40 = ($39<<24>>24)==(0);
    $41 = ($39<<24>>24)==($38<<24>>24);
    $or$cond33 = $40 | $41;
    $42 = ((($$1)) + 1|0);
    if ($or$cond33) {
     $$0 = $$1;
     break;
    } else {
     $$1 = $42;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function ___munmap($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $2 = $0;
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 $3 = (___syscall91(91,($vararg_buffer|0))|0);
 $4 = (___syscall_ret($3)|0);
 STACKTOP = sp;return ($4|0);
}
function _dummy() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _iswdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -48)|0;
 $2 = ($1>>>0)<(10);
 $3 = $2&1;
 return ($3|0);
}
function _towupper($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___towcase($0,0)|0);
 return ($1|0);
}
function _wcschr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$09 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 if ($2) {
  $3 = (_wcslen($0)|0);
  $4 = (($0) + ($3<<2)|0);
  $$0 = $4;
 } else {
  $$09 = $0;
  while(1) {
   $5 = HEAP32[$$09>>2]|0;
   $6 = ($5|0)==(0);
   $7 = ($5|0)==($1|0);
   $or$cond = $6 | $7;
   $8 = ((($$09)) + 4|0);
   if ($or$cond) {
    break;
   } else {
    $$09 = $8;
   }
  }
  $9 = ($5|0)!=(0);
  $10 = $9 ? $$09 : 0;
  $$0 = $10;
 }
 return ($$0|0);
}
function _wcslen($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $0;
 while(1) {
  $1 = HEAP32[$$0>>2]|0;
  $2 = ($1|0)==(0);
  $3 = ((($$0)) + 4|0);
  if ($2) {
   break;
  } else {
   $$0 = $3;
  }
 }
 $4 = $$0;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 return ($7|0);
}
function _strncmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$01823 = 0, $$01925 = 0, $$01925$in = 0, $$020 = 0, $$024 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $$020 = 0;
 } else {
  $4 = HEAP8[$0>>0]|0;
  $5 = ($4<<24>>24)==(0);
  L3: do {
   if ($5) {
    $$0$lcssa = $1;$16 = 0;
   } else {
    $$01823 = $0;$$01925$in = $2;$$024 = $1;$9 = $4;
    while(1) {
     $$01925 = (($$01925$in) + -1)|0;
     $6 = HEAP8[$$024>>0]|0;
     $7 = ($6<<24>>24)!=(0);
     $8 = ($$01925|0)!=(0);
     $or$cond = $8 & $7;
     $10 = ($9<<24>>24)==($6<<24>>24);
     $or$cond21 = $10 & $or$cond;
     if (!($or$cond21)) {
      $$0$lcssa = $$024;$16 = $9;
      break L3;
     }
     $11 = ((($$01823)) + 1|0);
     $12 = ((($$024)) + 1|0);
     $13 = HEAP8[$11>>0]|0;
     $14 = ($13<<24>>24)==(0);
     if ($14) {
      $$0$lcssa = $12;$16 = 0;
      break;
     } else {
      $$01823 = $11;$$01925$in = $$01925;$$024 = $12;$9 = $13;
     }
    }
   }
  } while(0);
  $15 = $16&255;
  $17 = HEAP8[$$0$lcssa>>0]|0;
  $18 = $17&255;
  $19 = (($15) - ($18))|0;
  $$020 = $19;
 }
 return ($$020|0);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$13745 = 0, $$140 = 0, $$2 = 0, $$23839 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = HEAP8[$$03555>>0]|0;
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   $$2 = $$035$lcssa;$$3 = 0;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = HEAP8[$$035$lcssa65>>0]|0;
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $$2 = $$035$lcssa65;$$3 = $$036$lcssa64;
   } else {
    $20 = Math_imul($3, 16843009)|0;
    $21 = ($$036$lcssa64>>>0)>(3);
    L11: do {
     if ($21) {
      $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
      while(1) {
       $22 = HEAP32[$$046>>2]|0;
       $23 = $22 ^ $20;
       $24 = (($23) + -16843009)|0;
       $25 = $23 & -2139062144;
       $26 = $25 ^ -2139062144;
       $27 = $26 & $24;
       $28 = ($27|0)==(0);
       if (!($28)) {
        break;
       }
       $29 = ((($$046)) + 4|0);
       $30 = (($$13745) + -4)|0;
       $31 = ($30>>>0)>(3);
       if ($31) {
        $$046 = $29;$$13745 = $30;
       } else {
        $$0$lcssa = $29;$$137$lcssa = $30;
        label = 11;
        break L11;
       }
      }
      $$140 = $$046;$$23839 = $$13745;
     } else {
      $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $32 = ($$137$lcssa|0)==(0);
     if ($32) {
      $$2 = $$0$lcssa;$$3 = 0;
      break;
     } else {
      $$140 = $$0$lcssa;$$23839 = $$137$lcssa;
     }
    }
    while(1) {
     $33 = HEAP8[$$140>>0]|0;
     $34 = ($33<<24>>24)==($18<<24>>24);
     if ($34) {
      $$2 = $$140;$$3 = $$23839;
      break L8;
     }
     $35 = ((($$140)) + 1|0);
     $36 = (($$23839) + -1)|0;
     $37 = ($36|0)==(0);
     if ($37) {
      $$2 = $35;$$3 = 0;
      break;
     } else {
      $$140 = $35;$$23839 = $36;
     }
    }
   }
  }
 } while(0);
 $38 = ($$3|0)!=(0);
 $39 = $38 ? $$2 : 0;
 return ($39|0);
}
function _strcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpcpy($0,$1)|0);
 return ($0|0);
}
function ___stpcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$029 = 0, $$037 = 0, $$1$ph = 0, $$128$ph = 0, $$12834 = 0, $$135 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1;
 $3 = $0;
 $4 = $2 ^ $3;
 $5 = $4 & 3;
 $6 = ($5|0)==(0);
 L1: do {
  if ($6) {
   $7 = $2 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$026$lcssa = $1;$$027$lcssa = $0;
   } else {
    $$02642 = $1;$$02741 = $0;
    while(1) {
     $9 = HEAP8[$$02642>>0]|0;
     HEAP8[$$02741>>0] = $9;
     $10 = ($9<<24>>24)==(0);
     if ($10) {
      $$029 = $$02741;
      break L1;
     }
     $11 = ((($$02642)) + 1|0);
     $12 = ((($$02741)) + 1|0);
     $13 = $11;
     $14 = $13 & 3;
     $15 = ($14|0)==(0);
     if ($15) {
      $$026$lcssa = $11;$$027$lcssa = $12;
      break;
     } else {
      $$02642 = $11;$$02741 = $12;
     }
    }
   }
   $16 = HEAP32[$$026$lcssa>>2]|0;
   $17 = (($16) + -16843009)|0;
   $18 = $16 & -2139062144;
   $19 = $18 ^ -2139062144;
   $20 = $19 & $17;
   $21 = ($20|0)==(0);
   if ($21) {
    $$02536 = $$027$lcssa;$$037 = $$026$lcssa;$24 = $16;
    while(1) {
     $22 = ((($$037)) + 4|0);
     $23 = ((($$02536)) + 4|0);
     HEAP32[$$02536>>2] = $24;
     $25 = HEAP32[$22>>2]|0;
     $26 = (($25) + -16843009)|0;
     $27 = $25 & -2139062144;
     $28 = $27 ^ -2139062144;
     $29 = $28 & $26;
     $30 = ($29|0)==(0);
     if ($30) {
      $$02536 = $23;$$037 = $22;$24 = $25;
     } else {
      $$0$lcssa = $22;$$025$lcssa = $23;
      break;
     }
    }
   } else {
    $$0$lcssa = $$026$lcssa;$$025$lcssa = $$027$lcssa;
   }
   $$1$ph = $$0$lcssa;$$128$ph = $$025$lcssa;
   label = 8;
  } else {
   $$1$ph = $1;$$128$ph = $0;
   label = 8;
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = HEAP8[$$1$ph>>0]|0;
  HEAP8[$$128$ph>>0] = $31;
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $$029 = $$128$ph;
  } else {
   $$12834 = $$128$ph;$$135 = $$1$ph;
   while(1) {
    $33 = ((($$135)) + 1|0);
    $34 = ((($$12834)) + 1|0);
    $35 = HEAP8[$33>>0]|0;
    HEAP8[$34>>0] = $35;
    $36 = ($35<<24>>24)==(0);
    if ($36) {
     $$029 = $34;
     break;
    } else {
     $$12834 = $34;$$135 = $33;
    }
   }
  }
 }
 return ($$029|0);
}
function _snprintf($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 $4 = (_vsnprintf($0,$1,$2,$3)|0);
 STACKTOP = sp;return ($4|0);
}
function _vsnprintf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$015 = 0, $$0 = 0, $$014 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $4 = sp + 124|0;
 $5 = sp;
 dest=$5; src=3708; stop=dest+124|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $6 = (($1) + -1)|0;
 $7 = ($6>>>0)>(2147483646);
 if ($7) {
  $8 = ($1|0)==(0);
  if ($8) {
   $$014 = $4;$$015 = 1;
   label = 4;
  } else {
   $9 = (___errno_location()|0);
   HEAP32[$9>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$014 = $0;$$015 = $1;
  label = 4;
 }
 if ((label|0) == 4) {
  $10 = $$014;
  $11 = (-2 - ($10))|0;
  $12 = ($$015>>>0)>($11>>>0);
  $$$015 = $12 ? $11 : $$015;
  $13 = ((($5)) + 48|0);
  HEAP32[$13>>2] = $$$015;
  $14 = ((($5)) + 20|0);
  HEAP32[$14>>2] = $$014;
  $15 = ((($5)) + 44|0);
  HEAP32[$15>>2] = $$014;
  $16 = (($$014) + ($$$015)|0);
  $17 = ((($5)) + 16|0);
  HEAP32[$17>>2] = $16;
  $18 = ((($5)) + 28|0);
  HEAP32[$18>>2] = $16;
  $19 = (_vfprintf($5,$2,$3)|0);
  $20 = ($$$015|0)==(0);
  if ($20) {
   $$0 = $19;
  } else {
   $21 = HEAP32[$14>>2]|0;
   $22 = HEAP32[$17>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = $23 << 31 >> 31;
   $25 = (($21) + ($24)|0);
   HEAP8[$25>>0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vfprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $$1$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $3 = sp + 120|0;
 $4 = sp + 80|0;
 $5 = sp;
 $6 = sp + 136|0;
 dest=$4; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $7 = (_printf_core(0,$1,$3,$5,$4)|0);
 $8 = ($7|0)<(0);
 if ($8) {
  $$0 = -1;
 } else {
  $9 = ((($0)) + 76|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)>(-1);
  if ($11) {
   $12 = (___lockfile($0)|0);
   $39 = $12;
  } else {
   $39 = 0;
  }
  $13 = HEAP32[$0>>2]|0;
  $14 = $13 & 32;
  $15 = ((($0)) + 74|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = ($16<<24>>24)<(1);
  if ($17) {
   $18 = $13 & -33;
   HEAP32[$0>>2] = $18;
  }
  $19 = ((($0)) + 48|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0);
  if ($21) {
   $23 = ((($0)) + 44|0);
   $24 = HEAP32[$23>>2]|0;
   HEAP32[$23>>2] = $6;
   $25 = ((($0)) + 28|0);
   HEAP32[$25>>2] = $6;
   $26 = ((($0)) + 20|0);
   HEAP32[$26>>2] = $6;
   HEAP32[$19>>2] = 80;
   $27 = ((($6)) + 80|0);
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = $27;
   $29 = (_printf_core($0,$1,$3,$5,$4)|0);
   $30 = ($24|0)==(0|0);
   if ($30) {
    $$1 = $29;
   } else {
    $31 = ((($0)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    (FUNCTION_TABLE_iiii[$32 & 511]($0,0,0)|0);
    $33 = HEAP32[$26>>2]|0;
    $34 = ($33|0)==(0|0);
    $$ = $34 ? -1 : $29;
    HEAP32[$23>>2] = $24;
    HEAP32[$19>>2] = 0;
    HEAP32[$28>>2] = 0;
    HEAP32[$25>>2] = 0;
    HEAP32[$26>>2] = 0;
    $$1 = $$;
   }
  } else {
   $22 = (_printf_core($0,$1,$3,$5,$4)|0);
   $$1 = $22;
  }
  $35 = HEAP32[$0>>2]|0;
  $36 = $35 & 32;
  $37 = ($36|0)==(0);
  $$1$ = $37 ? $$1 : -1;
  $38 = $35 | $14;
  HEAP32[$0>>2] = $38;
  $40 = ($39|0)==(0);
  if (!($40)) {
   ___unlockfile($0);
  }
  $$0 = $$1$;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$$ = 0, $$$0259 = 0, $$$0262 = 0, $$$4266 = 0, $$$5 = 0, $$0 = 0, $$0228 = 0, $$0228$ = 0, $$0229316 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0, $$0240$lcssa = 0, $$0240$lcssa356 = 0, $$0240315 = 0, $$0243 = 0, $$0247 = 0, $$0249$lcssa = 0, $$0249303 = 0;
 var $$0252 = 0, $$0253 = 0, $$0254 = 0, $$0254$$0254$ = 0, $$0259 = 0, $$0262$lcssa = 0, $$0262309 = 0, $$0269 = 0, $$0269$phi = 0, $$1 = 0, $$1230327 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241326 = 0, $$1244314 = 0, $$1248 = 0, $$1250 = 0, $$1255 = 0, $$1260 = 0;
 var $$1263 = 0, $$1263$ = 0, $$1270 = 0, $$2 = 0, $$2234 = 0, $$2239 = 0, $$2242$lcssa = 0, $$2242302 = 0, $$2245 = 0, $$2251 = 0, $$2256 = 0, $$2256$ = 0, $$2256$$$2256 = 0, $$2261 = 0, $$2271 = 0, $$279$ = 0, $$286 = 0, $$287 = 0, $$3257 = 0, $$3265 = 0;
 var $$3272 = 0, $$3300 = 0, $$4258354 = 0, $$4266 = 0, $$5 = 0, $$6268 = 0, $$lcssa291 = 0, $$lcssa292 = 0, $$pre = 0, $$pre342 = 0, $$pre344 = 0, $$pre345 = 0, $$pre345$pre = 0, $$pre346 = 0, $$pre348 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;
 var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0.0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0;
 var $arglist_next3 = 0, $brmerge = 0, $brmerge308 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $or$cond = 0, $or$cond276 = 0, $or$cond278 = 0, $or$cond281 = 0, $storemerge274 = 0, $trunc = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $5 = sp + 16|0;
 $6 = sp;
 $7 = sp + 24|0;
 $8 = sp + 8|0;
 $9 = sp + 20|0;
 HEAP32[$5>>2] = $1;
 $10 = ($0|0)!=(0|0);
 $11 = ((($7)) + 40|0);
 $12 = $11;
 $13 = ((($7)) + 39|0);
 $14 = ((($8)) + 4|0);
 $$0243 = 0;$$0247 = 0;$$0269 = 0;
 L1: while(1) {
  $15 = ($$0247|0)>(-1);
  do {
   if ($15) {
    $16 = (2147483647 - ($$0247))|0;
    $17 = ($$0243|0)>($16|0);
    if ($17) {
     $18 = (___errno_location()|0);
     HEAP32[$18>>2] = 75;
     $$1248 = -1;
     break;
    } else {
     $19 = (($$0243) + ($$0247))|0;
     $$1248 = $19;
     break;
    }
   } else {
    $$1248 = $$0247;
   }
  } while(0);
  $20 = HEAP32[$5>>2]|0;
  $21 = HEAP8[$20>>0]|0;
  $22 = ($21<<24>>24)==(0);
  if ($22) {
   label = 88;
   break;
  } else {
   $23 = $21;$25 = $20;
  }
  L9: while(1) {
   switch ($23<<24>>24) {
   case 37:  {
    $$0249303 = $25;$27 = $25;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $$0249$lcssa = $25;
    break L9;
    break;
   }
   default: {
   }
   }
   $24 = ((($25)) + 1|0);
   HEAP32[$5>>2] = $24;
   $$pre = HEAP8[$24>>0]|0;
   $23 = $$pre;$25 = $24;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $26 = ((($27)) + 1|0);
     $28 = HEAP8[$26>>0]|0;
     $29 = ($28<<24>>24)==(37);
     if (!($29)) {
      $$0249$lcssa = $$0249303;
      break L12;
     }
     $30 = ((($$0249303)) + 1|0);
     $31 = ((($27)) + 2|0);
     HEAP32[$5>>2] = $31;
     $32 = HEAP8[$31>>0]|0;
     $33 = ($32<<24>>24)==(37);
     if ($33) {
      $$0249303 = $30;$27 = $31;
      label = 9;
     } else {
      $$0249$lcssa = $30;
      break;
     }
    }
   }
  } while(0);
  $34 = $$0249$lcssa;
  $35 = $20;
  $36 = (($34) - ($35))|0;
  if ($10) {
   _out($0,$20,$36);
  }
  $37 = ($36|0)==(0);
  if (!($37)) {
   $$0269$phi = $$0269;$$0243 = $36;$$0247 = $$1248;$$0269 = $$0269$phi;
   continue;
  }
  $38 = HEAP32[$5>>2]|0;
  $39 = ((($38)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $42 = (_isdigit($41)|0);
  $43 = ($42|0)==(0);
  $$pre342 = HEAP32[$5>>2]|0;
  if ($43) {
   $$0253 = -1;$$1270 = $$0269;$$sink = 1;
  } else {
   $44 = ((($$pre342)) + 2|0);
   $45 = HEAP8[$44>>0]|0;
   $46 = ($45<<24>>24)==(36);
   if ($46) {
    $47 = ((($$pre342)) + 1|0);
    $48 = HEAP8[$47>>0]|0;
    $49 = $48 << 24 >> 24;
    $50 = (($49) + -48)|0;
    $$0253 = $50;$$1270 = 1;$$sink = 3;
   } else {
    $$0253 = -1;$$1270 = $$0269;$$sink = 1;
   }
  }
  $51 = (($$pre342) + ($$sink)|0);
  HEAP32[$5>>2] = $51;
  $52 = HEAP8[$51>>0]|0;
  $53 = $52 << 24 >> 24;
  $54 = (($53) + -32)|0;
  $55 = ($54>>>0)>(31);
  $56 = 1 << $54;
  $57 = $56 & 75913;
  $58 = ($57|0)==(0);
  $brmerge308 = $55 | $58;
  if ($brmerge308) {
   $$0262$lcssa = 0;$$lcssa291 = $52;$$lcssa292 = $51;
  } else {
   $$0262309 = 0;$60 = $52;$65 = $51;
   while(1) {
    $59 = $60 << 24 >> 24;
    $61 = (($59) + -32)|0;
    $62 = 1 << $61;
    $63 = $62 | $$0262309;
    $64 = ((($65)) + 1|0);
    HEAP32[$5>>2] = $64;
    $66 = HEAP8[$64>>0]|0;
    $67 = $66 << 24 >> 24;
    $68 = (($67) + -32)|0;
    $69 = ($68>>>0)>(31);
    $70 = 1 << $68;
    $71 = $70 & 75913;
    $72 = ($71|0)==(0);
    $brmerge = $69 | $72;
    if ($brmerge) {
     $$0262$lcssa = $63;$$lcssa291 = $66;$$lcssa292 = $64;
     break;
    } else {
     $$0262309 = $63;$60 = $66;$65 = $64;
    }
   }
  }
  $73 = ($$lcssa291<<24>>24)==(42);
  if ($73) {
   $74 = ((($$lcssa292)) + 1|0);
   $75 = HEAP8[$74>>0]|0;
   $76 = $75 << 24 >> 24;
   $77 = (_isdigit($76)|0);
   $78 = ($77|0)==(0);
   if ($78) {
    label = 23;
   } else {
    $79 = HEAP32[$5>>2]|0;
    $80 = ((($79)) + 2|0);
    $81 = HEAP8[$80>>0]|0;
    $82 = ($81<<24>>24)==(36);
    if ($82) {
     $83 = ((($79)) + 1|0);
     $84 = HEAP8[$83>>0]|0;
     $85 = $84 << 24 >> 24;
     $86 = (($85) + -48)|0;
     $87 = (($4) + ($86<<2)|0);
     HEAP32[$87>>2] = 10;
     $88 = HEAP8[$83>>0]|0;
     $89 = $88 << 24 >> 24;
     $90 = (($89) + -48)|0;
     $91 = (($3) + ($90<<3)|0);
     $92 = $91;
     $93 = $92;
     $94 = HEAP32[$93>>2]|0;
     $95 = (($92) + 4)|0;
     $96 = $95;
     $97 = HEAP32[$96>>2]|0;
     $98 = ((($79)) + 3|0);
     $$0259 = $94;$$2271 = 1;$storemerge274 = $98;
    } else {
     label = 23;
    }
   }
   if ((label|0) == 23) {
    label = 0;
    $99 = ($$1270|0)==(0);
    if (!($99)) {
     $$0 = -1;
     break;
    }
    if ($10) {
     $arglist_current = HEAP32[$2>>2]|0;
     $100 = $arglist_current;
     $101 = ((0) + 4|0);
     $expanded4 = $101;
     $expanded = (($expanded4) - 1)|0;
     $102 = (($100) + ($expanded))|0;
     $103 = ((0) + 4|0);
     $expanded8 = $103;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $104 = $102 & $expanded6;
     $105 = $104;
     $106 = HEAP32[$105>>2]|0;
     $arglist_next = ((($105)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     $363 = $106;
    } else {
     $363 = 0;
    }
    $107 = HEAP32[$5>>2]|0;
    $108 = ((($107)) + 1|0);
    $$0259 = $363;$$2271 = 0;$storemerge274 = $108;
   }
   HEAP32[$5>>2] = $storemerge274;
   $109 = ($$0259|0)<(0);
   $110 = $$0262$lcssa | 8192;
   $111 = (0 - ($$0259))|0;
   $$$0262 = $109 ? $110 : $$0262$lcssa;
   $$$0259 = $109 ? $111 : $$0259;
   $$1260 = $$$0259;$$1263 = $$$0262;$$3272 = $$2271;$115 = $storemerge274;
  } else {
   $112 = (_getint($5)|0);
   $113 = ($112|0)<(0);
   if ($113) {
    $$0 = -1;
    break;
   }
   $$pre344 = HEAP32[$5>>2]|0;
   $$1260 = $112;$$1263 = $$0262$lcssa;$$3272 = $$1270;$115 = $$pre344;
  }
  $114 = HEAP8[$115>>0]|0;
  $116 = ($114<<24>>24)==(46);
  do {
   if ($116) {
    $117 = ((($115)) + 1|0);
    $118 = HEAP8[$117>>0]|0;
    $119 = ($118<<24>>24)==(42);
    if (!($119)) {
     $155 = ((($115)) + 1|0);
     HEAP32[$5>>2] = $155;
     $156 = (_getint($5)|0);
     $$pre345$pre = HEAP32[$5>>2]|0;
     $$0254 = $156;$$pre345 = $$pre345$pre;
     break;
    }
    $120 = ((($115)) + 2|0);
    $121 = HEAP8[$120>>0]|0;
    $122 = $121 << 24 >> 24;
    $123 = (_isdigit($122)|0);
    $124 = ($123|0)==(0);
    if (!($124)) {
     $125 = HEAP32[$5>>2]|0;
     $126 = ((($125)) + 3|0);
     $127 = HEAP8[$126>>0]|0;
     $128 = ($127<<24>>24)==(36);
     if ($128) {
      $129 = ((($125)) + 2|0);
      $130 = HEAP8[$129>>0]|0;
      $131 = $130 << 24 >> 24;
      $132 = (($131) + -48)|0;
      $133 = (($4) + ($132<<2)|0);
      HEAP32[$133>>2] = 10;
      $134 = HEAP8[$129>>0]|0;
      $135 = $134 << 24 >> 24;
      $136 = (($135) + -48)|0;
      $137 = (($3) + ($136<<3)|0);
      $138 = $137;
      $139 = $138;
      $140 = HEAP32[$139>>2]|0;
      $141 = (($138) + 4)|0;
      $142 = $141;
      $143 = HEAP32[$142>>2]|0;
      $144 = ((($125)) + 4|0);
      HEAP32[$5>>2] = $144;
      $$0254 = $140;$$pre345 = $144;
      break;
     }
    }
    $145 = ($$3272|0)==(0);
    if (!($145)) {
     $$0 = -1;
     break L1;
    }
    if ($10) {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $146 = $arglist_current2;
     $147 = ((0) + 4|0);
     $expanded11 = $147;
     $expanded10 = (($expanded11) - 1)|0;
     $148 = (($146) + ($expanded10))|0;
     $149 = ((0) + 4|0);
     $expanded15 = $149;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $150 = $148 & $expanded13;
     $151 = $150;
     $152 = HEAP32[$151>>2]|0;
     $arglist_next3 = ((($151)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $364 = $152;
    } else {
     $364 = 0;
    }
    $153 = HEAP32[$5>>2]|0;
    $154 = ((($153)) + 2|0);
    HEAP32[$5>>2] = $154;
    $$0254 = $364;$$pre345 = $154;
   } else {
    $$0254 = -1;$$pre345 = $115;
   }
  } while(0);
  $$0252 = 0;$158 = $$pre345;
  while(1) {
   $157 = HEAP8[$158>>0]|0;
   $159 = $157 << 24 >> 24;
   $160 = (($159) + -65)|0;
   $161 = ($160>>>0)>(57);
   if ($161) {
    $$0 = -1;
    break L1;
   }
   $162 = ((($158)) + 1|0);
   HEAP32[$5>>2] = $162;
   $163 = HEAP8[$158>>0]|0;
   $164 = $163 << 24 >> 24;
   $165 = (($164) + -65)|0;
   $166 = ((12213 + (($$0252*58)|0)|0) + ($165)|0);
   $167 = HEAP8[$166>>0]|0;
   $168 = $167&255;
   $169 = (($168) + -1)|0;
   $170 = ($169>>>0)<(8);
   if ($170) {
    $$0252 = $168;$158 = $162;
   } else {
    break;
   }
  }
  $171 = ($167<<24>>24)==(0);
  if ($171) {
   $$0 = -1;
   break;
  }
  $172 = ($167<<24>>24)==(19);
  $173 = ($$0253|0)>(-1);
  do {
   if ($172) {
    if ($173) {
     $$0 = -1;
     break L1;
    } else {
     label = 50;
    }
   } else {
    if ($173) {
     $174 = (($4) + ($$0253<<2)|0);
     HEAP32[$174>>2] = $168;
     $175 = (($3) + ($$0253<<3)|0);
     $176 = $175;
     $177 = $176;
     $178 = HEAP32[$177>>2]|0;
     $179 = (($176) + 4)|0;
     $180 = $179;
     $181 = HEAP32[$180>>2]|0;
     $182 = $6;
     $183 = $182;
     HEAP32[$183>>2] = $178;
     $184 = (($182) + 4)|0;
     $185 = $184;
     HEAP32[$185>>2] = $181;
     label = 50;
     break;
    }
    if (!($10)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg($6,$168,$2);
    $$pre346 = HEAP32[$5>>2]|0;
    $187 = $$pre346;
   }
  } while(0);
  if ((label|0) == 50) {
   label = 0;
   if ($10) {
    $187 = $162;
   } else {
    $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
    continue;
   }
  }
  $186 = ((($187)) + -1|0);
  $188 = HEAP8[$186>>0]|0;
  $189 = $188 << 24 >> 24;
  $190 = ($$0252|0)!=(0);
  $191 = $189 & 15;
  $192 = ($191|0)==(3);
  $or$cond276 = $190 & $192;
  $193 = $189 & -33;
  $$0235 = $or$cond276 ? $193 : $189;
  $194 = $$1263 & 8192;
  $195 = ($194|0)==(0);
  $196 = $$1263 & -65537;
  $$1263$ = $195 ? $$1263 : $196;
  L73: do {
   switch ($$0235|0) {
   case 110:  {
    $trunc = $$0252&255;
    switch ($trunc<<24>>24) {
    case 0:  {
     $203 = HEAP32[$6>>2]|0;
     HEAP32[$203>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 1:  {
     $204 = HEAP32[$6>>2]|0;
     HEAP32[$204>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 2:  {
     $205 = ($$1248|0)<(0);
     $206 = $205 << 31 >> 31;
     $207 = HEAP32[$6>>2]|0;
     $208 = $207;
     $209 = $208;
     HEAP32[$209>>2] = $$1248;
     $210 = (($208) + 4)|0;
     $211 = $210;
     HEAP32[$211>>2] = $206;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 3:  {
     $212 = $$1248&65535;
     $213 = HEAP32[$6>>2]|0;
     HEAP16[$213>>1] = $212;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 4:  {
     $214 = $$1248&255;
     $215 = HEAP32[$6>>2]|0;
     HEAP8[$215>>0] = $214;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 6:  {
     $216 = HEAP32[$6>>2]|0;
     HEAP32[$216>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    case 7:  {
     $217 = ($$1248|0)<(0);
     $218 = $217 << 31 >> 31;
     $219 = HEAP32[$6>>2]|0;
     $220 = $219;
     $221 = $220;
     HEAP32[$221>>2] = $$1248;
     $222 = (($220) + 4)|0;
     $223 = $222;
     HEAP32[$223>>2] = $218;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
     break;
    }
    default: {
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $224 = ($$0254>>>0)>(8);
    $225 = $224 ? $$0254 : 8;
    $226 = $$1263$ | 8;
    $$1236 = 120;$$1255 = $225;$$3265 = $226;
    label = 62;
    break;
   }
   case 88: case 120:  {
    $$1236 = $$0235;$$1255 = $$0254;$$3265 = $$1263$;
    label = 62;
    break;
   }
   case 111:  {
    $242 = $6;
    $243 = $242;
    $244 = HEAP32[$243>>2]|0;
    $245 = (($242) + 4)|0;
    $246 = $245;
    $247 = HEAP32[$246>>2]|0;
    $248 = (_fmt_o($244,$247,$11)|0);
    $249 = $$1263$ & 8;
    $250 = ($249|0)==(0);
    $251 = $248;
    $252 = (($12) - ($251))|0;
    $253 = ($$0254|0)>($252|0);
    $254 = (($252) + 1)|0;
    $255 = $250 | $253;
    $$0254$$0254$ = $255 ? $$0254 : $254;
    $$0228 = $248;$$1233 = 0;$$1238 = 12677;$$2256 = $$0254$$0254$;$$4266 = $$1263$;$280 = $244;$282 = $247;
    label = 68;
    break;
   }
   case 105: case 100:  {
    $256 = $6;
    $257 = $256;
    $258 = HEAP32[$257>>2]|0;
    $259 = (($256) + 4)|0;
    $260 = $259;
    $261 = HEAP32[$260>>2]|0;
    $262 = ($261|0)<(0);
    if ($262) {
     $263 = (_i64Subtract(0,0,($258|0),($261|0))|0);
     $264 = tempRet0;
     $265 = $6;
     $266 = $265;
     HEAP32[$266>>2] = $263;
     $267 = (($265) + 4)|0;
     $268 = $267;
     HEAP32[$268>>2] = $264;
     $$0232 = 1;$$0237 = 12677;$275 = $263;$276 = $264;
     label = 67;
     break L73;
    } else {
     $269 = $$1263$ & 2048;
     $270 = ($269|0)==(0);
     $271 = $$1263$ & 1;
     $272 = ($271|0)==(0);
     $$ = $272 ? 12677 : (12679);
     $$$ = $270 ? $$ : (12678);
     $273 = $$1263$ & 2049;
     $274 = ($273|0)!=(0);
     $$279$ = $274&1;
     $$0232 = $$279$;$$0237 = $$$;$275 = $258;$276 = $261;
     label = 67;
     break L73;
    }
    break;
   }
   case 117:  {
    $197 = $6;
    $198 = $197;
    $199 = HEAP32[$198>>2]|0;
    $200 = (($197) + 4)|0;
    $201 = $200;
    $202 = HEAP32[$201>>2]|0;
    $$0232 = 0;$$0237 = 12677;$275 = $199;$276 = $202;
    label = 67;
    break;
   }
   case 99:  {
    $292 = $6;
    $293 = $292;
    $294 = HEAP32[$293>>2]|0;
    $295 = (($292) + 4)|0;
    $296 = $295;
    $297 = HEAP32[$296>>2]|0;
    $298 = $294&255;
    HEAP8[$13>>0] = $298;
    $$2 = $13;$$2234 = 0;$$2239 = 12677;$$2251 = $11;$$5 = 1;$$6268 = $196;
    break;
   }
   case 109:  {
    $299 = (___errno_location()|0);
    $300 = HEAP32[$299>>2]|0;
    $301 = (_strerror($300)|0);
    $$1 = $301;
    label = 72;
    break;
   }
   case 115:  {
    $302 = HEAP32[$6>>2]|0;
    $303 = ($302|0)!=(0|0);
    $304 = $303 ? $302 : 13226;
    $$1 = $304;
    label = 72;
    break;
   }
   case 67:  {
    $311 = $6;
    $312 = $311;
    $313 = HEAP32[$312>>2]|0;
    $314 = (($311) + 4)|0;
    $315 = $314;
    $316 = HEAP32[$315>>2]|0;
    HEAP32[$8>>2] = $313;
    HEAP32[$14>>2] = 0;
    HEAP32[$6>>2] = $8;
    $$4258354 = -1;$365 = $8;
    label = 76;
    break;
   }
   case 83:  {
    $$pre348 = HEAP32[$6>>2]|0;
    $317 = ($$0254|0)==(0);
    if ($317) {
     _pad($0,32,$$1260,0,$$1263$);
     $$0240$lcssa356 = 0;
     label = 85;
    } else {
     $$4258354 = $$0254;$365 = $$pre348;
     label = 76;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $339 = +HEAPF64[$6>>3];
    $340 = (_fmt_fp($0,$339,$$1260,$$0254,$$1263$,$$0235)|0);
    $$0243 = $340;$$0247 = $$1248;$$0269 = $$3272;
    continue L1;
    break;
   }
   default: {
    $$2 = $20;$$2234 = 0;$$2239 = 12677;$$2251 = $11;$$5 = $$0254;$$6268 = $$1263$;
   }
   }
  } while(0);
  L97: do {
   if ((label|0) == 62) {
    label = 0;
    $227 = $6;
    $228 = $227;
    $229 = HEAP32[$228>>2]|0;
    $230 = (($227) + 4)|0;
    $231 = $230;
    $232 = HEAP32[$231>>2]|0;
    $233 = $$1236 & 32;
    $234 = (_fmt_x($229,$232,$11,$233)|0);
    $235 = ($229|0)==(0);
    $236 = ($232|0)==(0);
    $237 = $235 & $236;
    $238 = $$3265 & 8;
    $239 = ($238|0)==(0);
    $or$cond278 = $239 | $237;
    $240 = $$1236 >> 4;
    $241 = (12677 + ($240)|0);
    $$286 = $or$cond278 ? 12677 : $241;
    $$287 = $or$cond278 ? 0 : 2;
    $$0228 = $234;$$1233 = $$287;$$1238 = $$286;$$2256 = $$1255;$$4266 = $$3265;$280 = $229;$282 = $232;
    label = 68;
   }
   else if ((label|0) == 67) {
    label = 0;
    $277 = (_fmt_u($275,$276,$11)|0);
    $$0228 = $277;$$1233 = $$0232;$$1238 = $$0237;$$2256 = $$0254;$$4266 = $$1263$;$280 = $275;$282 = $276;
    label = 68;
   }
   else if ((label|0) == 72) {
    label = 0;
    $305 = (_memchr($$1,0,$$0254)|0);
    $306 = ($305|0)==(0|0);
    $307 = $305;
    $308 = $$1;
    $309 = (($307) - ($308))|0;
    $310 = (($$1) + ($$0254)|0);
    $$3257 = $306 ? $$0254 : $309;
    $$1250 = $306 ? $310 : $305;
    $$2 = $$1;$$2234 = 0;$$2239 = 12677;$$2251 = $$1250;$$5 = $$3257;$$6268 = $196;
   }
   else if ((label|0) == 76) {
    label = 0;
    $$0229316 = $365;$$0240315 = 0;$$1244314 = 0;
    while(1) {
     $318 = HEAP32[$$0229316>>2]|0;
     $319 = ($318|0)==(0);
     if ($319) {
      $$0240$lcssa = $$0240315;$$2245 = $$1244314;
      break;
     }
     $320 = (_wctomb($9,$318)|0);
     $321 = ($320|0)<(0);
     $322 = (($$4258354) - ($$0240315))|0;
     $323 = ($320>>>0)>($322>>>0);
     $or$cond281 = $321 | $323;
     if ($or$cond281) {
      $$0240$lcssa = $$0240315;$$2245 = $320;
      break;
     }
     $324 = ((($$0229316)) + 4|0);
     $325 = (($320) + ($$0240315))|0;
     $326 = ($$4258354>>>0)>($325>>>0);
     if ($326) {
      $$0229316 = $324;$$0240315 = $325;$$1244314 = $320;
     } else {
      $$0240$lcssa = $325;$$2245 = $320;
      break;
     }
    }
    $327 = ($$2245|0)<(0);
    if ($327) {
     $$0 = -1;
     break L1;
    }
    _pad($0,32,$$1260,$$0240$lcssa,$$1263$);
    $328 = ($$0240$lcssa|0)==(0);
    if ($328) {
     $$0240$lcssa356 = 0;
     label = 85;
    } else {
     $$1230327 = $365;$$1241326 = 0;
     while(1) {
      $329 = HEAP32[$$1230327>>2]|0;
      $330 = ($329|0)==(0);
      if ($330) {
       $$0240$lcssa356 = $$0240$lcssa;
       label = 85;
       break L97;
      }
      $331 = (_wctomb($9,$329)|0);
      $332 = (($331) + ($$1241326))|0;
      $333 = ($332|0)>($$0240$lcssa|0);
      if ($333) {
       $$0240$lcssa356 = $$0240$lcssa;
       label = 85;
       break L97;
      }
      $334 = ((($$1230327)) + 4|0);
      _out($0,$9,$331);
      $335 = ($332>>>0)<($$0240$lcssa>>>0);
      if ($335) {
       $$1230327 = $334;$$1241326 = $332;
      } else {
       $$0240$lcssa356 = $$0240$lcssa;
       label = 85;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 68) {
   label = 0;
   $278 = ($$2256|0)>(-1);
   $279 = $$4266 & -65537;
   $$$4266 = $278 ? $279 : $$4266;
   $281 = ($280|0)!=(0);
   $283 = ($282|0)!=(0);
   $284 = $281 | $283;
   $285 = ($$2256|0)!=(0);
   $or$cond = $285 | $284;
   $286 = $$0228;
   $287 = (($12) - ($286))|0;
   $288 = $284 ^ 1;
   $289 = $288&1;
   $290 = (($287) + ($289))|0;
   $291 = ($$2256|0)>($290|0);
   $$2256$ = $291 ? $$2256 : $290;
   $$2256$$$2256 = $or$cond ? $$2256$ : $$2256;
   $$0228$ = $or$cond ? $$0228 : $11;
   $$2 = $$0228$;$$2234 = $$1233;$$2239 = $$1238;$$2251 = $11;$$5 = $$2256$$$2256;$$6268 = $$$4266;
  }
  else if ((label|0) == 85) {
   label = 0;
   $336 = $$1263$ ^ 8192;
   _pad($0,32,$$1260,$$0240$lcssa356,$336);
   $337 = ($$1260|0)>($$0240$lcssa356|0);
   $338 = $337 ? $$1260 : $$0240$lcssa356;
   $$0243 = $338;$$0247 = $$1248;$$0269 = $$3272;
   continue;
  }
  $341 = $$2251;
  $342 = $$2;
  $343 = (($341) - ($342))|0;
  $344 = ($$5|0)<($343|0);
  $$$5 = $344 ? $343 : $$5;
  $345 = (($$$5) + ($$2234))|0;
  $346 = ($$1260|0)<($345|0);
  $$2261 = $346 ? $345 : $$1260;
  _pad($0,32,$$2261,$345,$$6268);
  _out($0,$$2239,$$2234);
  $347 = $$6268 ^ 65536;
  _pad($0,48,$$2261,$345,$347);
  _pad($0,48,$$$5,$343,0);
  _out($0,$$2,$343);
  $348 = $$6268 ^ 8192;
  _pad($0,32,$$2261,$345,$348);
  $$0243 = $$2261;$$0247 = $$1248;$$0269 = $$3272;
 }
 L116: do {
  if ((label|0) == 88) {
   $349 = ($0|0)==(0|0);
   if ($349) {
    $350 = ($$0269|0)==(0);
    if ($350) {
     $$0 = 0;
    } else {
     $$2242302 = 1;
     while(1) {
      $351 = (($4) + ($$2242302<<2)|0);
      $352 = HEAP32[$351>>2]|0;
      $353 = ($352|0)==(0);
      if ($353) {
       $$2242$lcssa = $$2242302;
       break;
      }
      $355 = (($3) + ($$2242302<<3)|0);
      _pop_arg($355,$352,$2);
      $356 = (($$2242302) + 1)|0;
      $357 = ($$2242302|0)<(9);
      if ($357) {
       $$2242302 = $356;
      } else {
       $$2242$lcssa = $356;
       break;
      }
     }
     $354 = ($$2242$lcssa|0)<(10);
     if ($354) {
      $$3300 = $$2242$lcssa;
      while(1) {
       $360 = (($4) + ($$3300<<2)|0);
       $361 = HEAP32[$360>>2]|0;
       $362 = ($361|0)==(0);
       if (!($362)) {
        $$0 = -1;
        break L116;
       }
       $358 = (($$3300) + 1)|0;
       $359 = ($$3300|0)<(9);
       if ($359) {
        $$3300 = $358;
       } else {
        $$0 = 1;
        break;
       }
      }
     } else {
      $$0 = 1;
     }
    }
   } else {
    $$0 = $$1248;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _out($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 & 32;
 $5 = ($4|0)==(0);
 if ($5) {
  (___fwritex($1,$2,$0)|0);
 }
 return;
}
function _getint($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$04 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (_isdigit($3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $$0$lcssa = 0;
 } else {
  $$04 = 0;
  while(1) {
   $6 = ($$04*10)|0;
   $7 = HEAP32[$0>>2]|0;
   $8 = HEAP8[$7>>0]|0;
   $9 = $8 << 24 >> 24;
   $10 = (($6) + -48)|0;
   $11 = (($10) + ($9))|0;
   $12 = ((($7)) + 1|0);
   HEAP32[$0>>2] = $12;
   $13 = HEAP8[$12>>0]|0;
   $14 = $13 << 24 >> 24;
   $15 = (_isdigit($14)|0);
   $16 = ($15|0)==(0);
   if ($16) {
    $$0$lcssa = $11;
    break;
   } else {
    $$04 = $11;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _pop_arg($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(20);
 L1: do {
  if (!($3)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = HEAP32[$2>>2]|0;
     $4 = $arglist_current;
     $5 = ((0) + 4|0);
     $expanded28 = $5;
     $expanded = (($expanded28) - 1)|0;
     $6 = (($4) + ($expanded))|0;
     $7 = ((0) + 4|0);
     $expanded32 = $7;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $8 = $6 & $expanded30;
     $9 = $8;
     $10 = HEAP32[$9>>2]|0;
     $arglist_next = ((($9)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     HEAP32[$0>>2] = $10;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $11 = $arglist_current2;
     $12 = ((0) + 4|0);
     $expanded35 = $12;
     $expanded34 = (($expanded35) - 1)|0;
     $13 = (($11) + ($expanded34))|0;
     $14 = ((0) + 4|0);
     $expanded39 = $14;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $15 = $13 & $expanded37;
     $16 = $15;
     $17 = HEAP32[$16>>2]|0;
     $arglist_next3 = ((($16)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $18 = ($17|0)<(0);
     $19 = $18 << 31 >> 31;
     $20 = $0;
     $21 = $20;
     HEAP32[$21>>2] = $17;
     $22 = (($20) + 4)|0;
     $23 = $22;
     HEAP32[$23>>2] = $19;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$2>>2]|0;
     $24 = $arglist_current5;
     $25 = ((0) + 4|0);
     $expanded42 = $25;
     $expanded41 = (($expanded42) - 1)|0;
     $26 = (($24) + ($expanded41))|0;
     $27 = ((0) + 4|0);
     $expanded46 = $27;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $28 = $26 & $expanded44;
     $29 = $28;
     $30 = HEAP32[$29>>2]|0;
     $arglist_next6 = ((($29)) + 4|0);
     HEAP32[$2>>2] = $arglist_next6;
     $31 = $0;
     $32 = $31;
     HEAP32[$32>>2] = $30;
     $33 = (($31) + 4)|0;
     $34 = $33;
     HEAP32[$34>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$2>>2]|0;
     $35 = $arglist_current8;
     $36 = ((0) + 8|0);
     $expanded49 = $36;
     $expanded48 = (($expanded49) - 1)|0;
     $37 = (($35) + ($expanded48))|0;
     $38 = ((0) + 8|0);
     $expanded53 = $38;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $39 = $37 & $expanded51;
     $40 = $39;
     $41 = $40;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $44 = (($41) + 4)|0;
     $45 = $44;
     $46 = HEAP32[$45>>2]|0;
     $arglist_next9 = ((($40)) + 8|0);
     HEAP32[$2>>2] = $arglist_next9;
     $47 = $0;
     $48 = $47;
     HEAP32[$48>>2] = $43;
     $49 = (($47) + 4)|0;
     $50 = $49;
     HEAP32[$50>>2] = $46;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$2>>2]|0;
     $51 = $arglist_current11;
     $52 = ((0) + 4|0);
     $expanded56 = $52;
     $expanded55 = (($expanded56) - 1)|0;
     $53 = (($51) + ($expanded55))|0;
     $54 = ((0) + 4|0);
     $expanded60 = $54;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $55 = $53 & $expanded58;
     $56 = $55;
     $57 = HEAP32[$56>>2]|0;
     $arglist_next12 = ((($56)) + 4|0);
     HEAP32[$2>>2] = $arglist_next12;
     $58 = $57&65535;
     $59 = $58 << 16 >> 16;
     $60 = ($59|0)<(0);
     $61 = $60 << 31 >> 31;
     $62 = $0;
     $63 = $62;
     HEAP32[$63>>2] = $59;
     $64 = (($62) + 4)|0;
     $65 = $64;
     HEAP32[$65>>2] = $61;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$2>>2]|0;
     $66 = $arglist_current14;
     $67 = ((0) + 4|0);
     $expanded63 = $67;
     $expanded62 = (($expanded63) - 1)|0;
     $68 = (($66) + ($expanded62))|0;
     $69 = ((0) + 4|0);
     $expanded67 = $69;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $70 = $68 & $expanded65;
     $71 = $70;
     $72 = HEAP32[$71>>2]|0;
     $arglist_next15 = ((($71)) + 4|0);
     HEAP32[$2>>2] = $arglist_next15;
     $$mask31 = $72 & 65535;
     $73 = $0;
     $74 = $73;
     HEAP32[$74>>2] = $$mask31;
     $75 = (($73) + 4)|0;
     $76 = $75;
     HEAP32[$76>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$2>>2]|0;
     $77 = $arglist_current17;
     $78 = ((0) + 4|0);
     $expanded70 = $78;
     $expanded69 = (($expanded70) - 1)|0;
     $79 = (($77) + ($expanded69))|0;
     $80 = ((0) + 4|0);
     $expanded74 = $80;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $81 = $79 & $expanded72;
     $82 = $81;
     $83 = HEAP32[$82>>2]|0;
     $arglist_next18 = ((($82)) + 4|0);
     HEAP32[$2>>2] = $arglist_next18;
     $84 = $83&255;
     $85 = $84 << 24 >> 24;
     $86 = ($85|0)<(0);
     $87 = $86 << 31 >> 31;
     $88 = $0;
     $89 = $88;
     HEAP32[$89>>2] = $85;
     $90 = (($88) + 4)|0;
     $91 = $90;
     HEAP32[$91>>2] = $87;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$2>>2]|0;
     $92 = $arglist_current20;
     $93 = ((0) + 4|0);
     $expanded77 = $93;
     $expanded76 = (($expanded77) - 1)|0;
     $94 = (($92) + ($expanded76))|0;
     $95 = ((0) + 4|0);
     $expanded81 = $95;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $96 = $94 & $expanded79;
     $97 = $96;
     $98 = HEAP32[$97>>2]|0;
     $arglist_next21 = ((($97)) + 4|0);
     HEAP32[$2>>2] = $arglist_next21;
     $$mask = $98 & 255;
     $99 = $0;
     $100 = $99;
     HEAP32[$100>>2] = $$mask;
     $101 = (($99) + 4)|0;
     $102 = $101;
     HEAP32[$102>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$2>>2]|0;
     $103 = $arglist_current23;
     $104 = ((0) + 8|0);
     $expanded84 = $104;
     $expanded83 = (($expanded84) - 1)|0;
     $105 = (($103) + ($expanded83))|0;
     $106 = ((0) + 8|0);
     $expanded88 = $106;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $107 = $105 & $expanded86;
     $108 = $107;
     $109 = +HEAPF64[$108>>3];
     $arglist_next24 = ((($108)) + 8|0);
     HEAP32[$2>>2] = $arglist_next24;
     HEAPF64[$0>>3] = $109;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$2>>2]|0;
     $110 = $arglist_current26;
     $111 = ((0) + 8|0);
     $expanded91 = $111;
     $expanded90 = (($expanded91) - 1)|0;
     $112 = (($110) + ($expanded90))|0;
     $113 = ((0) + 8|0);
     $expanded95 = $113;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $114 = $112 & $expanded93;
     $115 = $114;
     $116 = +HEAPF64[$115>>3];
     $arglist_next27 = ((($115)) + 8|0);
     HEAP32[$2>>2] = $arglist_next27;
     HEAPF64[$0>>3] = $116;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05$lcssa = 0, $$056 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0);
 $5 = ($1|0)==(0);
 $6 = $4 & $5;
 if ($6) {
  $$05$lcssa = $2;
 } else {
  $$056 = $2;$15 = $1;$8 = $0;
  while(1) {
   $7 = $8 & 15;
   $9 = (12722 + ($7)|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10&255;
   $12 = $11 | $3;
   $13 = $12&255;
   $14 = ((($$056)) + -1|0);
   HEAP8[$14>>0] = $13;
   $16 = (_bitshift64Lshr(($8|0),($15|0),4)|0);
   $17 = tempRet0;
   $18 = ($16|0)==(0);
   $19 = ($17|0)==(0);
   $20 = $18 & $19;
   if ($20) {
    $$05$lcssa = $14;
    break;
   } else {
    $$056 = $14;$15 = $17;$8 = $16;
   }
  }
 }
 return ($$05$lcssa|0);
}
function _fmt_o($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0);
 $4 = ($1|0)==(0);
 $5 = $3 & $4;
 if ($5) {
  $$0$lcssa = $2;
 } else {
  $$06 = $2;$11 = $1;$7 = $0;
  while(1) {
   $6 = $7&255;
   $8 = $6 & 7;
   $9 = $8 | 48;
   $10 = ((($$06)) + -1|0);
   HEAP8[$10>>0] = $9;
   $12 = (_bitshift64Lshr(($7|0),($11|0),3)|0);
   $13 = tempRet0;
   $14 = ($12|0)==(0);
   $15 = ($13|0)==(0);
   $16 = $14 & $15;
   if ($16) {
    $$0$lcssa = $10;
    break;
   } else {
    $$06 = $10;$11 = $13;$7 = $12;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _fmt_u($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(0);
 $4 = ($0>>>0)>(4294967295);
 $5 = ($1|0)==(0);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $$0914 = $2;$8 = $0;$9 = $1;
  while(1) {
   $10 = (___uremdi3(($8|0),($9|0),10,0)|0);
   $11 = tempRet0;
   $12 = $10&255;
   $13 = $12 | 48;
   $14 = ((($$0914)) + -1|0);
   HEAP8[$14>>0] = $13;
   $15 = (___udivdi3(($8|0),($9|0),10,0)|0);
   $16 = tempRet0;
   $17 = ($9>>>0)>(9);
   $18 = ($8>>>0)>(4294967295);
   $19 = ($9|0)==(9);
   $20 = $19 & $18;
   $21 = $17 | $20;
   if ($21) {
    $$0914 = $14;$8 = $15;$9 = $16;
   } else {
    break;
   }
  }
  $$010$lcssa$off0 = $15;$$09$lcssa = $14;
 } else {
  $$010$lcssa$off0 = $0;$$09$lcssa = $2;
 }
 $22 = ($$010$lcssa$off0|0)==(0);
 if ($22) {
  $$1$lcssa = $$09$lcssa;
 } else {
  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;
  while(1) {
   $23 = (($$012>>>0) % 10)&-1;
   $24 = $23 | 48;
   $25 = $24&255;
   $26 = ((($$111)) + -1|0);
   HEAP8[$26>>0] = $25;
   $27 = (($$012>>>0) / 10)&-1;
   $28 = ($$012>>>0)<(10);
   if ($28) {
    $$1$lcssa = $26;
    break;
   } else {
    $$012 = $27;$$111 = $26;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _pad($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $5 = sp;
 $6 = $4 & 73728;
 $7 = ($6|0)==(0);
 $8 = ($2|0)>($3|0);
 $or$cond = $8 & $7;
 if ($or$cond) {
  $9 = (($2) - ($3))|0;
  $10 = $1 << 24 >> 24;
  $11 = ($9>>>0)<(256);
  $12 = $11 ? $9 : 256;
  (_memset(($5|0),($10|0),($12|0))|0);
  $13 = ($9>>>0)>(255);
  if ($13) {
   $14 = (($2) - ($3))|0;
   $$011 = $9;
   while(1) {
    _out($0,$5,256);
    $15 = (($$011) + -256)|0;
    $16 = ($15>>>0)>(255);
    if ($16) {
     $$011 = $15;
    } else {
     break;
    }
   }
   $17 = $14 & 255;
   $$0$lcssa = $17;
  } else {
   $$0$lcssa = $9;
  }
  _out($0,$5,$$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_wcrtomb($0,$1,0)|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function _fmt_fp($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$$ = 0, $$$$564 = 0.0, $$$3484 = 0, $$$3484699 = 0, $$$3484700 = 0, $$$3501 = 0, $$$4502 = 0, $$$543 = 0.0, $$$564 = 0.0, $$0 = 0, $$0463$lcssa = 0, $$0463587 = 0, $$0464597 = 0, $$0471 = 0.0, $$0479 = 0, $$0487644 = 0, $$0488 = 0, $$0488655 = 0, $$0488657 = 0;
 var $$0496$$9 = 0, $$0497656 = 0, $$0498 = 0, $$0509585 = 0.0, $$0510 = 0, $$0511 = 0, $$0514639 = 0, $$0520 = 0, $$0521 = 0, $$0521$ = 0, $$0523 = 0, $$0527 = 0, $$0527$in633 = 0, $$0530638 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0;
 var $$1482663 = 0, $$1489643 = 0, $$1499$lcssa = 0, $$1499662 = 0, $$1508586 = 0, $$1512$lcssa = 0, $$1512610 = 0, $$1515 = 0, $$1524 = 0, $$1526 = 0, $$1528617 = 0, $$1531$lcssa = 0, $$1531632 = 0, $$1601 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2476$$549 = 0, $$2476$$551 = 0, $$2483$ph = 0;
 var $$2500 = 0, $$2513 = 0, $$2516621 = 0, $$2529 = 0, $$2532620 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484650 = 0, $$3501$lcssa = 0, $$3501649 = 0, $$3533616 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478593 = 0, $$4492 = 0, $$4502 = 0, $$4518 = 0, $$5$lcssa = 0, $$534$ = 0;
 var $$540 = 0, $$540$ = 0, $$543 = 0.0, $$548 = 0, $$5486$lcssa = 0, $$5486626 = 0, $$5493600 = 0, $$550 = 0, $$5519$ph = 0, $$557 = 0, $$5605 = 0, $$561 = 0, $$564 = 0.0, $$6 = 0, $$6494592 = 0, $$7495604 = 0, $$7505 = 0, $$7505$ = 0, $$7505$ph = 0, $$8 = 0;
 var $$9$ph = 0, $$lcssa675 = 0, $$neg = 0, $$neg568 = 0, $$pn = 0, $$pr = 0, $$pr566 = 0, $$pre = 0, $$pre$phi691Z2D = 0, $$pre$phi698Z2D = 0, $$pre690 = 0, $$pre693 = 0, $$pre697 = 0, $$sink = 0, $$sink547$lcssa = 0, $$sink547625 = 0, $$sink560 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0.0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0.0, $119 = 0.0, $12 = 0;
 var $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0.0, $232 = 0.0, $233 = 0, $234 = 0.0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0;
 var $339 = 0, $34 = 0.0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0;
 var $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0;
 var $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $not$ = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond542 = 0, $or$cond545 = 0, $or$cond556 = 0, $or$cond6 = 0, $scevgep686 = 0, $scevgep686687 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(560|0);
 $6 = sp + 8|0;
 $7 = sp;
 $8 = sp + 524|0;
 $9 = $8;
 $10 = sp + 512|0;
 HEAP32[$7>>2] = 0;
 $11 = ((($10)) + 12|0);
 (___DOUBLE_BITS_537($1)|0);
 $12 = tempRet0;
 $13 = ($12|0)<(0);
 if ($13) {
  $14 = - $1;
  $$0471 = $14;$$0520 = 1;$$0521 = 12687;
 } else {
  $15 = $4 & 2048;
  $16 = ($15|0)==(0);
  $17 = $4 & 1;
  $18 = ($17|0)==(0);
  $$ = $18 ? (12688) : (12693);
  $$$ = $16 ? $$ : (12690);
  $19 = $4 & 2049;
  $20 = ($19|0)!=(0);
  $$534$ = $20&1;
  $$0471 = $1;$$0520 = $$534$;$$0521 = $$$;
 }
 (___DOUBLE_BITS_537($$0471)|0);
 $21 = tempRet0;
 $22 = $21 & 2146435072;
 $23 = (0)==(0);
 $24 = ($22|0)==(2146435072);
 $25 = $23 & $24;
 do {
  if ($25) {
   $26 = $5 & 32;
   $27 = ($26|0)!=(0);
   $28 = $27 ? 12706 : 12710;
   $29 = ($$0471 != $$0471) | (0.0 != 0.0);
   $30 = $27 ? 12714 : 12718;
   $$0510 = $29 ? $30 : $28;
   $31 = (($$0520) + 3)|0;
   $32 = $4 & -65537;
   _pad($0,32,$2,$31,$32);
   _out($0,$$0521,$$0520);
   _out($0,$$0510,3);
   $33 = $4 ^ 8192;
   _pad($0,32,$2,$31,$33);
   $$sink560 = $31;
  } else {
   $34 = (+_frexpl($$0471,$7));
   $35 = $34 * 2.0;
   $36 = $35 != 0.0;
   if ($36) {
    $37 = HEAP32[$7>>2]|0;
    $38 = (($37) + -1)|0;
    HEAP32[$7>>2] = $38;
   }
   $39 = $5 | 32;
   $40 = ($39|0)==(97);
   if ($40) {
    $41 = $5 & 32;
    $42 = ($41|0)==(0);
    $43 = ((($$0521)) + 9|0);
    $$0521$ = $42 ? $$0521 : $43;
    $44 = $$0520 | 2;
    $45 = ($3>>>0)>(11);
    $46 = (12 - ($3))|0;
    $47 = ($46|0)==(0);
    $48 = $45 | $47;
    do {
     if ($48) {
      $$1472 = $35;
     } else {
      $$0509585 = 8.0;$$1508586 = $46;
      while(1) {
       $49 = (($$1508586) + -1)|0;
       $50 = $$0509585 * 16.0;
       $51 = ($49|0)==(0);
       if ($51) {
        break;
       } else {
        $$0509585 = $50;$$1508586 = $49;
       }
      }
      $52 = HEAP8[$$0521$>>0]|0;
      $53 = ($52<<24>>24)==(45);
      if ($53) {
       $54 = - $35;
       $55 = $54 - $50;
       $56 = $50 + $55;
       $57 = - $56;
       $$1472 = $57;
       break;
      } else {
       $58 = $35 + $50;
       $59 = $58 - $50;
       $$1472 = $59;
       break;
      }
     }
    } while(0);
    $60 = HEAP32[$7>>2]|0;
    $61 = ($60|0)<(0);
    $62 = (0 - ($60))|0;
    $63 = $61 ? $62 : $60;
    $64 = ($63|0)<(0);
    $65 = $64 << 31 >> 31;
    $66 = (_fmt_u($63,$65,$11)|0);
    $67 = ($66|0)==($11|0);
    if ($67) {
     $68 = ((($10)) + 11|0);
     HEAP8[$68>>0] = 48;
     $$0511 = $68;
    } else {
     $$0511 = $66;
    }
    $69 = $60 >> 31;
    $70 = $69 & 2;
    $71 = (($70) + 43)|0;
    $72 = $71&255;
    $73 = ((($$0511)) + -1|0);
    HEAP8[$73>>0] = $72;
    $74 = (($5) + 15)|0;
    $75 = $74&255;
    $76 = ((($$0511)) + -2|0);
    HEAP8[$76>>0] = $75;
    $77 = ($3|0)<(1);
    $78 = $4 & 8;
    $79 = ($78|0)==(0);
    $$0523 = $8;$$2473 = $$1472;
    while(1) {
     $80 = (~~(($$2473)));
     $81 = (12722 + ($80)|0);
     $82 = HEAP8[$81>>0]|0;
     $83 = $82&255;
     $84 = $41 | $83;
     $85 = $84&255;
     $86 = ((($$0523)) + 1|0);
     HEAP8[$$0523>>0] = $85;
     $87 = (+($80|0));
     $88 = $$2473 - $87;
     $89 = $88 * 16.0;
     $90 = $86;
     $91 = (($90) - ($9))|0;
     $92 = ($91|0)==(1);
     if ($92) {
      $93 = $89 == 0.0;
      $or$cond3$not = $77 & $93;
      $or$cond = $79 & $or$cond3$not;
      if ($or$cond) {
       $$1524 = $86;
      } else {
       $94 = ((($$0523)) + 2|0);
       HEAP8[$86>>0] = 46;
       $$1524 = $94;
      }
     } else {
      $$1524 = $86;
     }
     $95 = $89 != 0.0;
     if ($95) {
      $$0523 = $$1524;$$2473 = $89;
     } else {
      break;
     }
    }
    $96 = ($3|0)==(0);
    $$pre693 = $$1524;
    if ($96) {
     label = 24;
    } else {
     $97 = (-2 - ($9))|0;
     $98 = (($97) + ($$pre693))|0;
     $99 = ($98|0)<($3|0);
     if ($99) {
      $100 = (($3) + 2)|0;
      $$pre690 = (($$pre693) - ($9))|0;
      $$pre$phi691Z2D = $$pre690;$$sink = $100;
     } else {
      label = 24;
     }
    }
    if ((label|0) == 24) {
     $101 = (($$pre693) - ($9))|0;
     $$pre$phi691Z2D = $101;$$sink = $101;
    }
    $102 = $11;
    $103 = $76;
    $104 = (($102) - ($103))|0;
    $105 = (($104) + ($44))|0;
    $106 = (($105) + ($$sink))|0;
    _pad($0,32,$2,$106,$4);
    _out($0,$$0521$,$44);
    $107 = $4 ^ 65536;
    _pad($0,48,$2,$106,$107);
    _out($0,$8,$$pre$phi691Z2D);
    $108 = (($$sink) - ($$pre$phi691Z2D))|0;
    _pad($0,48,$108,0,0);
    _out($0,$76,$104);
    $109 = $4 ^ 8192;
    _pad($0,32,$2,$106,$109);
    $$sink560 = $106;
    break;
   }
   $110 = ($3|0)<(0);
   $$540 = $110 ? 6 : $3;
   if ($36) {
    $111 = $35 * 268435456.0;
    $112 = HEAP32[$7>>2]|0;
    $113 = (($112) + -28)|0;
    HEAP32[$7>>2] = $113;
    $$3 = $111;$$pr = $113;
   } else {
    $$pre = HEAP32[$7>>2]|0;
    $$3 = $35;$$pr = $$pre;
   }
   $114 = ($$pr|0)<(0);
   $115 = ((($6)) + 288|0);
   $$561 = $114 ? $6 : $115;
   $$0498 = $$561;$$4 = $$3;
   while(1) {
    $116 = (~~(($$4))>>>0);
    HEAP32[$$0498>>2] = $116;
    $117 = ((($$0498)) + 4|0);
    $118 = (+($116>>>0));
    $119 = $$4 - $118;
    $120 = $119 * 1.0E+9;
    $121 = $120 != 0.0;
    if ($121) {
     $$0498 = $117;$$4 = $120;
    } else {
     break;
    }
   }
   $122 = ($$pr|0)>(0);
   if ($122) {
    $$1482663 = $$561;$$1499662 = $117;$123 = $$pr;
    while(1) {
     $124 = ($123|0)<(29);
     $125 = $124 ? $123 : 29;
     $$0488655 = ((($$1499662)) + -4|0);
     $126 = ($$0488655>>>0)<($$1482663>>>0);
     if ($126) {
      $$2483$ph = $$1482663;
     } else {
      $$0488657 = $$0488655;$$0497656 = 0;
      while(1) {
       $127 = HEAP32[$$0488657>>2]|0;
       $128 = (_bitshift64Shl(($127|0),0,($125|0))|0);
       $129 = tempRet0;
       $130 = (_i64Add(($128|0),($129|0),($$0497656|0),0)|0);
       $131 = tempRet0;
       $132 = (___uremdi3(($130|0),($131|0),1000000000,0)|0);
       $133 = tempRet0;
       HEAP32[$$0488657>>2] = $132;
       $134 = (___udivdi3(($130|0),($131|0),1000000000,0)|0);
       $135 = tempRet0;
       $$0488 = ((($$0488657)) + -4|0);
       $136 = ($$0488>>>0)<($$1482663>>>0);
       if ($136) {
        break;
       } else {
        $$0488657 = $$0488;$$0497656 = $134;
       }
      }
      $137 = ($134|0)==(0);
      if ($137) {
       $$2483$ph = $$1482663;
      } else {
       $138 = ((($$1482663)) + -4|0);
       HEAP32[$138>>2] = $134;
       $$2483$ph = $138;
      }
     }
     $$2500 = $$1499662;
     while(1) {
      $139 = ($$2500>>>0)>($$2483$ph>>>0);
      if (!($139)) {
       break;
      }
      $140 = ((($$2500)) + -4|0);
      $141 = HEAP32[$140>>2]|0;
      $142 = ($141|0)==(0);
      if ($142) {
       $$2500 = $140;
      } else {
       break;
      }
     }
     $143 = HEAP32[$7>>2]|0;
     $144 = (($143) - ($125))|0;
     HEAP32[$7>>2] = $144;
     $145 = ($144|0)>(0);
     if ($145) {
      $$1482663 = $$2483$ph;$$1499662 = $$2500;$123 = $144;
     } else {
      $$1482$lcssa = $$2483$ph;$$1499$lcssa = $$2500;$$pr566 = $144;
      break;
     }
    }
   } else {
    $$1482$lcssa = $$561;$$1499$lcssa = $117;$$pr566 = $$pr;
   }
   $146 = ($$pr566|0)<(0);
   if ($146) {
    $147 = (($$540) + 25)|0;
    $148 = (($147|0) / 9)&-1;
    $149 = (($148) + 1)|0;
    $150 = ($39|0)==(102);
    $$3484650 = $$1482$lcssa;$$3501649 = $$1499$lcssa;$152 = $$pr566;
    while(1) {
     $151 = (0 - ($152))|0;
     $153 = ($151|0)<(9);
     $154 = $153 ? $151 : 9;
     $155 = ($$3484650>>>0)<($$3501649>>>0);
     if ($155) {
      $159 = 1 << $154;
      $160 = (($159) + -1)|0;
      $161 = 1000000000 >>> $154;
      $$0487644 = 0;$$1489643 = $$3484650;
      while(1) {
       $162 = HEAP32[$$1489643>>2]|0;
       $163 = $162 & $160;
       $164 = $162 >>> $154;
       $165 = (($164) + ($$0487644))|0;
       HEAP32[$$1489643>>2] = $165;
       $166 = Math_imul($163, $161)|0;
       $167 = ((($$1489643)) + 4|0);
       $168 = ($167>>>0)<($$3501649>>>0);
       if ($168) {
        $$0487644 = $166;$$1489643 = $167;
       } else {
        break;
       }
      }
      $169 = HEAP32[$$3484650>>2]|0;
      $170 = ($169|0)==(0);
      $171 = ((($$3484650)) + 4|0);
      $$$3484 = $170 ? $171 : $$3484650;
      $172 = ($166|0)==(0);
      if ($172) {
       $$$3484700 = $$$3484;$$4502 = $$3501649;
      } else {
       $173 = ((($$3501649)) + 4|0);
       HEAP32[$$3501649>>2] = $166;
       $$$3484700 = $$$3484;$$4502 = $173;
      }
     } else {
      $156 = HEAP32[$$3484650>>2]|0;
      $157 = ($156|0)==(0);
      $158 = ((($$3484650)) + 4|0);
      $$$3484699 = $157 ? $158 : $$3484650;
      $$$3484700 = $$$3484699;$$4502 = $$3501649;
     }
     $174 = $150 ? $$561 : $$$3484700;
     $175 = $$4502;
     $176 = $174;
     $177 = (($175) - ($176))|0;
     $178 = $177 >> 2;
     $179 = ($178|0)>($149|0);
     $180 = (($174) + ($149<<2)|0);
     $$$4502 = $179 ? $180 : $$4502;
     $181 = HEAP32[$7>>2]|0;
     $182 = (($181) + ($154))|0;
     HEAP32[$7>>2] = $182;
     $183 = ($182|0)<(0);
     if ($183) {
      $$3484650 = $$$3484700;$$3501649 = $$$4502;$152 = $182;
     } else {
      $$3484$lcssa = $$$3484700;$$3501$lcssa = $$$4502;
      break;
     }
    }
   } else {
    $$3484$lcssa = $$1482$lcssa;$$3501$lcssa = $$1499$lcssa;
   }
   $184 = ($$3484$lcssa>>>0)<($$3501$lcssa>>>0);
   $185 = $$561;
   if ($184) {
    $186 = $$3484$lcssa;
    $187 = (($185) - ($186))|0;
    $188 = $187 >> 2;
    $189 = ($188*9)|0;
    $190 = HEAP32[$$3484$lcssa>>2]|0;
    $191 = ($190>>>0)<(10);
    if ($191) {
     $$1515 = $189;
    } else {
     $$0514639 = $189;$$0530638 = 10;
     while(1) {
      $192 = ($$0530638*10)|0;
      $193 = (($$0514639) + 1)|0;
      $194 = ($190>>>0)<($192>>>0);
      if ($194) {
       $$1515 = $193;
       break;
      } else {
       $$0514639 = $193;$$0530638 = $192;
      }
     }
    }
   } else {
    $$1515 = 0;
   }
   $195 = ($39|0)!=(102);
   $196 = $195 ? $$1515 : 0;
   $197 = (($$540) - ($196))|0;
   $198 = ($39|0)==(103);
   $199 = ($$540|0)!=(0);
   $200 = $199 & $198;
   $$neg = $200 << 31 >> 31;
   $201 = (($197) + ($$neg))|0;
   $202 = $$3501$lcssa;
   $203 = (($202) - ($185))|0;
   $204 = $203 >> 2;
   $205 = ($204*9)|0;
   $206 = (($205) + -9)|0;
   $207 = ($201|0)<($206|0);
   if ($207) {
    $208 = ((($$561)) + 4|0);
    $209 = (($201) + 9216)|0;
    $210 = (($209|0) / 9)&-1;
    $211 = (($210) + -1024)|0;
    $212 = (($208) + ($211<<2)|0);
    $213 = (($209|0) % 9)&-1;
    $214 = ($213|0)<(8);
    if ($214) {
     $$0527$in633 = $213;$$1531632 = 10;
     while(1) {
      $$0527 = (($$0527$in633) + 1)|0;
      $215 = ($$1531632*10)|0;
      $216 = ($$0527$in633|0)<(7);
      if ($216) {
       $$0527$in633 = $$0527;$$1531632 = $215;
      } else {
       $$1531$lcssa = $215;
       break;
      }
     }
    } else {
     $$1531$lcssa = 10;
    }
    $217 = HEAP32[$212>>2]|0;
    $218 = (($217>>>0) % ($$1531$lcssa>>>0))&-1;
    $219 = ($218|0)==(0);
    $220 = ((($212)) + 4|0);
    $221 = ($220|0)==($$3501$lcssa|0);
    $or$cond542 = $221 & $219;
    if ($or$cond542) {
     $$4492 = $212;$$4518 = $$1515;$$8 = $$3484$lcssa;
    } else {
     $222 = (($217>>>0) / ($$1531$lcssa>>>0))&-1;
     $223 = $222 & 1;
     $224 = ($223|0)==(0);
     $$543 = $224 ? 9007199254740992.0 : 9007199254740994.0;
     $225 = (($$1531$lcssa|0) / 2)&-1;
     $226 = ($218>>>0)<($225>>>0);
     $227 = ($218|0)==($225|0);
     $or$cond545 = $221 & $227;
     $$564 = $or$cond545 ? 1.0 : 1.5;
     $$$564 = $226 ? 0.5 : $$564;
     $228 = ($$0520|0)==(0);
     if ($228) {
      $$1467 = $$$564;$$1469 = $$543;
     } else {
      $229 = HEAP8[$$0521>>0]|0;
      $230 = ($229<<24>>24)==(45);
      $231 = - $$543;
      $232 = - $$$564;
      $$$543 = $230 ? $231 : $$543;
      $$$$564 = $230 ? $232 : $$$564;
      $$1467 = $$$$564;$$1469 = $$$543;
     }
     $233 = (($217) - ($218))|0;
     HEAP32[$212>>2] = $233;
     $234 = $$1469 + $$1467;
     $235 = $234 != $$1469;
     if ($235) {
      $236 = (($233) + ($$1531$lcssa))|0;
      HEAP32[$212>>2] = $236;
      $237 = ($236>>>0)>(999999999);
      if ($237) {
       $$5486626 = $$3484$lcssa;$$sink547625 = $212;
       while(1) {
        $238 = ((($$sink547625)) + -4|0);
        HEAP32[$$sink547625>>2] = 0;
        $239 = ($238>>>0)<($$5486626>>>0);
        if ($239) {
         $240 = ((($$5486626)) + -4|0);
         HEAP32[$240>>2] = 0;
         $$6 = $240;
        } else {
         $$6 = $$5486626;
        }
        $241 = HEAP32[$238>>2]|0;
        $242 = (($241) + 1)|0;
        HEAP32[$238>>2] = $242;
        $243 = ($242>>>0)>(999999999);
        if ($243) {
         $$5486626 = $$6;$$sink547625 = $238;
        } else {
         $$5486$lcssa = $$6;$$sink547$lcssa = $238;
         break;
        }
       }
      } else {
       $$5486$lcssa = $$3484$lcssa;$$sink547$lcssa = $212;
      }
      $244 = $$5486$lcssa;
      $245 = (($185) - ($244))|0;
      $246 = $245 >> 2;
      $247 = ($246*9)|0;
      $248 = HEAP32[$$5486$lcssa>>2]|0;
      $249 = ($248>>>0)<(10);
      if ($249) {
       $$4492 = $$sink547$lcssa;$$4518 = $247;$$8 = $$5486$lcssa;
      } else {
       $$2516621 = $247;$$2532620 = 10;
       while(1) {
        $250 = ($$2532620*10)|0;
        $251 = (($$2516621) + 1)|0;
        $252 = ($248>>>0)<($250>>>0);
        if ($252) {
         $$4492 = $$sink547$lcssa;$$4518 = $251;$$8 = $$5486$lcssa;
         break;
        } else {
         $$2516621 = $251;$$2532620 = $250;
        }
       }
      }
     } else {
      $$4492 = $212;$$4518 = $$1515;$$8 = $$3484$lcssa;
     }
    }
    $253 = ((($$4492)) + 4|0);
    $254 = ($$3501$lcssa>>>0)>($253>>>0);
    $$$3501 = $254 ? $253 : $$3501$lcssa;
    $$5519$ph = $$4518;$$7505$ph = $$$3501;$$9$ph = $$8;
   } else {
    $$5519$ph = $$1515;$$7505$ph = $$3501$lcssa;$$9$ph = $$3484$lcssa;
   }
   $$7505 = $$7505$ph;
   while(1) {
    $255 = ($$7505>>>0)>($$9$ph>>>0);
    if (!($255)) {
     $$lcssa675 = 0;
     break;
    }
    $256 = ((($$7505)) + -4|0);
    $257 = HEAP32[$256>>2]|0;
    $258 = ($257|0)==(0);
    if ($258) {
     $$7505 = $256;
    } else {
     $$lcssa675 = 1;
     break;
    }
   }
   $259 = (0 - ($$5519$ph))|0;
   do {
    if ($198) {
     $not$ = $199 ^ 1;
     $260 = $not$&1;
     $$540$ = (($$540) + ($260))|0;
     $261 = ($$540$|0)>($$5519$ph|0);
     $262 = ($$5519$ph|0)>(-5);
     $or$cond6 = $261 & $262;
     if ($or$cond6) {
      $263 = (($5) + -1)|0;
      $$neg568 = (($$540$) + -1)|0;
      $264 = (($$neg568) - ($$5519$ph))|0;
      $$0479 = $263;$$2476 = $264;
     } else {
      $265 = (($5) + -2)|0;
      $266 = (($$540$) + -1)|0;
      $$0479 = $265;$$2476 = $266;
     }
     $267 = $4 & 8;
     $268 = ($267|0)==(0);
     if ($268) {
      if ($$lcssa675) {
       $269 = ((($$7505)) + -4|0);
       $270 = HEAP32[$269>>2]|0;
       $271 = ($270|0)==(0);
       if ($271) {
        $$2529 = 9;
       } else {
        $272 = (($270>>>0) % 10)&-1;
        $273 = ($272|0)==(0);
        if ($273) {
         $$1528617 = 0;$$3533616 = 10;
         while(1) {
          $274 = ($$3533616*10)|0;
          $275 = (($$1528617) + 1)|0;
          $276 = (($270>>>0) % ($274>>>0))&-1;
          $277 = ($276|0)==(0);
          if ($277) {
           $$1528617 = $275;$$3533616 = $274;
          } else {
           $$2529 = $275;
           break;
          }
         }
        } else {
         $$2529 = 0;
        }
       }
      } else {
       $$2529 = 9;
      }
      $278 = $$0479 | 32;
      $279 = ($278|0)==(102);
      $280 = $$7505;
      $281 = (($280) - ($185))|0;
      $282 = $281 >> 2;
      $283 = ($282*9)|0;
      $284 = (($283) + -9)|0;
      if ($279) {
       $285 = (($284) - ($$2529))|0;
       $286 = ($285|0)>(0);
       $$548 = $286 ? $285 : 0;
       $287 = ($$2476|0)<($$548|0);
       $$2476$$549 = $287 ? $$2476 : $$548;
       $$1480 = $$0479;$$3477 = $$2476$$549;$$pre$phi698Z2D = 0;
       break;
      } else {
       $288 = (($284) + ($$5519$ph))|0;
       $289 = (($288) - ($$2529))|0;
       $290 = ($289|0)>(0);
       $$550 = $290 ? $289 : 0;
       $291 = ($$2476|0)<($$550|0);
       $$2476$$551 = $291 ? $$2476 : $$550;
       $$1480 = $$0479;$$3477 = $$2476$$551;$$pre$phi698Z2D = 0;
       break;
      }
     } else {
      $$1480 = $$0479;$$3477 = $$2476;$$pre$phi698Z2D = $267;
     }
    } else {
     $$pre697 = $4 & 8;
     $$1480 = $5;$$3477 = $$540;$$pre$phi698Z2D = $$pre697;
    }
   } while(0);
   $292 = $$3477 | $$pre$phi698Z2D;
   $293 = ($292|0)!=(0);
   $294 = $293&1;
   $295 = $$1480 | 32;
   $296 = ($295|0)==(102);
   if ($296) {
    $297 = ($$5519$ph|0)>(0);
    $298 = $297 ? $$5519$ph : 0;
    $$2513 = 0;$$pn = $298;
   } else {
    $299 = ($$5519$ph|0)<(0);
    $300 = $299 ? $259 : $$5519$ph;
    $301 = ($300|0)<(0);
    $302 = $301 << 31 >> 31;
    $303 = (_fmt_u($300,$302,$11)|0);
    $304 = $11;
    $305 = $303;
    $306 = (($304) - ($305))|0;
    $307 = ($306|0)<(2);
    if ($307) {
     $$1512610 = $303;
     while(1) {
      $308 = ((($$1512610)) + -1|0);
      HEAP8[$308>>0] = 48;
      $309 = $308;
      $310 = (($304) - ($309))|0;
      $311 = ($310|0)<(2);
      if ($311) {
       $$1512610 = $308;
      } else {
       $$1512$lcssa = $308;
       break;
      }
     }
    } else {
     $$1512$lcssa = $303;
    }
    $312 = $$5519$ph >> 31;
    $313 = $312 & 2;
    $314 = (($313) + 43)|0;
    $315 = $314&255;
    $316 = ((($$1512$lcssa)) + -1|0);
    HEAP8[$316>>0] = $315;
    $317 = $$1480&255;
    $318 = ((($$1512$lcssa)) + -2|0);
    HEAP8[$318>>0] = $317;
    $319 = $318;
    $320 = (($304) - ($319))|0;
    $$2513 = $318;$$pn = $320;
   }
   $321 = (($$0520) + 1)|0;
   $322 = (($321) + ($$3477))|0;
   $$1526 = (($322) + ($294))|0;
   $323 = (($$1526) + ($$pn))|0;
   _pad($0,32,$2,$323,$4);
   _out($0,$$0521,$$0520);
   $324 = $4 ^ 65536;
   _pad($0,48,$2,$323,$324);
   if ($296) {
    $325 = ($$9$ph>>>0)>($$561>>>0);
    $$0496$$9 = $325 ? $$561 : $$9$ph;
    $326 = ((($8)) + 9|0);
    $327 = $326;
    $328 = ((($8)) + 8|0);
    $$5493600 = $$0496$$9;
    while(1) {
     $329 = HEAP32[$$5493600>>2]|0;
     $330 = (_fmt_u($329,0,$326)|0);
     $331 = ($$5493600|0)==($$0496$$9|0);
     if ($331) {
      $337 = ($330|0)==($326|0);
      if ($337) {
       HEAP8[$328>>0] = 48;
       $$1465 = $328;
      } else {
       $$1465 = $330;
      }
     } else {
      $332 = ($330>>>0)>($8>>>0);
      if ($332) {
       $333 = $330;
       $334 = (($333) - ($9))|0;
       _memset(($8|0),48,($334|0))|0;
       $$0464597 = $330;
       while(1) {
        $335 = ((($$0464597)) + -1|0);
        $336 = ($335>>>0)>($8>>>0);
        if ($336) {
         $$0464597 = $335;
        } else {
         $$1465 = $335;
         break;
        }
       }
      } else {
       $$1465 = $330;
      }
     }
     $338 = $$1465;
     $339 = (($327) - ($338))|0;
     _out($0,$$1465,$339);
     $340 = ((($$5493600)) + 4|0);
     $341 = ($340>>>0)>($$561>>>0);
     if ($341) {
      break;
     } else {
      $$5493600 = $340;
     }
    }
    $342 = ($292|0)==(0);
    if (!($342)) {
     _out($0,12738,1);
    }
    $343 = ($340>>>0)<($$7505>>>0);
    $344 = ($$3477|0)>(0);
    $345 = $343 & $344;
    if ($345) {
     $$4478593 = $$3477;$$6494592 = $340;
     while(1) {
      $346 = HEAP32[$$6494592>>2]|0;
      $347 = (_fmt_u($346,0,$326)|0);
      $348 = ($347>>>0)>($8>>>0);
      if ($348) {
       $349 = $347;
       $350 = (($349) - ($9))|0;
       _memset(($8|0),48,($350|0))|0;
       $$0463587 = $347;
       while(1) {
        $351 = ((($$0463587)) + -1|0);
        $352 = ($351>>>0)>($8>>>0);
        if ($352) {
         $$0463587 = $351;
        } else {
         $$0463$lcssa = $351;
         break;
        }
       }
      } else {
       $$0463$lcssa = $347;
      }
      $353 = ($$4478593|0)<(9);
      $354 = $353 ? $$4478593 : 9;
      _out($0,$$0463$lcssa,$354);
      $355 = ((($$6494592)) + 4|0);
      $356 = (($$4478593) + -9)|0;
      $357 = ($355>>>0)<($$7505>>>0);
      $358 = ($$4478593|0)>(9);
      $359 = $357 & $358;
      if ($359) {
       $$4478593 = $356;$$6494592 = $355;
      } else {
       $$4478$lcssa = $356;
       break;
      }
     }
    } else {
     $$4478$lcssa = $$3477;
    }
    $360 = (($$4478$lcssa) + 9)|0;
    _pad($0,48,$360,9,0);
   } else {
    $361 = ((($$9$ph)) + 4|0);
    $$7505$ = $$lcssa675 ? $$7505 : $361;
    $362 = ($$3477|0)>(-1);
    if ($362) {
     $363 = ((($8)) + 9|0);
     $364 = ($$pre$phi698Z2D|0)==(0);
     $365 = $363;
     $366 = (0 - ($9))|0;
     $367 = ((($8)) + 8|0);
     $$5605 = $$3477;$$7495604 = $$9$ph;
     while(1) {
      $368 = HEAP32[$$7495604>>2]|0;
      $369 = (_fmt_u($368,0,$363)|0);
      $370 = ($369|0)==($363|0);
      if ($370) {
       HEAP8[$367>>0] = 48;
       $$0 = $367;
      } else {
       $$0 = $369;
      }
      $371 = ($$7495604|0)==($$9$ph|0);
      do {
       if ($371) {
        $375 = ((($$0)) + 1|0);
        _out($0,$$0,1);
        $376 = ($$5605|0)<(1);
        $or$cond556 = $364 & $376;
        if ($or$cond556) {
         $$2 = $375;
         break;
        }
        _out($0,12738,1);
        $$2 = $375;
       } else {
        $372 = ($$0>>>0)>($8>>>0);
        if (!($372)) {
         $$2 = $$0;
         break;
        }
        $scevgep686 = (($$0) + ($366)|0);
        $scevgep686687 = $scevgep686;
        _memset(($8|0),48,($scevgep686687|0))|0;
        $$1601 = $$0;
        while(1) {
         $373 = ((($$1601)) + -1|0);
         $374 = ($373>>>0)>($8>>>0);
         if ($374) {
          $$1601 = $373;
         } else {
          $$2 = $373;
          break;
         }
        }
       }
      } while(0);
      $377 = $$2;
      $378 = (($365) - ($377))|0;
      $379 = ($$5605|0)>($378|0);
      $380 = $379 ? $378 : $$5605;
      _out($0,$$2,$380);
      $381 = (($$5605) - ($378))|0;
      $382 = ((($$7495604)) + 4|0);
      $383 = ($382>>>0)<($$7505$>>>0);
      $384 = ($381|0)>(-1);
      $385 = $383 & $384;
      if ($385) {
       $$5605 = $381;$$7495604 = $382;
      } else {
       $$5$lcssa = $381;
       break;
      }
     }
    } else {
     $$5$lcssa = $$3477;
    }
    $386 = (($$5$lcssa) + 18)|0;
    _pad($0,48,$386,18,0);
    $387 = $11;
    $388 = $$2513;
    $389 = (($387) - ($388))|0;
    _out($0,$$2513,$389);
   }
   $390 = $4 ^ 8192;
   _pad($0,32,$2,$323,$390);
   $$sink560 = $323;
  }
 } while(0);
 $391 = ($$sink560|0)<($2|0);
 $$557 = $391 ? $2 : $$sink560;
 STACKTOP = sp;return ($$557|0);
}
function ___DOUBLE_BITS_537($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($2);
 return ($1|0);
}
function _frexpl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_frexp($0,$1));
 return (+$2);
}
function _frexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $storemerge = 0, $trunc$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $5 = tempRet0;
 $6 = $4&65535;
 $trunc$clear = $6 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $7 = $0 != 0.0;
  if ($7) {
   $8 = $0 * 1.8446744073709552E+19;
   $9 = (+_frexp($8,$1));
   $10 = HEAP32[$1>>2]|0;
   $11 = (($10) + -64)|0;
   $$016 = $9;$storemerge = $11;
  } else {
   $$016 = $0;$storemerge = 0;
  }
  HEAP32[$1>>2] = $storemerge;
  $$0 = $$016;
  break;
 }
 case 2047:  {
  $$0 = $0;
  break;
 }
 default: {
  $12 = $4 & 2047;
  $13 = (($12) + -1022)|0;
  HEAP32[$1>>2] = $13;
  $14 = $3 & -2146435073;
  $15 = $14 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $16;
 }
 }
 return (+$$0);
}
function _wcrtomb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 do {
  if ($3) {
   $$0 = 1;
  } else {
   $4 = ($1>>>0)<(128);
   if ($4) {
    $5 = $1&255;
    HEAP8[$0>>0] = $5;
    $$0 = 1;
    break;
   }
   $6 = (___pthread_self_215()|0);
   $7 = ((($6)) + 188|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $11 = $1 & -128;
    $12 = ($11|0)==(57216);
    if ($12) {
     $14 = $1&255;
     HEAP8[$0>>0] = $14;
     $$0 = 1;
     break;
    } else {
     $13 = (___errno_location()|0);
     HEAP32[$13>>2] = 84;
     $$0 = -1;
     break;
    }
   }
   $15 = ($1>>>0)<(2048);
   if ($15) {
    $16 = $1 >>> 6;
    $17 = $16 | 192;
    $18 = $17&255;
    $19 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $18;
    $20 = $1 & 63;
    $21 = $20 | 128;
    $22 = $21&255;
    HEAP8[$19>>0] = $22;
    $$0 = 2;
    break;
   }
   $23 = ($1>>>0)<(55296);
   $24 = $1 & -8192;
   $25 = ($24|0)==(57344);
   $or$cond = $23 | $25;
   if ($or$cond) {
    $26 = $1 >>> 12;
    $27 = $26 | 224;
    $28 = $27&255;
    $29 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $28;
    $30 = $1 >>> 6;
    $31 = $30 & 63;
    $32 = $31 | 128;
    $33 = $32&255;
    $34 = ((($0)) + 2|0);
    HEAP8[$29>>0] = $33;
    $35 = $1 & 63;
    $36 = $35 | 128;
    $37 = $36&255;
    HEAP8[$34>>0] = $37;
    $$0 = 3;
    break;
   }
   $38 = (($1) + -65536)|0;
   $39 = ($38>>>0)<(1048576);
   if ($39) {
    $40 = $1 >>> 18;
    $41 = $40 | 240;
    $42 = $41&255;
    $43 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $42;
    $44 = $1 >>> 12;
    $45 = $44 & 63;
    $46 = $45 | 128;
    $47 = $46&255;
    $48 = ((($0)) + 2|0);
    HEAP8[$43>>0] = $47;
    $49 = $1 >>> 6;
    $50 = $49 & 63;
    $51 = $50 | 128;
    $52 = $51&255;
    $53 = ((($0)) + 3|0);
    HEAP8[$48>>0] = $52;
    $54 = $1 & 63;
    $55 = $54 | 128;
    $56 = $55&255;
    HEAP8[$53>>0] = $56;
    $$0 = 4;
    break;
   } else {
    $57 = (___errno_location()|0);
    HEAP32[$57>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___pthread_self_215() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___fwritex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$038 = 0, $$042 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $$pre = 0, $$pre47 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = (___towrite($2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$3>>2]|0;
   $12 = $$pre;
   label = 5;
  } else {
   $$1 = 0;
  }
 } else {
  $6 = $4;
  $12 = $6;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = ((($2)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($12) - ($10))|0;
   $13 = ($11>>>0)<($1>>>0);
   $14 = $10;
   if ($13) {
    $15 = ((($2)) + 36|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 511]($2,$0,$1)|0);
    $$1 = $17;
    break;
   }
   $18 = ((($2)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)>(-1);
   L10: do {
    if ($20) {
     $$038 = $1;
     while(1) {
      $21 = ($$038|0)==(0);
      if ($21) {
       $$139 = 0;$$141 = $0;$$143 = $1;$31 = $14;
       break L10;
      }
      $22 = (($$038) + -1)|0;
      $23 = (($0) + ($22)|0);
      $24 = HEAP8[$23>>0]|0;
      $25 = ($24<<24>>24)==(10);
      if ($25) {
       break;
      } else {
       $$038 = $22;
      }
     }
     $26 = ((($2)) + 36|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (FUNCTION_TABLE_iiii[$27 & 511]($2,$0,$$038)|0);
     $29 = ($28>>>0)<($$038>>>0);
     if ($29) {
      $$1 = $28;
      break L5;
     }
     $30 = (($0) + ($$038)|0);
     $$042 = (($1) - ($$038))|0;
     $$pre47 = HEAP32[$9>>2]|0;
     $$139 = $$038;$$141 = $30;$$143 = $$042;$31 = $$pre47;
    } else {
     $$139 = 0;$$141 = $0;$$143 = $1;$31 = $14;
    }
   } while(0);
   (_memcpy(($31|0),($$141|0),($$143|0))|0);
   $32 = HEAP32[$9>>2]|0;
   $33 = (($32) + ($$143)|0);
   HEAP32[$9>>2] = $33;
   $34 = (($$139) + ($$143))|0;
   $$1 = $34;
  }
 } while(0);
 return ($$1|0);
}
function ___towrite($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)==(0);
 if ($9) {
  $11 = ((($0)) + 8|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($0)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = ((($0)) + 44|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($0)) + 28|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($0)) + 20|0);
  HEAP32[$16>>2] = $14;
  $17 = $14;
  $18 = ((($0)) + 48|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($17) + ($19)|0);
  $21 = ((($0)) + 16|0);
  HEAP32[$21>>2] = $20;
  $$0 = 0;
 } else {
  $10 = $7 | 32;
  HEAP32[$0>>2] = $10;
  $$0 = -1;
 }
 return ($$0|0);
}
function _sn_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$cast = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = ($7>>>0)>($2>>>0);
 $$ = $8 ? $2 : $7;
 $$cast = $6;
 (_memcpy(($$cast|0),($1|0),($$|0))|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($$)|0);
 HEAP32[$5>>2] = $10;
 return ($2|0);
}
function _wcscmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$015 = 0, $$0914 = 0, $$lcssa = 0, $$lcssa11 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond10 = 0, $or$cond1013 = 0;
 var $or$cond12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$1>>2]|0;
 $4 = ($2|0)!=($3|0);
 $5 = ($2|0)==(0);
 $or$cond12 = $5 | $4;
 $6 = ($3|0)==(0);
 $or$cond1013 = $6 | $or$cond12;
 if ($or$cond1013) {
  $$lcssa = $3;$$lcssa11 = $2;
 } else {
  $$015 = $1;$$0914 = $0;
  while(1) {
   $7 = ((($$0914)) + 4|0);
   $8 = ((($$015)) + 4|0);
   $9 = HEAP32[$7>>2]|0;
   $10 = HEAP32[$8>>2]|0;
   $11 = ($9|0)!=($10|0);
   $12 = ($9|0)==(0);
   $or$cond = $12 | $11;
   $13 = ($10|0)==(0);
   $or$cond10 = $13 | $or$cond;
   if ($or$cond10) {
    $$lcssa = $10;$$lcssa11 = $9;
    break;
   } else {
    $$015 = $8;$$0914 = $7;
   }
  }
 }
 $14 = (($$lcssa11) - ($$lcssa))|0;
 return ($14|0);
}
function _setlocale($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$04956 = 0, $$050$ = 0, $$05055 = 0, $$05253 = 0, $$151 = 0, $$154 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond57 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ($0>>>0)>(6);
 do {
  if ($3) {
   $$0 = 0;
  } else {
   ___lock((55984|0));
   $4 = ($0|0)==(6);
   if (!($4)) {
    $26 = (_setlocale_one_unlocked($0,$1)|0);
    ___unlock((55984|0));
    $$0 = $26;
    break;
   }
   $5 = ($1|0)==(0|0);
   if ($5) {
    $$05253 = 67034;$$154 = 0;
   } else {
    dest=$2; src=12740; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $$04956 = 0;$$05055 = $1;
    while(1) {
     $6 = (___strchrnul($$05055,59)|0);
     $7 = $6;
     $8 = $$05055;
     $9 = (($7) - ($8))|0;
     $10 = ($9|0)<(16);
     if ($10) {
      (_memcpy(($2|0),($$05055|0),($9|0))|0);
      $11 = (($2) + ($9)|0);
      HEAP8[$11>>0] = 0;
      $12 = HEAP8[$6>>0]|0;
      $13 = ($12<<24>>24)==(0);
      $14 = ((($6)) + 1|0);
      $$050$ = $13 ? $$05055 : $14;
      $$151 = $$050$;
     } else {
      $$151 = $$05055;
     }
     (_setlocale_one_unlocked($$04956,$2)|0);
     $15 = (($$04956) + 1)|0;
     $exitcond57 = ($15|0)==(6);
     if ($exitcond57) {
      break;
     } else {
      $$04956 = $15;$$05055 = $$151;
     }
    }
    $$05253 = 67034;$$154 = 0;
   }
   while(1) {
    $16 = (55944 + ($$154<<2)|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)!=(0|0);
    $19 = ((($17)) + 8|0);
    $20 = $18 ? $19 : 12756;
    $21 = (_strlen($20)|0);
    (_memcpy(($$05253|0),($20|0),($21|0))|0);
    $22 = (($$05253) + ($21)|0);
    HEAP8[$22>>0] = 59;
    $23 = (($21) + 1)|0;
    $24 = (($$05253) + ($23)|0);
    $25 = (($$154) + 1)|0;
    $exitcond = ($25|0)==(6);
    if ($exitcond) {
     break;
    } else {
     $$05253 = $24;$$154 = $25;
    }
   }
   HEAP8[$22>>0] = 0;
   ___unlock((55984|0));
   $$0 = 67034;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _setlocale_one_unlocked($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $5 = (55944 + ($0<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0 = $6;
 } else {
  $3 = (___get_locale($0,$1)|0);
  $4 = (55944 + ($0<<2)|0);
  HEAP32[$4>>2] = $3;
  $$0 = $3;
 }
 $7 = ($$0|0)!=(0|0);
 $8 = ((($$0)) + 8|0);
 $9 = $7 ? $8 : 12756;
 return ($9|0);
}
function _mbrtowc($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$03952 = 0, $$04051 = 0, $$04350 = 0, $$1 = 0, $$141 = 0, $$144 = 0, $$2 = 0, $$47 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($3|0)==(0|0);
 $$ = $5 ? 55992 : $3;
 $6 = HEAP32[$$>>2]|0;
 $7 = ($1|0)==(0|0);
 L1: do {
  if ($7) {
   $8 = ($6|0)==(0);
   if ($8) {
    $$0 = 0;
   } else {
    label = 17;
   }
  } else {
   $9 = ($0|0)==(0|0);
   $$47 = $9 ? $4 : $0;
   $10 = ($2|0)==(0);
   if ($10) {
    $$0 = -2;
   } else {
    $11 = ($6|0)==(0);
    if ($11) {
     $12 = HEAP8[$1>>0]|0;
     $13 = ($12<<24>>24)>(-1);
     if ($13) {
      $14 = $12&255;
      HEAP32[$$47>>2] = $14;
      $15 = ($12<<24>>24)!=(0);
      $16 = $15&1;
      $$0 = $16;
      break;
     }
     $17 = (___pthread_self_222()|0);
     $18 = ((($17)) + 188|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)==(0|0);
     $22 = HEAP8[$1>>0]|0;
     if ($21) {
      $23 = $22 << 24 >> 24;
      $24 = $23 & 57343;
      HEAP32[$$47>>2] = $24;
      $$0 = 1;
      break;
     }
     $25 = $22&255;
     $26 = (($25) + -194)|0;
     $27 = ($26>>>0)>(50);
     if ($27) {
      label = 17;
      break;
     }
     $28 = ((($1)) + 1|0);
     $29 = (2876 + ($26<<2)|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = (($2) + -1)|0;
     $32 = ($31|0)==(0);
     if ($32) {
      $$2 = $30;
     } else {
      $$03952 = $28;$$04051 = $30;$$04350 = $31;
      label = 11;
     }
    } else {
     $$03952 = $1;$$04051 = $6;$$04350 = $2;
     label = 11;
    }
    L14: do {
     if ((label|0) == 11) {
      $33 = HEAP8[$$03952>>0]|0;
      $34 = $33&255;
      $35 = $34 >>> 3;
      $36 = (($35) + -16)|0;
      $37 = $$04051 >> 26;
      $38 = (($35) + ($37))|0;
      $39 = $36 | $38;
      $40 = ($39>>>0)>(7);
      if ($40) {
       label = 17;
       break L1;
      } else {
       $$1 = $$03952;$$141 = $$04051;$$144 = $$04350;$44 = $33;
      }
      while(1) {
       $41 = $$141 << 6;
       $42 = ((($$1)) + 1|0);
       $43 = $44&255;
       $45 = (($43) + -128)|0;
       $46 = $45 | $41;
       $47 = (($$144) + -1)|0;
       $48 = ($46|0)<(0);
       if (!($48)) {
        break;
       }
       $50 = ($47|0)==(0);
       if ($50) {
        $$2 = $46;
        break L14;
       }
       $51 = HEAP8[$42>>0]|0;
       $52 = $51 & -64;
       $53 = ($52<<24>>24)==(-128);
       if ($53) {
        $$1 = $42;$$141 = $46;$$144 = $47;$44 = $51;
       } else {
        label = 17;
        break L1;
       }
      }
      HEAP32[$$>>2] = 0;
      HEAP32[$$47>>2] = $46;
      $49 = (($2) - ($47))|0;
      $$0 = $49;
      break L1;
     }
    } while(0);
    HEAP32[$$>>2] = $$2;
    $$0 = -2;
   }
  }
 } while(0);
 if ((label|0) == 17) {
  HEAP32[$$>>2] = 0;
  $54 = (___errno_location()|0);
  HEAP32[$54>>2] = 84;
  $$0 = -1;
 }
 STACKTOP = sp;return ($$0|0);
}
function ___pthread_self_222() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _wmemcpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$058 = 0, $$067 = 0, $$09 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $$058 = $2;$$067 = $1;$$09 = $0;
  while(1) {
   $4 = (($$058) + -1)|0;
   $5 = ((($$067)) + 4|0);
   $6 = HEAP32[$$067>>2]|0;
   $7 = ((($$09)) + 4|0);
   HEAP32[$$09>>2] = $6;
   $8 = ($4|0)==(0);
   if ($8) {
    break;
   } else {
    $$058 = $4;$$067 = $5;$$09 = $7;
   }
  }
 }
 return ($0|0);
}
function ___ctype_get_mb_cur_max() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___pthread_self_131()|0);
 $1 = ((($0)) + 188|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)!=(0|0);
 $5 = $4 ? 4 : 1;
 return ($5|0);
}
function ___pthread_self_131() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _mbsrtowcs($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0100$lcssa = 0, $$0100136 = 0, $$0107135 = 0, $$0113134 = 0, $$099 = 0, $$10 = 0, $$1101 = 0, $$1101$ph = 0, $$1108$ph = 0, $$1108138 = 0, $$11124 = 0, $$1114 = 0, $$1114$ph = 0, $$11163 = 0, $$2 = 0, $$2102144 = 0, $$2109 = 0, $$2115143 = 0, $$3103 = 0, $$3110 = 0;
 var $$3116 = 0, $$4 = 0, $$4104 = 0, $$4111 = 0, $$4117 = 0, $$5 = 0, $$5105 = 0, $$5112 = 0, $$5112123 = 0, $$5112162 = 0, $$5118$ph = 0, $$5118137 = 0, $$6 = 0, $$6106$lcssa = 0, $$6106$ph = 0, $$6106139 = 0, $$6119 = 0, $$7 = 0, $$7120 = 0, $$8 = 0;
 var $$8121 = 0, $$9 = 0, $$9$sink = 0, $$9122 = 0, $$9122161 = 0, $$old1 = 0, $$pre$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$1>>2]|0;
 $5 = ($3|0)==(0|0);
 if ($5) {
  label = 5;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = ($6|0)==(0);
  if ($7) {
   label = 5;
  } else {
   $8 = ($0|0)==(0|0);
   if ($8) {
    $$2 = $6;$$4104 = $4;$$4117 = $2;
    label = 25;
   } else {
    HEAP32[$3>>2] = 0;
    $$4 = $6;$$4111 = $0;$$8121 = $2;$$9 = $4;
    label = 43;
   }
  }
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = (___pthread_self_209()|0);
   $10 = ((($9)) + 188|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==(0|0);
   $14 = ($0|0)!=(0|0);
   if (!($13)) {
    if ($14) {
     $$1108$ph = $0;$$5118$ph = $2;$$6106$ph = $4;
     label = 15;
     break;
    } else {
     $$1101$ph = $4;$$1114$ph = $2;
     label = 14;
     break;
    }
   }
   if (!($14)) {
    $16 = (_strlen($4)|0);
    $$099 = $16;
    label = 59;
    break;
   }
   $15 = ($2|0)==(0);
   L13: do {
    if ($15) {
     $$0100$lcssa = $4;
    } else {
     $$0100136 = $4;$$0107135 = $0;$$0113134 = $2;
     while(1) {
      $17 = HEAP8[$$0100136>>0]|0;
      $18 = ($17<<24>>24)==(0);
      if ($18) {
       break;
      }
      $19 = ((($$0100136)) + 1|0);
      $20 = $17 << 24 >> 24;
      $21 = $20 & 57343;
      $22 = ((($$0107135)) + 4|0);
      HEAP32[$$0107135>>2] = $21;
      $23 = (($$0113134) + -1)|0;
      $24 = ($23|0)==(0);
      if ($24) {
       $$0100$lcssa = $19;
       break L13;
      } else {
       $$0100136 = $19;$$0107135 = $22;$$0113134 = $23;
      }
     }
     HEAP32[$$0107135>>2] = 0;
     HEAP32[$1>>2] = 0;
     $25 = (($2) - ($$0113134))|0;
     $$099 = $25;
     label = 59;
     break L5;
    }
   } while(0);
   HEAP32[$1>>2] = $$0100$lcssa;
   $$099 = $2;
   label = 59;
  }
 } while(0);
 L19: while(1) {
  L20: do {
   if ((label|0) == 14) {
    label = 0;
    $$1101 = $$1101$ph;$$1114 = $$1114$ph;
    while(1) {
     $27 = HEAP8[$$1101>>0]|0;
     $28 = $27&255;
     $29 = (($28) + -1)|0;
     $30 = ($29>>>0)<(127);
     if ($30) {
      $31 = $$1101;
      $32 = $31 & 3;
      $33 = ($32|0)==(0);
      if ($33) {
       $34 = HEAP32[$$1101>>2]|0;
       $35 = (($34) + -16843009)|0;
       $36 = $35 | $34;
       $37 = $36 & -2139062144;
       $38 = ($37|0)==(0);
       $39 = $34&255;
       if ($38) {
        $$2102144 = $$1101;$$2115143 = $$1114;
        while(1) {
         $40 = ((($$2102144)) + 4|0);
         $41 = (($$2115143) + -4)|0;
         $42 = HEAP32[$40>>2]|0;
         $43 = (($42) + -16843009)|0;
         $44 = $43 | $42;
         $45 = $44 & -2139062144;
         $46 = ($45|0)==(0);
         if ($46) {
          $$2102144 = $40;$$2115143 = $41;
         } else {
          break;
         }
        }
        $47 = $42&255;
        $$3103 = $40;$$3116 = $41;$49 = $47;
       } else {
        $$3103 = $$1101;$$3116 = $$1114;$49 = $39;
       }
      } else {
       $$3103 = $$1101;$$3116 = $$1114;$49 = $27;
      }
     } else {
      $$3103 = $$1101;$$3116 = $$1114;$49 = $27;
     }
     $48 = $49&255;
     $50 = (($48) + -1)|0;
     $51 = ($50>>>0)<(127);
     if (!($51)) {
      break;
     }
     $52 = ((($$3103)) + 1|0);
     $53 = (($$3116) + -1)|0;
     $$1101 = $52;$$1114 = $53;
    }
    $54 = (($48) + -194)|0;
    $55 = ($54>>>0)>(50);
    if ($55) {
     $$11163 = $$3103;$$5112162 = $0;$$9122161 = $$3116;
     label = 53;
    } else {
     $56 = ((($$3103)) + 1|0);
     $57 = (2876 + ($54<<2)|0);
     $58 = HEAP32[$57>>2]|0;
     $$2 = $58;$$4104 = $56;$$4117 = $$3116;
     label = 25;
     continue L19;
    }
   }
   else if ((label|0) == 15) {
    label = 0;
    $26 = ($$5118$ph|0)==(0);
    L22: do {
     if ($26) {
      $$6106$lcssa = $$6106$ph;
     } else {
      $$1108138 = $$1108$ph;$$5118137 = $$5118$ph;$$6106139 = $$6106$ph;
      while(1) {
       $81 = HEAP8[$$6106139>>0]|0;
       $82 = $81&255;
       $83 = (($82) + -1)|0;
       $84 = ($83>>>0)<(127);
       do {
        if ($84) {
         $85 = $$6106139;
         $86 = $85 & 3;
         $87 = ($86|0)==(0);
         $88 = ($$5118137>>>0)>(4);
         $or$cond = $88 & $87;
         if ($or$cond) {
          $$2109 = $$1108138;$$6119 = $$5118137;$$7 = $$6106139;
          while(1) {
           $89 = HEAP32[$$7>>2]|0;
           $90 = (($89) + -16843009)|0;
           $91 = $90 | $89;
           $92 = $91 & -2139062144;
           $93 = ($92|0)==(0);
           if (!($93)) {
            label = 38;
            break;
           }
           $94 = ((($$7)) + 1|0);
           $95 = $89 & 255;
           $96 = ((($$2109)) + 4|0);
           HEAP32[$$2109>>2] = $95;
           $97 = ((($$7)) + 2|0);
           $98 = HEAP8[$94>>0]|0;
           $99 = $98&255;
           $100 = ((($$2109)) + 8|0);
           HEAP32[$96>>2] = $99;
           $101 = ((($$7)) + 3|0);
           $102 = HEAP8[$97>>0]|0;
           $103 = $102&255;
           $104 = ((($$2109)) + 12|0);
           HEAP32[$100>>2] = $103;
           $105 = ((($$7)) + 4|0);
           $106 = HEAP8[$101>>0]|0;
           $107 = $106&255;
           $108 = ((($$2109)) + 16|0);
           HEAP32[$104>>2] = $107;
           $109 = (($$6119) + -4)|0;
           $$old1 = ($109>>>0)>(4);
           if ($$old1) {
            $$2109 = $108;$$6119 = $109;$$7 = $105;
           } else {
            label = 37;
            break;
           }
          }
          if ((label|0) == 37) {
           label = 0;
           $$pre$pre = HEAP8[$105>>0]|0;
           $$3110 = $108;$$7120 = $109;$$8 = $105;$112 = $$pre$pre;
           break;
          }
          else if ((label|0) == 38) {
           label = 0;
           $110 = $89&255;
           $$3110 = $$2109;$$7120 = $$6119;$$8 = $$7;$112 = $110;
           break;
          }
         } else {
          $$3110 = $$1108138;$$7120 = $$5118137;$$8 = $$6106139;$112 = $81;
         }
        } else {
         $$3110 = $$1108138;$$7120 = $$5118137;$$8 = $$6106139;$112 = $81;
        }
       } while(0);
       $111 = $112&255;
       $113 = (($111) + -1)|0;
       $114 = ($113>>>0)<(127);
       if (!($114)) {
        break;
       }
       $115 = ((($$8)) + 1|0);
       $116 = ((($$3110)) + 4|0);
       HEAP32[$$3110>>2] = $111;
       $117 = (($$7120) + -1)|0;
       $118 = ($117|0)==(0);
       if ($118) {
        $$6106$lcssa = $115;
        break L22;
       } else {
        $$1108138 = $116;$$5118137 = $117;$$6106139 = $115;
       }
      }
      $119 = (($111) + -194)|0;
      $120 = ($119>>>0)>(50);
      if ($120) {
       $$11163 = $$8;$$5112162 = $$3110;$$9122161 = $$7120;
       label = 53;
       break L20;
      }
      $121 = ((($$8)) + 1|0);
      $122 = (2876 + ($119<<2)|0);
      $123 = HEAP32[$122>>2]|0;
      $$4 = $123;$$4111 = $$3110;$$8121 = $$7120;$$9 = $121;
      label = 43;
      continue L19;
     }
    } while(0);
    HEAP32[$1>>2] = $$6106$lcssa;
    $$099 = $2;
    label = 59;
    continue L19;
   }
   else if ((label|0) == 25) {
    label = 0;
    $59 = HEAP8[$$4104>>0]|0;
    $60 = $59&255;
    $61 = $60 >>> 3;
    $62 = (($61) + -16)|0;
    $63 = $$2 >> 26;
    $64 = (($61) + ($63))|0;
    $65 = $62 | $64;
    $66 = ($65>>>0)>(7);
    if ($66) {
     $$5112 = $0;$$6 = $$2;$$9$sink = $$4104;$$9122 = $$4117;
     label = 52;
    } else {
     $67 = ((($$4104)) + 1|0);
     $68 = $$2 & 33554432;
     $69 = ($68|0)==(0);
     if ($69) {
      $$5105 = $67;
     } else {
      $70 = HEAP8[$67>>0]|0;
      $71 = $70 & -64;
      $72 = ($71<<24>>24)==(-128);
      if (!($72)) {
       $$5112 = $0;$$6 = $$2;$$9$sink = $$4104;$$9122 = $$4117;
       label = 52;
       break;
      }
      $73 = ((($$4104)) + 2|0);
      $74 = $$2 & 524288;
      $75 = ($74|0)==(0);
      if ($75) {
       $$5105 = $73;
      } else {
       $76 = HEAP8[$73>>0]|0;
       $77 = $76 & -64;
       $78 = ($77<<24>>24)==(-128);
       if (!($78)) {
        $$5112 = $0;$$6 = $$2;$$9$sink = $$4104;$$9122 = $$4117;
        label = 52;
        break;
       }
       $79 = ((($$4104)) + 3|0);
       $$5105 = $79;
      }
     }
     $80 = (($$4117) + -1)|0;
     $$1101$ph = $$5105;$$1114$ph = $80;
     label = 14;
     continue L19;
    }
   }
   else if ((label|0) == 43) {
    label = 0;
    $124 = HEAP8[$$9>>0]|0;
    $125 = $124&255;
    $126 = $125 >>> 3;
    $127 = (($126) + -16)|0;
    $128 = $$4 >> 26;
    $129 = (($126) + ($128))|0;
    $130 = $127 | $129;
    $131 = ($130>>>0)>(7);
    if ($131) {
     $$5112 = $$4111;$$6 = $$4;$$9$sink = $$9;$$9122 = $$8121;
     label = 52;
    } else {
     $132 = $$4 << 6;
     $133 = ((($$9)) + 1|0);
     $134 = (($125) + -128)|0;
     $135 = $134 | $132;
     $136 = ($135|0)<(0);
     do {
      if ($136) {
       $137 = HEAP8[$133>>0]|0;
       $138 = $137&255;
       $139 = (($138) + -128)|0;
       $140 = ($139>>>0)>(63);
       if ($140) {
        $141 = ((($$9)) + -1|0);
        $$11124 = $141;$$5112123 = $$4111;
        break L20;
       }
       $142 = $135 << 6;
       $143 = ((($$9)) + 2|0);
       $144 = $139 | $142;
       $145 = ($144|0)<(0);
       if ($145) {
        $146 = HEAP8[$143>>0]|0;
        $147 = $146&255;
        $148 = (($147) + -128)|0;
        $149 = ($148>>>0)>(63);
        if ($149) {
         $150 = ((($$9)) + -1|0);
         $$11124 = $150;$$5112123 = $$4111;
         break L20;
        } else {
         $151 = $144 << 6;
         $152 = ((($$9)) + 3|0);
         $153 = $148 | $151;
         $$10 = $152;$$5 = $153;
         break;
        }
       } else {
        $$10 = $143;$$5 = $144;
       }
      } else {
       $$10 = $133;$$5 = $135;
      }
     } while(0);
     $154 = ((($$4111)) + 4|0);
     HEAP32[$$4111>>2] = $$5;
     $155 = (($$8121) + -1)|0;
     $$1108$ph = $154;$$5118$ph = $155;$$6106$ph = $$10;
     label = 15;
     continue L19;
    }
   }
   else if ((label|0) == 59) {
    label = 0;
    return ($$099|0);
   }
  } while(0);
  if ((label|0) == 52) {
   label = 0;
   $156 = ((($$9$sink)) + -1|0);
   $157 = ($$6|0)==(0);
   if ($157) {
    $$11163 = $156;$$5112162 = $$5112;$$9122161 = $$9122;
    label = 53;
   } else {
    $$11124 = $156;$$5112123 = $$5112;
   }
  }
  if ((label|0) == 53) {
   label = 0;
   $158 = HEAP8[$$11163>>0]|0;
   $159 = ($158<<24>>24)==(0);
   if ($159) {
    $160 = ($$5112162|0)==(0|0);
    if (!($160)) {
     HEAP32[$$5112162>>2] = 0;
     HEAP32[$1>>2] = 0;
    }
    $161 = (($2) - ($$9122161))|0;
    $$099 = $161;
    label = 59;
    continue;
   } else {
    $$11124 = $$11163;$$5112123 = $$5112162;
   }
  }
  $162 = (___errno_location()|0);
  HEAP32[$162>>2] = 84;
  $163 = ($$5112123|0)==(0|0);
  if ($163) {
   $$099 = -1;
   label = 59;
   continue;
  }
  HEAP32[$1>>2] = $$11124;
  $$099 = -1;
  label = 59;
 }
 return (0)|0;
}
function ___pthread_self_209() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _wcsrtombs($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$05675 = 0, $$057$lcssa = 0, $$05785 = 0, $$05874 = 0, $$1 = 0, $$159 = 0, $$260$lcssa = 0, $$26084 = 0, $$279 = 0, $$3 = 0, $$361 = 0, $$478 = 0, $$5 = 0, $$pn = 0, $$pre = 0, $$pre100 = 0, $$pre101 = 0, $$pre102 = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($0|0)==(0|0);
 L1: do {
  if ($5) {
   $7 = HEAP32[$1>>2]|0;
   $8 = HEAP32[$7>>2]|0;
   $9 = ($8|0)==(0);
   if ($9) {
    $$0 = 0;
   } else {
    $$05675 = $7;$$05874 = 0;$10 = $8;
    while(1) {
     $11 = ($10>>>0)>(127);
     if ($11) {
      $12 = (_wcrtomb($4,$10,0)|0);
      $13 = ($12|0)==(-1);
      if ($13) {
       $$0 = -1;
       break L1;
      } else {
       $$pn = $12;
      }
     } else {
      $$pn = 1;
     }
     $$159 = (($$pn) + ($$05874))|0;
     $14 = ((($$05675)) + 4|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==(0);
     if ($16) {
      $$0 = $$159;
      break;
     } else {
      $$05675 = $14;$$05874 = $$159;$10 = $15;
     }
    }
   }
  } else {
   $6 = ($2>>>0)>(3);
   L9: do {
    if ($6) {
     $$pre = HEAP32[$1>>2]|0;
     $$05785 = $0;$$26084 = $2;$19 = $$pre;
     while(1) {
      $18 = HEAP32[$19>>2]|0;
      $20 = (($18) + -1)|0;
      $21 = ($20>>>0)>(126);
      if ($21) {
       $22 = ($18|0)==(0);
       if ($22) {
        break;
       }
       $24 = (_wcrtomb($$05785,$18,0)|0);
       $25 = ($24|0)==(-1);
       if ($25) {
        $$0 = -1;
        break L1;
       }
       $26 = (($$05785) + ($24)|0);
       $27 = (($$26084) - ($24))|0;
       $$1 = $26;$$361 = $27;$32 = $19;
      } else {
       $28 = $18&255;
       $29 = ((($$05785)) + 1|0);
       HEAP8[$$05785>>0] = $28;
       $30 = (($$26084) + -1)|0;
       $$pre100 = HEAP32[$1>>2]|0;
       $$1 = $29;$$361 = $30;$32 = $$pre100;
      }
      $31 = ((($32)) + 4|0);
      HEAP32[$1>>2] = $31;
      $33 = ($$361>>>0)>(3);
      if ($33) {
       $$05785 = $$1;$$26084 = $$361;$19 = $31;
      } else {
       $$057$lcssa = $$1;$$260$lcssa = $$361;
       break L9;
      }
     }
     HEAP8[$$05785>>0] = 0;
     HEAP32[$1>>2] = 0;
     $23 = (($2) - ($$26084))|0;
     $$0 = $23;
     break L1;
    } else {
     $$057$lcssa = $0;$$260$lcssa = $2;
    }
   } while(0);
   $17 = ($$260$lcssa|0)==(0);
   if ($17) {
    $$0 = $2;
   } else {
    $$pre101 = HEAP32[$1>>2]|0;
    $$279 = $$057$lcssa;$$478 = $$260$lcssa;$35 = $$pre101;
    while(1) {
     $34 = HEAP32[$35>>2]|0;
     $36 = (($34) + -1)|0;
     $37 = ($36>>>0)>(126);
     if ($37) {
      $38 = ($34|0)==(0);
      if ($38) {
       label = 19;
       break;
      }
      $40 = (_wcrtomb($4,$34,0)|0);
      $41 = ($40|0)==(-1);
      if ($41) {
       $$0 = -1;
       break L1;
      }
      $42 = ($$478>>>0)<($40>>>0);
      if ($42) {
       label = 22;
       break;
      }
      $44 = HEAP32[$35>>2]|0;
      (_wcrtomb($$279,$44,0)|0);
      $45 = (($$279) + ($40)|0);
      $46 = (($$478) - ($40))|0;
      $$3 = $45;$$5 = $46;$51 = $35;
     } else {
      $47 = $34&255;
      $48 = ((($$279)) + 1|0);
      HEAP8[$$279>>0] = $47;
      $49 = (($$478) + -1)|0;
      $$pre102 = HEAP32[$1>>2]|0;
      $$3 = $48;$$5 = $49;$51 = $$pre102;
     }
     $50 = ((($51)) + 4|0);
     HEAP32[$1>>2] = $50;
     $52 = ($$5|0)==(0);
     if ($52) {
      $$0 = $2;
      break L1;
     } else {
      $$279 = $$3;$$478 = $$5;$35 = $50;
     }
    }
    if ((label|0) == 19) {
     HEAP8[$$279>>0] = 0;
     HEAP32[$1>>2] = 0;
     $39 = (($2) - ($$478))|0;
     $$0 = $39;
     break;
    }
    else if ((label|0) == 22) {
     $43 = (($2) - ($$478))|0;
     $$0 = $43;
     break;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _mbrlen($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)!=(0|0);
 $4 = $3 ? $2 : 55996;
 $5 = (_mbrtowc(0,$0,$1,$4)|0);
 return ($5|0);
}
function _btowc($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0 & 255;
 $2 = ($1>>>0)<(128);
 if ($2) {
  return ($1|0);
 } else {
  $3 = (___pthread_self_223()|0);
  $4 = ((($3)) + 188|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)==(0|0);
  $8 = ($0|0)!=(-1);
  $or$cond = $8 & $7;
  $sext = $0 << 24;
  $9 = $sext >> 24;
  $10 = $9 & 57343;
  $$ = $or$cond ? $10 : -1;
  return ($$|0);
 }
 return (0)|0;
}
function ___pthread_self_223() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _mbtowc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($1|0)==(0|0);
 L1: do {
  if ($4) {
   $$0 = 0;
  } else {
   $5 = ($2|0)==(0);
   do {
    if (!($5)) {
     $6 = ($0|0)==(0|0);
     $$ = $6 ? $3 : $0;
     $7 = HEAP8[$1>>0]|0;
     $8 = ($7<<24>>24)>(-1);
     if ($8) {
      $9 = $7&255;
      HEAP32[$$>>2] = $9;
      $10 = ($7<<24>>24)!=(0);
      $11 = $10&1;
      $$0 = $11;
      break L1;
     }
     $12 = (___pthread_self_224()|0);
     $13 = ((($12)) + 188|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==(0|0);
     $17 = HEAP8[$1>>0]|0;
     if ($16) {
      $18 = $17 << 24 >> 24;
      $19 = $18 & 57343;
      HEAP32[$$>>2] = $19;
      $$0 = 1;
      break L1;
     }
     $20 = $17&255;
     $21 = (($20) + -194)|0;
     $22 = ($21>>>0)>(50);
     if (!($22)) {
      $23 = ((($1)) + 1|0);
      $24 = (2876 + ($21<<2)|0);
      $25 = HEAP32[$24>>2]|0;
      $26 = ($2>>>0)<(4);
      if ($26) {
       $27 = ($2*6)|0;
       $28 = (($27) + -6)|0;
       $29 = -2147483648 >>> $28;
       $30 = $25 & $29;
       $31 = ($30|0)==(0);
       if (!($31)) {
        break;
       }
      }
      $32 = HEAP8[$23>>0]|0;
      $33 = $32&255;
      $34 = $33 >>> 3;
      $35 = (($34) + -16)|0;
      $36 = $25 >> 26;
      $37 = (($34) + ($36))|0;
      $38 = $35 | $37;
      $39 = ($38>>>0)>(7);
      if (!($39)) {
       $40 = $25 << 6;
       $41 = (($33) + -128)|0;
       $42 = $41 | $40;
       $43 = ($42|0)<(0);
       if (!($43)) {
        HEAP32[$$>>2] = $42;
        $$0 = 2;
        break L1;
       }
       $44 = ((($1)) + 2|0);
       $45 = HEAP8[$44>>0]|0;
       $46 = $45&255;
       $47 = (($46) + -128)|0;
       $48 = ($47>>>0)>(63);
       if (!($48)) {
        $49 = $42 << 6;
        $50 = $47 | $49;
        $51 = ($50|0)<(0);
        if (!($51)) {
         HEAP32[$$>>2] = $50;
         $$0 = 3;
         break L1;
        }
        $52 = ((($1)) + 3|0);
        $53 = HEAP8[$52>>0]|0;
        $54 = $53&255;
        $55 = (($54) + -128)|0;
        $56 = ($55>>>0)>(63);
        if (!($56)) {
         $57 = $50 << 6;
         $58 = $55 | $57;
         HEAP32[$$>>2] = $58;
         $$0 = 4;
         break L1;
        }
       }
      }
     }
    }
   } while(0);
   $59 = (___errno_location()|0);
   HEAP32[$59>>2] = 84;
   $$0 = -1;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___pthread_self_224() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _getcwd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$06 = 0, $$07 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4112|0);
 $vararg_buffer = sp;
 $2 = sp + 8|0;
 $3 = ($0|0)==(0|0);
 if ($3) {
  $$0 = 4096;$$06 = $2;
  label = 4;
 } else {
  $4 = ($1|0)==(0);
  if ($4) {
   $5 = (___errno_location()|0);
   HEAP32[$5>>2] = 22;
   $$07 = 0;
  } else {
   $$0 = $1;$$06 = $0;
   label = 4;
  }
 }
 if ((label|0) == 4) {
  $6 = $$06;
  HEAP32[$vararg_buffer>>2] = $6;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $$0;
  $7 = (___syscall183(183,($vararg_buffer|0))|0);
  $8 = (___syscall_ret($7)|0);
  $9 = ($8|0)<(0);
  if ($9) {
   $$07 = 0;
  } else {
   $10 = ($$06|0)==($2|0);
   if ($10) {
    $11 = (___strdup($2)|0);
    $$07 = $11;
   } else {
    $$07 = $$06;
   }
  }
 }
 STACKTOP = sp;return ($$07|0);
}
function ___strdup($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_strlen($0)|0);
 $2 = (($1) + 1)|0;
 $3 = (_malloc($2)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0 = 0;
 } else {
  $5 = (_memcpy(($3|0),($0|0),($2|0))|0);
  $$0 = $5;
 }
 return ($$0|0);
}
function _symlink($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $3;
 $4 = (___syscall83(83,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function _getpid() {
 var $0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $0 = (___syscall20(20,($vararg_buffer|0))|0);
 STACKTOP = sp;return ($0|0);
}
function _link($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $3;
 $4 = (___syscall9(9,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function _lchown($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $3 = $0;
 HEAP32[$vararg_buffer>>2] = $3;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $2;
 $4 = (___syscall198(198,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function _wcscspn($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$015$lcssa = 0, $$01516 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 do {
  if ($3) {
   $4 = (_wcslen($0)|0);
   $$0 = $4;
  } else {
   $5 = ((($1)) + 4|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    $10 = (_wcschr($0,$2)|0);
    $11 = ($10|0)==(0|0);
    if ($11) {
     $16 = (_wcslen($0)|0);
     $$0 = $16;
     break;
    } else {
     $12 = $10;
     $13 = $0;
     $14 = (($12) - ($13))|0;
     $15 = $14 >> 2;
     $$0 = $15;
     break;
    }
   }
   $8 = HEAP32[$0>>2]|0;
   $9 = ($8|0)==(0);
   L10: do {
    if ($9) {
     $$015$lcssa = $0;
    } else {
     $$01516 = $0;$17 = $8;
     while(1) {
      $18 = (_wcschr($1,$17)|0);
      $19 = ($18|0)==(0|0);
      if (!($19)) {
       $$015$lcssa = $$01516;
       break L10;
      }
      $20 = ((($$01516)) + 4|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = ($21|0)==(0);
      if ($22) {
       $$015$lcssa = $20;
       break;
      } else {
       $$01516 = $20;$17 = $21;
      }
     }
    }
   } while(0);
   $23 = $$015$lcssa;
   $24 = $0;
   $25 = (($23) - ($24))|0;
   $26 = $25 >> 2;
   $$0 = $26;
  }
 } while(0);
 return ($$0|0);
}
function _wcscpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$05 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $0;$$05 = $1;
 while(1) {
  $2 = ((($$05)) + 4|0);
  $3 = HEAP32[$$05>>2]|0;
  $4 = ((($$0)) + 4|0);
  HEAP32[$$0>>2] = $3;
  $5 = ($3|0)==(0);
  if ($5) {
   break;
  } else {
   $$0 = $4;$$05 = $2;
  }
 }
 return ($0|0);
}
function _wmemchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$067 = 0, $$08 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $9 = 0;
  } else {
   $$067 = $0;$$08 = $2;
   while(1) {
    $4 = HEAP32[$$067>>2]|0;
    $5 = ($4|0)==($1|0);
    if ($5) {
     $9 = $$067;
     break L1;
    }
    $6 = (($$08) + -1)|0;
    $7 = ((($$067)) + 4|0);
    $8 = ($6|0)==(0);
    if ($8) {
     $9 = 0;
     break;
    } else {
     $$067 = $7;$$08 = $6;
    }
   }
  }
 } while(0);
 return ($9|0);
}
function _wcsncat($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$01013 = 0, $$01112 = 0, $$014 = 0, $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_wcslen($0)|0);
 $4 = (($0) + ($3<<2)|0);
 $5 = ($2|0)==(0);
 L1: do {
  if ($5) {
   $$0$lcssa = $4;
  } else {
   $$01013 = $2;$$01112 = $1;$$014 = $4;
   while(1) {
    $6 = HEAP32[$$01112>>2]|0;
    $7 = ($6|0)==(0);
    if ($7) {
     $$0$lcssa = $$014;
     break L1;
    }
    $8 = (($$01013) + -1)|0;
    $9 = ((($$01112)) + 4|0);
    $10 = ((($$014)) + 4|0);
    HEAP32[$$014>>2] = $6;
    $11 = ($8|0)==(0);
    if ($11) {
     $$0$lcssa = $10;
     break;
    } else {
     $$01013 = $8;$$01112 = $9;$$014 = $10;
    }
   }
  }
 } while(0);
 HEAP32[$$0$lcssa>>2] = 0;
 return ($0|0);
}
function _wcscat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_wcslen($0)|0);
 $3 = (($0) + ($2<<2)|0);
 (_wcscpy($3,$1)|0);
 return ($0|0);
}
function ___stpncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$037$lcssa = 0, $$03753 = 0, $$038$lcssa = 0, $$03866 = 0, $$039$lcssa = 0, $$03965 = 0, $$041$lcssa = 0, $$04164 = 0, $$054 = 0, $$1$lcssa = 0, $$140$ph = 0, $$14046 = 0, $$142$ph = 0, $$14245 = 0, $$152 = 0, $$2$ph = 0, $$243 = 0, $$247 = 0, $$3 = 0;
 var $$lcssa = 0, $$pr = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond63 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1;
 $4 = $0;
 $5 = $3 ^ $4;
 $6 = $5 & 3;
 $7 = ($6|0)==(0);
 L1: do {
  if ($7) {
   $8 = $3 & 3;
   $9 = ($8|0)!=(0);
   $10 = ($2|0)!=(0);
   $or$cond63 = $10 & $9;
   if ($or$cond63) {
    $$03866 = $2;$$03965 = $1;$$04164 = $0;
    while(1) {
     $11 = HEAP8[$$03965>>0]|0;
     HEAP8[$$04164>>0] = $11;
     $12 = ($11<<24>>24)==(0);
     if ($12) {
      $$243 = $$04164;$$3 = $$03866;
      break L1;
     }
     $13 = (($$03866) + -1)|0;
     $14 = ((($$03965)) + 1|0);
     $15 = ((($$04164)) + 1|0);
     $16 = $14;
     $17 = $16 & 3;
     $18 = ($17|0)!=(0);
     $19 = ($13|0)!=(0);
     $or$cond = $19 & $18;
     if ($or$cond) {
      $$03866 = $13;$$03965 = $14;$$04164 = $15;
     } else {
      $$038$lcssa = $13;$$039$lcssa = $14;$$041$lcssa = $15;$$lcssa = $19;
      break;
     }
    }
   } else {
    $$038$lcssa = $2;$$039$lcssa = $1;$$041$lcssa = $0;$$lcssa = $10;
   }
   if ($$lcssa) {
    $$pr = HEAP8[$$039$lcssa>>0]|0;
    $20 = ($$pr<<24>>24)==(0);
    if ($20) {
     $$243 = $$041$lcssa;$$3 = $$038$lcssa;
    } else {
     $21 = ($$038$lcssa>>>0)>(3);
     L10: do {
      if ($21) {
       $$03753 = $$041$lcssa;$$054 = $$039$lcssa;$$152 = $$038$lcssa;
       while(1) {
        $22 = HEAP32[$$054>>2]|0;
        $23 = (($22) + -16843009)|0;
        $24 = $22 & -2139062144;
        $25 = $24 ^ -2139062144;
        $26 = $25 & $23;
        $27 = ($26|0)==(0);
        if (!($27)) {
         $$0$lcssa = $$054;$$037$lcssa = $$03753;$$1$lcssa = $$152;
         break L10;
        }
        HEAP32[$$03753>>2] = $22;
        $28 = (($$152) + -4)|0;
        $29 = ((($$054)) + 4|0);
        $30 = ((($$03753)) + 4|0);
        $31 = ($28>>>0)>(3);
        if ($31) {
         $$03753 = $30;$$054 = $29;$$152 = $28;
        } else {
         $$0$lcssa = $29;$$037$lcssa = $30;$$1$lcssa = $28;
         break;
        }
       }
      } else {
       $$0$lcssa = $$039$lcssa;$$037$lcssa = $$041$lcssa;$$1$lcssa = $$038$lcssa;
      }
     } while(0);
     $$140$ph = $$0$lcssa;$$142$ph = $$037$lcssa;$$2$ph = $$1$lcssa;
     label = 11;
    }
   } else {
    $$243 = $$041$lcssa;$$3 = 0;
   }
  } else {
   $$140$ph = $1;$$142$ph = $0;$$2$ph = $2;
   label = 11;
  }
 } while(0);
 L15: do {
  if ((label|0) == 11) {
   $32 = ($$2$ph|0)==(0);
   if ($32) {
    $$243 = $$142$ph;$$3 = 0;
   } else {
    $$14046 = $$140$ph;$$14245 = $$142$ph;$$247 = $$2$ph;
    while(1) {
     $33 = HEAP8[$$14046>>0]|0;
     HEAP8[$$14245>>0] = $33;
     $34 = ($33<<24>>24)==(0);
     if ($34) {
      $$243 = $$14245;$$3 = $$247;
      break L15;
     }
     $35 = (($$247) + -1)|0;
     $36 = ((($$14046)) + 1|0);
     $37 = ((($$14245)) + 1|0);
     $38 = ($35|0)==(0);
     if ($38) {
      $$243 = $37;$$3 = 0;
      break;
     } else {
      $$14046 = $36;$$14245 = $37;$$247 = $35;
     }
    }
   }
  }
 } while(0);
 (_memset(($$243|0),0,($$3|0))|0);
 return ($$243|0);
}
function _wcsncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$01011 = 0, $$013 = 0, $$09$lcssa = 0, $$0912 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$0$lcssa = $0;$$09$lcssa = 0;
  } else {
   $$01011 = $1;$$013 = $0;$$0912 = $2;
   while(1) {
    $4 = HEAP32[$$01011>>2]|0;
    $5 = ($4|0)==(0);
    if ($5) {
     $$0$lcssa = $$013;$$09$lcssa = $$0912;
     break L1;
    }
    $6 = (($$0912) + -1)|0;
    $7 = ((($$01011)) + 4|0);
    $8 = ((($$013)) + 4|0);
    HEAP32[$$013>>2] = $4;
    $9 = ($6|0)==(0);
    if ($9) {
     $$0$lcssa = $8;$$09$lcssa = 0;
     break;
    } else {
     $$01011 = $7;$$013 = $8;$$0912 = $6;
    }
   }
  }
 } while(0);
 (_wmemset($$0$lcssa,0,$$09$lcssa)|0);
 return ($0|0);
}
function _wmemset($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$056 = 0, $$07 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $$056 = $2;$$07 = $0;
  while(1) {
   $4 = (($$056) + -1)|0;
   $5 = ((($$07)) + 4|0);
   HEAP32[$$07>>2] = $1;
   $6 = ($4|0)==(0);
   if ($6) {
    break;
   } else {
    $$056 = $4;$$07 = $5;
   }
  }
 }
 return ($0|0);
}
function _wcsncmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01218 = 0, $$01317 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $14 = 0;
  } else {
   $$01218 = $1;$$01317 = $0;$$019 = $2;
   while(1) {
    $4 = HEAP32[$$01317>>2]|0;
    $5 = HEAP32[$$01218>>2]|0;
    $6 = ($4|0)!=($5|0);
    $7 = ($4|0)==(0);
    $or$cond = $7 | $6;
    $8 = ($5|0)==(0);
    $or$cond14 = $8 | $or$cond;
    if ($or$cond14) {
     break;
    }
    $9 = (($$019) + -1)|0;
    $10 = ((($$01317)) + 4|0);
    $11 = ((($$01218)) + 4|0);
    $12 = ($9|0)==(0);
    if ($12) {
     $14 = 0;
     break L1;
    } else {
     $$01218 = $11;$$01317 = $10;$$019 = $9;
    }
   }
   $13 = (($4) - ($5))|0;
   $14 = $13;
  }
 } while(0);
 return ($14|0);
}
function _wcsrchr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$010 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_wcslen($0)|0);
 $3 = ($2|0)>(-1);
 L1: do {
  if ($3) {
   $4 = (($0) + ($2<<2)|0);
   $$010 = $4;
   while(1) {
    $5 = HEAP32[$$010>>2]|0;
    $6 = ($5|0)==($1|0);
    if ($6) {
     $9 = $$010;
     break L1;
    }
    $7 = ((($$010)) + -4|0);
    $8 = ($7>>>0)<($0>>>0);
    if ($8) {
     $9 = 0;
     break;
    } else {
     $$010 = $7;
    }
   }
  } else {
   $9 = 0;
  }
 } while(0);
 return ($9|0);
}
function _wmemmove($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01417 = 0, $$019 = 0, $$118 = 0, $$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $0;
 $4 = $1;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($2>>>0);
 if ($7) {
  $$in = $2;
  while(1) {
   $9 = (($$in) + -1)|0;
   $10 = (($1) + ($9<<2)|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (($0) + ($9<<2)|0);
   HEAP32[$12>>2] = $11;
   $13 = ($9|0)==(0);
   if ($13) {
    break;
   } else {
    $$in = $9;
   }
  }
 } else {
  $8 = ($2|0)==(0);
  if (!($8)) {
   $$01417 = $1;$$019 = $0;$$118 = $2;
   while(1) {
    $14 = (($$118) + -1)|0;
    $15 = ((($$01417)) + 4|0);
    $16 = HEAP32[$$01417>>2]|0;
    $17 = ((($$019)) + 4|0);
    HEAP32[$$019>>2] = $16;
    $18 = ($14|0)==(0);
    if ($18) {
     break;
    } else {
     $$01417 = $15;$$019 = $17;$$118 = $14;
    }
   }
  }
 }
 return ($0|0);
}
function _wcspbrk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_wcscspn($0,$1)|0);
 $3 = (($0) + ($2<<2)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)!=(0);
 $6 = $5 ? $3 : 0;
 return ($6|0);
}
function _wcsspn($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$08 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$0$lcssa = $0;
  } else {
   $$08 = $0;$4 = $2;
   while(1) {
    $5 = (_wcschr($1,$4)|0);
    $6 = ($5|0)==(0|0);
    if ($6) {
     $$0$lcssa = $$08;
     break L1;
    }
    $7 = ((($$08)) + 4|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = ($8|0)==(0);
    if ($9) {
     $$0$lcssa = $7;
     break;
    } else {
     $$08 = $7;$4 = $8;
    }
   }
  }
 } while(0);
 $10 = $$0$lcssa;
 $11 = $0;
 $12 = (($10) - ($11))|0;
 $13 = $12 >> 2;
 return ($13|0);
}
function _strncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpncpy($0,$1,$2)|0);
 return ($0|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((56000|0));
 return (56008|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((56000|0));
 return;
}
function _fflush($0) {
 $0 = $0|0;
 var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $8 = HEAP32[833]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $29 = 0;
   } else {
    $10 = HEAP32[833]|0;
    $11 = (_fflush($10)|0);
    $29 = $11;
   }
   $12 = (___ofl_lock()|0);
   $$02325 = HEAP32[$12>>2]|0;
   $13 = ($$02325|0)==(0|0);
   if ($13) {
    $$024$lcssa = $29;
   } else {
    $$02327 = $$02325;$$02426 = $29;
    while(1) {
     $14 = ((($$02327)) + 76|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)>(-1);
     if ($16) {
      $17 = (___lockfile($$02327)|0);
      $25 = $17;
     } else {
      $25 = 0;
     }
     $18 = ((($$02327)) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ((($$02327)) + 28|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($19>>>0)>($21>>>0);
     if ($22) {
      $23 = (___fflush_unlocked($$02327)|0);
      $24 = $23 | $$02426;
      $$1 = $24;
     } else {
      $$1 = $$02426;
     }
     $26 = ($25|0)==(0);
     if (!($26)) {
      ___unlockfile($$02327);
     }
     $27 = ((($$02327)) + 56|0);
     $$023 = HEAP32[$27>>2]|0;
     $28 = ($$023|0)==(0|0);
     if ($28) {
      $$024$lcssa = $$1;
      break;
     } else {
      $$02327 = $$023;$$02426 = $$1;
     }
    }
   }
   ___ofl_unlock();
   $$0 = $$024$lcssa;
  } else {
   $2 = ((($0)) + 76|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)>(-1);
   if (!($4)) {
    $5 = (___fflush_unlocked($0)|0);
    $$0 = $5;
    break;
   }
   $6 = (___lockfile($0)|0);
   $phitmp = ($6|0)==(0);
   $7 = (___fflush_unlocked($0)|0);
   if ($phitmp) {
    $$0 = $7;
   } else {
    ___unlockfile($0);
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)>($4>>>0);
 if ($5) {
  $6 = ((($0)) + 36|0);
  $7 = HEAP32[$6>>2]|0;
  (FUNCTION_TABLE_iiii[$7 & 511]($0,0,0)|0);
  $8 = HEAP32[$1>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = $11;
   $16 = $13;
   $17 = (($15) - ($16))|0;
   $18 = ((($0)) + 40|0);
   $19 = HEAP32[$18>>2]|0;
   (FUNCTION_TABLE_iiii[$19 & 511]($0,$17,1)|0);
  }
  $20 = ((($0)) + 16|0);
  HEAP32[$20>>2] = 0;
  HEAP32[$3>>2] = 0;
  HEAP32[$1>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _fwide($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 76|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)>(-1);
 if ($4) {
  $5 = (___lockfile($0)|0);
  $23 = $5;
 } else {
  $23 = 0;
 }
 $6 = ($1|0)==(0);
 if ($6) {
  $$phi$trans$insert = ((($0)) + 74|0);
  $$pre = HEAP8[$$phi$trans$insert>>0]|0;
  $22 = $$pre;
 } else {
  $7 = ((($0)) + 120|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $10 = (___pthread_self_592()|0);
   $11 = ((($10)) + 188|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$12>>2]|0;
   $14 = ($13|0)==(0|0);
   $15 = $14 ? 55880 : 2852;
   HEAP32[$7>>2] = $15;
  }
  $16 = ((($0)) + 74|0);
  $17 = HEAP8[$16>>0]|0;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $19 = ($1|0)>(0);
   $20 = $19 ? 1 : -1;
   HEAP8[$16>>0] = $20;
   $22 = $20;
  } else {
   $22 = $17;
  }
 }
 $21 = $22 << 24 >> 24;
 $24 = ($23|0)==(0);
 if (!($24)) {
  ___unlockfile($0);
 }
 return ($21|0);
}
function ___pthread_self_592() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _vfwprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $phitmp = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $3 = sp + 112|0;
 $4 = sp + 72|0;
 $5 = sp;
 dest=$4; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $6 = (_wprintf_core(0,$1,$3,$5,$4)|0);
 $7 = ($6|0)<(0);
 if ($7) {
  $$0 = -1;
 } else {
  $8 = ((($0)) + 76|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)>(-1);
  if ($10) {
   $11 = (___lockfile($0)|0);
   $phitmp = ($11|0)!=(0);
   $20 = $phitmp;
  } else {
   $20 = 0;
  }
  (_fwide($0,1)|0);
  $12 = HEAP32[$0>>2]|0;
  $13 = $12 & 32;
  $14 = $12 & -33;
  HEAP32[$0>>2] = $14;
  $15 = (_wprintf_core($0,$1,$3,$5,$4)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = $16 & 32;
  $18 = ($17|0)!=(0);
  $$ = $18 ? -1 : $15;
  $19 = $16 | $13;
  HEAP32[$0>>2] = $19;
  if ($20) {
   ___unlockfile($0);
  }
  $$0 = $$;
 }
 STACKTOP = sp;return ($$0|0);
}
function _wprintf_core($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$0181 = 0, $$$0184 = 0, $$$0188 = 0, $$0 = 0, $$0170228 = 0, $$0171 = 0, $$0174 = 0, $$0177 = 0, $$0179 = 0, $$0180 = 0, $$0181 = 0, $$0184 = 0, $$0188$lcssa = 0, $$0188221 = 0, $$0190 = 0, $$0190$phi = 0, $$1175$$1185 = 0, $$1175211 = 0, $$1175227 = 0, $$1178 = 0;
 var $$1182 = 0, $$1182$$1185 = 0, $$1185 = 0, $$1189 = 0, $$1191 = 0, $$1232 = 0, $$2$lcssa = 0, $$2176231 = 0, $$2192 = 0, $$2219 = 0, $$3193 = 0, $$3217 = 0, $$lcssa205 = 0, $$lcssa206 = 0, $$lobit = 0, $$lobit195 = 0, $$lobit196 = 0, $$lobit197 = 0, $$pre = 0, $$pre250 = 0;
 var $$pre252 = 0, $$pre253 = 0, $$pre253$pre = 0, $$pre254 = 0, $$pre256 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0.0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0;
 var $brmerge = 0, $brmerge220 = 0, $expanded = 0, $expanded36 = 0, $expanded38 = 0, $expanded39 = 0, $expanded40 = 0, $expanded42 = 0, $expanded43 = 0, $expanded45 = 0, $expanded46 = 0, $expanded47 = 0, $or$cond = 0, $storemerge198 = 0, $trunc = 0, $vararg_buffer = 0, $vararg_buffer13 = 0, $vararg_buffer17 = 0, $vararg_buffer26 = 0, $vararg_buffer31 = 0;
 var $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr12 = 0, $vararg_ptr16 = 0, $vararg_ptr20 = 0, $vararg_ptr21 = 0, $vararg_ptr22 = 0, $vararg_ptr23 = 0, $vararg_ptr24 = 0, $vararg_ptr25 = 0, $vararg_ptr29 = 0, $vararg_ptr30 = 0, $vararg_ptr34 = 0, $vararg_ptr35 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $vararg_buffer31 = sp + 88|0;
 $vararg_buffer26 = sp + 72|0;
 $vararg_buffer17 = sp + 40|0;
 $vararg_buffer13 = sp + 32|0;
 $vararg_buffer9 = sp + 24|0;
 $vararg_buffer5 = sp + 16|0;
 $vararg_buffer = sp + 8|0;
 $5 = sp + 108|0;
 $6 = sp;
 $7 = sp + 112|0;
 $8 = sp + 104|0;
 HEAP32[$5>>2] = $1;
 $9 = ($0|0)!=(0|0);
 $$0174 = 0;$$0177 = 0;$$0190 = 0;
 L1: while(1) {
  $10 = ($$0177|0)>(-1);
  do {
   if ($10) {
    $11 = (2147483647 - ($$0177))|0;
    $12 = ($$0174|0)>($11|0);
    if (!($12)) {
     $17 = (($$0174) + ($$0177))|0;
     $$1178 = $17;
     break;
    }
    $13 = HEAP32[$0>>2]|0;
    $14 = $13 & 32;
    $15 = ($14|0)==(0);
    if ($15) {
     $16 = (___errno_location()|0);
     HEAP32[$16>>2] = 75;
     $$1178 = -1;
    } else {
     $$1178 = -1;
    }
   } else {
    $$1178 = $$0177;
   }
  } while(0);
  $18 = HEAP32[$5>>2]|0;
  $19 = HEAP32[$18>>2]|0;
  $20 = ($19|0)==(0);
  if ($20) {
   label = 82;
   break;
  } else {
   $21 = $19;$23 = $18;
  }
  L10: while(1) {
   switch ($21|0) {
   case 37: case 0:  {
    break L10;
    break;
   }
   default: {
   }
   }
   $22 = ((($23)) + 4|0);
   HEAP32[$5>>2] = $22;
   $$pre = HEAP32[$22>>2]|0;
   $21 = $$pre;$23 = $22;
  }
  $24 = (_wcsspn($23,3832)|0);
  $25 = $24 >>> 1;
  $26 = HEAP32[$5>>2]|0;
  $27 = (($26) + ($25<<2)|0);
  $28 = $24 & -2;
  $29 = (($26) + ($28<<2)|0);
  HEAP32[$5>>2] = $29;
  $30 = $27;
  $31 = $18;
  $32 = (($30) - ($31))|0;
  $33 = $32 >> 2;
  if ($9) {
   _out_560($0,$18,$33);
  }
  $34 = ($33|0)==(0);
  if (!($34)) {
   $$0190$phi = $$0190;$$0174 = $33;$$0177 = $$1178;$$0190 = $$0190$phi;
   continue;
  }
  $35 = HEAP32[$5>>2]|0;
  $36 = ((($35)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (_iswdigit($37)|0);
  $39 = ($38|0)==(0);
  $$pre250 = HEAP32[$5>>2]|0;
  if ($39) {
   $$0180 = -1;$$1191 = $$0190;$$sink = 1;
  } else {
   $40 = ((($$pre250)) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ($41|0)==(36);
   if ($42) {
    $43 = ((($$pre250)) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = (($44) + -48)|0;
    $$0180 = $45;$$1191 = 1;$$sink = 3;
   } else {
    $$0180 = -1;$$1191 = $$0190;$$sink = 1;
   }
  }
  $46 = (($$pre250) + ($$sink<<2)|0);
  HEAP32[$5>>2] = $46;
  $47 = HEAP32[$46>>2]|0;
  $48 = (($47) + -32)|0;
  $49 = ($48>>>0)>(31);
  $50 = 1 << $48;
  $51 = $50 & 75913;
  $52 = ($51|0)==(0);
  $brmerge220 = $49 | $52;
  if ($brmerge220) {
   $$0188$lcssa = 0;$$lcssa205 = $47;$$lcssa206 = $46;
  } else {
   $$0188221 = 0;$54 = $47;$58 = $46;
   while(1) {
    $53 = (($54) + -32)|0;
    $55 = 1 << $53;
    $56 = $55 | $$0188221;
    $57 = ((($58)) + 4|0);
    $59 = HEAP32[$57>>2]|0;
    $60 = (($59) + -32)|0;
    $61 = ($60>>>0)>(31);
    $62 = 1 << $60;
    $63 = $62 & 75913;
    $64 = ($63|0)==(0);
    $brmerge = $61 | $64;
    if ($brmerge) {
     break;
    } else {
     $$0188221 = $56;$54 = $59;$58 = $57;
    }
   }
   HEAP32[$5>>2] = $57;
   $$0188$lcssa = $56;$$lcssa205 = $59;$$lcssa206 = $57;
  }
  $65 = ($$lcssa205|0)==(42);
  if ($65) {
   $66 = ((($$lcssa206)) + 4|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = (_iswdigit($67)|0);
   $69 = ($68|0)==(0);
   if ($69) {
    label = 23;
   } else {
    $70 = HEAP32[$5>>2]|0;
    $71 = ((($70)) + 8|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ($72|0)==(36);
    if ($73) {
     $74 = ((($70)) + 4|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (($75) + -48)|0;
     $77 = (($4) + ($76<<2)|0);
     HEAP32[$77>>2] = 10;
     $78 = HEAP32[$74>>2]|0;
     $79 = (($78) + -48)|0;
     $80 = (($3) + ($79<<3)|0);
     $81 = $80;
     $82 = $81;
     $83 = HEAP32[$82>>2]|0;
     $84 = (($81) + 4)|0;
     $85 = $84;
     $86 = HEAP32[$85>>2]|0;
     $87 = ((($70)) + 12|0);
     $$0184 = $83;$$2192 = 1;$storemerge198 = $87;
    } else {
     label = 23;
    }
   }
   if ((label|0) == 23) {
    label = 0;
    $88 = ($$1191|0)==(0);
    if (!($88)) {
     $$0 = -1;
     break;
    }
    if ($9) {
     $arglist_current = HEAP32[$2>>2]|0;
     $89 = $arglist_current;
     $90 = ((0) + 4|0);
     $expanded36 = $90;
     $expanded = (($expanded36) - 1)|0;
     $91 = (($89) + ($expanded))|0;
     $92 = ((0) + 4|0);
     $expanded40 = $92;
     $expanded39 = (($expanded40) - 1)|0;
     $expanded38 = $expanded39 ^ -1;
     $93 = $91 & $expanded38;
     $94 = $93;
     $95 = HEAP32[$94>>2]|0;
     $arglist_next = ((($94)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     $292 = $95;
    } else {
     $292 = 0;
    }
    $96 = HEAP32[$5>>2]|0;
    $97 = ((($96)) + 4|0);
    $$0184 = $292;$$2192 = 0;$storemerge198 = $97;
   }
   HEAP32[$5>>2] = $storemerge198;
   $98 = ($$0184|0)<(0);
   $99 = $$0188$lcssa | 8192;
   $100 = (0 - ($$0184))|0;
   $$$0188 = $98 ? $99 : $$0188$lcssa;
   $$$0184 = $98 ? $100 : $$0184;
   $$1185 = $$$0184;$$1189 = $$$0188;$$3193 = $$2192;$104 = $storemerge198;
  } else {
   $101 = (_getint_561($5)|0);
   $102 = ($101|0)<(0);
   if ($102) {
    $$0 = -1;
    break;
   }
   $$pre252 = HEAP32[$5>>2]|0;
   $$1185 = $101;$$1189 = $$0188$lcssa;$$3193 = $$1191;$104 = $$pre252;
  }
  $103 = HEAP32[$104>>2]|0;
  $105 = ($103|0)==(46);
  do {
   if ($105) {
    $106 = ((($104)) + 4|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = ($107|0)==(42);
    if (!($108)) {
     $141 = ((($104)) + 4|0);
     HEAP32[$5>>2] = $141;
     $142 = (_getint_561($5)|0);
     $$pre253$pre = HEAP32[$5>>2]|0;
     $$0181 = $142;$$pre253 = $$pre253$pre;
     break;
    }
    $109 = ((($104)) + 8|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = (_isdigit($110)|0);
    $112 = ($111|0)==(0);
    if (!($112)) {
     $113 = HEAP32[$5>>2]|0;
     $114 = ((($113)) + 12|0);
     $115 = HEAP32[$114>>2]|0;
     $116 = ($115|0)==(36);
     if ($116) {
      $117 = ((($113)) + 8|0);
      $118 = HEAP32[$117>>2]|0;
      $119 = (($118) + -48)|0;
      $120 = (($4) + ($119<<2)|0);
      HEAP32[$120>>2] = 10;
      $121 = HEAP32[$117>>2]|0;
      $122 = (($121) + -48)|0;
      $123 = (($3) + ($122<<3)|0);
      $124 = $123;
      $125 = $124;
      $126 = HEAP32[$125>>2]|0;
      $127 = (($124) + 4)|0;
      $128 = $127;
      $129 = HEAP32[$128>>2]|0;
      $130 = ((($113)) + 16|0);
      HEAP32[$5>>2] = $130;
      $$0181 = $126;$$pre253 = $130;
      break;
     }
    }
    $131 = ($$3193|0)==(0);
    if (!($131)) {
     $$0 = -1;
     break L1;
    }
    if ($9) {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $132 = $arglist_current2;
     $133 = ((0) + 4|0);
     $expanded43 = $133;
     $expanded42 = (($expanded43) - 1)|0;
     $134 = (($132) + ($expanded42))|0;
     $135 = ((0) + 4|0);
     $expanded47 = $135;
     $expanded46 = (($expanded47) - 1)|0;
     $expanded45 = $expanded46 ^ -1;
     $136 = $134 & $expanded45;
     $137 = $136;
     $138 = HEAP32[$137>>2]|0;
     $arglist_next3 = ((($137)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $293 = $138;
    } else {
     $293 = 0;
    }
    $139 = HEAP32[$5>>2]|0;
    $140 = ((($139)) + 8|0);
    HEAP32[$5>>2] = $140;
    $$0181 = $293;$$pre253 = $140;
   } else {
    $$0181 = -1;$$pre253 = $104;
   }
  } while(0);
  $$0179 = 0;$144 = $$pre253;
  while(1) {
   $143 = HEAP32[$144>>2]|0;
   $145 = (($143) + -65)|0;
   $146 = ($145>>>0)>(57);
   if ($146) {
    $$0 = -1;
    break L1;
   }
   $147 = ((($144)) + 4|0);
   HEAP32[$5>>2] = $147;
   $148 = ((12758 + (($$0179*58)|0)|0) + ($145)|0);
   $149 = HEAP8[$148>>0]|0;
   $150 = $149&255;
   $151 = (($150) + -1)|0;
   $152 = ($151>>>0)<(8);
   if ($152) {
    $$0179 = $150;$144 = $147;
   } else {
    break;
   }
  }
  $153 = ($149<<24>>24)==(0);
  if ($153) {
   $$0 = -1;
   break;
  }
  $154 = ($149<<24>>24)==(19);
  $155 = ($$0180|0)>(-1);
  do {
   if ($154) {
    if ($155) {
     $$0 = -1;
     break L1;
    } else {
     label = 50;
    }
   } else {
    if ($155) {
     $156 = (($4) + ($$0180<<2)|0);
     HEAP32[$156>>2] = $150;
     $157 = (($3) + ($$0180<<3)|0);
     $158 = $157;
     $159 = $158;
     $160 = HEAP32[$159>>2]|0;
     $161 = (($158) + 4)|0;
     $162 = $161;
     $163 = HEAP32[$162>>2]|0;
     $164 = $6;
     $165 = $164;
     HEAP32[$165>>2] = $160;
     $166 = (($164) + 4)|0;
     $167 = $166;
     HEAP32[$167>>2] = $163;
     label = 50;
     break;
    }
    if (!($9)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg_563($6,$150,$2);
    $$pre254 = HEAP32[$5>>2]|0;
    $169 = $$pre254;
   }
  } while(0);
  if ((label|0) == 50) {
   label = 0;
   if ($9) {
    $169 = $147;
   } else {
    $$0174 = 0;$$0177 = $$1178;$$0190 = $$3193;
    continue;
   }
  }
  $168 = ((($169)) + -4|0);
  $170 = HEAP32[$168>>2]|0;
  $171 = ($$0179|0)!=(0);
  $172 = $170 & 15;
  $173 = ($172|0)==(3);
  $or$cond = $171 & $173;
  $174 = $170 & -33;
  $$0171 = $or$cond ? $174 : $170;
  switch ($$0171|0) {
  case 110:  {
   $trunc = $$0179&255;
   switch ($trunc<<24>>24) {
   case 0:  {
    $175 = HEAP32[$6>>2]|0;
    HEAP32[$175>>2] = $$1178;
    $$0174 = 0;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
    break;
   }
   case 1:  {
    $176 = HEAP32[$6>>2]|0;
    HEAP32[$176>>2] = $$1178;
    $$0174 = 0;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
    break;
   }
   case 2:  {
    $177 = ($$1178|0)<(0);
    $178 = $177 << 31 >> 31;
    $179 = HEAP32[$6>>2]|0;
    $180 = $179;
    $181 = $180;
    HEAP32[$181>>2] = $$1178;
    $182 = (($180) + 4)|0;
    $183 = $182;
    HEAP32[$183>>2] = $178;
    $$0174 = 0;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
    break;
   }
   case 3:  {
    $184 = $$1178&65535;
    $185 = HEAP32[$6>>2]|0;
    HEAP16[$185>>1] = $184;
    $$0174 = 0;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
    break;
   }
   case 4:  {
    $186 = $$1178&255;
    $187 = HEAP32[$6>>2]|0;
    HEAP8[$187>>0] = $186;
    $$0174 = 0;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
    break;
   }
   case 6:  {
    $188 = HEAP32[$6>>2]|0;
    HEAP32[$188>>2] = $$1178;
    $$0174 = 0;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
    break;
   }
   case 7:  {
    $189 = ($$1178|0)<(0);
    $190 = $189 << 31 >> 31;
    $191 = HEAP32[$6>>2]|0;
    $192 = $191;
    $193 = $192;
    HEAP32[$193>>2] = $$1178;
    $194 = (($192) + 4)|0;
    $195 = $194;
    HEAP32[$195>>2] = $190;
    $$0174 = 0;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
    break;
   }
   default: {
    $$0174 = 0;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
   }
   }
   break;
  }
  case 99:  {
   $196 = $6;
   $197 = $196;
   $198 = HEAP32[$197>>2]|0;
   $199 = (($196) + 4)|0;
   $200 = $199;
   $201 = HEAP32[$200>>2]|0;
   $202 = (_btowc($198)|0);
   (_fputwc($202,$0)|0);
   $$0174 = 1;$$0177 = $$1178;$$0190 = $$3193;
   continue L1;
   break;
  }
  case 67:  {
   $203 = $6;
   $204 = $203;
   $205 = HEAP32[$204>>2]|0;
   $206 = (($203) + 4)|0;
   $207 = $206;
   $208 = HEAP32[$207>>2]|0;
   (_fputwc($205,$0)|0);
   $$0174 = 1;$$0177 = $$1178;$$0190 = $$3193;
   continue L1;
   break;
  }
  case 83:  {
   $209 = HEAP32[$6>>2]|0;
   $210 = (_wmemchr($209,0,$$0181)|0);
   $211 = ($210|0)==(0|0);
   $212 = $210;
   $213 = $209;
   $214 = (($212) - ($213))|0;
   $215 = $214 >> 2;
   $$1182 = $211 ? $$0181 : $215;
   $216 = ($$1185|0)<($$1182|0);
   $$1182$$1185 = $216 ? $$1182 : $$1185;
   $217 = $$1189 & 8192;
   $218 = ($217|0)==(0);
   if ($218) {
    $219 = (($$1182$$1185) - ($$1182))|0;
    HEAP32[$vararg_buffer>>2] = $219;
    $vararg_ptr4 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr4>>2] = 67130;
    (_fprintf($0,13222,$vararg_buffer)|0);
    _out_560($0,$209,$$1182);
    $$0174 = $$1182$$1185;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
   } else {
    _out_560($0,$209,$$1182);
    $220 = (($$1182$$1185) - ($$1182))|0;
    HEAP32[$vararg_buffer5>>2] = $220;
    $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
    HEAP32[$vararg_ptr8>>2] = 67130;
    (_fprintf($0,13222,$vararg_buffer5)|0);
    $$0174 = $$1182$$1185;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
   }
   break;
  }
  case 109:  {
   $221 = (___errno_location()|0);
   $222 = HEAP32[$221>>2]|0;
   $223 = (_strerror($222)|0);
   HEAP32[$6>>2] = $223;
   $224 = $223;
   break;
  }
  case 115:  {
   $$pre256 = HEAP32[$6>>2]|0;
   $224 = $$pre256;
   break;
  }
  default: {
   $245 = $$1189 >>> 3;
   $$lobit = $245 & 1;
   $246 = $$lobit ^ 1;
   $247 = (13233 + ($246)|0);
   $248 = $$1189 >>> 11;
   $$lobit195 = $248 & 1;
   $249 = $$lobit195 ^ 1;
   $250 = (13235 + ($249)|0);
   $251 = $$1189 >>> 13;
   $$lobit196 = $251 & 1;
   $252 = $$lobit196 ^ 1;
   $253 = (13237 + ($252)|0);
   $254 = $$1189 & 1;
   $255 = $254 ^ 1;
   $256 = (13239 + ($255)|0);
   $257 = $$1189 >>> 16;
   $$lobit197 = $257 & 1;
   $258 = $$lobit197 ^ 1;
   $259 = (13241 + ($258)|0);
   $260 = $$0171 | 32;
   $261 = (($260) + -97)|0;
   $262 = (13243 + ($261)|0);
   $263 = HEAP8[$262>>0]|0;
   $264 = $263 << 24 >> 24;
   HEAP32[$vararg_buffer17>>2] = $247;
   $vararg_ptr20 = ((($vararg_buffer17)) + 4|0);
   HEAP32[$vararg_ptr20>>2] = $250;
   $vararg_ptr21 = ((($vararg_buffer17)) + 8|0);
   HEAP32[$vararg_ptr21>>2] = $253;
   $vararg_ptr22 = ((($vararg_buffer17)) + 12|0);
   HEAP32[$vararg_ptr22>>2] = $256;
   $vararg_ptr23 = ((($vararg_buffer17)) + 16|0);
   HEAP32[$vararg_ptr23>>2] = $259;
   $vararg_ptr24 = ((($vararg_buffer17)) + 20|0);
   HEAP32[$vararg_ptr24>>2] = $264;
   $vararg_ptr25 = ((($vararg_buffer17)) + 24|0);
   HEAP32[$vararg_ptr25>>2] = $$0171;
   (_snprintf($7,16,13267,$vararg_buffer17)|0);
   switch ($260|0) {
   case 103: case 102: case 101: case 97:  {
    $265 = +HEAPF64[$6>>3];
    HEAP32[$vararg_buffer26>>2] = $$1185;
    $vararg_ptr29 = ((($vararg_buffer26)) + 4|0);
    HEAP32[$vararg_ptr29>>2] = $$0181;
    $vararg_ptr30 = ((($vararg_buffer26)) + 8|0);
    HEAPF64[$vararg_ptr30>>3] = $265;
    $266 = (_fprintf($0,$7,$vararg_buffer26)|0);
    $$0174 = $266;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
    break;
   }
   case 112: case 120: case 117: case 111: case 105: case 100:  {
    $267 = $6;
    $268 = $267;
    $269 = HEAP32[$268>>2]|0;
    $270 = (($267) + 4)|0;
    $271 = $270;
    $272 = HEAP32[$271>>2]|0;
    HEAP32[$vararg_buffer31>>2] = $$1185;
    $vararg_ptr34 = ((($vararg_buffer31)) + 4|0);
    HEAP32[$vararg_ptr34>>2] = $$0181;
    $vararg_ptr35 = ((($vararg_buffer31)) + 8|0);
    $273 = $vararg_ptr35;
    $274 = $273;
    HEAP32[$274>>2] = $269;
    $275 = (($273) + 4)|0;
    $276 = $275;
    HEAP32[$276>>2] = $272;
    $277 = (_fprintf($0,$7,$vararg_buffer31)|0);
    $$0174 = $277;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
    break;
   }
   default: {
    $$0174 = 0;$$0177 = $$1178;$$0190 = $$3193;
    continue L1;
   }
   }
  }
  }
  $225 = ($224|0)==(0|0);
  if ($225) {
   HEAP32[$6>>2] = 13226;
   $294 = 13226;
  } else {
   $294 = $224;
  }
  $226 = ($$0181>>>0)<(2147483647);
  $$$0181 = $226 ? $$0181 : 2147483647;
  $227 = ($$$0181|0)>(0);
  L97: do {
   if ($227) {
    $$0170228 = $294;$$1175227 = 0;
    while(1) {
     $228 = (_mbtowc($8,$$0170228,4)|0);
     $229 = ($228|0)>(0);
     if (!($229)) {
      break;
     }
     $230 = (($$0170228) + ($228)|0);
     $231 = (($$1175227) + 1)|0;
     $232 = ($231|0)<($$$0181|0);
     if ($232) {
      $$0170228 = $230;$$1175227 = $231;
     } else {
      $$1175211 = $231;
      break L97;
     }
    }
    $233 = ($228|0)<(0);
    if ($233) {
     $$0 = -1;
     break L1;
    } else {
     $$1175211 = $$1175227;
    }
   } else {
    $$1175211 = 0;
   }
  } while(0);
  $234 = ($$1185|0)<($$1175211|0);
  $$1175$$1185 = $234 ? $$1175211 : $$1185;
  $235 = $$1189 & 8192;
  $236 = ($235|0)!=(0);
  if (!($236)) {
   $237 = (($$1175$$1185) - ($$1175211))|0;
   HEAP32[$vararg_buffer9>>2] = $237;
   $vararg_ptr12 = ((($vararg_buffer9)) + 4|0);
   HEAP32[$vararg_ptr12>>2] = 67130;
   (_fprintf($0,13222,$vararg_buffer9)|0);
  }
  $238 = ($$1175211|0)==(0);
  if (!($238)) {
   $$1232 = $294;$$2176231 = $$1175211;
   while(1) {
    $239 = (($$2176231) + -1)|0;
    $240 = (_mbtowc($8,$$1232,4)|0);
    $241 = (($$1232) + ($240)|0);
    $242 = HEAP32[$8>>2]|0;
    (_fputwc($242,$0)|0);
    $243 = ($239|0)==(0);
    if ($243) {
     break;
    } else {
     $$1232 = $241;$$2176231 = $239;
    }
   }
  }
  if (!($236)) {
   $$0174 = $$1175$$1185;$$0177 = $$1178;$$0190 = $$3193;
   continue;
  }
  $244 = (($$1175$$1185) - ($$1175211))|0;
  HEAP32[$vararg_buffer13>>2] = $244;
  $vararg_ptr16 = ((($vararg_buffer13)) + 4|0);
  HEAP32[$vararg_ptr16>>2] = 67130;
  (_fprintf($0,13222,$vararg_buffer13)|0);
  $$0174 = $$1175$$1185;$$0177 = $$1178;$$0190 = $$3193;
 }
 L111: do {
  if ((label|0) == 82) {
   $278 = ($0|0)==(0|0);
   if ($278) {
    $279 = ($$0190|0)==(0);
    if ($279) {
     $$0 = 0;
    } else {
     $$2219 = 1;
     while(1) {
      $280 = (($4) + ($$2219<<2)|0);
      $281 = HEAP32[$280>>2]|0;
      $282 = ($281|0)==(0);
      if ($282) {
       $$2$lcssa = $$2219;
       break;
      }
      $284 = (($3) + ($$2219<<3)|0);
      _pop_arg_563($284,$281,$2);
      $285 = (($$2219) + 1)|0;
      $286 = ($$2219|0)<(9);
      if ($286) {
       $$2219 = $285;
      } else {
       $$2$lcssa = $285;
       break;
      }
     }
     $283 = ($$2$lcssa|0)<(10);
     if ($283) {
      $$3217 = $$2$lcssa;
      while(1) {
       $289 = (($4) + ($$3217<<2)|0);
       $290 = HEAP32[$289>>2]|0;
       $291 = ($290|0)==(0);
       if (!($291)) {
        $$0 = -1;
        break L111;
       }
       $287 = (($$3217) + 1)|0;
       $288 = ($$3217|0)<(9);
       if ($288) {
        $$3217 = $287;
       } else {
        $$0 = 1;
        break;
       }
      }
     } else {
      $$0 = 1;
     }
    }
   } else {
    $$0 = $$1178;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _out_560($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$034 = 0, $$in = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if (!($3)) {
   $$034 = $1;$$in = $2;
   while(1) {
    $4 = (($$in) + -1)|0;
    $5 = HEAP32[$0>>2]|0;
    $6 = $5 & 32;
    $7 = ($6|0)==(0);
    if (!($7)) {
     break L1;
    }
    $8 = ((($$034)) + 4|0);
    $9 = HEAP32[$$034>>2]|0;
    (_fputwc($9,$0)|0);
    $10 = ($4|0)==(0);
    if ($10) {
     break;
    } else {
     $$034 = $8;$$in = $4;
    }
   }
  }
 } while(0);
 return;
}
function _getint_561($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$04 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_iswdigit($2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$0$lcssa = 0;
 } else {
  $$04 = 0;
  while(1) {
   $5 = ($$04*10)|0;
   $6 = HEAP32[$0>>2]|0;
   $7 = HEAP32[$6>>2]|0;
   $8 = (($5) + -48)|0;
   $9 = (($8) + ($7))|0;
   $10 = ((($6)) + 4|0);
   HEAP32[$0>>2] = $10;
   $11 = HEAP32[$10>>2]|0;
   $12 = (_iswdigit($11)|0);
   $13 = ($12|0)==(0);
   if ($13) {
    $$0$lcssa = $9;
    break;
   } else {
    $$04 = $9;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _pop_arg_563($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(20);
 L1: do {
  if (!($3)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = HEAP32[$2>>2]|0;
     $4 = $arglist_current;
     $5 = ((0) + 4|0);
     $expanded28 = $5;
     $expanded = (($expanded28) - 1)|0;
     $6 = (($4) + ($expanded))|0;
     $7 = ((0) + 4|0);
     $expanded32 = $7;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $8 = $6 & $expanded30;
     $9 = $8;
     $10 = HEAP32[$9>>2]|0;
     $arglist_next = ((($9)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     HEAP32[$0>>2] = $10;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $11 = $arglist_current2;
     $12 = ((0) + 4|0);
     $expanded35 = $12;
     $expanded34 = (($expanded35) - 1)|0;
     $13 = (($11) + ($expanded34))|0;
     $14 = ((0) + 4|0);
     $expanded39 = $14;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $15 = $13 & $expanded37;
     $16 = $15;
     $17 = HEAP32[$16>>2]|0;
     $arglist_next3 = ((($16)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $18 = ($17|0)<(0);
     $19 = $18 << 31 >> 31;
     $20 = $0;
     $21 = $20;
     HEAP32[$21>>2] = $17;
     $22 = (($20) + 4)|0;
     $23 = $22;
     HEAP32[$23>>2] = $19;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$2>>2]|0;
     $24 = $arglist_current5;
     $25 = ((0) + 4|0);
     $expanded42 = $25;
     $expanded41 = (($expanded42) - 1)|0;
     $26 = (($24) + ($expanded41))|0;
     $27 = ((0) + 4|0);
     $expanded46 = $27;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $28 = $26 & $expanded44;
     $29 = $28;
     $30 = HEAP32[$29>>2]|0;
     $arglist_next6 = ((($29)) + 4|0);
     HEAP32[$2>>2] = $arglist_next6;
     $31 = $0;
     $32 = $31;
     HEAP32[$32>>2] = $30;
     $33 = (($31) + 4)|0;
     $34 = $33;
     HEAP32[$34>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$2>>2]|0;
     $35 = $arglist_current8;
     $36 = ((0) + 8|0);
     $expanded49 = $36;
     $expanded48 = (($expanded49) - 1)|0;
     $37 = (($35) + ($expanded48))|0;
     $38 = ((0) + 8|0);
     $expanded53 = $38;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $39 = $37 & $expanded51;
     $40 = $39;
     $41 = $40;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $44 = (($41) + 4)|0;
     $45 = $44;
     $46 = HEAP32[$45>>2]|0;
     $arglist_next9 = ((($40)) + 8|0);
     HEAP32[$2>>2] = $arglist_next9;
     $47 = $0;
     $48 = $47;
     HEAP32[$48>>2] = $43;
     $49 = (($47) + 4)|0;
     $50 = $49;
     HEAP32[$50>>2] = $46;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$2>>2]|0;
     $51 = $arglist_current11;
     $52 = ((0) + 4|0);
     $expanded56 = $52;
     $expanded55 = (($expanded56) - 1)|0;
     $53 = (($51) + ($expanded55))|0;
     $54 = ((0) + 4|0);
     $expanded60 = $54;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $55 = $53 & $expanded58;
     $56 = $55;
     $57 = HEAP32[$56>>2]|0;
     $arglist_next12 = ((($56)) + 4|0);
     HEAP32[$2>>2] = $arglist_next12;
     $58 = $57&65535;
     $59 = $58 << 16 >> 16;
     $60 = ($59|0)<(0);
     $61 = $60 << 31 >> 31;
     $62 = $0;
     $63 = $62;
     HEAP32[$63>>2] = $59;
     $64 = (($62) + 4)|0;
     $65 = $64;
     HEAP32[$65>>2] = $61;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$2>>2]|0;
     $66 = $arglist_current14;
     $67 = ((0) + 4|0);
     $expanded63 = $67;
     $expanded62 = (($expanded63) - 1)|0;
     $68 = (($66) + ($expanded62))|0;
     $69 = ((0) + 4|0);
     $expanded67 = $69;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $70 = $68 & $expanded65;
     $71 = $70;
     $72 = HEAP32[$71>>2]|0;
     $arglist_next15 = ((($71)) + 4|0);
     HEAP32[$2>>2] = $arglist_next15;
     $$mask31 = $72 & 65535;
     $73 = $0;
     $74 = $73;
     HEAP32[$74>>2] = $$mask31;
     $75 = (($73) + 4)|0;
     $76 = $75;
     HEAP32[$76>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$2>>2]|0;
     $77 = $arglist_current17;
     $78 = ((0) + 4|0);
     $expanded70 = $78;
     $expanded69 = (($expanded70) - 1)|0;
     $79 = (($77) + ($expanded69))|0;
     $80 = ((0) + 4|0);
     $expanded74 = $80;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $81 = $79 & $expanded72;
     $82 = $81;
     $83 = HEAP32[$82>>2]|0;
     $arglist_next18 = ((($82)) + 4|0);
     HEAP32[$2>>2] = $arglist_next18;
     $84 = $83&255;
     $85 = $84 << 24 >> 24;
     $86 = ($85|0)<(0);
     $87 = $86 << 31 >> 31;
     $88 = $0;
     $89 = $88;
     HEAP32[$89>>2] = $85;
     $90 = (($88) + 4)|0;
     $91 = $90;
     HEAP32[$91>>2] = $87;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$2>>2]|0;
     $92 = $arglist_current20;
     $93 = ((0) + 4|0);
     $expanded77 = $93;
     $expanded76 = (($expanded77) - 1)|0;
     $94 = (($92) + ($expanded76))|0;
     $95 = ((0) + 4|0);
     $expanded81 = $95;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $96 = $94 & $expanded79;
     $97 = $96;
     $98 = HEAP32[$97>>2]|0;
     $arglist_next21 = ((($97)) + 4|0);
     HEAP32[$2>>2] = $arglist_next21;
     $$mask = $98 & 255;
     $99 = $0;
     $100 = $99;
     HEAP32[$100>>2] = $$mask;
     $101 = (($99) + 4)|0;
     $102 = $101;
     HEAP32[$102>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$2>>2]|0;
     $103 = $arglist_current23;
     $104 = ((0) + 8|0);
     $expanded84 = $104;
     $expanded83 = (($expanded84) - 1)|0;
     $105 = (($103) + ($expanded83))|0;
     $106 = ((0) + 8|0);
     $expanded88 = $106;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $107 = $105 & $expanded86;
     $108 = $107;
     $109 = +HEAPF64[$108>>3];
     $arglist_next24 = ((($108)) + 8|0);
     HEAP32[$2>>2] = $arglist_next24;
     HEAPF64[$0>>3] = $109;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$2>>2]|0;
     $110 = $arglist_current26;
     $111 = ((0) + 8|0);
     $expanded91 = $111;
     $expanded90 = (($expanded91) - 1)|0;
     $112 = (($110) + ($expanded90))|0;
     $113 = ((0) + 8|0);
     $expanded95 = $113;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $114 = $112 & $expanded93;
     $115 = $114;
     $116 = +HEAPF64[$115>>3];
     $arglist_next27 = ((($115)) + 8|0);
     HEAP32[$2>>2] = $arglist_next27;
     HEAPF64[$0>>3] = $116;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fputwc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 76|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)>(-1);
 if ($4) {
  $6 = (___lockfile($1)|0);
  $phitmp = ($6|0)==(0);
  $7 = (___fputwc_unlocked($0,$1)|0);
  if ($phitmp) {
   $8 = $7;
  } else {
   ___unlockfile($1);
   $8 = $7;
  }
 } else {
  $5 = (___fputwc_unlocked($0,$1)|0);
  $8 = $5;
 }
 return ($8|0);
}
function _fprintf($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 $3 = (_vfprintf($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function ___fputwc_unlocked($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$035 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = (___pthread_self_549()|0);
 $4 = ((($3)) + 188|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 74|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ($7<<24>>24)<(1);
 if ($8) {
  (_fwide($1,1)|0);
 }
 $9 = ((($1)) + 120|0);
 $10 = HEAP32[$9>>2]|0;
 HEAP32[$4>>2] = $10;
 $11 = ($0>>>0)<(128);
 do {
  if ($11) {
   $12 = $0&255;
   $13 = $0 & 255;
   $14 = ((($1)) + 75|0);
   $15 = HEAP8[$14>>0]|0;
   $16 = $15 << 24 >> 24;
   $17 = ($13|0)==($16|0);
   if (!($17)) {
    $18 = ((($1)) + 20|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = ((($1)) + 16|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = ($19>>>0)<($21>>>0);
    if ($22) {
     $23 = ((($19)) + 1|0);
     HEAP32[$18>>2] = $23;
     HEAP8[$19>>0] = $12;
     $$035 = $13;
     break;
    }
   }
   $24 = (___overflow($1,$0)|0);
   $$0 = $24;
   label = 13;
  } else {
   $25 = ((($1)) + 20|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($26)) + 4|0);
   $28 = ((($1)) + 16|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ($27>>>0)<($29>>>0);
   if ($30) {
    $31 = (_wctomb($26,$0)|0);
    $32 = ($31|0)<(0);
    if ($32) {
     label = 14;
     break;
    }
    $33 = HEAP32[$25>>2]|0;
    $34 = (($33) + ($31)|0);
    HEAP32[$25>>2] = $34;
    $$0 = $0;
    label = 13;
    break;
   } else {
    $35 = (_wctomb($2,$0)|0);
    $36 = ($35|0)<(0);
    if ($36) {
     label = 14;
     break;
    }
    $37 = (___fwritex($2,$35,$1)|0);
    $38 = ($37>>>0)<($35>>>0);
    if ($38) {
     label = 14;
     break;
    } else {
     $$0 = $0;
     label = 13;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 13) {
  $39 = ($$0|0)==(-1);
  if ($39) {
   label = 14;
  } else {
   $$035 = $$0;
  }
 }
 if ((label|0) == 14) {
  $40 = HEAP32[$1>>2]|0;
  $41 = $40 | 32;
  HEAP32[$1>>2] = $41;
  $$035 = -1;
 }
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return ($$035|0);
}
function ___pthread_self_549() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___overflow($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = $1&255;
 HEAP8[$2>>0] = $3;
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (___towrite($0)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$4>>2]|0;
   $12 = $$pre;
   label = 4;
  } else {
   $$0 = -1;
  }
 } else {
  $12 = $5;
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $9 = ((($0)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10>>>0)<($12>>>0);
   if ($11) {
    $13 = $1 & 255;
    $14 = ((($0)) + 75|0);
    $15 = HEAP8[$14>>0]|0;
    $16 = $15 << 24 >> 24;
    $17 = ($13|0)==($16|0);
    if (!($17)) {
     $18 = ((($10)) + 1|0);
     HEAP32[$9>>2] = $18;
     HEAP8[$10>>0] = $3;
     $$0 = $13;
     break;
    }
   }
   $19 = ((($0)) + 36|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (FUNCTION_TABLE_iiii[$20 & 511]($0,$2,1)|0);
   $22 = ($21|0)==(1);
   if ($22) {
    $23 = HEAP8[$2>>0]|0;
    $24 = $23&255;
    $$0 = $24;
   } else {
    $$0 = -1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _fputc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 76|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)<(0);
 if ($4) {
  label = 3;
 } else {
  $5 = (___lockfile($1)|0);
  $6 = ($5|0)==(0);
  if ($6) {
   label = 3;
  } else {
   $20 = $0&255;
   $21 = $0 & 255;
   $22 = ((($1)) + 75|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $23 << 24 >> 24;
   $25 = ($21|0)==($24|0);
   if ($25) {
    label = 10;
   } else {
    $26 = ((($1)) + 20|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($1)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27>>>0)<($29>>>0);
    if ($30) {
     $31 = ((($27)) + 1|0);
     HEAP32[$26>>2] = $31;
     HEAP8[$27>>0] = $20;
     $33 = $21;
    } else {
     label = 10;
    }
   }
   if ((label|0) == 10) {
    $32 = (___overflow($1,$0)|0);
    $33 = $32;
   }
   ___unlockfile($1);
   $$0 = $33;
  }
 }
 do {
  if ((label|0) == 3) {
   $7 = $0&255;
   $8 = $0 & 255;
   $9 = ((($1)) + 75|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10 << 24 >> 24;
   $12 = ($8|0)==($11|0);
   if (!($12)) {
    $13 = ((($1)) + 20|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ((($1)) + 16|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($14>>>0)<($16>>>0);
    if ($17) {
     $18 = ((($14)) + 1|0);
     HEAP32[$13>>2] = $18;
     HEAP8[$14>>0] = $7;
     $$0 = $8;
     break;
    }
   }
   $19 = (___overflow($1,$0)|0);
   $$0 = $19;
  }
 } while(0);
 return ($$0|0);
}
function _swprintf($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 $4 = (_vswprintf($0,$1,$2,$3)|0);
 STACKTOP = sp;return ($4|0);
}
function _vswprintf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $4 = sp + 8|0;
 $5 = sp + 136|0;
 $6 = sp;
 HEAP32[$6>>2] = $0;
 $7 = ((($6)) + 4|0);
 $8 = (($1) + -1)|0;
 HEAP32[$7>>2] = $8;
 (_memset(($4|0),0,124)|0);
 $9 = ((($4)) + 75|0);
 HEAP8[$9>>0] = -1;
 $10 = ((($4)) + 36|0);
 HEAP32[$10>>2] = 308;
 $11 = ((($4)) + 48|0);
 HEAP32[$11>>2] = 256;
 $12 = ((($4)) + 44|0);
 HEAP32[$12>>2] = $5;
 $13 = ((($4)) + 76|0);
 HEAP32[$13>>2] = -1;
 $14 = ((($4)) + 84|0);
 HEAP32[$14>>2] = $6;
 $15 = ($1|0)==(0);
 do {
  if ($15) {
   $$0 = -1;
  } else {
   $16 = ($1|0)<(0);
   if ($16) {
    $17 = (___errno_location()|0);
    HEAP32[$17>>2] = 75;
    $$0 = -1;
    break;
   } else {
    $18 = (_vfwprintf($4,$2,$3)|0);
    (_sw_write($4,0,0)|0);
    $19 = ($18>>>0)>=($1>>>0);
    $20 = $19 ? -1 : $18;
    $$0 = $20;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _sw_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$03034 = 0, $$03133 = 0, $$1 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond32 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 28|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==($1|0);
 if ($7) {
  label = 3;
 } else {
  $8 = ((($0)) + 20|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $6;
  $11 = (($9) - ($10))|0;
  $12 = (_sw_write($0,$6,$11)|0);
  $13 = ($12|0)==(-1);
  if ($13) {
   $$0 = -1;
  } else {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $14 = ((($4)) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($15|0)!=(0);
  $17 = ($2|0)!=(0);
  $or$cond32 = $17 & $16;
  L5: do {
   if ($or$cond32) {
    $$pre = HEAP32[$4>>2]|0;
    $$03034 = $1;$$03133 = $2;$18 = $$pre;
    while(1) {
     $19 = (_mbtowc($18,$$03034,$$03133)|0);
     $20 = ($19|0)>(-1);
     if (!($20)) {
      $$1 = $19;
      break L5;
     }
     $21 = (($$03034) + ($19)|0);
     $22 = (($$03133) - ($19))|0;
     $23 = HEAP32[$14>>2]|0;
     $24 = (($23) + -1)|0;
     HEAP32[$14>>2] = $24;
     $25 = HEAP32[$4>>2]|0;
     $26 = ((($25)) + 4|0);
     HEAP32[$4>>2] = $26;
     $27 = ($24|0)!=(0);
     $28 = ($22|0)!=(0);
     $or$cond = $28 & $27;
     if ($or$cond) {
      $$03034 = $21;$$03133 = $22;$18 = $26;
     } else {
      $$1 = $19;
      break;
     }
    }
   } else {
    $$1 = 0;
   }
  } while(0);
  $29 = HEAP32[$4>>2]|0;
  HEAP32[$29>>2] = 0;
  $30 = ($$1|0)<(0);
  $31 = $30 ? $$1 : $2;
  $$0 = $31;
 }
 return ($$0|0);
}
function __Znwj($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0);
 $$ = $1 ? 1 : $0;
 while(1) {
  $2 = (_malloc($$)|0);
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   label = 6;
   break;
  }
  $4 = (__ZSt15get_new_handlerv()|0);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$4 & 511]();
 }
 if ((label|0) == 5) {
  $6 = (___cxa_allocate_exception(4)|0);
  __ZNSt9bad_allocC2Ev($6);
  ___cxa_throw(($6|0),(352|0),(32|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  return ($2|0);
 }
 return (0)|0;
}
function __Znaj($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__Znwj($0)|0);
 return ($1|0);
}
function __ZdlPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($0);
 return;
}
function __ZdaPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNSt3__218__libcpp_refstringC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($1)|0);
 $3 = (($2) + 13)|0;
 $4 = (__Znwj($3)|0);
 HEAP32[$4>>2] = $2;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 $7 = (__ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE($4)|0);
 $8 = (($2) + 1)|0;
 _memcpy(($7|0),($1|0),($8|0))|0;
 HEAP32[$0>>2] = $7;
 return;
}
function __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 return ($1|0);
}
function __ZNSt11logic_errorC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (3952);
 $2 = ((($0)) + 4|0);
 __THREW__ = 0;
 invoke_vii(309,($2|0),($1|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $5 = ___cxa_find_matching_catch_2()|0;
  $6 = tempRet0;
  ___resumeException($5|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNKSt3__218__libcpp_refstring15__uses_refcountEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(302,($1|0),(13287|0));
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $4 = ___cxa_find_matching_catch_2()|0;
  $5 = tempRet0;
  ___cxa_free_exception(($1|0));
  ___resumeException($4|0);
  // unreachable;
 } else {
  HEAP32[$1>>2] = (3972);
  ___cxa_throw(($1|0),(384|0),(35|0));
  // unreachable;
 }
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $3 = ((($1)) + 11|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)<(0);
 if ($5) {
  $6 = HEAP32[$1>>2]|0;
  $7 = ((($1)) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8>>>0)>(4294967279);
  if ($9) {
   __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
   // unreachable;
  }
  $10 = ($8>>>0)<(11);
  if ($10) {
   $11 = $8&255;
   $12 = ((($0)) + 11|0);
   HEAP8[$12>>0] = $11;
   $$0$i = $0;
  } else {
   $13 = (($8) + 16)|0;
   $14 = $13 & -16;
   $15 = (__Znwj($14)|0);
   HEAP32[$0>>2] = $15;
   $16 = $14 | -2147483648;
   $17 = ((($0)) + 8|0);
   HEAP32[$17>>2] = $16;
   $18 = ((($0)) + 4|0);
   HEAP32[$18>>2] = $8;
   $$0$i = $15;
  }
  (__ZNSt3__211char_traitsIcE4copyEPcPKcj($$0$i,$6,$8)|0);
  $19 = (($$0$i) + ($8)|0);
  HEAP8[$2>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($19,$2);
 } else {
  ;HEAP32[$0>>2]=HEAP32[$1>>2]|0;HEAP32[$0+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$1+8>>2]|0;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__211char_traitsIcE6lengthEPKc($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_strlen($0)|0);
 return ($1|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 11|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)<(0);
 if ($3) {
  $4 = HEAP32[$0>>2]|0;
  __ZdlPv($4);
 }
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 if (!($2)) {
  $3 = ((($1)) + 11|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)<(0);
  $6 = HEAP32[$1>>2]|0;
  $7 = ((($1)) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $4&255;
  $10 = $5 ? $6 : $1;
  $11 = $5 ? $8 : $9;
  (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0,$10,$11)|0);
 }
 return ($0|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ((($0)) + 11|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)<(0);
 if ($6) {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $8 & 2147483647;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 } else {
  $10 = 10;
 }
 $11 = ($10>>>0)<($2>>>0);
 do {
  if ($11) {
   if ($6) {
    $19 = ((($0)) + 4|0);
    $20 = HEAP32[$19>>2]|0;
    $23 = $20;
   } else {
    $21 = $5&255;
    $23 = $21;
   }
   $22 = (($2) - ($10))|0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0,$10,$22,$23,0,$23,$2,$1);
  } else {
   if ($6) {
    $12 = HEAP32[$0>>2]|0;
    $13 = $12;
   } else {
    $13 = $0;
   }
   (__ZNSt3__211char_traitsIcE4moveEPcPKcj($13,$1,$2)|0);
   $14 = (($13) + ($2)|0);
   HEAP8[$3>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($14,$3);
   $15 = HEAP8[$4>>0]|0;
   $16 = ($15<<24>>24)<(0);
   if ($16) {
    $17 = ((($0)) + 4|0);
    HEAP32[$17>>2] = $2;
    break;
   } else {
    $18 = $2&255;
    HEAP8[$4>>0] = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__211char_traitsIcE4moveEPcPKcj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if (!($3)) {
  _memmove(($0|0),($1|0),($2|0))|0;
 }
 return ($0|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp;
 $9 = (-18 - ($1))|0;
 $10 = ($9>>>0)<($2>>>0);
 if ($10) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $11 = ((($0)) + 11|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = ($12<<24>>24)<(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $25 = $14;
 } else {
  $25 = $0;
 }
 $15 = ($1>>>0)<(2147483623);
 if ($15) {
  $16 = (($2) + ($1))|0;
  $17 = $1 << 1;
  $18 = ($16>>>0)<($17>>>0);
  $$sroa$speculated = $18 ? $17 : $16;
  $19 = ($$sroa$speculated>>>0)<(11);
  $20 = (($$sroa$speculated) + 16)|0;
  $21 = $20 & -16;
  $phitmp = $19 ? 11 : $21;
  $22 = $phitmp;
 } else {
  $22 = -17;
 }
 $23 = (__Znwj($22)|0);
 $24 = ($4|0)==(0);
 if (!($24)) {
  (__ZNSt3__211char_traitsIcE4copyEPcPKcj($23,$25,$4)|0);
 }
 $26 = ($6|0)==(0);
 if (!($26)) {
  $27 = (($23) + ($4)|0);
  (__ZNSt3__211char_traitsIcE4copyEPcPKcj($27,$7,$6)|0);
 }
 $28 = (($3) - ($5))|0;
 $29 = (($28) - ($4))|0;
 $30 = ($29|0)==(0);
 if (!($30)) {
  $31 = (($23) + ($4)|0);
  $32 = (($31) + ($6)|0);
  $33 = (($25) + ($4)|0);
  $34 = (($33) + ($5)|0);
  (__ZNSt3__211char_traitsIcE4copyEPcPKcj($32,$34,$29)|0);
 }
 $35 = ($1|0)==(10);
 if (!($35)) {
  __ZdlPv($25);
 }
 HEAP32[$0>>2] = $23;
 $36 = $22 | -2147483648;
 $37 = ((($0)) + 8|0);
 HEAP32[$37>>2] = $36;
 $38 = (($28) + ($6))|0;
 $39 = ((($0)) + 4|0);
 HEAP32[$39>>2] = $38;
 $40 = (($23) + ($38)|0);
 HEAP8[$8>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($40,$8);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$016 = 0, $$01740 = 0, $$018$off038 = 0, $$1414854 = 0, $$142 = 0, $$phitmp$i = 0, $$pre = 0, $$pre$phi57Z2D = 0, $$pre$phiZ2D = 0, $$pre56 = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, $phitmp$i21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(4294967279);
 if ($2) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $3 = ((($0)) + 11|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)<(0);
 if ($5) {
  $6 = ((($0)) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = $7 & 2147483647;
  $phitmp$i = (($8) + -1)|0;
  $9 = ((($0)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $12 = $10;$18 = $phitmp$i;
 } else {
  $11 = $4&255;
  $12 = $11;$18 = 10;
 }
 $13 = ($12>>>0)>($1>>>0);
 $$sroa$speculated = $13 ? $12 : $1;
 $14 = ($$sroa$speculated>>>0)<(11);
 $15 = (($$sroa$speculated) + 16)|0;
 $16 = $15 & -16;
 $phitmp$i21 = (($16) + -1)|0;
 $$phitmp$i = $14 ? 10 : $phitmp$i21;
 $17 = ($$phitmp$i|0)==($18|0);
 L8: do {
  if (!($17)) {
   do {
    if ($14) {
     $28 = HEAP32[$0>>2]|0;
     if ($5) {
      $$01740 = $28;$$018$off038 = 0;$$142 = $0;
      label = 17;
     } else {
      $29 = $4&255;
      $30 = (($29) + 1)|0;
      (__ZNSt3__211char_traitsIcE4copyEPcPKcj($0,$28,$30)|0);
      __ZdlPv($28);
      label = 20;
     }
    } else {
     $19 = ($$phitmp$i>>>0)>($18>>>0);
     $20 = (($$phitmp$i) + 1)|0;
     if ($19) {
      $21 = (__Znwj($20)|0);
      $$016 = $21;
     } else {
      __THREW__ = 0;
      $22 = (invoke_ii(49,($20|0))|0);
      $23 = __THREW__; __THREW__ = 0;
      $24 = $23&1;
      if ($24) {
       $25 = ___cxa_find_matching_catch_3(0|0)|0;
       $26 = tempRet0;
       (___cxa_begin_catch(($25|0))|0);
       ___cxa_end_catch();
       break L8;
      } else {
       $$016 = $22;
      }
     }
     if ($5) {
      $27 = HEAP32[$0>>2]|0;
      $$01740 = $27;$$018$off038 = 1;$$142 = $$016;
      label = 17;
      break;
     } else {
      $31 = $4&255;
      $32 = (($31) + 1)|0;
      (__ZNSt3__211char_traitsIcE4copyEPcPKcj($$016,$0,$32)|0);
      $$pre = ((($0)) + 4|0);
      $$1414854 = $$016;$$pre$phi57Z2D = $20;$$pre$phiZ2D = $$pre;
      label = 19;
      break;
     }
    }
   } while(0);
   if ((label|0) == 17) {
    $33 = ((($0)) + 4|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (($34) + 1)|0;
    (__ZNSt3__211char_traitsIcE4copyEPcPKcj($$142,$$01740,$35)|0);
    __ZdlPv($$01740);
    if ($$018$off038) {
     $$pre56 = (($$phitmp$i) + 1)|0;
     $$1414854 = $$142;$$pre$phi57Z2D = $$pre56;$$pre$phiZ2D = $33;
     label = 19;
    } else {
     label = 20;
    }
   }
   if ((label|0) == 19) {
    $36 = $$pre$phi57Z2D | -2147483648;
    $37 = ((($0)) + 8|0);
    HEAP32[$37>>2] = $36;
    HEAP32[$$pre$phiZ2D>>2] = $12;
    HEAP32[$0>>2] = $$1414854;
    break;
   }
   else if ((label|0) == 20) {
    $38 = $12&255;
    HEAP8[$3>>0] = $38;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__211char_traitsIcE6lengthEPKc($1)|0);
 $3 = (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0,$1,$2)|0);
 return ($3|0);
}
function __ZNSt3__211char_traitsIwE6lengthEPKw($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_wcslen($0)|0);
 return ($1|0);
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = ((($1)) + 3|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = ($3<<24>>24)<(0);
 if ($4) {
  $5 = HEAP32[$0>>2]|0;
  __ZdlPv($5);
 }
 return;
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ((($0)) + 8|0);
 $5 = ((($4)) + 3|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ($6<<24>>24)<(0);
 if ($7) {
  $8 = HEAP32[$4>>2]|0;
  $9 = $8 & 2147483647;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 } else {
  $10 = 1;
 }
 $11 = ($10>>>0)<($2>>>0);
 do {
  if ($11) {
   if ($7) {
    $19 = ((($0)) + 4|0);
    $20 = HEAP32[$19>>2]|0;
    $23 = $20;
   } else {
    $21 = $6&255;
    $23 = $21;
   }
   $22 = (($2) - ($10))|0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($0,$10,$22,$23,0,$23,$2,$1);
  } else {
   if ($7) {
    $12 = HEAP32[$0>>2]|0;
    $13 = $12;
   } else {
    $13 = $0;
   }
   (__ZNSt3__211char_traitsIwE4moveEPwPKwj($13,$1,$2)|0);
   $14 = (($13) + ($2<<2)|0);
   HEAP32[$3>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($14,$3);
   $15 = HEAP8[$5>>0]|0;
   $16 = ($15<<24>>24)<(0);
   if ($16) {
    $17 = ((($0)) + 4|0);
    HEAP32[$17>>2] = $2;
    break;
   } else {
    $18 = $2&255;
    HEAP8[$5>>0] = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__211char_traitsIwE4moveEPwPKwj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $7 = $0;
 } else {
  __THREW__ = 0;
  $4 = (invoke_iiii(310,($0|0),($1|0),($2|0))|0);
  $5 = __THREW__; __THREW__ = 0;
  $6 = $5&1;
  if ($6) {
   $8 = ___cxa_find_matching_catch_3(0|0)|0;
   $9 = tempRet0;
   ___clang_call_terminate($8);
   // unreachable;
  } else {
   $7 = $0;
  }
 }
 return ($7|0);
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp;
 $9 = (1073741806 - ($1))|0;
 $10 = ($9>>>0)<($2>>>0);
 if ($10) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $11 = ((($0)) + 8|0);
 $12 = ((($11)) + 3|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = ($13<<24>>24)<(0);
 if ($14) {
  $15 = HEAP32[$0>>2]|0;
  $34 = $15;
 } else {
  $34 = $0;
 }
 $16 = ($1>>>0)<(536870887);
 if ($16) {
  $17 = (($2) + ($1))|0;
  $18 = $1 << 1;
  $19 = ($17>>>0)<($18>>>0);
  $$sroa$speculated = $19 ? $18 : $17;
  $20 = ($$sroa$speculated>>>0)<(2);
  $21 = (($$sroa$speculated) + 4)|0;
  $22 = $21 & -4;
  $23 = $20 ? 2 : $22;
  $24 = ($23>>>0)>(1073741823);
  if ($24) {
   $25 = (___cxa_allocate_exception(8)|0);
   __THREW__ = 0;
   invoke_vii(302,($25|0),(13300|0));
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if ($27) {
    $28 = ___cxa_find_matching_catch_2()|0;
    $29 = tempRet0;
    ___cxa_free_exception(($25|0));
    ___resumeException($28|0);
    // unreachable;
   } else {
    HEAP32[$25>>2] = (3972);
    ___cxa_throw(($25|0),(384|0),(35|0));
    // unreachable;
   }
  } else {
   $31 = $23;
  }
 } else {
  $31 = 1073741807;
 }
 $30 = $31 << 2;
 $32 = (__Znwj($30)|0);
 $33 = ($4|0)==(0);
 if (!($33)) {
  (__ZNSt3__211char_traitsIwE4copyEPwPKwj($32,$34,$4)|0);
 }
 $35 = ($6|0)==(0);
 if (!($35)) {
  $36 = (($32) + ($4<<2)|0);
  (__ZNSt3__211char_traitsIwE4copyEPwPKwj($36,$7,$6)|0);
 }
 $37 = (($3) - ($5))|0;
 $38 = (($37) - ($4))|0;
 $39 = ($38|0)==(0);
 if (!($39)) {
  $40 = (($34) + ($4<<2)|0);
  $41 = (($40) + ($5<<2)|0);
  $42 = (($32) + ($4<<2)|0);
  $43 = (($42) + ($6<<2)|0);
  (__ZNSt3__211char_traitsIwE4copyEPwPKwj($43,$41,$38)|0);
 }
 $44 = ($1|0)==(1);
 if (!($44)) {
  __ZdlPv($34);
 }
 HEAP32[$0>>2] = $32;
 $45 = $31 | -2147483648;
 HEAP32[$11>>2] = $45;
 $46 = (($37) + ($6))|0;
 $47 = ((($0)) + 4|0);
 HEAP32[$47>>2] = $46;
 $48 = (($32) + ($46<<2)|0);
 HEAP32[$8>>2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($48,$8);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$01743 = 0, $$018$off041 = 0, $$1445157 = 0, $$145 = 0, $$phitmp$i = 0, $$pre = 0, $$pre$phi60Z2D = 0, $$pre$phiZ2D = 0, $$pre59 = 0, $$sink = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $eh$lpad$body$indexZ2D = 0, $phitmp$i = 0, $phitmp$i22 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(1073741807);
 if ($2) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $3 = ((($0)) + 8|0);
 $4 = ((($3)) + 3|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)<(0);
 if ($6) {
  $7 = HEAP32[$3>>2]|0;
  $8 = $7 & 2147483647;
  $phitmp$i = (($8) + -1)|0;
  $9 = ((($0)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $12 = $10;$18 = $phitmp$i;
 } else {
  $11 = $5&255;
  $12 = $11;$18 = 1;
 }
 $13 = ($12>>>0)>($1>>>0);
 $$sroa$speculated = $13 ? $12 : $1;
 $14 = ($$sroa$speculated>>>0)<(2);
 $15 = (($$sroa$speculated) + 4)|0;
 $16 = $15 & -4;
 $phitmp$i22 = (($16) + -1)|0;
 $$phitmp$i = $14 ? 1 : $phitmp$i22;
 $17 = ($$phitmp$i|0)==($18|0);
 L8: do {
  if (!($17)) {
   do {
    if ($14) {
     $42 = HEAP32[$0>>2]|0;
     if ($6) {
      $$01743 = $42;$$018$off041 = 0;$$145 = $0;
      label = 26;
     } else {
      $43 = $5&255;
      $44 = (($43) + 1)|0;
      (__ZNSt3__211char_traitsIwE4copyEPwPKwj($0,$42,$44)|0);
      __ZdlPv($42);
      label = 29;
     }
    } else {
     $19 = ($$phitmp$i>>>0)>($18>>>0);
     $20 = (($$phitmp$i) + 1)|0;
     $21 = ($20>>>0)>(1073741823);
     L14: do {
      if ($19) {
       if (!($21)) {
        $27 = $20 << 2;
        $28 = (__Znwj($27)|0);
        $$sink = $28;
        break;
       }
       $22 = (___cxa_allocate_exception(8)|0);
       __THREW__ = 0;
       invoke_vii(302,($22|0),(13300|0));
       $23 = __THREW__; __THREW__ = 0;
       $24 = $23&1;
       if ($24) {
        $25 = ___cxa_find_matching_catch_2()|0;
        $26 = tempRet0;
        ___cxa_free_exception(($22|0));
        ___resumeException($25|0);
        // unreachable;
       } else {
        HEAP32[$22>>2] = (3972);
        ___cxa_throw(($22|0),(384|0),(35|0));
        // unreachable;
       }
      } else {
       do {
        if ($21) {
         $29 = (___cxa_allocate_exception(8)|0);
         __THREW__ = 0;
         invoke_vii(302,($29|0),(13300|0));
         $30 = __THREW__; __THREW__ = 0;
         $31 = $30&1;
         if ($31) {
          $33 = ___cxa_find_matching_catch_3(0|0)|0;
          $34 = tempRet0;
          ___cxa_free_exception(($29|0));
          $eh$lpad$body$indexZ2D = $33;
          break;
         } else {
          HEAP32[$29>>2] = (3972);
          __THREW__ = 0;
          invoke_viii(311,($29|0),(384|0),(35|0));
          $32 = __THREW__; __THREW__ = 0;
          label = 19;
          break;
         }
        } else {
         $35 = $20 << 2;
         __THREW__ = 0;
         $36 = (invoke_ii(49,($35|0))|0);
         $37 = __THREW__; __THREW__ = 0;
         $38 = $37&1;
         if ($38) {
          label = 19;
         } else {
          $$sink = $36;
          break L14;
         }
        }
       } while(0);
       if ((label|0) == 19) {
        $39 = ___cxa_find_matching_catch_3(0|0)|0;
        $40 = tempRet0;
        $eh$lpad$body$indexZ2D = $39;
       }
       (___cxa_begin_catch(($eh$lpad$body$indexZ2D|0))|0);
       ___cxa_end_catch();
       break L8;
      }
     } while(0);
     if ($6) {
      $41 = HEAP32[$0>>2]|0;
      $$01743 = $41;$$018$off041 = 1;$$145 = $$sink;
      label = 26;
      break;
     } else {
      $45 = $5&255;
      $46 = (($45) + 1)|0;
      (__ZNSt3__211char_traitsIwE4copyEPwPKwj($$sink,$0,$46)|0);
      $$pre = ((($0)) + 4|0);
      $$1445157 = $$sink;$$pre$phi60Z2D = $20;$$pre$phiZ2D = $$pre;
      label = 28;
      break;
     }
    }
   } while(0);
   if ((label|0) == 26) {
    $47 = ((($0)) + 4|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = (($48) + 1)|0;
    (__ZNSt3__211char_traitsIwE4copyEPwPKwj($$145,$$01743,$49)|0);
    __ZdlPv($$01743);
    if ($$018$off041) {
     $$pre59 = (($$phitmp$i) + 1)|0;
     $$1445157 = $$145;$$pre$phi60Z2D = $$pre59;$$pre$phiZ2D = $47;
     label = 28;
    } else {
     label = 29;
    }
   }
   if ((label|0) == 28) {
    $50 = $$pre$phi60Z2D | -2147483648;
    HEAP32[$3>>2] = $50;
    HEAP32[$$pre$phiZ2D>>2] = $12;
    HEAP32[$0>>2] = $$1445157;
    break;
   }
   else if ((label|0) == 29) {
    $51 = $12&255;
    HEAP8[$4>>0] = $51;
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__211char_traitsIwE6lengthEPKw($1)|0);
 $3 = (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($0,$1,$2)|0);
 return ($3|0);
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $0 = sp + 36|0;
 $1 = (___cxa_get_globals_fast()|0);
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = HEAP32[$1>>2]|0;
  $4 = ($3|0)==(0|0);
  if (!($4)) {
   $5 = ((($3)) + 80|0);
   $6 = ((($3)) + 48|0);
   $7 = $6;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $9 & -256;
   $14 = ($13|0)==(1126902528);
   $15 = ($12|0)==(1129074247);
   $16 = $14 & $15;
   if (!($16)) {
    HEAP32[$vararg_buffer7>>2] = 13504;
    _abort_message(13454,$vararg_buffer7);
    // unreachable;
   }
   $17 = ($9|0)==(1126902529);
   $18 = ($12|0)==(1129074247);
   $19 = $17 & $18;
   if ($19) {
    $20 = ((($3)) + 44|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = $21;
   } else {
    $22 = $5;
   }
   HEAP32[$0>>2] = $22;
   $23 = HEAP32[$3>>2]|0;
   $24 = ((($23)) + 4|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = HEAP32[72]|0;
   $27 = ((($26)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (FUNCTION_TABLE_iiii[$28 & 511](288,$23,$0)|0);
   if ($29) {
    $30 = HEAP32[$0>>2]|0;
    $31 = HEAP32[$30>>2]|0;
    $32 = ((($31)) + 8|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (FUNCTION_TABLE_ii[$33 & 511]($30)|0);
    HEAP32[$vararg_buffer>>2] = 13504;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $25;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $34;
    _abort_message(13368,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = 13504;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $25;
    _abort_message(13413,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(13492,$vararg_buffer10);
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $0 = (_pthread_once((56012|0),(312|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[14004]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(13643,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function _abort_message($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = HEAP32[834]|0;
 (_vfprintf($2,$0,$1)|0);
 (_fputc(10,$2)|0);
 _abort();
 // unreachable;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp;
 $4 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$1,0)|0);
 if ($4) {
  $$2 = 1;
 } else {
  $5 = ($1|0)==(0|0);
  if ($5) {
   $$2 = 0;
  } else {
   $6 = (___dynamic_cast($1,312,296,0)|0);
   $7 = ($6|0)==(0|0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = ((($3)) + 4|0);
    dest=$8; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$3>>2] = $6;
    $9 = ((($3)) + 8|0);
    HEAP32[$9>>2] = $0;
    $10 = ((($3)) + 12|0);
    HEAP32[$10>>2] = -1;
    $11 = ((($3)) + 48|0);
    HEAP32[$11>>2] = 1;
    $12 = HEAP32[$6>>2]|0;
    $13 = ((($12)) + 28|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = HEAP32[$2>>2]|0;
    FUNCTION_TABLE_viiii[$14 & 255]($6,$3,$15,1);
    $16 = ((($3)) + 24|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(1);
    if ($18) {
     $19 = ((($3)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     HEAP32[$2>>2] = $20;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$2 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$7,$5)|0);
 if ($8) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$1,$2,$3,$4);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$6,$4)|0);
 do {
  if ($7) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$1,$2,$3);
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$8,$4)|0);
   if ($9) {
    $10 = ((($1)) + 16|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==($2|0);
    if (!($12)) {
     $13 = ((($1)) + 20|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($14|0)==($2|0);
     if (!($15)) {
      $18 = ((($1)) + 32|0);
      HEAP32[$18>>2] = $3;
      HEAP32[$13>>2] = $2;
      $19 = ((($1)) + 40|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = (($20) + 1)|0;
      HEAP32[$19>>2] = $21;
      $22 = ((($1)) + 36|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = ($23|0)==(1);
      if ($24) {
       $25 = ((($1)) + 24|0);
       $26 = HEAP32[$25>>2]|0;
       $27 = ($26|0)==(2);
       if ($27) {
        $28 = ((($1)) + 54|0);
        HEAP8[$28>>0] = 1;
       }
      }
      $29 = ((($1)) + 44|0);
      HEAP32[$29>>2] = 4;
      break;
     }
    }
    $16 = ($3|0)==(1);
    if ($16) {
     $17 = ((($1)) + 32|0);
     HEAP32[$17>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$5,0)|0);
 if ($6) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$1,$2,$3);
 }
 return;
}
function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==($1|0);
 return ($3|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 do {
  if ($6) {
   HEAP32[$4>>2] = $2;
   $7 = ((($1)) + 24|0);
   HEAP32[$7>>2] = $3;
   $8 = ((($1)) + 36|0);
   HEAP32[$8>>2] = 1;
  } else {
   $9 = ($5|0)==($2|0);
   if (!($9)) {
    $13 = ((($1)) + 36|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (($14) + 1)|0;
    HEAP32[$13>>2] = $15;
    $16 = ((($1)) + 24|0);
    HEAP32[$16>>2] = 2;
    $17 = ((($1)) + 54|0);
    HEAP8[$17>>0] = 1;
    break;
   }
   $10 = ((($1)) + 24|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==(2);
   if ($12) {
    HEAP32[$10>>2] = $3;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==($2|0);
 if ($6) {
  $7 = ((($1)) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(1);
  if (!($9)) {
   HEAP32[$7>>2] = $3;
  }
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond22 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 53|0);
 HEAP8[$5>>0] = 1;
 $6 = ((($1)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==($3|0);
 do {
  if ($8) {
   $9 = ((($1)) + 52|0);
   HEAP8[$9>>0] = 1;
   $10 = ((($1)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==(0|0);
   if ($12) {
    HEAP32[$10>>2] = $2;
    $13 = ((($1)) + 24|0);
    HEAP32[$13>>2] = $4;
    $14 = ((($1)) + 36|0);
    HEAP32[$14>>2] = 1;
    $15 = ((($1)) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($16|0)==(1);
    $18 = ($4|0)==(1);
    $or$cond = $17 & $18;
    if (!($or$cond)) {
     break;
    }
    $19 = ((($1)) + 54|0);
    HEAP8[$19>>0] = 1;
    break;
   }
   $20 = ($11|0)==($2|0);
   if (!($20)) {
    $30 = ((($1)) + 36|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (($31) + 1)|0;
    HEAP32[$30>>2] = $32;
    $33 = ((($1)) + 54|0);
    HEAP8[$33>>0] = 1;
    break;
   }
   $21 = ((($1)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($22|0)==(2);
   if ($23) {
    HEAP32[$21>>2] = $4;
    $27 = $4;
   } else {
    $27 = $22;
   }
   $24 = ((($1)) + 48|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)==(1);
   $28 = ($27|0)==(1);
   $or$cond22 = $26 & $28;
   if ($or$cond22) {
    $29 = ((($1)) + 54|0);
    HEAP8[$29>>0] = 1;
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$33 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond28 = 0, $or$cond30 = 0, $or$cond32 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($5)) + -8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($0) + ($7)|0);
 $9 = ((($5)) + -4|0);
 $10 = HEAP32[$9>>2]|0;
 HEAP32[$4>>2] = $2;
 $11 = ((($4)) + 4|0);
 HEAP32[$11>>2] = $0;
 $12 = ((($4)) + 8|0);
 HEAP32[$12>>2] = $1;
 $13 = ((($4)) + 12|0);
 HEAP32[$13>>2] = $3;
 $14 = ((($4)) + 16|0);
 $15 = ((($4)) + 20|0);
 $16 = ((($4)) + 24|0);
 $17 = ((($4)) + 28|0);
 $18 = ((($4)) + 32|0);
 $19 = ((($4)) + 40|0);
 dest=$14; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$14+36>>1]=0|0;HEAP8[$14+38>>0]=0|0;
 $20 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($10,$2,0)|0);
 L1: do {
  if ($20) {
   $21 = ((($4)) + 48|0);
   HEAP32[$21>>2] = 1;
   $22 = HEAP32[$10>>2]|0;
   $23 = ((($22)) + 20|0);
   $24 = HEAP32[$23>>2]|0;
   FUNCTION_TABLE_viiiiii[$24 & 511]($10,$4,$8,$8,1,0);
   $25 = HEAP32[$16>>2]|0;
   $26 = ($25|0)==(1);
   $$ = $26 ? $8 : 0;
   $$0 = $$;
  } else {
   $27 = ((($4)) + 36|0);
   $28 = HEAP32[$10>>2]|0;
   $29 = ((($28)) + 24|0);
   $30 = HEAP32[$29>>2]|0;
   FUNCTION_TABLE_viiiii[$30 & 255]($10,$4,$8,1,0);
   $31 = HEAP32[$27>>2]|0;
   switch ($31|0) {
   case 0:  {
    $32 = HEAP32[$19>>2]|0;
    $33 = ($32|0)==(1);
    $34 = HEAP32[$17>>2]|0;
    $35 = ($34|0)==(1);
    $or$cond = $33 & $35;
    $36 = HEAP32[$18>>2]|0;
    $37 = ($36|0)==(1);
    $or$cond28 = $or$cond & $37;
    $38 = HEAP32[$15>>2]|0;
    $$33 = $or$cond28 ? $38 : 0;
    $$0 = $$33;
    break L1;
    break;
   }
   case 1:  {
    break;
   }
   default: {
    $$0 = 0;
    break L1;
   }
   }
   $39 = HEAP32[$16>>2]|0;
   $40 = ($39|0)==(1);
   if (!($40)) {
    $41 = HEAP32[$19>>2]|0;
    $42 = ($41|0)==(0);
    $43 = HEAP32[$17>>2]|0;
    $44 = ($43|0)==(1);
    $or$cond30 = $42 & $44;
    $45 = HEAP32[$18>>2]|0;
    $46 = ($45|0)==(1);
    $or$cond32 = $or$cond30 & $46;
    if (!($or$cond32)) {
     $$0 = 0;
     break;
    }
   }
   $47 = HEAP32[$14>>2]|0;
   $$0 = $47;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$7,$5)|0);
 if ($8) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$1,$2,$3,$4);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 20|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_viiiiii[$13 & 511]($10,$1,$2,$3,$4,$5);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$037$off038 = 0, $$037$off039 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$6,$4)|0);
 do {
  if ($7) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$1,$2,$3);
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$8,$4)|0);
   if (!($9)) {
    $43 = ((($0)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = ((($45)) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 255]($44,$1,$2,$3,$4);
    break;
   }
   $10 = ((($1)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==($2|0);
   if (!($12)) {
    $13 = ((($1)) + 20|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($14|0)==($2|0);
    if (!($15)) {
     $18 = ((($1)) + 32|0);
     HEAP32[$18>>2] = $3;
     $19 = ((($1)) + 44|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)==(4);
     if ($21) {
      break;
     }
     $22 = ((($1)) + 52|0);
     HEAP8[$22>>0] = 0;
     $23 = ((($1)) + 53|0);
     HEAP8[$23>>0] = 0;
     $24 = ((($0)) + 8|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = HEAP32[$25>>2]|0;
     $27 = ((($26)) + 20|0);
     $28 = HEAP32[$27>>2]|0;
     FUNCTION_TABLE_viiiiii[$28 & 511]($25,$1,$2,$2,1,$4);
     $29 = HEAP8[$23>>0]|0;
     $30 = ($29<<24>>24)==(0);
     if ($30) {
      $$037$off038 = 4;
      label = 11;
     } else {
      $31 = HEAP8[$22>>0]|0;
      $32 = ($31<<24>>24)==(0);
      if ($32) {
       $$037$off038 = 3;
       label = 11;
      } else {
       $$037$off039 = 3;
      }
     }
     if ((label|0) == 11) {
      HEAP32[$13>>2] = $2;
      $33 = ((($1)) + 40|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = (($34) + 1)|0;
      HEAP32[$33>>2] = $35;
      $36 = ((($1)) + 36|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ($37|0)==(1);
      if ($38) {
       $39 = ((($1)) + 24|0);
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)==(2);
       if ($41) {
        $42 = ((($1)) + 54|0);
        HEAP8[$42>>0] = 1;
        $$037$off039 = $$037$off038;
       } else {
        $$037$off039 = $$037$off038;
       }
      } else {
       $$037$off039 = $$037$off038;
      }
     }
     HEAP32[$19>>2] = $$037$off039;
     break;
    }
   }
   $16 = ($3|0)==(1);
   if ($16) {
    $17 = ((($1)) + 32|0);
    HEAP32[$17>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$5,0)|0);
 if ($6) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$1,$2,$3);
 } else {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 28|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_viiii[$11 & 255]($8,$1,$2,$3);
 }
 return;
}
function __ZNSt9type_infoD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((56016|0),(313|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(13692,$vararg_buffer);
  // unreachable;
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 _free($0);
 $1 = HEAP32[14004]|0;
 $2 = (_pthread_setspecific(($1|0),(0|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  STACKTOP = sp;return;
 } else {
  _abort_message(13742,$vararg_buffer);
  // unreachable;
 }
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(314)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 }
 $3 = ($0|0)==(0|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  $5 = ($4|0)==(0|0);
  if (!($5)) {
   $6 = ((($4)) + 48|0);
   $7 = $6;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $9 & -256;
   $14 = ($13|0)==(1126902528);
   $15 = ($12|0)==(1129074247);
   $16 = $14 & $15;
   if ($16) {
    $17 = ((($4)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    __ZSt11__terminatePFvvE($18);
    // unreachable;
   }
  }
 }
 $21 = (__ZSt13get_terminatev()|0);
 __ZSt11__terminatePFvvE($21);
 // unreachable;
}
function __ZSt11__terminatePFvvE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 __THREW__ = 0;
 invoke_v($0|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  __THREW__ = 0;
  invoke_vii(315,(13795|0),($vararg_buffer|0));
  $3 = __THREW__; __THREW__ = 0;
 }
 $4 = ___cxa_find_matching_catch_3(0|0)|0;
 $5 = tempRet0;
 (___cxa_begin_catch(($4|0))|0);
 __THREW__ = 0;
 invoke_vii(315,(13835|0),($vararg_buffer1|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = ___cxa_find_matching_catch_3(0|0)|0;
 $8 = tempRet0;
 __THREW__ = 0;
 invoke_v(316);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $11 = ___cxa_find_matching_catch_3(0|0)|0;
  $12 = tempRet0;
  ___clang_call_terminate($11);
  // unreachable;
 } else {
  ___clang_call_terminate($7);
  // unreachable;
 }
}
function __ZSt13get_terminatev() {
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[960]|0;
 $1 = (($0) + 0)|0;
 HEAP32[960] = $1;
 $2 = $0;
 return ($2|0);
}
function __ZNSt9bad_allocD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt9bad_allocD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt9bad_alloc4whatEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (13885|0);
}
function __ZNSt9exceptionD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt11logic_errorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (3952);
 $1 = ((($0)) + 4|0);
 __ZNSt3__218__libcpp_refstringD2Ev($1);
 return;
}
function __ZNSt11logic_errorD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt11logic_error4whatEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = (__ZNKSt3__218__libcpp_refstring5c_strEv($1)|0);
 return ($2|0);
}
function __ZNKSt3__218__libcpp_refstring5c_strEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__218__libcpp_refstringD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNKSt3__218__libcpp_refstring15__uses_refcountEv($0)|0);
 if ($1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = (__ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_729($2)|0);
  $4 = ((($3)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + -1)|0;
  HEAP32[$4>>2] = $6;
  $7 = (($5) + -1)|0;
  $8 = ($7|0)<(0);
  if ($8) {
   __ZdlPv($3);
  }
 }
 return;
}
function __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_729($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + -12|0);
 return ($1|0);
}
function __ZNSt12length_errorD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$1,0)|0);
 return ($3|0);
}
function __ZN10__cxxabiv119__pointer_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$2>>2] = $5;
 $6 = (__ZNK10__cxxabiv117__pbase_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,0)|0);
 if ($6) {
  $$4 = 1;
 } else {
  $7 = ($1|0)==(0|0);
  if ($7) {
   $$4 = 0;
  } else {
   $8 = (___dynamic_cast($1,312,416,0)|0);
   $9 = ($8|0)==(0|0);
   if ($9) {
    $$4 = 0;
   } else {
    $10 = ((($8)) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ((($0)) + 8|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = $13 ^ -1;
    $15 = $11 & $14;
    $16 = ($15|0)==(0);
    if ($16) {
     $17 = ((($0)) + 12|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ((($8)) + 12|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($18,$20,0)|0);
     if ($21) {
      $$4 = 1;
     } else {
      $22 = HEAP32[$17>>2]|0;
      $23 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($22,448,0)|0);
      if ($23) {
       $$4 = 1;
      } else {
       $24 = HEAP32[$17>>2]|0;
       $25 = ($24|0)==(0|0);
       if ($25) {
        $$4 = 0;
       } else {
        $26 = (___dynamic_cast($24,312,296,0)|0);
        $27 = ($26|0)==(0|0);
        if ($27) {
         $$4 = 0;
        } else {
         $28 = HEAP32[$19>>2]|0;
         $29 = ($28|0)==(0|0);
         if ($29) {
          $$4 = 0;
         } else {
          $30 = (___dynamic_cast($28,312,296,0)|0);
          $31 = ($30|0)==(0|0);
          if ($31) {
           $$4 = 0;
          } else {
           $32 = ((($3)) + 4|0);
           dest=$32; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
           HEAP32[$3>>2] = $30;
           $33 = ((($3)) + 8|0);
           HEAP32[$33>>2] = $26;
           $34 = ((($3)) + 12|0);
           HEAP32[$34>>2] = -1;
           $35 = ((($3)) + 48|0);
           HEAP32[$35>>2] = 1;
           $36 = HEAP32[$30>>2]|0;
           $37 = ((($36)) + 28|0);
           $38 = HEAP32[$37>>2]|0;
           $39 = HEAP32[$2>>2]|0;
           FUNCTION_TABLE_viiii[$38 & 255]($30,$3,$39,1);
           $40 = ((($3)) + 24|0);
           $41 = HEAP32[$40>>2]|0;
           $42 = ($41|0)==(1);
           if ($42) {
            $43 = ((($3)) + 16|0);
            $44 = HEAP32[$43>>2]|0;
            HEAP32[$2>>2] = $44;
            $$0 = 1;
           } else {
            $$0 = 0;
           }
           $$4 = $$0;
          }
         }
        }
       }
      }
     }
    } else {
     $$4 = 0;
    }
   }
  }
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZNK10__cxxabiv117__pbase_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$1,0)|0);
 if ($3) {
  $$0 = 1;
 } else {
  $4 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($1,456,0)|0);
  $$0 = $4;
 }
 return ($$0|0);
}
function __ZN10__cxxabiv116__enum_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv116__enum_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$1,0)|0);
 return ($3|0);
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$7,$5)|0);
 if ($8) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$1,$2,$3,$4);
 } else {
  $9 = ((($1)) + 52|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = ((($1)) + 53|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = ((($0)) + 16|0);
  $14 = ((($0)) + 12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (((($0)) + 16|0) + ($15<<3)|0);
  HEAP8[$9>>0] = 0;
  HEAP8[$11>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($13,$1,$2,$3,$4,$5);
  $17 = ($15|0)>(1);
  L4: do {
   if ($17) {
    $18 = ((($0)) + 24|0);
    $19 = ((($1)) + 24|0);
    $20 = ((($0)) + 8|0);
    $21 = ((($1)) + 54|0);
    $$0 = $18;
    while(1) {
     $22 = HEAP8[$21>>0]|0;
     $23 = ($22<<24>>24)==(0);
     if (!($23)) {
      break L4;
     }
     $24 = HEAP8[$9>>0]|0;
     $25 = ($24<<24>>24)==(0);
     if ($25) {
      $31 = HEAP8[$11>>0]|0;
      $32 = ($31<<24>>24)==(0);
      if (!($32)) {
       $33 = HEAP32[$20>>2]|0;
       $34 = $33 & 1;
       $35 = ($34|0)==(0);
       if ($35) {
        break L4;
       }
      }
     } else {
      $26 = HEAP32[$19>>2]|0;
      $27 = ($26|0)==(1);
      if ($27) {
       break L4;
      }
      $28 = HEAP32[$20>>2]|0;
      $29 = $28 & 2;
      $30 = ($29|0)==(0);
      if ($30) {
       break L4;
      }
     }
     HEAP8[$9>>0] = 0;
     HEAP8[$11>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$0,$1,$2,$3,$4,$5);
     $36 = ((($$0)) + 8|0);
     $37 = ($36>>>0)<($16>>>0);
     if ($37) {
      $$0 = $36;
     } else {
      break;
     }
    }
   }
  } while(0);
  HEAP8[$9>>0] = $10;
  HEAP8[$11>>0] = $12;
 }
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$081$off0 = 0, $$084 = 0, $$085$off0 = 0, $$1 = 0, $$182$off0 = 0, $$186$off0 = 0, $$2 = 0, $$283$off0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$6,$4)|0);
 L1: do {
  if ($7) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$1,$2,$3);
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$8,$4)|0);
   if (!($9)) {
    $56 = ((($0)) + 16|0);
    $57 = ((($0)) + 12|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = (((($0)) + 16|0) + ($58<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($56,$1,$2,$3,$4);
    $60 = ((($0)) + 24|0);
    $61 = ($58|0)>(1);
    if (!($61)) {
     break;
    }
    $62 = ((($0)) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = $63 & 2;
    $65 = ($64|0)==(0);
    if ($65) {
     $66 = ((($1)) + 36|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ($67|0)==(1);
     if (!($68)) {
      $74 = $63 & 1;
      $75 = ($74|0)==(0);
      if ($75) {
       $78 = ((($1)) + 54|0);
       $$2 = $60;
       while(1) {
        $87 = HEAP8[$78>>0]|0;
        $88 = ($87<<24>>24)==(0);
        if (!($88)) {
         break L1;
        }
        $89 = HEAP32[$66>>2]|0;
        $90 = ($89|0)==(1);
        if ($90) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$2,$1,$2,$3,$4);
        $91 = ((($$2)) + 8|0);
        $92 = ($91>>>0)<($59>>>0);
        if ($92) {
         $$2 = $91;
        } else {
         break L1;
        }
       }
      }
      $76 = ((($1)) + 24|0);
      $77 = ((($1)) + 54|0);
      $$1 = $60;
      while(1) {
       $79 = HEAP8[$77>>0]|0;
       $80 = ($79<<24>>24)==(0);
       if (!($80)) {
        break L1;
       }
       $81 = HEAP32[$66>>2]|0;
       $82 = ($81|0)==(1);
       if ($82) {
        $83 = HEAP32[$76>>2]|0;
        $84 = ($83|0)==(1);
        if ($84) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$1,$1,$2,$3,$4);
       $85 = ((($$1)) + 8|0);
       $86 = ($85>>>0)<($59>>>0);
       if ($86) {
        $$1 = $85;
       } else {
        break L1;
       }
      }
     }
    }
    $69 = ((($1)) + 54|0);
    $$0 = $60;
    while(1) {
     $70 = HEAP8[$69>>0]|0;
     $71 = ($70<<24>>24)==(0);
     if (!($71)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$0,$1,$2,$3,$4);
     $72 = ((($$0)) + 8|0);
     $73 = ($72>>>0)<($59>>>0);
     if ($73) {
      $$0 = $72;
     } else {
      break L1;
     }
    }
   }
   $10 = ((($1)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==($2|0);
   if (!($12)) {
    $13 = ((($1)) + 20|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($14|0)==($2|0);
    if (!($15)) {
     $18 = ((($1)) + 32|0);
     HEAP32[$18>>2] = $3;
     $19 = ((($1)) + 44|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)==(4);
     if ($21) {
      break;
     }
     $22 = ((($0)) + 16|0);
     $23 = ((($0)) + 12|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (((($0)) + 16|0) + ($24<<3)|0);
     $26 = ((($1)) + 52|0);
     $27 = ((($1)) + 53|0);
     $28 = ((($1)) + 54|0);
     $29 = ((($0)) + 8|0);
     $30 = ((($1)) + 24|0);
     $$081$off0 = 0;$$084 = $22;$$085$off0 = 0;
     L32: while(1) {
      $31 = ($$084>>>0)<($25>>>0);
      if (!($31)) {
       $$283$off0 = $$081$off0;
       label = 18;
       break;
      }
      HEAP8[$26>>0] = 0;
      HEAP8[$27>>0] = 0;
      __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$084,$1,$2,$2,1,$4);
      $32 = HEAP8[$28>>0]|0;
      $33 = ($32<<24>>24)==(0);
      if (!($33)) {
       $$283$off0 = $$081$off0;
       label = 18;
       break;
      }
      $34 = HEAP8[$27>>0]|0;
      $35 = ($34<<24>>24)==(0);
      do {
       if ($35) {
        $$182$off0 = $$081$off0;$$186$off0 = $$085$off0;
       } else {
        $36 = HEAP8[$26>>0]|0;
        $37 = ($36<<24>>24)==(0);
        if ($37) {
         $43 = HEAP32[$29>>2]|0;
         $44 = $43 & 1;
         $45 = ($44|0)==(0);
         if ($45) {
          $$283$off0 = 1;
          label = 18;
          break L32;
         } else {
          $$182$off0 = 1;$$186$off0 = $$085$off0;
          break;
         }
        }
        $38 = HEAP32[$30>>2]|0;
        $39 = ($38|0)==(1);
        if ($39) {
         label = 23;
         break L32;
        }
        $40 = HEAP32[$29>>2]|0;
        $41 = $40 & 2;
        $42 = ($41|0)==(0);
        if ($42) {
         label = 23;
         break L32;
        } else {
         $$182$off0 = 1;$$186$off0 = 1;
        }
       }
      } while(0);
      $46 = ((($$084)) + 8|0);
      $$081$off0 = $$182$off0;$$084 = $46;$$085$off0 = $$186$off0;
     }
     do {
      if ((label|0) == 18) {
       if (!($$085$off0)) {
        HEAP32[$13>>2] = $2;
        $47 = ((($1)) + 40|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = (($48) + 1)|0;
        HEAP32[$47>>2] = $49;
        $50 = ((($1)) + 36|0);
        $51 = HEAP32[$50>>2]|0;
        $52 = ($51|0)==(1);
        if ($52) {
         $53 = HEAP32[$30>>2]|0;
         $54 = ($53|0)==(2);
         if ($54) {
          HEAP8[$28>>0] = 1;
          if ($$283$off0) {
           label = 23;
           break;
          } else {
           $55 = 4;
           break;
          }
         }
        }
       }
       if ($$283$off0) {
        label = 23;
       } else {
        $55 = 4;
       }
      }
     } while(0);
     if ((label|0) == 23) {
      $55 = 3;
     }
     HEAP32[$19>>2] = $55;
     break;
    }
   }
   $16 = ($3|0)==(1);
   if ($16) {
    $17 = ((($1)) + 32|0);
    HEAP32[$17>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$5,0)|0);
 L1: do {
  if ($6) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$1,$2,$3);
  } else {
   $7 = ((($0)) + 16|0);
   $8 = ((($0)) + 12|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (((($0)) + 16|0) + ($9<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($7,$1,$2,$3);
   $11 = ($9|0)>(1);
   if ($11) {
    $12 = ((($0)) + 24|0);
    $13 = ((($1)) + 54|0);
    $$0 = $12;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($$0,$1,$2,$3);
     $14 = HEAP8[$13>>0]|0;
     $15 = ($14<<24>>24)==(0);
     if (!($15)) {
      break L1;
     }
     $16 = ((($$0)) + 8|0);
     $17 = ($16>>>0)<($10>>>0);
     if ($17) {
      $$0 = $16;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 >> 8;
 $7 = $5 & 1;
 $8 = ($7|0)==(0);
 if ($8) {
  $$0 = $6;
 } else {
  $9 = HEAP32[$2>>2]|0;
  $10 = (($9) + ($6)|0);
  $11 = HEAP32[$10>>2]|0;
  $$0 = $11;
 }
 $12 = HEAP32[$0>>2]|0;
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($13)) + 28|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($2) + ($$0)|0);
 $17 = $5 & 2;
 $18 = ($17|0)!=(0);
 $19 = $18 ? $3 : 2;
 FUNCTION_TABLE_viiii[$15 & 255]($12,$1,$16,$19);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($0)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 >> 8;
 $9 = $7 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  $$0 = $8;
 } else {
  $11 = HEAP32[$3>>2]|0;
  $12 = (($11) + ($8)|0);
  $13 = HEAP32[$12>>2]|0;
  $$0 = $13;
 }
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 20|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (($3) + ($$0)|0);
 $19 = $7 & 2;
 $20 = ($19|0)!=(0);
 $21 = $20 ? $4 : 2;
 FUNCTION_TABLE_viiiiii[$17 & 511]($14,$1,$2,$18,$21,$5);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 >> 8;
 $8 = $6 & 1;
 $9 = ($8|0)==(0);
 if ($9) {
  $$0 = $7;
 } else {
  $10 = HEAP32[$2>>2]|0;
  $11 = (($10) + ($7)|0);
  $12 = HEAP32[$11>>2]|0;
  $$0 = $12;
 }
 $13 = HEAP32[$0>>2]|0;
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($14)) + 24|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (($2) + ($$0)|0);
 $18 = $6 & 2;
 $19 = ($18|0)!=(0);
 $20 = $19 ? $3 : 2;
 FUNCTION_TABLE_viiiii[$16 & 255]($13,$1,$17,$20,$4);
 return;
}
function __ZNSt9bad_allocC2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (3932);
 return;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[14005]|0;
 $1 = (($0) + 0)|0;
 HEAP32[14005] = $1;
 $2 = $0;
 return ($2|0);
}
function ___cxa_can_catch($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $4;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($5)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iiii[$7 & 511]($0,$1,$3)|0);
 $9 = $8&1;
 if ($8) {
  $10 = HEAP32[$3>>2]|0;
  HEAP32[$2>>2] = $10;
 }
 STACKTOP = sp;return ($9|0);
}
function ___cxa_is_pointer_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, $phitmp1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $3 = 0;
 } else {
  $2 = (___dynamic_cast($0,312,416,0)|0);
  $phitmp = ($2|0)!=(0|0);
  $phitmp1 = $phitmp&1;
  $3 = $phitmp1;
 }
 return ($3|0);
}
function runPostSets() {
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
    $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
    $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
    $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
    $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
    $4$0 = _i64Subtract($1$0 ^ $a$0 | 0, $1$1 ^ $a$1 | 0, $1$0 | 0, $1$1 | 0) | 0;
    $4$1 = tempRet0;
    $6$0 = _i64Subtract($2$0 ^ $b$0 | 0, $2$1 ^ $b$1 | 0, $2$0 | 0, $2$1 | 0) | 0;
    $7$0 = $2$0 ^ $1$0;
    $7$1 = $2$1 ^ $1$1;
    $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
    $10$0 = _i64Subtract($8$0 ^ $7$0 | 0, tempRet0 ^ $7$1 | 0, $7$0 | 0, $7$1 | 0) | 0;
    return $10$0 | 0;
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $rem = 0, __stackBase__ = 0;
    __stackBase__ = STACKTOP;
    STACKTOP = STACKTOP + 16 | 0;
    $rem = __stackBase__ | 0;
    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
    STACKTOP = __stackBase__;
    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        ___setErrNo(12);
        return -1;
      }
    }
    return oldDynamicTop|0;
}

  
function dynCall_dii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return +FUNCTION_TABLE_dii[index&511](a1|0,a2|0);
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&511]()|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&511](a1|0)|0;
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&511](a1|0,a2|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&511](a1|0,a2|0,a3|0)|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&511](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0;
  return FUNCTION_TABLE_iiiiiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0)|0;
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&511]();
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&511](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&511](a1|0,a2|0);
}


function dynCall_viid(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=+a3;
  FUNCTION_TABLE_viid[index&511](a1|0,a2|0,+a3);
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&511](a1|0,a2|0,a3|0);
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&255](a1|0,a2|0,a3|0,a4|0);
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0;
  FUNCTION_TABLE_viiiiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0);
}

function b0(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_dii(0);return +0;
}
function b1() {
 ; nullFunc_i(1);return 0;
}
function b2(p0) {
 p0 = p0|0; nullFunc_ii(2);return 0;
}
function b3(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(3);return 0;
}
function b4(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(4);return 0;
}
function b5(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(5);return 0;
}
function b6(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(6);return 0;
}
function b7(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_iiiiiii(7);return 0;
}
function b8(p0,p1,p2,p3,p4,p5,p6,p7,p8) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0; nullFunc_iiiiiiiiii(8);return 0;
}
function b9() {
 ; nullFunc_v(9);
}
function ___cxa_end_catch__wrapper() {
 ; ___cxa_end_catch();
}
function b10(p0) {
 p0 = p0|0; nullFunc_vi(10);
}
function __embind_finalize_value_object__wrapper(p0) {
 p0 = p0|0; __embind_finalize_value_object(p0|0);
}
function b11(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(11);
}
function b12(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = +p2; nullFunc_viid(12);
}
function b13(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(13);
}
function ___cxa_throw__wrapper(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; ___cxa_throw(p0|0,p1|0,p2|0);
}
function b14(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(14);
}
function b15(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(15);
}
function b16(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(16);
}
function __embind_register_value_object__wrapper(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; __embind_register_value_object(p0|0,p1|0,p2|0,p3|0,p4|0,p5|0);
}
function b17(p0,p1,p2,p3,p4,p5,p6,p7,p8) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0; nullFunc_viiiiiiiii(17);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_dii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,__ZN10emscripten8internal12MemberAccessI13ArcFileHeaderdE7getWireIS2_EEdRKMS2_dRKT_,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0];
var FUNCTION_TABLE_i = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,__ZN10emscripten8internal12operator_newI10RarArchiveJEEEPT_DpOT0_,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,__ZN10emscripten8internal15raw_constructorI5StateJEEEPT_DpNS0_11BindingTypeIT0_E8WireTypeE,b1,__ZN10emscripten8internal6TypeIDI5StateE3getEv,b1,b1,b1,b1,b1,b1,__ZN10emscripten8internal15raw_constructorI9ArcHeaderJEEEPT_DpNS0_11BindingTypeIT0_E8WireTypeE,b1,__ZN10emscripten8internal6TypeIDI9ArcHeaderE3getEv,b1,b1,b1,b1,b1,b1,__ZN10emscripten8internal15raw_constructorI13ArcFileHeaderJEEEPT_DpNS0_11BindingTypeIT0_E8WireTypeE,b1,__ZN10emscripten8internal6TypeIDI13ArcFileHeaderE3getEv,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,___cxa_get_globals_fast,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1];
var FUNCTION_TABLE_ii = [b2,b2,b2,b2,b2,b2,__ZN7Archive4TellEv,b2,b2,b2,b2,b2,__ZN4File4TellEv,___stdio_close,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,__ZNKSt9bad_alloc4whatEv,b2,b2,__ZNKSt11logic_error4whatEv,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__Znwj,b2,b2,b2,b2,b2,b2,__ZN12ErrorHandler12GetErrorCodeEv,__ZL13RarErrorToDll8RAR_EXIT,b2
,b2,__ZN5ArrayIwE4SizeEv,b2,b2,__ZN5ArrayIcE4SizeEv,b2,b2,_strlen,b2,b2,b2,b2,b2,__ZN7Archive13GetHeaderTypeEv,b2,b2,b2,b2,__ZN7RarTime6GetDosEv,b2,b2,b2,b2,b2,b2,__ZN4File8IsOpenedEv,__ZN7Archive10ReadHeaderEv,b2,b2,b2
,b2,b2,b2,__ZN7RawRead4GetVEv,b2,b2,b2,b2,__ZN4File7GetByteEv,__ZN7Archive11GetStartPosEv,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN8DataHash8GetCRC32Ev,b2,b2,b2,_wcslen,b2
,b2,b2,b2,__ZN5ArrayIhE4SizeEv,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN7RawRead4Get2Ev,__ZN7RawRead4Get1Ev,b2,__ZN7RawRead4Get4Ev,b2,b2,b2,__ZN7RawRead4SizeEv,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN7RawRead8GetCRC50Ev,b2,b2,b2,b2,b2,b2,b2,b2,__ZN11SecPassword5IsSetEv,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__Z9FileExistPKw,b2,__ZN7Archive8IsArcDirEv,b2,b2,b2,__ZN4File8IsDeviceEv,b2,b2,b2,__ZN4File10FileLengthEv,b2,b2,b2,b2,b2,b2,__ZN4File8TruncateEv,b2,__ZN4File5CloseEv
,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN6Unpack17SafePPMDecodeCharEv,b2,__ZN6Unpack12UnpReadBuf30Ev,__ZN8BitInput7getbitsEv,b2,b2,b2,__ZN8BitInput8fgetbitsEv,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,__ZN10emscripten8internal13getActualTypeI10RarArchiveEEPKvPT_,b2,b2,__ZN10emscripten8internal7InvokerIP10RarArchiveJEE6invokeEPFS3_vE,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN10emscripten8internal11BindingTypeIbE12fromWireTypeEb
,__ZN10emscripten8internal18GenericBindingTypeI9ArcHeaderE10toWireTypeEOS2_,__ZN10emscripten8internal18GenericBindingTypeI13ArcFileHeaderE10toWireTypeEOS2_,__ZN10emscripten8internal18GenericBindingTypeI5StateE10toWireTypeEOS2_,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,_RARCloseArchive,__ZN4File6DeleteEv,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2];
var FUNCTION_TABLE_iii = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZN7Archive9IsArchiveEb,b3,b3,b3
,__ZN7Archive10GetCommentEP5ArrayIwE,b3,b3,__ZNK5ArrayIcEixEj,b3,__ZNK5ArrayIwEixEj,b3,b3,b3,b3,b3,b3,__ZN7Archive11SearchBlockE11HEADER_TYPE,b3,b3,_RARReadHeaderEx,b3,b3,b3,b3,b3,b3,b3,_wcscpy,b3,b3,b3,b3,b3,b3
,__ZN10FileHeader7CmpNameEPKw,b3,__ZN9QuickOpen7ReadRawER7RawRead,b3,b3,__ZNK5ArrayIhEixEj,b3,b3,b3,b3,__ZN7Archive14SearchSubBlockEPKw,__ZN7Archive15ReadCommentDataEP5ArrayIwE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZN5ArrayIwE4AddrEj,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZN7Archive11IsSignatureEPKhj,__ZN7RawRead4ReadEj,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZN7Archive14FullHeaderSizeEj
,b3,b3,b3,b3,b3,b3,b3,__ZN7RawRead8GetCRC15Eb,b3,b3,b3,b3,__ZN7RawRead8GetVSizeEj,b3,b3,b3,b3,b3,b3,b3,__ZN7RarTimeaSEl,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,__Z11SetFileAttrPKwj,__ZN4File5WOpenEPKw,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZN8BitInput8OverflowEj,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZN10emscripten8internal13MethodInvokerIM10RarArchiveF13ArcFileHeadervES3_PS2_JEE6invokeERKS5_S6_,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,b3,__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b3,b3
,b3,b3,b3,b3,b3,b3,b3,__ZN10emscripten8internal12MemberAccessI5StatejE7getWireIS2_EEjRKMS2_jRKT_,b3,__ZN10emscripten8internal12MemberAccessI5StateNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE7getWireIS2_EEPNS0_11BindingTypeIS9_EUt_ERKMS2_S9_RKT_,b3,b3,b3,b3,b3,__ZN10emscripten8internal12MemberAccessI9ArcHeader5StateE7getWireIS2_EEPS3_RKMS2_S3_RKT_,b3,__ZN10emscripten8internal12MemberAccessI9ArcHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEE7getWireIS2_EEPNS0_11BindingTypeIS9_EUt_ERKMS2_S9_RKT_,b3,__ZN10emscripten8internal12MemberAccessI9ArcHeaderjE7getWireIS2_EEjRKMS2_jRKT_,b3,b3,b3,b3,__ZN10emscripten8internal12MemberAccessI13ArcFileHeader5StateE7getWireIS2_EEPS3_RKMS2_S3_RKT_,b3,__ZN10emscripten8internal12MemberAccessI13ArcFileHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEE7getWireIS2_EEPNS0_11BindingTypeIS9_EUt_ERKMS2_S9_RKT_,b3,__ZN10emscripten8internal12MemberAccessI13ArcFileHeaderjE7getWireIS2_EEjRKMS2_jRKT_,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3];
var FUNCTION_TABLE_iiii = [b4,b4,b4,__ZN7Archive4OpenEPKwj,__ZN7Archive4ReadEPvj,b4,b4,b4,b4,__ZN4File4OpenEPKwj,__ZN4File4ReadEPvj,b4,b4,b4,___stdio_read,___stdio_seek,___stdout_write,___stdio_write,_sn_write,b4,b4,b4,b4,b4,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,b4,__ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv,b4,__ZNK10__cxxabiv116__enum_type_info9can_catchEPKNS_16__shim_type_infoERPv,b4,b4,b4,b4,b4,b4,b4,__Z8strncpyzPcPKcj,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,__Z10WideToCharPKwPcj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_wcsncpy,b4,__Z8wcsncpyzPwPKwj,b4,__Z10CharToWidePKcPwj,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,__ZN7RawRead4GetBEPvj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,__Z5CRC32jPKvj,b4,__ZN7Archive11ReadSubDataEP5ArrayIhEP4File,b4,__Z9UtfToWidePKcPwj,__Z9RawToWidePKhPwj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_memcmp,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN8DataHash3CmpEP9HashValuePh,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN10CmdExtract14ExtrCreateFileER7ArchiveR4File,b4,b4,b4,b4,b4,b4,b4,b4,b4,__Z15ExtractHardlinkPwS_j,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,__ZN4File5WriteEPKvj,__ZN11ComprDataIO7UnpReadEPhj,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN10emscripten8internal13MethodInvokerIM10RarArchiveF5StatebES3_PS2_JbEE6invokeERKS5_S6_b,__ZN10emscripten12value_objectI5StateE5fieldIS1_jEERS2_PKcMT_T0_,__ZN10emscripten12value_objectI5StateE5fieldIS1_NSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEERS2_PKcMT_T0_,__ZN10emscripten12value_objectI9ArcHeaderE5fieldIS1_5StateEERS2_PKcMT_T0_,__ZN10emscripten12value_objectI9ArcHeaderE5fieldIS1_NSt3__212basic_stringIwNS4_11char_traitsIwEENS4_9allocatorIwEEEEEERS2_PKcMT_T0_,__ZN10emscripten12value_objectI9ArcHeaderE5fieldIS1_jEERS2_PKcMT_T0_,__ZN10emscripten12value_objectI13ArcFileHeaderE5fieldIS1_5StateEERS2_PKcMT_T0_,__ZN10emscripten12value_objectI13ArcFileHeaderE5fieldIS1_NSt3__212basic_stringIwNS4_11char_traitsIwEENS4_9allocatorIwEEEEEERS2_PKcMT_T0_,__ZN10emscripten12value_objectI13ArcFileHeaderE5fieldIS1_jEERS2_PKcMT_T0_,__ZN10emscripten12value_objectI13ArcFileHeaderE5fieldIS1_dEERS2_PKcMT_T0_,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,_wmemcpy,b4,b4,b4,b4,_sw_write,b4,_wmemmove,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4];
var FUNCTION_TABLE_iiiii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__Z11GetWideNamePKcPKwPwj,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__Z12MergeArchiveR7ArchiveP11ComprDataIObw,b5,_RARProcessFile,b5,b5,b5,b5,b5,b5,b5,__ZN10CmdExtract18ExtractCurrentFileER7ArchivejRb,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,__Z9ToPercentxx,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__Z18uiStartFileExtractPKwbbb,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__Z14ExtractSymlinkP11CommandDataR11ComprDataIOR7ArchivePKw,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN6Unpack9AddVMCodeEjPhi,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__Z12listCallbackjlll,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_iiiiii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZN10emscripten8internal13MethodInvokerIM10RarArchiveF9ArcHeaderRKNSt3__212basic_stringIwNS4_11char_traitsIwEENS4_9allocatorIwEEEESC_bES3_PS2_JSC_SC_bEE6invokeERKSE_SF_PNS0_11BindingTypeISA_EUt_ESM_b,b6,b6,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiiiii = [b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN10CmdExtract15ExtractFileCopyER4FilePwS2_S2_j,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiiiiiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZN9CryptData12SetCryptKeysEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__Z10FileCreateP10RAROptionsP4FilePwjPbxP7RarTimeb,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_v = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZL25default_terminate_handlerv,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,__Z4Waitv,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b9,b9,b9,___cxa_end_catch__wrapper,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9];
var FUNCTION_TABLE_vi = [b10,__ZN7ArchiveD2Ev,__ZN7ArchiveD0Ev,b10,b10,b10,b10,__ZN4FileD2Ev,__ZN4FileD0Ev,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b10,b10,b10,b10,__ZN10__cxxabiv120__si_class_type_infoD0Ev
,b10,b10,b10,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,b10,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,b10,__ZNSt12length_errorD0Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,b10,__ZN10__cxxabiv119__pointer_type_infoD0Ev,b10,__ZN10__cxxabiv116__enum_type_infoD0Ev,b10,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b10,b10,b10,b10,__ZN7DataSetC2Ev,b10,b10,b10,b10,b10,b10,b10,__ZN5ArrayIwEC2Ev
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,_free,b10,b10,b10,b10,b10,b10,b10,b10,__ZN7Archive10SeekToNextEv,b10,b10,b10,b10,b10,b10,__ZN5ArrayIhEC2Ev,b10,__ZN9QuickOpen5CloseEv
,b10,b10,b10,b10,b10,b10,b10,__ZN10StringList5ResetEv,b10,b10,b10,b10,b10,__ZN11ComprDataIOC2Ev,b10,__ZN11ComprDataIO18SetCmt13EncryptionEv,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,__ZN9CryptDataC2Ev,__ZN7RarTimeC2Ev,__ZN9QuickOpenC2Ev,__ZN10FileHeaderC2Ev,__ZN10RAROptionsC2Ev,__ZN7RarTime5ResetEv,b10,b10,__ZN10MainHeader5ResetEv,b10,b10,b10,b10,b10,b10,b10,b10,__ZN7Archive18RequestArcPasswordEv,__ZN7Archive14UnexpEndArcMsgEv,b10,b10,__ZN9BaseBlock5ResetEv,__ZN7Archive15BrokenHeaderMsgEv,b10
,__ZN14EncodeFileNameC2Ev,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__Z11sha256_initP14sha256_context,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5ArrayIhE5ResetEv,__ZN9CryptData13KDF3CacheItemC2Ev,__ZN9CryptData13KDF5CacheItemC2Ev
,__ZN8RijndaelC2Ev,b10,__ZN7RawRead5ResetEv,__ZN8DataHashC2Ev,__ZN11ComprDataIO4InitEv,__ZN5ArrayIxEC2Ev,__ZN10RAROptions4InitEv,__ZN11SecPassword5CleanEv,__ZN14blake2sp_stateC2Ev,__ZN4FileC2Ev,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN14UnpackFilter30C2Ev,b10,b10,b10,b10,__ZN16FragmentedWindow5ResetEv,__ZN5ArrayI12UnpackFilterEC2Ev,__ZN16FragmentedWindowC2Ev,__ZN8ModelPPMC2Ev,__ZN5RarVMC2Ev,b10,__ZN5ArrayIP14UnpackFilter30EC2Ev,__ZN5ArrayIiEC2Ev,b10,b10,__ZN6Unpack8InitHuffEv
,__ZN12SubAllocator16StopSubAllocatorEv,b10,__ZN10StringListC2Ev,__ZN11CommandData4InitEv,b10,__ZN10emscripten8internal14raw_destructorI10RarArchiveEEvPT_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN10RarArchiveC2Ev,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,__ZN10emscripten8internal14raw_destructorI5StateEEvPT_,b10,b10,b10,b10,b10,b10,__embind_finalize_value_object__wrapper,b10,__ZN10emscripten8internal14raw_destructorI9ArcHeaderEEvPT_,b10,b10,b10,b10,b10,b10,b10,b10,__ZN10emscripten8internal14raw_destructorI13ArcFileHeaderEEvPT_,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10];
var FUNCTION_TABLE_vii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZN10StringList9AddStringEPKw,b11,b11,__ZN11CommandData10AddArcNameEPKw,b11,b11,b11,b11
,b11,b11,__ZN5ArrayIcEC2Ej,b11,b11,b11,b11,b11,__ZN10CmdExtract18ExtractArchiveInitER7Archive,__ZN7ArchiveC2EP10RAROptions,__ZN10CmdExtractC2EP11CommandData,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__Z11AddEndSlashPwj,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,__ZN5ArrayIhE5AllocEj,b11,b11,b11,b11,b11,b11,b11,__Z5uiMsgIPwEv14UIMESSAGE_CODET_,b11,__ZN11ComprDataIO11SetTestModeEb,b11,b11,__ZN11ComprDataIO18EnableShowProgressEb,b11,b11,__ZN6UnpackC2EP11ComprDataIO,b11,b11,b11,b11,b11,__ZN5ArrayIwE5AllocEj,b11,b11,__ZN5ArrayIhEC2Ej
,b11,__ZN5ArrayIhE4PushEh,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZN10FileHeader5ResetEj,b11,__ZN7RarTime6SetDosEj,b11,__ZN7Archive15ConvertNameCaseEPw,b11,b11,b11,b11,__ZN7RawRead8SetCryptEP9CryptData,b11,b11,b11
,b11,b11,b11,__ZN7Archive17ConvertFileHeaderEP10FileHeader,b11,__ZN7RarTime8GetLocalEP12RarLocalTime,__ZN7RarTime8SetLocalEP12RarLocalTime,b11,__ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT,b11,__ZN11SaveFilePosC2ER4File,b11,b11,b11,__ZN7Archive12UnkEncVerMsgEPKw,b11,b11,__Z11sha256_doneP14sha256_contextPh,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,__Z9cleandataPvj,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__Z7mprintfPKwz,__ZN11ComprDataIO13SetSkipUnpCRCEb,b11,b11,__ZN4File14SetAllowDeleteEb,b11,b11,b11,b11,b11,b11,b11
,__Z12SetUnixOwnerR7ArchivePKw,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZN8BitInput7addbitsEj,b11,b11,b11,__ZN8BitInput8faddbitsEj,b11,b11,b11,b11,b11,b11,__ZN8BitInputC2Eb,b11,b11,__ZN6Unpack11UnpInitDataEb,__ZN6Unpack13UnpInitData15Ei,b11
,b11,__ZN6Unpack13InitFilters30Eb,b11,b11,b11,b11,b11,b11,b11,b11,__ZN10RarArchive13getFileHeaderEv,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZN5ArrayIwEC2Ej,b11,__ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE12fromWireTypeEPNS9_Ut_E,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,__ZNSt11logic_errorC2EPKc,b11,__ZN5StateC2ERKS_,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,b11,b11,b11,__ZNSt3__218__libcpp_refstringC2EPKc,b11,b11,b11,b11,b11,_abort_message,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_viid = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,__ZN10emscripten8internal12MemberAccessI13ArcFileHeaderdE7setWireIS2_EEvRKMS2_dRT_d,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12];
var FUNCTION_TABLE_viii = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN9QuickOpen4InitEP7Archiveb,b13
,b13,__ZN9CryptData12DecryptBlockEPhj,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN11ComprDataIO8SetFilesEP4FileS1_,b13,__ZN11ComprDataIO19SetPackedSizeToReadEx,__ZN8DataHash4InitE9HASH_TYPEj,b13,__ZN6Unpack4InitEjb,__ZN6Unpack11SetDestSizeEx,__ZN6Unpack8DoUnpackEib,b13,__ZN11ComprDataIO15GetUnpackedDataEPPhPj,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__Z8IntToExtPKcPcj,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,__Z5uiMsgIPwS0_Ev14UIMESSAGE_CODET_T0_,b13,b13,b13,b13,b13,b13,__Z14sha256_processP14sha256_contextPKvj,b13,b13,__ZN9QuickOpen4LoadEy,b13,__ZN11ComprDataIO17SetUnpackToMemoryEPhj,b13,b13,__ZN11ComprDataIO12SetSubHeaderEP10FileHeaderPx,__ZN10CmdExtract11UnstoreFileER11ComprDataIOx,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN10CmdExtract13ExtrCreateDirER7ArchivePKw,b13,b13,b13,__ZN12ErrorHandler10WriteErrorEPKwS1_,b13,b13,b13,__ZN4File8PreallocEx,b13,b13,b13,b13,b13,b13,b13,b13
,b13,__ZN4File16SetCloseFileTimeEP7RarTimeS1_,b13,b13,b13,b13,b13,b13,__ZN11ComprDataIO8UnpWriteEPhj,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN10RarArchive8readFileEb,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,__ZN10emscripten8internal12MemberAccessI5StatejE7setWireIS2_EEvRKMS2_jRT_j,b13,__ZN10emscripten8internal12MemberAccessI5StateNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE7setWireIS2_EEvRKMS2_S9_RT_PNS0_11BindingTypeIS9_EUt_E,b13,b13,b13,b13,b13,__ZN10emscripten8internal12MemberAccessI9ArcHeader5StateE7setWireIS2_EEvRKMS2_S3_RT_PS3_,b13,__ZN10emscripten8internal12MemberAccessI9ArcHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEE7setWireIS2_EEvRKMS2_S9_RT_PNS0_11BindingTypeIS9_EUt_E,b13,__ZN10emscripten8internal12MemberAccessI9ArcHeaderjE7setWireIS2_EEvRKMS2_jRT_j,b13,b13,b13,b13,__ZN10emscripten8internal12MemberAccessI13ArcFileHeader5StateE7setWireIS2_EEvRKMS2_S3_RT_PS3_,b13,__ZN10emscripten8internal12MemberAccessI13ArcFileHeaderNSt3__212basic_stringIwNS3_11char_traitsIwEENS3_9allocatorIwEEEEE7setWireIS2_EEvRKMS2_S9_RT_PNS0_11BindingTypeIS9_EUt_E,b13,__ZN10emscripten8internal12MemberAccessI13ArcFileHeaderjE7setWireIS2_EEvRKMS2_jRT_j
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,___cxa_throw__wrapper,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13];
var FUNCTION_TABLE_viiii = [b14,b14,b14,b14,b14,__ZN7Archive4SeekExi,b14,b14,b14,b14,b14,__ZN4File4SeekExi,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b14
,b14,b14,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,__Z13ArcCharToWidePKcPwj13ACTW_ENCODING,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZN7Archive14ProcessExtra50EP7RawReadjP9BaseBlock,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZN4File15SetOpenFileTimeEP7RarTimeS1_S1_,b14
,b14,b14,b14,b14,__Z5uiMsgIPwS0_S0_Ev14UIMESSAGE_CODET_T0_T1_,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZN5RarVM7PrepareEPhjP18VM_PreparedProgram,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14];
var FUNCTION_TABLE_viiiii = [b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b15,b15
,b15,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN10CmdExtract15ExtrPrepareNameER7ArchivePKwPwj,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,__ZN10RarArchive4openERKNSt3__212basic_stringIwNS0_11char_traitsIwEENS0_9allocatorIwEEEES8_b,b15,b15,b15,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_viiiiii = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b16,b16,b16
,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,__ZN14EncodeFileName6DecodeEPcPhjPwj,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,__embind_register_value_object__wrapper,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16];
var FUNCTION_TABLE_viiiiiiiii = [b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZN11ComprDataIO13SetEncryptionEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17];

  return { __GLOBAL__sub_I_bind_cpp: __GLOBAL__sub_I_bind_cpp, __GLOBAL__sub_I_bridge_cpp: __GLOBAL__sub_I_bridge_cpp, __GLOBAL__sub_I_crc_cpp: __GLOBAL__sub_I_crc_cpp, ___cxa_can_catch: ___cxa_can_catch, ___cxa_is_pointer_type: ___cxa_is_pointer_type, ___divdi3: ___divdi3, ___errno_location: ___errno_location, ___getTypeName: ___getTypeName, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, ___uremdi3: ___uremdi3, _bitshift64Ashr: _bitshift64Ashr, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _emscripten_replace_memory: _emscripten_replace_memory, _fflush: _fflush, _free: _free, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _llvm_bswap_i32: _llvm_bswap_i32, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _sbrk: _sbrk, dynCall_dii: dynCall_dii, dynCall_i: dynCall_i, dynCall_ii: dynCall_ii, dynCall_iii: dynCall_iii, dynCall_iiii: dynCall_iiii, dynCall_iiiii: dynCall_iiiii, dynCall_iiiiii: dynCall_iiiiii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiiiiiii: dynCall_iiiiiiiiii, dynCall_v: dynCall_v, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_viid: dynCall_viid, dynCall_viii: dynCall_viii, dynCall_viiii: dynCall_viiii, dynCall_viiiii: dynCall_viiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiiiiiii: dynCall_viiiiiiiii, establishStackSpace: establishStackSpace, getTempRet0: getTempRet0, runPostSets: runPostSets, setTempRet0: setTempRet0, setThrew: setThrew, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var real___GLOBAL__sub_I_bind_cpp = asm["__GLOBAL__sub_I_bind_cpp"]; asm["__GLOBAL__sub_I_bind_cpp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___GLOBAL__sub_I_bind_cpp.apply(null, arguments);
};

var real___GLOBAL__sub_I_bridge_cpp = asm["__GLOBAL__sub_I_bridge_cpp"]; asm["__GLOBAL__sub_I_bridge_cpp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___GLOBAL__sub_I_bridge_cpp.apply(null, arguments);
};

var real___GLOBAL__sub_I_crc_cpp = asm["__GLOBAL__sub_I_crc_cpp"]; asm["__GLOBAL__sub_I_crc_cpp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___GLOBAL__sub_I_crc_cpp.apply(null, arguments);
};

var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____cxa_can_catch.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____cxa_is_pointer_type.apply(null, arguments);
};

var real____divdi3 = asm["___divdi3"]; asm["___divdi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____divdi3.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____errno_location.apply(null, arguments);
};

var real____getTypeName = asm["___getTypeName"]; asm["___getTypeName"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____getTypeName.apply(null, arguments);
};

var real____muldi3 = asm["___muldi3"]; asm["___muldi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____muldi3.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"]; asm["___udivdi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____udivdi3.apply(null, arguments);
};

var real____uremdi3 = asm["___uremdi3"]; asm["___uremdi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____uremdi3.apply(null, arguments);
};

var real__bitshift64Ashr = asm["_bitshift64Ashr"]; asm["_bitshift64Ashr"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Ashr.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Shl.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__fflush.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__free.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Add.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Subtract.apply(null, arguments);
};

var real__llvm_bswap_i32 = asm["_llvm_bswap_i32"]; asm["_llvm_bswap_i32"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__llvm_bswap_i32.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__malloc.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__memmove.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__sbrk.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"]; asm["establishStackSpace"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_establishStackSpace.apply(null, arguments);
};

var real_getTempRet0 = asm["getTempRet0"]; asm["getTempRet0"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_getTempRet0.apply(null, arguments);
};

var real_setTempRet0 = asm["setTempRet0"]; asm["setTempRet0"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_setTempRet0.apply(null, arguments);
};

var real_setThrew = asm["setThrew"]; asm["setThrew"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_setThrew.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"]; asm["stackAlloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackAlloc.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"]; asm["stackRestore"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackRestore.apply(null, arguments);
};

var real_stackSave = asm["stackSave"]; asm["stackSave"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackSave.apply(null, arguments);
};
var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];
var __GLOBAL__sub_I_bridge_cpp = Module["__GLOBAL__sub_I_bridge_cpp"] = asm["__GLOBAL__sub_I_bridge_cpp"];
var __GLOBAL__sub_I_crc_cpp = Module["__GLOBAL__sub_I_crc_cpp"] = asm["__GLOBAL__sub_I_crc_cpp"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var ___divdi3 = Module["___divdi3"] = asm["___divdi3"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var _bitshift64Ashr = Module["_bitshift64Ashr"] = asm["_bitshift64Ashr"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = asm["_emscripten_replace_memory"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var _free = Module["_free"] = asm["_free"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _memset = Module["_memset"] = asm["_memset"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = asm["dynCall_iiiiiiiiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
;



// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;

if (!Module["intArrayFromString"]) Module["intArrayFromString"] = function() { abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["intArrayToString"]) Module["intArrayToString"] = function() { abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["ccall"]) Module["ccall"] = function() { abort("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["cwrap"]) Module["cwrap"] = function() { abort("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["setValue"]) Module["setValue"] = function() { abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getValue"]) Module["getValue"] = function() { abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["allocate"]) Module["allocate"] = function() { abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getMemory"]) Module["getMemory"] = function() { abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["Pointer_stringify"]) Module["Pointer_stringify"] = function() { abort("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["AsciiToString"]) Module["AsciiToString"] = function() { abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToAscii"]) Module["stringToAscii"] = function() { abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF8ArrayToString"]) Module["UTF8ArrayToString"] = function() { abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF8ToString"]) Module["UTF8ToString"] = function() { abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF8Array"]) Module["stringToUTF8Array"] = function() { abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF8"]) Module["stringToUTF8"] = function() { abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["lengthBytesUTF8"]) Module["lengthBytesUTF8"] = function() { abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF16ToString"]) Module["UTF16ToString"] = function() { abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF16"]) Module["stringToUTF16"] = function() { abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["lengthBytesUTF16"]) Module["lengthBytesUTF16"] = function() { abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF32ToString"]) Module["UTF32ToString"] = function() { abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF32"]) Module["stringToUTF32"] = function() { abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["lengthBytesUTF32"]) Module["lengthBytesUTF32"] = function() { abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["allocateUTF8"]) Module["allocateUTF8"] = function() { abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackTrace"]) Module["stackTrace"] = function() { abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnPreRun"]) Module["addOnPreRun"] = function() { abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnInit"]) Module["addOnInit"] = function() { abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnPreMain"]) Module["addOnPreMain"] = function() { abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnExit"]) Module["addOnExit"] = function() { abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnPostRun"]) Module["addOnPostRun"] = function() { abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["writeStringToMemory"]) Module["writeStringToMemory"] = function() { abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["writeArrayToMemory"]) Module["writeArrayToMemory"] = function() { abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["writeAsciiToMemory"]) Module["writeAsciiToMemory"] = function() { abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addRunDependency"]) Module["addRunDependency"] = function() { abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["removeRunDependency"]) Module["removeRunDependency"] = function() { abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS"]) Module["FS"] = function() { abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["FS_createFolder"]) Module["FS_createFolder"] = function() { abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createPath"]) Module["FS_createPath"] = function() { abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createDataFile"]) Module["FS_createDataFile"] = function() { abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createPreloadedFile"]) Module["FS_createPreloadedFile"] = function() { abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createLazyFile"]) Module["FS_createLazyFile"] = function() { abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createLink"]) Module["FS_createLink"] = function() { abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createDevice"]) Module["FS_createDevice"] = function() { abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_unlink"]) Module["FS_unlink"] = function() { abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["GL"]) Module["GL"] = function() { abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["staticAlloc"]) Module["staticAlloc"] = function() { abort("'staticAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["dynamicAlloc"]) Module["dynamicAlloc"] = function() { abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["warnOnce"]) Module["warnOnce"] = function() { abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["loadDynamicLibrary"]) Module["loadDynamicLibrary"] = function() { abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["loadWebAssemblyModule"]) Module["loadWebAssemblyModule"] = function() { abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getLEB"]) Module["getLEB"] = function() { abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getFunctionTables"]) Module["getFunctionTables"] = function() { abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["alignFunctionTables"]) Module["alignFunctionTables"] = function() { abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["registerFunctions"]) Module["registerFunctions"] = function() { abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addFunction"]) Module["addFunction"] = function() { abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["removeFunction"]) Module["removeFunction"] = function() { abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getFuncWrapper"]) Module["getFuncWrapper"] = function() { abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["prettyPrint"]) Module["prettyPrint"] = function() { abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["makeBigInt"]) Module["makeBigInt"] = function() { abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["dynCall"]) Module["dynCall"] = function() { abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getCompilerSetting"]) Module["getCompilerSetting"] = function() { abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackSave"]) Module["stackSave"] = function() { abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackRestore"]) Module["stackRestore"] = function() { abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackAlloc"]) Module["stackAlloc"] = function() { abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };if (!Module["ALLOC_NORMAL"]) Object.defineProperty(Module, "ALLOC_NORMAL", { get: function() { abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_STACK"]) Object.defineProperty(Module, "ALLOC_STACK", { get: function() { abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_STATIC"]) Object.defineProperty(Module, "ALLOC_STATIC", { get: function() { abort("'ALLOC_STATIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_DYNAMIC"]) Object.defineProperty(Module, "ALLOC_DYNAMIC", { get: function() { abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_NONE"]) Object.defineProperty(Module, "ALLOC_NONE", { get: function() { abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });

if (memoryInitializer) {
  if (!isDataURI(memoryInitializer)) {
    if (typeof Module['locateFile'] === 'function') {
      memoryInitializer = Module['locateFile'](memoryInitializer);
    } else if (Module['memoryInitializerPrefixURL']) {
      memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
    }
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, GLOBAL_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      for (var i = 0; i < data.length; i++) {
        assert(HEAPU8[GLOBAL_BASE + i] === 0, "area for memory initializer should not have been touched before it's loaded");
      }
      HEAPU8.set(data, GLOBAL_BASE);
      // Delete the typed array that contains the large blob of the memory initializer request response so that
      // we won't keep unnecessary memory lying around. However, keep the XHR object itself alive so that e.g.
      // its .status field can still be accessed later.
      if (Module['memoryInitializerRequest']) delete Module['memoryInitializerRequest'].response;
      removeRunDependency('memory initializer');
    }
    function doBrowserLoad() {
      Module['readAsync'](memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
    if (Module['memoryInitializerRequest']) {
      // a network request has already been created, just use that
      function useRequest() {
        var request = Module['memoryInitializerRequest'];
        var response = request.response;
        if (request.status !== 200 && request.status !== 0) {
            // If you see this warning, the issue may be that you are using locateFile or memoryInitializerPrefixURL, and defining them in JS. That
            // means that the HTML file doesn't know about them, and when it tries to create the mem init request early, does it to the wrong place.
            // Look in your browser's devtools network console to see what's going on.
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status + ', retrying ' + memoryInitializer);
            doBrowserLoad();
            return;
        }
        applyMemoryInitializer(response);
      }
      if (Module['memoryInitializerRequest'].response) {
        setTimeout(useRequest, 0); // it's already here; but, apply it asynchronously
      } else {
        Module['memoryInitializerRequest'].addEventListener('load', useRequest); // wait for it
      }
    } else {
      // fetch it from the network ourselves
      doBrowserLoad();
    }
  }
}


// Modularize mode returns a function, which can be called to
// create instances. The instances provide a then() method,
// must like a Promise, that receives a callback. The callback
// is called when the module is ready to run, with the module
// as a parameter. (Like a Promise, it also returns the module
// so you can use the output of .then(..)).
Module['then'] = function(func) {
  // We may already be ready to run code at this time. if
  // so, just queue a call to the callback.
  if (Module['calledRun']) {
    func(Module);
  } else {
    // we are not ready to call then() yet. we must call it
    // at the same time we would call onRuntimeInitialized.
    var old = Module['onRuntimeInitialized'];
    Module['onRuntimeInitialized'] = function() {
      if (old) old();
      func(Module);
    };
  }
  return Module;
};

/**
 * @constructor
 * @extends {Error}
 * @this {ExitStatus}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}





/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (runDependencies > 0) {
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = run;

function checkUnflushedContent() {
  // Compiler settings do not allow exiting the runtime, so flushing
  // the streams is not possible. but in ASSERTIONS mode we check
  // if there was something to flush, and if so tell the user they
  // should request that the runtime be exitable.
  // Normally we would not even include flush() at all, but in ASSERTIONS
  // builds we do so just for this check, and here we see if there is any
  // content to flush, that is, we check if there would have been
  // something a non-ASSERTIONS build would have not seen.
  // How we flush the streams depends on whether we are in NO_FILESYSTEM
  // mode (which has its own special function for this; otherwise, all
  // the code is inside libc)
  var print = Module['print'];
  var printErr = Module['printErr'];
  var has = false;
  Module['print'] = Module['printErr'] = function(x) {
    has = true;
  }
  try { // it doesn't matter if it fails
    var flush = Module['_fflush'];
    if (flush) flush(0);
    // also flush in the JS FS layer
    var hasFS = true;
    if (hasFS) {
      ['stdout', 'stderr'].forEach(function(name) {
        var info = FS.analyzePath('/dev/' + name);
        if (!info) return;
        var stream = info.object;
        var rdev = stream.rdev;
        var tty = TTY.ttys[rdev];
        if (tty && tty.output && tty.output.length) {
          has = true;
        }
      });
    }
  } catch(e) {}
  Module['print'] = print;
  Module['printErr'] = printErr;
  if (has) {
    warnOnce('stdio streams had content in them that was not flushed. you should set NO_EXIT_RUNTIME to 0 (see the FAQ), or make sure to emit a newline when you printf etc.');
  }
}

function exit(status, implicit) {
  checkUnflushedContent();

  // if this is just main exit-ing implicitly, and the status is 0, then we
  // don't need to do anything here and can just leave. if the status is
  // non-zero, though, then we need to report it.
  // (we may have warned about this earlier, if a situation justifies doing so)
  if (implicit && Module['noExitRuntime'] && status === 0) {
    return;
  }

  if (Module['noExitRuntime']) {
    // if exit() was called, we may warn the user if the runtime isn't actually being shut down
    if (!implicit) {
      Module.printErr('exit(' + status + ') called, but NO_EXIT_RUNTIME is set, so halting execution but not exiting the runtime or preventing further async execution (build with NO_EXIT_RUNTIME=0, if you want a true shutdown)');
    }
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  }
  Module['quit'](status, new ExitStatus(status));
}
Module['exit'] = exit;

var abortDecorators = [];

function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';
  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}


Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}



//# sourceMappingURL=unrar.js.map

  return Module;
};
if (typeof exports === 'object' && typeof module === 'object')
  module.exports = Module;
else if (typeof define === 'function' && define['amd'])
  define([], function() { return Module; });
else if (typeof exports === 'object')
  exports["Module"] = Module;
